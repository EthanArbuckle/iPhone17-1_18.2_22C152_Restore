void *sub_100104FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v7;
  void *v8;

  sub_10001C2A8((void *)(v4 + 88), *(void *)(v4 + 112));
  v7 = sub_1000A01A0();
  sub_10003C360(a3);
  v8 = sub_1000FFE70(v7, a3, a4);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100105060(uint64_t a1)
{
  sub_100110A88(a1 + 80, (uint64_t)v6, &qword_10030AA30);
  sub_100110A88((uint64_t)v6, (uint64_t)v7, &qword_10030AA30);
  if (!v7[1] || !*(void *)(a1 + 392)) {
    return 0;
  }
  sub_10001C2A8((void *)(v1 + 88), *(void *)(v1 + 112));
  swift_bridgeObjectRetain();
  sub_1000A021C();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10010513C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CheddarTransaction();
  __chkstk_darwin(v8 - 8, v9);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1000D428C();
  uint64_t v14 = v13;
  sub_10001C2A8(a2 + 6, a2[9]);
  uint64_t v20 = sub_10008AEB4(2uLL, v12, v14, v15, v16, v17, v18, v19);
  LOBYTE(v12) = v21;
  swift_bridgeObjectRelease();
  id v22 = a1;
  swift_bridgeObjectRetain();
  sub_100155BB8(v22, a3, a4, v20, v12 & 1, v11);
  sub_10001C2A8(a2 + 11, a2[14]);
  sub_1002186D8();
  return sub_10011097C((uint64_t)v11, (void (*)(void))type metadata accessor for CheddarTransaction);
}

uint64_t sub_100105284(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112));
  if (!sub_10009FC6C(a3))
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1000C0494();
    swift_allocError();
    *uint64_t v8 = 7;
    swift_willThrow();
    return v4;
  }
  uint64_t v4 = sub_10024FA60();
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_5;
  }
  uint64_t v10 = sub_100026F74(a1, a2);
  if (v10)
  {
    uint64_t v4 = v10;
    if ((*(unsigned char *)(v10 + 112) & 1) == 0)
    {
      sub_1000C0494();
      swift_allocError();
      unsigned char *v25 = 7;
      swift_willThrow();
      swift_release();
      return v4;
    }
    sub_100027788(v3 + 88, (uint64_t)v27);
    v11 = sub_10001C2A8(v27, v27[3]);
    sub_100019524(&qword_1003090E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100255FB0;
    uint64_t v13 = *(void *)(a3 + 200);
    *(void *)(inited + 32) = *(void *)(a3 + 192);
    *(void *)(inited + 40) = v13;
    uint64_t v14 = *v11;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v15 = (unint64_t)sub_1000FFCF4(inited, v14);
    swift_setDeallocating();
    sub_10020BB20();
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      id v16 = (id)sub_10024F6F0();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_11:
        sub_10014ED88(0, (v15 & 0xC000000000000001) == 0, v15);
        if ((v15 & 0xC000000000000001) != 0) {
          id v17 = (id)sub_10024F380();
        }
        else {
          id v17 = *(id *)(v15 + 32);
        }
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        sub_10001C2EC((uint64_t)v27);
        id v16 = v18;
        if (sub_1000D84BC())
        {
          sub_1000D563C();
          uint64_t v20 = v19;

          swift_bridgeObjectRelease();
          if (!v20)
          {

            return v4;
          }
        }
        else
        {
        }
LABEL_26:
        sub_1000C0494();
        swift_allocError();
        unsigned char *v26 = 7;
        swift_willThrow();
        swift_release();

        return v4;
      }
    }
    else
    {
      id v16 = *(id *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)v27);
    goto LABEL_26;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10024E1F0();
  sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  id v22 = sub_10024E1D0();
  os_log_type_t v23 = sub_10024EE10();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    v27[6] = sub_1000F3F3C(a1, a2, v27);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Requested offer for invalid winback offer identifier \"%s\". This may be a client error in the StoreKit framework.", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_100105714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112));
  if (!sub_10009FC6C(a3))
  {
    swift_bridgeObjectRelease();
LABEL_5:
    char v8 = 4;
LABEL_6:
    sub_1000C0494();
    swift_allocError();
    *uint64_t v9 = v8;
    return swift_willThrow();
  }
  char v7 = sub_10024FA60();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_5;
  }
  uint64_t result = sub_100026CB8(a1, a2);
  if (!result)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10024E1F0();
    sub_10001B0E8(v11, (uint64_t)qword_10034C0E0);
    uint64_t v12 = sub_10024E1D0();
    os_log_type_t v13 = sub_10024EE10();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Requested offer for invalid ad-hoc offer identifier. This may be a client error in the StoreKit framework.", v14, 2u);
      swift_slowDealloc();
    }

    char v8 = 3;
    goto LABEL_6;
  }
  return result;
}

NSObject *sub_1001058F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100026F0C(a1, a2);
  if (v7)
  {
    char v8 = v7;
    sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112));
    char v9 = sub_10009FC6C(a3);
    uint64_t isa = (uint64_t)v8[12].isa;
    swift_bridgeObjectRetain();
    char v11 = sub_1000D3F74(v9, isa);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_10024E1F0();
      sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      os_log_type_t v13 = sub_10024E1D0();
      os_log_type_t v14 = sub_10024EE10();
      if (os_log_type_enabled(v13, v14))
      {
        os_log_type_t v29 = v14;
        uint64_t v15 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315650;
        swift_bridgeObjectRetain();
        sub_1000F3F3C(a1, a2, &v30);
        sub_10024F100();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        sub_1000C04E0();
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_10024EC30();
        unint64_t v18 = v17;
        swift_bridgeObjectRelease();
        sub_1000F3F3C(v16, v18, &v30);
        sub_10024F100();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        if (v9)
        {
          if (v9 == 1)
          {
            unint64_t v19 = 0xE800000000000000;
            uint64_t v20 = 0x676E697473697865;
          }
          else
          {
            unint64_t v19 = 0xE700000000000000;
            uint64_t v20 = 0x64657269707865;
          }
        }
        else
        {
          unint64_t v19 = 0xE300000000000000;
          uint64_t v20 = 7824750;
        }
        sub_1000F3F3C(v20, v19, &v30);
        sub_10024F100();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v29, " Currently ineligible for offer code  %s: %s does not  contain %s", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1000C0494();
      swift_allocError();
      unsigned char *v27 = 5;
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10024E1F0();
    sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    char v8 = sub_10024E1D0();
    os_log_type_t v22 = sub_10024EE10();
    if (os_log_type_enabled(v8, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a1, a2, &v30);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v24 = *(void *)(a3 + 80);
      unint64_t v25 = *(void *)(a3 + 88);
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v24, v25, &v30);
      sub_10024F100();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v22, "Internal ID %s did not correspond to a configured offer for codes for %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1000C0494();
    swift_allocError();
    unsigned char *v26 = 2;
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_100105E78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 8))();
  v6._countAndFlagsBits = 3092282;
  v6._object = (void *)0xE300000000000000;
  sub_10024E800(v6);
  v7._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_10024E800(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 58;
  v8._object = (void *)0xE100000000000000;
  sub_10024E800(v8);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v9);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100105F7C()
{
  type metadata accessor for OctaneServer();
  uint64_t result = sub_100105FB8();
  qword_10034C070 = result;
  return result;
}

uint64_t sub_100105FB8()
{
  sub_1000ACEB8();
  type metadata accessor for OctaneConfigurationManager();
  swift_allocObject();
  uint64_t v0 = sub_10008C5EC();
  uint64_t v1 = qword_100308E20;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  sub_10010FCE8(v0, (uint64_t)(id)qword_10034C110);
  uint64_t v2 = sub_10008436C();
  return sub_10010FEBC(v2, v3, v0, v4);
}

uint64_t sub_100106068()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100019524(&qword_100310AF0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  v337 = (char *)v322 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v335 = (uint64_t)v322 - v8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v334 = (uint64_t)v322 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v333 = (uint64_t)v322 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v332 = (uint64_t)v322 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  v331 = (char *)v322 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v330 = (uint64_t)v322 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v329 = (uint64_t)v322 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v328 = (uint64_t)v322 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v327 = (uint64_t)v322 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v326 = (uint64_t)v322 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v338 = (uint64_t)v322 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  v325 = (char *)v322 - v41;
  __chkstk_darwin(v40, v42);
  v324 = (char *)v322 - v43;
  uint64_t v44 = v0 + 64;
  sub_100027788(v0 + 64, (uint64_t)v346);
  uint64_t v340 = v0 + 104;
  sub_100027788(v0 + 104, (uint64_t)&v343);
  uint64_t v339 = sub_100019524(&qword_100310AF8);
  v45 = (void *)swift_allocObject();
  uint64_t v46 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v46, v46);
  v48 = (void *)((char *)v322 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v49 + 16))(v48);
  uint64_t v50 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v50, v50);
  v52 = (void *)((char *)v322 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v53 + 16))(v52);
  uint64_t v54 = *v48;
  uint64_t v55 = *v52;
  uint64_t v56 = swift_retain();
  v57 = sub_10010F7A0(v56, v54, v55, v45);
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  swift_weakAssign();
  sub_100019524(&qword_10030A3D8);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_100260BE0;
  uint64_t v59 = type metadata accessor for AppIconRoute();
  swift_allocObject();
  *(void *)(v58 + 32) = sub_10006AD48();
  v60 = (void *)(v58 + 32);
  *(void *)(v58 + 56) = v59;
  *(void *)(v58 + 64) = &off_1002DE670;
  sub_100027788(v44, (uint64_t)v346);
  uint64_t v61 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v61, v61);
  v63 = (void *)((char *)v322 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v64 + 16))(v63);
  uint64_t v65 = sub_10010EBC8(*v63, (void (*)(void))type metadata accessor for AssetRoute, (uint64_t (*)(void, uint64_t))sub_10010E230);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 96) = type metadata accessor for AssetRoute();
  *(void *)(v58 + 104) = &off_1002E0A48;
  *(void *)(v58 + 72) = v65;
  uint64_t v66 = *(void *)(v1 + 24);
  uint64_t v67 = *(void *)(v1 + 32);
  sub_100027788(v44, (uint64_t)v346);
  uint64_t v68 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v68, v68);
  v70 = (void *)((char *)v322 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v71 + 16))(v70);
  uint64_t v72 = *v70;
  swift_retain();
  swift_bridgeObjectRetain();
  v73 = sub_10010FB04(v1, v66, v67, v72);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 136) = type metadata accessor for BagRoute();
  *(void *)(v58 + 144) = &off_1002E0A48;
  *(void *)(v58 + 112) = v73;
  uint64_t v74 = v44;
  sub_100027788(v44, (uint64_t)v346);
  uint64_t v75 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v75, v75);
  v77 = (void *)((char *)v322 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v78 + 16))(v77);
  uint64_t v79 = sub_10010EBC8(*v77, (void (*)(void))type metadata accessor for FetchSoftwareAddOnsRoute, (uint64_t (*)(void, uint64_t))sub_10010E34C);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 176) = type metadata accessor for FetchSoftwareAddOnsRoute();
  *(void *)(v58 + 184) = &off_1002E0A48;
  *(void *)(v58 + 152) = v79;
  *(void *)(v58 + 216) = v339;
  *(void *)(v58 + 224) = &off_1002E0A48;
  *(void *)(v58 + 192) = v57;
  sub_100027788(v44, (uint64_t)v346);
  uint64_t v80 = v340;
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v81 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v81, v81);
  (*(void (**)(char *))(v83 + 16))((char *)v322 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v84, v84);
  (*(void (**)(char *))(v86 + 16))((char *)v322 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0));
  v336 = v57;
  swift_retain();
  sub_10010EE90();
  uint64_t v88 = v87;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 256) = type metadata accessor for InAppTransactionDoneRoute();
  *(void *)(v58 + 264) = &off_1002E0A48;
  *(void *)(v58 + 232) = v88;
  sub_100027788(v74, (uint64_t)v346);
  sub_100027788(v80, (uint64_t)&v343);
  uint64_t v89 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v89, v89);
  (*(void (**)(char *))(v91 + 16))((char *)v322 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v92, v92);
  (*(void (**)(char *))(v94 + 16))((char *)v322 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v96 = v95;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 296) = type metadata accessor for InAppCheckDownloadQueueRoute();
  *(void *)(v58 + 304) = &off_1002E0A48;
  *(void *)(v58 + 272) = v96;
  sub_100027788(v74, (uint64_t)v346);
  sub_100027788(v80, (uint64_t)&v343);
  uint64_t v97 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v97, v97);
  (*(void (**)(char *))(v99 + 16))((char *)v322 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v100, v100);
  (*(void (**)(char *))(v102 + 16))((char *)v322 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v104 = v103;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 336) = type metadata accessor for InAppPendingTransactionsRoute();
  *(void *)(v58 + 344) = &off_1002E0A48;
  *(void *)(v58 + 312) = v104;
  sub_100027788(v74, (uint64_t)v346);
  sub_100027788(v80, (uint64_t)&v343);
  uint64_t v105 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v105, v105);
  (*(void (**)(char *))(v107 + 16))((char *)v322 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v108 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v108, v108);
  (*(void (**)(char *))(v110 + 16))((char *)v322 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v112 = v111;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 376) = type metadata accessor for InAppRegrantPurchaseHistoryRoute();
  *(void *)(v58 + 384) = &off_1002E0A48;
  *(void *)(v58 + 352) = v112;
  sub_100027788(v74, (uint64_t)v346);
  sub_100027788(v80, (uint64_t)&v343);
  uint64_t v113 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v113, v113);
  (*(void (**)(char *))(v115 + 16))((char *)v322 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v116 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v116, v116);
  (*(void (**)(char *))(v118 + 16))((char *)v322 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v120 = v119;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 416) = type metadata accessor for CreateAppReceiptRoute();
  *(void *)(v58 + 424) = &off_1002E0A48;
  *(void *)(v58 + 392) = v120;
  uint64_t v121 = v74;
  sub_100027788(v74, (uint64_t)v346);
  uint64_t Route = type metadata accessor for CheddarFetchRoute();
  v123 = (void *)swift_allocObject();
  uint64_t v124 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v124, v124);
  v126 = (void *)((char *)v322 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v127 + 16))(v126);
  uint64_t v128 = *v126;
  swift_retain();
  v129 = sub_10010F9D0(v128, v1, v123);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 456) = Route;
  *(void *)(v58 + 464) = &off_1002E0A48;
  *(void *)(v58 + 432) = v129;
  sub_100027788(v121, (uint64_t)v346);
  uint64_t v130 = v340;
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v131 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v131, v131);
  (*(void (**)(char *))(v133 + 16))((char *)v322 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v134, v134);
  (*(void (**)(char *))(v136 + 16))((char *)v322 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v323 = 0xD000000000000018;
  sub_10010EE90();
  uint64_t v138 = v137;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 496) = type metadata accessor for TransactionHistoryRoute();
  *(void *)(v58 + 504) = &off_1002E0A48;
  *(void *)(v58 + 472) = v138;
  sub_100027788(v121, (uint64_t)v346);
  sub_100027788(v130, (uint64_t)&v343);
  uint64_t v139 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v139, v139);
  v141 = (void *)((char *)v322 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v142 + 16))(v141);
  uint64_t v143 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v143, v143);
  v145 = (void *)((char *)v322 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v146 + 16))(v145);
  v147 = sub_10010ECBC(*v141, *v145);
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 536) = type metadata accessor for SingleStatusRoute();
  *(void *)(v58 + 544) = &off_1002E0A48;
  *(void *)(v58 + 512) = v147;
  sub_100027788(v121, (uint64_t)v346);
  sub_100027788(v130, (uint64_t)&v343);
  uint64_t v148 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v148, v148);
  (*(void (**)(char *))(v150 + 16))((char *)v322 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v151, v151);
  (*(void (**)(char *))(v153 + 16))((char *)v322 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v155 = v154;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 576) = type metadata accessor for AllStatusRoute();
  *(void *)(v58 + 584) = &off_1002E0A48;
  *(void *)(v58 + 552) = v155;
  sub_100027788(v121, (uint64_t)v346);
  uint64_t v156 = type metadata accessor for AppInformationRoute();
  v157 = (void *)swift_allocObject();
  uint64_t v158 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v158, v158);
  v160 = (void *)((char *)v322 - ((v159 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v161 + 16))(v160);
  uint64_t v162 = *v160;
  uint64_t v163 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v344 = v163;
  v345 = &off_1002E03A8;
  *(void *)&long long v343 = v162;
  v157[12] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v164 = sub_100051B64((uint64_t)&v343, v163);
  __chkstk_darwin(v164, v164);
  v166 = (void *)((char *)v322 - ((v165 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v167 + 16))(v166);
  uint64_t v168 = *v166;
  v157[9] = v163;
  v157[10] = &off_1002E03A8;
  v157[5] = 0;
  v157[6] = v168;
  v157[2] = 0xD00000000000001CLL;
  v157[3] = 0x800000010027E340;
  v157[4] = 0;
  swift_retain();
  sub_10001C2EC((uint64_t)&v343);
  v157[12] = &off_1002E4D80;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 616) = v156;
  *(void *)(v58 + 624) = &off_1002E0A48;
  *(void *)(v58 + 592) = v157;
  uint64_t v339 = v121;
  sub_100027788(v121, (uint64_t)v346);
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v169 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v169, v169);
  (*(void (**)(char *))(v171 + 16))((char *)v322 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v172, v172);
  (*(void (**)(char *))(v174 + 16))((char *)v322 - ((v173 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v176 = v175;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v58 + 656) = type metadata accessor for AskToBuyPermissionRoute();
  *(void *)(v58 + 664) = &off_1002E0A48;
  *(void *)(v58 + 632) = v176;
  for (uint64_t i = *(void *)(v58 + 16); i; --i)
  {
    sub_1000F5DA0(v60);
    v60 += 5;
  }
  swift_bridgeObjectRelease();
  v322[1] = sub_100019524(&qword_100310B00);
  uint64_t v178 = swift_allocObject();
  *(_OWORD *)(v178 + 16) = xmmword_100257710;
  uint64_t v179 = v339;
  sub_100027788(v339, (uint64_t)v346);
  uint64_t v180 = v340;
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v181 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v181, v181);
  (*(void (**)(char *))(v183 + 16))((char *)v322 - ((v182 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v184 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v184, v184);
  (*(void (**)(char *))(v186 + 16))((char *)v322 - ((v185 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v188 = v187;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v178 + 56) = type metadata accessor for RefundRequestRoute();
  *(void *)(v178 + 64) = &off_1002E0A48;
  *(void *)(v178 + 32) = v188;
  sub_100027788(v179, (uint64_t)v346);
  sub_100027788(v180, (uint64_t)&v343);
  uint64_t v189 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v189, v189);
  (*(void (**)(char *))(v191 + 16))((char *)v322 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v192 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v192, v192);
  (*(void (**)(char *))(v194 + 16))((char *)v322 - ((v193 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010F218();
  uint64_t v196 = v195;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  uint64_t v197 = 0;
  if (v196)
  {
    uint64_t v197 = type metadata accessor for RefundRequestUIRoute();
    v198 = &off_1002E0A48;
  }
  else
  {
    v198 = 0;
    *(void *)(v178 + 80) = 0;
    *(void *)(v178 + 88) = 0;
  }
  uint64_t v199 = v338;
  uint64_t v200 = (uint64_t)v325;
  uint64_t v201 = (uint64_t)v324;
  *(void *)(v178 + 72) = v196;
  *(void *)(v178 + 96) = v197;
  *(void *)(v178 + 104) = v198;
  sub_100173574(0xD000000000000019, 0x800000010027E360, 0x722D646E75666572, 0xEE00747365757165, 29546, 0xE200000000000000, v201);
  uint64_t v202 = type metadata accessor for StaticResourceRoute();
  if (sub_10001FA0C(v201, 1, v202) == 1)
  {
    sub_1000AC6D0(v201, &qword_100310AF0);
    *(_OWORD *)(v178 + 112) = 0u;
    *(_OWORD *)(v178 + 128) = 0u;
    *(void *)(v178 + 144) = 0;
  }
  else
  {
    *(void *)(v178 + 136) = v202;
    *(void *)(v178 + 144) = &off_1002EB090;
    v203 = sub_1000709B8((uint64_t *)(v178 + 112));
    sub_100110A34(v201, (uint64_t)v203, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  sub_100173574(0xD000000000000019, 0x800000010027E380, 0x6C61626F6C67, 0xE600000000000000, 7566179, 0xE300000000000000, v200);
  if (sub_10001FA0C(v200, 1, v202) == 1)
  {
    sub_1000AC6D0(v200, &qword_100310AF0);
    *(_OWORD *)(v178 + 152) = 0u;
    *(_OWORD *)(v178 + 168) = 0u;
    *(void *)(v178 + 184) = 0;
  }
  else
  {
    *(void *)(v178 + 176) = v202;
    *(void *)(v178 + 184) = &off_1002EB090;
    v204 = sub_1000709B8((uint64_t *)(v178 + 152));
    sub_100110A34(v200, (uint64_t)v204, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  sub_100173574(0xD000000000000019, 0x800000010027E3A0, 0x722D646E75666572, 0xEE00747365757165, 7566179, 0xE300000000000000, v199);
  if (sub_10001FA0C(v199, 1, v202) == 1)
  {
    sub_1000AC6D0(v199, &qword_100310AF0);
    *(_OWORD *)(v178 + 192) = 0u;
    *(_OWORD *)(v178 + 208) = 0u;
    *(void *)(v178 + 224) = 0;
  }
  else
  {
    *(void *)(v178 + 216) = v202;
    *(void *)(v178 + 224) = &off_1002EB090;
    v205 = sub_1000709B8((uint64_t *)(v178 + 192));
    sub_100110A34(v199, (uint64_t)v205, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  *(void *)(v178 + 256) = &type metadata for SystemImageRoute;
  *(void *)(v178 + 264) = &off_1002ED838;
  uint64_t v206 = v326;
  sub_100173574(0xD000000000000029, 0x800000010027E3C0, v323, 0x800000010027E3F0, 6778480, 0xE300000000000000, v326);
  if (sub_10001FA0C(v206, 1, v202) == 1)
  {
    sub_1000AC6D0(v206, &qword_100310AF0);
    *(_OWORD *)(v178 + 272) = 0u;
    *(_OWORD *)(v178 + 288) = 0u;
    *(void *)(v178 + 304) = 0;
  }
  else
  {
    *(void *)(v178 + 296) = v202;
    *(void *)(v178 + 304) = &off_1002EB090;
    v207 = sub_1000709B8((uint64_t *)(v178 + 272));
    sub_100110A34(v206, (uint64_t)v207, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  sub_100027788(v339, (uint64_t)v346);
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v208 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v208, v208);
  (*(void (**)(char *))(v210 + 16))((char *)v322 - ((v209 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v211 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v211, v211);
  (*(void (**)(char *))(v213 + 16))((char *)v322 - ((v212 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010F218();
  uint64_t v215 = v214;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v178 + 336) = type metadata accessor for OfferCodeRedeemUIRoute();
  *(void *)(v178 + 344) = &off_1002E0A48;
  *(void *)(v178 + 312) = v215;
  uint64_t v216 = v327;
  sub_100173574(0xD00000000000001ELL, 0x800000010027E410, 0x6465722D65646F63, 0xEB000000006D6565, 29546, 0xE200000000000000, v327);
  if (sub_10001FA0C(v216, 1, v202) == 1)
  {
    sub_1000AC6D0(v216, &qword_100310AF0);
    *(_OWORD *)(v178 + 352) = 0u;
    *(_OWORD *)(v178 + 368) = 0u;
    *(void *)(v178 + 384) = 0;
  }
  else
  {
    *(void *)(v178 + 376) = v202;
    *(void *)(v178 + 384) = &off_1002EB090;
    v218 = sub_1000709B8((uint64_t *)(v178 + 352));
    sub_100110A34(v216, (uint64_t)v218, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  uint64_t v217 = v328;
  sub_100173574(0xD00000000000001ELL, 0x800000010027E430, 0x6465722D65646F63, 0xEB000000006D6565, 7566179, 0xE300000000000000, v328);
  int v219 = sub_10001FA0C(v217, 1, v202);
  uint64_t v326 = 0xD00000000000001ELL;
  if (v219 == 1)
  {
    sub_1000AC6D0(v217, &qword_100310AF0);
    *(_OWORD *)(v178 + 392) = 0u;
    *(_OWORD *)(v178 + 408) = 0u;
    *(void *)(v178 + 424) = 0;
  }
  else
  {
    *(void *)(v178 + 416) = v202;
    *(void *)(v178 + 424) = &off_1002EB090;
    v220 = sub_1000709B8((uint64_t *)(v178 + 392));
    sub_100110A34(v217, (uint64_t)v220, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  v221 = &_swiftEmptyArrayStorage;
  for (uint64_t j = 32; j != 432; j += 40)
  {
    sub_1001107E0(v178 + j, (uint64_t)v346, &qword_1003195B0);
    sub_100110A88((uint64_t)v346, (uint64_t)&v341, &qword_1003195B0);
    if (v342)
    {
      sub_10002F754(&v341, (uint64_t)&v343);
      sub_10002F754(&v343, (uint64_t)&v341);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100034CA0();
        v221 = v224;
      }
      unint64_t v223 = v221[2];
      if (v223 >= v221[3] >> 1)
      {
        sub_100034CA0();
        v221 = v225;
      }
      v221[2] = v223 + 1;
      sub_10002F754(&v341, (uint64_t)&v221[5 * v223 + 4]);
    }
    else
    {
      sub_1000AC6D0((uint64_t)&v341, &qword_1003195B0);
    }
  }
  swift_setDeallocating();
  sub_10020BB14();
  uint64_t v226 = v221[2];
  if (v226)
  {
    v227 = v221 + 4;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000F5DA0(v227);
      v227 += 5;
      --v226;
    }
    while (v226);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v228 = swift_allocObject();
  *(_OWORD *)(v228 + 16) = xmmword_100260BF0;
  sub_100027788(v339, (uint64_t)v346);
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v229 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v229, v229);
  (*(void (**)(char *))(v231 + 16))((char *)v322 - ((v230 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v232 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v232, v232);
  (*(void (**)(char *))(v234 + 16))((char *)v322 - ((v233 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010F218();
  uint64_t v236 = v235;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  uint64_t v237 = 0;
  if (v236)
  {
    uint64_t v237 = type metadata accessor for SubscriptionsListUIRoute();
    v238 = &off_1002E0A48;
  }
  else
  {
    v238 = 0;
    *(void *)(v228 + 40) = 0;
    *(void *)(v228 + 48) = 0;
  }
  *(void *)(v228 + 32) = v236;
  *(void *)(v228 + 56) = v237;
  *(void *)(v228 + 64) = v238;
  sub_100027788(v339, (uint64_t)v346);
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v239 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v239, v239);
  (*(void (**)(char *))(v241 + 16))((char *)v322 - ((v240 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v242 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v242, v242);
  (*(void (**)(char *))(v244 + 16))((char *)v322 - ((v243 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010F218();
  uint64_t v246 = v245;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  uint64_t v338 = v202;
  uint64_t v247 = 0;
  if (v246)
  {
    uint64_t v247 = type metadata accessor for EditSubscriptionUIRoute();
    v248 = &off_1002E0A48;
  }
  else
  {
    v248 = 0;
    *(void *)(v228 + 80) = 0;
    *(void *)(v228 + 88) = 0;
  }
  *(void *)(v228 + 72) = v246;
  *(void *)(v228 + 96) = v247;
  *(void *)(v228 + 104) = v248;
  uint64_t v249 = v339;
  sub_100027788(v339, (uint64_t)v346);
  uint64_t v250 = v340;
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v251 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v251, v251);
  (*(void (**)(char *))(v253 + 16))((char *)v322 - ((v252 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v254 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v254, v254);
  (*(void (**)(char *))(v256 + 16))((char *)v322 - ((v255 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010EE90();
  uint64_t v258 = v257;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v228 + 136) = type metadata accessor for EditSubscriptionHelperRoute();
  *(void *)(v228 + 144) = &off_1002E0A48;
  *(void *)(v228 + 112) = v258;
  sub_100027788(v249, (uint64_t)v346);
  sub_100027788(v250, (uint64_t)&v343);
  uint64_t v259 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v259, v259);
  v261 = (void *)((char *)v322 - ((v260 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v262 + 16))(v261);
  uint64_t v263 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v263, v263);
  v265 = (void *)((char *)v322 - ((v264 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v266 + 16))(v265);
  uint64_t v267 = sub_10010F014(*v261, *v265);
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v228 + 176) = type metadata accessor for DisableAutoRenewRoute();
  *(void *)(v228 + 184) = &off_1002E0A48;
  *(void *)(v228 + 152) = v267;
  uint64_t v268 = v329;
  sub_100173574(0x697263736275732FLL, 0xEE00736E6F697470, 0x7069726373627573, 0xED0000736E6F6974, 1819112552, 0xE400000000000000, v329);
  uint64_t v269 = v338;
  if (sub_10001FA0C(v268, 1, v338) == 1)
  {
    sub_1000AC6D0(v268, &qword_100310AF0);
    *(_OWORD *)(v228 + 192) = 0u;
    *(_OWORD *)(v228 + 208) = 0u;
    *(void *)(v228 + 224) = 0;
  }
  else
  {
    *(void *)(v228 + 216) = v269;
    *(void *)(v228 + 224) = &off_1002EB090;
    v272 = sub_1000709B8((uint64_t *)(v228 + 192));
    sub_100110A34(v268, (uint64_t)v272, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  uint64_t v270 = (uint64_t)v331;
  uint64_t v271 = v330;
  sub_100173574(0xD000000000000020, 0x800000010027E450, 0x7069726373627573, 0xED0000736E6F6974, 29546, 0xE200000000000000, v330);
  if (sub_10001FA0C(v271, 1, v269) == 1)
  {
    sub_1000AC6D0(v271, &qword_100310AF0);
    *(_OWORD *)(v228 + 232) = 0u;
    *(_OWORD *)(v228 + 248) = 0u;
    *(void *)(v228 + 264) = 0;
  }
  else
  {
    *(void *)(v228 + 256) = v269;
    *(void *)(v228 + 264) = &off_1002EB090;
    v273 = sub_1000709B8((uint64_t *)(v228 + 232));
    sub_100110A34(v271, (uint64_t)v273, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  sub_100173574(0xD000000000000020, 0x800000010027E480, 0x7069726373627573, 0xED0000736E6F6974, 7566179, 0xE300000000000000, v270);
  if (sub_10001FA0C(v270, 1, v269) == 1)
  {
    sub_1000AC6D0(v270, &qword_100310AF0);
    *(_OWORD *)(v228 + 272) = 0u;
    *(_OWORD *)(v228 + 288) = 0u;
    *(void *)(v228 + 304) = 0;
  }
  else
  {
    *(void *)(v228 + 296) = v269;
    *(void *)(v228 + 304) = &off_1002EB090;
    v274 = sub_1000709B8((uint64_t *)(v228 + 272));
    sub_100110A34(v270, (uint64_t)v274, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  uint64_t v275 = v339;
  sub_100027788(v339, (uint64_t)v346);
  uint64_t v276 = v340;
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v277 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v277, v277);
  (*(void (**)(char *))(v279 + 16))((char *)v322 - ((v278 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v280 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v280, v280);
  (*(void (**)(char *))(v282 + 16))((char *)v322 - ((v281 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010F218();
  uint64_t v284 = v283;
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v228 + 336) = type metadata accessor for PriceIncreaseUIRoute();
  *(void *)(v228 + 344) = &off_1002E0A48;
  *(void *)(v228 + 312) = v284;
  sub_100027788(v275, (uint64_t)v346);
  sub_100027788(v276, (uint64_t)&v343);
  uint64_t v285 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v285, v285);
  v287 = (void *)((char *)v322 - ((v286 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v288 + 16))(v287);
  uint64_t v289 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v289, v289);
  v291 = (void *)((char *)v322 - ((v290 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v292 + 16))(v291);
  uint64_t v293 = sub_10010F388(*v287, *v291);
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v228 + 376) = type metadata accessor for PriceIncreaseHelperRoute();
  *(void *)(v228 + 384) = &off_1002E0A48;
  *(void *)(v228 + 352) = v293;
  uint64_t v294 = v332;
  sub_100173574(0xD000000000000021, 0x800000010027E4B0, 0x6E692D6563697270, 0xEE00657361657263, 29546, 0xE200000000000000, v332);
  uint64_t v295 = v338;
  if (sub_10001FA0C(v294, 1, v338) == 1)
  {
    sub_1000AC6D0(v294, &qword_100310AF0);
    *(_OWORD *)(v228 + 392) = 0u;
    *(_OWORD *)(v228 + 408) = 0u;
    *(void *)(v228 + 424) = 0;
  }
  else
  {
    *(void *)(v228 + 416) = v295;
    *(void *)(v228 + 424) = &off_1002EB090;
    v297 = sub_1000709B8((uint64_t *)(v228 + 392));
    sub_100110A34(v294, (uint64_t)v297, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  uint64_t v296 = v333;
  sub_100173574(0xD000000000000021, 0x800000010027E4E0, 0x6E692D6563697270, 0xEE00657361657263, 7566179, 0xE300000000000000, v333);
  if (sub_10001FA0C(v296, 1, v295) == 1)
  {
    sub_1000AC6D0(v296, &qword_100310AF0);
    *(_OWORD *)(v228 + 432) = 0u;
    *(_OWORD *)(v228 + 448) = 0u;
    *(void *)(v228 + 464) = 0;
  }
  else
  {
    *(void *)(v228 + 456) = v295;
    *(void *)(v228 + 464) = &off_1002EB090;
    v298 = sub_1000709B8((uint64_t *)(v228 + 432));
    sub_100110A34(v296, (uint64_t)v298, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  sub_100027788(v339, (uint64_t)v346);
  sub_100027788(v340, (uint64_t)&v343);
  uint64_t v299 = sub_100051B64((uint64_t)v346, v347);
  __chkstk_darwin(v299, v299);
  v301 = (void *)((char *)v322 - ((v300 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v302 + 16))(v301);
  uint64_t v303 = sub_100051B64((uint64_t)&v343, v344);
  __chkstk_darwin(v303, v303);
  v305 = (void *)((char *)v322 - ((v304 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v306 + 16))(v305);
  uint64_t v307 = sub_10010F594(*v301, *v305);
  sub_10001C2EC((uint64_t)&v343);
  sub_10001C2EC((uint64_t)v346);
  *(void *)(v228 + 496) = type metadata accessor for BillingErrorHelperRoute();
  *(void *)(v228 + 504) = &off_1002E0A48;
  *(void *)(v228 + 472) = v307;
  uint64_t v308 = v334;
  sub_100173574(0x676E696C6C69622FLL, 0xED0000726F727245, 0x2D676E696C6C6962, 0xED0000726F727265, 1819112552, 0xE400000000000000, v334);
  if (sub_10001FA0C(v308, 1, v295) == 1)
  {
    sub_1000AC6D0(v308, &qword_100310AF0);
    *(_OWORD *)(v228 + 512) = 0u;
    *(_OWORD *)(v228 + 528) = 0u;
    *(void *)(v228 + 544) = 0;
  }
  else
  {
    *(void *)(v228 + 536) = v295;
    *(void *)(v228 + 544) = &off_1002EB090;
    v311 = sub_1000709B8((uint64_t *)(v228 + 512));
    sub_100110A34(v308, (uint64_t)v311, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  uint64_t v309 = (uint64_t)v337;
  uint64_t v310 = v335;
  sub_100173574(0xD000000000000020, 0x800000010027E510, 0x2D676E696C6C6962, 0xED0000726F727265, 29546, 0xE200000000000000, v335);
  if (sub_10001FA0C(v310, 1, v295) == 1)
  {
    sub_1000AC6D0(v310, &qword_100310AF0);
    *(_OWORD *)(v228 + 552) = 0u;
    *(_OWORD *)(v228 + 568) = 0u;
    *(void *)(v228 + 584) = 0;
  }
  else
  {
    *(void *)(v228 + 576) = v295;
    *(void *)(v228 + 584) = &off_1002EB090;
    v312 = sub_1000709B8((uint64_t *)(v228 + 552));
    sub_100110A34(v310, (uint64_t)v312, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  sub_100173574(0xD000000000000020, 0x800000010027E540, 0x2D676E696C6C6962, 0xED0000726F727265, 7566179, 0xE300000000000000, v309);
  if (sub_10001FA0C(v309, 1, v295) == 1)
  {
    sub_1000AC6D0(v309, &qword_100310AF0);
    *(_OWORD *)(v228 + 592) = 0u;
    *(_OWORD *)(v228 + 608) = 0u;
    *(void *)(v228 + 624) = 0;
  }
  else
  {
    *(void *)(v228 + 616) = v295;
    *(void *)(v228 + 624) = &off_1002EB090;
    v313 = sub_1000709B8((uint64_t *)(v228 + 592));
    sub_100110A34(v309, (uint64_t)v313, (void (*)(void))type metadata accessor for StaticResourceRoute);
  }
  v314 = &_swiftEmptyArrayStorage;
  for (uint64_t k = 32; k != 632; k += 40)
  {
    sub_1001107E0(v228 + k, (uint64_t)v346, &qword_1003195B0);
    sub_100110A88((uint64_t)v346, (uint64_t)&v341, &qword_1003195B0);
    if (v342)
    {
      sub_10002F754(&v341, (uint64_t)&v343);
      sub_10002F754(&v343, (uint64_t)&v341);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100034CA0();
        v314 = v317;
      }
      unint64_t v316 = v314[2];
      if (v316 >= v314[3] >> 1)
      {
        sub_100034CA0();
        v314 = v318;
      }
      v314[2] = v316 + 1;
      sub_10002F754(&v341, (uint64_t)&v314[5 * v316 + 4]);
    }
    else
    {
      sub_1000AC6D0((uint64_t)&v341, &qword_1003195B0);
    }
  }
  swift_setDeallocating();
  sub_10020BB14();
  uint64_t v319 = v314[2];
  if (v319)
  {
    v320 = v314 + 4;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000F5DA0(v320);
      v320 += 5;
      --v319;
    }
    while (v319);
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

void sub_10010998C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10001C2A8(v2 + 8, v2[11]);
  uint64_t v6 = *v5;
  uint64_t v7 = *(os_unfair_lock_s **)(*(void *)(*v5 + 24) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v7);
  sub_10008A520(v6, a1, a2);
  os_unfair_lock_unlock(v7);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001C2A8(v2 + 13, v2[16]);
  sub_10009F734();
}

uint64_t sub_100109A40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = sub_10024E030();
  sub_10002F9C8();
  __chkstk_darwin(v9, v10);
  sub_1000DD1B8();
  if (!swift_weakLoadStrong())
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v44 = v3;
    uint64_t v48 = v8;
    uint64_t v11 = sub_10024E1F0();
    sub_10001B0E8(v11, (uint64_t)qword_10034C0E0);
    uint64_t v12 = sub_10024E1D0();
    os_log_type_t v13 = sub_10024EE20();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Creating temporary buy route to simulate off-device buy.", v14, 2u);
      swift_slowDealloc();
    }

    sub_100027788(v5 + 64, (uint64_t)v45);
    sub_100027788(v5 + 104, (uint64_t)v46);
    sub_100019524(&qword_100310AF8);
    v43[0] = (void *)swift_allocObject();
    sub_100051B64((uint64_t)v45, v45[3]);
    v43[1] = v43;
    sub_10002F9C8();
    __chkstk_darwin(v15, v16);
    sub_10002059C();
    uint64_t v19 = (uint64_t *)(v18 - v17);
    sub_100110CDC();
    v20();
    sub_100051B64((uint64_t)v46, v47);
    sub_10002F9C8();
    __chkstk_darwin(v21, v22);
    sub_1000869F4();
    sub_100110CDC();
    v23();
    uint64_t v24 = *v19;
    uint64_t v25 = *v4;
    uint64_t v26 = swift_retain();
    sub_10010F7A0(v26, v24, v25, v43[0]);
    sub_10001C2EC((uint64_t)v46);
    sub_10001C2EC((uint64_t)v45);
    uint64_t v4 = v44;
  }
  sub_10024E010();
  sub_1001002A4(a1, a2);
  if (v4)
  {
    sub_100110CE8();
    v27();
    swift_release();
    sub_1001110BC();
    sub_100019524(&qword_100309768);
    if (sub_100110D4C() && v46[0] == 1)
    {
      swift_errorRelease();
      sub_100057824();
      sub_1000290D0();
      *uint64_t v28 = 0;
LABEL_25:
      swift_willThrow();
      return swift_errorRelease();
    }
    swift_errorRelease();
    sub_1001110BC();
    if (sub_100110D4C())
    {
      swift_errorRelease();
      char v29 = v46[0];
      sub_100057824();
LABEL_24:
      sub_1000290D0();
      *uint64_t v40 = v29;
      goto LABEL_25;
    }
    swift_errorRelease();
    sub_1001110BC();
    if (sub_100110D4C())
    {
      swift_errorRelease();
      char v29 = v46[0];
      sub_10006918C();
      goto LABEL_24;
    }
    swift_errorRelease();
    sub_1001110BC();
    if (sub_100110D4C())
    {
      swift_errorRelease();
      char v29 = v46[0];
      sub_100110128();
      goto LABEL_24;
    }
    swift_errorRelease();
    sub_10006918C();
    uint64_t v41 = sub_1000290D0();
    sub_100110FA0(v41, v42);
    return swift_errorRelease();
  }
  else
  {
    if (qword_100308D48 != -1) {
      swift_once();
    }
    sub_100142C1C(*a1, a1[1]);
    sub_10024DF70();
    double v31 = v30;
    id v32 = *(id *)(a2 + 40);
    double v33 = sub_1000D453C();

    sub_100110174(a2, (uint64_t)v45);
    if (v31 >= v33)
    {
      uint64_t v34 = *(void *)(v45[5] + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
      sub_1001101D0((uint64_t)v45);
      if ((v34 & 2) == 0)
      {
        sub_100110CE8();
        v35();
        return swift_release();
      }
    }
    else
    {
      sub_1001101D0((uint64_t)v45);
    }
    uint64_t v37 = *a1;
    uint64_t v38 = a1[1];
    swift_bridgeObjectRetain();
    sub_10010C648(0, v37, v38, 0xD000000000000011, 0x800000010027E6C0);
    swift_bridgeObjectRelease();
    swift_release();
    sub_100110CE8();
    return v39();
  }
}

uint64_t sub_100109FA8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PurchaseConfiguration();
  sub_100025FBC();
  __chkstk_darwin(v3, v4);
  sub_1000E289C();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (void *)((char *)v27 - v10);
  sub_10024DC80();
  swift_allocObject();
  sub_10024DC70();
  sub_1001108E8(&qword_100310B08, (void (*)(uint64_t))type metadata accessor for PurchaseConfiguration);
  sub_10024DC60();
  if (v1)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10024E1F0();
    sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (_DWORD *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *uint64_t v15 = 138412290;
      swift_errorRetain();
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      v27[1] = v17;
      sub_10024F100();
      *uint64_t v16 = v17;
      swift_errorRelease();
      swift_errorRelease();
      sub_100111054();
      _os_log_impl(v18, v19, v20, v21, v22, v23);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_10006918C();
    uint64_t v25 = sub_1000290D0();
    sub_100110FA0(v25, v26);
    swift_release();
    return swift_errorRelease();
  }
  else
  {
    sub_100110A34(v7, (uint64_t)v11, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    sub_100109A40(v11, a1);
    sub_10011097C((uint64_t)v11, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    return swift_release();
  }
}

void sub_10010A2C4()
{
  sub_10003C7F0();
  char v2 = v1;
  sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
  uint64_t v3 = sub_1000A10B0();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    switch(sub_1000D6528())
    {
      case 3u:
        swift_bridgeObjectRelease();
        goto LABEL_7;
      default:
        char v7 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v7)
        {
LABEL_7:
          if (v2) {
            uint64_t v9 = sub_1000D427C();
          }
          else {
            uint64_t v9 = 0;
          }
          sub_1000D5B48(v9);
          swift_bridgeObjectRelease();
          sub_1000D5C00(5u);
          sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
          sub_1000A1278(v4, 1);
          sub_1000ACC78();
          if (!v11)
          {
            char v12 = v10;
            sub_10006918C();
            sub_1000290D0();
            *os_log_type_t v13 = v12;
          }
        }
        else
        {
          sub_10006918C();
          sub_1000290D0();
          *uint64_t v8 = 1;
        }

        break;
    }
  }
  else
  {
    sub_10006918C();
    uint64_t v5 = sub_1000290D0();
    sub_100110DBC(v5, v6);
  }
  sub_10003C780();
}

uint64_t sub_10010A4E4()
{
  sub_1000ACEB8();
  if (qword_100308D48 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10008436C();
  sub_10014499C(v3, v4, 0, v5, v6, v7, v8, v9);
  char v10 = sub_10001C2A8((void *)(v1 + 64), *(void *)(v1 + 88));
  uint64_t v11 = *v10;
  uint64_t v12 = *(void *)(*v10 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000CB2B0(v12, v11, v2, v0);
  return 0;
}

void sub_10010A59C()
{
  sub_10003C7F0();
  uint64_t v1 = sub_100110CF8();
  if (v1)
  {
    uint64_t v2 = sub_100110FC0(v1);
    sub_10009F388(v2, v3);
    sub_1000ACC78();
    if (!v5)
    {
      char v8 = v4;
      sub_10006918C();
      sub_1000290D0();
      *uint64_t v9 = v8;
    }
  }
  else
  {
    sub_10006918C();
    uint64_t v6 = sub_1000290D0();
    sub_100110DBC(v6, v7);
  }
  sub_10003C780();
}

uint64_t sub_10010A634()
{
  uint64_t v1 = sub_100110C60();
  if (v1)
  {
    sub_100110D6C(v1);
    sub_10009F408();
    sub_1000ACC78();
    if (v3)
    {

      return 0;
    }
    else
    {
      char v5 = v2;
      sub_10006918C();
      uint64_t v6 = sub_1000290D0();
      *uint64_t v7 = v5;
    }
  }
  else
  {
    sub_10006918C();
    uint64_t v6 = sub_1000290D0();
    sub_100110DBC(v6, v4);
  }
  return v6;
}

uint64_t sub_10010A6CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  sub_10024E030();
  sub_10002F9C8();
  uint64_t v12 = v11;
  __chkstk_darwin(v13, v14);
  sub_10002059C();
  uint64_t v15 = v5 + 8;
  sub_10001C2A8(v5 + 8, v5[11]);
  uint64_t v34 = a5;
  sub_10008A5FC(a4, a5);
  uint64_t v16 = sub_1000FE198(a1, a2);
  swift_release();
  if (!v16) {
    goto LABEL_9;
  }
  type metadata accessor for OctaneSubscription();
  if (!swift_dynamicCastClass())
  {
    swift_release();
LABEL_9:
    sub_100057824();
    uint64_t v23 = sub_1000290D0();
    *uint64_t v24 = 0;
    return v23;
  }
  sub_10001C2A8(v5 + 13, v5[16]);
  sub_10024E010();
  uint64_t v17 = (void *)sub_10009FE0C();
  uint64_t v18 = *(void (**)(void))(v12 + 8);
  sub_100110CE8();
  v18();
  if (v17)
  {
    sub_10024E010();
    char v19 = sub_1000D5964();
    sub_100110CE8();
    v18();
    if (a3)
    {
      if ((v19 & 1) == 0)
      {
LABEL_21:
        swift_release();

        return 0;
      }
      sub_10024E020();
      sub_10024DF70();
      uint64_t v21 = v20;
      sub_100110CE8();
      v18();
      sub_1000D6214(v21, 0);
      sub_1000D5B48(0);
      uint64_t v22 = sub_1000D55F8();
      if (v22 != 5) {
        uint64_t v22 = sub_1000D5C00(2u);
      }
    }
    else
    {
      sub_10024E020();
      sub_10024DF70();
      uint64_t v27 = v26;
      sub_100110CE8();
      v18();
      sub_1000D6214(v27, 0);
    }
    uint64_t v28 = (void *)sub_100110F80(v22, v6[16]);
    sub_1000A1278(v28, 1);
    if ((a3 & 1) == 0)
    {
      sub_10001C2A8(v15, v6[11]);
      BOOL v29 = sub_10008BB04();
      if (v29)
      {
        sub_100110F80(v29, v6[16]);
        sub_1000A17B8();
      }
      else
      {
        if (qword_100308CF8 != -1) {
          swift_once();
        }
        uint64_t v30 = sub_100054BEC(v17);
        uint64_t v31 = sub_100110F80(v30, v6[16]);
      }
      if (qword_100308D48 != -1) {
        swift_once();
      }
      sub_100142C1C(a4, v34);
    }
    goto LABEL_21;
  }
  sub_10006918C();
  uint64_t v23 = sub_1000290D0();
  sub_100110DBC(v23, v25);
  swift_release();
  return v23;
}

void sub_10010AA2C(uint64_t a1)
{
  if (qword_100308D48 != -1) {
    swift_once();
  }
  sub_100143D28(a1);
}

uint64_t sub_10010AA8C()
{
  sub_1000ACEB8();
  sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
  sub_10008436C();
  unint64_t v1 = sub_1000A118C();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
LABEL_54:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_10024F6F0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_55;
  }
LABEL_3:
  char v4 = _swiftEmptyDictionarySingleton;
  uint64_t v69 = v3;
  unint64_t v70 = v2 & 0xC000000000000001;
  uint64_t v5 = 4;
  unint64_t v68 = v2;
  while (1)
  {
    if (v70) {
      uint64_t v6 = (char *)sub_10024F380();
    }
    else {
      uint64_t v6 = (char *)*(id *)(v2 + 8 * v5);
    }
    uint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v9 = sub_1000D939C(15);
    if (!v10) {
      goto LABEL_28;
    }
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    if (v4[2])
    {
      unint64_t v13 = sub_10011ED00();
      if (v14) {
        break;
      }
    }
    uint64_t v67 = v5 - 3;
    unint64_t v2 = sub_1000D5AE4();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71[0] = v4;
    uint64_t v27 = v11;
    sub_10011ED00();
    sub_100111068();
    if (v23) {
      goto LABEL_51;
    }
    unint64_t v30 = v28;
    char v31 = v29;
    sub_100019524(&qword_100310B28);
    if (sub_10024F630(isUniquelyReferenced_nonNull_native, (Swift::Int)v4))
    {
      unint64_t v32 = sub_10011ED00();
      if ((v31 & 1) != (v33 & 1))
      {
LABEL_66:
        uint64_t result = sub_10024FB70();
        __break(1u);
        return result;
      }
      unint64_t v30 = v32;
    }
    char v4 = v71[0];
    if ((v31 & 1) == 0)
    {
      sub_100111020((uint64_t)v71[0] + 8 * (v30 >> 6));
      uint64_t v35 = (uint64_t *)(v34 + 16 * v30);
      *uint64_t v35 = v27;
      v35[1] = v12;
      *(void *)(v4[7] + 8 * v30) = v2;
      uint64_t v36 = v4[2];
      BOOL v23 = __OFADD__(v36, 1);
      uint64_t v37 = v36 + 1;
      if (v23) {
        goto LABEL_52;
      }
      goto LABEL_25;
    }
    *(void *)(*((void *)v71[0] + 7) + 8 * v30) = v2;
LABEL_26:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v2 = v68;
    uint64_t v3 = v69;
    uint64_t v8 = v67;
LABEL_29:
    ++v5;
    if (v8 == v3) {
      goto LABEL_34;
    }
  }
  unint64_t v15 = *(void *)(v4[7] + 8 * v13);
  if (v15 >= sub_1000D5AE4())
  {
    swift_bridgeObjectRelease();
LABEL_28:

    goto LABEL_29;
  }
  uint64_t v67 = v5 - 3;
  uint64_t v16 = *(void *)&v7[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___id];
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = v11;
  Swift::Bool v19 = v17;
  v71[0] = v4;
  uint64_t v20 = v18;
  sub_10011ED00();
  sub_100111068();
  if (v23) {
    goto LABEL_53;
  }
  unint64_t v2 = v21;
  uint64_t v3 = v22;
  sub_100019524(&qword_100310B28);
  if (sub_10024F630(v19, (Swift::Int)v4))
  {
    unint64_t v24 = sub_10011ED00();
    if ((v3 & 1) != (v25 & 1)) {
      goto LABEL_66;
    }
    unint64_t v2 = v24;
  }
  char v4 = v71[0];
  if (v3)
  {
    *(void *)(*((void *)v71[0] + 7) + 8 * v2) = v16;
    goto LABEL_26;
  }
  sub_100111020((uint64_t)v71[0] + 8 * (v2 >> 6));
  uint64_t v39 = (uint64_t *)(v38 + 16 * v2);
  *uint64_t v39 = v20;
  v39[1] = v12;
  *(void *)(v4[7] + 8 * v2) = v16;
  uint64_t v40 = v4[2];
  BOOL v23 = __OFADD__(v40, 1);
  uint64_t v37 = v40 + 1;
  if (!v23)
  {
LABEL_25:
    v4[2] = v37;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  __break(1u);
LABEL_34:
  swift_bridgeObjectRelease();
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v41 = 0;
  uint64_t v42 = _swiftEmptyArrayStorage;
  do
  {
    if (v70) {
      id v43 = (id)sub_10024F380();
    }
    else {
      id v43 = *(id *)(v2 + 8 * v41 + 32);
    }
    uint64_t v44 = v43;
    uint64_t v45 = sub_1000D4700();
    uint64_t v46 = sub_1000D939C(15);
    if (v47)
    {
      uint64_t v48 = sub_100161840(v46, v47, (uint64_t)v4);
      char v50 = v49;
      swift_bridgeObjectRelease();
      if (v50)
      {
        unint64_t v2 = v68;
      }
      else
      {
        unint64_t v2 = v68;
        if (sub_1000D5AE4() == v48)
        {
          v71[3] = &type metadata for Bool;
          LOBYTE(v71[0]) = 1;
          sub_10020554C((uint64_t)v71, 0x7473614C7369, 0xE600000000000000);
        }
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100035300();
      uint64_t v42 = v52;
    }
    unint64_t v51 = v42[2];
    if (v51 >= v42[3] >> 1)
    {
      sub_100035300();
      uint64_t v42 = v53;
    }
    ++v41;
    v42[2] = v51 + 1;
    v42[v51 + 4] = v45;
  }
  while (v69 != v41);
LABEL_56:
  swift_bridgeObjectRelease();
  uint64_t v54 = self;
  sub_100019524(&qword_10030A390);
  Class isa = sub_10024EA80().super.isa;
  swift_bridgeObjectRelease();
  v71[0] = 0;
  id v56 = [v54 dataWithJSONObject:isa options:0 error:v71];

  id v57 = v71[0];
  if (v56)
  {
    uint64_t v58 = sub_10024DF10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = v57;
    sub_10024DCE0();

    swift_willThrow();
    if (qword_100308DE0 != -1) {
LABEL_65:
    }
      swift_once();
    uint64_t v60 = sub_10024E1F0();
    sub_10001B0E8(v60, (uint64_t)qword_10034C0E0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v61 = sub_10024E1D0();
    os_log_type_t v62 = sub_10024EE10();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)sub_10003FD90();
      v71[0] = (id)sub_10003FD78();
      *(_DWORD *)v63 = 136446210;
      swift_getErrorValue();
      uint64_t v64 = sub_10024FB80();
      sub_1000F3F3C(v64, v65, (uint64_t *)v71);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Error serializing transaction dictionaries: %{public}s", v63, 0xCu);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v58;
}

uint64_t sub_10010B1B8()
{
  uint64_t v1 = sub_100110C60();
  if (v1)
  {
    uint64_t v2 = sub_100110D6C(v1);
    uint64_t v3 = 0;
    sub_1000A0BEC(v2, 1, 0);
  }
  else
  {
    sub_10006918C();
    uint64_t v3 = sub_1000290D0();
    sub_100110DBC(v3, v4);
  }
  return v3;
}

uint64_t sub_10010B230()
{
  uint64_t v1 = sub_100110C60();
  if (v1)
  {
    uint64_t v2 = sub_100110D6C(v1);
    sub_1000A0DBC(v2);
    sub_1000ACC78();
    if (v4)
    {

      return 0;
    }
    else
    {
      char v6 = v3;
      sub_10006918C();
      uint64_t v7 = sub_1000290D0();
      *uint64_t v8 = v6;
    }
  }
  else
  {
    sub_10006918C();
    uint64_t v7 = sub_1000290D0();
    sub_100110DBC(v7, v5);
  }
  return v7;
}

uint64_t sub_10010B2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100110D94(a1);
  return sub_10008A988(v7, a2, 6, a3, a4);
}

uint64_t sub_10010B318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_100110D94(a1);
  uint64_t result = sub_10008B4EC(v9, a2, a3, a4);
  if ((result & 1) == 0)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10024E1F0();
    sub_10001B0E8(v11, (uint64_t)qword_10034C0E0);
    sub_1000AC92C();
    uint64_t v12 = sub_10024E1D0();
    os_log_type_t v13 = sub_10024EE30();
    if (os_log_type_enabled(v12, v13))
    {
      char v14 = (_DWORD *)sub_10003FD90();
      sub_10003FD78();
      *char v14 = 136315138;
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_1000AC8A8(v15);
      sub_10011100C();
      sub_10024F100();
      sub_1000AC914();
      sub_100111054();
      _os_log_impl(v16, v17, v18, v19, v20, v21);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1000ACBA0();
    }
    sub_10001C2A8((void *)(v5 + 104), *(void *)(v5 + 128));
    uint64_t v22 = (uint64_t *)sub_10008436C();
    return sub_1000A3BDC(v22, v23);
  }
  return result;
}

void sub_10010B4A4()
{
  sub_10003C7F0();
  char v2 = v1;
  sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
  uint64_t v3 = sub_1000A10B0();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
    sub_1000A2120(v4, v2 & 1);
  }
  else
  {
    sub_10006918C();
    uint64_t v5 = sub_1000290D0();
    sub_100110DBC(v5, v6);
  }
  sub_10003C780();
}

uint64_t sub_10010B550()
{
  uint64_t v1 = sub_100110CF8();
  if (v1)
  {
    char v2 = (void *)sub_100110FC0(v1);
    sub_1000A2634(v2, v3);

    return 0;
  }
  else
  {
    sub_10006918C();
    uint64_t v5 = sub_1000290D0();
    sub_100110DBC(v5, v4);
  }
  return v5;
}

uint64_t sub_10010B790()
{
  char v3 = v1;
  sub_1000ACEB8();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10024E1F0();
  sub_10001B0E8(v4, (uint64_t)qword_10034C0E0);
  sub_1000AC92C();
  uint64_t v5 = sub_10024E1D0();
  os_log_type_t v6 = sub_10024EE30();
  uint64_t v7 = &OBJC_INSTANCE_METHODS_SQLiteQueryDescriptor;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = (uint8_t *)sub_10003FD90();
    sub_10003FD78();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1000AC8A8(v9);
    sub_10011100C();
    uint64_t v7 = &OBJC_INSTANCE_METHODS_SQLiteQueryDescriptor;
    sub_10024F100();
    sub_1000AC914();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "appstored is checking for messages for %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    sub_1000ACBA0();
  }
  sub_10001C2A8(v3 + 13, v3[16]);
  sub_10008436C();
  uint64_t v10 = sub_1000A2914();
  if (!v11)
  {
    sub_1000AC92C();
    uint32_t v21 = (void *)sub_10024E1D0();
    os_log_type_t v22 = sub_10024EE30();
    if (sub_1000ACE24(v22))
    {
      sub_10003FD90();
      sub_10003FD78();
      uint64_t v23 = sub_1000AD050(COERCE_FLOAT(*(void *)&v7[240]));
      sub_1000AC8A8(v23);
      sub_100110EA4();
      sub_1000AC914();
      uint64_t v26 = "there is no message for %s";
LABEL_13:
      sub_100111034((void *)&_mh_execute_header, v24, v25, v26);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();

      return 0;
    }
LABEL_14:

    sub_1000ACBA0();
    return 0;
  }
  uint64_t v13 = v10;
  char v14 = v11;
  int v15 = v12;
  uint64_t v16 = *(os_unfair_lock_s **)(v3[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v16);
  uint64_t v17 = v3[5];
  os_unfair_lock_unlock(v16);
  swift_release();
  uint64_t v18 = sub_1000C855C(v17, v2, v0, v13, v14, v15 & 0xFFFFFF01);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    sub_1000AC92C();
    uint32_t v21 = (void *)sub_10024E1D0();
    os_log_type_t v27 = sub_10024EE30();
    if (sub_1000ACE24(v27))
    {
      sub_10003FD90();
      sub_10003FD78();
      uint64_t v28 = sub_1000AD050(4.8149e-34);
      sub_1000AC8A8(v28);
      sub_100110EA4();
      sub_1000AC914();
      uint64_t v26 = "Unable to make dictionary representation for message for %s";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  sub_1002056F4(v18);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10010BA8C(char a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10024E1F0();
  sub_10001B0E8(v8, (uint64_t)qword_10034C0E0);
  sub_1000AC92C();
  uint64_t v9 = sub_10024E1D0();
  os_log_type_t v10 = sub_10024EE30();
  uint64_t v27 = a2;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = sub_10003FD78();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000F3F3C(a2, (unint64_t)a3, &v28);
    sub_10024F100();
    sub_1000AC914();
    *(_WORD *)(v11 + 12) = 2048;
    sub_10024F100();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "storekitd is checking for messages for %s with type %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    sub_1000ACBA0();
  }
  if ((a1 - 1) > 2u)
  {
    uint64_t v23 = sub_10024E1D0();
    os_log_type_t v24 = sub_10024EE30();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)sub_10003FD90();
      *(_DWORD *)uint64_t v25 = 134217984;
      uint64_t v28 = 1;
      sub_10024F100();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Message type %ld unhandled", v25, 0xCu);
      sub_10003FBCC();
    }

    return 0;
  }
  sub_10001C2A8((void *)(v3 + 104), *(void *)(v3 + 128));
  unint64_t v12 = sub_1000A3A9C(a1, a2, a3);
  if (!v13) {
    return 0;
  }
  uint64_t v15 = v12;
  uint64_t v16 = v13;
  int v17 = v14;
  uint64_t v18 = *(os_unfair_lock_s **)(*(void *)(v4 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v18);
  uint64_t v19 = *(void *)(v4 + 40);
  os_unfair_lock_unlock(v18);
  swift_release();
  uint64_t v20 = sub_1000C855C(v19, v27, (unint64_t)a3, v15, v16, v17 & 0xFFFFFF01);
  swift_bridgeObjectRelease();
  if (!v20) {
    return 0;
  }
  sub_1002056F4(v20);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  return v22;
}

void sub_10010BD80()
{
  sub_100110F18();
  sub_1001BA0B0(v0, v1, v2, v3, v4);
  sub_10002FAEC();
}

void sub_10010BECC()
{
}

uint64_t sub_10010C030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100110D94(a1);
  sub_10008A8A4(v7, 0, a2, a3, a4, v8, v9, v10);
  return 0;
}

uint64_t sub_10010C084()
{
  sub_10001C2EC(v0 + 64);
  sub_10001C2EC(v0 + 104);
  return swift_weakDestroy();
}

uint64_t sub_10010C0BC()
{
  uint64_t v0 = sub_1000F6098();
  sub_10001C2EC(v0 + 64);
  sub_10001C2EC(v0 + 104);
  swift_weakDestroy();
  return v0;
}

uint64_t sub_10010C0FC()
{
  uint64_t v0 = sub_10010C0BC();
  return _swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for OctaneServer()
{
  return self;
}

uint64_t sub_10010C154()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10010C184()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  uint64_t v2 = *(void *)(v0 + 40);
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

#error "10010C380: call analysis failed (funcsize=128)"

#error "10010C5B4: call analysis failed (funcsize=128)"

void sub_10010C648(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = a1 & 1;
  uint64_t v7 = *(void *)(v5 + 56);
  if (v7)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v5;
    *(unsigned char *)(v13 + 24) = v6;
    *(void *)(v13 + 32) = a4;
    *(void *)(v13 + 40) = a5;
    *(void *)(v13 + 48) = v7;
    swift_unknownObjectRetain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10010CBF8(a2, a3, KeyPath, (uint64_t)sub_100110238, v13);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10024E1F0();
    sub_10001B0E8(v14, (uint64_t)qword_10034C0E0);
    oslog = sub_10024E1D0();
    os_log_type_t v15 = sub_10024EE10();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      int v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      sub_1000C0F08();
      if (v6) {
        Swift::Int v18 = 37;
      }
      else {
        Swift::Int v18 = 36;
      }
      Class isa = sub_10024EF40(v18).super.super.isa;
      sub_10024F100();
      *int v17 = isa;
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Unable to communicate with daemon to simulate push %@", v16, 0xCu);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10010C8F0(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010C934(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010C978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10010C9A0(a1, a2, a3, a4, (uint64_t)&unk_1002E4F68, (uint64_t)sub_100110ADC, (uint64_t)&unk_1002E4F80);
}

uint64_t sub_10010C9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = v7;
  sub_10024E2A0();
  sub_10002F9C8();
  __chkstk_darwin(v14, v15);
  sub_1000869F4();
  uint64_t v26 = sub_10024E2D0();
  sub_10002F9C8();
  uint64_t v17 = v16;
  __chkstk_darwin(v18, v19);
  sub_1000DD1B8();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v9;
  v20[3] = a2;
  v20[4] = a3;
  v20[5] = a4;
  v20[6] = a1;
  aBlock[4] = a6;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = a7;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10024E2C0();
  sub_1001108E8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100019524(&qword_100309168);
  sub_100029C10();
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v21);
  sub_10003FDC8();
  v22();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v8, v26);
  return swift_release();
}

uint64_t sub_10010CBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_10024E2A0();
  uint64_t v25 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10024E2D0();
  uint64_t v16 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(v6 + 48);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v6;
  v20[3] = a3;
  v20[4] = a4;
  v20[5] = a5;
  v20[6] = a1;
  v20[7] = a2;
  aBlock[4] = sub_100110360;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = &unk_1002E4DF0;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10024E2C0();
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_1001108E8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100019524(&qword_100309168);
  sub_100029C10();
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v24);
  return swift_release();
}

uint64_t sub_10010CECC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t))
{
  uint64_t v48 = a7;
  uint64_t v49 = a8;
  v46[2] = a6;
  uint64_t v47 = a3;
  uint64_t v50 = a4;
  id v57 = a9;
  uint64_t v58 = a5;
  sub_10024E2A0();
  sub_10002F9C8();
  uint64_t v54 = v13;
  uint64_t v55 = v12;
  __chkstk_darwin(v12, v14);
  sub_10002059C();
  uint64_t v51 = v16 - v15;
  sub_10024E2D0();
  sub_10002F9C8();
  uint64_t v52 = v18;
  uint64_t v53 = v17;
  __chkstk_darwin(v17, v19);
  sub_1000ACE78();
  uint64_t v20 = sub_10024E290();
  sub_10002F9C8();
  uint64_t v22 = v21;
  __chkstk_darwin(v23, v24);
  sub_100110EF4();
  uint64_t v56 = sub_10024E340();
  sub_10002F9C8();
  uint64_t v26 = v25;
  __chkstk_darwin(v27, v28);
  sub_1000E289C();
  uint64_t v31 = v29 - v30;
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)v46 - v34;
  aBlock[0] = a1;
  swift_retain();
  uint64_t v59 = a2;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = v61[2];
  swift_bridgeObjectRelease();
  if (!v36)
  {
    v46[1] = a1[6];
    sub_10024E330();
    *uint64_t v9 = 500;
    (*(void (**)(void *, void, uint64_t))(v22 + 104))(v9, enum case for DispatchTimeInterval.milliseconds(_:), v20);
    sub_10024E390();
    (*(void (**)(void *, uint64_t))(v22 + 8))(v9, v20);
    v46[0] = *(void *)(v26 + 8);
    ((void (*)(uint64_t, uint64_t))v46[0])(v31, v56);
    uint64_t v37 = (void *)swift_allocObject();
    uint64_t v38 = v59;
    v37[2] = a1;
    v37[3] = v38;
    uint64_t v39 = v50;
    v37[4] = v47;
    v37[5] = v39;
    aBlock[4] = v48;
    aBlock[5] = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018758;
    aBlock[3] = v49;
    uint64_t v40 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10024E2C0();
    uint64_t v61 = _swiftEmptyArrayStorage;
    sub_1001108E8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100019524(&qword_100309168);
    sub_100029C10();
    sub_10024F280();
    sub_10024EE70();
    _Block_release(v40);
    sub_10003FDC8();
    v41();
    sub_10003FDC8();
    v42();
    ((void (*)(char *, uint64_t))v46[0])(v35, v56);
    swift_release();
  }
  uint64_t v61 = a1;
  swift_retain();
  uint64_t v43 = v58;
  swift_bridgeObjectRetain();
  uint64_t v44 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
  v57(v43);
  v44(aBlock, 0);
  return swift_release();
}

uint64_t sub_10010D314(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, Swift::Int a6)
{
  Swift::Int v49 = a5;
  Swift::Int v50 = a6;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v8 = sub_10024E2A0();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10024E2D0();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10024E290();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_10024E340();
  uint64_t v20 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v21);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v38 - v26;
  aBlock[0] = a1;
  swift_retain();
  uint64_t v51 = a2;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v28 = *(void *)(v53[0] + 16);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    uint64_t v40 = *(void *)(a1 + 48);
    sub_10024E330();
    *uint64_t v19 = 500;
    (*(void (**)(void *, void, uint64_t))(v16 + 104))(v19, enum case for DispatchTimeInterval.milliseconds(_:), v15);
    sub_10024E390();
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    uint64_t v39 = *(void (**)(char *, uint64_t))(v20 + 8);
    v39(v23, v48);
    uint64_t v29 = (void *)swift_allocObject();
    uint64_t v30 = v51;
    v29[2] = a1;
    v29[3] = v30;
    uint64_t v31 = v42;
    v29[4] = v41;
    v29[5] = v31;
    aBlock[4] = sub_10011038C;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018758;
    aBlock[3] = &unk_1002E4E40;
    uint64_t v32 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10024E2C0();
    v53[0] = (Swift::Int)_swiftEmptyArrayStorage;
    sub_1001108E8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100019524(&qword_100309168);
    sub_100029C10();
    uint64_t v33 = v43;
    uint64_t v34 = v47;
    sub_10024F280();
    sub_10024EE70();
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v45);
    v39(v27, v48);
    swift_release();
  }
  v53[2] = a1;
  swift_retain();
  Swift::Int v35 = v50;
  swift_bridgeObjectRetain();
  uint64_t v36 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
  sub_1001F1AF0(v53, v49, v35);
  swift_bridgeObjectRelease();
  v36(aBlock, 0);
  return swift_release();
}

uint64_t sub_10010D82C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v3 = *(v2 - 1);
      Swift::Int v4 = *v2;
      swift_bridgeObjectRetain();
      sub_1001F1AF0(&v6, v3, v4);
      swift_bridgeObjectRelease();
      v2 += 2;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010D8B4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v8 | (v2 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v2 << 6))
  {
    uint64_t v13 = (Swift::Int *)(*(void *)(v1 + 48) + 16 * i);
    Swift::Int v14 = *v13;
    Swift::Int v15 = v13[1];
    swift_bridgeObjectRetain();
    sub_1001F1AF0(&v16, v14, v15);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v11 - 1) & v11;
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_20;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_20;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_10010DA38(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11 = sub_100150C50();
  *(unsigned char *)(v11 + 219) = 1;
  *(_OWORD *)(v11 + 24) = xmmword_100260C00;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_10024F330(66);
  v22._object = (void *)0x800000010027E6E0;
  v22._countAndFlagsBits = 0x1000000000000014;
  sub_10024E800(v22);
  v23._countAndFlagsBits = a1;
  v23._object = a2;
  sub_10024E800(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0x100000000000002CLL;
  v24._object = (void *)0x800000010027E700;
  sub_10024E800(v24);
  sub_10015032C(0, 0xE000000000000000);
  *(unsigned char *)(v11 + 56) = 2;
  *(_OWORD *)(v11 + 64) = xmmword_100260C10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v11 + 144) = xmmword_100260C20;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 88);
  uint64_t v14 = *(void *)(v11 + 96);
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 112) = 0u;
  *(void *)(v11 + 128) = 0;
  *(_WORD *)(v11 + 136) = 513;
  sub_1001109E0(v12, v13, v14);
  if (a6)
  {
    swift_retain();
    sub_10024F330(25);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = sub_10024F9E0();
    sub_10024E800(v25);
    swift_bridgeObjectRelease();
    v26._countAndFlagsBits = 0x3D64696226;
    v26._object = (void *)0xE500000000000000;
    sub_10024E800(v26);
    v27._countAndFlagsBits = a4;
    v27._object = a5;
    sub_10024E800(v27);
    uint64_t v15 = sub_1001CF778(0xD000000000000014, (void *)0x800000010027E730);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v11 + 160);
    uint64_t v19 = *(void *)(v11 + 168);
    uint64_t v20 = *(void *)(v11 + 176);
    *(void *)(v11 + 160) = 3;
    *(_OWORD *)(v11 + 168) = 0u;
    *(_OWORD *)(v11 + 184) = 0u;
    *(void *)(v11 + 200) = v15;
    *(void *)(v11 + 208) = v17;
    *(_WORD *)(v11 + 216) = 513;
    sub_1001109E0(v18, v19, v20);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return v11;
}

uint64_t sub_10010DCBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = sub_100150C50();
  *(void *)(v10 + 24) = 0xD000000000000020;
  *(void *)(v10 + 32) = 0x800000010027E750;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_10015032C(0xD000000000000048, 0x800000010027E780);
  *(unsigned char *)(v10 + 56) = 2;
  *(_OWORD *)(v10 + 64) = xmmword_100260C30;
  swift_bridgeObjectRelease();
  if (a5)
  {
    type metadata accessor for ConfirmPurchaseEngagementUIRoute();
    swift_retain();
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = a3;
    v21._object = a4;
    unint64_t v11 = sub_1000706E4(v21);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1001CF778(v11, v13);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v17 = *(void *)(v10 + 80);
    uint64_t v18 = *(void *)(v10 + 88);
    uint64_t v19 = *(void *)(v10 + 96);
    *(void *)(v10 + 80) = 2;
    *(void *)(v10 + 88) = a3;
    *(void *)(v10 + 96) = a4;
    *(void *)(v10 + 104) = a1;
    *(void *)(v10 + 112) = a2;
    *(void *)(v10 + 120) = v14;
    *(void *)(v10 + 128) = v16;
    *(_WORD *)(v10 + 136) = 256;
    sub_1001109E0(v17, v18, v19);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v10 + 218) = 1;
  swift_release();
  return v10;
}

uint64_t sub_10010DE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v21[3] = type metadata accessor for OctaneConfigurationManager();
  v21[4] = &off_1002E03A8;
  v21[0] = a1;
  uint64_t v19 = type metadata accessor for DatabaseStore();
  uint64_t v20 = &off_1002F1470;
  v18[0] = a2;
  *(void *)(a3 + 96) = &_swiftEmptySetSingleton;
  *(void *)(a3 + 104) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a3 + 112) = 0;
  type metadata accessor for SubscriptionRenewalCoordinator();
  uint64_t v6 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v6 + 112) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 120) = v6;
  type metadata accessor for UnfairLock();
  uint64_t v7 = swift_allocObject();
  unint64_t v8 = (_DWORD *)swift_slowAlloc();
  *(void *)(v7 + 16) = v8;
  *unint64_t v8 = 0;
  *(void *)(a3 + 128) = v7;
  *(void *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(void *)(a3 + 152) = 0;
  *(void *)(a3 + 160) = 0xB000000000000000;
  *(void *)(a3 + 168) = 0x3FF0000000000000;
  sub_100027788((uint64_t)v21, a3 + 16);
  sub_100027788((uint64_t)v18, a3 + 56);
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10024E1F0();
  sub_10001B0E8(v9, (uint64_t)qword_10034C0E0);
  sub_100027788((uint64_t)v18, (uint64_t)v17);
  uint64_t v10 = sub_10024E1D0();
  os_log_type_t v11 = sub_10024EE00();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    sub_10001C2A8(v17, v17[3]);
    unint64_t v13 = sub_100206764();
    sub_1000F3F3C(v13, v14, &v16);
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Transaction manager initialized with database: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001C2EC((uint64_t)v17);
  }

  sub_10001C2A8(v18, v19);
  sub_1002068C0();
  sub_10001C2EC((uint64_t)v21);
  sub_10001C2EC((uint64_t)v18);
  return a3;
}

void *sub_10010E0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[14] = type metadata accessor for OctaneTransactionManager();
  a7[15] = &off_1002E1960;
  a7[11] = a6;
  uint64_t v14 = type metadata accessor for OctaneConfigurationManager();
  v22[3] = v14;
  v22[4] = &off_1002E03A8;
  v22[0] = a5;
  uint64_t v15 = sub_100051B64((uint64_t)v22, v14);
  __chkstk_darwin(v15, v15);
  uint64_t v17 = (void *)((char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v17;
  a7[9] = v14;
  a7[10] = &off_1002E03A8;
  a7[5] = a4;
  a7[6] = v19;
  a7[2] = a1;
  a7[3] = a2;
  a7[4] = a3;
  sub_10001C2EC((uint64_t)v22);
  return a7;
}

void *sub_10010E230(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for OctaneConfigurationManager();
  v12[3] = v4;
  v12[4] = &off_1002E03A8;
  v12[0] = a1;
  uint64_t v5 = sub_100051B64((uint64_t)v12, v4);
  __chkstk_darwin(v5, v5);
  uint64_t v7 = (void *)((char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = *v7;
  a2[9] = v4;
  a2[10] = &off_1002E03A8;
  a2[5] = 0;
  a2[6] = v9;
  a2[2] = 0xD000000000000018;
  a2[3] = 0x800000010027E6A0;
  a2[4] = 0;
  sub_10001C2EC((uint64_t)v12);
  return a2;
}

void *sub_10010E34C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for OctaneConfigurationManager();
  v12[3] = v4;
  v12[4] = &off_1002E03A8;
  v12[0] = a1;
  uint64_t v5 = sub_100051B64((uint64_t)v12, v4);
  __chkstk_darwin(v5, v5);
  uint64_t v7 = (void *)((char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = *v7;
  a2[9] = v4;
  a2[10] = &off_1002E03A8;
  a2[5] = 0;
  a2[6] = v9;
  a2[2] = 0xD00000000000002ELL;
  a2[3] = 0x8000000100279E20;
  a2[4] = 0;
  sub_10001C2EC((uint64_t)v12);
  return a2;
}

void sub_10010E468()
{
  sub_10003C7F0();
  int64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  v26[3] = type metadata accessor for OctaneConfigurationManager();
  v26[4] = &off_1002E03A8;
  v26[0] = v14;
  v25[3] = type metadata accessor for OctaneTransactionManager();
  v25[4] = &off_1002E1960;
  v25[0] = v12;
  sub_100027788((uint64_t)v26, (uint64_t)v24);
  sub_100027788((uint64_t)v25, (uint64_t)v23);
  sub_100051B64((uint64_t)v24, v24[3]);
  sub_10002F9C8();
  __chkstk_darwin(v15, v16);
  uint64_t v18 = sub_100110CB0(v17, v23[0]);
  v19(v18);
  sub_100051B64((uint64_t)v23, v23[3]);
  sub_10002F9C8();
  __chkstk_darwin(v20, v21);
  sub_1000ACE78();
  sub_100110CDC();
  v22();
  v2(v8, v6, 0, v4, *v14, *v0, v10);
  sub_10001C2EC((uint64_t)v23);
  sub_10001C2EC((uint64_t)v24);
  sub_10001C2EC((uint64_t)v25);
  sub_10001C2EC((uint64_t)v26);
  sub_10003C780();
}

void *sub_10010E5FC(uint64_t a1, uint64_t a2, void *a3)
{
  v20[3] = type metadata accessor for OctaneConfigurationManager();
  v20[4] = &off_1002E03A8;
  v20[0] = a1;
  v19[3] = type metadata accessor for OctaneTransactionManager();
  v19[4] = &off_1002E1960;
  v19[0] = a2;
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  sub_10024F330(25);
  swift_bridgeObjectRelease();
  sub_100027788((uint64_t)v20, (uint64_t)v18);
  sub_100027788((uint64_t)v19, (uint64_t)v16);
  uint64_t v6 = sub_100051B64((uint64_t)v18, v18[3]);
  __chkstk_darwin(v6, v6);
  uint64_t v8 = (uint64_t *)&v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v9 + 16))(v8);
  uint64_t v10 = sub_100051B64((uint64_t)v16, v17);
  __chkstk_darwin(v10, v10);
  uint64_t v12 = (uint64_t *)&v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  uint64_t v14 = sub_10010E0F0(0xD000000000000019, 0x800000010027E610, 0, 4, *v8, *v12, a3);
  sub_10001C2EC((uint64_t)v16);
  sub_10001C2EC((uint64_t)v18);
  sub_10001C2EC((uint64_t)v19);
  sub_10001C2EC((uint64_t)v20);
  return v14;
}

void *sub_10010E820()
{
  v16[3] = sub_100110ECC();
  v16[4] = &off_1002E03A8;
  v16[0] = v2;
  v15[3] = type metadata accessor for OctaneTransactionManager();
  v15[4] = &off_1002E1960;
  v15[0] = v1;
  *(_OWORD *)(v0 + 128) = xmmword_10025C2E0;
  sub_100027788((uint64_t)v16, (uint64_t)v13);
  sub_100027788((uint64_t)v15, (uint64_t)v11);
  sub_100051B64((uint64_t)v13, v14);
  sub_10002F9C8();
  __chkstk_darwin(v3, v4);
  sub_100110CDC();
  v5();
  sub_100051B64((uint64_t)v11, v12);
  sub_10002F9C8();
  __chkstk_darwin(v6, v7);
  sub_100110CDC();
  v8();
  uint64_t v9 = sub_100110E4C();
  sub_10001C2EC((uint64_t)v11);
  sub_10001C2EC((uint64_t)v13);
  sub_10001C2EC((uint64_t)v15);
  sub_10001C2EC((uint64_t)v16);
  return v9;
}

void *sub_10010E9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  v29[3] = type metadata accessor for OctaneConfigurationManager();
  v29[4] = &off_1002E03A8;
  v29[0] = a5;
  v28[3] = type metadata accessor for OctaneTransactionManager();
  v28[4] = &off_1002E1960;
  v28[0] = a6;
  sub_100027788((uint64_t)v29, (uint64_t)v26);
  sub_100027788((uint64_t)v28, (uint64_t)v24);
  uint64_t v14 = sub_100051B64((uint64_t)v26, v27);
  __chkstk_darwin(v14, v14);
  uint64_t v16 = (uint64_t *)&v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  uint64_t v18 = sub_100051B64((uint64_t)v24, v25);
  __chkstk_darwin(v18, v18);
  uint64_t v20 = (uint64_t *)&v24[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  Swift::String v22 = sub_10010E0F0(a1, a2, a3, a4, *v16, *v20, a7);
  sub_10001C2EC((uint64_t)v24);
  sub_10001C2EC((uint64_t)v26);
  sub_10001C2EC((uint64_t)v28);
  sub_10001C2EC((uint64_t)v29);
  return v22;
}

uint64_t sub_10010EBC8(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void, uint64_t))
{
  uint64_t v16 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v17 = &off_1002E03A8;
  v15[0] = a1;
  a2(0);
  uint64_t v6 = swift_allocObject();
  sub_100051B64((uint64_t)v15, v16);
  sub_10002F9C8();
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = (void *)(v10 - v9);
  sub_100110CDC();
  v12();
  uint64_t v13 = a3(*v11, v6);
  sub_10001C2EC((uint64_t)v15);
  return v13;
}

void *sub_10010ECBC(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v20 = &off_1002E03A8;
  v18[0] = a1;
  uint64_t v16 = type metadata accessor for OctaneTransactionManager();
  uint64_t v17 = &off_1002E1960;
  v15[0] = a2;
  type metadata accessor for SingleStatusRoute();
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v5 = sub_100051B64((uint64_t)v18, v19);
  __chkstk_darwin(v5, v5);
  uint64_t v7 = (void *)((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = sub_100051B64((uint64_t)v15, v16);
  __chkstk_darwin(v9, v9);
  uint64_t v11 = (void *)((char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = sub_10010E5FC(*v7, *v11, v4);
  sub_10001C2EC((uint64_t)v15);
  sub_10001C2EC((uint64_t)v18);
  return v13;
}

void sub_10010EE90()
{
  sub_10003C7F0();
  uint64_t v15 = sub_100110DC8();
  uint64_t v16 = &off_1002E03A8;
  v14[0] = v2;
  uint64_t v12 = type metadata accessor for OctaneTransactionManager();
  uint64_t v13 = &off_1002E1960;
  v11[0] = v1;
  v0(0);
  swift_allocObject();
  sub_100051B64((uint64_t)v14, v15);
  sub_10002F9C8();
  __chkstk_darwin(v3, v4);
  sub_100110CDC();
  v5();
  sub_100051B64((uint64_t)v11, v12);
  sub_10002F9C8();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = sub_100110CB0(v8, v11[0]);
  v10(v9);
  sub_10010E468();
  sub_10001C2EC((uint64_t)v11);
  sub_10001C2EC((uint64_t)v14);
  sub_10003C780();
}

uint64_t sub_10010F014(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v18 = &off_1002E03A8;
  v16[0] = a1;
  uint64_t v14 = type metadata accessor for OctaneTransactionManager();
  uint64_t v15 = &off_1002E1960;
  v13[0] = a2;
  type metadata accessor for DisableAutoRenewRoute();
  swift_allocObject();
  uint64_t v4 = sub_100051B64((uint64_t)v16, v17);
  __chkstk_darwin(v4, v4);
  (*(void (**)(char *))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100051B64((uint64_t)v13, v14);
  __chkstk_darwin(v7, v7);
  (*(void (**)(char *))(v9 + 16))((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010E468();
  uint64_t v11 = v10;
  sub_10001C2EC((uint64_t)v13);
  sub_10001C2EC((uint64_t)v16);
  return v11;
}

void sub_10010F218()
{
  sub_10003C7F0();
  uint64_t v6 = (void *)sub_100110DC8();
  v21[3] = v6;
  v21[4] = &off_1002E03A8;
  v21[0] = v5;
  uint64_t v19 = type metadata accessor for OctaneTransactionManager();
  uint64_t v20 = &off_1002E1960;
  v18[0] = v4;
  v3(0);
  uint64_t v7 = swift_allocObject();
  sub_100051B64((uint64_t)v21, (uint64_t)v6);
  sub_10002F9C8();
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (uint64_t *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100110CDC();
  v12();
  sub_100051B64((uint64_t)v18, v19);
  sub_10002F9C8();
  __chkstk_darwin(v13, v14);
  uint64_t v16 = sub_100110CB0(v15, v18[0]);
  v17(v16);
  v0(*v11, *v6, v7, v2, v1);
  sub_10001C2EC((uint64_t)v18);
  sub_10001C2EC((uint64_t)v21);
  sub_10003C780();
}

uint64_t sub_10010F388(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v18 = &off_1002E03A8;
  v16[0] = a1;
  uint64_t v14 = type metadata accessor for OctaneTransactionManager();
  uint64_t v15 = &off_1002E1960;
  v13[0] = a2;
  type metadata accessor for PriceIncreaseHelperRoute();
  swift_allocObject();
  uint64_t v4 = sub_100051B64((uint64_t)v16, v17);
  __chkstk_darwin(v4, v4);
  (*(void (**)(char *))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100051B64((uint64_t)v13, v14);
  __chkstk_darwin(v7, v7);
  (*(void (**)(char *))(v9 + 16))((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010E468();
  uint64_t v11 = v10;
  sub_10001C2EC((uint64_t)v13);
  sub_10001C2EC((uint64_t)v16);
  return v11;
}

uint64_t sub_10010F594(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v18 = &off_1002E03A8;
  v16[0] = a1;
  uint64_t v14 = type metadata accessor for OctaneTransactionManager();
  uint64_t v15 = &off_1002E1960;
  v13[0] = a2;
  type metadata accessor for BillingErrorHelperRoute();
  swift_allocObject();
  uint64_t v4 = sub_100051B64((uint64_t)v16, v17);
  __chkstk_darwin(v4, v4);
  (*(void (**)(char *))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100051B64((uint64_t)v13, v14);
  __chkstk_darwin(v7, v7);
  (*(void (**)(char *))(v9 + 16))((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010E468();
  uint64_t v11 = v10;
  sub_10001C2EC((uint64_t)v13);
  sub_10001C2EC((uint64_t)v16);
  return v11;
}

void *sub_10010F7A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v22[3] = type metadata accessor for OctaneConfigurationManager();
  v22[4] = &off_1002E03A8;
  v22[0] = a2;
  v21[3] = type metadata accessor for OctaneTransactionManager();
  v21[4] = &off_1002E1960;
  v21[0] = a3;
  swift_weakInit();
  swift_weakAssign();
  sub_100027788((uint64_t)v22, (uint64_t)v19);
  sub_100027788((uint64_t)v21, (uint64_t)v17);
  uint64_t v7 = sub_100051B64((uint64_t)v19, v20);
  __chkstk_darwin(v7, v7);
  uint64_t v9 = (uint64_t *)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  uint64_t v11 = sub_100051B64((uint64_t)v17, v18);
  __chkstk_darwin(v11, v11);
  uint64_t v13 = (uint64_t *)&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_10010E0F0(0xD000000000000021, 0x8000000100279D90, 0, 4, *v9, *v13, a4);
  sub_10001C2EC((uint64_t)v17);
  sub_10001C2EC((uint64_t)v19);
  swift_release();
  sub_10001C2EC((uint64_t)v21);
  sub_10001C2EC((uint64_t)v22);
  return v15;
}

void *sub_10010F9D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for OctaneConfigurationManager();
  void v14[3] = v6;
  v14[4] = &off_1002E03A8;
  v14[0] = a1;
  a3[11] = a2;
  a3[12] = &off_1002E4D80;
  uint64_t v7 = sub_100051B64((uint64_t)v14, v6);
  __chkstk_darwin(v7, v7);
  uint64_t v9 = (void *)((char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  uint64_t v11 = *v9;
  a3[9] = v6;
  a3[10] = &off_1002E03A8;
  a3[5] = 0;
  a3[6] = v11;
  a3[2] = 0xD00000000000001FLL;
  a3[3] = 0x800000010027E650;
  a3[4] = 0;
  sub_10001C2EC((uint64_t)v14);
  return a3;
}

void *sub_10010FB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for OctaneConfigurationManager();
  v19[3] = v7;
  v19[4] = &off_1002E03A8;
  v19[0] = a4;
  type metadata accessor for BagRoute();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = sub_100051B64((uint64_t)v19, v7);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v9);
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v13 = *(void (**)(char *))(v10 + 16);
  v13((char *)v18 - v12);
  uint64_t v14 = *(void *)((char *)v18 - v12);
  uint64_t v18[3] = v7;
  v18[4] = &off_1002E03A8;
  v18[0] = v14;
  v8[12] = 0;
  swift_unknownObjectWeakInit();
  v8[12] = &off_1002E4D80;
  swift_unknownObjectWeakAssign();
  v8[13] = a2;
  v8[14] = a3;
  swift_release();
  uint64_t v15 = sub_100051B64((uint64_t)v18, v7);
  __chkstk_darwin(v15, v15);
  v13((char *)v18 - v12);
  uint64_t v16 = *(void *)((char *)v18 - v12);
  v8[9] = v7;
  v8[10] = &off_1002E03A8;
  v8[5] = 0;
  v8[6] = v16;
  v8[2] = 0xD000000000000029;
  v8[3] = 0x800000010027E670;
  v8[4] = 0;
  sub_10001C2EC((uint64_t)v18);
  sub_10001C2EC((uint64_t)v19);
  return v8;
}

uint64_t sub_10010FCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = type metadata accessor for OctaneConfigurationManager();
  uint64_t v20 = &off_1002E03A8;
  v18[0] = a1;
  uint64_t v16 = type metadata accessor for DatabaseStore();
  uint64_t v17 = &off_1002F1470;
  v15[0] = a2;
  type metadata accessor for OctaneTransactionManager();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = sub_100051B64((uint64_t)v18, v19);
  __chkstk_darwin(v5, v5);
  uint64_t v7 = (void *)((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = sub_100051B64((uint64_t)v15, v16);
  __chkstk_darwin(v9, v9);
  uint64_t v11 = (void *)((char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = sub_10010DE3C(*v7, *v11, v4);
  sub_10001C2EC((uint64_t)v15);
  sub_10001C2EC((uint64_t)v18);
  return v13;
}

uint64_t sub_10010FEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for OctaneConfigurationManager();
  v29[3] = v8;
  v29[4] = &off_1002E03A8;
  v29[0] = a3;
  uint64_t v9 = type metadata accessor for OctaneTransactionManager();
  uint64_t v27 = v9;
  uint64_t v28 = &off_1002E1960;
  v26[0] = a4;
  type metadata accessor for OctaneServer();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_100051B64((uint64_t)v29, v8);
  __chkstk_darwin(v11, v11);
  uint64_t v13 = (void *)((char *)&v24[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_100051B64((uint64_t)v26, v27);
  __chkstk_darwin(v15, v15);
  uint64_t v17 = (void *)((char *)&v24[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v13;
  uint64_t v20 = *v17;
  v25[3] = v8;
  v25[4] = &off_1002E03A8;
  v24[4] = &off_1002E1960;
  v25[0] = v19;
  v24[3] = v9;
  v24[0] = v20;
  swift_weakInit();
  sub_100027788((uint64_t)v25, v10 + 64);
  sub_100027788((uint64_t)v24, v10 + 104);
  swift_weakAssign();
  uint64_t v21 = sub_1000F54D0(a1, a2, 0);
  swift_retain();
  sub_100106068();
  swift_release();
  sub_10001C2EC((uint64_t)v24);
  sub_10001C2EC((uint64_t)v25);
  sub_10001C2EC((uint64_t)v26);
  sub_10001C2EC((uint64_t)v29);
  return v21;
}

uint64_t sub_100110120(void *a1)
{
  return sub_10009D51C(a1, v1);
}

unint64_t sub_100110128()
{
  unint64_t result = qword_100310B10;
  if (!qword_100310B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B10);
  }
  return result;
}

uint64_t sub_100110174(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001101D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100110224@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100110F10(*(void *)(*(void *)a1 + 16), a2);
}

uint64_t sub_10011023C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100110F10(*(void *)(*(void *)a1 + 24), a2);
}

uint64_t sub_10011024C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_10010CECC(a1, a2, a3, a4, *a5, (uint64_t)&unk_1002E4FB8, (uint64_t)sub_100110C2C, (uint64_t)&unk_1002E4FD0, (void (*)(uint64_t))sub_10010D82C);
}

uint64_t sub_1001102A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_10010CECC(a1, a2, a3, a4, *a5, (uint64_t)&unk_1002E50A8, (uint64_t)sub_100110C2C, (uint64_t)&unk_1002E50C0, (void (*)(uint64_t))sub_10010D8B4);
}

uint64_t sub_100110304(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int *a5)
{
  return sub_10010D314(a1, a2, a3, a4, *a5, a5[1]);
}

uint64_t sub_100110310()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100110360()
{
  return sub_100110304(v0[2], v0[3], v0[4], v0[5], v0 + 6);
}

uint64_t sub_100110370(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100110380()
{
  return swift_release();
}

void sub_10011038C()
{
  sub_100144178(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)())(v0 + 32));
}

uint64_t sub_100110398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100110400()
{
  uint64_t v1 = (int *)(sub_100019524(&qword_100310B18) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v5 + v1[13];
  uint64_t v7 = sub_10024E030();
  if (!sub_10001FA0C(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 584) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, v4 + 873, v2 | 7);
}

uint64_t sub_1001106B8()
{
  uint64_t v1 = *(void *)(sub_100019524(&qword_100310B18) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v0 + v3);
  uint64_t v5 = *(unsigned __int8 *)(v0 + v3 + 1);
  return sub_100103F20(v0 + v2, v4, v5, v0 + ((v3 + 9) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100110754()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011078C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100025FBC();
  uint64_t v4 = sub_100110F6C();
  v5(v4);
  return a2;
}

uint64_t sub_1001107E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_100025FBC();
  uint64_t v4 = sub_100110F6C();
  v5(v4);
  return a2;
}

uint64_t sub_100110830()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[12];
  if (v1 >> 60 != 15) {
    sub_10003F808(v0[11], v1);
  }
  if (v0[15] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 225, 7);
}

uint64_t sub_1001108D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001108E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100110930()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100110970(void *a1)
{
  return sub_10010513C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10011097C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100025FBC();
  sub_10003FDC8();
  v3();
  return a1;
}

void sub_1001109D0()
{
}

uint64_t sub_1001109E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100110A34(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100025FBC();
  uint64_t v4 = sub_100110F58();
  v5(v4);
  return a2;
}

uint64_t sub_100110A88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_100025FBC();
  uint64_t v4 = sub_100110F58();
  v5(v4);
  return a2;
}

uint64_t sub_100110ADC()
{
  return sub_100110BC8((uint64_t (*)(void, void, void, void, void *))sub_10011024C);
}

uint64_t sub_100110B00()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

void sub_100110B48(uint64_t a1)
{
  sub_100143E0C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_100110B60()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100110BB0()
{
  return sub_100110BC8((uint64_t (*)(void, void, void, void, void *))sub_1001102A8);
}

uint64_t sub_100110BC8(uint64_t (*a1)(void, void, void, void, void *))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1 + 6);
}

uint64_t sub_100110BE4()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100110C60()
{
  sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
  return sub_1000A10B0();
}

char *sub_100110CB0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100110CF8()
{
  sub_10001C2A8((void *)(v0 + 104), *(void *)(v0 + 128));
  return sub_1000A10B0();
}

uint64_t sub_100110D4C()
{
  return swift_dynamicCast();
}

uint64_t sub_100110D6C(uint64_t a1)
{
  sub_10001C2A8(v2, *(void *)(v1 + 128));
  return a1;
}

uint64_t sub_100110D94(uint64_t a1)
{
  sub_10001C2A8((void *)(v1 + 64), *(void *)(v1 + 88));
  return a1;
}

void sub_100110DBC(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
}

uint64_t sub_100110DC8()
{
  return type metadata accessor for OctaneConfigurationManager();
}

uint64_t sub_100110DF4(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v1;
  return swift_unknownObjectRetain_n();
}

uint64_t sub_100110E20()
{
  return sub_10024F100();
}

void *sub_100110E4C()
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v4;
  return sub_10010E0F0(v2, v1, 0, 0, v6, v7, v0);
}

uint64_t sub_100110E78()
{
  return sub_10024F100();
}

uint64_t sub_100110EA4()
{
  return sub_10024F100();
}

uint64_t sub_100110ECC()
{
  return type metadata accessor for OctaneConfigurationManager();
}

uint64_t sub_100110EF4()
{
  return 0;
}

uint64_t sub_100110F10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100110F30()
{
  return swift_slowAlloc();
}

uint64_t sub_100110F48()
{
  return 1886680168;
}

uint64_t sub_100110F58()
{
  return v0;
}

uint64_t sub_100110F6C()
{
  return v0;
}

uint64_t sub_100110F80(uint64_t a1, uint64_t a2)
{
  sub_10001C2A8(v2, a2);
  return v3;
}

uint64_t sub_100110FA0(uint64_t a1, unsigned char *a2)
{
  *a2 = 3;
  return swift_willThrow();
}

uint64_t sub_100110FC0(uint64_t a1)
{
  sub_10001C2A8(v2, *(void *)(v1 + 128));
  return a1;
}

uint64_t sub_100110FEC(float a1)
{
  *uint64_t v1 = a1;
  return swift_errorRetain();
}

void sub_100111020(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

void sub_100111034(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_10011107C(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, os_log_t log)
{
  _os_log_impl(a1, log, v10, a4, v9, 0xCu);
}

void sub_10011109C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1001110BC()
{
  *(void *)(v1 - 184) = v0;
  return swift_errorRetain();
}

void *sub_1001110D4()
{
  return &protocol witness table for Bool;
}

uint64_t sub_1001110E0(void *a1)
{
  sub_10001C2A8(a1, a1[3]);
  sub_100111414();
  sub_10024FD10();
  if (!v2)
  {
    sub_10001C2A8(v5, v5[3]);
    sub_100111414();
    char v1 = sub_10024FA80();
    sub_10001C2EC((uint64_t)v5);
  }
  sub_10001C2EC((uint64_t)a1);
  return v1 & 1;
}

uint64_t sub_100111224(void *a1)
{
  sub_10001C2A8(a1, a1[3]);
  sub_10024FD30();
  sub_100051B64((uint64_t)v2, v3);
  sub_10024FAA0();
  return sub_10001C2EC((uint64_t)v2);
}

uint64_t sub_1001112B8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001110E0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001112E8(void *a1)
{
  return sub_100111224(a1);
}

uint64_t sub_100111304(char a1)
{
  return a1 & 1;
}

unsigned char *storeEnumTagSinglePayload for FlexiblyDecodableBool(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001113D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblyDecodableBool()
{
  return &type metadata for FlexiblyDecodableBool;
}

uint64_t sub_100111414()
{
  return v0;
}

uint64_t sub_100111428()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011146C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001114D4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t sub_10011157C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t sub_1001115E4(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 58))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100111638(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for ButtonAction()
{
}

uint64_t sub_1001116A8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8298;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_1001116F4(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 7959874;
      break;
    case 2:
      unint64_t result = 1869901639;
      break;
    case 3:
      unint64_t result = 0x4165636976726553;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100111788(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8318;
  v6._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_1001117D0()
{
  return 1852399981;
}

uint64_t sub_1001117E0(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8350;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100111834(char a1)
{
  if (a1) {
    return 0x2E746E756F636361;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

uint64_t sub_10011187C(unsigned __int8 *a1, char *a2)
{
  return sub_1000FAD5C(*a1, *a2);
}

Swift::Int sub_100111888()
{
  return sub_1001D3704(*v0);
}

uint64_t sub_100111890(uint64_t a1)
{
  return sub_1000D1D20(a1, *v1);
}

Swift::Int sub_100111898(uint64_t a1)
{
  return sub_1000D3678(a1, *v1);
}

uint64_t sub_1001118A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001116A8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001118D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001116F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001118FC()
{
  return sub_10024EA50();
}

uint64_t sub_10011195C()
{
  return sub_10024EA00();
}

BOOL sub_1001119B8@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100111788(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1001119F0(void *a1@<X8>)
{
  *a1 = 1852399981;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_100111A04()
{
  return sub_10024EA50();
}

uint64_t sub_100111A64()
{
  return sub_10024EA00();
}

uint64_t sub_100111AB4(char *a1, char *a2)
{
  return sub_1000F82BC(*a1, *a2);
}

Swift::Int sub_100111AC0()
{
  return sub_1001D3728();
}

uint64_t sub_100111AC8()
{
  return sub_1000D0510();
}

Swift::Int sub_100111AD0()
{
  return sub_1000D29E8();
}

uint64_t sub_100111AD8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001117E0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100111B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100111834(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100111B34()
{
  return sub_10024EA50();
}

uint64_t sub_100111B94()
{
  return sub_10024EA00();
}

uint64_t sub_100111BE4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D83A0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_100111C34(char a1)
{
  uint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D61726150797562;
      break;
    case 2:
      uint64_t result = 0x656D614E6D657469;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 0x746567726174;
      break;
    case 5:
      uint64_t result = 0x6567726174627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100111CF8(char a1)
{
  uint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D61726150797562;
      break;
    case 2:
      uint64_t result = 0x656D614E6D657469;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 0x746567726174;
      break;
    case 5:
      uint64_t result = 0x6567726174627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100111DBC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_100310B58);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1001124E4();
  sub_10024FD40();
  sub_1000458B4(v3, (uint64_t)&v19, &qword_100310B60);
  sub_1000458B4((uint64_t)&v19, (uint64_t)&v16, &qword_100310B60);
  v15[4] = 0;
  sub_100112614();
  sub_100112DA8();
  if (!v2)
  {
    void v15[3] = 1;
    sub_100052BD4();
    v15[2] = 2;
    sub_100052BD4();
    v15[1] = 3;
    sub_100052BD4();
    sub_1000458B4(v3 + 56, (uint64_t)&v18, &qword_100310B70);
    sub_1000458B4((uint64_t)&v18, (uint64_t)v15, &qword_100310B70);
    v14[1] = 4;
    sub_100112660();
    sub_100112DA8();
    sub_1000458B4(v3 + 57, (uint64_t)&v17, &qword_100310B80);
    sub_1000458B4((uint64_t)&v17, (uint64_t)v14, &qword_100310B80);
    v13[4] = 5;
    sub_1001126AC();
    sub_100112DA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_100111FF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100019524(&qword_100310B30);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_10001C2A8(a1, a1[3]);
  sub_1001124E4();
  sub_10024FD20();
  if (v2)
  {
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100112530();
    sub_100112DE0();
    uint64_t v7 = sub_100112DC4();
    uint64_t v9 = v8;
    uint64_t v22 = v7;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100112DC4();
    uint64_t v12 = v11;
    uint64_t v20 = v10;
    uint64_t v21 = a2;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_100112DC4();
    uint64_t v15 = v14;
    uint64_t v19 = v13;
    sub_10011257C();
    swift_bridgeObjectRetain();
    sub_10024F800();
    sub_1001125C8();
    sub_100112DE0();
    uint64_t v16 = sub_100112D90();
    v17(v16);
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v21 = v25;
    *(void *)(v21 + 8) = v22;
    *(void *)(v21 + 16) = v9;
    *(void *)(v21 + 24) = v20;
    *(void *)(v21 + 32) = v12;
    *(void *)(v21 + 40) = v19;
    *(void *)(v21 + 48) = v15;
    *(unsigned char *)(v21 + 56) = v24;
    *(unsigned char *)(v21 + 57) = v23;
  }
  return result;
}

uint64_t sub_100112304()
{
  uint64_t result = sub_1000DBFF8((uint64_t)&off_1002D64C0);
  qword_10034C078 = result;
  return result;
}

uint64_t sub_10011232C(char *a1)
{
  return sub_1000FB558(*a1);
}

Swift::Int sub_100112338()
{
  return sub_1001D3734(*v0);
}

uint64_t sub_100112340()
{
  return sub_1000D2314();
}

Swift::Int sub_100112348(uint64_t a1)
{
  return sub_1000D3934(a1, *v1);
}

uint64_t sub_100112350@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100111BE4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100112380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100111C34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001123AC()
{
  return sub_100111CF8(*v0);
}

uint64_t sub_1001123B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100111C30();
  *a1 = result;
  return result;
}

uint64_t sub_1001123DC(uint64_t a1)
{
  unint64_t v2 = sub_1001124E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100112418(uint64_t a1)
{
  unint64_t v2 = sub_1001124E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100112454@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100111FF4(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 42) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1001124A0(void *a1)
{
  return sub_100111DBC(a1);
}

unint64_t sub_1001124E4()
{
  unint64_t result = qword_100310B38;
  if (!qword_100310B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B38);
  }
  return result;
}

unint64_t sub_100112530()
{
  unint64_t result = qword_100310B40;
  if (!qword_100310B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B40);
  }
  return result;
}

unint64_t sub_10011257C()
{
  unint64_t result = qword_100310B48;
  if (!qword_100310B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B48);
  }
  return result;
}

unint64_t sub_1001125C8()
{
  unint64_t result = qword_100310B50;
  if (!qword_100310B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B50);
  }
  return result;
}

unint64_t sub_100112614()
{
  unint64_t result = qword_100310B68;
  if (!qword_100310B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B68);
  }
  return result;
}

unint64_t sub_100112660()
{
  unint64_t result = qword_100310B78;
  if (!qword_100310B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B78);
  }
  return result;
}

unint64_t sub_1001126AC()
{
  unint64_t result = qword_100310B88;
  if (!qword_100310B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ButtonAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001127C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonAction.CodingKeys()
{
  return &type metadata for ButtonAction.CodingKeys;
}

unsigned char *sub_1001127FC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001128C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Subtarget()
{
}

unsigned char *sub_1001128FC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100112998);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for Target()
{
}

unsigned char *sub_1001129CC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100112A98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ButtonActionKind()
{
}

unint64_t sub_100112AD0()
{
  unint64_t result = qword_100310B90;
  if (!qword_100310B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B90);
  }
  return result;
}

unint64_t sub_100112B20()
{
  unint64_t result = qword_100310B98;
  if (!qword_100310B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310B98);
  }
  return result;
}

unint64_t sub_100112B70()
{
  unint64_t result = qword_100310BA0;
  if (!qword_100310BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BA0);
  }
  return result;
}

unint64_t sub_100112BC0()
{
  unint64_t result = qword_100310BA8;
  if (!qword_100310BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BA8);
  }
  return result;
}

unint64_t sub_100112C10()
{
  unint64_t result = qword_100310BB0;
  if (!qword_100310BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BB0);
  }
  return result;
}

unint64_t sub_100112C60()
{
  unint64_t result = qword_100310BB8;
  if (!qword_100310BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BB8);
  }
  return result;
}

unint64_t sub_100112CAC()
{
  unint64_t result = qword_100310BC0;
  if (!qword_100310BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BC0);
  }
  return result;
}

unint64_t sub_100112CF8()
{
  unint64_t result = qword_100310BC8;
  if (!qword_100310BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BC8);
  }
  return result;
}

unint64_t sub_100112D44()
{
  unint64_t result = qword_100310BD0;
  if (!qword_100310BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310BD0);
  }
  return result;
}

uint64_t sub_100112D90()
{
  return v0;
}

uint64_t sub_100112DA8()
{
  return sub_10024F910();
}

uint64_t sub_100112DC4()
{
  return sub_10024F7C0();
}

uint64_t sub_100112DE0()
{
  return sub_10024F800();
}

uint64_t CircularBuffer.init(initialCapacity:)(unint64_t a1)
{
  sub_10024F030();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v2, v3);
  sub_1001185D8();
  if ((a1 & 0x8000000000000000) != 0 || HIDWORD(a1))
  {
    sub_10003C4F8();
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  else
  {
    sub_10011355C(a1);
    sub_100118960();
    return sub_10024F4F0();
  }
  return result;
}

uint64_t CircularBuffer.count.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - a2;
  if (a3 < a2)
  {
    sub_10024F030();
    v3 += _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  }
  return v3;
}

void CircularBuffer.append(_:)()
{
  sub_10003C7F0();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v6 = v5;
  sub_10007A8E8();
  __chkstk_darwin(v7, v8);
  sub_1001185C8();
  uint64_t v9 = v0[2];
  sub_10007A8C4();
  sub_100118854();
  v10();
  sub_1000195B4(v1, 0, 1, v3);
  sub_1001189B8();
  sub_10024F470();
  uint64_t v11 = *v0;
  sub_100118860();
  sub_100117F14(v12, v13);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 40))(v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v9, v1, v4);
  CircularBuffer.advanceTailIdx(by:)(1);
  if (v0[1] == v0[2]) {
    CircularBuffer._doubleCapacity()();
  }
  sub_10003C780();
}

Swift::Void __swiftcall CircularBuffer.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  sub_10024F030();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v3, v4);
  sub_1001185D8();
  if (keepingCapacity)
  {
    Swift::Int v5 = CircularBuffer.count.getter(*v1, v1[1], v1[2]);
    CircularBuffer.removeFirst(_:)(v5);
  }
  else
  {
    sub_10024F510();
    sub_10024F4E0(0);
    sub_100118960();
    sub_10024F4D0();
  }
  v1[1] = 0;
  v1[2] = 0;
}

uint64_t CircularBuffer.first.getter@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a2 == a3)
  {
    uint64_t v7 = 1;
  }
  else
  {
    unint64_t v9 = CircularBuffer.startIndex.getter(a1, a2, a3);
    unint64_t v10 = sub_10011847C(v9);
    CircularBuffer.subscript.getter(v10, a1, v11, v12, a4);
    uint64_t v7 = 0;
  }
  return sub_1000195B4(a5, v7, 1, a4);
}

void CircularBuffer.removeFirst()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  sub_10024F030();
  sub_10007A8E8();
  __chkstk_darwin(v6, v7);
  sub_1001185D8();
  CircularBuffer.first.getter(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), v5, v3);
  sub_1001187A0(v3, 1, v5);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    sub_10007A8C4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a2, v3, v5);
    sub_100116D88();
  }
}

uint64_t CircularBuffer.capacity.getter()
{
  sub_10024F030();
  return _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
}

BOOL CircularBuffer.isEmpty.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

void CircularBuffer.prepend(_:)()
{
  sub_10003C984();
  uint64_t v3 = *(void *)(v2 + 16);
  sub_10024F030();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v4, v5);
  sub_1001185D8();
  swift_retain();
  Swift::Int v6 = CircularBuffer.indexBeforeHeadIdx()();
  swift_release();
  sub_10007A8C4();
  sub_100118854();
  v7();
  sub_1000195B4(v1, 0, 1, v3);
  sub_1001189B8();
  sub_10024F470();
  sub_100117F14(v6, *v0);
  sub_100118860();
  v8();
  CircularBuffer.advanceHeadIdx(by:)(-1);
  if (v0[1] == v0[2]) {
    CircularBuffer._doubleCapacity()();
  }
  sub_10003C8C8();
}

unint64_t CircularBuffer.startIndex.getter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  CircularBuffer.count.getter(a1, a2, a3);
  unint64_t v5 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(a2, v4, a2);
  return sub_10011847C(v5);
}

uint64_t CircularBuffer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10024F030();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v13 - v8;
  _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
  uint64_t result = sub_1001187A0((uint64_t)v9, 1, a5);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    sub_10007A8C4();
    sub_1001187B8();
    return v12();
  }
  return result;
}

unint64_t CircularBuffer.index(after:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100113DA4(a1, a2, a3, a4, a5, 1);
}

uint64_t CircularBuffer.init()()
{
  return CircularBuffer.init(initialCapacity:)(0x10uLL);
}

uint64_t sub_10011355C(int a1)
{
  unsigned int v1 = __clz(a1 - 1);
  if (v1) {
    unsigned int v2 = 1 << -(char)v1;
  }
  else {
    unsigned int v2 = 0;
  }
  if (a1) {
    return v2;
  }
  else {
    return 1;
  }
}

uint64_t sub_100113584(uint64_t result)
{
  if (!result) {
    return 1;
  }
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v1 = __clz(result - 1);
    if (v1) {
      return 1 << -(char)v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t IOError.errnoCode.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t CircularBuffer.tailBackingIndex.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t CircularBuffer.mask.getter()
{
  return _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0() - 1;
}

Swift::Void __swiftcall CircularBuffer.advanceHeadIdx(by:)(Swift::Int by)
{
  Swift::Int v2 = *(void *)(v1 + 8) + by;
  *(void *)(v1 + 8) = CircularBuffer.mask.getter() & v2;
}

Swift::Int __swiftcall CircularBuffer.indexAdvanced(index:by:)(Swift::Int index, Swift::Int by)
{
  return CircularBuffer.mask.getter() & (by + index);
}

Swift::Void __swiftcall CircularBuffer.advanceTailIdx(by:)(Swift::Int by)
{
  Swift::Int v2 = *(void *)(v1 + 16) + by;
  *(void *)(v1 + 16) = CircularBuffer.mask.getter() & v2;
}

Swift::Int __swiftcall CircularBuffer.indexBeforeHeadIdx()()
{
  return CircularBuffer.mask.getter() & (v0 - 1);
}

Swift::Int __swiftcall CircularBuffer.indexBeforeTailIdx()()
{
  return CircularBuffer.mask.getter() & (v0 - 1);
}

uint64_t CircularBuffer.Index.isIndexGEQHeadIndex.getter(unint64_t a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t CircularBuffer.Index.isIndexGEQHeadIndex.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 7) = result;
  return result;
}

uint64_t (*CircularBuffer.Index.isIndexGEQHeadIndex.modify())(void)
{
  return debugOnly(_:);
}

uint64_t CircularBuffer.Index.backingIndex.getter(uint64_t result)
{
  return result;
}

uint64_t CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) != 0 || HIDWORD(a1))
  {
    sub_10003C4F8();
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  else
  {
    uint64_t v3 = 0x1FFFFFF00000000;
    if ((uint64_t)a1 < a3) {
      uint64_t v3 = 0xFFFFFF00000000;
    }
    return v3 | a1;
  }
  return result;
}

uint64_t static CircularBuffer.Index.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xFFFFFFFFFFFFFFLL) == (a2 & 0xFFFFFFFFFFFFFFLL)) {
    return ((a1 & 0x100000000000000) == 0) ^ HIBYTE(a2) & 1u;
  }
  else {
    return 0;
  }
}

BOOL static CircularBuffer.Index.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 < (unint64_t)a2;
  if ((a2 & 0x100000000000000) != 0) {
    BOOL v2 = 0;
  }
  BOOL v3 = a1 < (unint64_t)a2;
  if ((a2 & 0x100000000000000) == 0) {
    BOOL v3 = 1;
  }
  if ((a1 & 0x100000000000000) != 0) {
    return v3;
  }
  else {
    return v2;
  }
}

BOOL CircularBuffer.Index.isValidIndex(for:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return (~a4 & 0xFFFFFF00000000) == 0
      || ((a4 >> 24) & 0xFFFF00 | BYTE6(a4)) == CircularBuffer.count.getter(a1, a2, a3);
}

uint64_t sub_100113880(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001138BC(a1, a2, a3, a4, (uint64_t (*)(unint64_t, unint64_t))static CircularBuffer.Index.< infix(_:_:));
}

uint64_t sub_1001138A4(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001138BC(a1, a2, a3, a4, (uint64_t (*)(unint64_t, unint64_t))static CircularBuffer.Index.== infix(_:_:));
}

uint64_t sub_1001138BC(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t, unint64_t))
{
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v5 = 0x100000000000000;
  }
  else {
    uint64_t v5 = 0;
  }
  unint64_t v6 = v5 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v7 = 0x100000000000000;
  }
  else {
    uint64_t v7 = 0;
  }
  return a5(v6, v7 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

void sub_100113910()
{
}

void CircularBuffer.description.getter()
{
  sub_10003C984();
  uint64_t v30 = v1;
  uint64_t v33 = v2;
  uint64_t v34 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10024F030();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_10002F9C8();
  uint64_t v9 = v8;
  sub_10007A8E8();
  __chkstk_darwin(v10, v11);
  sub_100118998();
  sub_10024F030();
  sub_10007A8E8();
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v39 = 8283;
  unint64_t v40 = 0xE200000000000000;
  uint64_t v29 = v5;
  v38._countAndFlagsBits = v5;
  sub_10024F510();
  swift_getWitnessTable();
  sub_1000ACF34();
  sub_10024E970();
  uint64_t v37 = v35;
  sub_10024F6E0();
  sub_10024F6B0();
  uint64_t v32 = sub_10024F6D0();
  sub_10024F6C0();
  sub_1001187A0((uint64_t)v15, 1, TupleTypeMetadata2);
  if (!v16)
  {
    sub_10007A8C4();
    uint64_t v31 = *(uint64_t (**)(char *, char *, uint64_t))(v17 + 32);
    char v18 = (void (**)(char *, uint64_t))(v9 + 8);
    while (1)
    {
      uint64_t v19 = *(void *)v15;
      uint64_t v20 = *(int *)(TupleTypeMetadata2 + 48);
      *(void *)uint64_t v0 = *(void *)v15;
      uint64_t v21 = v31(&v0[v20], &v15[v20], v6);
      if (v19 == v33) {
        break;
      }
      if (v19 == v30)
      {
        v23._countAndFlagsBits = 62;
        goto LABEL_7;
      }
LABEL_8:
      __chkstk_darwin(v21, v22);
      *(&v28 - 2) = v34;
      sub_1000C68EC((void (*)(uint64_t, uint64_t))sub_100117F30, (uint64_t)&type metadata for String, v24, (uint64_t)&v35);
      if (v36) {
        v25._countAndFlagsBits = v35;
      }
      else {
        v25._countAndFlagsBits = 8287;
      }
      if (v36) {
        Swift::String v26 = v36;
      }
      else {
        Swift::String v26 = (void *)0xE200000000000000;
      }
      v25._object = v26;
      sub_10024E800(v25);
      swift_bridgeObjectRelease();
      (*v18)(v0, TupleTypeMetadata2);
      sub_10024F6C0();
      sub_1001187A0((uint64_t)v15, 1, TupleTypeMetadata2);
      if (v16) {
        goto LABEL_16;
      }
    }
    v23._countAndFlagsBits = 60;
LABEL_7:
    v23._object = (void *)0xE100000000000000;
    sub_10024E800(v23);
    goto LABEL_8;
  }
LABEL_16:
  swift_release();
  v41._countAndFlagsBits = 93;
  v41._object = (void *)0xE100000000000000;
  sub_10024E800(v41);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  sub_10024F330(37);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = 0xD000000000000012;
  v38._object = (void *)0x800000010027E7F0;
  uint64_t v27 = v29;
  uint64_t v35 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  v42._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v42);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 0x654C676E6972202CLL;
  v43._object = (void *)0xEE00203A6874676ELL;
  sub_10024E800(v43);
  uint64_t v35 = CircularBuffer.count.getter(v27, v33, v30);
  v44._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v44);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 41;
  v45._object = (void *)0xE100000000000000;
  sub_10024E800(v45);
  sub_10024E800(v38);
  swift_bridgeObjectRelease();
  sub_10003C8C8();
}

unint64_t CircularBuffer.index(_:offsetBy:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = CircularBuffer.mask.getter() & (a2 + a1);
  CircularBuffer.count.getter(a3, a4, a5);
  unint64_t v10 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(v8, v9, a4);
  return sub_10011847C(v10);
}

unint64_t CircularBuffer.index(before:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100113DA4(a1, a2, a3, a4, a5, -1);
}

unint64_t sub_100113DA4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = CircularBuffer.index(_:offsetBy:)(a1, a6, a2, a3, a4);
  return sub_10011847C(v6);
}

void CircularBuffer.subscript.setter()
{
  sub_10003C7F0();
  unsigned int v3 = v2;
  uint64_t v4 = sub_100118664();
  sub_10002F9C8();
  uint64_t v6 = v5;
  sub_10007A8E8();
  __chkstk_darwin(v7, v8);
  sub_1001185C8();
  uint64_t v9 = sub_1001185E8();
  v10(v9);
  sub_100118594(v1, 0);
  sub_10024F470();
  uint64_t v11 = *v0;
  sub_100117F14(v3, v11);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 40))(v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v3, v1, v4);
  uint64_t v12 = sub_1000ACF34();
  v13(v12);
  sub_10003C780();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t);

  sub_10003C984();
  sub_10002F9C8();
  __chkstk_darwin(v1, v2);
  unsigned int v3 = *v0;
  uint64_t v4 = v0[1];
  uint64_t v5 = v0[2];
  uint64_t v6 = CircularBuffer.startIndex.getter(*v0, v4, v5);
  uint64_t v7 = sub_100118648(v6);
  CircularBuffer.index(_:offsetBy:)(v7, v8, v3, v4, v5);
  uint64_t v9 = sub_1001185E8();
  v10(v9);
  CircularBuffer.subscript.setter();
  uint64_t v11 = sub_1000ACF34();
  v12(v11);
  sub_10003C8C8();
}

void (*CircularBuffer.subscript.modify())()
{
  uint64_t v4 = sub_1001189E4();
  *unsigned int v3 = v4;
  *uint64_t v4 = v2;
  v4[1] = v0;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[2] = v1;
  v4[3] = v5;
  sub_10002F9C8();
  *(void *)(v6 + 32) = v7;
  size_t v9 = *(void *)(v8 + 64);
  v4[5] = malloc(v9);
  v4[6] = malloc(v9);
  CircularBuffer.subscript.getter(v2 & 0x1FFFFFFFFFFFFFFLL, *v1, v10, v11, v5);
  return sub_100113FAC;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;

  uint64_t v4 = sub_1001189E4();
  *unsigned int v3 = v4;
  *uint64_t v4 = v2;
  v4[1] = v0;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[2] = v1;
  v4[3] = v5;
  sub_10002F9C8();
  *(void *)(v6 + 32) = v7;
  size_t v9 = *(void *)(v8 + 64);
  v4[5] = malloc(v9);
  v4[6] = malloc(v9);
  CircularBuffer.subscript.getter();
  return sub_10011678C;
}

void sub_100113FAC()
{
  sub_10003C7F0();
  uint64_t v1 = *(void **)(*(void *)v0 + 40);
  uint64_t v2 = *(void **)(*(void *)v0 + 48);
  if (v3)
  {
    uint64_t v4 = sub_10011850C();
    v5(v4);
    CircularBuffer.subscript.setter();
    uint64_t v6 = sub_100118544();
    v7(v6);
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  free(v2);
  free(v1);
  sub_10003C780();
  free(v8);
}

unint64_t CircularBuffer.endIndex.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  CircularBuffer.count.getter(a1, a2, a3);
  unint64_t v6 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(a3, v5, a2);
  return sub_10011847C(v6);
}

unint64_t CircularBuffer.distance(from:to:)(uint64_t a1, uint64_t a2)
{
  sub_10024F030();
  uint64_t v4 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  if ((a1 & 0x100000000000000) != 0)
  {
    if ((a2 & 0x100000000000000) != 0) {
      return a2 - (unint64_t)a1;
    }
    else {
      return v4 - a1 + a2;
    }
  }
  else if ((a2 & 0x100000000000000) != 0)
  {
    unint64_t v6 = a1 - (unint64_t)a2 + v4;
    unint64_t result = -(uint64_t)v6;
    if (__OFSUB__(0, v6)) {
      __break(1u);
    }
  }
  else
  {
    return a2 - (unint64_t)a1;
  }
  return result;
}

void sub_100114118(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_100114130(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_100114148(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void, void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a2(*v3, v3[1], v3[2], *(void *)(a1 + 16));
  sub_1001184F4(v5);
  *(_WORD *)(a3 + 4) = v6;
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_100118918(v8);
}

void (*sub_100114194(void *a1, unsigned int *a2, uint64_t a3))(void *a1)
{
  char v7 = malloc(0x28uLL);
  *a1 = v7;
  uint64_t v8 = 0x100000000000000;
  if (!*((unsigned char *)a2 + 7)) {
    uint64_t v8 = 0;
  }
  v7[4] = sub_100114278((uint64_t)v7, v8 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2, *v3, v3[1], v3[2], *(void *)(a3 + 16));
  return sub_100114230;
}

void sub_100114230(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_100114278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(void *a1)
{
  sub_10002F9C8();
  *uint64_t v10 = v11;
  v10[1] = v12;
  *(void *)(a1 + 16) = malloc(*(void *)(v13 + 64));
  CircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3, v14, v15, a6);
  return sub_100114310;
}

void sub_100114310(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);
  free(v1);
}

unint64_t sub_10011435C@<X0>(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *((unsigned __int16 *)a1 + 6);
  uint64_t v6 = *((unsigned __int8 *)a1 + 14);
  int v7 = *((unsigned __int8 *)a1 + 15);
  uint64_t v8 = 0x100000000000000;
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v9 = 0x100000000000000;
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v10 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | v9;
  if (!v7) {
    uint64_t v8 = 0;
  }
  unint64_t result = CircularBuffer.subscript.getter(v10, v4 | (v5 << 32) | (v6 << 48) | v8, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16));
  *a2 = result;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

unint64_t CircularBuffer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v8 = CircularBuffer.startIndex.getter(a3, a4, a5);
  unint64_t v9 = sub_10011847C(v8);
  unint64_t result = CircularBuffer.distance(from:to:)(v9, a1 & 0x1FFFFFFFFFFFFFFLL);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = sub_10011867C(a3);
    unint64_t result = CircularBuffer.distance(from:to:)(a2 & 0x1FFFFFFFFFFFFFFLL, v11 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v11) != 0) << 56));
    if ((result & 0x8000000000000000) == 0) {
      return swift_retain();
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1001144A8(uint64_t a1)
{
  return CircularBuffer.isEmpty.getter(a1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1001144B0()
{
  return CircularBuffer.count.getter(*v0, v0[1], v0[2]);
}

void sub_1001144C4(void *a1@<X8>)
{
  *a1 = 0x300000000000000;
}

void sub_1001144E4(uint64_t a1@<X8>)
{
}

void sub_1001144FC(uint64_t a1)
{
}

void sub_100114514()
{
}

void (*sub_100114540(void *a1, unsigned int *a2, uint64_t a3))()
{
  int v7 = malloc(0x38uLL);
  *a1 = v7;
  *int v7 = v3;
  v7[1] = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  _OWORD v7[2] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[3] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[4] = malloc(v10);
  v7[5] = malloc(v10);
  uint64_t v13 = *a2;
  *((_DWORD *)v7 + 12) = v13;
  uint64_t v14 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 26) = v14;
  uint64_t v15 = *((unsigned __int8 *)a2 + 6);
  *((unsigned char *)v7 + 54) = v15;
  int v16 = *((unsigned __int8 *)a2 + 7);
  *((unsigned char *)v7 + 55) = v16;
  BOOL v17 = v16 == 0;
  uint64_t v18 = 0x100000000000000;
  if (v17) {
    uint64_t v18 = 0;
  }
  CircularBuffer.subscript.getter(v18 | (v15 << 48) | (v14 << 32) | v13, *v3, v11, v12, v8);
  return sub_100114658;
}

void sub_100114658()
{
  sub_10003C7F0();
  uint64_t v1 = *(void **)(*(void *)v0 + 32);
  uint64_t v2 = *(void **)(*(void *)v0 + 40);
  if (v3)
  {
    uint64_t v4 = sub_10011850C();
    v5(v4);
    CircularBuffer.subscript.setter();
    uint64_t v6 = sub_100118544();
    v7(v6);
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  free(v2);
  free(v1);
  sub_10003C780();
  free(v8);
}

unint64_t sub_10011472C(uint64_t *a1, unsigned int *a2)
{
  uint64_t v2 = 0x100000000000000;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v3 = 0x100000000000000;
  }
  else {
    uint64_t v3 = 0;
  }
  if (!*((unsigned char *)a2 + 15)) {
    uint64_t v2 = 0;
  }
  return CircularBuffer.subscript.setter(*a1, a1[1], a1[2], *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | v3, a2[2] | ((unint64_t)*((unsigned __int16 *)a2 + 6) << 32) | ((unint64_t)*((unsigned __int8 *)a2+ 14) << 48) | v2);
}

unint64_t CircularBuffer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_100118820();
  unint64_t v10 = CircularBuffer.startIndex.getter(v7, v8, v9);
  unint64_t v11 = sub_10011847C(v10);
  unint64_t result = CircularBuffer.distance(from:to:)(v11, a4 & 0x1FFFFFFFFFFFFFFLL);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = sub_100118820();
    unint64_t v16 = CircularBuffer.endIndex.getter(v13, v14, v15);
    unint64_t result = CircularBuffer.distance(from:to:)(a5 & 0x1FFFFFFFFFFFFFFLL, v16 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v16) != 0) << 56));
    if ((result & 0x8000000000000000) == 0)
    {
      swift_getWitnessTable();
      CircularBuffer.replaceSubrange<A>(_:with:)();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

void (*sub_1001148A4(void *a1, unsigned int *a2, uint64_t a3))()
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[3] = v3;
  v7[4] = a3;
  uint64_t v8 = *a2;
  uint64_t v9 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 24) = v9;
  uint64_t v10 = *((unsigned __int8 *)a2 + 6);
  *((unsigned char *)v7 + 52) = v10;
  int v11 = *((unsigned __int8 *)a2 + 7);
  *((unsigned char *)v7 + 53) = v11;
  uint64_t v12 = a2[2];
  *((_DWORD *)v7 + 10) = v8;
  *((_DWORD *)v7 + 11) = v12;
  uint64_t v13 = *((unsigned __int16 *)a2 + 6);
  *((_WORD *)v7 + 25) = v13;
  uint64_t v14 = *((unsigned __int8 *)a2 + 14);
  *((unsigned char *)v7 + 54) = v14;
  uint64_t v15 = v8 | (v9 << 32) | (v10 << 48);
  int v16 = *((unsigned __int8 *)a2 + 15);
  *((unsigned char *)v7 + 55) = v16;
  if (v11) {
    uint64_t v17 = 0x100000000000000;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = 0x100000000000000;
  }
  else {
    uint64_t v18 = 0;
  }
  *uint64_t v7 = CircularBuffer.subscript.getter(v15 | v17, v12 | (v13 << 32) | (v14 << 48) | v18, *(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16));
  v7[1] = v19;
  _OWORD v7[2] = v20;
  return sub_10011498C;
}

void sub_10011498C()
{
  sub_10003C7F0();
  uint64_t v1 = **v0;
  if (v2)
  {
    uint64_t v3 = swift_retain();
    sub_1001186EC(v3);
    swift_release();
  }
  else
  {
    sub_1001186EC(v1);
  }
  sub_10003C780();
  free(v4);
}

void (*CircularBuffer.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v9 = malloc(0x38uLL);
  *a1 = v9;
  v9[5] = a4;
  v9[6] = v4;
  v9[3] = a2;
  v9[4] = a3;
  *uint64_t v9 = CircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3 & 0x1FFFFFFFFFFFFFFLL, *(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16));
  v9[1] = v10;
  v9[2] = v11;
  return sub_100114AD0;
}

void sub_100114AD0()
{
  sub_10003C7F0();
  uint64_t v1 = **v0;
  if (v2)
  {
    uint64_t v3 = swift_retain();
    sub_100118710(v3);
    swift_release();
  }
  else
  {
    sub_100118710(v1);
  }
  sub_10003C780();
  free(v4);
}

uint64_t sub_100114B48()
{
  return sub_10024E670();
}

uint64_t sub_100114BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = swift_retain();
  unint64_t v7 = CircularBuffer.startIndex.getter(v6, v4, v5);
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = WORD2(v7);
  *(unsigned char *)(a1 + 30) = BYTE6(v7);
  *(unsigned char *)(a1 + 31) = HIBYTE(v7) != 0;
  return result;
}

uint64_t sub_100114C58(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_100114CAC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Collection._copyToContiguousArray()(a1, WitnessTable);
}

void CircularBuffer.replaceSubrange<A>(_:with:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v167 = v6;
  unint64_t v169 = v7;
  uint64_t v9 = v8;
  Swift::Int v10 = HIDWORD(v8);
  uint64_t v160 = v11;
  uint64_t v12 = *(void *)(v11 + 16);
  unint64_t v13 = HIWORD(v8);
  uint64_t v14 = HIBYTE(v8) & 1;
  uint64_t v15 = sub_10024F030();
  v143[2] = sub_10024FD90();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v16, v17);
  sub_10011898C();
  sub_10011874C(v18);
  uint64_t v166 = v3;
  uint64_t v19 = *(void *)(v3 + 8);
  sub_1001189AC();
  uint64_t v148 = sub_10024F350();
  sub_10002F9C8();
  uint64_t v147 = v20;
  sub_10007A8E8();
  __chkstk_darwin(v21, v22);
  sub_10011898C();
  sub_10011874C(v23);
  sub_1001189AC();
  uint64_t v146 = sub_10024F5A0();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v24, v25);
  sub_10011898C();
  sub_10011874C(v26);
  sub_10002F9C8();
  unint64_t v170 = v27;
  __chkstk_darwin(v28, v29);
  sub_1000589AC();
  sub_10011874C(v30);
  uint64_t v173 = v15;
  sub_10011852C();
  uint64_t v159 = v31;
  __chkstk_darwin(v32, v33);
  sub_1000AC748();
  uint64_t v158 = v34;
  __chkstk_darwin(v35, v36);
  uint64_t v174 = (uint64_t)v143 - v37;
  sub_10002F9C8();
  uint64_t v165 = v38;
  __chkstk_darwin(v39, v40);
  sub_1000AC748();
  uint64_t v155 = v41;
  __chkstk_darwin(v42, v43);
  sub_10011874C((uint64_t)v143 - v44);
  uint64_t v162 = v19;
  uint64_t v168 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  uint64_t v156 = v45;
  sub_10007A8E8();
  __chkstk_darwin(v46, v47);
  sub_10011898C();
  uint64_t v171 = v48;
  uint64_t v49 = type metadata accessor for CircularBuffer.Index();
  LODWORD(v179) = v9;
  Swift::Int v163 = v10;
  WORD2(v179) = v10;
  uint64_t v50 = v14;
  BYTE6(v179) = v13;
  HIBYTE(v179) = v14;
  uint64_t v51 = v1[1];
  uint64_t v164 = v1;
  uint64_t v52 = v1[2];
  uint64_t v53 = swift_retain();
  CircularBuffer.startIndex.getter(v53, v51, v52);
  swift_release();
  sub_1001187F4();
  __int16 v176 = v55;
  char v57 = !v56;
  char v177 = v54;
  BOOL v178 = v57;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1001187DC();
  if ((sub_10024E610() & 1) == 0)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v153 = v50;
  unint64_t v59 = HIWORD(v169);
  unint64_t v179 = v169 & 0x1FFFFFFFFFFFFFFLL;
  unint64_t v145 = HIDWORD(v169);
  uint64_t v144 = HIBYTE(v169) & 1;
  uint64_t v60 = swift_retain();
  uint64_t v152 = v51;
  CircularBuffer.endIndex.getter(v60, v51, v52);
  swift_release();
  sub_1001187F4();
  __int16 v176 = v62;
  char v63 = !v56;
  char v177 = v61;
  BOOL v178 = v63;
  sub_1001187DC();
  if ((sub_10024E620() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v151 = v52;
  uint64_t v161 = v13;
  uint64_t v64 = v169 & 0x1FFFFFFFFFFFFFFLL;
  swift_retain();
  uint64_t v150 = v9 & 0x1FFFFFFFFFFFFFFLL;
  uint64_t v149 = v64;
  uint64_t v65 = v12;
  unint64_t v66 = CircularBuffer.distance(from:to:)(v9 & 0x1FFFFFFFFFFFFFFLL, v64);
  swift_release();
  unint64_t v67 = v167;
  unint64_t v68 = v168;
  uint64_t v69 = v166;
  if (v66 == sub_10024EC90())
  {
    sub_100118854();
    v70();
    sub_10024E930();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v72 = v174;
    unint64_t v169 = AssociatedConformanceWitness;
    sub_10024F0E0();
    uint64_t v73 = v72;
    sub_1001187A0(v72, 1, v65);
    uint64_t v74 = v65;
    uint64_t v75 = v164;
    uint64_t v76 = v159;
    uint64_t v77 = v158;
    uint64_t v78 = v157;
    if (!v56)
    {
      uint64_t v168 = *(void (**)(void, void, void))(v170 + 32);
      unint64_t v167 = v170 + 16;
      uint64_t v166 = v159 + 40;
      v170 += 32;
      uint64_t v165 = (void (**)(uint64_t, uint64_t, void))(v170 - 24);
      do
      {
        v168(v78, v73, v74);
        unsigned int v79 = v9;
        sub_100118854();
        v80();
        sub_1000195B4(v77, 0, 1, v74);
        uint64_t v81 = v173;
        sub_10024F510();
        sub_10024F470();
        uint64_t v82 = *v75;
        sub_100117F14(v9, *v75);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v76 + 40))(v82+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v9, v77, v81);
        uint64_t v83 = *v75;
        uint64_t v84 = v75[1];
        uint64_t v9 = v75[2];
        swift_retain();
        LODWORD(v9) = CircularBuffer.index(after:)(v79, v83, v84, v9, v74);
        swift_release();
        sub_10003FDC8();
        v85();
        sub_10024F0E0();
        uint64_t v73 = v174;
        sub_1001187A0(v174, 1, v74);
      }
      while (!v56);
    }
    sub_10003FDC8();
    v86();
    goto LABEL_30;
  }
  unint64_t v170 = v59;
  v143[3] = WitnessTable;
  uint64_t AssociatedTypeWitness = v49;
  uint64_t v87 = swift_retain();
  uint64_t v171 = v65;
  CircularBuffer.count.getter(v87, v152, v151);
  sub_1001188BC();
  v165[2](v155, v67, v68);
  uint64_t v174 = v66;
  BOOL v56 = v66 == v49;
  unint64_t v88 = v173;
  uint64_t v89 = v164;
  if (v56)
  {
    char v90 = sub_10024ECA0();
    uint64_t v91 = sub_1001189D0();
    v92(v91);
    if (v90)
    {
      CircularBuffer.removeSubrange(_:)();
LABEL_30:
      sub_10003C8C8();
      return;
    }
  }
  else
  {
    uint64_t v93 = sub_1001189D0();
    v94(v93);
  }
  sub_10024EAF0();
  uint64_t v182 = sub_10024F430();
  uint64_t v96 = *v89;
  unint64_t v95 = v89[1];
  uint64_t v97 = v89[2];
  swift_retain();
  sub_1001187B8();
  uint64_t v98 = v171;
  CircularBuffer.count.getter(v99, v100, v101);
  sub_1001188BC();
  uint64_t v102 = sub_10024EC90();
  unint64_t v103 = v88 + v102;
  if (__OFADD__(v88, v102)) {
    goto LABEL_33;
  }
  BOOL v104 = __OFSUB__(v103, v174);
  uint64_t v105 = v103 - v174;
  if (v104)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v106 = v105 + 1;
  if (__OFADD__(v105, 1))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v165 = (void (**)(uint64_t, uint64_t, void))((v9 & 0x100000000000000uLL) >> 56);
  swift_retain();
  CircularBuffer.capacity.getter();
  sub_1001188BC();
  uint64_t v107 = sub_100113584(v106);
  if (v107 <= (uint64_t)v88) {
    Swift::Int v108 = v88;
  }
  else {
    Swift::Int v108 = v107;
  }
  uint64_t v174 = sub_10024F510();
  sub_10024F440(v108);
  swift_retain();
  sub_1001187B8();
  CircularBuffer.startIndex.getter(v109, v110, v111);
  sub_1001188BC();
  LODWORD(v179) = v88;
  WORD2(v179) = WORD2(v88);
  BYTE6(v179) = BYTE6(v88);
  HIBYTE(v179) = HIBYTE(v88) != 0;
  int v175 = v9;
  __int16 v176 = v163;
  char v177 = v161;
  BOOL v178 = (char)v165;
  if ((sub_10024E620() & 1) == 0) {
    goto LABEL_36;
  }
  Swift::Int v163 = v108;
  unint64_t v179 = CircularBuffer.subscript.getter(v88 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v88) != 0) << 56), v150, v96, v95, v97);
  uint64_t v180 = v112;
  uint64_t v181 = v113;
  uint64_t v114 = sub_100118900();
  sub_10024E9C0();
  swift_release();
  sub_1001188EC();
  uint64_t v115 = (void *)sub_1001188D4();
  uint64_t v116 = v69;
  uint64_t v117 = v168;
  v115[2] = v98;
  v115[3] = v117;
  v115[4] = v69;
  uint64_t v118 = (void *)swift_allocObject();
  v118[2] = v98;
  v118[3] = v117;
  v118[4] = v69;
  v118[5] = sub_100117F6C;
  v118[6] = v115;
  uint64_t v119 = sub_10024F350();
  uint64_t v165 = (void (**)(uint64_t, uint64_t, void))&protocol conformance descriptor for LazySequence<A>;
  swift_getWitnessTable();
  sub_10011894C();
  *(void *)(v120 - 256) = v119;
  uint64_t v156 = v121;
  sub_10024F750();
  swift_release();
  swift_release();
  sub_100118734();
  uint64_t v161 = v114;
  uint64_t v122 = sub_10024F5A0();
  uint64_t v123 = swift_getWitnessTable();
  uint64_t v155 = v122;
  uint64_t v154 = v123;
  sub_10024F4C0();
  sub_10024E9C0();
  uint64_t v124 = (void *)sub_1001188D4();
  v124[2] = v98;
  v124[3] = v117;
  v124[4] = v116;
  uint64_t v125 = (void *)swift_allocObject();
  v125[2] = v98;
  v125[3] = v117;
  v125[4] = v116;
  v125[5] = sub_100117F6C;
  v125[6] = v124;
  sub_100118900();
  sub_1001187B8();
  sub_10024F750();
  swift_release();
  sub_10003FDC8();
  v126();
  sub_100118900();
  sub_10024F4C0();
  uint64_t v127 = *v164;
  unint64_t v128 = v164[1];
  unint64_t v129 = v164[2];
  uint64_t v130 = swift_retain();
  unint64_t v131 = CircularBuffer.endIndex.getter(v130, v128, v129);
  swift_release();
  LODWORD(v179) = v169;
  WORD2(v179) = v145;
  BYTE6(v179) = v170;
  HIBYTE(v179) = v144;
  int v175 = v131;
  __int16 v176 = WORD2(v131);
  char v177 = BYTE6(v131);
  BOOL v178 = HIBYTE(v131) != 0;
  if (sub_10024E620())
  {
    unint64_t v179 = CircularBuffer.subscript.getter(v149, v131 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v131) != 0) << 56), v127, v128, v129);
    uint64_t v180 = v132;
    uint64_t v181 = v133;
    sub_10024E9C0();
    swift_release();
    sub_1001188EC();
    uint64_t v134 = (void *)sub_1001188D4();
    v134[2] = v98;
    v134[3] = v117;
    uint64_t v135 = v166;
    v134[4] = v166;
    uint64_t v136 = (void *)swift_allocObject();
    v136[2] = v98;
    v136[3] = v117;
    v136[4] = v135;
    v136[5] = sub_100117F6C;
    v136[6] = v134;
    sub_10011894C();
    sub_10024F750();
    swift_release();
    swift_release();
    sub_100118734();
    sub_10024F4C0();
    swift_retain();
    uint64_t v137 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
    swift_release();
    Swift::Int v138 = v163 - v137;
    if (v163 - v137 >= 1)
    {
      sub_1000195B4(v158, 1, 1, v98);
      sub_10024F3F0();
      sub_10003FDC8();
      v139();
      sub_100118900();
      sub_10024F4C0();
    }
    uint64_t v140 = v182;
    v141 = v164;
    swift_retain();
    swift_release();
    uint64_t *v141 = v140;
    v141[1] = 0;
    uint64_t v142 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
    swift_release();
    v141[2] = v142 - v138;
    goto LABEL_30;
  }
LABEL_37:
  __break(1u);
}

void sub_100115BF0(uint64_t a1@<X8>)
{
}

void sub_100115C08(uint64_t a1@<X8>)
{
  sub_100118938();
  sub_100118924();
  if (v8) {
    uint64_t v7 = 0;
  }
  uint64_t v9 = v3(v7 | (v6 << 48) | (v5 << 32) | v4, v2);
  sub_1001184F4(v9);
  *(_WORD *)(a1 + 4) = v10;
  if (v8) {
    char v11 = 0;
  }
  else {
    char v11 = 1;
  }
  sub_100118918(v11);
}

void sub_100115C64(uint64_t a1)
{
}

void sub_100115C7C(uint64_t a1)
{
  sub_100118938();
  sub_100118924();
  if (v8) {
    uint64_t v7 = 0;
  }
  uint64_t v9 = v2(v7 | (v6 << 48) | (v5 << 32) | v4, v3);
  sub_1001184F4(v9);
  *(_WORD *)(a1 + 4) = v10;
  if (v8) {
    char v11 = 0;
  }
  else {
    char v11 = 1;
  }
  sub_100118918(v11);
}

void sub_100115CD8(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = CircularBuffer.index(_:offsetBy:)(*a1, a2, *v3, v3[1], v3[2]);
  sub_1001184F4(v5);
  *(_WORD *)(a3 + 4) = v6;
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_100118918(v8);
}

uint64_t sub_100115D44()
{
  swift_getWitnessTable();
  return sub_10024EC70();
}

unint64_t sub_100115DC8(unsigned int *a1, unsigned int *a2)
{
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v2 = 0x100000000000000;
  }
  else {
    uint64_t v2 = 0;
  }
  unint64_t v3 = v2 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v4 = 0x100000000000000;
  }
  else {
    uint64_t v4 = 0;
  }
  return CircularBuffer.distance(from:to:)(v3, v4 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

Swift::Void __swiftcall CircularBuffer._doubleCapacity()()
{
  sub_10003C984();
  uint64_t v3 = *(void *)(v2 + 16);
  sub_10024F030();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v4, v5);
  sub_100118998();
  sub_10024FD90();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v6, v7);
  Swift::Int v8 = 2 * CircularBuffer.capacity.getter();
  sub_10024EAF0();
  uint64_t v11 = sub_10024F430();
  if (v8 < 1)
  {
    __break(1u);
  }
  else
  {
    sub_1001189B8();
    sub_10024F440(v8);
    sub_100019524(&qword_100310BD8);
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_10001B0A4(&qword_100310BE0, &qword_100310BD8);
    sub_100118770();
    sub_10024E660();
    sub_100118834();
    swift_getWitnessTable();
    sub_1001186B0();
    sub_100019524(&qword_100310BE8);
    sub_10001B0A4(qword_100310BF0, &qword_100310BE8);
    sub_100118770();
    sub_10024E660();
    sub_1001186B0();
    swift_retain();
    _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
    sub_1001188A4();
    sub_1000195B4(v1, 1, 1, v3);
    sub_10024F3F0();
    sub_10003FDC8();
    v10();
    swift_getWitnessTable();
    sub_10024F4C0();
    v0[1] = 0;
    v0[2] = WitnessTable;
    swift_release();
    *uint64_t v0 = v11;
    sub_10003C8C8();
  }
}

Swift::Bool __swiftcall CircularBuffer.verifyInvariants()()
{
  sub_10003C7F0();
  uint64_t v17 = v0;
  uint64_t v18 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_10024F030();
  __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v16 - v11;
  if (v7 != v5)
  {
    unint64_t v13 = (void (**)(char *, uint64_t))(v10 + 8);
    do
    {
      _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
      int v14 = sub_10001FA0C((uint64_t)v12, 1, v3);
      (*v13)(v12, v8);
      if (v14 == 1) {
        break;
      }
      uint64_t v7 = CircularBuffer.mask.getter() & (v7 + 1);
    }
    while (v7 != v5);
  }
  sub_10003C780();
  return result;
}

Swift::Void __swiftcall CircularBuffer._resizeAndFlatten(newCapacity:)(Swift::Int newCapacity)
{
  sub_10003C984();
  uint64_t v2 = v1;
  Swift::Int v4 = v3;
  uint64_t v6 = *(void *)(v5 + 16);
  sub_1001189AC();
  uint64_t v7 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v9 = v8;
  sub_10007A8E8();
  __chkstk_darwin(v10, v11);
  unint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = sub_10024FD90();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v15, v16);
  sub_10024EAF0();
  uint64_t v35 = sub_10024F430();
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = v6;
    sub_1001189B8();
    Swift::Int v28 = v4;
    sub_10024F440(v4);
    uint64_t v17 = v2[1];
    uint64_t v18 = v2[2];
    uint64_t v19 = *v2;
    if (v18 >= v17)
    {
      *(void *)&long long v33 = sub_10024F520();
      *((void *)&v33 + 1) = v21;
      *(void *)&long long v34 = v22;
      *((void *)&v34 + 1) = v23;
      uint64_t v20 = sub_10024F260();
      swift_getWitnessTable();
    }
    else
    {
      *(void *)&long long v30 = *v2;
      uint64_t v32 = v17;
      uint64_t v26 = sub_100019524(&qword_100310BD8);
      uint64_t v27 = v9;
      v25[1] = swift_getWitnessTable();
      sub_10001B0A4(&qword_100310BE0, &qword_100310BD8);
      sub_100118758();
      sub_10024E660();
      sub_100118834();
      swift_getWitnessTable();
      uint64_t v26 = v14;
      sub_100118698();
      sub_10024F4C0();
      *(void *)&long long v30 = v19;
      uint64_t v32 = v18;
      uint64_t v20 = sub_100019524(&qword_100310BE8);
      sub_10001B0A4(qword_100310BF0, &qword_100310BE8);
      sub_100118758();
      sub_10024E660();
      long long v30 = v33;
      long long v31 = v34;
      sub_100118698();
      uint64_t v9 = v27;
    }
    sub_10024F4C0();
    swift_retain();
    _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
    sub_1001188A4();
    sub_1000195B4((uint64_t)v13, 1, 1, v29);
    sub_10024F3F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v7);
    swift_getWitnessTable();
    sub_10024F4C0();
    v2[1] = 0;
    v2[2] = v20;
    uint64_t v24 = v35;
    swift_release();
    *uint64_t v2 = v24;
    sub_10003C8C8();
  }
}

uint64_t CircularBuffer.subscript.getter()
{
  sub_1001186D4();
  unint64_t v5 = CircularBuffer.startIndex.getter(v2, v3, v4);
  sub_100118648(v5);
  sub_10011880C();
  unint64_t v11 = CircularBuffer.index(_:offsetBy:)(v6, v7, v8, v9, v10);
  unint64_t v12 = sub_10011847C(v11);
  return CircularBuffer.subscript.getter(v12, v1, v13, v14, v0);
}

void sub_10011678C()
{
  sub_10003C7F0();
  uint64_t v1 = *(void **)(*(void *)v0 + 40);
  uint64_t v2 = *(void **)(*(void *)v0 + 48);
  if (v3)
  {
    uint64_t v4 = sub_10011850C();
    v5(v4);
    CircularBuffer.subscript.setter();
    uint64_t v6 = sub_100118544();
    v7(v6);
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  free(v2);
  free(v1);
  sub_10003C780();
  free(v8);
}

Swift::Void __swiftcall CircularBuffer.removeFirst(_:)(Swift::Int a1)
{
  sub_10003C984();
  uint64_t v3 = v2;
  sub_100118664();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v4, v5);
  sub_1001185C8();
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = swift_retain();
  uint64_t v9 = CircularBuffer.count.getter(v8, v6, v7);
  swift_release();
  if (v9 < v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v3)
  {
    sub_10024F510();
    sub_10024F470();
    sub_10024F470();
    do
    {
      sub_10011886C();
      unint64_t v10 = sub_1001184A4();
      v11(v10);
      uint64_t v12 = v6 + 1;
      swift_retain();
      uint64_t v13 = CircularBuffer.mask.getter();
      swift_release();
      uint64_t v6 = v13 & v12;
      --v3;
    }
    while (v3);
  }
  *(void *)(v1 + 8) = v6;
  sub_10003C8C8();
}

uint64_t CircularBuffer.modify<A>(_:_:)(unsigned int a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  unint64_t v7 = a1;
  sub_10024F030();
  sub_10024F510();
  sub_10024F470();
  uint64_t v8 = *v4;
  sub_100117F14(v7, v8);
  sub_10011852C();
  uint64_t v11 = v8
      + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(void *)(v10 + 72) * v7;
  uint64_t result = sub_10001FA0C(v11, 1, v6);
  if (result != 1) {
    return a2(v11);
  }
  __break(1u);
  return result;
}

void sub_100116A30(void *a1@<X8>)
{
  sub_10024FA20();
  v2._countAndFlagsBits = 32;
  v2._object = (void *)0xE100000000000000;
  sub_10024E800(v2);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t CircularBuffer.popFirst()()
{
  if (sub_100118604() < 1)
  {
    uint64_t v3 = 1;
  }
  else
  {
    CircularBuffer.removeFirst()(v2, v0);
    uint64_t v3 = 0;
  }
  return sub_1000195B4(v0, v3, 1, v1);
}

uint64_t CircularBuffer.popLast()()
{
  if (sub_100118604() < 1)
  {
    uint64_t v3 = 1;
  }
  else
  {
    CircularBuffer.removeLast()(v2, v0);
    uint64_t v3 = 0;
  }
  return sub_1000195B4(v0, v3, 1, v1);
}

void CircularBuffer.removeLast()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_100118664();
  sub_10007A8E8();
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v11 - v7;
  v11[1] = *(void *)v2;
  long long v12 = *(_OWORD *)(v2 + 8);
  swift_getWitnessTable();
  sub_10024E5B0();
  sub_1001187A0((uint64_t)v8, 1, v4);
  if (v9)
  {
    __break(1u);
  }
  else
  {
    sub_10007A8C4();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v8, v4);
    sub_1000ACF34();
    sub_100116DBC();
  }
}

Swift::Void __swiftcall CircularBuffer.removeLast(_:)(Swift::Int a1)
{
  sub_10003C984();
  uint64_t v3 = v2;
  sub_100118664();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v4, v5);
  sub_1001185C8();
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = swift_retain();
  uint64_t v9 = CircularBuffer.count.getter(v8, v6, v7);
  swift_release();
  if (v9 < v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v3)
  {
    sub_10024F510();
    sub_10024F470();
    sub_10024F470();
    do
    {
      uint64_t v10 = v7 - 1;
      swift_retain();
      uint64_t v11 = CircularBuffer.mask.getter();
      swift_release();
      uint64_t v7 = v11 & v10;
      sub_10011886C();
      unint64_t v12 = sub_1001184A4();
      v13(v12);
      --v3;
    }
    while (v3);
  }
  *(void *)(v1 + 16) = v7;
  sub_10003C8C8();
}

void sub_100116D88()
{
}

void sub_100116DBC()
{
}

void CircularBuffer.removeSubrange(_:)()
{
  sub_10003C984();
  unint64_t v2 = v1;
  uint64_t v27 = v4;
  uint64_t v28 = v3;
  unint64_t v5 = HIDWORD(v1);
  unint64_t v6 = HIWORD(v1);
  __chkstk_darwin(v3, v1);
  sub_1000589AC();
  type metadata accessor for CircularBuffer.Index();
  LODWORD(v30) = v2;
  uint64_t v29 = v0;
  WORD2(v30) = v5;
  BYTE6(v30) = v6;
  HIBYTE(v30) = HIBYTE(v2) & 1;
  uint64_t v26 = v0 + 1;
  uint64_t v7 = sub_100118580();
  unint64_t v10 = CircularBuffer.startIndex.getter(v7, v8, v9);
  sub_100118788(v10);
  swift_getWitnessTable();
  sub_1001187C4();
  if ((sub_10024E610() & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  LODWORD(v30) = v2;
  WORD2(v30) = v5;
  BYTE6(v30) = v6;
  HIBYTE(v30) = HIBYTE(v2) & 1;
  uint64_t v11 = sub_100118580();
  unint64_t v14 = CircularBuffer.endIndex.getter(v11, v12, v13);
  sub_100118788(v14);
  sub_1001187C4();
  if ((sub_10024E620() & 1) == 0)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v15 = v2 & 0x1FFFFFFFFFFFFFFLL;
  unint64_t v16 = CircularBuffer.distance(from:to:)(v28 & 0x1FFFFFFFFFFFFFFLL, v2 & 0x1FFFFFFFFFFFFFFLL);
  if (v16 == 1)
  {
    CircularBuffer.remove(at:)();
    sub_1000ACF34();
    sub_10003FDC8();
    v17();
  }
  else
  {
    unint64_t v18 = v16;
    uint64_t v19 = sub_100118580();
    if (CircularBuffer.count.getter(v19, v20, v21) == v18)
    {
      sub_100118664();
      unint64_t v22 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
      uint64_t v23 = CircularBuffer.init(initialCapacity:)(v22);
      swift_release();
      *uint64_t v29 = v23;
      void *v26 = 0;
      v26[1] = 0;
    }
    else
    {
      uint64_t v30 = sub_10024EAF0();
      uint64_t v24 = sub_10024EB40();
      uint64_t WitnessTable = swift_getWitnessTable();
      CircularBuffer.replaceSubrange<A>(_:with:)(v28 & 0x1FFFFFFFFFFFFFFLL, v15, &v30, v27, v24, WitnessTable);
      swift_bridgeObjectRelease();
    }
  }
  sub_10003C8C8();
}

uint64_t sub_100117070@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  a1();
  return sub_1000195B4(a3, 0, 1, a2);
}

void CircularBuffer.remove(at:)()
{
  sub_10003C984();
  unint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v47 = v6;
  uint64_t v49 = (void (*)(void))HIDWORD(v4);
  unint64_t v50 = HIWORD(v4);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = sub_100118664();
  sub_10002F9C8();
  uint64_t v46 = v9;
  __chkstk_darwin(v10, v11);
  sub_1000AC748();
  uint64_t v45 = v12;
  __chkstk_darwin(v13, v14);
  unint64_t v16 = (char *)v44 - v15;
  sub_10002F9C8();
  uint64_t v52 = v17;
  __chkstk_darwin(v18, v19);
  sub_1000589AC();
  uint64_t v51 = v20;
  unint64_t v21 = v0[1];
  uint64_t v22 = v0[2];
  uint64_t v57 = *v0;
  *(void *)&long long v58 = v21;
  unint64_t v48 = v21;
  v44[1] = v22;
  *((void *)&v58 + 1) = v22;
  swift_getWitnessTable();
  sub_10024ED30();
  uint64_t v57 = v67;
  long long v58 = v68;
  int v59 = v69;
  __int16 v60 = v70;
  char v61 = v71;
  char v62 = v72;
  int v63 = v73;
  __int16 v64 = v74;
  char v65 = v75;
  char v66 = v76;
  int v53 = v5;
  __int16 v54 = (__int16)v49;
  char v55 = v50;
  char v56 = HIBYTE(v5) & 1;
  unint64_t v50 = v3;
  sub_10024E570();
  swift_getWitnessTable();
  type metadata accessor for CircularBuffer.Index();
  swift_getWitnessTable();
  char v23 = sub_10024E9F0();
  swift_release();
  if (v23)
  {
    uint64_t v5 = v5;
    uint64_t v24 = v8;
    _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
    sub_1001187A0((uint64_t)v16, 1, v7);
    if (!v25)
    {
      uint64_t v26 = v51;
      uint64_t v27 = v52 + 32;
      uint64_t v28 = *(void (**)(void))(v52 + 32);
      sub_100118860();
      v28();
      if (v48 == v5)
      {
        unint64_t v29 = v48;
        CircularBuffer.advanceHeadIdx(by:)(1);
        uint64_t v49 = v28;
        uint64_t v30 = v45;
        sub_1000195B4(v45, 1, 1, v7);
        sub_10024F510();
        sub_10024F470();
        sub_100117F14(v29, *v1);
        unint64_t v31 = sub_10011855C();
        uint64_t v33 = v30;
        uint64_t v28 = v49;
        uint64_t v34 = v24;
      }
      else
      {
        swift_retain();
        Swift::Int v35 = CircularBuffer.indexBeforeTailIdx()();
        swift_release();
        uint64_t v36 = v24;
        if (v35 != v5)
        {
          uint64_t v49 = v28;
          uint64_t v52 = v27;
          uint64_t v39 = v45;
          sub_100118594(v45, 1);
          sub_10024F470();
          uint64_t v40 = *v1;
          sub_100117F14(v5, *v1);
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 40))(v40+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v5, v39, v36);
          uint64_t v41 = v1[2];
          swift_retain();
          CircularBuffer.mask.getter();
          sub_1001188A4();
          uint64_t v42 = v36 & (v5 + 1);
          if (v42 != v41)
          {
            do
            {
              uint64_t v67 = v5;
              uint64_t v57 = v42;
              swift_getWitnessTable();
              sub_10024E650();
              uint64_t v43 = v1[2];
              swift_retain();
              CircularBuffer.mask.getter();
              sub_1001188A4();
              uint64_t v5 = v42;
              uint64_t v42 = v36 & (v42 + 1);
            }
            while (v42 != v43);
          }
          CircularBuffer.advanceTailIdx(by:)(-1);
          uint64_t v38 = v47;
          uint64_t v26 = v51;
          uint64_t v28 = v49;
          goto LABEL_11;
        }
        CircularBuffer.advanceTailIdx(by:)(-1);
        uint64_t v37 = v45;
        sub_100118594(v45, 1);
        sub_10024F470();
        sub_100117F14(v5, *v1);
        unint64_t v31 = sub_10011855C();
        uint64_t v33 = v37;
        uint64_t v34 = v36;
      }
      v32(v31, v33, v34);
      uint64_t v38 = v47;
LABEL_11:
      ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v38, v26, v7);
      sub_10003C8C8();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall CircularBuffer.reserveCapacity(_:)(Swift::Int a1)
{
  if (CircularBuffer.capacity.getter() < a1)
  {
    Swift::Int v2 = sub_100113584(a1);
    CircularBuffer._resizeAndFlatten(newCapacity:)(v2);
  }
}

uint64_t sub_1001175F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CircularBuffer.init()();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100117620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CircularBuffer.replaceSubrange<A>(_:with:)();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v5(a2, a3);
}

uint64_t sub_1001176F0(uint64_t a1, uint64_t a2)
{
  CircularBuffer.append(_:)();
  unint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

void sub_100117760()
{
}

void sub_10011778C()
{
}

uint64_t sub_1001177E0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RangeReplaceableCollection<>._customRemoveLast()(a1, WitnessTable, a2);
}

uint64_t sub_10011784C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RangeReplaceableCollection<>._customRemoveLast(_:)(a1, a2, WitnessTable, a3);
}

uint64_t sub_1001178C0()
{
  return sub_10024EDE0();
}

void static CircularBuffer<A>.== infix(_:_:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v7 = CircularBuffer.count.getter(v4, v5, v6);
  sub_100118860();
  if (v7 == CircularBuffer.count.getter(v8, v9, v10))
  {
    sub_1001189AC();
    type metadata accessor for CircularBuffer();
    swift_getWitnessTable();
    sub_10024FB40();
    uint64_t v11 = (void *)sub_1001188D4();
    void v11[2] = v3;
    uint64_t v11[3] = v1;
    v11[4] = v3;
    __chkstk_darwin(v11, v12);
    sub_10024F370();
    swift_getWitnessTable();
    sub_10024E960();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
}

uint64_t sub_100117B10(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

void sub_100117B78()
{
  static CircularBuffer<A>.== infix(_:_:)();
}

void CircularBuffer<A>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10003C984();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  unint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_10002F9C8();
  uint64_t v31 = v30;
  __chkstk_darwin(v32, v33);
  Swift::Int v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  unint64_t v36 = CircularBuffer.startIndex.getter(v29, v27, v25);
  LODWORD(v37) = HIBYTE(v36) != 0;
  sub_10011867C(v29);
  sub_10011862C();
  if (!v41 || v37 != v40)
  {
    uint64_t v43 = (void (**)(char *, uint64_t))(v31 + 8);
    do
    {
      if (v37) {
        uint64_t v44 = 0x100000000000000;
      }
      else {
        uint64_t v44 = 0;
      }
      unint64_t v37 = v44 & 0xFF00000000000000 | v36 & 0xFFFFFFFFFFFFFFLL;
      CircularBuffer.subscript.getter(v37, v29, v38, v39, v23);
      swift_retain();
      unint64_t v36 = CircularBuffer.index(after:)(v37, v29, v27, v25, v23);
      swift_release();
      LOBYTE(v37) = HIBYTE(v36) != 0;
      sub_10024E560();
      (*v43)(v35, v23);
      sub_10011867C(v29);
      sub_10011862C();
    }
    while (!v41 || ((v37 ^ v45) & 1) != 0);
    swift_release();
    sub_10003C8C8();
  }
  else
  {
    sub_10003C8C8();
    swift_release();
  }
}

Swift::Int CircularBuffer<A>.hashValue.getter()
{
  sub_1001186D4();
  sub_10024FC00();
  sub_10011880C();
  CircularBuffer<A>.hash(into:)(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,
    v20);
  return sub_10024FC70();
}

Swift::Int sub_100117DA4()
{
  return CircularBuffer<A>.hashValue.getter();
}

void sub_100117DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  CircularBuffer<A>.hash(into:)(a1, *v20, v20[1], v20[2], *(void *)(a2 + 16), *(void *)(a3 - 8), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

Swift::Int sub_100117DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  sub_10024FC00();
  CircularBuffer<A>.hash(into:)((uint64_t)v10, *v3, v3[1], v3[2], *(void *)(a2 + 16), v5, v6, v7, v9, v10[0], v10[1], v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9],
    v10[10]);
  return sub_10024FC70();
}

uint64_t CircularBuffer.init(arrayLiteral:)()
{
  type metadata accessor for CircularBuffer();
  sub_10024EB40();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1001187B8();
  sub_10024EDA0();
  return v1;
}

uint64_t sub_100117EE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CircularBuffer.init(arrayLiteral:)();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

unint64_t sub_100117F14(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(a2 + 16) <= result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void sub_100117F30(void *a1@<X8>)
{
}

uint64_t type metadata accessor for CircularBuffer.Index()
{
  return sub_10002F7A4();
}

uint64_t sub_100117F7C()
{
  sub_10007A8C4();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100117FB4()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100117FEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100117070(*(void (**)(void))(v1 + 40), *(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for CircularBuffer()
{
  return sub_10002F7A4();
}

uint64_t sub_100118018()
{
  return sub_10024E680() & 1;
}

uint64_t sub_100118044(uint64_t a1)
{
  return sub_100117B10(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32)) & 1;
}

uint64_t sub_100118068()
{
  return swift_getWitnessTable();
}

uint64_t sub_100118084()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001180A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001180BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001180D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001180F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100118110()
{
  return swift_getWitnessTable();
}

uint64_t sub_10011812C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100118148()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001181AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001181C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10011822C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100118248()
{
  return swift_getWitnessTable();
}

uint64_t sub_100118290(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

void *sub_1001182C8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_100118320(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_100118360(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001183A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1001183E0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 7);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10011842C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 7) = a2 + 1;
    }
  }
  return result;
}

unint64_t sub_10011847C(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t sub_100118494()
{
  return _swift_deallocObject(v0, 40, 7);
}

unint64_t sub_1001184A4()
{
  uint64_t v3 = *v0;
  sub_100117F14(v2, *v0);
  return v3
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(void *)(v1 + 72) * v2;
}

uint64_t sub_1001184F4(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_10011850C()
{
  return v0;
}

uint64_t sub_100118544()
{
  return v0;
}

unint64_t sub_10011855C()
{
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v2 - 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 232) + 80))
       + *(void *)(*(void *)(v2 - 232) + 72) * v1;
}

uint64_t sub_100118580()
{
  return v0;
}

uint64_t sub_100118594(uint64_t a1, uint64_t a2)
{
  sub_1000195B4(a1, a2, 1, v2);
  return sub_10024F510();
}

uint64_t sub_1001185E8()
{
  return v0;
}

uint64_t sub_100118604()
{
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  uint64_t v4 = v0[2];
  return CircularBuffer.count.getter(v2, v3, v4);
}

unint64_t sub_100118648(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t sub_100118664()
{
  return sub_10024F030();
}

unint64_t sub_10011867C(uint64_t a1)
{
  return CircularBuffer.endIndex.getter(a1, v2, v1);
}

uint64_t sub_100118698()
{
  return v0 - 176;
}

uint64_t sub_1001186B0()
{
  return sub_10024F4C0();
}

unint64_t sub_1001186EC(uint64_t a1)
{
  return CircularBuffer.subscript.setter(a1, v1, v2, v3, v4);
}

unint64_t sub_100118710(uint64_t a1)
{
  return CircularBuffer.subscript.setter(a1, v1, v4, v2, v3);
}

__n128 sub_100118734()
{
  *(void *)(v0 - 200) = *(void *)(v0 - 136);
  __n128 result = *(__n128 *)(v0 - 112);
  *(_OWORD *)(v0 - 192) = *(_OWORD *)(v0 - 128);
  *(__n128 *)(v0 - 176) = result;
  return result;
}

void sub_10011874C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_100118758()
{
  return v0 - 136;
}

uint64_t sub_100118770()
{
  return v0 - 136;
}

uint64_t sub_100118788(uint64_t result)
{
  *(_DWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_1001187A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001FA0C(a1, a2, a3);
}

uint64_t sub_1001187C4()
{
  return v0 - 88;
}

uint64_t sub_1001187DC()
{
  return v0 - 136;
}

void sub_1001187F4()
{
  *(_DWORD *)(v1 - 200) = v0;
}

uint64_t sub_100118820()
{
  return v0;
}

uint64_t sub_100118834()
{
  long long v2 = *(_OWORD *)(v0 - 112);
  *(_OWORD *)(v0 - 176) = *(_OWORD *)(v0 - 128);
  *(_OWORD *)(v0 - 160) = v2;
  return sub_10024F260();
}

void sub_10011886C()
{
  sub_1000195B4(v1, 1, 1, v0);
  sub_10024F470();
}

uint64_t sub_1001188A4()
{
  return swift_release();
}

uint64_t sub_1001188BC()
{
  return swift_release();
}

uint64_t sub_1001188D4()
{
  return swift_allocObject();
}

__n128 sub_1001188EC()
{
  *(void *)(v0 - 160) = *(void *)(v0 - 200);
  __n128 result = *(__n128 *)(v0 - 192);
  *(__n128 *)(v0 - 152) = result;
  return result;
}

uint64_t sub_100118900()
{
  return swift_getWitnessTable();
}

void sub_100118918(char a1@<W8>)
{
  *(unsigned char *)(v2 + 6) = v1;
  *(unsigned char *)(v2 + 7) = a1;
}

uint64_t sub_100118960()
{
  sub_1000195B4(v1, 1, 1, v0);
  return v1;
}

uint64_t sub_100118998()
{
  return 0;
}

uint64_t sub_1001189AC()
{
  return 0;
}

uint64_t sub_1001189B8()
{
  return sub_10024F510();
}

uint64_t sub_1001189D0()
{
  return v0;
}

void *sub_1001189E4()
{
  return malloc(0x38uLL);
}

uint64_t sub_100118A04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100019524(&qword_100310B20);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100019524(&qword_10030B7F0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027788(v1, (uint64_t)v26);
  sub_100019524(&qword_100310CF8);
  if (!swift_dynamicCast()) {
    return 0;
  }
  memcpy(v24, v25, 0xD1uLL);
  if (!v24[8])
  {
    sub_10006382C(v24);
    return 0;
  }
  sub_10009A320(v24[8], (uint64_t)v5);
  uint64_t v10 = type metadata accessor for IAPTransaction();
  if (sub_10001FA0C((uint64_t)v5, 1, v10) == 1)
  {
    sub_10006382C(v24);
    uint64_t v11 = &qword_100310B20;
    uint64_t v12 = (uint64_t)v5;
LABEL_9:
    sub_100051BB4(v12, v11);
    return 0;
  }
  sub_100118CD0((uint64_t)&v5[*(int *)(v10 + 68)], (uint64_t)v9);
  sub_100118D38((uint64_t)v5);
  uint64_t v13 = sub_100019524(&qword_10030A380);
  if (sub_10001FA0C((uint64_t)v9, 1, v13) == 1)
  {
    sub_10006382C(v24);
    uint64_t v11 = &qword_10030B7F0;
    uint64_t v12 = (uint64_t)v9;
    goto LABEL_9;
  }
  sub_100118D94(v23);
  uint64_t v15 = v23[0];
  uint64_t v16 = v23[1];
  uint64_t v17 = v23[2];
  uint64_t v18 = v23[3];
  uint64_t v19 = v23[4];
  uint64_t v20 = v23[5];
  sub_100051BB4((uint64_t)v9, &qword_10030A380);
  sub_100019524(&qword_1003090E8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10025EED0;
  *(void *)(v21 + 32) = v15;
  *(void *)(v21 + 40) = v16;
  *(void *)(v21 + 48) = v17;
  *(void *)(v21 + 56) = v18;
  *(void *)(v21 + 64) = v19;
  *(void *)(v21 + 72) = v20;
  v23[0] = v21;
  sub_100019524(&qword_100309410);
  sub_10001B0A4((unint64_t *)&qword_10030A740, &qword_100309410);
  uint64_t v22 = sub_10024E5C0();
  sub_10006382C(v24);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_100118CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030B7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100118D38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IAPTransaction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100118D94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v89 = a1;
  uint64_t v88 = sub_10024E490();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88, v3);
  uint64_t v93 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10024E6F0();
  uint64_t v95 = *(void *)(v5 - 8);
  unint64_t v96 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v94 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10024E0A0();
  uint64_t v91 = *(void *)(v8 - 8);
  uint64_t v92 = v8;
  __chkstk_darwin(v8, v9);
  char v90 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10024D9C0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024DA00();
  swift_allocObject();
  uint64_t v16 = sub_10024D9F0();
  if (qword_100308CF0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10001B0E8(v11, (uint64_t)qword_10034C010);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_10024D9D0();
  unint64_t v18 = *(void *)(v1 + 8);
  uint64_t v19 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v21 = *(void *)(v1 + 32);
  uint64_t v22 = *(void *)(v1 + 40);
  uint64_t v23 = *(void *)(v1 + 64);
  uint64_t v102 = *(void *)v1;
  unint64_t v103 = v18;
  uint64_t v104 = v19;
  uint64_t v105 = v20;
  uint64_t v106 = v21;
  uint64_t v107 = v22;
  long long v108 = *(_OWORD *)(v1 + 48);
  uint64_t v109 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100019524(&qword_100310D00);
  sub_10001B0A4(&qword_100310D08, &qword_100310D00);
  uint64_t v110 = v16;
  uint64_t v24 = v97;
  uint64_t v25 = sub_10024D9E0();
  if (v24)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v27 = v25;
  unint64_t v28 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v102 = sub_10024DF00(0);
  unint64_t v103 = v29;
  uint64_t v100 = 43;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v98 = 45;
  unint64_t v99 = 0xE100000000000000;
  sub_10001DAC0();
  uint64_t v97 = 0;
  uint64_t v30 = v27;
  uint64_t v31 = sub_10024F170();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v102 = v31;
  unint64_t v103 = v33;
  uint64_t v100 = 47;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v98 = 95;
  unint64_t v99 = 0xE100000000000000;
  uint64_t v34 = sub_10024F170();
  unint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v102 = v34;
  unint64_t v103 = v36;
  uint64_t v100 = 61;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v98 = 0;
  unint64_t v99 = 0xE000000000000000;
  uint64_t v37 = sub_10024F170();
  unint64_t v39 = v38;
  swift_bridgeObjectRelease();
  sub_10003F808(v30, v28);
  uint64_t v40 = sub_100019524(&qword_10030A380);
  type metadata accessor for CheddarTransaction();
  sub_100119838();
  uint64_t v41 = v97;
  uint64_t v42 = sub_10024D9E0();
  if (v41)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v45 = v43;
  unint64_t v86 = v39;
  uint64_t v83 = v37;
  uint64_t v97 = 0;
  uint64_t v85 = v42;
  uint64_t v46 = v40;
  uint64_t v102 = sub_10024DF00(0);
  unint64_t v103 = v47;
  uint64_t v100 = 43;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v98 = 45;
  unint64_t v99 = 0xE100000000000000;
  uint64_t v48 = sub_10024F170();
  unint64_t v50 = v49;
  swift_bridgeObjectRelease();
  uint64_t v102 = v48;
  unint64_t v103 = v50;
  uint64_t v100 = 47;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v98 = 95;
  unint64_t v99 = 0xE100000000000000;
  uint64_t v51 = sub_10024F170();
  unint64_t v53 = v52;
  swift_bridgeObjectRelease();
  uint64_t v102 = v51;
  unint64_t v103 = v53;
  uint64_t v100 = 61;
  unint64_t v101 = 0xE100000000000000;
  uint64_t v98 = 0;
  unint64_t v99 = 0xE000000000000000;
  uint64_t v54 = sub_10024F170();
  char v56 = v55;
  swift_bridgeObjectRelease();
  sub_10003F808(v85, v45);
  uint64_t v85 = v46;
  uint64_t v57 = v2 + *(int *)(v46 + 44);
  char v58 = *(unsigned char *)(v57 + 8);
  uint64_t v82 = v54;
  uint64_t v84 = (uint64_t)v56;
  if ((v58 & 1) != 0 || *(void *)v57 != 21)
  {
    uint64_t v102 = v83;
    unint64_t v103 = v86;
    swift_bridgeObjectRetain();
    v111._countAndFlagsBits = 46;
    v111._object = (void *)0xE100000000000000;
    sub_10024E800(v111);
    swift_bridgeObjectRetain();
    v112._countAndFlagsBits = v54;
    v112._object = v56;
    sub_10024E800(v112);
    swift_bridgeObjectRelease();
  }
  else
  {
    int v59 = v90;
    sub_10024E090();
    sub_10024E050();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v92);
  }
  __int16 v60 = v94;
  sub_10024E6E0();
  uint64_t v61 = sub_10024E6C0();
  unint64_t v63 = v62;
  uint64_t v65 = v95;
  unint64_t v64 = v96;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, unint64_t))(v65 + 8))(v60, v64);
  if (v63 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100119888();
    swift_allocError();
    swift_willThrow();
    return swift_release();
  }
  else
  {
    uint64_t v102 = v61;
    unint64_t v103 = v63;
    sub_1000473AC(v61, v63);
    sub_10003F860();
    uint64_t v66 = v97;
    sub_10024E440();
    if (v66)
    {
      sub_10003F7F4(v61, v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return sub_10003F7F4(v61, v63);
    }
    else
    {
      uint64_t v97 = 0;
      uint64_t v67 = sub_10024E480();
      unint64_t v96 = v68;
      uint64_t v102 = sub_10024DF00(0);
      unint64_t v103 = v69;
      uint64_t v100 = 43;
      unint64_t v101 = 0xE100000000000000;
      uint64_t v98 = 45;
      unint64_t v99 = 0xE100000000000000;
      uint64_t v70 = sub_10024F170();
      unint64_t v72 = v71;
      swift_bridgeObjectRelease();
      uint64_t v102 = v70;
      unint64_t v103 = v72;
      uint64_t v100 = 47;
      unint64_t v101 = 0xE100000000000000;
      uint64_t v98 = 95;
      unint64_t v99 = 0xE100000000000000;
      uint64_t v73 = sub_10024F170();
      unint64_t v75 = v74;
      swift_bridgeObjectRelease();
      uint64_t v102 = v73;
      unint64_t v103 = v75;
      uint64_t v100 = 61;
      unint64_t v101 = 0xE100000000000000;
      uint64_t v98 = 0;
      unint64_t v99 = 0xE000000000000000;
      uint64_t v76 = sub_10024F170();
      uint64_t v78 = v77;
      swift_bridgeObjectRelease();
      sub_10003F808(v67, v96);
      sub_10003F7F4(v61, v63);
      swift_release();
      sub_10003F7F4(v61, v63);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v93, v88);
      unsigned int v79 = v89;
      unint64_t v80 = v86;
      *uint64_t v89 = v83;
      v79[1] = v80;
      uint64_t v81 = v84;
      v79[2] = v82;
      v79[3] = v81;
      v79[4] = v76;
      v79[5] = v78;
    }
  }
  return result;
}

unint64_t sub_100119838()
{
  unint64_t result = qword_10030B868;
  if (!qword_10030B868)
  {
    type metadata accessor for CheddarTransaction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030B868);
  }
  return result;
}

unint64_t sub_100119888()
{
  unint64_t result = qword_100310D10;
  if (!qword_100310D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310D10);
  }
  return result;
}

void destroy for InAppBuyResult(uint64_t a1)
{
  sub_10001C2EC(a1);
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for InAppBuyResult(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for InAppBuyResult(uint64_t *a1, uint64_t *a2)
{
  sub_1001199B4(a1, a2);
  long long v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  id v6 = v4;

  return a1;
}

uint64_t *sub_1001199B4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for InAppBuyResult(uint64_t a1, uint64_t a2)
{
  sub_10001C2EC(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for InAppBuyResult(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InAppBuyResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppBuyResult()
{
  return &type metadata for InAppBuyResult;
}

void *NonBlockingFileIO.defaultThreadPoolSize.unsafeMutableAddressor()
{
  return &static NonBlockingFileIO.defaultThreadPoolSize;
}

void *NonBlockingFileIO.defaultChunkSize.unsafeMutableAddressor()
{
  return &static NonBlockingFileIO.defaultChunkSize;
}

uint64_t static NonBlockingFileIO.defaultChunkSize.getter()
{
  return 0x20000;
}

uint64_t NonBlockingFileIO.readChunked(fileRegion:chunkSize:allocator:eventLoop:chunkHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_10011C42C();
  FileRegion.readableBytes.getter(v14, v15, v13 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v16 = sub_10011C408();
  return sub_100119DE4(v16, v17, v18, v19, v20, v21, v22, v23, v25, a9, a10, a11, a12, a13);
}

uint64_t NonBlockingFileIO.readChunked(fileHandle:fromOffset:byteCount:chunkSize:allocator:eventLoop:chunkHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_10011C460();
  return sub_100119DE4(v13, v14, 0, v15, v16, v17, v18, v20, v19, a9, a10, a11, a12, a13);
}

uint64_t NonBlockingFileIO.readChunked(fileHandle:byteCount:chunkSize:allocator:eventLoop:chunkHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10011C478();
  uint64_t v23 = v12;
  uint64_t v24 = v13;
  sub_10011C4A4();
  return sub_100119DE4(v14, v15, v16, v17, v18, v19, v20, v21, v23, v24, a9, a10, a11, a12);
}

uint64_t sub_100119DE4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = a4 / a5 + 1;
    if (!__OFADD__(a4 / a5, 1))
    {
      HIDWORD(v24) = a3 & 1;
      uint64_t v21 = a4 % a5;
      uint64_t v22 = result;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NonBlockingFileIO.swift", 119, 2, 176, ObjectType, (uint64_t)&type metadata for ()[8], a11);
      sub_100119EF4(v15, 0, v21, a5, a14, v22, a2, HIDWORD(v24), a6, a7, a8, a9, a10, a11, a12, a13, v20, a13, v21,
        v22,
        a2,
        v24);
      return v20;
    }
  }
  __break(1u);
  return result;
}

void sub_100119EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22 = a4;
  if (a1 <= 1 && (a1 == 1 ? (BOOL v25 = a3 < 1) : (BOOL v25 = 1), a4 = a3, v25))
  {
    sub_1000B44D0(0, 0, a17, a3, a5, a6, a7, a8, (uint64_t)a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
  }
  else
  {
    uint64_t v26 = a7;
    int v27 = a8 & 1;
    if ((a8 & 1) == 0 && (uint64_t v26 = a7 + a2, __OFADD__(a7, a2)))
    {
      __break(1u);
    }
    else
    {
      BOOL v35 = v27 != 0;
      uint64_t v33 = a2;
      uint64_t v31 = v22;
      sub_10011A0E4(a6, v26, v27, a4, a9, a10, a11, a12, a13, a14);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = a15;
      *(void *)(v30 + 24) = a16;
      *(void *)(v30 + 32) = a17;
      *(void *)(v30 + 40) = a13;
      *(void *)(v30 + 48) = a14;
      *(void *)(v30 + 56) = a3;
      *(void *)(v30 + 64) = v31;
      *(void *)(v30 + 72) = a5;
      *(void *)(v30 + 80) = a6;
      *(void *)(v30 + 88) = a7;
      *(unsigned char *)(v30 + 96) = v35;
      *(void *)(v30 + 104) = a9;
      *(void *)(v30 + 112) = a10;
      *(void *)(v30 + 120) = a11;
      *(void *)(v30 + 128) = a12;
      *(void *)(v30 + 136) = a1;
      *(void *)(v30 + 144) = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_100131994();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_10011A0E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a4 < 1)
  {
    swift_getObjectType();
    if (qword_100308D08 != -1) {
      swift_once();
    }
    swift_retain();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v22 = v23;
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v19 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(a4, a5, a6, a7, a8);
    int v20 = *(_DWORD *)(v19 + 16);
    *(void *)(v18 + 16) = v19;
    *(void *)(v18 + 24) = 0;
    *(_DWORD *)(v18 + 32) = v20;
    *(_WORD *)(v18 + 36) = 0;
    *(unsigned char *)(v18 + 38) = 0;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a4;
    *(void *)(v21 + 24) = v18;
    *(void *)(v21 + 32) = a1;
    *(void *)(v21 + 40) = a2;
    *(unsigned char *)(v21 + 48) = a3 & 1;
    swift_retain();
    swift_retain();
    uint64_t v22 = sub_10011ABF4(a9, a10, (uint64_t)sub_10011C284, v21, (uint64_t)&type metadata for ByteBuffer, (uint64_t)&unk_1002E58D8, (uint64_t)sub_10011C2AC);
    swift_release();
  }
  swift_release();
  return v22;
}

uint64_t sub_10011A2F8(uint64_t result, void (*a2)(uint64_t, uint64_t, unint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19 = *(void *)result;
  uint64_t v20 = *(void *)(result + 8);
  unint64_t v21 = *(unsigned int *)(result + 16) | ((unint64_t)(*(unsigned __int16 *)(result + 20) | (*(unsigned __int8 *)(result + 22) << 16)) << 32);
  char v22 = *(unsigned char *)(result + 23);
  if (v22)
  {
    swift_errorRetain();
    sub_1000B44D0(v19, 1, a4, v23, v24, v25, v26, v27, v34, v36, v38, v40, v41, v42, v43, v45, v46, v47, v48,
      v49,
      v50,
      v51);
  }
  else
  {
    if (HIDWORD(v20) < v20)
    {
      __break(1u);
      return result;
    }
    if (HIDWORD(v20) == v20)
    {
      uint64_t v33 = swift_retain();
      a2(v33, v20, v21 & 0xFFFFFFFFFFFFFFLL);
      sub_100031E30(a4);
    }
    else
    {
      uint64_t v31 = swift_retain();
      a2(v31, v20, v21 & 0xFFFFFFFFFFFFFFLL);
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = a5;
      *(void *)(v32 + 24) = a6;
      *(void *)(v32 + 32) = a7;
      *(void *)(v32 + 40) = a8;
      *(void *)(v32 + 48) = a9;
      *(void *)(v32 + 56) = a10;
      *(void *)(v32 + 64) = a11;
      *(unsigned char *)(v32 + 72) = a12 & 1;
      *(void *)(v32 + 80) = a13;
      *(void *)(v32 + 88) = a14;
      *(void *)(v32 + 96) = a15;
      *(void *)(v32 + 104) = a16;
      *(void *)(v32 + 112) = a2;
      *(void *)(v32 + 120) = a3;
      *(void *)(v32 + 128) = a4;
      *(void *)(v32 + 136) = a17;
      *(void *)(v32 + 144) = a18;
      *(void *)(v32 + 152) = (HIDWORD(v20) - v20);
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10012DE30();
      swift_release();
    }
    swift_release();
  }
  return sub_1000B7264(v19, v20, v21, v22);
}

uint64_t sub_10011A548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v19 = *(void *)a1;
    swift_errorRetain();
    sub_1000B44D0(v19, 1, a16, v20, v21, v22, v23, v24, v32, v33, v34, v35, v36, v37, v38, v40, v42, v43, v44,
      v45,
      v46,
      v47);
    return sub_10003C3F0(v19, 1);
  }
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NonBlockingFileIO.swift", 119, 2, 200, ObjectType, a3);
  uint64_t result = a17 - 1;
  if (__OFSUB__(a17, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__(a18, a19))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  return sub_100119EF4(result, a18 + a19, a4, a5, a6, a7, a8, a9 & 1, a10, a11, a12, a13, a2, a3, a14, a15, a16);
}

uint64_t NonBlockingFileIO.read(fileRegion:allocator:eventLoop:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10011C42C();
  FileRegion.readableBytes.getter(v10, v11, v9 & 0xFFFFFFFFFFFFFFLL);
  uint64_t v12 = sub_10011C408();
  return sub_10011A0E4(v12, v13, v14, v15, v16, v17, v18, v19, v21, a9);
}

uint64_t NonBlockingFileIO.read(fileHandle:fromOffset:byteCount:allocator:eventLoop:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10011C460();
  return sub_10011A0E4(v9, v10, 0, v11, v12, v13, v14, v16, v15, a9);
}

uint64_t NonBlockingFileIO.read(fileHandle:byteCount:allocator:eventLoop:)()
{
  sub_10011C478();
  uint64_t v12 = v0;
  uint64_t v11 = v1;
  sub_10011C4A4();
  return sub_10011A0E4(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
}

void sub_10011A7B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v9 = (uint64_t *)(a2 + 16);
  if (a1 < 1)
  {
LABEL_49:
    swift_beginAccess();
    int v46 = *(_DWORD *)(a2 + 32);
    __int16 v47 = *(_WORD *)(a2 + 36);
    char v48 = *(unsigned char *)(a2 + 38);
    *(void *)a6 = *(void *)(a2 + 16);
    *(void *)(a6 + 8) = *(void *)(a2 + 24);
    *(_DWORD *)(a6 + 16) = v46;
    *(_WORD *)(a6 + 20) = v47;
    *(unsigned char *)(a6 + 22) = v48;
    swift_retain();
    return;
  }
  uint64_t v10 = 0;
  unint64_t v53 = (unsigned char *)(a3 + 16);
  uint64_t v52 = a1;
  while (1)
  {
    uint64_t v11 = a1 - v10;
    if (__OFSUB__(a1, v10)) {
      break;
    }
    swift_beginAccess();
    if (v11 >= 1)
    {
      uint64_t v12 = *(unsigned int *)(a2 + 28);
      uint64_t v13 = v12 + v11;
      if (__OFADD__(v12, v11)) {
        goto LABEL_58;
      }
      unsigned int v14 = *(_DWORD *)(a2 + 32);
      unsigned int v15 = *(unsigned __int8 *)(a2 + 38) | (*(unsigned __int16 *)(a2 + 36) << 8);
      BOOL v16 = v14 >= v15;
      unsigned int v17 = v14 - v15;
      if (!v16) {
        goto LABEL_59;
      }
      if (v13 > v17)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = *(unsigned __int8 *)(a2 + 38) | (*(unsigned __int16 *)(a2 + 36) << 8);
        if (!isUniquelyReferenced_nonNull_native)
        {
          LODWORD(v25) = *(_DWORD *)(a2 + 32);
          if (v25 < v19) {
            goto LABEL_66;
          }
          if (__CFADD__(v19, v25 - v19)) {
            goto LABEL_67;
          }
          unsigned int v26 = v19 + v13;
          if (__CFADD__(v19, v13)) {
            goto LABEL_68;
          }
          if (v26 >= v25) {
            uint64_t v25 = v25;
          }
          else {
            uint64_t v25 = v26;
          }
          if (v25 < v19) {
            goto LABEL_69;
          }
          uint64_t v27 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v19 | (v25 << 32), v13);
          swift_release();
          *(void *)(a2 + 16) = v27;
          int v28 = *(_DWORD *)(v27 + 16);
          goto LABEL_28;
        }
        unsigned int v20 = v19 + v13;
        if (__CFADD__(v19, v13)) {
          goto LABEL_65;
        }
        uint64_t v21 = *(unsigned int *)(a2 + 32);
        if (v21 < v20)
        {
          uint64_t v22 = *v9;
          unsigned int v23 = *(_DWORD *)(*v9 + 16);
          if (v23 < v20)
          {
            if (v19)
            {
              if (v21 < v19) {
                goto LABEL_71;
              }
              uint64_t v24 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v19 | (v21 << 32), v13);
              swift_release();
              *uint64_t v9 = v24;
              uint64_t v22 = v24;
            }
            else
            {
              ByteBuffer._Storage.reallocStorage(capacity:)(v13);
            }
            int v28 = *(_DWORD *)(v22 + 16);
LABEL_28:
            *(_DWORD *)(a2 + 32) = v28;
            *(_WORD *)(a2 + 36) = 0;
            *(unsigned char *)(a2 + 38) = 0;
            goto LABEL_29;
          }
          if (v23 < v19) {
            goto LABEL_70;
          }
          *(_DWORD *)(a2 + 32) = v23;
        }
      }
    }
LABEL_29:
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      unsigned int v29 = *(_DWORD *)(a2 + 32);
      int v30 = *(unsigned __int16 *)(a2 + 36);
      int v31 = *(unsigned __int8 *)(a2 + 38);
    }
    else
    {
      unsigned int v32 = *(_DWORD *)(a2 + 32);
      uint64_t v33 = *(unsigned __int8 *)(a2 + 38) | (*(unsigned __int16 *)(a2 + 36) << 8);
      int v34 = v32 - v33;
      if (v32 < v33) {
        goto LABEL_60;
      }
      if (__CFADD__(v33, v34)) {
        goto LABEL_61;
      }
      if (v32 < v33) {
        goto LABEL_62;
      }
      uint64_t v35 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v33 | ((unint64_t)v32 << 32), v34);
      swift_release();
      int v31 = 0;
      int v30 = 0;
      *(void *)(a2 + 16) = v35;
      unsigned int v29 = *(_DWORD *)(v35 + 16);
      *(_DWORD *)(a2 + 32) = v29;
      *(_WORD *)(a2 + 36) = 0;
      *(unsigned char *)(a2 + 38) = 0;
    }
    swift_beginAccess();
    unsigned int v36 = v31 | (v30 << 8);
    unsigned int v37 = v29 - v36;
    if (v29 < v36) {
      goto LABEL_55;
    }
    unsigned int v38 = *(_DWORD *)(a2 + 28);
    if ((v38 == 0 || v37 >= v38) && v37 < v38) {
      goto LABEL_63;
    }
    swift_beginAccess();
    if (*v53 != 1)
    {
      sub_100028EB4();
      swift_allocError();
      *(void *)uint64_t v49 = 0xD00000000000001FLL;
      *(void *)(v49 + 8) = 0x800000010027B110;
      *(_DWORD *)(v49 + 16) = 9;
LABEL_52:
      swift_willThrow();
LABEL_53:
      swift_endAccess();
      return;
    }
    if (a5)
    {
      uint64_t v39 = v7;
      sub_1001B60D4();
    }
    else
    {
      if (__OFADD__(a4, v10)) {
        goto LABEL_64;
      }
      uint64_t v39 = v7;
      sub_1001B624C();
    }
    uint64_t v7 = v39;
    if (v39) {
      goto LABEL_53;
    }
    uint64_t v42 = v40;
    if ((v41 & 1) == 0)
    {
      sub_10011C198();
      swift_allocError();
      goto LABEL_52;
    }
    int v43 = *(_DWORD *)(a2 + 28);
    BOOL v16 = __CFADD__(v43, v40);
    int v44 = v43 + v40;
    if (v16) {
      goto LABEL_56;
    }
    *(_DWORD *)(a2 + 28) = v44;
    swift_endAccess();
    if (!v42) {
      goto LABEL_49;
    }
    BOOL v45 = __OFADD__(v10, v42);
    v10 += v42;
    if (v45) {
      goto LABEL_57;
    }
    a1 = v52;
    if (v10 >= v52) {
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

uint64_t sub_10011ABF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = EventLoop.makePromise<A>(of:file:line:)(a5, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NIOThreadPool.swift", 115, 2, 224, ObjectType, a5, a2);
  unsigned int v14 = (void *)swift_allocObject();
  unsigned char v14[2] = v13;
  void v14[3] = a3;
  v14[4] = a4;
  swift_retain();
  swift_retain();
  NIOThreadPool.submit(_:)(a7, (uint64_t)v14);
  swift_release();
  return v13;
}

uint64_t sub_10011ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = sub_100019524(&qword_100310D28);
  uint64_t v9 = EventLoop.makePromise<A>(of:file:line:)(v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NIOThreadPool.swift", 115, 2, 224, ObjectType, v8, a2);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a3;
  v10[4] = a4;
  swift_retain();
  swift_retain();
  NIOThreadPool.submit(_:)((uint64_t)sub_10011C10C, (uint64_t)v10);
  swift_release();
  return v9;
}

uint64_t sub_10011ADA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for NIOFileHandle();
  uint64_t v9 = EventLoop.makePromise<A>(of:file:line:)(v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NIOThreadPool.swift", 115, 2, 224, ObjectType, v8, a2);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a3;
  v10[4] = a4;
  swift_retain();
  swift_retain();
  NIOThreadPool.submit(_:)((uint64_t)sub_10011C0AC, (uint64_t)v10);
  swift_release();
  return v9;
}

uint64_t NonBlockingFileIO.changeFileSize(fileHandle:size:eventLoop:)()
{
  sub_10011C448();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  uint64_t v5 = sub_10011ABF4(v1, v0, (uint64_t)sub_10011B8F8, v4, (uint64_t)&type metadata for ()[8], (uint64_t)&unk_1002E5860, (uint64_t)sub_10011C1FC);
  swift_release();
  return v5;
}

void sub_10011AF28(uint64_t a1)
{
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    sub_1001B6308();
  }
  else
  {
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD00000000000001FLL;
    *(void *)(v2 + 8) = 0x800000010027B110;
    *(_DWORD *)(v2 + 16) = 9;
    swift_willThrow();
  }
}

uint64_t NonBlockingFileIO.readFileSize(fileHandle:eventLoop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  uint64_t v6 = sub_10011ABF4(a2, a3, (uint64_t)sub_10011B914, a1, (uint64_t)&type metadata for Int64, (uint64_t)&unk_1002E5838, (uint64_t)sub_10011C1E8);
  swift_release();
  return v6;
}

void sub_10011B078(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    sub_1001B63A8();
    if (!v2)
    {
      sub_1001B63A8();
      uint64_t v6 = v5;
      sub_1001B63A8();
      *a2 = v6;
    }
  }
  else
  {
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v7 = 0xD00000000000001FLL;
    *(void *)(v7 + 8) = 0x800000010027B110;
    *(_DWORD *)(v7 + 16) = 9;
    swift_willThrow();
  }
}

void NonBlockingFileIO.write(fileHandle:buffer:eventLoop:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_10011B1D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a5;
  unint64_t v9 = HIDWORD(a5);
  uint64_t v10 = (HIDWORD(a5) - a5);
  if (HIDWORD(a5) < a5)
  {
    __break(1u);
  }
  else if (v10)
  {
    int v11 = a6;
    unint64_t v18 = HIWORD(a6);
    unint64_t v14 = HIDWORD(a6);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a4;
    *(_DWORD *)(v17 + 24) = v8;
    *(_DWORD *)(v17 + 28) = v9;
    *(_DWORD *)(v17 + 32) = v11;
    *(_WORD *)(v17 + 36) = v14;
    *(unsigned char *)(v17 + 38) = v18;
    *(void *)(v17 + 40) = v10;
    *(void *)(v17 + 48) = a1;
    *(void *)(v17 + 56) = a2;
    *(unsigned char *)(v17 + 64) = a3 & 1;
    swift_retain();
    swift_retain();
    sub_10011ABF4(a7, a8, (uint64_t)sub_10011C15C, v17, (uint64_t)&type metadata for ()[8], (uint64_t)&unk_1002E5860, (uint64_t)sub_10011C1FC);
    swift_release();
  }
  else
  {
    swift_getObjectType();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
  }
}

void NonBlockingFileIO.write(fileHandle:toOffset:buffer:eventLoop:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void sub_10011B390(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  unsigned int v10 = a2;
  unint64_t v11 = HIDWORD(a2);
  uint64_t v12 = (unsigned char *)(a5 + 16);
  swift_retain();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v13 = 0;
  while (v11 >= v10)
  {
    if (__OFSUB__(a4, v13)) {
      goto LABEL_22;
    }
    if (a4 - v13 != v11 - v10) {
      goto LABEL_23;
    }
    if (*v12 != 1)
    {
      sub_100028EB4();
      swift_allocError();
      *(void *)uint64_t v19 = 0xD00000000000001FLL;
      *(void *)(v19 + 8) = 0x800000010027B110;
      *(_DWORD *)(v19 + 16) = 9;
LABEL_19:
      swift_willThrow();
LABEL_20:
      swift_release();
      return;
    }
    if (a7)
    {
      uint64_t v14 = v8;
      sub_1001B6190();
    }
    else
    {
      if (__OFADD__(a6, v13)) {
        goto LABEL_26;
      }
      uint64_t v14 = v8;
      sub_1001B6454();
    }
    uint64_t v8 = v14;
    if (v14) {
      goto LABEL_20;
    }
    if ((v16 & 1) == 0)
    {
      sub_10011C198();
      swift_allocError();
      goto LABEL_19;
    }
    BOOL v17 = __CFADD__(v10, v15);
    v10 += v15;
    if (v17) {
      goto LABEL_24;
    }
    BOOL v18 = __OFADD__(v13, v15);
    v13 += v15;
    if (v18) {
      goto LABEL_25;
    }
    if (v13 >= a4) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t NonBlockingFileIO.openFile(path:eventLoop:)()
{
  sub_10011C448();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10011ACC4(v1, v0, (uint64_t)sub_10011B968, v4);
  swift_release();
  return v5;
}

void sub_10011B5E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for NIOFileHandle();
  swift_bridgeObjectRetain();
  NIOFileHandle.__allocating_init(path:mode:flags:)(a1, a2, 1);
  if (!v3)
  {
    uint64_t v8 = v7;
    swift_beginAccess();
    if (*(unsigned char *)(v8 + 16) == 1)
    {
      int v9 = *(_DWORD *)(v8 + 20);
      swift_retain();
      off_t v10 = sub_100028F00(v9, 0, 2);
      sub_100028F00(v9, 0, 0);
      uint64_t v13 = FileRegion.init(fileHandle:readerIndex:endIndex:)(v8, 0, v10);
      *(void *)a3 = v8;
      *(void *)(a3 + 8) = v13;
      *(void *)(a3 + 16) = v14;
      *(_DWORD *)(a3 + 24) = v15;
      *(_WORD *)(a3 + 28) = v16;
      *(unsigned char *)(a3 + 30) = v17;
    }
    else
    {
      sub_100028EB4();
      swift_allocError();
      *(void *)uint64_t v11 = 0xD00000000000001FLL;
      *(void *)(v11 + 8) = 0x800000010027B110;
      *(_DWORD *)(v11 + 16) = 9;
      swift_willThrow();
      NIOFileHandle.close()();
      if (v12) {
        swift_errorRelease();
      }
      swift_willThrow();
      swift_release();
    }
  }
}

uint64_t NonBlockingFileIO.openFile(path:mode:flags:eventLoop:)(uint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  __int16 v8 = a4;
  unint64_t v12 = HIDWORD(a4);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(unsigned char *)(v13 + 32) = a3;
  *(_WORD *)(v13 + 36) = v8;
  *(_DWORD *)(v13 + 40) = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10011ADA0(a5, a6, (uint64_t)sub_10011B9BC, v13);
  swift_release();
  return v14;
}

void sub_10011B840(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  type metadata accessor for NIOFileHandle();
  swift_bridgeObjectRetain();
  NIOFileHandle.__allocating_init(path:mode:flags:)(a1, a2, a3);
  if (!v4) {
    *a4 = v9;
  }
}

uint64_t sub_10011B8C0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10011B8F8()
{
  sub_10011AF28(*(void *)(v0 + 16));
}

void sub_10011B914(void *a1@<X8>)
{
  sub_10011B078(v1, a1);
}

uint64_t sub_10011B930()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10011B968(uint64_t a1@<X8>)
{
  sub_10011B5E8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10011B984()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 44, 7);
}

void sub_10011B9BC(void *a1@<X8>)
{
  sub_10011B840(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

unint64_t sub_10011B9EC()
{
  unint64_t result = qword_100310D18;
  if (!qword_100310D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310D18);
  }
  return result;
}

ValueMetadata *type metadata accessor for NonBlockingFileIO()
{
  return &type metadata for NonBlockingFileIO;
}

unsigned char *storeEnumTagSinglePayload for NonBlockingFileIO.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10011BAE4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NonBlockingFileIO.Error()
{
  return &type metadata for NonBlockingFileIO.Error;
}

uint64_t sub_10011BB1C(char a1, uint64_t a2, void (*a3)(void *__return_ptr))
{
  if (a1)
  {
    sub_10011C0BC();
    uint64_t v4 = swift_allocError();
    swift_errorRetain();
    LOBYTE(v9[0]) = 1;
    sub_1000B4CC8(v4, 0, 0x100000000000000, a2);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    a3(v9);
    uint64_t v5 = v9[1];
    unint64_t v6 = v10 | ((unint64_t)v11 << 32) | ((unint64_t)v12 << 48);
    uint64_t v7 = swift_retain();
    sub_1000B4CC8(v7, v5, v6, a2);
    return swift_release_n();
  }
}

#error "10011BCA0: call analysis failed (funcsize=59)"

#error "10011BD94: call analysis failed (funcsize=60)"

uint64_t sub_10011BE3C(char a1, uint64_t a2, void (*a3)(void *__return_ptr))
{
  if (a1)
  {
    sub_10011C0BC();
    uint64_t v4 = swift_allocError();
    swift_errorRetain();
    LOBYTE(v10[0]) = 1;
    sub_1000B4EF0(v4, 0, 0, 0x100000000000000uLL, a2);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    a3(v10);
    uint64_t v5 = v10[0];
    uint64_t v6 = v10[1];
    uint64_t v7 = v10[2];
    unint64_t v8 = v11 | ((unint64_t)v12 << 32) | ((unint64_t)v13 << 48);
    swift_retain();
    swift_retain();
    sub_1000B4EF0(v5, v6, v7, v8, a2);
    swift_release_n();
    return swift_release_n();
  }
}

#error "10011BFF8: call analysis failed (funcsize=62)"

uint64_t sub_10011C0AC(char a1)
{
  return sub_10011BFAC(a1 & 1, v1[2], v1[3], v1[4]);
}

unint64_t sub_10011C0BC()
{
  unint64_t result = qword_100310D20;
  if (!qword_100310D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310D20);
  }
  return result;
}

uint64_t sub_10011C10C(char a1)
{
  return sub_10011BE3C(a1 & 1, *(void *)(v1 + 16), *(void (**)(void *__return_ptr))(v1 + 24));
}

uint64_t sub_10011C11C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 65, 7);
}

void sub_10011C15C()
{
  sub_10011B390(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int16 *)(v0 + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 38) << 48), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
}

unint64_t sub_10011C198()
{
  unint64_t result = qword_100310D30;
  if (!qword_100310D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310D30);
  }
  return result;
}

uint64_t sub_10011C1E8(char a1)
{
  return sub_10011BD48(a1 & 1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10011C1FC(char a1)
{
  return sub_10011BC58(a1 & 1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10011C20C()
{
  swift_release();
  return _swift_deallocObject(v0, 39, 7);
}

uint64_t sub_10011C244()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 49, 7);
}

void sub_10011C284(uint64_t a1@<X8>)
{
  sub_10011A7B4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), a1);
}

uint64_t sub_10011C2AC(char a1)
{
  return sub_10011BB1C(a1 & 1, *(void *)(v1 + 16), *(void (**)(void *__return_ptr))(v1 + 24));
}

uint64_t sub_10011C2BC()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10011C314()
{
  sub_10011C490();
  return sub_10011A2F8(v1, v2, v3, v4, v5, v6, v7, v8, *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144));
}

uint64_t sub_10011C364()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10011C3BC()
{
  sub_10011C490();
  return sub_10011A548(v1, v2, v3, v4, v5, v6, v7, v8, *(unsigned char *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152));
}

uint64_t sub_10011C408()
{
  return v0;
}

uint64_t sub_10011C4B8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = sub_100216C7C();
  unint64_t v5 = v3;
  if (v3)
  {
    sub_10011C5D4(v2, v3, v4 & 1);
    swift_bridgeObjectRelease();
    sub_100217FE8();
    uint64_t v6 = v13;
    unint64_t v5 = v14;
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t v9 = v17 | ((unint64_t)v18 << 32) | ((unint64_t)v19 << 48);
    uint64_t v10 = 3;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v10 = 21;
  }
  ASOctaneSupportXPCService::HTTPVersion v11 = HTTPVersion.init(major:minor:)(1, 1);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = v10;
  *(ASOctaneSupportXPCService::HTTPVersion *)(result + 40) = v11;
  *(void *)a1 = result;
  *(void *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 16) = 2;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 62) = BYTE6(v9);
  *(_WORD *)(a1 + 60) = WORD2(v9);
  *(_DWORD *)(a1 + 56) = v9;
  return result;
}

uint64_t sub_10011C5D4(unint64_t a1, unint64_t a2, char a3)
{
  char v6 = a3 & 1;
  sub_1000671D8(a1, a2);
  if ((v7 & 1) != 0 || (sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112)), (uint64_t v8 = sub_1000A0FFC()) == 0))
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10024E1F0();
    sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1000671D8(a1, a2);
      sub_100019524(&qword_10030C9E8);
      uint64_t v16 = sub_10024E700();
      sub_1000F3F3C(v16, v17, &v18);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "no transaction for id: %s", v15, 0xCu);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  else
  {
    unint64_t v9 = (void *)v8;
    sub_1000D9478(3);
    if ((v10 & 1) != 0 && (sub_1000D4218() & 1) == 0)
    {
      sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112));
      sub_1000A0BEC((uint64_t)v9, 1, v6);

      return 2;
    }
    else
    {

      return 1;
    }
  }
}

uint64_t type metadata accessor for RefundRequestRoute()
{
  return self;
}

void *sub_10011CA00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000389BC();
    uint64_t v3 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_10024E740();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      if (v7 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1000389BC();
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v4;
      v8[5] = v6;
      v3 += 32;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t HTTPServerUpgradeHandler.__allocating_init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  HTTPServerUpgradeHandler.init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t HTTPServerUpgradeHandler.init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 56) = 0;
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = 0;
  sub_100030788(0x10uLL);
  *(void *)(v5 + 80) = v11;
  *(void *)(v5 + 88) = v12;
  *(void *)(v5 + 96) = v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v38 = a4;
    uint64_t v39 = a2;
    uint64_t v40 = a5;
    uint64_t v41 = a3;
    uint64_t v42 = v5;
    uint64_t v15 = a1 + 32;
    uint64_t v16 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      sub_100027788(v15, (uint64_t)v45);
      uint64_t v17 = v46;
      uint64_t v18 = v47;
      sub_10001C2A8(v45, v46);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      uint64_t v19 = sub_10024E710();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      sub_100027788((uint64_t)v45, (uint64_t)v44);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v43 = v16;
      sub_100120754();
      unint64_t v23 = sub_10011ED00();
      uint64_t v25 = v16[2];
      BOOL v26 = (v24 & 1) == 0;
      Swift::Int v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        break;
      }
      unint64_t v28 = v23;
      char v29 = v24;
      sub_100019524(&qword_100310E18);
      if (sub_10024F630(isUniquelyReferenced_nonNull_native, v27))
      {
        sub_100120754();
        unint64_t v30 = sub_10011ED00();
        if ((v29 & 1) != (v31 & 1)) {
          goto LABEL_17;
        }
        unint64_t v28 = v30;
      }
      uint64_t v16 = v43;
      if (v29)
      {
        uint64_t v32 = v43[7] + 40 * v28;
        sub_10001C2EC(v32);
        sub_10002F754(v44, v32);
      }
      else
      {
        v43[(v28 >> 6) + 8] |= 1 << v28;
        uint64_t v33 = (uint64_t *)(v43[6] + 16 * v28);
        *uint64_t v33 = v19;
        v33[1] = v21;
        sub_10002F754(v44, v43[7] + 40 * v28);
        uint64_t v34 = v43[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_16;
        }
        v43[2] = v36;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10001C2EC((uint64_t)v45);
      v15 += 40;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        a3 = v41;
        uint64_t v5 = v42;
        a2 = v39;
        a5 = v40;
        a4 = v38;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = sub_10024FB70();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = _swiftEmptyDictionarySingleton;
LABEL_14:
    *(void *)(v5 + 16) = v16;
    *(void *)(v5 + 24) = a4;
    *(void *)(v5 + 32) = a5;
    *(void *)(v5 + 40) = a2;
    *(void *)(v5 + 48) = a3;
    return v5;
  }
  return result;
}

uint64_t HTTPServerUpgradeHandler.channelRead(context:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(v3 + 56))
  {
    swift_beginAccess();
    sub_1000310B4(a2);
    return swift_endAccess();
  }
  else
  {
    sub_100019524(&qword_10030A518);
    sub_10003301C();
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    unint64_t v13 = HIBYTE(v9);
    uint64_t v14 = *(void (**)(uint64_t))(v3 + 64);
    switch((unint64_t)v14)
    {
      case 0uLL:
        sub_10011CF98(a1, v7, v8, v9);
        goto LABEL_13;
      case 1uLL:
        if (v13 != 2) {
          goto LABEL_13;
        }
        uint64_t result = sub_1001207C8();
        *(unsigned char *)(v3 + 56) = 1;
        break;
      case 2uLL:
        __break(1u);
        goto LABEL_17;
      case 3uLL:
        ChannelHandlerContext.fireChannelRead(_:)();
        goto LABEL_13;
      case 4uLL:
LABEL_17:
        __break(1u);
        JUMPOUT(0x10011CF84);
      default:
        if (v13 == 2)
        {
          *(unsigned char *)(v3 + 56) = 1;
          uint64_t v15 = swift_retain();
          v14(v15);
          sub_1001207C8();
          uint64_t result = sub_10011FD7C((unint64_t)v14);
        }
        else
        {
LABEL_13:
          uint64_t result = sub_10003C488(v10, v11, v12, v13);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_10011CF98(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  if (HIBYTE(a4))
  {
    sub_100120238();
    swift_allocError();
    ChannelHandlerContext.fireErrorCaught(_:)();
    swift_errorRelease();
    return sub_10011D448(a1, a2, a3, a4);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    HTTPHeaders.subscript.getter();
    uint64_t v11 = sub_10011CA00(v10);
    swift_bridgeObjectRelease();
    if (v11[2])
    {
      unint64_t v12 = *(void *)(v4 + 64);
      *(_OWORD *)(v4 + 64) = xmmword_10025C2E0;
      sub_10011FD7C(v12);
      sub_10011D59C(a1, a2, a3, a4, (uint64_t)v11);
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 56);
      uint64_t v14 = swift_unknownObjectRetain();
      sub_10016379C(v14, v13);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = a1;
      *(void *)(v15 + 24) = v5;
      *(void *)(v15 + 32) = a2;
      *(void *)(v15 + 40) = a3;
      *(unsigned char *)(v15 + 54) = BYTE6(a4);
      *(_WORD *)(v15 + 52) = WORD2(a4);
      *(_DWORD *)(v15 + 48) = a4;
      *(unsigned char *)(v15 + 55) = 0;
      sub_100093004(a2, a3, a4, 0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10012FB4C();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_10011D448(a1, a2, a3, a4);
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
}

uint64_t HTTPServerUpgradeHandler.removeHandler(context:removalToken:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 10;
  swift_beginAccess();
LABEL_2:
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  uint64_t v7 = v6 - v5;
  if (v6 < v5) {
    v7 += *(void *)(*v4 + 16);
  }
  if (v7 < 1) {
    return ChannelHandlerContext.leavePipeline(removalToken:)(a2);
  }
  while (1)
  {
    BOOL v8 = __OFSUB__(v6, v5);
    uint64_t v9 = v6 - v5;
    if (v9 < 0 != v8) {
      v9 += *(void *)(*v4 + 16);
    }
    if (v9 < 1)
    {
      ChannelHandlerContext.fireChannelReadComplete()();
      goto LABEL_2;
    }
    swift_beginAccess();
    unint64_t v10 = v2[11];
    uint64_t v11 = v2[12];
    if (v11 == v10) {
      break;
    }
    if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10)) {
      goto LABEL_28;
    }
    uint64_t v12 = v2[10];
    if (v10 >= *(void *)(v12 + 16)) {
      goto LABEL_24;
    }
    sub_10011FD90(v12 + (v10 << 6) + 32, (uint64_t)&v17);
    if (v19[24] == 255) {
      goto LABEL_27;
    }
    v20[0] = v17;
    v20[1] = v18;
    v21[0] = *(_OWORD *)v19;
    *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)&v19[9];
    uint64_t v13 = v11 - v10;
    if (v11 < (uint64_t)v10) {
      v13 += *(void *)(v12 + 16);
    }
    if (v13 < 1) {
      goto LABEL_25;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v4 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10011FD0C();
      uint64_t v12 = v15;
    }
    long long v18 = 0u;
    memset(v19, 0, 24);
    long long v17 = 0u;
    unsigned char v19[24] = -1;
    *uint64_t v4 = v12;
    if (v10 >= *(void *)(v12 + 16)) {
      goto LABEL_26;
    }
    sub_100092F9C((uint64_t)&v17, v12 + (v10 << 6) + 32);
    v2[11] = (*(void *)(v2[10] + 16) - 1) & (v10 + 1);
    swift_endAccess();
    ChannelHandlerContext.fireChannelRead(_:)();
    sub_10003908C((uint64_t)v20);
    uint64_t v5 = v2[11];
    uint64_t v6 = v2[12];
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_10003C4F8();
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t sub_10011D448(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v10 = HIBYTE(a4);
  unint64_t v11 = *(void *)(v5 + 64);
  *(_OWORD *)(v5 + 64) = xmmword_10025C310;
  sub_10011FD7C(v11);
  if (*(unsigned char *)(v5 + 56))
  {
    uint64_t v12 = sub_100019524(&qword_10030A518);
    uint64_t v16 = v12;
    *(void *)uint64_t v14 = a2;
    *(void *)&v14[8] = a3;
    v14[22] = BYTE6(a4);
    *(_WORD *)&v14[20] = WORD2(a4);
    *(_DWORD *)&v14[16] = a4;
    char v15 = v10;
    char v17 = 2;
    sub_100093004(a2, a3, a4, v10);
    ChannelHandlerContext.fireChannelRead(_:)();
    sub_10003908C((uint64_t)v14);
    uint64_t v16 = v12;
    memset(v14, 0, sizeof(v14));
    char v15 = 2;
    char v17 = 2;
  }
  else
  {
    uint64_t v16 = sub_100019524(&qword_10030A518);
    *(void *)uint64_t v14 = a2;
    *(void *)&v14[8] = a3;
    v14[22] = BYTE6(a4);
    *(_WORD *)&v14[20] = WORD2(a4);
    *(_DWORD *)&v14[16] = a4;
    char v15 = v10;
    char v17 = 2;
    sub_100093004(a2, a3, a4, v10);
  }
  ChannelHandlerContext.fireChannelRead(_:)();
  sub_10003908C((uint64_t)v14);
  ChannelHandlerContext.fireChannelReadComplete()();
  return ChannelPipeline.removeHandler(context:promise:)(a1, 0);
}

void sub_10011D59C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  HTTPHeaders.subscript.getter();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    sub_1000389BC();
    uint64_t v9 = v7 + 56;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10024F060();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      if (v13 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1000389BC();
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v10;
      void v14[5] = v12;
      v9 += 32;
      --v8;
    }
    while (v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1001D4BB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = sub_10001AC50(0, v16);
  if (v17)
  {
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    sub_1000389BC();
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = a3 + 40;
      while (v16)
      {
        uint64_t v20 = sub_10024E710();
        uint64_t v22 = v21;
        unint64_t v23 = _swiftEmptyArrayStorage[2];
        if (v23 >= _swiftEmptyArrayStorage[3] >> 1) {
          sub_1000389BC();
        }
        _swiftEmptyArrayStorage[2] = v23 + 1;
        char v24 = &_swiftEmptyArrayStorage[2 * v23];
        v24[4] = v20;
        void v24[5] = v22;
        --v16;
        v19 += 32;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    uint64_t v25 = sub_1001D4BB0((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain();
    sub_10011D920(a1, a5, 0, a2, a3, a4, v25, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10011D818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v7 = *(void (**)(uint64_t))a1;
  if (!*(void *)a1) {
    return sub_10011D448(a2, a4, a5, a6);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v7;
  *(void *)(result + 24) = v8;
  if (*(void *)(a3 + 64) == 1)
  {
    *(void *)(a3 + 64) = sub_1001202F4;
    *(void *)(a3 + 72) = result;
    sub_10003C360((uint64_t)v7);
    swift_retain();
    sub_10011FD7C(1uLL);
    if (*(unsigned char *)(a3 + 56) == 1)
    {
      uint64_t v10 = swift_retain();
      v7(v10);
      swift_release();
    }
    return sub_10003C350((uint64_t)v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10011D920(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  unint64_t v9 = *(void *)(a2 + 16);
  if (v9 != a3)
  {
    if (v9 <= a3)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = v8;
    uint64_t v67 = result;
    uint64_t v17 = a2 + 16 * a3;
    uint64_t v18 = *(void *)(v17 + 40);
    uint64_t v19 = a3 + 1;
    uint64_t v20 = *(void *)(v8 + 16);
    uint64_t v59 = *(void *)(v17 + 32);
    sub_10024E710();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10016166C(v20, (uint64_t)&v68);
    swift_bridgeObjectRelease();
    if (!v69)
    {
      swift_bridgeObjectRelease();
      sub_1001202FC((uint64_t)&v68);
      uint64_t v11 = sub_100120784(v67, a2, v19, a4, v33, v34, v35, v36, v48, v49, v50, v51, v52, v53, v54, v55, v57, v59, v60,
              v62,
              v64,
              a6);
      swift_bridgeObjectRelease();
      return v11;
    }
    uint64_t v58 = v19;
    uint64_t v61 = a7;
    uint64_t v63 = a8;
    sub_10002F754(&v68, (uint64_t)v70);
    uint64_t v21 = v71;
    uint64_t v22 = v72;
    sub_10001C2A8(v70, v71);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v54 = a5;
      uint64_t v55 = v12;
      *(void *)&long long v68 = _swiftEmptyArrayStorage;
      sub_1000389BC();
      uint64_t v25 = (void *)v68;
      uint64_t v26 = v23 + 40;
      do
      {
        uint64_t v27 = sub_10024E710();
        uint64_t v29 = v28;
        *(void *)&long long v68 = v25;
        unint64_t v30 = v25[2];
        if (v30 >= v25[3] >> 1)
        {
          sub_1000389BC();
          uint64_t v25 = (void *)v68;
        }
        v26 += 16;
        void v25[2] = v30 + 1;
        char v31 = &v25[2 * v30];
        v31[4] = v27;
        v31[5] = v29;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v32 = a4;
      uint64_t v12 = v55;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = _swiftEmptyArrayStorage;
      uint64_t v32 = a4;
    }
    uint64_t v37 = sub_1001D4BB0((uint64_t)v25);
    if (sub_10011DDF0(v61, v37))
    {
      char v38 = sub_10011DDF0(v63, v37);
      swift_bridgeObjectRelease();
      if (v38)
      {
        sub_10011E0D8(v59, v18);
        uint64_t v56 = v12;
        uint64_t v39 = v72;
        sub_10001C2A8(v70, v71);
        uint64_t v40 = sub_1000AE91C();
        (*(void (**)(uint64_t))(v39 + 24))(v40);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_100027788((uint64_t)v70, (uint64_t)&v68);
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = v56;
        *(void *)(v41 + 24) = v67;
        *(void *)(v41 + 32) = v32;
        *(void *)(v41 + 40) = a5;
        *(unsigned char *)(v41 + 48) = a6;
        sub_10002F754(&v68, v41 + 56);
        *(void *)(v41 + 96) = v59;
        *(void *)(v41 + 104) = v18;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_1001B7994();
        swift_release();
        swift_release();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v43 = swift_bridgeObjectRetain();
        uint64_t v11 = sub_100124B44((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HTTPServerUpgradeHandler.swift", 126, 2, 245, v42, v67, v56, a2, v58, v32, a5, a6, v61, v43);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_19:
        swift_bridgeObjectRelease();
        sub_10001C2EC((uint64_t)v70);
        return v11;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_100120784(v67, a2, v58, v32, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v58, v59, v61,
            v63,
            v64,
            a6);
    goto LABEL_19;
  }
  swift_getObjectType();
  v70[0] = 0;
  v70[1] = 0;
  swift_unknownObjectRetain();
  sub_100019524(&qword_100310F60);
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v11 = v10;
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_10011DDF0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v31 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  uint64_t v32 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      goto LABEL_23;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v13 >= v30) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v30) {
          goto LABEL_40;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_23:
    if (!*(void *)(v4 + 16))
    {
      uint64_t v2 = 0;
      goto LABEL_41;
    }
    uint64_t v16 = v3;
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10024FC00();
    swift_bridgeObjectRetain();
    sub_10024E780();
    Swift::Int v20 = sub_10024FC70();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v20 & ~v22;
    if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_38;
    }
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_10024FA60() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v24 + 16 * v23);
        BOOL v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_10024FA60() & 1) != 0) {
          goto LABEL_37;
        }
      }
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_41:
      sub_10001B070();
      return v2;
    }
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_40:
    uint64_t v2 = 1;
    goto LABEL_41;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_10011E0D8(uint64_t a1, uint64_t a2)
{
  sub_100019524(&qword_100309300);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100256170;
  *(void *)(v4 + 32) = 0x697463656E6E6F63;
  *(void *)(v4 + 40) = 0xEA00000000006E6FLL;
  *(void *)(v4 + 48) = 0x65646172677075;
  *(void *)(v4 + 56) = 0xE700000000000000;
  *(void *)(v4 + 64) = 0x65646172677075;
  *(void *)(v4 + 72) = 0xE700000000000000;
  *(void *)(v4 + 80) = a1;
  *(void *)(v4 + 88) = a2;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_10011E178@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v16 = *a1;
  char v17 = *((unsigned char *)a1 + 8);
  sub_100027788(a7, (uint64_t)v21);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(unsigned char *)(v18 + 48) = a6;
  *(void *)(v18 + 56) = v16;
  *(unsigned char *)(v18 + 64) = v17;
  sub_10002F754(v21, v18 + 72);
  *(void *)(v18 + 112) = a8;
  *(void *)(v18 + 120) = a10;
  *a9 = sub_10012045C;
  a9[1] = (uint64_t (*)())v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10011E274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v17 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 64) = xmmword_10025C300;
  sub_10011FD7C(v17);
  sub_10011E670(a2);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(unsigned char *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = a6;
  *(unsigned char *)(v18 + 64) = a7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10012053C;
  *(void *)(v21 + 24) = v20;
  swift_retain();
  swift_retain();
  sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HTTPServerUpgradeHandler.swift", 126, 2, 233, (uint64_t)sub_100092E78, v21);
  swift_release();
  swift_release();
  sub_100027788(a8, (uint64_t)v27);
  uint64_t v22 = swift_allocObject();
  sub_10002F754(v27, v22 + 16);
  *(void *)(v22 + 56) = a2;
  *(void *)(v22 + 64) = a3;
  *(void *)(v22 + 72) = a4;
  *(unsigned char *)(v22 + 80) = a5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a9;
  *(void *)(v23 + 32) = a10;
  *(void *)(v23 + 40) = a3;
  *(void *)(v23 + 48) = a4;
  *(unsigned char *)(v23 + 56) = a5;
  *(void *)(v23 + 64) = a1;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10012065C;
  *(void *)(v24 + 24) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HTTPServerUpgradeHandler.swift", 126, 2, 237, (uint64_t)sub_10009306C, v24);
  swift_release();
  swift_release();
  swift_retain_n();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_release();
}

uint64_t sub_10011E670(uint64_t a1)
{
  if (*(void *)(*(void *)(v1 + 48) + 16))
  {
    swift_retain();
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_100090C24(v3);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 56);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1084, ObjectType, (uint64_t)&type metadata for ()[8], v5);
    swift_unknownObjectRetain();
    sub_10011EBE0((uint64_t)v4, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v7 = v8;
  }
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_10011E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = 1;
  *(_DWORD *)(v8 + 40) = 65537;
  uint64_t v15 = sub_100019524(&qword_10030A1F8);
  v12[0] = v8;
  v12[1] = a5;
  int v13 = a6;
  int v14 = 0;
  char v16 = 2;
  sub_100032844();
  uint64_t v10 = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  ChannelHandlerContext.writeAndFlush(_:promise:)((uint64_t)v12, v10);
  swift_release();
  sub_10003908C((uint64_t)v12);
  swift_release();
  return v10;
}

uint64_t sub_10011E878(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain();
  uint64_t v4 = sub_10011E8E0(a2, v3);
  swift_release();
  return v4;
}

uint64_t sub_10011E8E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_unknownObjectRetain();
    ChannelPipeline.removeHandler(_:)();
    uint64_t v3 = v2;
    swift_unknownObjectRelease();
    return v3;
  }
  else
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v6 = v5;
    swift_unknownObjectRelease();
    return v6;
  }
}

uint64_t sub_10011E990(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10001C2A8(a1, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(a2, a3, a4, a5, v9, v10);
}

unint64_t sub_10011EA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  void v16[3] = &type metadata for HTTPServerUpgradeEvents;
  uint64_t v13 = swift_allocObject();
  v16[0] = v13;
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  *(void *)(v13 + 32) = a4;
  *(void *)(v13 + 40) = a5;
  *(unsigned char *)(v13 + 48) = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  ChannelHandlerContext.fireUserInboundEventTriggered(_:)();
  sub_10001C2EC((uint64_t)v16);
  unint64_t v14 = *(void *)(a7 + 64);
  *(_OWORD *)(a7 + 64) = xmmword_10025C320;
  return sub_10011FD7C(v14);
}

uint64_t sub_10011EAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10)
{
  return sub_10011D920(a2, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t HTTPServerUpgradeHandler.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10011FD7C(*(void *)(v0 + 64));
  swift_release();
  return v0;
}

uint64_t HTTPServerUpgradeHandler.__deallocating_deinit()
{
  HTTPServerUpgradeHandler.deinit();
  return _swift_deallocClassInstance(v0, 104, 7);
}

void sub_10011EBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4))
  {
    sub_100138818();
  }
  else
  {
    uint64_t v7 = (void *)swift_allocObject();
    _OWORD v7[2] = a2;
    v7[3] = a1;
    v7[4] = v5;
    v7[5] = v4;
    uint64_t v8 = *(void (**)(void (*)(), void *, uint64_t, uint64_t))(v4 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v8(sub_100120704, v7, ObjectType, v4);
    swift_release();
  }
}

unint64_t sub_10011ED00()
{
  sub_100120760();
  sub_10024E780();
  sub_10024FC70();
  uint64_t v0 = sub_100120754();
  return sub_10011EF90(v0, v1, v2);
}

unint64_t sub_10011ED60(char a1)
{
  sub_10024FC00();
  sub_100152BBC(a1);
  sub_100120730();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10024FC70();
  return sub_10011F074(a1, v2);
}

unint64_t sub_10011EDD4(uint64_t a1)
{
  uint64_t v2 = sub_10024FBF0();
  return sub_10011F1EC(a1, v2);
}

unint64_t sub_10011EE18()
{
  sub_100120760();
  uint64_t v0 = sub_100120754();
  HTTPMethod.rawValue.getter(v0, v1);
  sub_100120730();
  swift_bridgeObjectRelease();
  sub_10024FC70();
  uint64_t v2 = sub_100120754();
  return sub_10011F288(v2, v3, v4);
}

unint64_t sub_10011EE7C()
{
  sub_1001207A8();
  type metadata accessor for CFString(0);
  sub_1001201E8();
  sub_10024E180();
  Swift::Int v1 = sub_10024FC70();
  return sub_10011FAC8(v0, v1);
}

unint64_t sub_10011EEF0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_10024F2C0(*(void *)(v2 + 40));
  return sub_10011FBF4(a1, v4);
}

unint64_t sub_10011EF38()
{
  sub_1001207A8();
  sub_10024FC20(v0);
  Swift::Int v1 = sub_10024FC70();
  return sub_10011F1EC(v0, v1);
}

unint64_t sub_10011EF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10024FA60() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10024FA60() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10011F074(char a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    unint64_t v7 = sub_100152BBC(*(unsigned char *)(*(void *)(v2 + 48) + v5));
    uint64_t v9 = v8;
    if (v7 == sub_100152BBC(a1) && v9 == v10)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v12 = sub_10024FA60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = ~v4;
      unint64_t v5 = (v5 + 1) & v13;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          unint64_t v14 = sub_100152BBC(*(unsigned char *)(*(void *)(v2 + 48) + v5));
          uint64_t v16 = v15;
          if (v14 == sub_100152BBC(a1) && v16 == v17) {
            break;
          }
          char v19 = sub_10024FA60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v13;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10011F1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10011F288(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v22 = ~v4;
    while (1)
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v5);
      uint64_t v9 = *v8;
      unint64_t v10 = v8[1];
      unint64_t v11 = 0xE300000000000000;
      unint64_t v12 = 5522759;
      switch(v10)
      {
        case 0uLL:
          break;
        case 1uLL:
          unint64_t v12 = 5526864;
          break;
        case 2uLL:
          unint64_t v12 = 4997953;
          break;
        case 3uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1145128264;
          break;
        case 4uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1414745936;
          break;
        case 5uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1498435395;
          break;
        case 6uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1262702412;
          break;
        case 7uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1163284301;
          break;
        case 8uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1145981250;
          break;
        case 9uLL:
          unint64_t v11 = 0xE400000000000000;
          unint64_t v12 = 1263421772;
          break;
        case 0xAuLL:
          unint64_t v11 = 0xE500000000000000;
          unint64_t v12 = 0x4843544150;
          break;
        case 0xBuLL:
          unint64_t v11 = 0xE500000000000000;
          unint64_t v13 = 1128354388;
          goto LABEL_20;
        case 0xCuLL:
          unint64_t v11 = 0xE500000000000000;
          unint64_t v12 = 0x4C4F434B4DLL;
          break;
        case 0xDuLL:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v14 = 17741;
          goto LABEL_19;
        case 0xEuLL:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v14 = 21840;
LABEL_19:
          unint64_t v13 = v14 & 0xFFFFFFFF0000FFFFLL | 0x47520000;
LABEL_20:
          unint64_t v12 = v13 & 0xFFFF0000FFFFFFFFLL | 0x4500000000;
          break;
        case 0xFuLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x594649544F4ELL;
          break;
        case 0x10uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x484352414553;
          break;
        case 0x11uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x4B434F4C4E55;
          break;
        case 0x12uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x444E49424552;
          break;
        case 0x13uLL:
          unint64_t v12 = 0x444E49424E55;
          unint64_t v11 = 0xE600000000000000;
          break;
        case 0x14uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x54524F504552;
          break;
        case 0x15uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x4554454C4544;
          break;
        case 0x16uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x4B4E494C4E55;
          break;
        case 0x17uLL:
          unint64_t v11 = 0xE700000000000000;
          unint64_t v12 = 0x5443454E4E4F43;
          break;
        case 0x18uLL:
          unint64_t v11 = 0xE700000000000000;
          unint64_t v12 = 0x4843524145534DLL;
          break;
        case 0x19uLL:
          unint64_t v11 = 0xE700000000000000;
          unint64_t v12 = 0x534E4F4954504FLL;
          break;
        case 0x1AuLL:
          unint64_t v11 = 0xE800000000000000;
          unint64_t v12 = 0x444E4946504F5250;
          break;
        case 0x1BuLL:
          unint64_t v11 = 0xE800000000000000;
          unint64_t v12 = 0x54554F4B43454843;
          break;
        case 0x1CuLL:
          unint64_t v12 = 0x43544150504F5250;
          unint64_t v11 = 0xE900000000000048;
          break;
        case 0x1DuLL:
          unint64_t v12 = 0x4249524353425553;
          unint64_t v11 = 0xE900000000000045;
          break;
        case 0x1EuLL:
          unint64_t v12 = 0x444E454C41434B4DLL;
          unint64_t v11 = 0xEA00000000005241;
          break;
        case 0x1FuLL:
          unint64_t v12 = 0x4956495443414B4DLL;
          unint64_t v11 = 0xEA00000000005954;
          break;
        case 0x20uLL:
          unint64_t v12 = 0x5243534255534E55;
          unint64_t v11 = 0xEB00000000454249;
          break;
        case 0x21uLL:
          unint64_t v11 = 0xE600000000000000;
          unint64_t v12 = 0x454352554F53;
          break;
        default:
          unint64_t v12 = *v8;
          unint64_t v11 = v8[1];
          break;
      }
      unint64_t v15 = 0xE300000000000000;
      unint64_t v16 = 5522759;
      switch(a2)
      {
        case 0uLL:
          break;
        case 1uLL:
          unint64_t v16 = 5526864;
          break;
        case 2uLL:
          unint64_t v16 = 4997953;
          break;
        case 3uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1145128264;
          break;
        case 4uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1414745936;
          break;
        case 5uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1498435395;
          break;
        case 6uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1262702412;
          break;
        case 7uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1163284301;
          break;
        case 8uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1145981250;
          break;
        case 9uLL:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1263421772;
          break;
        case 0xAuLL:
          unint64_t v15 = 0xE500000000000000;
          unint64_t v16 = 0x4843544150;
          break;
        case 0xBuLL:
          unint64_t v15 = 0xE500000000000000;
          unint64_t v17 = 1128354388;
          goto LABEL_57;
        case 0xCuLL:
          unint64_t v15 = 0xE500000000000000;
          unint64_t v16 = 0x4C4F434B4DLL;
          break;
        case 0xDuLL:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v18 = 17741;
          goto LABEL_56;
        case 0xEuLL:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v18 = 21840;
LABEL_56:
          unint64_t v17 = v18 & 0xFFFFFFFF0000FFFFLL | 0x47520000;
LABEL_57:
          unint64_t v16 = v17 & 0xFFFF0000FFFFFFFFLL | 0x4500000000;
          break;
        case 0xFuLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x594649544F4ELL;
          break;
        case 0x10uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x484352414553;
          break;
        case 0x11uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x4B434F4C4E55;
          break;
        case 0x12uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x444E49424552;
          break;
        case 0x13uLL:
          unint64_t v16 = 0x444E49424E55;
          unint64_t v15 = 0xE600000000000000;
          break;
        case 0x14uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x54524F504552;
          break;
        case 0x15uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x4554454C4544;
          break;
        case 0x16uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x4B4E494C4E55;
          break;
        case 0x17uLL:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v16 = 0x5443454E4E4F43;
          break;
        case 0x18uLL:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v16 = 0x4843524145534DLL;
          break;
        case 0x19uLL:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v16 = 0x534E4F4954504FLL;
          break;
        case 0x1AuLL:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v16 = 0x444E4946504F5250;
          break;
        case 0x1BuLL:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v16 = 0x54554F4B43454843;
          break;
        case 0x1CuLL:
          unint64_t v16 = 0x43544150504F5250;
          unint64_t v15 = 0xE900000000000048;
          break;
        case 0x1DuLL:
          unint64_t v16 = 0x4249524353425553;
          unint64_t v15 = 0xE900000000000045;
          break;
        case 0x1EuLL:
          unint64_t v16 = 0x444E454C41434B4DLL;
          unint64_t v15 = 0xEA00000000005241;
          break;
        case 0x1FuLL:
          unint64_t v16 = 0x4956495443414B4DLL;
          unint64_t v15 = 0xEA00000000005954;
          break;
        case 0x20uLL:
          unint64_t v16 = 0x5243534255534E55;
          unint64_t v15 = 0xEB00000000454249;
          break;
        case 0x21uLL:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x454352554F53;
          break;
        default:
          unint64_t v16 = a1;
          unint64_t v15 = a2;
          break;
      }
      if (v12 == v16 && v11 == v15) {
        break;
      }
      char v20 = sub_10024FA60();
      sub_10006B3D4(v9, v10);
      sub_10006B3D4(v9, v10);
      sub_10006B3D4(a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10006B3E8(v9, v10);
      if ((v20 & 1) == 0)
      {
        unint64_t v5 = (v5 + 1) & v22;
        if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
          continue;
        }
      }
      return v5;
    }
    sub_10006B3D4(v9, v10);
    sub_10006B3D4(v9, v10);
    sub_10006B3D4(a1, a2);
    swift_bridgeObjectRelease_n();
    sub_10006B3E8(v9, v10);
  }
  return v5;
}

unint64_t sub_10011FAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1001201E8();
    id v7 = v6;
    char v8 = sub_10024E170();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_10024E170();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10011FBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10012018C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_10024F2D0();
      sub_10003F6F4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_10011FCBC()
{
}

uint64_t sub_10011FCCC()
{
  uint64_t v0 = sub_10012071C();
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v0);
}

void sub_10011FCDC()
{
}

void sub_10011FCEC()
{
}

void sub_10011FCFC()
{
}

void sub_10011FD0C()
{
}

void sub_10011FD1C()
{
}

void sub_10011FD2C()
{
}

void sub_10011FD3C()
{
}

void sub_10011FD4C()
{
}

void sub_10011FD5C()
{
}

void sub_10011FD6C()
{
}

unint64_t sub_10011FD7C(unint64_t result)
{
  if (result >= 5) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10011FD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030A508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10011FDFC()
{
  unint64_t result = qword_100310E20;
  if (!qword_100310E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310E20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HTTPServerUpgradeErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10011FEE4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPServerUpgradeErrors()
{
  return &type metadata for HTTPServerUpgradeErrors;
}

uint64_t destroy for HTTPServerUpgradeEvents()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HTTPServerUpgradeEvents(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPServerUpgradeEvents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for HTTPServerUpgradeEvents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for HTTPServerUpgradeEvents()
{
  return &type metadata for HTTPServerUpgradeEvents;
}

uint64_t type metadata accessor for HTTPServerUpgradeHandler()
{
  return self;
}

uint64_t getEnumTagSinglePayload for HTTPServerUpgradeHandler.UpgradeState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HTTPServerUpgradeHandler.UpgradeState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPServerUpgradeHandler.UpgradeState()
{
  return &type metadata for HTTPServerUpgradeHandler.UpgradeState;
}

uint64_t sub_10012018C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1001201E8()
{
  unint64_t result = qword_100310F48;
  if (!qword_100310F48)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310F48);
  }
  return result;
}

unint64_t sub_100120238()
{
  unint64_t result = qword_100310F50;
  if (!qword_100310F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310F50);
  }
  return result;
}

uint64_t sub_100120284()
{
  swift_release();
  swift_release();
  sub_10003C488(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned int *)(v0 + 48) | ((unint64_t)(*(unsigned __int16 *)(v0 + 52) | (*(unsigned __int8 *)(v0 + 54) << 16)) << 32), *(unsigned char *)(v0 + 55));
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001202E4(uint64_t a1)
{
  return sub_10011D818(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1001202F4()
{
  return sub_10004CAEC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1001202FC(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_100310F58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012035C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10001C2EC(v0 + 56);
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1001203BC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  return sub_10011E178(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48), v2 + 56, *(void *)(v2 + 96), a2, *(void *)(v2 + 104));
}

uint64_t sub_1001203F4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001C2EC(v0 + 72);
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10012045C()
{
  return sub_10011E274(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64), v0 + 72, *(void *)(v0 + 112), *(void *)(v0 + 120));
}

uint64_t sub_10012049C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1001204F4()
{
  return sub_10011E794(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
}

uint64_t sub_100120530()
{
  return sub_10011E878(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10012053C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 24))(*(void *)(v0 + 24));
}

uint64_t sub_100120568()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001205A0()
{
  sub_10001C2EC(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_1001205F0()
{
  return sub_10011E990((void *)(v0 + 16), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_100120604()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

unint64_t sub_10012065C()
{
  return sub_10011EA0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_100120674()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1001206BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100120704()
{
}

uint64_t sub_10012071C()
{
  return 0;
}

uint64_t sub_100120730()
{
  return sub_10024E780();
}

uint64_t sub_100120754()
{
  return v0;
}

uint64_t sub_100120760()
{
  return sub_10024FC00();
}

uint64_t sub_100120784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  return sub_10011D920(a1, a2, a3, a4, v23, a22, v24, v22);
}

uint64_t sub_1001207A8()
{
  return sub_10024FC00();
}

uint64_t sub_1001207C8()
{
  return sub_10003C488(v2, v1, v0, 2);
}

uint64_t EventLoopPromise.succeed(_:)()
{
  sub_10001B028(&qword_100309768);
  sub_1001411AC();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v0, v1);
  sub_10007A8C4();
  sub_100118854();
  v2();
  swift_storeEnumTagMultiPayload();
  EventLoopPromise._resolve(value:)();
  uint64_t v3 = sub_10014173C();
  return v4(v3);
}

uint64_t EventLoopPromise.fail(_:)(uint64_t a1)
{
  sub_10001B028(&qword_100309768);
  sub_1001411AC();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v2, v3);
  *(uint64_t *)((char *)&v8 - v4) = a1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  EventLoopPromise._resolve(value:)();
  uint64_t v5 = sub_10014173C();
  return v6(v5);
}

uint64_t EventLoopFuture.whenFailure(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100124AC8(a1, a2);
}

uint64_t EventLoopFuture.cascadeFailure<A>(to:)(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *v2;
    char v6 = (void *)sub_1001188D4();
    _OWORD v6[2] = *(void *)(v5 + 80);
    v6[3] = a2;
    v6[4] = v4;
    swift_retain_n();
    EventLoopFuture.whenFailure(_:)((uint64_t)sub_1001374AC, (uint64_t)v6);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_100120A9C()
{
}

__n128 *sub_100120AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  sub_100019524(&qword_10030AE38);
  char v6 = (__n128 *)sub_100140DEC();
  sub_100140C04(v6, a5[2]);
  swift_retain();
  sub_100140F68();
  sub_10012F2E0((uint64_t)a5, (uint64_t)a5, (uint64_t)v6);
  swift_release();
  return v6;
}

uint64_t sub_100120B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  return sub_100120B50(a1, a2, a3, a4, a5, (void (*)(__n128 *, __n128 *, uint64_t))sub_1001304B8);
}

uint64_t sub_100120B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  return sub_100120B50(a1, a2, a3, a4, a5, (void (*)(__n128 *, __n128 *, uint64_t))sub_100130668);
}

uint64_t sub_100120B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 *a5, void (*a6)(__n128 *, __n128 *, uint64_t))
{
  sub_100019524(&qword_1003110B0);
  uint64_t v8 = sub_1001412AC();
  sub_10014095C(v8, a5[2]);
  swift_retain();
  sub_100140F68();
  a6(a5, a5, v8);
  swift_release();
  return v8;
}

void EventLoopFuture.flatMap<A>(file:line:_:)()
{
}

uint64_t EventLoopFuture.cascade(to:)(uint64_t a1)
{
  return sub_1001373E8(a1, (uint64_t)&unk_1002E5E08, (uint64_t)sub_1001374D0, (void (*)(uint64_t, uint64_t))EventLoopFuture.whenComplete(_:));
}

uint64_t EventLoopFuture.whenComplete(_:)()
{
  sub_1000ACEB8();
  uint64_t v3 = (void *)sub_1001188D4();
  v3[2] = v2;
  v3[3] = v0;
  v3[4] = v1;
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  return swift_release();
}

void sub_100120CBC(uint64_t a1)
{
  sub_100030B3C(0x10uLL);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = 0;
    uint64_t v10 = a1 + 40;
    uint64_t v27 = a1 + 40;
LABEL_3:
    char v11 = (uint64_t *)(v10 + 16 * v9++);
    while (v9 - 1 < v8)
    {
      uint64_t v13 = *(v11 - 1);
      uint64_t v12 = *v11;
      swift_retain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10011FCDC();
        uint64_t v3 = v14;
      }
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_21;
      }
      if (v7 >= *(void *)(v3 + 16)) {
        goto LABEL_22;
      }
      unint64_t v15 = (uint64_t *)(v3 + 32 + 16 * v7);
      sub_10003C350(*v15);
      *unint64_t v15 = v13;
      v15[1] = v12;
      uint64_t v16 = *(void *)(v3 + 16);
      unint64_t v7 = (v16 - 1) & (v7 + 1);
      if (v5 == v7)
      {
        uint64_t v18 = 2 * v16;
        if (2 * v16 >= 1)
        {
          sub_100038C48();
          uint64_t v19 = *(void *)(v3 + 16);
          if (v19 >= v5)
          {
            if ((v5 & 0x8000000000000000) == 0)
            {
              uint64_t v20 = (2 * v19) | 1;
              uint64_t v21 = swift_retain();
              sub_10012450C(v21, v3 + 32, v5, v20, (uint64_t)sub_100038C48, (uint64_t)sub_1001DD4D0, v22, v23, v27, (void (*)(uint64_t, uint64_t, uint64_t))&_swiftEmptyArrayStorage);
              if (*(void *)(v3 + 16) >= (unint64_t)v5)
              {
                uint64_t v24 = swift_retain();
                sub_10012450C(v24, v3 + 32, 0, (2 * v5) | 1, (uint64_t)sub_100038C48, (uint64_t)sub_1001DD4D0, v25, v26, v28, v29);
                unint64_t v7 = *(void *)(v30 + 16);
                if ((uint64_t)(v18 - v7) >= 0)
                {
                  sub_100124604(v18 - v7, 0, 0);
                  swift_release();
                  swift_release();
                  uint64_t v5 = 0;
                  uint64_t v10 = v27;
                  uint64_t v3 = v30;
                  unint64_t v8 = *(void *)(a1 + 16);
                  if (v8 != v9) {
                    goto LABEL_3;
                  }
                  goto LABEL_19;
                }
LABEL_27:
                __break(1u);
                return;
              }
LABEL_26:
              __break(1u);
              goto LABEL_27;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      swift_release();
      unint64_t v8 = *(void *)(a1 + 16);
      v11 += 2;
      if (v9++ == v8) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_19:
  swift_bridgeObjectRelease();
}

void sub_100120F28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v6 = v1[2];
      uint64_t v7 = *v1;
      swift_retain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10011FCDC();
        uint64_t v7 = v8;
      }
      if ((v6 & 0x8000000000000000) != 0) {
        break;
      }
      if (v6 >= *(void *)(v7 + 16)) {
        goto LABEL_14;
      }
      uint64_t v9 = v7 + 16 * v6;
      uint64_t v10 = sub_10003C350(*(void *)(v9 + 32));
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v4;
      *uint64_t v1 = v7;
      uint64_t v11 = (*(void *)(v7 + 16) - 1) & (v6 + 1);
      v1[2] = v11;
      if (v1[1] == v11) {
        sub_100121740(v10);
      }
      swift_release();
      v3 += 2;
      if (!--v2) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10012101C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v3 = a3 - a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3 < result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100121040(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001210A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  sub_100019524(&qword_1003110B0);
  uint64_t v8 = sub_1001412AC();
  sub_10014095C(v8, *(__n128 *)(a5 + 40));
  swift_retain();
  sub_100140F68();
  sub_100130934(a5, a5, v8, a6);
  swift_release();
  return v8;
}

void EventLoopFuture.flatMapErrorThrowing(file:line:_:)()
{
}

uint64_t static EventLoopFuture.andAllSucceed(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013AA84(a1, a2, a3, 1084, (void (*)(uint64_t, uint64_t))static EventLoopFuture.andAllSucceed(_:promise:));
}

uint64_t EventLoopFuture.map<A>(file:line:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v10 = &type metadata for ()[8];
  if (*(char **)(*(void *)v7 + 80) == a7 && a7 == v10)
  {
    swift_getFunctionTypeMetadata1();
    swift_retain();
    swift_dynamicCast();
    uint64_t v15 = sub_1000AC8E4();
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v10;
    *(_OWORD *)(v15 + 32) = v17;
    EventLoopFuture.whenSuccess(_:)((uint64_t)sub_1001387D8, v15);
    swift_release();
    type metadata accessor for EventLoopFuture();
    uint64_t v13 = swift_dynamicCastClassUnconditional();
    swift_retain();
  }
  else
  {
    uint64_t v13 = EventLoopPromise.init(eventLoop:file:line:)(*(void *)(v7 + *(void *)(*(void *)v7 + 96)), *(void *)(v7 + *(void *)(*(void *)v7 + 96) + 8), a1, a2, a3, a4);
    uint64_t v14 = (void *)sub_100140C60();
    unsigned char v14[2] = a7;
    void v14[3] = v13;
    v14[4] = v7;
    void v14[5] = a5;
    v14[6] = a6;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    EventLoopFuture._whenComplete(_:)();
    swift_release();
  }
  return v13;
}

uint64_t sub_100121334(void (*a1)(uint64_t *__return_ptr), uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    uint64_t v4 = a3;
    swift_errorRetain();
  }
  else
  {
    a1(&v6);
    return v6;
  }
  return v4;
}

uint64_t sub_10012138C(void (*a1)(uint64_t *__return_ptr), uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    uint64_t v4 = a3;
    swift_errorRetain();
  }
  else
  {
    a1(&v6);
    return v6;
  }
  return v4;
}

uint64_t EventLoopFuture.always(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)sub_1001188D4();
  _OWORD v6[2] = *(void *)(v5 + 80);
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  EventLoopFuture.whenComplete(_:)();
  swift_release();
  return swift_retain();
}

uint64_t EventLoopFuture.wait(file:line:)(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v9 = *v6;
  sub_10001B028(&qword_100309768);
  uint64_t v10 = sub_10024FCF0();
  sub_10024F030();
  sub_10002F9C8();
  sub_10007A8E8();
  __chkstk_darwin(v11, v12);
  sub_1001185C8();
  uint64_t v13 = *(uint64_t *)((char *)v6 + *(void *)(v9 + 96) + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v13 + 80))(a1, a2, a3, a4, ObjectType, v13);
  uint64_t v15 = swift_allocBox();
  uint64_t v17 = sub_100141460(v15, v16);
  sub_1000195B4(v17, v18, v19, v10);
  sub_100019524(&qword_100310F68);
  swift_allocObject();
  uint64_t v20 = sub_10013CAB4(0);
  uint64_t v21 = (void *)swift_allocObject();
  long long v21[2] = v20;
  v21[3] = v15;
  v21[4] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  swift_release();
  sub_100137870(1);
  Lock.unlock()();
  swift_beginAccess();
  uint64_t v22 = sub_100141908();
  v23(v22);
  uint64_t result = sub_10001FA0C(v5, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100141914();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_willThrow();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      sub_10007A8C4();
      sub_100141778();
      v25();
      return swift_release();
    }
  }
  return result;
}

#error "1001217AC: call analysis failed (funcsize=66)"

#error "1001218D0: call analysis failed (funcsize=58)"

#error "1001219C8: call analysis failed (funcsize=58)"

void sub_100121A54()
{
  sub_1001409E4();
  if (v3 != v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100140E80();
  sub_100140B38();
  sub_100038D38();
  uint64_t v5 = sub_100140EA4();
  sub_1001225D0(v5, v6, v7, v8);
  if (v2 < 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_100140E8C();
  if (!v9) {
    goto LABEL_9;
  }
  sub_100140A30();
  sub_100140E70();
  sub_1001225D0(v10, v11, v12, v13);
  uint64_t v14 = _swiftEmptyArrayStorage[2];
  if (v1 - v14 >= 0)
  {
    uint64_t v15 = v1 - v14;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    sub_1001226DC(&v15);
    swift_release();
    v0[1] = 0;
    v0[2] = v14;
    *uint64_t v0 = _swiftEmptyArrayStorage;
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_100121B24()
{
  sub_1001409E4();
  if (v4 != v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100140E80();
  long long v17 = _swiftEmptyArrayStorage;
  sub_100140B38();
  sub_100038F0C();
  uint64_t v6 = sub_100140EA4();
  sub_1001229FC(v6, v7, v8, v9);
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_100140E8C();
  if (!v10) {
    goto LABEL_9;
  }
  sub_100140A30();
  sub_100140E70();
  sub_1001229FC(v11, v12, v13, v14);
  sub_1001410CC();
  char v16 = -1;
  if (v1 - v2 >= 0)
  {
    v15[0] = v1 - v2;
    sub_100122D38(v15);
    swift_release();
    v0[1] = 0;
    v0[2] = v2;
    *uint64_t v0 = v17;
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_100121BE0()
{
  sub_1001409E4();
  if (v3 != v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100140E80();
  sub_100140B38();
  sub_100038F5C();
  uint64_t v5 = sub_100140EA4();
  sub_10012311C(v5, v6, v7, v8);
  if (v2 < 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_100140E8C();
  if (!v9) {
    goto LABEL_9;
  }
  sub_100140A30();
  sub_100140E70();
  sub_10012311C(v10, v11, v12, v13);
  uint64_t v14 = _swiftEmptyArrayStorage[2];
  if (v1 - v14 >= 0)
  {
    v15[0] = v1 - v14;
    memset(&v15[1], 0, 24);
    v15[4] = 1;
    sub_100123228((uint64_t)v15);
    swift_release();
    v0[1] = 0;
    v0[2] = v14;
    *uint64_t v0 = _swiftEmptyArrayStorage;
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_100121CB0()
{
  sub_1001409E4();
  if (v3 != v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100140E80();
  uint64_t v21 = _swiftEmptyArrayStorage;
  sub_100140B38();
  sub_100038F98();
  uint64_t v5 = sub_100140EA4();
  sub_10012348C(v5, v6, v7, v8);
  if (v2 < 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_100140E8C();
  if (!v9) {
    goto LABEL_9;
  }
  swift_retain();
  sub_100140E70();
  sub_10012348C(v10, v11, v12, v13);
  uint64_t v14 = v21[2];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v20 = 1;
  if (v1 - v14 >= 0)
  {
    uint64_t v15 = v1 - v14;
    sub_1001237CC(&v15);
    swift_release();
    v0[1] = 0;
    v0[2] = v14;
    *uint64_t v0 = v21;
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_100121D90()
{
  sub_1001409E4();
  if (v4 != v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100140E80();
  long long v17 = _swiftEmptyArrayStorage;
  sub_100140B38();
  sub_100038FB8();
  uint64_t v6 = sub_100140EA4();
  sub_100123BB0(v6, v7, v8, v9);
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_100140E8C();
  if (!v10) {
    goto LABEL_9;
  }
  sub_100140A30();
  sub_100140E70();
  sub_100123BB0(v11, v12, v13, v14);
  sub_1001410CC();
  __int16 v16 = -256;
  if (v1 - v2 >= 0)
  {
    v15[0] = v1 - v2;
    sub_100123EEC(v15);
    swift_release();
    v0[1] = 0;
    v0[2] = v2;
    *uint64_t v0 = v17;
    return;
  }
LABEL_10:
  __break(1u);
}

#error "100121EB8: call analysis failed (funcsize=66)"

void sub_100121F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 16);
  uint64_t v7 = v6 + a1;
  if (__OFADD__(v6, a1))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v4 = v5;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v13 = *(void *)(v5 + 24) >> 1, v13 < v7))
  {
    sub_100038C98();
    uint64_t v5 = *v4;
    uint64_t v13 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  uint64_t v15 = v13 - v14;
  uint64_t v16 = sub_10013D39C((uint64_t)v36, v5 + 24 * v14 + 32, v13 - v14, a1, a2, a3, a4 & 0xFFFFFFFFFFFFFFLL);
  if (v16 < a1) {
    goto LABEL_33;
  }
  if (v16 >= 1)
  {
    uint64_t v17 = *(void *)(v5 + 16);
    BOOL v18 = __OFADD__(v17, v16);
    uint64_t v19 = v17 + v16;
    if (v18)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    *(void *)(v5 + 16) = v19;
  }
  if (v16 != v15) {
    goto LABEL_30;
  }
  uint64_t v21 = v36[0];
  uint64_t v20 = v36[1];
  if (v40 == v36[0]) {
    goto LABEL_30;
  }
  if ((v40 & 0x8000000000000000) == 0 && v40 < v36[0])
  {
    uint64_t v22 = *(void *)(v5 + 16);
    uint64_t v35 = v36[2];
    unint64_t v23 = v37 | ((unint64_t)(v38 | (v39 << 16)) << 32);
    uint64_t v24 = v40 + 1;
    swift_retain();
    unint64_t v33 = HIWORD(v23);
    int v34 = v23;
    unint64_t v32 = HIDWORD(v23);
    while (1)
    {
      uint64_t v25 = v22 + 1;
      if (v22 + 1 > *(void *)(v5 + 24) >> 1) {
        sub_100038C98();
      }
      uint64_t v5 = *v4;
      unint64_t v26 = *(void *)(*v4 + 24);
      if (v22 < (uint64_t)(v26 >> 1)) {
        break;
      }
LABEL_26:
      *(void *)(v5 + 16) = v22;
    }
    uint64_t v27 = v5 + 24 * v22;
    *(void *)(v27 + 32) = v20;
    *(void *)(v27 + 40) = v35;
    *(unsigned char *)(v27 + 54) = v33;
    *(_WORD *)(v27 + 52) = v32;
    *(_DWORD *)(v27 + 48) = v34;
    if (v24 == v21)
    {
LABEL_29:
      *(void *)(v5 + 16) = v25;
LABEL_30:
      swift_release();
      *char v4 = v5;
      return;
    }
    if ((v24 & 0x8000000000000000) == 0 && v24 < v21)
    {
      uint64_t v28 = 0;
      uint64_t v29 = v26 >> 1;
      unint64_t v31 = v24 + (v26 >> 1) - v22;
      uint64_t v30 = v5 + 24 * v22 + 72;
      while (1)
      {
        if (v22 + v28 + 1 >= v29)
        {
          swift_retain();
          v22 += v28 + 1;
          uint64_t v24 = v31;
          goto LABEL_26;
        }
        *(void *)(v30 - 16) = v20;
        *(void *)(v30 - 8) = v35;
        *(_DWORD *)uint64_t v30 = v34;
        *(unsigned char *)(v30 + 6) = v33;
        *(_WORD *)(v30 + 4) = v32;
        if (v21 - 1 - v24 == v28) {
          break;
        }
        swift_retain();
        ++v28;
        v30 += 24;
        if (v24 + v28 >= v21) {
          goto LABEL_31;
        }
      }
      swift_retain();
      uint64_t v25 = v22 + v28 + 2;
      goto LABEL_29;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_35:
  __break(1u);
}

void sub_100122228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t))
{
  sub_1000B7690();
  unint64_t v15 = v14 >> 1;
  uint64_t v17 = (v14 >> 1) - v16;
  if (__OFSUB__(v14 >> 1, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v18 = *v11;
  uint64_t v19 = *(void *)(*v11 + 16);
  if (__OFADD__(v19, v17))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int v20 = sub_100141208();
  uint64_t *v11 = v18;
  if (!v20 || (uint64_t v21 = *(void *)(v18 + 24) >> 1, v21 < v19 + v17))
  {
    v13();
    uint64_t v18 = *v11;
    uint64_t v21 = *(void *)(*v11 + 24) >> 1;
  }
  if (v15 == v12)
  {
    if (v17 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      uint64_t *v11 = v18;
      sub_1000B75A4();
      return;
    }
    __break(1u);
  }
  uint64_t v22 = *(void *)(v18 + 16);
  if (v21 - v22 < v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  a10(v10 + 24 * v12, v17, v18 + 24 * v22 + 32);
  if (v17 <= 0) {
    goto LABEL_13;
  }
  uint64_t v23 = *(void *)(v18 + 16);
  BOOL v24 = __OFADD__(v23, v17);
  uint64_t v25 = v23 + v17;
  if (!v24)
  {
    *(void *)(v18 + 16) = v25;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_100122324(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 16);
  uint64_t v7 = v6 + a1;
  if (__OFADD__(v6, a1))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v4 = v5;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v13 = *(void *)(v5 + 24) >> 1, v13 < v7))
  {
    sub_100038CE8();
    uint64_t v5 = *v4;
    uint64_t v13 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  uint64_t v15 = v13 - v14;
  uint64_t v16 = sub_10013D4B4((uint64_t)&v39, v5 + 24 * v14 + 32, v13 - v14, a1, a2, a3, a4);
  if (v16 < a1) {
    goto LABEL_35;
  }
  if (v16 >= 1)
  {
    uint64_t v17 = *(void *)(v5 + 16);
    BOOL v18 = __OFADD__(v17, v16);
    uint64_t v19 = v17 + v16;
    if (v18)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    *(void *)(v5 + 16) = v19;
  }
  if (v16 != v15)
  {
    uint64_t v23 = v40;
    goto LABEL_13;
  }
  uint64_t v20 = v40;
  uint64_t v21 = v41;
  char v22 = v42;
  if (v43 == v39)
  {
LABEL_11:
    uint64_t v23 = v20;
LABEL_13:
    sub_10003B934(v23);
LABEL_31:
    *char v4 = v5;
    return;
  }
  if ((v43 & 0x8000000000000000) == 0 && v43 < v39)
  {
    uint64_t v24 = *(void *)(v5 + 16);
    uint64_t v25 = v43 + 1;
    uint64_t v38 = v39;
    sub_10003C1B8(v40);
    uint64_t v26 = v25;
    uint64_t v27 = v38;
    while (1)
    {
      if (v24 + 1 > *(void *)(v5 + 24) >> 1)
      {
        uint64_t v35 = v26;
        sub_100038CE8();
        uint64_t v26 = v35;
        uint64_t v27 = v38;
      }
      uint64_t v5 = *v4;
      unint64_t v28 = *(void *)(*v4 + 24);
      if (v24 < (uint64_t)(v28 >> 1)) {
        break;
      }
LABEL_29:
      *(void *)(v5 + 16) = v24;
    }
    uint64_t v29 = v5 + 24 * v24;
    *(void *)(v29 + 32) = v20;
    *(void *)(v29 + 40) = v21;
    *(unsigned char *)(v29 + 48) = v22;
    if (v26 == v27)
    {
      *(void *)(v5 + 16) = v24 + 1;
      goto LABEL_11;
    }
    uint64_t v37 = v5;
    if ((v26 & 0x8000000000000000) == 0 && v26 < v27)
    {
      uint64_t v30 = 0;
      uint64_t v31 = v28 >> 1;
      unint64_t v36 = v26 + (v28 >> 1) - v24;
      unint64_t v32 = (unsigned char *)(v5 + 24 * v24 + 72);
      uint64_t v33 = 1 - v38 + v26;
      while (1)
      {
        if (v24 + v30 + 1 >= v31)
        {
          sub_10003C1B8(v20);
          v24 += v30 + 1;
          uint64_t v26 = v36;
          uint64_t v5 = v37;
          uint64_t v27 = v38;
          goto LABEL_29;
        }
        *((void *)v32 - 2) = v20;
        *((void *)v32 - 1) = v21;
        *unint64_t v32 = v22;
        if (!(v33 + v30)) {
          break;
        }
        uint64_t v34 = v26;
        sub_10003C1B8(v20);
        uint64_t v26 = v34;
        ++v30;
        v32 += 24;
        if (v34 + v30 >= v38) {
          goto LABEL_33;
        }
      }
      uint64_t v5 = v37;
      *(void *)(v37 + 16) = v24 + v30 + 2;
      goto LABEL_31;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_37:
  __break(1u);
}

void sub_1001225D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (__OFADD__(v8, v6))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v12 = *(void *)(v7 + 24) >> 1, v12 < v8 + v6))
  {
    sub_100038D38();
    uint64_t v7 = *v4;
    uint64_t v12 = *(void *)(*v4 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      *char v4 = v7;
      return;
    }
    __break(1u);
  }
  if (v12 - *(void *)(v7 + 16) < v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001DD5A4(a2 + (a3 << 6), v6);
  if (v6 <= 0) {
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v14 = __OFADD__(v13, v6);
  uint64_t v15 = v13 + v6;
  if (!v14)
  {
    *(void *)(v7 + 16) = v15;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_1001226DC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t result = *v1;
  uint64_t v5 = *(void *)(*v1 + 16);
  if (__OFADD__(v5, v3))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v6 = result;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v6;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v8 = v6, v9 = *(void *)(v6 + 24) >> 1, v9 < v5 + v3))
  {
    sub_100038D38();
    uint64_t v8 = *v2;
    uint64_t v9 = *(void *)(*v2 + 24) >> 1;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v11 = v9 - v10;
  uint64_t v54 = v8;
  uint64_t result = sub_10013D5B0((uint64_t)&v56, v8 + (v10 << 6) + 32, v9 - v10);
  if (result < v3) {
    goto LABEL_36;
  }
  if (result >= 1)
  {
    uint64_t v12 = *(void *)(v54 + 16);
    BOOL v13 = __OFADD__(v12, result);
    uint64_t v14 = v12 + result;
    if (!v13)
    {
      *(void *)(v54 + 16) = v14;
      goto LABEL_9;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_9:
  if (result != v11)
  {
    uint64_t result = sub_10003BC24(v57, v58, v59, v60, v61, v62, v63);
LABEL_33:
    *uint64_t v2 = v54;
    return result;
  }
  uint64_t v49 = v2;
  if (v65 == v56) {
    goto LABEL_14;
  }
  if ((v65 & 0x8000000000000000) == 0 && v65 < v56)
  {
    uint64_t v15 = *(void *)(v54 + 16);
    uint64_t v17 = v63;
    uint64_t v16 = v64;
    uint64_t v18 = v61;
    uint64_t v19 = v62;
    uint64_t v20 = v59;
    uint64_t v21 = v60;
    uint64_t v22 = v57;
    uint64_t v23 = v58;
    uint64_t v24 = ++v65;
    uint64_t v48 = v56;
    sub_10003C290(v57, v58, v59, v60, v61, v62, v63);
    uint64_t v25 = v48;
    uint64_t v26 = v54;
    if (v22 != 1)
    {
      uint64_t result = v57;
      uint64_t v27 = v58;
      uint64_t v28 = v59;
      uint64_t v29 = v60;
      uint64_t v30 = v61;
      uint64_t v31 = v62;
      uint64_t v32 = v63;
      uint64_t v33 = v64;
      uint64_t v34 = v24;
      uint64_t v47 = v58;
      while (2)
      {
        uint64_t v55 = v34;
        if (v15 + 1 > *(void *)(v26 + 24) >> 1)
        {
          uint64_t v51 = v28;
          uint64_t v53 = result;
          uint64_t v45 = v30;
          uint64_t v46 = v29;
          uint64_t v43 = v32;
          uint64_t v44 = v31;
          uint64_t v42 = v33;
          sub_100038D38();
          uint64_t result = v53;
          uint64_t v34 = v55;
          uint64_t v33 = v42;
          uint64_t v32 = v43;
          uint64_t v31 = v44;
          uint64_t v30 = v45;
          uint64_t v29 = v46;
          uint64_t v27 = v47;
          uint64_t v28 = v51;
          uint64_t v25 = v48;
        }
        uint64_t v26 = *v49;
        uint64_t v35 = *(void *)(*v49 + 24) >> 1;
        uint64_t v36 = *v49 + 48;
        uint64_t v37 = v34;
LABEL_20:
        uint64_t v38 = (uint64_t *)(v36 + (v15 << 6));
        while (v22 != 1 && v15 < v35)
        {
          *(v38 - 2) = v22;
          *(v38 - 1) = v23;
          ++v15;
          *uint64_t v38 = v20;
          v38[1] = v21;
          v38[2] = v18;
          v38[3] = v19;
          v38[4] = v17;
          v38[5] = v16;
          v38 += 8;
          uint64_t v22 = 1;
          uint64_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v19 = 0;
          uint64_t v18 = 0;
          uint64_t v21 = 0;
          uint64_t v20 = 0;
          uint64_t v23 = 0;
          if (v37 != v25)
          {
            if ((v34 & 0x8000000000000000) == 0 && v37 < v25)
            {
              ++v37;
              uint64_t v22 = result;
              uint64_t v20 = v28;
              uint64_t v21 = v29;
              uint64_t v18 = v30;
              uint64_t v19 = v31;
              uint64_t v17 = v32;
              uint64_t v40 = v33;
              uint64_t v41 = v26;
              uint64_t v50 = v36;
              uint64_t v52 = v35;
              sub_10003C290(result, v27, v28, v29, v30, v31, v32);
              uint64_t v36 = v50;
              uint64_t v35 = v52;
              uint64_t v34 = v55;
              uint64_t v33 = v40;
              uint64_t v32 = v17;
              uint64_t v31 = v19;
              uint64_t v30 = v18;
              uint64_t v29 = v21;
              uint64_t v28 = v20;
              uint64_t v27 = v47;
              uint64_t v25 = v48;
              uint64_t result = v22;
              uint64_t v26 = v41;
              uint64_t v16 = v40;
              uint64_t v23 = v47;
              goto LABEL_20;
            }
            __break(1u);
            goto LABEL_35;
          }
        }
        *(void *)(v26 + 16) = v15;
        uint64_t v34 = v37;
        if (v22 != 1) {
          continue;
        }
        break;
      }
      uint64_t v54 = v26;
      goto LABEL_32;
    }
LABEL_14:
    uint64_t result = v57;
    uint64_t v27 = v58;
    uint64_t v28 = v59;
    uint64_t v29 = v60;
    uint64_t v30 = v61;
    uint64_t v31 = v62;
    uint64_t v32 = v63;
LABEL_32:
    uint64_t result = sub_10003BC24(result, v27, v28, v29, v30, v31, v32);
    uint64_t v2 = v49;
    goto LABEL_33;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1001229FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (__OFADD__(v8, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v11 = *(void *)(v7 + 24) >> 1, v11 < v8 + v6))
  {
    sub_100038F0C();
    uint64_t v7 = *v4;
    uint64_t v11 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v12 = v11 - *(void *)(v7 + 16);
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
      uint64_t v6 = 0;
      uint64_t v13 = a3;
      goto LABEL_14;
    }
    goto LABEL_40;
  }
  if (v12 < v6)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  sub_1001DD598(a2 + (a3 << 6), v6);
  if (v6 > 0)
  {
    uint64_t v14 = *(void *)(v7 + 16);
    BOOL v15 = __OFADD__(v14, v6);
    uint64_t v16 = v14 + v6;
    if (v15)
    {
LABEL_42:
      __break(1u);
      return;
    }
    *(void *)(v7 + 16) = v16;
  }
  uint64_t v13 = v5;
LABEL_14:
  if (v6 == v12)
  {
    uint64_t v17 = *(void *)(v7 + 16);
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
    char v31 = -2;
    sub_100140710((uint64_t)&v27, (uint64_t)v25, &qword_100311090);
    while (v26 != 254)
    {
      sub_10003C3FC((uint64_t)v25, &qword_100311090);
      uint64_t v18 = *v4;
      uint64_t v19 = *(void *)(*v4 + 24) >> 1;
      if (v19 < v17 + 1)
      {
        sub_100038F0C();
        uint64_t v18 = *v4;
        uint64_t v19 = *(void *)(*v4 + 24) >> 1;
      }
      swift_retain();
      sub_100140710((uint64_t)&v27, (uint64_t)v23, &qword_100311090);
      if (v24 == 254)
      {
LABEL_34:
        swift_release();
        sub_10003C3FC((uint64_t)v23, &qword_100311090);
      }
      else
      {
        uint64_t v20 = v18 + (v17 << 6) + 32;
        while (1)
        {
          sub_100140768((uint64_t)v23, (uint64_t)v25, &qword_10030A508);
          if (v17 >= v19) {
            break;
          }
          sub_10003C3FC((uint64_t)&v27, &qword_100311090);
          sub_100140768((uint64_t)v25, v20, &qword_10030A508);
          if (v13 == v5)
          {
            uint64_t v30 = 0;
            long long v28 = 0u;
            long long v29 = 0u;
            long long v27 = 0u;
            uint64_t v13 = v5;
            char v31 = -2;
          }
          else
          {
            if (v13 < a3 || v13 >= v5)
            {
              __break(1u);
              goto LABEL_38;
            }
            sub_100140710(a2 + (v13++ << 6), (uint64_t)&v27, &qword_10030A508);
          }
          sub_100140710((uint64_t)&v27, (uint64_t)v23, &qword_100311090);
          v20 += 64;
          ++v17;
          if (v24 == 254) {
            goto LABEL_34;
          }
        }
        sub_10003C3FC((uint64_t)v25, &qword_10030A508);
        swift_release();
      }
      *(void *)(*v4 + 16) = v17;
      sub_100140710((uint64_t)&v27, (uint64_t)v25, &qword_100311090);
    }
    sub_10003C3FC((uint64_t)&v27, &qword_100311090);
    swift_unknownObjectRelease();
    sub_10003C3FC((uint64_t)v25, &qword_100311090);
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t *sub_100122D38(uint64_t *result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *result;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = v5 + *result;
  if (__OFADD__(v5, *result)) {
    goto LABEL_39;
  }
  uint64_t v7 = (uint64_t)result;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v9 = *(void *)(v4 + 24) >> 1, v9 < v6))
  {
    sub_100038F0C();
    uint64_t v4 = *v2;
    uint64_t v9 = *(void *)(*v2 + 24) >> 1;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v9 - v10;
  uint64_t v12 = v4 + (v10 << 6) + 32;
  sub_100140710(v7, (uint64_t)v34, &qword_100311080);
  uint64_t v13 = sub_10013D9F8(&v36, v12, v11);
  uint64_t result = (uint64_t *)sub_10003C3FC(v7, &qword_100311080);
  if (v13 < v3)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v13 < 1) {
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)(*v2 + 16);
  BOOL v15 = __OFADD__(v14, v13);
  uint64_t v16 = v14 + v13;
  if (v15)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(void *)(*v2 + 16) = v16;
LABEL_9:
  if (v13 != v11)
  {
    uint64_t v19 = &qword_100311088;
    uint64_t v20 = &v36;
    return (uint64_t *)sub_10003C3FC((uint64_t)v20, v19);
  }
  uint64_t v17 = *(void *)(*v2 + 16);
  uint64_t v18 = v38;
  if (v38 == v36)
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v29 = 0u;
    char v33 = -2;
LABEL_17:
    sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_100311090);
    if (v35 != 254)
    {
      long long v27 = v2;
      do
      {
        sub_10003C3FC((uint64_t)v34, &qword_100311090);
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)(*v2 + 24) >> 1;
        if (v23 < v17 + 1)
        {
          sub_100038F0C();
          uint64_t v22 = *v27;
          uint64_t v23 = *(void *)(*v27 + 24) >> 1;
        }
        swift_retain();
        sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_100311090);
        if (v35 != 254)
        {
          uint64_t v24 = v22 + (v17 << 6) + 32;
          do
          {
            sub_100140768((uint64_t)v34, (uint64_t)v28, &qword_10030A508);
            if (v17 >= v23)
            {
              sub_10003C3FC((uint64_t)v28, &qword_10030A508);
              swift_release();
              goto LABEL_35;
            }
            sub_10003C3FC((uint64_t)&v29, &qword_100311090);
            sub_100140768((uint64_t)v28, v24, &qword_10030A508);
            uint64_t v25 = v38;
            if (v38 == v36)
            {
              uint64_t v32 = 0;
              long long v30 = 0u;
              long long v31 = 0u;
              long long v29 = 0u;
              char v33 = -2;
            }
            else
            {
              sub_100140710((uint64_t)&v36, (uint64_t)v34, &qword_100311080);
              uint64_t v26 = v34[0];
              uint64_t result = (uint64_t *)sub_10003C3FC((uint64_t)v34, &qword_100311080);
              if (v25 < 0 || v25 >= v26)
              {
                __break(1u);
LABEL_38:
                __break(1u);
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
              uint64_t result = (uint64_t *)sub_100140710((uint64_t)v37, (uint64_t)&v29, &qword_10030A508);
              if (v25 >= v36) {
                goto LABEL_38;
              }
              uint64_t v38 = v25 + 1;
            }
            sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_100311090);
            v24 += 64;
            ++v17;
          }
          while (v35 != 254);
        }
        swift_release();
        sub_10003C3FC((uint64_t)v34, &qword_100311090);
LABEL_35:
        uint64_t v2 = v27;
        *(void *)(*v27 + 16) = v17;
        sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_100311090);
      }
      while (v35 != 254);
    }
    sub_10003C3FC((uint64_t)&v29, &qword_100311090);
    sub_10003C3FC((uint64_t)&v36, &qword_100311088);
    uint64_t v20 = v34;
    uint64_t v19 = &qword_100311090;
    return (uint64_t *)sub_10003C3FC((uint64_t)v20, v19);
  }
  sub_100140710((uint64_t)&v36, (uint64_t)v34, &qword_100311080);
  uint64_t v21 = v34[0];
  uint64_t result = (uint64_t *)sub_10003C3FC((uint64_t)v34, &qword_100311080);
  if (v18 < 0 || v18 >= v21) {
    goto LABEL_42;
  }
  uint64_t result = (uint64_t *)sub_100140710((uint64_t)v37, (uint64_t)&v29, &qword_10030A508);
  if (v18 < v36)
  {
    uint64_t v38 = v18 + 1;
    goto LABEL_17;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_10012311C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (__OFADD__(v8, v6))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v12 = *(void *)(v7 + 24) >> 1, v12 < v8 + v6))
  {
    sub_100038F5C();
    uint64_t v7 = *v4;
    uint64_t v12 = *(void *)(*v4 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      *uint64_t v4 = v7;
      return;
    }
    __break(1u);
  }
  if (v12 - *(void *)(v7 + 16) < v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001DD654(a2 + 32 * a3, v6);
  if (v6 <= 0) {
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v14 = __OFADD__(v13, v6);
  uint64_t v15 = v13 + v6;
  if (!v14)
  {
    *(void *)(v7 + 16) = v15;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_100123228(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)result;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 16);
  uint64_t v6 = v5 + *(void *)result;
  if (__OFADD__(v5, *(void *)result))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v8 = *(void *)(v4 + 24) >> 1, v8 < v6))
  {
    sub_100038F5C();
    uint64_t v4 = *v2;
    uint64_t v8 = *(void *)(*v2 + 24) >> 1;
  }
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v10 = v8 - v9;
  uint64_t result = sub_10013DB28((uint64_t)&v38, v4 + 32 * v9 + 32, v8 - v9);
  if (result < v3) {
    goto LABEL_36;
  }
  if (result >= 1)
  {
    uint64_t v11 = *(void *)(v4 + 16);
    BOOL v12 = __OFADD__(v11, result);
    uint64_t v13 = v11 + result;
    if (!v12)
    {
      *(void *)(v4 + 16) = v13;
      goto LABEL_9;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_9:
  if (result != v10)
  {
    uint64_t result = v39;
    uint64_t v24 = v40;
    uint64_t v22 = v41;
    uint64_t v23 = v42;
    goto LABEL_17;
  }
  uint64_t v14 = v38;
  if (v43 == v38) {
    goto LABEL_14;
  }
  if ((v43 & 0x8000000000000000) == 0 && v43 < v38)
  {
    uint64_t v15 = *(void *)(v4 + 16);
    uint64_t v17 = v41;
    uint64_t v16 = v42;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    uint64_t v20 = ++v43;
    sub_10003BD24(v39, v40, v41, v42);
    if (v16 != 2)
    {
      uint64_t result = v39;
      uint64_t v21 = v40;
      uint64_t v22 = v41;
      uint64_t v23 = v42;
      unsigned __int8 v35 = v2;
      while (2)
      {
        if (v15 + 1 > *(void *)(v4 + 24) >> 1)
        {
          uint64_t v37 = result;
          uint64_t v33 = v21;
          uint64_t v34 = v22;
          uint64_t v32 = v23;
          sub_100038F5C();
          uint64_t v23 = v32;
          uint64_t v21 = v33;
          uint64_t v22 = v34;
          uint64_t result = v37;
        }
        uint64_t v25 = *(void *)(*v2 + 24) >> 1;
        uint64_t v36 = *v2;
        uint64_t v26 = *v2 + 56;
        uint64_t v27 = v20;
LABEL_22:
        long long v28 = (uint64_t *)(v26 + 32 * v15);
        while (v16 != 2 && v15 < v25)
        {
          *(v28 - 3) = v18;
          *(v28 - 2) = v19;
          ++v15;
          *(v28 - 1) = v17;
          *long long v28 = v16;
          v28 += 4;
          uint64_t v16 = 2;
          uint64_t v17 = 0;
          uint64_t v19 = 0;
          uint64_t v18 = 0;
          if (v27 != v14)
          {
            if ((v20 & 0x8000000000000000) == 0 && v27 < v14)
            {
              ++v27;
              uint64_t v18 = result;
              uint64_t v17 = v22;
              uint64_t v30 = v23;
              uint64_t v31 = v21;
              sub_10003BD24(result, v21, v22, v23);
              uint64_t v23 = v30;
              uint64_t v22 = v17;
              uint64_t v21 = v31;
              uint64_t result = v18;
              uint64_t v16 = v30;
              uint64_t v19 = v21;
              goto LABEL_22;
            }
            __break(1u);
            goto LABEL_35;
          }
        }
        uint64_t v4 = v36;
        *(void *)(v36 + 16) = v15;
        uint64_t v20 = v27;
        uint64_t v2 = v35;
        if (v16 != 2) {
          continue;
        }
        goto LABEL_15;
      }
    }
LABEL_14:
    uint64_t result = v39;
    uint64_t v21 = v40;
    uint64_t v22 = v41;
    uint64_t v23 = v42;
LABEL_15:
    uint64_t v24 = v21;
LABEL_17:
    uint64_t result = sub_10003BD68(result, v24, v22, v23);
    *uint64_t v2 = v4;
    return result;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_10012348C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (__OFADD__(v8, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v11 = *(void *)(v7 + 24) >> 1, v11 < v8 + v6))
  {
    sub_100038F98();
    uint64_t v7 = *v4;
    uint64_t v11 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v12 = v11 - *(void *)(v7 + 16);
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
      uint64_t v6 = 0;
      uint64_t v13 = a3;
      goto LABEL_14;
    }
    goto LABEL_40;
  }
  if (v12 < v6)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  sub_1001DDC48(a2 + 72 * a3, v6);
  if (v6 > 0)
  {
    uint64_t v14 = *(void *)(v7 + 16);
    BOOL v15 = __OFADD__(v14, v6);
    uint64_t v16 = v14 + v6;
    if (v15)
    {
LABEL_42:
      __break(1u);
      return;
    }
    *(void *)(v7 + 16) = v16;
  }
  uint64_t v13 = v5;
LABEL_14:
  if (v6 == v12)
  {
    uint64_t v17 = *(void *)(v7 + 16);
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    uint64_t v31 = 2;
    sub_100140710((uint64_t)&v27, (uint64_t)v25, &qword_1003110A8);
    while (v26 != 2)
    {
      sub_10003C3FC((uint64_t)v25, &qword_1003110A8);
      uint64_t v18 = *v4;
      uint64_t v19 = *(void *)(*v4 + 24) >> 1;
      if (v19 < v17 + 1)
      {
        sub_100038F98();
        uint64_t v18 = *v4;
        uint64_t v19 = *(void *)(*v4 + 24) >> 1;
      }
      swift_retain();
      sub_100140710((uint64_t)&v27, (uint64_t)v23, &qword_1003110A8);
      if (v24 == 2)
      {
LABEL_34:
        swift_release();
        sub_10003C3FC((uint64_t)v23, &qword_1003110A8);
      }
      else
      {
        uint64_t v20 = v18 + 72 * v17 + 32;
        while (1)
        {
          sub_100140768((uint64_t)v23, (uint64_t)v25, &qword_10030A550);
          if (v17 >= v19) {
            break;
          }
          sub_10003C3FC((uint64_t)&v27, &qword_1003110A8);
          sub_100140768((uint64_t)v25, v20, &qword_10030A550);
          if (v13 == v5)
          {
            long long v29 = 0u;
            long long v30 = 0u;
            long long v27 = 0u;
            long long v28 = 0u;
            uint64_t v13 = v5;
            uint64_t v31 = 2;
          }
          else
          {
            if (v13 < a3 || v13 >= v5)
            {
              __break(1u);
              goto LABEL_38;
            }
            sub_100140710(a2 + 72 * v13++, (uint64_t)&v27, &qword_10030A550);
          }
          sub_100140710((uint64_t)&v27, (uint64_t)v23, &qword_1003110A8);
          v20 += 72;
          ++v17;
          if (v24 == 2) {
            goto LABEL_34;
          }
        }
        sub_10003C3FC((uint64_t)v25, &qword_10030A550);
        swift_release();
      }
      *(void *)(*v4 + 16) = v17;
      sub_100140710((uint64_t)&v27, (uint64_t)v25, &qword_1003110A8);
    }
    sub_10003C3FC((uint64_t)&v27, &qword_1003110A8);
    swift_unknownObjectRelease();
    sub_10003C3FC((uint64_t)v25, &qword_1003110A8);
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t *sub_1001237CC(uint64_t *result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *result;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = v5 + *result;
  if (__OFADD__(v5, *result)) {
    goto LABEL_39;
  }
  uint64_t v7 = (uint64_t)result;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v9 = *(void *)(v4 + 24) >> 1, v9 < v6))
  {
    sub_100038F98();
    uint64_t v4 = *v2;
    uint64_t v9 = *(void *)(*v2 + 24) >> 1;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v9 - v10;
  uint64_t v12 = v4 + 72 * v10 + 32;
  sub_100140710(v7, (uint64_t)v34, &qword_100311098);
  uint64_t v13 = sub_10013DC54(&v36, v12, v11);
  uint64_t result = (uint64_t *)sub_10003C3FC(v7, &qword_100311098);
  if (v13 < v3)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v13 < 1) {
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)(*v2 + 16);
  BOOL v15 = __OFADD__(v14, v13);
  uint64_t v16 = v14 + v13;
  if (v15)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(void *)(*v2 + 16) = v16;
LABEL_9:
  if (v13 != v11)
  {
    uint64_t v19 = &qword_1003110A0;
    uint64_t v20 = &v36;
    return (uint64_t *)sub_10003C3FC((uint64_t)v20, v19);
  }
  uint64_t v17 = *(void *)(*v2 + 16);
  uint64_t v18 = v38;
  if (v38 == v36)
  {
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v33 = 2;
LABEL_17:
    sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110A8);
    if (v35 != 2)
    {
      long long v27 = v2;
      do
      {
        sub_10003C3FC((uint64_t)v34, &qword_1003110A8);
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)(*v2 + 24) >> 1;
        if (v23 < v17 + 1)
        {
          sub_100038F98();
          uint64_t v22 = *v27;
          uint64_t v23 = *(void *)(*v27 + 24) >> 1;
        }
        swift_retain();
        sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110A8);
        if (v35 != 2)
        {
          uint64_t v24 = v22 + 72 * v17 + 32;
          do
          {
            sub_100140768((uint64_t)v34, (uint64_t)v28, &qword_10030A550);
            if (v17 >= v23)
            {
              sub_10003C3FC((uint64_t)v28, &qword_10030A550);
              swift_release();
              goto LABEL_35;
            }
            sub_10003C3FC((uint64_t)&v29, &qword_1003110A8);
            sub_100140768((uint64_t)v28, v24, &qword_10030A550);
            uint64_t v25 = v38;
            if (v38 == v36)
            {
              long long v31 = 0u;
              long long v32 = 0u;
              long long v29 = 0u;
              long long v30 = 0u;
              uint64_t v33 = 2;
            }
            else
            {
              sub_100140710((uint64_t)&v36, (uint64_t)v34, &qword_100311098);
              uint64_t v26 = v34[0];
              uint64_t result = (uint64_t *)sub_10003C3FC((uint64_t)v34, &qword_100311098);
              if (v25 < 0 || v25 >= v26)
              {
                __break(1u);
LABEL_38:
                __break(1u);
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
              uint64_t result = (uint64_t *)sub_100140710((uint64_t)v37, (uint64_t)&v29, &qword_10030A550);
              if (v25 >= v36) {
                goto LABEL_38;
              }
              uint64_t v38 = v25 + 1;
            }
            sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110A8);
            v24 += 72;
            ++v17;
          }
          while (v35 != 2);
        }
        swift_release();
        sub_10003C3FC((uint64_t)v34, &qword_1003110A8);
LABEL_35:
        uint64_t v2 = v27;
        *(void *)(*v27 + 16) = v17;
        sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110A8);
      }
      while (v35 != 2);
    }
    sub_10003C3FC((uint64_t)&v29, &qword_1003110A8);
    sub_10003C3FC((uint64_t)&v36, &qword_1003110A0);
    uint64_t v20 = v34;
    uint64_t v19 = &qword_1003110A8;
    return (uint64_t *)sub_10003C3FC((uint64_t)v20, v19);
  }
  sub_100140710((uint64_t)&v36, (uint64_t)v34, &qword_100311098);
  uint64_t v21 = v34[0];
  uint64_t result = (uint64_t *)sub_10003C3FC((uint64_t)v34, &qword_100311098);
  if (v18 < 0 || v18 >= v21) {
    goto LABEL_42;
  }
  uint64_t result = (uint64_t *)sub_100140710((uint64_t)v37, (uint64_t)&v29, &qword_10030A550);
  if (v18 < v36)
  {
    uint64_t v38 = v18 + 1;
    goto LABEL_17;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_100123BB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (__OFADD__(v8, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v10 = *(void *)(v7 + 24) >> 1, v10 < v8 + v6))
  {
    sub_100038FB8();
    uint64_t v7 = *v4;
    uint64_t v10 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v11 = v10 - *(void *)(v7 + 16);
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
      uint64_t v6 = 0;
      uint64_t v12 = a3;
      goto LABEL_14;
    }
    goto LABEL_40;
  }
  if (v11 < v6)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  sub_1001DDD08(a2 + (a3 << 6), v6);
  if (v6 > 0)
  {
    uint64_t v13 = *(void *)(v7 + 16);
    BOOL v14 = __OFADD__(v13, v6);
    uint64_t v15 = v13 + v6;
    if (v14)
    {
LABEL_42:
      __break(1u);
      return;
    }
    *(void *)(v7 + 16) = v15;
  }
  uint64_t v12 = v5;
LABEL_14:
  if (v6 == v11)
  {
    uint64_t v16 = *(void *)(v7 + 16);
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
    __int16 v31 = -512;
    sub_100140710((uint64_t)&v27, (uint64_t)v25, &qword_1003110D0);
    while (v26 << 8 != 65024)
    {
      sub_10003C3FC((uint64_t)v25, &qword_1003110D0);
      uint64_t v17 = *v4;
      uint64_t v18 = *(void *)(*v4 + 24) >> 1;
      if (v18 < v16 + 1)
      {
        sub_100038FB8();
        uint64_t v17 = *v4;
        uint64_t v18 = *(void *)(*v4 + 24) >> 1;
      }
      swift_retain();
      sub_100140710((uint64_t)&v27, (uint64_t)v23, &qword_1003110D0);
      if (v24 << 8 == 65024)
      {
LABEL_34:
        swift_release();
        sub_10003C3FC((uint64_t)v23, &qword_1003110D0);
      }
      else
      {
        uint64_t v19 = v17 + (v16 << 6) + 32;
        while (1)
        {
          sub_100140768((uint64_t)v23, (uint64_t)v25, &qword_10030A1F0);
          if (v16 >= v18) {
            break;
          }
          sub_10003C3FC((uint64_t)&v27, &qword_1003110D0);
          sub_100140768((uint64_t)v25, v19, &qword_10030A1F0);
          if (v12 == v5)
          {
            uint64_t v30 = 0;
            long long v28 = 0u;
            long long v29 = 0u;
            long long v27 = 0u;
            uint64_t v12 = v5;
            __int16 v31 = -512;
          }
          else
          {
            if (v12 < a3 || v12 >= v5)
            {
              __break(1u);
              goto LABEL_38;
            }
            sub_100140710(a2 + (v12++ << 6), (uint64_t)&v27, &qword_10030A1F0);
          }
          sub_100140710((uint64_t)&v27, (uint64_t)v23, &qword_1003110D0);
          v19 += 64;
          ++v16;
          if (v24 << 8 == 65024) {
            goto LABEL_34;
          }
        }
        sub_10003C3FC((uint64_t)v25, &qword_10030A1F0);
        swift_release();
      }
      *(void *)(*v4 + 16) = v16;
      sub_100140710((uint64_t)&v27, (uint64_t)v25, &qword_1003110D0);
    }
    sub_10003C3FC((uint64_t)&v27, &qword_1003110D0);
    swift_unknownObjectRelease();
    sub_10003C3FC((uint64_t)v25, &qword_1003110D0);
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t *sub_100123EEC(uint64_t *result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *result;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = v5 + *result;
  if (__OFADD__(v5, *result)) {
    goto LABEL_39;
  }
  uint64_t v7 = (uint64_t)result;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v9 = *(void *)(v4 + 24) >> 1, v9 < v6))
  {
    sub_100038FB8();
    uint64_t v4 = *v2;
    uint64_t v9 = *(void *)(*v2 + 24) >> 1;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v9 - v10;
  uint64_t v12 = v4 + (v10 << 6) + 32;
  sub_100140710(v7, (uint64_t)v34, &qword_1003110C0);
  uint64_t v13 = sub_10013DD84(&v36, v12, v11);
  uint64_t result = (uint64_t *)sub_10003C3FC(v7, &qword_1003110C0);
  if (v13 < v3)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v13 < 1) {
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)(*v2 + 16);
  BOOL v15 = __OFADD__(v14, v13);
  uint64_t v16 = v14 + v13;
  if (v15)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(void *)(*v2 + 16) = v16;
LABEL_9:
  if (v13 != v11)
  {
    uint64_t v19 = &qword_1003110C8;
    uint64_t v20 = &v36;
    return (uint64_t *)sub_10003C3FC((uint64_t)v20, v19);
  }
  uint64_t v17 = *(void *)(*v2 + 16);
  uint64_t v18 = v38;
  if (v38 == v36)
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v29 = 0u;
    __int16 v33 = -512;
LABEL_17:
    sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110D0);
    if (v35 << 8 != 65024)
    {
      long long v27 = v2;
      do
      {
        sub_10003C3FC((uint64_t)v34, &qword_1003110D0);
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)(*v2 + 24) >> 1;
        if (v23 < v17 + 1)
        {
          sub_100038FB8();
          uint64_t v22 = *v27;
          uint64_t v23 = *(void *)(*v27 + 24) >> 1;
        }
        swift_retain();
        sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110D0);
        if (v35 << 8 != 65024)
        {
          uint64_t v24 = v22 + (v17 << 6) + 32;
          do
          {
            sub_100140768((uint64_t)v34, (uint64_t)v28, &qword_10030A1F0);
            if (v17 >= v23)
            {
              sub_10003C3FC((uint64_t)v28, &qword_10030A1F0);
              swift_release();
              goto LABEL_35;
            }
            sub_10003C3FC((uint64_t)&v29, &qword_1003110D0);
            sub_100140768((uint64_t)v28, v24, &qword_10030A1F0);
            uint64_t v25 = v38;
            if (v38 == v36)
            {
              uint64_t v32 = 0;
              long long v30 = 0u;
              long long v31 = 0u;
              long long v29 = 0u;
              __int16 v33 = -512;
            }
            else
            {
              sub_100140710((uint64_t)&v36, (uint64_t)v34, &qword_1003110C0);
              uint64_t v26 = v34[0];
              uint64_t result = (uint64_t *)sub_10003C3FC((uint64_t)v34, &qword_1003110C0);
              if (v25 < 0 || v25 >= v26)
              {
                __break(1u);
LABEL_38:
                __break(1u);
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
              uint64_t result = (uint64_t *)sub_100140710((uint64_t)v37, (uint64_t)&v29, &qword_10030A1F0);
              if (v25 >= v36) {
                goto LABEL_38;
              }
              uint64_t v38 = v25 + 1;
            }
            sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110D0);
            v24 += 64;
            ++v17;
          }
          while (v35 << 8 != 65024);
        }
        swift_release();
        sub_10003C3FC((uint64_t)v34, &qword_1003110D0);
LABEL_35:
        uint64_t v2 = v27;
        *(void *)(*v27 + 16) = v17;
        sub_100140710((uint64_t)&v29, (uint64_t)v34, &qword_1003110D0);
      }
      while (v35 << 8 != 65024);
    }
    sub_10003C3FC((uint64_t)&v29, &qword_1003110D0);
    sub_10003C3FC((uint64_t)&v36, &qword_1003110C8);
    uint64_t v20 = v34;
    uint64_t v19 = &qword_1003110D0;
    return (uint64_t *)sub_10003C3FC((uint64_t)v20, v19);
  }
  sub_100140710((uint64_t)&v36, (uint64_t)v34, &qword_1003110C0);
  uint64_t v21 = v34[0];
  uint64_t result = (uint64_t *)sub_10003C3FC((uint64_t)v34, &qword_1003110C0);
  if (v18 < 0 || v18 >= v21) {
    goto LABEL_42;
  }
  uint64_t result = (uint64_t *)sub_100140710((uint64_t)v37, (uint64_t)&v29, &qword_10030A1F0);
  if (v18 < v36)
  {
    uint64_t v38 = v18 + 1;
    goto LABEL_17;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_1001242D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_100140EE0();
  uint64_t v20 = *v16;
  uint64_t v21 = *(void *)(*v16 + 16);
  uint64_t v22 = v21 + v17;
  if (__OFADD__(v21, v17))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v23 = v19;
  uint64_t v24 = v18;
  uint64_t v25 = v17;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v16 = v20;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v27 = *(void *)(v20 + 24) >> 1, v27 < v22))
  {
    v24();
    uint64_t v20 = *v16;
    uint64_t v27 = *(void *)(*v16 + 24) >> 1;
  }
  uint64_t v51 = v24;
  uint64_t v28 = v27 - *(void *)(v20 + 16);
  sub_10013E030();
  if (v29 < v25) {
    goto LABEL_36;
  }
  if (v29 >= 1)
  {
    uint64_t v30 = *(void *)(v20 + 16);
    BOOL v31 = __OFADD__(v30, v29);
    uint64_t v32 = v30 + v29;
    if (v31)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    *(void *)(v20 + 16) = v32;
  }
  if (v29 != v28)
  {
    uint64_t v33 = a14;
    uint64_t v34 = a15;
    goto LABEL_13;
  }
  if (a16 == a13)
  {
    uint64_t v33 = sub_1001418E4();
LABEL_13:
    v23(v33, v34);
LABEL_32:
    *uint64_t v16 = v20;
    sub_1000B7AD8();
    return;
  }
  if ((a16 & 0x8000000000000000) == 0 && a16 < a13)
  {
    uint64_t v35 = *(void *)(v20 + 16);
    uint64_t v36 = a16 + 1;
    uint64_t v37 = sub_100141058();
    v38(v37);
    while (1)
    {
      unint64_t v39 = *(void *)(v20 + 24);
      uint64_t v40 = v35 + 1;
      if (v35 + 1 > (uint64_t)(v39 >> 1)) {
        ((void (*)(BOOL, uint64_t, uint64_t))v51)(v39 > 1, v35 + 1, 1);
      }
      uint64_t v20 = *v16;
      unint64_t v41 = *(void *)(*v16 + 24);
      if (v35 < (uint64_t)(v41 >> 1)) {
        break;
      }
      uint64_t v40 = v35;
LABEL_30:
      *(void *)(v20 + 16) = v40;
    }
    uint64_t v42 = v20 + 16 * v35;
    *(void *)(v42 + 32) = a14;
    *(void *)(v42 + 40) = a15;
    if (v36 == a13)
    {
      *(void *)(v20 + 16) = v40;
      uint64_t v49 = sub_1001418E4();
      ((void (*)(uint64_t))v23)(v49);
      goto LABEL_32;
    }
    if ((v36 & 0x8000000000000000) == 0 && v36 < a13)
    {
      int64_t v43 = v41 >> 1;
      unint64_t v50 = v36 + (v41 >> 1) - v35;
      uint64_t v44 = (void *)(v20 + 16 * v35 + 56);
      while (1)
      {
        if (v40 >= v43)
        {
          uint64_t v47 = sub_100141058();
          v48(v47);
          uint64_t v35 = v40;
          uint64_t v36 = v50;
          goto LABEL_30;
        }
        *(v44 - 1) = a14;
        *uint64_t v44 = a15;
        if (a13 - 1 == v36) {
          break;
        }
        ++v36;
        uint64_t v45 = sub_100141058();
        v46(v45);
        v44 += 2;
        ++v40;
        if (v36 >= a13) {
          goto LABEL_34;
        }
      }
      *(void *)(v20 + 16) = v40 + 1;
      goto LABEL_32;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_38:
  __break(1u);
}

void sub_10012450C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t))
{
  sub_1000B7690();
  unint64_t v15 = v14 >> 1;
  uint64_t v17 = (v14 >> 1) - v16;
  if (__OFSUB__(v14 >> 1, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v18 = *v11;
  uint64_t v19 = *(void *)(*v11 + 16);
  if (__OFADD__(v19, v17))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int v20 = sub_100141208();
  uint64_t *v11 = v18;
  if (!v20 || (uint64_t v21 = *(void *)(v18 + 24) >> 1, v21 < v19 + v17))
  {
    v13();
    uint64_t v18 = *v11;
    uint64_t v21 = *(void *)(*v11 + 24) >> 1;
  }
  if (v15 == v12)
  {
    if (v17 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      uint64_t *v11 = v18;
      sub_1000B75A4();
      return;
    }
    __break(1u);
  }
  uint64_t v22 = *(void *)(v18 + 16);
  if (v21 - v22 < v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  a10(v10 + 16 * v12, v17, v18 + 16 * v22 + 32);
  if (v17 <= 0) {
    goto LABEL_13;
  }
  uint64_t v23 = *(void *)(v18 + 16);
  BOOL v24 = __OFADD__(v23, v17);
  uint64_t v25 = v23 + v17;
  if (!v24)
  {
    *(void *)(v18 + 16) = v25;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_100124604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 16);
  uint64_t v6 = v5 + a1;
  if (__OFADD__(v5, a1)) {
    goto LABEL_39;
  }
  uint64_t v7 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v4;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v12 = *(void *)(v4 + 24) >> 1, v12 < v6))
  {
    sub_100038C48();
    uint64_t v4 = *v3;
    uint64_t v12 = *(void *)(*v3 + 24) >> 1;
  }
  uint64_t v13 = *(void *)(v4 + 16);
  uint64_t v14 = v12 - v13;
  if (v12 == v13)
  {
    if (a1 > 0)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v15 = 0;
    goto LABEL_19;
  }
  if (v14 < 1)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v15 = a1;
  if (a1)
  {
    uint64_t v26 = v12 - v13;
    uint64_t v27 = v3;
    uint64_t v16 = 0;
    uint64_t v17 = (uint64_t *)(v4 + 16 * v13 + 32);
    uint64_t v18 = ~v13 + v12;
    while ((a1 & ~(a1 >> 63)) != v16)
    {
      *uint64_t v17 = a2;
      v17[1] = a3;
      if (v18 == v16)
      {
        sub_10003C360(a2);
        uint64_t v15 = v26;
        uint64_t v7 = v27;
        if (v14 < a1) {
          goto LABEL_40;
        }
        goto LABEL_16;
      }
      sub_10003C360(a2);
      ++v16;
      v17 += 2;
      if (a1 == v16)
      {
        uint64_t v15 = a1;
        uint64_t v7 = v27;
        goto LABEL_16;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_16:
  if (v15 <= 0)
  {
LABEL_19:
    if (v15 != v14 || v14 == a1)
    {
LABEL_36:
      sub_10003C350(a2);
      *uint64_t v7 = v4;
      return;
    }
    if (v14 >= a1) {
      goto LABEL_42;
    }
    uint64_t v21 = v14 + 1;
    sub_10003C360(a2);
    while (1)
    {
      if (v13 + 1 > *(void *)(v4 + 24) >> 1) {
        sub_100038C48();
      }
      uint64_t v4 = *v7;
      unint64_t v22 = *(void *)(*v7 + 24);
      if (v13 < (uint64_t)(v22 >> 1)) {
        break;
      }
LABEL_34:
      *(void *)(v4 + 16) = v13;
    }
    int64_t v23 = v22 >> 1;
    uint64_t v28 = v21 + (v22 >> 1) - v13;
    BOOL v24 = (uint64_t *)(v4 + 16 * v13 + 40);
    uint64_t v25 = v21;
    while (1)
    {
      *(v24 - 1) = a2;
      *BOOL v24 = a3;
      ++v13;
      if (a1 == v25)
      {
        *(void *)(v4 + 16) = v13;
        goto LABEL_36;
      }
      if (v21 < 0 || v25 >= a1) {
        break;
      }
      ++v25;
      sub_10003C360(a2);
      v24 += 2;
      if (v13 >= v23)
      {
        uint64_t v21 = v28;
        goto LABEL_34;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
  BOOL v19 = __OFADD__(v13, v15);
  v13 += v15;
  if (!v19)
  {
    *(void *)(v4 + 16) = v13;
    goto LABEL_19;
  }
LABEL_43:
  __break(1u);
}

void sub_10012483C(uint64_t a1)
{
  if (a1 < 1)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v21 = (void (*)(uint64_t, uint64_t, uint64_t))&_swiftEmptyArrayStorage;
  sub_100038C48();
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = *v1;
  if (v4 < v3)
  {
    uint64_t v6 = sub_100121040(v1[1], *v1);
    sub_10012450C(v6, v7, v8, v9, (uint64_t)sub_100038C48, (uint64_t)sub_1001DD4D0, v10, v11, v19, (void (*)(uint64_t, uint64_t, uint64_t))&_swiftEmptyArrayStorage);
    if (v4 < 0)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (*(void *)(v5 + 16) < (unint64_t)v4)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    unint64_t v12 = *(void *)(v5 + 16);
    if (v12 < v3 || (uint64_t)v12 < v4) {
      goto LABEL_18;
    }
LABEL_11:
    uint64_t v14 = swift_retain();
    sub_10012450C(v14, v5 + 32, v3, (2 * v4) | 1, (uint64_t)sub_100038C48, (uint64_t)sub_1001DD4D0, v15, v16, v19, v21);
    uint64_t v18 = *(void *)(v22 + 16);
    if (a1 - v18 >= 0)
    {
      sub_1001242D0(a1 - v18, 0, 0, (uint64_t)sub_100038C48, (uint64_t)sub_10003C360, (uint64_t)sub_10003C360, (uint64_t)sub_10003C350, v17, v20, v22, v24, v25, v26, v27, v28, v29);
      swift_release();
      v1[1] = 0;
      v1[2] = v18;
      *uint64_t v1 = v23;
      return;
    }
    goto LABEL_14;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
}

uint64_t EventLoopFuture.hop(to:)()
{
  uint64_t v1 = v0;
  sub_100140E04();
  if (*(void *)(v0 + *(void *)(v3 + 96)) == v4)
  {
    swift_retain();
  }
  else
  {
    uint64_t v5 = v2;
    swift_getObjectType();
    sub_1000B7AA8();
    uint64_t v11 = EventLoop.makePromise<A>(of:file:line:)(v6, v7, v8, v9, 1379, v10, v6, v5);
    uint64_t v12 = swift_retain();
    EventLoopFuture.cascade(to:)(v12);
    swift_release();
    return v11;
  }
  return v1;
}

uint64_t EventLoopFuture.whenSuccess(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100124AC8(a1, a2);
}

uint64_t sub_100124AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_1001188D4();
  v5[2] = v2;
  v5[3] = a1;
  void v5[4] = a2;
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  return swift_release();
}

uint64_t sub_100124B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15 = *(void *)(a5 + 40);
  uint64_t v16 = *(void *)(a5 + 48);
  sub_100019524(&qword_1003110B8);
  sub_1001412AC();
  uint64_t v17 = sub_1001840EC(v15, v16, 0, 0, 255);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_10012F6C8(a5, a5, v17, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_100124CE4()
{
  return sub_100124E54();
}

void sub_100124CFC()
{
  sub_100141AF0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_100019524(&qword_1003110B0);
  uint64_t v8 = sub_1001412AC();
  sub_10014095C(v8, *(__n128 *)(v7 + 40));
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_100140F68();
  sub_100141B38();
  sub_100130E98(v9, v10, v11, v5, v3, v1);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_10008F248();
}

uint64_t sub_100124DA4()
{
  return sub_100124E54();
}

uint64_t sub_100124DBC()
{
  sub_1001414A0();
  sub_100019524(&qword_1003110B0);
  uint64_t v2 = sub_1001412AC();
  sub_10014095C(v2, *(__n128 *)(v1 + 40));
  swift_unknownObjectRetain();
  swift_retain();
  sub_100140F68();
  uint64_t v3 = sub_100141184();
  sub_100131314(v3, v4, v5, v6, v0);
  swift_unknownObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_100124E3C()
{
  return sub_100124E54();
}

uint64_t sub_100124E54()
{
  sub_1001414A0();
  sub_100019524(&qword_1003110B0);
  uint64_t v2 = sub_1001412AC();
  sub_10014095C(v2, *(__n128 *)(v1 + 40));
  swift_retain();
  swift_retain();
  sub_100140F68();
  uint64_t v3 = sub_100141184();
  v0(v3);
  swift_release();
  swift_release();
  return v2;
}

void EventLoopFuture.flatMapError(file:line:_:)()
{
}

uint64_t CallbackList.firstCallback.getter(uint64_t a1)
{
  return a1;
}

uint64_t CallbackList.firstCallback.setter()
{
  sub_1000ACEB8();
  uint64_t result = sub_10003C350(*v1);
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t CallbackList.furtherCallbacks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CallbackList.furtherCallbacks.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t CallbackList.init()()
{
  return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
}

void CallbackList.append(_:)()
{
  sub_1000ACEB8();
  if (*v1)
  {
    uint64_t v4 = v1[2];
    uint64_t v3 = v1 + 2;
    if (v4)
    {
      uint64_t v5 = sub_10004F2C8();
      *(void *)(v5 + 16) = v2;
      *(void *)(v5 + 24) = v0;
      swift_retain();
      sub_1000345F4();
      uint64_t v6 = *(void *)(*v3 + 16);
      sub_10003490C();
      uint64_t v7 = *v3;
      *(void *)(v7 + 16) = v6 + 1;
      uint64_t v8 = v7 + 16 * v6;
      *(void *)(v8 + 32) = sub_10013CB58;
      *(void *)(v8 + 40) = v5;
      *uint64_t v3 = v7;
    }
    else
    {
      sub_100019524(&qword_10030A3C0);
      uint64_t v9 = sub_1000AC8E4();
      *(_OWORD *)(v9 + 16) = xmmword_100255FB0;
      uint64_t v10 = sub_10004F2C8();
      *(void *)(v10 + 16) = v2;
      *(void *)(v10 + 24) = v0;
      *(void *)(v9 + 32) = sub_10013CB58;
      *(void *)(v9 + 40) = v10;
      swift_retain();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
    }
  }
  else
  {
    *uint64_t v1 = v2;
    v1[1] = v0;
    swift_retain();
  }
}

uint64_t sub_1001250B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

void CallbackList._allCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    if (a3)
    {
      sub_100120CBC((uint64_t)&_swiftEmptyArrayStorage);
      v12[0] = v6;
      v12[1] = v7;
      void v12[2] = v8;
      CallbackList.appendAllCallbacks(_:)(v12, a1, a2, a3);
      return;
    }
    sub_100019524(&qword_10030A3C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100255FB0;
    uint64_t v11 = sub_10004F2C8();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    *(void *)(inited + 32) = sub_10013CB58;
    *(void *)(inited + 40) = v11;
    swift_retain();
    uint64_t v9 = (void *)inited;
  }
  else
  {
    uint64_t v9 = &_swiftEmptyArrayStorage;
  }
  sub_100120CBC((uint64_t)v9);
}

uint64_t *CallbackList.appendAllCallbacks(_:)(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return result;
  }
  if (a4)
  {
    uint64_t v7 = *result;
    uint64_t v8 = result[1];
    uint64_t v9 = result[2];
    BOOL v10 = __OFSUB__(v9, v8);
    uint64_t v11 = v9 - v8;
    if (v11 < 0 != v10) {
      v11 += *(void *)(v7 + 16);
    }
    BOOL v10 = __OFADD__(v11, 1);
    uint64_t v12 = v11 + 1;
    if (v10)
    {
      __break(1u);
    }
    else
    {
      uint64_t v13 = *(void *)(a4 + 16);
      uint64_t result = (uint64_t *)(v12 + v13);
      if (!__OFADD__(v12, v13))
      {
        if (*(void *)(v7 + 16) >= (uint64_t)result)
        {
          sub_10003C360(a2);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v14 = sub_100113584((uint64_t)result);
          sub_10003C360(a2);
          swift_bridgeObjectRetain();
          sub_10012483C(v14);
        }
        uint64_t v16 = sub_10004F2C8();
        *(void *)(v16 + 16) = a2;
        *(void *)(v16 + 24) = a3;
        swift_retain();
        sub_100030D44((uint64_t)sub_10013CB58, v16);
        swift_release();
        sub_100120F28(a4);
        return (uint64_t *)sub_10003C350(a2);
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v15 = sub_10004F2C8();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  swift_retain_n();
  sub_100030D44((uint64_t)sub_10013CB58, v15);
  sub_10003C350(a2);
  return (uint64_t *)swift_release();
}

Swift::Void __swiftcall CallbackList._run()()
{
  void (*v12)(char **__return_ptr, uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t (*v71)(void);
  int64_t v72;
  unint64_t v73;
  char *v74;
  int64_t v75;
  uint64_t (*v76)(void);
  uint64_t v77;
  uint64_t (*v78)(void);
  char *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void (*v99)(char **__return_ptr, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  unint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  unint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  unint64_t v148;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int64_t v153;
  uint64_t v154;
  int64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v160;
  int64_t v161;
  unint64_t v162;
  char *v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  int64_t v167;
  char *v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t vars8;

  if (v0)
  {
    sub_1000ACEB8();
    if (v3)
    {
      CallbackList._allCallbacks()((uint64_t)v2, v1, v3);
      uint64_t v5 = v4;
      unint64_t v7 = v6;
      uint64_t v9 = v8;
      uint64_t v183 = v4;
      uint64_t v184 = v6;
      uint64_t v185 = v8;
      while (1)
      {
        uint64_t v10 = v9 - v7;
        if (v9 < (uint64_t)v7) {
          v10 += *(void *)(v5 + 16);
        }
        if (v10 < 1)
        {
          swift_release();
          return;
        }
        if (v9 == v7) {
          goto LABEL_290;
        }
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_329;
        }
        if (HIDWORD(v7)) {
          goto LABEL_330;
        }
        unint64_t v11 = *(void *)(v5 + 16);
        if (v7 >= v11) {
          goto LABEL_291;
        }
        uint64_t v12 = *(void (**)(char **__return_ptr, uint64_t))(v5 + 16 * v7 + 32);
        if (!v12) {
          goto LABEL_326;
        }
        if (v9 >= (uint64_t)v7) {
          unint64_t v11 = 0;
        }
        if ((uint64_t)(v9 - v7 + v11) < 1) {
          goto LABEL_292;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10011FCDC();
          uint64_t v5 = v13;
        }
        if (v7 >= *(void *)(v5 + 16)) {
          goto LABEL_293;
        }
        uint64_t v14 = v5 + 16 * v7;
        uint64_t v15 = sub_10003C350(*(void *)(v14 + 32));
        *(void *)(v14 + 32) = 0;
        *(void *)(v14 + 40) = 0;
        uint64_t v16 = *(void *)(v5 + 16);
        uint64_t v17 = (v16 - 1) & (v7 + 1);
        uint64_t v183 = v5;
        uint64_t v184 = v17;
        v12(&v180, v15);
        sub_10003C350((uint64_t)v12);
        uint64_t v18 = (uint64_t)v180;
        if (!v180) {
          goto LABEL_125;
        }
        uint64_t v19 = v181;
        if (v182)
        {
          if (v9 >= v17) {
            uint64_t v20 = 0;
          }
          else {
            uint64_t v20 = v16;
          }
          uint64_t v21 = v9 - v17 + v20;
          uint64_t v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_304;
          }
          uint64_t v24 = *(void *)(v182 + 16);
          uint64_t v22 = __OFADD__(v23, v24);
          uint64_t v25 = v23 + v24;
          if (v22) {
            goto LABEL_305;
          }
          int v175 = v182;
          if (v16 >= v25)
          {
            sub_10003C360((uint64_t)v180);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v26 = sub_1001411D4();
            sub_10003C360(v26);
            swift_bridgeObjectRetain();
            sub_10012483C(v9);
            uint64_t v5 = v183;
          }
          BOOL v31 = sub_10004F2C8();
          *(void *)(v31 + 16) = v18;
          *(void *)(v31 + 24) = v19;
          uint64_t v32 = v185;
          sub_10003C360(v18);
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10011FCDC();
            uint64_t v5 = v33;
          }
          if ((v32 & 0x8000000000000000) != 0) {
            goto LABEL_306;
          }
          if (v32 >= *(void *)(v5 + 16)) {
            goto LABEL_307;
          }
          uint64_t v34 = v5 + 16 * v32;
          uint64_t v35 = sub_10003C350(*(void *)(v34 + 32));
          *(void *)(v34 + 32) = sub_10013CB58;
          *(void *)(v34 + 40) = v31;
          uint64_t v36 = (*(void *)(v5 + 16) - 1) & (v32 + 1);
          uint64_t v183 = v5;
          uint64_t v185 = v36;
          if (v184 == v36) {
            sub_100121740(v35);
          }
          swift_release();
          uint64_t v37 = *(void *)(v175 + 16);
          if (v37)
          {
            uint64_t v38 = 0;
            unint64_t v39 = (void *)v183;
            uint64_t v40 = v185;
            unint64_t v41 = v175 + 32;
            char v177 = *(void *)(v175 + 16);
            while (1)
            {
              uint64_t v42 = (uint64_t *)(v41 + 16 * v38);
              int64_t v43 = *v42;
              uint64_t v44 = v42[1];
              sub_100140F20();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_10011FCDC();
                unint64_t v39 = v45;
              }
              if ((v40 & 0x8000000000000000) != 0) {
                goto LABEL_268;
              }
              if (v40 >= v39[2]) {
                goto LABEL_269;
              }
              uint64_t v46 = (unint64_t)(v39 + 4);
              uint64_t v47 = &v39[2 * v40 + 4];
              sub_10003C350(*v47);
              *uint64_t v47 = v43;
              v47[1] = v44;
              uint64_t v48 = v39[2];
              uint64_t v40 = (v48 - 1) & (v40 + 1);
              if (v184 != v40)
              {
                swift_release();
                goto LABEL_112;
              }
              if (2 * v48 < 1) {
                goto LABEL_270;
              }
              unint64_t v179 = 2 * v48;
              uint64_t v180 = (char *)&_swiftEmptyArrayStorage;
              sub_100038C48();
              uint64_t v49 = v39[2];
              unint64_t v50 = v49 - v40;
              if (v49 < v40) {
                goto LABEL_271;
              }
              uint64_t v51 = v180;
              uint64_t v52 = *((void *)v180 + 2);
              if (__OFADD__(v52, v50)) {
                goto LABEL_272;
              }
              uint64_t v53 = *((void *)v180 + 3) >> 1;
              swift_retain();
              if (v53 < v52 + v50)
              {
                sub_100140DA4();
                uint64_t v51 = v180;
                uint64_t v52 = *((void *)v180 + 2);
                uint64_t v53 = *((void *)v180 + 3) >> 1;
              }
              if (v49 == v40)
              {
                if (v50 > 0) {
                  goto LABEL_273;
                }
              }
              else
              {
                if (v53 - v52 < v50) {
                  goto LABEL_283;
                }
                if (v50 < 0) {
                  goto LABEL_328;
                }
                uint64_t v54 = (unint64_t)&v51[16 * v52 + 32];
                if (v46 + 16 * v40 < v54 + 16 * v50 && v54 < v46 + 16 * v49) {
                  goto LABEL_328;
                }
                sub_100019524(&qword_100310F60);
                swift_arrayInitWithCopy();
                uint64_t v56 = *((void *)v51 + 2);
                uint64_t v22 = __OFADD__(v56, v50);
                uint64_t v57 = v56 + v50;
                if (v22) {
                  goto LABEL_284;
                }
                *((void *)v51 + 2) = v57;
              }
              swift_release();
              if (v39[2] < v40) {
                goto LABEL_274;
              }
              uint64_t v58 = *((void *)v51 + 2);
              if (__OFADD__(v58, v40)) {
                goto LABEL_275;
              }
              uint64_t v180 = v51;
              uint64_t v59 = *((void *)v51 + 3) >> 1;
              swift_retain();
              if (v59 < (uint64_t)(v58 + v40))
              {
                sub_100140DA4();
                uint64_t v51 = v180;
                uint64_t v58 = *((void *)v180 + 2);
                uint64_t v59 = *((void *)v180 + 3) >> 1;
                if (!v40) {
                  goto LABEL_77;
                }
              }
              else if (!v40)
              {
                goto LABEL_77;
              }
              if (v59 - v58 < (uint64_t)v40) {
                goto LABEL_280;
              }
              uint64_t v60 = (unint64_t)&v51[16 * v58 + 32];
              if (v46 < v60 + 16 * v40 && v60 < v46 + 16 * v40) {
                goto LABEL_328;
              }
              sub_100019524(&qword_100310F60);
              sub_100141A10();
              swift_arrayInitWithCopy();
              uint64_t v62 = *((void *)v51 + 2);
              uint64_t v22 = __OFADD__(v62, v40);
              uint64_t v63 = v62 + v40;
              if (v22) {
                goto LABEL_281;
              }
              *((void *)v51 + 2) = v63;
LABEL_77:
              swift_release();
              uint64_t v40 = *((void *)v51 + 2);
              uint64_t v64 = v179;
              uint64_t v2 = (uint64_t (*)(void))(v179 - v40);
              if ((uint64_t)(v179 - v40) < 0) {
                goto LABEL_276;
              }
              if (__OFADD__(v40, v2)) {
                goto LABEL_277;
              }
              uint64_t v180 = v51;
              uint64_t v65 = *((void *)v51 + 3) >> 1;
              uint64_t v66 = v40;
              if (v65 < v179)
              {
                sub_100140DA4();
                uint64_t v64 = v179;
                uint64_t v51 = v180;
                uint64_t v66 = *((void *)v180 + 2);
                uint64_t v65 = *((void *)v180 + 3) >> 1;
              }
              uint64_t v67 = v65 - v66;
              if (v65 == v66) {
                goto LABEL_84;
              }
              if (v67 < 1) {
                goto LABEL_282;
              }
              if (v64 == v40)
              {
LABEL_84:
                long long v68 = 0;
LABEL_85:
                if (v68 < (uint64_t)v2) {
                  goto LABEL_278;
                }
LABEL_86:
                if (v68 <= 0) {
                  goto LABEL_93;
                }
              }
              else
              {
                uint64_t v69 = &v51[16 * v66];
                *((void *)v69 + 4) = 0;
                *((void *)v69 + 5) = 0;
                if (v67 != 1)
                {
                  unint64_t v80 = v69 + 48;
                  uint64_t v81 = 1;
                  while (v81 < v67)
                  {
                    if (v2 == (uint64_t (*)(void))v81)
                    {
                      long long v68 = v179 - v40;
                      goto LABEL_86;
                    }
                    if (v81 >= (uint64_t)v2) {
                      goto LABEL_267;
                    }
                    ++v81;
                    *unint64_t v80 = 0;
                    v80[1] = 0;
                    v80 += 2;
                    if (v67 == v81)
                    {
                      long long v68 = v67;
                      goto LABEL_85;
                    }
                  }
                  goto LABEL_266;
                }
                if ((unint64_t)v2 > 1) {
                  goto LABEL_278;
                }
                long long v68 = 1;
              }
              uint64_t v22 = __OFADD__(v66, v68);
              v66 += v68;
              if (v22) {
                goto LABEL_279;
              }
              *((void *)v51 + 2) = v66;
LABEL_93:
              if (v68 == v67 && v68 != (void)v2)
              {
                if (v67 >= (uint64_t)v2) {
                  goto LABEL_285;
                }
                uint64_t v71 = (uint64_t (*)(void))(v67 + 1);
                while (1)
                {
                  uint64_t v72 = v66 + 1;
                  if (v66 + 1 > *((void *)v51 + 3) >> 1) {
                    sub_100038C48();
                  }
                  uint64_t v51 = v180;
                  uint64_t v73 = *((void *)v180 + 3);
                  if (v66 < (uint64_t)(v73 >> 1)) {
                    break;
                  }
LABEL_110:
                  *((void *)v51 + 2) = v66;
                }
                unint64_t v74 = &v180[16 * v66];
                *((void *)v74 + 4) = 0;
                *((void *)v74 + 5) = 0;
                if (v71 != v2)
                {
                  unint64_t v75 = v73 >> 1;
                  uint64_t v76 = (uint64_t (*)(void))((char *)v71 + (v73 >> 1) - v66);
                  uint64_t v77 = 16 * v66 + 48;
                  uint64_t v78 = v71;
                  while (((unint64_t)v71 & 0x8000000000000000) == 0 && (uint64_t)v78 < (uint64_t)v2)
                  {
                    if (v72 >= v75)
                    {
                      uint64_t v66 = v72;
                      uint64_t v71 = v76;
                      goto LABEL_110;
                    }
                    uint64_t v78 = (uint64_t (*)(void))((char *)v78 + 1);
                    ++v72;
                    unsigned int v79 = &v51[v77];
                    *(void *)unsigned int v79 = 0;
                    *((void *)v79 + 1) = 0;
                    v77 += 16;
                    if (v2 == v78)
                    {
                      *((void *)v51 + 2) = v72;
                      goto LABEL_111;
                    }
                  }
                  __break(1u);
                  goto LABEL_136;
                }
                *((void *)v51 + 2) = v72;
                sub_10003C350(0);
              }
LABEL_111:
              swift_release();
              swift_release();
              uint64_t v184 = 0;
              unint64_t v39 = v51;
              unint64_t v41 = v175 + 32;
              uint64_t v37 = v177;
LABEL_112:
              if (++v38 == v37)
              {
                swift_bridgeObjectRelease();
                sub_10014167C();
                uint64_t v185 = v40;
                uint64_t v183 = (uint64_t)v39;
                goto LABEL_126;
              }
            }
          }
          swift_bridgeObjectRelease();
          sub_1001419C0();
          sub_1001419C0();
LABEL_125:
          swift_bridgeObjectRelease();
LABEL_126:
          unint64_t v7 = v184;
          uint64_t v9 = v185;
          uint64_t v5 = v183;
        }
        else
        {
          uint64_t v27 = sub_10004F2C8();
          *(void *)(v27 + 16) = v18;
          *(void *)(v27 + 24) = v19;
          sub_10003C360(v18);
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10011FCDC();
            uint64_t v5 = v28;
          }
          if (v9 < 0) {
            goto LABEL_314;
          }
          if ((unint64_t)v9 >= *(void *)(v5 + 16)) {
            goto LABEL_315;
          }
          uint64_t v29 = v5 + 16 * v9;
          uint64_t v30 = sub_10003C350(*(void *)(v29 + 32));
          *(void *)(v29 + 32) = sub_10013CB58;
          *(void *)(v29 + 40) = v27;
          uint64_t v9 = (*(void *)(v5 + 16) - 1) & (v9 + 1);
          uint64_t v183 = v5;
          uint64_t v185 = v9;
          unint64_t v7 = v184;
          if (v184 == v9)
          {
            sub_100121740(v30);
            swift_release();
            sub_1001419C0();
            goto LABEL_126;
          }
          swift_release();
          sub_1001419C0();
        }
      }
    }
    swift_retain_n();
    sub_100141B04();
    uint64_t v82 = v2();
    uint64_t v85 = v84;
    if (v82)
    {
      unint64_t v86 = (uint64_t (*)(uint64_t))v82;
      uint64_t v87 = v83;
      while (!v85)
      {
        uint64_t v88 = swift_release();
        unint64_t v86 = (uint64_t (*)(uint64_t))v86(v88);
        uint64_t v87 = v89;
        uint64_t v85 = v90;
        if (!v86) {
          goto LABEL_136;
        }
      }
      uint64_t v171 = (uint64_t)v2;
      CallbackList._allCallbacks()((uint64_t)v86, v87, v85);
      uint64_t v92 = v91;
      uint64_t v94 = v93;
      unint64_t v96 = v95;
      uint64_t v183 = v91;
      uint64_t v184 = v93;
      uint64_t v185 = v95;
      uint64_t v173 = v86;
      while (1)
      {
        uint64_t v97 = v96 - v94;
        if (v96 < (uint64_t)v94) {
          v97 += *(void *)(v92 + 16);
        }
        if (v97 < 1)
        {
          sub_10003C350(v171);
          swift_release();
          sub_10003C350((uint64_t)v86);
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        if (v96 == v94) {
          goto LABEL_316;
        }
        if ((v94 & 0x8000000000000000) != 0) {
          goto LABEL_329;
        }
        if (HIDWORD(v94))
        {
LABEL_330:
          sub_10003C4F8();
          sub_10003C6D8();
LABEL_331:
          sub_10003C850();
          __break(1u);
          return;
        }
        uint64_t v98 = *(void *)(v92 + 16);
        if (v94 >= v98) {
          goto LABEL_317;
        }
        unint64_t v99 = *(void (**)(char **__return_ptr, uint64_t))(v92 + 16 * v94 + 32);
        if (!v99) {
          goto LABEL_327;
        }
        if (v96 >= (uint64_t)v94) {
          uint64_t v98 = 0;
        }
        if ((uint64_t)(v96 - v94 + v98) < 1) {
          goto LABEL_318;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10011FCDC();
          uint64_t v92 = v100;
        }
        if (v94 >= *(void *)(v92 + 16))
        {
LABEL_319:
          __break(1u);
LABEL_320:
          __break(1u);
LABEL_321:
          __break(1u);
LABEL_322:
          __break(1u);
LABEL_323:
          __break(1u);
LABEL_324:
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
LABEL_327:
          __break(1u);
LABEL_328:
          sub_10003C4F8();
          sub_10024F730();
          __break(1u);
LABEL_329:
          sub_10003C4F8();
          sub_10003C6E8();
          goto LABEL_331;
        }
        unint64_t v101 = v92 + 16 * v94;
        uint64_t v102 = sub_10003C350(*(void *)(v101 + 32));
        *(void *)(v101 + 32) = 0;
        *(void *)(v101 + 40) = 0;
        unint64_t v103 = *(void *)(v92 + 16);
        uint64_t v104 = (v103 - 1) & (v94 + 1);
        uint64_t v183 = v92;
        uint64_t v184 = v104;
        v99(&v180, v102);
        sub_10003C350((uint64_t)v99);
        uint64_t v105 = (uint64_t)v180;
        if (!v180) {
          break;
        }
        uint64_t v106 = v181;
        if (v182)
        {
          if (v96 >= v104) {
            uint64_t v107 = 0;
          }
          else {
            uint64_t v107 = v103;
          }
          long long v108 = v96 - v104 + v107;
          uint64_t v22 = __OFADD__(v108, 1);
          uint64_t v109 = v108 + 1;
          if (v22) {
            goto LABEL_320;
          }
          uint64_t v110 = *(void *)(v182 + 16);
          uint64_t v22 = __OFADD__(v109, v110);
          Swift::String v111 = v109 + v110;
          if (v22) {
            goto LABEL_321;
          }
          uint64_t v174 = v182;
          if (v103 >= v111)
          {
            sub_10003C360((uint64_t)v180);
            swift_bridgeObjectRetain();
          }
          else
          {
            Swift::String v112 = sub_1001411D4();
            sub_10003C360(v112);
            swift_bridgeObjectRetain();
            sub_10012483C(v92);
            uint64_t v92 = v183;
          }
          unint64_t v86 = v173;
          uint64_t v119 = sub_10004F2C8();
          *(void *)(v119 + 16) = v105;
          *(void *)(v119 + 24) = v106;
          uint64_t v120 = v185;
          uint64_t v172 = v105;
          sub_10003C360(v105);
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10011FCDC();
            uint64_t v92 = v121;
          }
          if ((v120 & 0x8000000000000000) != 0) {
            goto LABEL_322;
          }
          if (v120 >= *(void *)(v92 + 16)) {
            goto LABEL_323;
          }
          uint64_t v122 = v92 + 16 * v120;
          uint64_t v123 = sub_10003C350(*(void *)(v122 + 32));
          *(void *)(v122 + 32) = sub_10013CB58;
          *(void *)(v122 + 40) = v119;
          uint64_t v124 = (*(void *)(v92 + 16) - 1) & (v120 + 1);
          uint64_t v183 = v92;
          uint64_t v185 = v124;
          if (v184 == v124) {
            sub_100121740(v123);
          }
          swift_release();
          uint64_t v125 = *(void *)(v174 + 16);
          if (v125)
          {
            v126 = 0;
            uint64_t v127 = (void *)v183;
            unint64_t v128 = v185;
            while (1)
            {
              unint64_t v129 = (uint64_t *)(v174 + 32 + 16 * v126);
              uint64_t v130 = *v129;
              unint64_t v131 = v129[1];
              sub_100140F20();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_10011FCDC();
                uint64_t v127 = v132;
              }
              if ((v128 & 0x8000000000000000) != 0)
              {
LABEL_288:
                __break(1u);
LABEL_289:
                __break(1u);
LABEL_290:
                __break(1u);
LABEL_291:
                __break(1u);
LABEL_292:
                __break(1u);
LABEL_293:
                __break(1u);
LABEL_294:
                __break(1u);
LABEL_295:
                __break(1u);
LABEL_296:
                __break(1u);
LABEL_297:
                __break(1u);
LABEL_298:
                __break(1u);
LABEL_299:
                __break(1u);
LABEL_300:
                __break(1u);
LABEL_301:
                __break(1u);
LABEL_302:
                __break(1u);
LABEL_303:
                __break(1u);
LABEL_304:
                __break(1u);
LABEL_305:
                __break(1u);
LABEL_306:
                __break(1u);
LABEL_307:
                __break(1u);
LABEL_308:
                __break(1u);
LABEL_309:
                __break(1u);
LABEL_310:
                __break(1u);
LABEL_311:
                __break(1u);
LABEL_312:
                __break(1u);
LABEL_313:
                __break(1u);
LABEL_314:
                __break(1u);
LABEL_315:
                __break(1u);
LABEL_316:
                __break(1u);
LABEL_317:
                __break(1u);
LABEL_318:
                __break(1u);
                goto LABEL_319;
              }
              if (v128 >= v127[2]) {
                goto LABEL_289;
              }
              uint64_t v133 = (unint64_t)(v127 + 4);
              uint64_t v134 = &v127[2 * v128 + 4];
              sub_10003C350(*v134);
              *uint64_t v134 = v130;
              v134[1] = v131;
              uint64_t v135 = v127[2];
              unint64_t v128 = (v135 - 1) & (v128 + 1);
              if (v184 != v128)
              {
                swift_release();
                goto LABEL_250;
              }
              if (2 * v135 < 1) {
                goto LABEL_294;
              }
              BOOL v178 = v126;
              uint64_t v136 = v125;
              uint64_t v180 = (char *)&_swiftEmptyArrayStorage;
              __int16 v176 = 2 * v135;
              sub_100038C48();
              uint64_t v137 = v127[2];
              Swift::Int v138 = v137 - v128;
              if (v137 < v128) {
                goto LABEL_295;
              }
              uint64_t v139 = v180;
              uint64_t v140 = *((void *)v180 + 2);
              if (__OFADD__(v140, v138)) {
                goto LABEL_296;
              }
              v141 = *((void *)v180 + 3) >> 1;
              swift_retain();
              if (v141 < v140 + v138)
              {
                sub_100140DA4();
                uint64_t v139 = v180;
                uint64_t v140 = *((void *)v180 + 2);
                v141 = *((void *)v180 + 3) >> 1;
              }
              if (v137 == v128)
              {
                uint64_t v125 = v136;
                if (v138 > 0) {
                  goto LABEL_297;
                }
              }
              else
              {
                if (v141 - v140 < v138) {
                  goto LABEL_311;
                }
                if (v138 < 0) {
                  goto LABEL_328;
                }
                uint64_t v142 = (unint64_t)&v139[16 * v140 + 32];
                if (v133 + 16 * v128 < v142 + 16 * v138 && v142 < v133 + 16 * v137) {
                  goto LABEL_328;
                }
                sub_100019524(&qword_100310F60);
                swift_arrayInitWithCopy();
                uint64_t v144 = *((void *)v139 + 2);
                uint64_t v22 = __OFADD__(v144, v138);
                unint64_t v145 = v144 + v138;
                if (v22) {
                  goto LABEL_312;
                }
                uint64_t v125 = v136;
                *((void *)v139 + 2) = v145;
              }
              swift_release();
              if (v127[2] < v128) {
                goto LABEL_298;
              }
              uint64_t v146 = *((void *)v139 + 2);
              if (__OFADD__(v146, v128)) {
                goto LABEL_299;
              }
              uint64_t v180 = v139;
              uint64_t v147 = *((void *)v139 + 3) >> 1;
              swift_retain();
              if (v147 < (uint64_t)(v146 + v128))
              {
                sub_100140DA4();
                uint64_t v139 = v180;
                uint64_t v146 = *((void *)v180 + 2);
                uint64_t v147 = *((void *)v180 + 3) >> 1;
              }
              v126 = v178;
              if (v128)
              {
                if (v147 - v146 < (uint64_t)v128) {
                  goto LABEL_308;
                }
                uint64_t v148 = (unint64_t)&v139[16 * v146 + 32];
                if (v133 < v148 + 16 * v128 && v148 < v133 + 16 * v128) {
                  goto LABEL_328;
                }
                sub_100019524(&qword_100310F60);
                swift_arrayInitWithCopy();
                uint64_t v150 = *((void *)v139 + 2);
                uint64_t v22 = __OFADD__(v150, v128);
                uint64_t v151 = v150 + v128;
                if (v22) {
                  goto LABEL_309;
                }
                *((void *)v139 + 2) = v151;
              }
              swift_release();
              unint64_t v128 = *((void *)v139 + 2);
              uint64_t v152 = v176;
              uint64_t v153 = v176 - v128;
              if ((uint64_t)(v176 - v128) < 0) {
                goto LABEL_300;
              }
              if (__OFADD__(v128, v153)) {
                goto LABEL_301;
              }
              uint64_t v180 = v139;
              uint64_t v154 = *((void *)v139 + 3) >> 1;
              uint64_t v155 = v128;
              if (v154 < v176)
              {
                sub_100140DA4();
                uint64_t v152 = v176;
                uint64_t v139 = v180;
                uint64_t v155 = *((void *)v180 + 2);
                uint64_t v154 = *((void *)v180 + 3) >> 1;
              }
              uint64_t v156 = v154 - v155;
              if (v154 == v155) {
                goto LABEL_222;
              }
              if (v156 < 1) {
                goto LABEL_310;
              }
              if (v152 == v128)
              {
LABEL_222:
                uint64_t v157 = 0;
LABEL_223:
                if (v157 < v153) {
                  goto LABEL_302;
                }
LABEL_224:
                if (v157 <= 0) {
                  goto LABEL_231;
                }
              }
              else
              {
                uint64_t v158 = &v139[16 * v155];
                *((void *)v158 + 4) = 0;
                *((void *)v158 + 5) = 0;
                if (v156 != 1)
                {
                  unint64_t v169 = v158 + 48;
                  unint64_t v170 = 1;
                  while (v170 < v156)
                  {
                    if (v153 == v170)
                    {
                      uint64_t v157 = v176 - v128;
                      goto LABEL_224;
                    }
                    if (v170 >= v153) {
                      goto LABEL_287;
                    }
                    ++v170;
                    *unint64_t v169 = 0;
                    v169[1] = 0;
                    v169 += 2;
                    if (v156 == v170)
                    {
                      uint64_t v157 = v156;
                      goto LABEL_223;
                    }
                  }
                  goto LABEL_286;
                }
                if ((unint64_t)v153 > 1) {
                  goto LABEL_302;
                }
                uint64_t v157 = 1;
              }
              uint64_t v22 = __OFADD__(v155, v157);
              v155 += v157;
              if (v22) {
                goto LABEL_303;
              }
              *((void *)v139 + 2) = v155;
LABEL_231:
              if (v157 == v156 && v157 != v153)
              {
                if (v156 >= v153) {
                  goto LABEL_313;
                }
                uint64_t v160 = v156 + 1;
                while (1)
                {
                  uint64_t v161 = v155 + 1;
                  if (v155 + 1 > *((void *)v139 + 3) >> 1) {
                    sub_100038C48();
                  }
                  uint64_t v139 = v180;
                  uint64_t v162 = *((void *)v180 + 3);
                  if (v155 < (uint64_t)(v162 >> 1)) {
                    break;
                  }
LABEL_248:
                  *((void *)v139 + 2) = v155;
                }
                Swift::Int v163 = &v180[16 * v155];
                *((void *)v163 + 4) = 0;
                *((void *)v163 + 5) = 0;
                if (v160 != v153)
                {
                  uint64_t v164 = v162 >> 1;
                  uint64_t v165 = v160 + (v162 >> 1) - v155;
                  uint64_t v166 = 16 * v155 + 48;
                  unint64_t v167 = v160;
                  while ((v160 & 0x8000000000000000) == 0 && v167 < v153)
                  {
                    if (v161 >= v164)
                    {
                      uint64_t v155 = v161;
                      uint64_t v160 = v165;
                      goto LABEL_248;
                    }
                    ++v167;
                    ++v161;
                    uint64_t v168 = &v139[v166];
                    *(void *)uint64_t v168 = 0;
                    *((void *)v168 + 1) = 0;
                    v166 += 16;
                    if (v153 == v167)
                    {
                      *((void *)v139 + 2) = v161;
                      goto LABEL_249;
                    }
                  }
                  __break(1u);
LABEL_266:
                  __break(1u);
LABEL_267:
                  __break(1u);
LABEL_268:
                  __break(1u);
LABEL_269:
                  __break(1u);
LABEL_270:
                  __break(1u);
LABEL_271:
                  __break(1u);
LABEL_272:
                  __break(1u);
LABEL_273:
                  __break(1u);
LABEL_274:
                  __break(1u);
LABEL_275:
                  __break(1u);
LABEL_276:
                  __break(1u);
LABEL_277:
                  __break(1u);
LABEL_278:
                  __break(1u);
LABEL_279:
                  __break(1u);
LABEL_280:
                  __break(1u);
LABEL_281:
                  __break(1u);
LABEL_282:
                  __break(1u);
LABEL_283:
                  __break(1u);
LABEL_284:
                  __break(1u);
LABEL_285:
                  __break(1u);
LABEL_286:
                  __break(1u);
LABEL_287:
                  __break(1u);
                  goto LABEL_288;
                }
                *((void *)v139 + 2) = v161;
                sub_10003C350(0);
              }
LABEL_249:
              swift_release();
              swift_release();
              uint64_t v184 = 0;
              uint64_t v127 = v139;
LABEL_250:
              if (++v126 == v125)
              {
                swift_bridgeObjectRelease();
                sub_10003C350(v172);
                sub_10003C350(v172);
                swift_bridgeObjectRelease();
                uint64_t v185 = v128;
                uint64_t v183 = (uint64_t)v127;
                goto LABEL_260;
              }
            }
          }
          swift_bridgeObjectRelease();
          sub_10014167C();
LABEL_262:
          uint64_t v94 = v184;
          unint64_t v96 = v185;
          uint64_t v92 = v183;
        }
        else
        {
          uint64_t v113 = (uint64_t)v180;
          uint64_t v114 = sub_10004F2C8();
          *(void *)(v114 + 16) = v113;
          *(void *)(v114 + 24) = v106;
          uint64_t v115 = v113;
          sub_10003C360(v113);
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10011FCDC();
            uint64_t v92 = v116;
          }
          unint64_t v86 = v173;
          if (v96 < 0) {
            goto LABEL_324;
          }
          if ((unint64_t)v96 >= *(void *)(v92 + 16)) {
            goto LABEL_325;
          }
          uint64_t v117 = v92 + 16 * v96;
          uint64_t v118 = sub_10003C350(*(void *)(v117 + 32));
          *(void *)(v117 + 32) = sub_10013CB58;
          *(void *)(v117 + 40) = v114;
          unint64_t v96 = (*(void *)(v92 + 16) - 1) & (v96 + 1);
          uint64_t v183 = v92;
          uint64_t v185 = v96;
          uint64_t v94 = v184;
          if (v184 == v96)
          {
            sub_100121740(v118);
            swift_release();
            sub_10003C350(v115);
            goto LABEL_262;
          }
          swift_release();
          sub_10003C350(v115);
        }
      }
      swift_bridgeObjectRelease();
LABEL_260:
      unint64_t v86 = v173;
      goto LABEL_262;
    }
LABEL_136:
    swift_release();
    sub_10003C350((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
}

#error "10012659C: call analysis failed (funcsize=26)"

void EventLoopFuture.__allocating_init(_eventLoop:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10003C984();
  a19 = v20;
  a20 = v21;
  sub_1001414E8();
  sub_10001B028(&qword_100309768);
  uint64_t v22 = sub_10024FCF0();
  sub_10024F030();
  sub_10007A8E8();
  __chkstk_darwin();
  sub_1000195B4((uint64_t)&a9 - v23, 1, 1, v22);
  sub_1001418E4();
  sub_1001419F0();
  sub_10003C8C8();
}

void EventLoopPromise._resolve(value:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_10001B028(&qword_100309768);
  uint64_t v4 = sub_10024FCF0();
  sub_10002F9C8();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v20 - v9;
  sub_10002FA28();
  uint64_t v12 = *(void *)(v3 + *(void *)(v11 + 96) + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(ObjectType, v12))
  {
    sub_100141908();
    EventLoopPromise._setValue(value:)();
    sub_1000B7604();
    sub_1000B75C0();
    sub_10003C8C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000ACAD0();
    v15();
    uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v21 = v1;
    uint64_t v17 = (v16 + 32) & ~v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v21;
    *(void *)(v18 + 24) = v3;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, v10, v4);
    uint64_t v19 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 24);
    swift_retain();
    v19(sub_10013E354, v18, ObjectType, v12);
    swift_release();
    sub_10003C8C8();
  }
}

uint64_t EventLoopPromise.completeWith(_:)(uint64_t a1, uint64_t a2)
{
  return EventLoopFuture.cascade(to:)(a2);
}

void EventLoopPromise._setValue(value:)()
{
}

uint64_t sub_1001268A0()
{
  EventLoopPromise._setValue(value:)();
  uint64_t v1 = v0;
  CallbackList._run()();
  sub_10003C350(v1);
  return swift_bridgeObjectRelease();
}

void EventLoopFuture._setValue(value:)()
{
  sub_10003C984();
  uint64_t v2 = v0;
  v28[1] = v3;
  uint64_t v4 = *v0;
  sub_10001B028(&qword_100309768);
  uint64_t v5 = sub_10024FCF0();
  uint64_t v6 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  sub_1000E2460();
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = *(void *)((char *)v2 + *(void *)(v4 + 96) + 8);
  swift_getObjectType();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v16, v17, v18, 769, v19, v15);
  sub_10002FA28();
  uint64_t v21 = (char *)v2 + *(void *)(v20 + 88);
  sub_10006FF20();
  sub_1001418F0();
  sub_1000ACAD0();
  v22();
  int v23 = sub_10001FA0C((uint64_t)v14, 1, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v6);
  if (v23 == 1)
  {
    sub_10007A8C4();
    sub_100118854();
    v24();
    sub_1000195B4(v1, 0, 1, v5);
    sub_1000578C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 40))(v21, v1, v6);
    swift_endAccess();
    sub_10002FA28();
    uint64_t v26 = (void *)((char *)v2 + *(void *)(v25 + 104));
    sub_100141040();
    uint64_t v27 = *v26;
    v26[1] = 0;
    v26[2] = 0;
    uint64_t *v26 = 0;
    sub_10003C360(v27);
    swift_bridgeObjectRetain();
    sub_10003C350(v27);
    swift_bridgeObjectRelease();
  }
  sub_10003C8C8();
}

uint64_t EventLoopFuture._value.getter()
{
  sub_1001413B4();
  sub_10006FF20();
  sub_1001413B4();
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  sub_1001418B4();
  sub_100025FBC();
  sub_100118854();
  return v0();
}

uint64_t EventLoopFuture._value.setter()
{
  sub_1001413B4();
  sub_1000578C0();
  sub_1001413B4();
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  sub_1001418B4();
  sub_100025FBC();
  sub_10014179C();
  v0();
  return swift_endAccess();
}

uint64_t (*EventLoopFuture._value.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t EventLoopFuture.eventLoop.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t EventLoopFuture._callbacks.getter()
{
  sub_10002FC68();
  sub_10006FF20();
  uint64_t v0 = sub_100141A10();
  sub_10003C360(v0);
  swift_bridgeObjectRetain();
  return sub_100141A10();
}

uint64_t EventLoopFuture._callbacks.setter()
{
  sub_1001411C4();
  sub_10002FC68();
  uint64_t v5 = (uint64_t *)(v1 + *(void *)(v4 + 104));
  sub_100141040();
  uint64_t v6 = *v5;
  *uint64_t v5 = v3;
  v5[1] = v2;
  v5[2] = v0;
  sub_10003C350(v6);
  return swift_bridgeObjectRelease();
}

uint64_t (*EventLoopFuture._callbacks.modify())()
{
  return j__swift_endAccess;
}

uint64_t EventLoopFuture.__allocating_init(_eventLoop:value:file:line:)()
{
  sub_1001411C4();
  uint64_t v0 = swift_allocObject();
  EventLoopFuture.init(_eventLoop:value:file:line:)();
  return v0;
}

uint64_t EventLoopFuture.init(_eventLoop:value:file:line:)()
{
  sub_10007A8B8();
  uint64_t v2 = (void *)(v0 + *(void *)(v1 + 96));
  *uint64_t v2 = v3;
  v2[1] = v4;
  sub_10002FC68();
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  sub_1001418B4();
  sub_100025FBC();
  sub_100141778();
  v5();
  uint64_t v6 = (void *)(v0 + *(void *)(*(void *)v0 + 104));
  v6[1] = 0;
  _OWORD v6[2] = 0;
  *uint64_t v6 = 0;
  return v0;
}

uint64_t _NIOEventLoopFutureIdentifier.init<A>(_:)(uint64_t a1)
{
  return a1 ^ 0xBF15CA5DLL;
}

void EventLoopFuture.__allocating_init(eventLoop:value:file:line:)()
{
  sub_10003C984();
  v7[1] = v0;
  sub_10001B028(&qword_100309768);
  uint64_t v1 = sub_10024FCF0();
  sub_10024F030();
  sub_10007A8E8();
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)v7 - v4;
  sub_10007A8C4();
  sub_100141778();
  v6();
  swift_storeEnumTagMultiPayload();
  sub_1000195B4((uint64_t)v5, 0, 1, v1);
  sub_1001418E4();
  EventLoopFuture.__allocating_init(_eventLoop:value:file:line:)();
  sub_10003C8C8();
}

void EventLoopFuture.__allocating_init(eventLoop:error:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10003C984();
  a19 = v21;
  a20 = v22;
  sub_10014140C();
  sub_10001B028(&qword_100309768);
  uint64_t v23 = sub_10024FCF0();
  sub_10024F030();
  sub_10007A8E8();
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&a9 - v26;
  *(uint64_t *)((char *)&a9 - v26) = v20;
  swift_storeEnumTagMultiPayload();
  sub_1000195B4((uint64_t)v27, 0, 1, v23);
  sub_1001419F0();
  sub_10003C8C8();
}

uint64_t EventLoopFuture.deinit()
{
  sub_10007A8B8();
  uint64_t v2 = v0 + *(void *)(v1 + 88);
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  sub_1001418B4();
  sub_100025FBC();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  swift_unknownObjectRelease();
  sub_10002FC68();
  sub_10003C350(*(void *)(v0 + *(void *)(v4 + 104)));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventLoopFuture.__deallocating_deinit()
{
  EventLoopFuture.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100127364(void *a1, void *a2)
{
  return static _NIOEventLoopFutureIdentifier.__derived_struct_equals(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_100127388(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = swift_beginAccess();
  int v7 = *(unsigned __int8 *)(a1 + 24);
  if (v7 != 255)
  {
    if (v7)
    {
      uint64_t v14 = *(void *)(a1 + 16);
      swift_errorRetain();
      uint64_t v13 = sub_1001FB400(v14, 1);
      sub_10013F4F8(v14, v7);
    }
    else
    {
      uint64_t v8 = a3(v6);
      uint64_t v9 = *(void *)(v8 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v9) = v11(ObjectType, v9);
      swift_unknownObjectRelease();
      if ((v9 & 1) == 0)
      {
        sub_100031E30(a2);
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      uint64_t v12 = swift_retain();
      uint64_t v13 = sub_100129244(v12, a2, v8);
      swift_release();
    }
    swift_release();
    return v13;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100127504(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_beginAccess();
  int v8 = *(unsigned __int8 *)(a1 + 24);
  if (v8 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v8)
    {
      uint64_t v15 = *(void *)(a1 + 16);
      swift_errorRetain();
      uint64_t v14 = sub_1001FB400(v15, 1);
      sub_10013F4F8(v15, v8);
    }
    else
    {
      uint64_t v9 = a2(result);
      uint64_t v10 = *(void *)(v9 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v10) = v12(ObjectType, v10);
      swift_unknownObjectRelease();
      if (v10)
      {
        swift_retain();
        uint64_t v13 = swift_retain();
        uint64_t v14 = sub_100129244(v13, a4, v9);
        swift_release();
      }
      else
      {
        sub_100031E30(a4);
        swift_release();
        return 0;
      }
    }
    return v14;
  }
  return result;
}

uint64_t sub_100127660(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_errorRetain();
      uint64_t v10 = sub_1001FB400(v6, 1);
    }
    else
    {
      uint64_t v7 = *(void *)(v6 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
      sub_10013F9F0(v6, v5);
      sub_10013F9F0(v6, v5);
      swift_unknownObjectRetain();
      LOBYTE(v7) = v9(ObjectType, v7);
      swift_unknownObjectRelease();
      if (v7)
      {
        sub_10013F9F0(v6, v5);
        swift_retain();
        uint64_t v10 = sub_1001290A4(v6, a2, v6);
        sub_10013F9B0(v6, v5);
      }
      else
      {
        sub_100031E30(a2);
        sub_10013F9B0(v6, v5);
        uint64_t v10 = 0;
      }
    }
    sub_10013F9B0(v6, v5);
    return v10;
  }
  return result;
}

uint64_t sub_1001277D0(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_beginAccess();
  int v8 = *(unsigned __int8 *)(a1 + 24);
  if (v8 != 255)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (v8)
    {
      swift_errorRetain();
      uint64_t v15 = sub_1001FB400(v9, 1);
    }
    else
    {
      uint64_t v16 = v9;
      swift_retain();
      uint64_t v10 = a2(&v16);
      uint64_t v11 = *(void *)(v10 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v11) = v13(ObjectType, v11);
      swift_unknownObjectRelease();
      if ((v11 & 1) == 0)
      {
        sub_100031E30(a4);
        swift_release();
        sub_10013F9B0(v9, v8);
        return 0;
      }
      swift_retain();
      uint64_t v14 = swift_retain();
      uint64_t v15 = sub_1001290A4(v14, a4, v10);
      swift_release();
    }
    sub_10013F9B0(v9, v8);
    return v15;
  }
  __break(1u);
  return result;
}

void sub_100127950(uint64_t a1, uint64_t a2)
{
  sub_10006FF20();
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v4)
    {
      swift_errorRetain();
      sub_1001FB63C(v5, 0, 1);
    }
    else
    {
      uint64_t v6 = *(void *)(v5 + 48);
      uint64_t ObjectType = swift_getObjectType();
      int v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
      sub_10013F9F0(v5, v4);
      sub_10013F9F0(v5, v4);
      swift_unknownObjectRetain();
      LOBYTE(v6) = v8(ObjectType, v6);
      swift_unknownObjectRelease();
      if (v6)
      {
        sub_10013F9F0(v5, v4);
        swift_retain();
        sub_10012C460(v5, a2, v5);
        uint64_t v9 = sub_1001415F8();
        sub_10013F9B0(v9, v10);
      }
      else
      {
        sub_100031F18(a2);
        sub_10013F9B0(v5, v4);
      }
    }
    sub_10013F9B0(v5, v4);
    sub_100141B38();
  }
}

uint64_t sub_100127AA8(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_beginAccess();
  int v8 = *(unsigned __int8 *)(a1 + 24);
  if (v8 != 255)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (v8)
    {
      swift_errorRetain();
      uint64_t v15 = sub_1001FB63C(v9, 0, 1);
    }
    else
    {
      uint64_t v16 = v9;
      swift_retain();
      uint64_t v10 = a2(&v16);
      uint64_t v11 = *(void *)(v10 + 48);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v11) = v13(ObjectType, v11);
      swift_unknownObjectRelease();
      if ((v11 & 1) == 0)
      {
        sub_100031F18(a4);
        swift_release();
        sub_10013F9B0(v9, v8);
        return 0;
      }
      swift_retain();
      uint64_t v14 = swift_retain();
      uint64_t v15 = sub_10012C460(v14, a4, v10);
      swift_release();
    }
    sub_10013F9B0(v9, v8);
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100127C2C(uint64_t *a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  v32[1] = a3;
  uint64_t v33 = a2;
  uint64_t v5 = *a1;
  sub_10001B028(&qword_100309768);
  uint64_t v6 = sub_10024FCF0();
  v32[0] = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (void *)((char *)v32 - v9);
  uint64_t v11 = *(void *)(v5 + 80);
  uint64_t v34 = *(void *)(v11 - 8);
  __chkstk_darwin(v8, v12);
  uint64_t v14 = (char *)v32 - v13;
  uint64_t v15 = sub_10024FCF0();
  uint64_t v16 = sub_10024F030();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (void *)((char *)v32 - v19);
  uint64_t v21 = (char *)a1 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v20, v21, v16);
  uint64_t result = sub_10001FA0C((uint64_t)v20, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v10 = *v20;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      EventLoopPromise._setValue(value:)();
      uint64_t v24 = v23;
      swift_errorRelease();
      (*(void (**)(void *, uint64_t))(v32[0] + 8))(v10, v6);
    }
    else
    {
      uint64_t v25 = v34;
      (*(void (**)(char *, void *, uint64_t))(v34 + 32))(v14, v20, v11);
      uint64_t v26 = v33(v14);
      uint64_t v27 = *(void *)(v26 + *(void *)(*(void *)v26 + 96) + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v27) = v29(ObjectType, v27);
      swift_unknownObjectRelease();
      if (v27)
      {
        uint64_t v30 = (void *)swift_allocObject();
        v30[2] = v11;
        v30[3] = v35;
        v30[4] = v26;
        swift_retain();
        swift_retain();
        EventLoopFuture._addCallback(_:)();
        uint64_t v24 = v31;
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v11);
      }
      else
      {
        EventLoopFuture.cascade(to:)(v35);
        swift_release();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v11);
        return 0;
      }
    }
    return v24;
  }
  return result;
}

void sub_100128060(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + 16);
  sub_10006FF20();
  int v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *v3;
    sub_10004F084(v5, v4 & 1);
    sub_1001FB400(v5, v4 & 1);
    uint64_t v6 = sub_1001415F8();
    sub_10013F4F8(v6, v7);
    sub_100141B38();
  }
}

uint64_t sub_1001280EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_10001B028(&qword_100309768);
  uint64_t v4 = sub_10024FCF0();
  uint64_t v5 = sub_10024F030();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = (char *)a2 + *(void *)(v3 + 88);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v10, v5);
  uint64_t result = sub_10001FA0C((uint64_t)v9, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    EventLoopPromise._setValue(value:)();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v9, v4);
    return v13;
  }
  return result;
}

uint64_t sub_1001282A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_8:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 24);
  if (v12 != 255)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    if (v12)
    {
      sub_10013F4E0(v13, v12);
      a3(v13);
    }
    sub_10013F4F8(v13, v12);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100128440(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  int v13 = *(unsigned __int8 *)(a4 + 24);
  uint64_t v14 = v12;
  char v15 = v13;
  if (v13 != 255)
  {
    swift_retain();
    swift_retain();
    sub_10013F4E0(v12, v13);
    a2(&v14);
    sub_10003C3F0(v14, v15);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001285D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a2;
  uint64_t v12[3] = a3;
  v12[4] = a4;
  void v12[5] = a5;
  v12[6] = a6;
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v13);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v15 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = sub_100136878(a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t))sub_1001FB5B8, (void (*)(uint64_t, void))sub_1001407C0);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1001287D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v13 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v13 = sub_1001360D4(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1001FB5B8, (void (*)(uint64_t, uint64_t))sub_1001407CC, (void (*)(uint64_t, void))sub_1001407C0);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_1001289BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a2;
  uint64_t v12[3] = a3;
  v12[4] = a4;
  void v12[5] = a5;
  v12[6] = a6;
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v13);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v15 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = sub_100136878(a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t))sub_1001FB58C, (void (*)(uint64_t, void))sub_10003C3F0);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_100128BBC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_6:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 24);
  if (v12 != 255)
  {
    swift_retain();
    uint64_t v13 = swift_retain();
    if ((v12 & 1) == 0) {
      a3(v13);
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100128D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a2;
  uint64_t v11[3] = sub_1001408E8;
  v11[4] = v10;
  v11[5] = a3;
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v12);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v14 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_100127388(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_100128F10(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v13 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v13 = sub_100127504(a2, a3, a4, a5);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_1001290A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v12 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(a3 + 24);
  if (v10 != 255)
  {
    uint64_t v11 = *(void *)(a3 + 16);
    swift_retain();
    swift_retain();
    sub_10013F4E0(v11, v10);
    uint64_t v12 = sub_1001FB400(v11, v10 & 1);
    sub_10013F4F8(v11, v10);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100129244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v12 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(a3 + 24);
  if (v10 != 255)
  {
    uint64_t v11 = *(void *)(a3 + 16);
    swift_retain();
    swift_retain();
    sub_10013F4E0(v11, v10);
    uint64_t v12 = sub_1001FB400(v11, v10 & 1);
    sub_10013F4F8(v11, v10);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

void sub_1001293E4()
{
  sub_100140EE0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = (void *)sub_1000AC8E4();
  _OWORD v6[2] = v3;
  v6[3] = v1;
  v6[4] = sub_100081F90;
  v6[5] = 0;
  uint64_t v7 = *(void *)(v5 + 40);
  swift_getObjectType();
  sub_1001413FC();
  EventLoop.assertInEventLoop(file:line:)(v8, v9, v10, v11, v12, v7);
  sub_10006FF20();
  if (*(unsigned __int8 *)(v5 + 24) == 255)
  {
    sub_1000578C0();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
LABEL_8:
    swift_release();
    sub_100141A10();
    sub_1000B7AD8();
    return;
  }
  sub_10006FF20();
  int v13 = *(unsigned __int8 *)(v3 + 24);
  if (v13 != 255)
  {
    uint64_t v14 = *(void *)(v3 + 16);
    swift_retain();
    swift_retain();
    if (v13)
    {
      sub_10013F4E0(v14, v13);
      sub_100081F90();
      sub_1001FB400(0, 0);
      sub_1001415B0();
    }
    else
    {
      sub_1001FB400(v14, 0);
    }
    swift_release();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1001295C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr), uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v21 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v14 = *(unsigned __int8 *)(a3 + 24);
  if (v14 != 255)
  {
    uint64_t v15 = *(void *)(a3 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10013F4E0(v15, v14);
    uint64_t v16 = sub_10012138C(a4, a5, v15, v14 & 1);
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    sub_10013F4F8(v15, v14);
    uint64_t v21 = sub_1001FB63C(v16, v18, v20);
    sub_10003C23C(v16, v18, v20);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001297C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_1001375D8();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_100129954(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a2;
  uint64_t v11[3] = sub_100140884;
  v11[4] = v10;
  v11[5] = a3;
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v12);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v17 = 0;
LABEL_8:
    swift_release();
    swift_release();
    swift_release();
    return v17;
  }
  swift_beginAccess();
  int v14 = *(unsigned __int8 *)(a2 + 24);
  if (v14 != 255)
  {
    uint64_t v15 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v14)
    {
      sub_10013F4E0(v15, v14);
      uint64_t v17 = sub_1001FB400(v15, 1);
      sub_10013F4F8(v15, v14);
    }
    else
    {
      uint64_t v16 = swift_retain();
      a4(v16);
      uint64_t v17 = sub_1001FB400(0, 0);
      swift_release();
    }
    swift_release();
    swift_release();
    goto LABEL_8;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  __break(1u);
  return result;
}

uint64_t sub_100129C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F1CC;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_100134DB0(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release_n();
  swift_release();
  return v11;
}

uint64_t sub_100129DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F258;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_100134EB4(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release_n();
  swift_release();
  return v11;
}

uint64_t sub_100129F80(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *__return_ptr, void *), uint64_t a5)
{
  void (*v27)(uint64_t *__return_ptr, void *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void v31[2];
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  __int16 v38;
  char v39;
  uint64_t v40;

  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 79) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v13 = 0;
LABEL_8:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v13;
  }
  uint64_t v27 = a4;
  uint64_t result = swift_beginAccess();
  unint64_t v15 = a3[9];
  if (HIBYTE(v15) != 255)
  {
    uint64_t v17 = a3[2];
    uint64_t v16 = a3[3];
    uint64_t v18 = a3[4];
    uint64_t v19 = a3[5];
    uint64_t v20 = a3[6];
    uint64_t v21 = a3[7];
    uint64_t v29 = v20;
    uint64_t v30 = v15 & 0x100000000000000;
    uint64_t v22 = a3[8];
    if ((v15 & 0x100000000000000) != 0)
    {
      uint64_t v23 = a3[8];
      uint64_t v28 = a3[4];
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10013EFA8(v17, v16, v28, v19, v29, v21, v23, v15);
    }
    else
    {
      v31[0] = a3[2];
      v31[1] = v16;
      uint64_t v32 = v18;
      uint64_t v33 = v19;
      uint64_t v34 = v20;
      uint64_t v26 = v21;
      uint64_t v35 = v21;
      uint64_t v36 = v22;
      uint64_t v37 = v15;
      unint64_t v39 = BYTE6(v15);
      uint64_t v38 = WORD2(v15);
      uint64_t v24 = v22;
      uint64_t v25 = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10013EFA8(v17, v16, v25, v19, v20, v26, v24, v15);
      v27(&v40, v31);
      sub_10013F080(v17, v16, v25, v19, v20, v26, v24, v15);
      uint64_t v17 = v40;
    }
    uint64_t v13 = sub_1001FB400(v17, SHIBYTE(v30));
    sub_10003C3F0(v17, v30 != 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012A24C(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v3);
  uint64_t v5 = swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 79) != 255) {
    return a1(v5);
  }
  swift_beginAccess();
  CallbackList.append(_:)();
  swift_endAccess();
  return 0;
}

uint64_t sub_10012A324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = sub_100140908;
  v6[4] = 0;
  v6[5] = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v9 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    uint64_t v9 = sub_100127660(a2, a3);
    swift_release();
    swift_release();
  }
  swift_release();
  return v9;
}

uint64_t sub_10012A498(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_7:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 24);
  if (v12 != 255)
  {
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_10013F9F0(v13, v12);
      a3(v13);
      sub_10013F9B0(v13, v12);
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012A63C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_7:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 24);
  if (v12 != 255)
  {
    if (v12)
    {
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 16);
      uint64_t v13 = v14;
      swift_retain();
      swift_retain();
      sub_10013F9F0(v14, v12);
      a3(&v14);
      sub_10013F9B0(v13, v12);
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012A7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  uint64_t v26 = a5;
  *(void *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a8;
  *(void *)(v18 + 56) = a9;
  *(unsigned char *)(v18 + 64) = a10;
  uint64_t v19 = v18;
  *(void *)(v18 + 72) = a11;
  *(void *)(v18 + 80) = a12;
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[2] = a2;
  v20[3] = a3;
  v20[4] = sub_10013FFCC;
  void v20[5] = v19;
  uint64_t v21 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v21);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v23 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v23 = sub_10013322C(a2, a3, a4, v26, a6, a7, a8, a9, a10, a11, a12);
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_10012AAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v13 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(a3 + 32);
  if (v10 != 255)
  {
    uint64_t v12 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)(a3 + 24);
    swift_retain();
    swift_retain();
    sub_10013FF1C(v12, v11, v10);
    uint64_t v13 = sub_1001FB560(v12, v11, v10 & 1);
    sub_10013FF34(v12, v11, v10);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012ACAC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = *(void *)(a4 + 24);
  int v14 = *(unsigned __int8 *)(a4 + 32);
  uint64_t v15 = v12;
  uint64_t v16 = v13;
  char v17 = v14;
  if (v14 != 255)
  {
    swift_retain();
    swift_retain();
    sub_10013FF1C(v12, v13, v14);
    a2(&v15);
    sub_10003C378(v15, v16, v17);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012AE44(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_7:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 32);
  if (v12 != 255)
  {
    if (v12)
    {
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 24);
      v15[0] = *(void *)(a2 + 16);
      uint64_t v13 = v15[0];
      v15[1] = v14;
      swift_retain();
      swift_retain();
      sub_10013FF1C(v15[0], v14, v12);
      a3(v15);
      sub_10013FF34(v13, v14, v12);
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012AFF4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t *), uint64_t a5)
{
  int v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 25) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v13 = 0;
LABEL_8:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v13;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(unsigned __int16 *)(a3 + 24);
  if (v15 >> 8 <= 0xFE)
  {
    uint64_t v16 = *(void *)(a3 + 16);
    int v17 = v15 & 0x100;
    if ((v15 & 0x100) != 0)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1001401A0(v16, v15);
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v21 = *(void *)(a3 + 16);
      char v22 = v15;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1001401A0(v16, v15);
      a4(v20, &v21);
      int v17 = v15 & 0x100;
      sub_1001401C4(v16, v15);
      uint64_t v16 = v20[0];
      uint64_t v18 = v20[1];
    }
    char v19 = v17 != 0;
    uint64_t v13 = sub_1001FB560(v16, v18, SBYTE1(v17));
    sub_10003C378(v16, v18, v19);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012B238(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v3);
  uint64_t v5 = swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 25) != 255) {
    return a1(v5);
  }
  swift_beginAccess();
  CallbackList.append(_:)();
  swift_endAccess();
  return 0;
}

uint64_t sub_10012B310(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr), uint64_t a5)
{
  int v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v19 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v14 = *(unsigned __int8 *)(a3 + 24);
  if (v14 != 255)
  {
    uint64_t v15 = *(void *)(a3 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10013F4E0(v15, v14);
    uint64_t v16 = sub_100121334(a4, a5, v15, v14 & 1);
    char v18 = v17 & 1;
    sub_10013F4F8(v15, v14);
    uint64_t v19 = sub_1001FB400(v16, v18);
    sub_10003C3F0(v16, v18);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012B504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v13 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v13 = sub_1001360D4(a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1001FB58C, (void (*)(uint64_t, uint64_t))sub_1001407CC, (void (*)(uint64_t, void))sub_10003C3F0);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_10012B6EC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  int v13 = *(unsigned __int8 *)(a4 + 24);
  uint64_t v14 = v12;
  char v15 = v13;
  if (v13 != 255)
  {
    swift_retain();
    swift_retain();
    sub_10013F4E0(v12, v13);
    a2(&v14);
    sub_10003C3F0(v14, v15);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012B880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_1001375D8();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_10012BA0C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  int v13 = *(unsigned __int8 *)(a4 + 24);
  uint64_t v14 = v12;
  char v15 = v13;
  if (v13 != 255)
  {
    swift_retain();
    swift_retain();
    sub_10013F9F0(v12, v13);
    a2(&v14);
    sub_100140560(v14, v15, (uint64_t (*)(void))&_swift_release);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012BBB4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  int v13 = *(unsigned __int8 *)(a4 + 24);
  uint64_t v14 = v12;
  char v15 = v13;
  if (v13 != 255)
  {
    swift_retain();
    swift_retain();
    sub_10013F9F0(v12, v13);
    a2(&v14);
    sub_100140560(v14, v15, (uint64_t (*)(void))&_swift_release);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012BD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = sub_100164D84;
  v6[4] = 0;
  v6[5] = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v10 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_100127950(a2, a3);
    uint64_t v10 = v9;
    swift_release();
    swift_release();
  }
  swift_release();
  return v10;
}

uint64_t sub_10012BED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = sub_10013F7A0;
  v6[4] = 0;
  v6[5] = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v10 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_100127950(a2, a3);
    uint64_t v10 = v9;
    swift_release();
    swift_release();
  }
  swift_release();
  return v10;
}

uint64_t sub_10012C044(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = *(void *)(a4 + 24);
  int v14 = *(unsigned __int8 *)(a4 + 32);
  uint64_t v15 = v12;
  uint64_t v16 = v13;
  char v17 = v14;
  if (v14 != 255)
  {
    swift_retain();
    swift_retain();
    sub_10013F2B4(v12, v13, v14);
    a2(&v15);
    sub_10003C23C(v15, v16, v17);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012C1DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = a4;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = sub_1001408F0;
  v9[5] = v8;
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v10);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    uint64_t v15 = 0;
LABEL_8:
    swift_release();
    swift_release();
    swift_release();
    return v15;
  }
  swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 32);
  if (v12 != 255)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10013F2B4(v13, v14, v12);
    if (v12)
    {
      sub_100028D58(a4);
      swift_willThrow();
      sub_1000B6AE4(v13, v14, 1);
      uint64_t v15 = sub_1001FB63C(v13, v14, 1);
      sub_10013F2CC(v13, v14, v12);
    }
    else
    {
      uint64_t v15 = sub_1001FB63C(v13, v14, 0);
    }
    sub_10013F2CC(v13, v14, v12);
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_10012C460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v13 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(a3 + 32);
  if (v10 != 255)
  {
    uint64_t v12 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)(a3 + 24);
    swift_retain();
    swift_retain();
    sub_10013F2B4(v12, v11, v10);
    uint64_t v13 = sub_1001FB63C(v12, v11, v10 & 1);
    sub_10013F2CC(v12, v11, v10);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012C614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_10013750C(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_10012C7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F97C;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_100133640(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release_n();
  swift_release();
  return v11;
}

uint64_t sub_10012C948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a4;
  uint64_t v12[3] = a5;
  v12[4] = a6;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  void v13[3] = a3;
  v13[4] = sub_10014080C;
  unsigned char v13[5] = v12;
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v14);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v16 = 0;
  }
  else
  {
    swift_retain_n();
    swift_unknownObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_100133848(a2, a3, a4, a5, a6);
    swift_release();
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_10012CB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F97C;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_100133640(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release_n();
  swift_release();
  return v11;
}

uint64_t sub_10012CCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a2;
  uint64_t v11[3] = a3;
  v11[4] = sub_1001408E4;
  v11[5] = v10;
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v12);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v14 = 0;
  }
  else
  {
    swift_unknownObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_100133A6C(a2, a3, a4, a5);
    swift_release();
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_10012CEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F7CC;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v11 = 0;
  }
  else
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_100133C60(a2, a3, a4);
    swift_release();
    swift_release();
  }
  swift_release_n();
  swift_release();
  return v11;
}

uint64_t sub_10012D088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v7);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v13 = 0;
    goto LABEL_5;
  }
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(a3 + 32);
  if (v10 != 255)
  {
    uint64_t v12 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)(a3 + 24);
    swift_retain();
    swift_retain();
    sub_10013F2B4(v12, v11, v10);
    uint64_t v13 = sub_1001FB63C(v12, v11, v10 & 1);
    sub_10013F2CC(v12, v11, v10);
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012D23C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_7:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  int v12 = *(unsigned __int8 *)(a2 + 32);
  if (v12 != 255)
  {
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      sub_10013F2B4(v13, v14, v12);
      a3(v13);
      sub_10013F2CC(v13, v14, v12);
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012D3E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8 = (void *)sub_1001188D4();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  swift_getObjectType();
  sub_1001413FC();
  EventLoop.assertInEventLoop(file:line:)(v10, v11, v12, v13, v14, v9);
  sub_10006FF20();
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    sub_1000578C0();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_7:
    swift_release();
    swift_release();
    swift_release();
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  uint64_t result = sub_10006FF20();
  int v16 = *(unsigned __int8 *)(a2 + 32);
  if (v16 != 255)
  {
    if (v16)
    {
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 24);
      v19[0] = *(void *)(a2 + 16);
      uint64_t v17 = v19[0];
      v19[1] = v18;
      swift_retain();
      swift_retain();
      sub_10013F2B4(v19[0], v18, v16);
      a3(v19);
      sub_10013F2CC(v17, v18, v16);
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012D568()
{
  sub_1000ACEB8();
  uint64_t ObjectType = swift_getObjectType();
  sub_100141954((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v3, v4, v5, ObjectType);
  sub_10006FF20();
  if (*(unsigned __int8 *)(v0 + 32) == 255)
  {
    sub_1000578C0();
    CallbackList.append(_:)();
    swift_endAccess();
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  else
  {
    sub_100141B04();
    return v1();
  }
}

uint64_t sub_10012D610(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void *a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v9);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 39) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
LABEL_5:
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v12 = a4[2];
  uint64_t v13 = a4[3];
  unint64_t v14 = a4[4];
  uint64_t v15 = v12;
  uint64_t v16 = v13;
  unint64_t v17 = v14;
  if (HIBYTE(v14) != 255)
  {
    swift_retain();
    swift_retain();
    sub_10014049C(v12, v13, v14);
    a2(&v15);
    sub_1000B7264(v15, v16, v17 | ((unint64_t)(WORD2(v17) | (BYTE6(v17) << 16)) << 32), SHIBYTE(v17));
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012D7C0(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v3);
  uint64_t v5 = swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 39) != 255) {
    return a1(v5);
  }
  swift_beginAccess();
  CallbackList.append(_:)();
  swift_endAccess();
  return 0;
}

uint64_t sub_10012D898(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *), uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  void v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, ObjectType, v11);
  swift_beginAccess();
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_retain();
    CallbackList.append(_:)();
    swift_endAccess();
    uint64_t v16 = 0;
LABEL_8:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v16;
  }
  uint64_t result = swift_beginAccess();
  int v14 = *(unsigned __int8 *)(a3 + 24);
  if (v14 != 255)
  {
    uint64_t v15 = *(void *)(a3 + 16);
    if (v14)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10013F200(v15, v14);
    }
    else
    {
      uint64_t v17 = *(void *)(a3 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10013F200(v15, v14);
      a4(&v18, &v17);
      sub_10013F218(v15, v14);
      uint64_t v15 = v18;
    }
    uint64_t v16 = sub_1001FB400(v15, v14 & 1);
    sub_10003C3F0(v15, v14 & 1);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012DAB8()
{
  sub_1000ACEB8();
  uint64_t ObjectType = swift_getObjectType();
  sub_100141954((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v3, v4, v5, ObjectType);
  sub_10006FF20();
  if (*(unsigned __int8 *)(v0 + 24) == 255)
  {
    sub_1000578C0();
    CallbackList.append(_:)();
    swift_endAccess();
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  else
  {
    sub_100141B04();
    return v1();
  }
}

void EventLoopFuture._addCallback(_:)()
{
  sub_10003C984();
  uint64_t v3 = v0;
  sub_1000ACEB8();
  uint64_t v4 = *v0;
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  uint64_t v5 = sub_10014157C();
  sub_10002F9C8();
  uint64_t v7 = v6;
  sub_10007A8E8();
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = *(void *)((char *)v3 + *(void *)(v4 + 96) + 8);
  swift_getObjectType();
  sub_1001413FC();
  EventLoop.assertInEventLoop(file:line:)(v13, v14, v15, v16, v17, v12);
  sub_10006FF20();
  sub_1001418F0();
  sub_1000ACAD0();
  v18();
  LODWORD(v4) = sub_10001FA0C((uint64_t)v11, 1, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v5);
  if (v4 == 1)
  {
    sub_1000578C0();
    CallbackList.append(_:)();
    swift_endAccess();
    _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  else
  {
    sub_100141B04();
    v1();
  }
  sub_10003C8C8();
}

uint64_t sub_10012DD14()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_1001282A0(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013FE54;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10012DE30()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_100128440(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_1001408C8;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

#error "10012DFD8: call analysis failed (funcsize=92)"

#error "10012E170: call analysis failed (funcsize=100)"

#error "10012E310: call analysis failed (funcsize=100)"

uint64_t sub_10012E40C()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_100128BBC(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013FE6C;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10012E528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t v20 = a4;
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a2;
  uint64_t v11[3] = sub_100140664;
  v11[4] = v10;
  v11[5] = a3;
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v21 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = a3;
  uint64_t v15 = ObjectType;
  swift_retain();
  if (v14(ObjectType, v12))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_100128D2C(v21, a2, v22, v20, a5);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v21;
    v17[3] = sub_1001407E0;
    v17[4] = v11;
    uint64_t v18 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 24);
    swift_retain();
    swift_retain();
    v18(sub_1001408A4, v17, v15, v12);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10012E770()
{
  sub_1000B7690();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_100140B48();
  uint64_t v7 = (void *)sub_1000AC8E4();
  void v7[2] = v1;
  v7[3] = v0;
  uint64_t v15 = v0;
  v7[4] = v6;
  v7[5] = v4;
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v10(ObjectType, v8))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100128F10(v2, v1, v15, v6, v4);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)sub_1001188D4();
    void v11[2] = v2;
    uint64_t v11[3] = sub_10013F37C;
    v11[4] = v7;
    uint64_t v12 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v8 + 24);
    swift_retain();
    swift_retain();
    v12(sub_1001408A4, v11, ObjectType, v8);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_10012E904()
{
  void (*v6)(uint64_t *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;

  sub_1000B7690();
  sub_100140B04();
  uint64_t v2 = (void *)sub_1000AC8E4();
  sub_100140B9C(v2);
  sub_100140CD4();
  swift_retain();
  swift_retain();
  sub_100140CF4();
  if (v1())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v3 = sub_100140AC8();
    sub_1001295C8(v3, v4, v5, v6, v7);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_1001188D4();
    *(void *)(v8 + 16) = v0;
    *(void *)(v8 + 24) = sub_10013F8D8;
    sub_100140AE0(v8);
    swift_retain();
    sub_100140A50();
    v9();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_10012EA24()
{
  sub_1000B7690();
  sub_100140B48();
  uint64_t v3 = (void *)sub_1001188D4();
  sub_1001416B8(v3);
  sub_100141020();
  swift_retain();
  swift_retain();
  sub_100140A6C();
  if (v2())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v4 = sub_100141098();
    sub_1001297C8(v4, v5, v6, v7);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (void *)sub_1001188D4();
    v8[2] = v1;
    v8[3] = sub_10013F460;
    v8[4] = v0;
    sub_100140BE8();
    swift_retain();
    sub_100140C34();
    v9();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_10012EB60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t v20 = a4;
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a2;
  uint64_t v11[3] = sub_10013F338;
  v11[4] = v10;
  v11[5] = a3;
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v21 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = a3;
  uint64_t v15 = ObjectType;
  swift_retain();
  if (v14(ObjectType, v12))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_100129954(v21, a2, v22, v20, a5);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v21;
    v17[3] = sub_10013F364;
    v17[4] = v11;
    uint64_t v18 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 24);
    swift_retain();
    swift_retain();
    v18(sub_1001408A4, v17, v15, v12);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10012EDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F1CC;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  if (v11(ObjectType, v9))
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v12 = sub_100129C30(a1, a2, a3, a4);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v12);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a1;
    void v13[3] = sub_10013F1D4;
    v13[4] = v8;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v9 + 24);
    swift_retain();
    swift_retain();
    v15(sub_1001408A4, v13, ObjectType, v9);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release_n();
  return swift_release();
}

uint64_t sub_10012EFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F258;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  if (v11(ObjectType, v9))
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v12 = sub_100129DD8(a1, a2, a3, a4);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v12);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a1;
    void v13[3] = sub_1001407D4;
    v13[4] = v8;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v9 + 24);
    swift_retain();
    swift_retain();
    v15(sub_1001408A4, v13, ObjectType, v9);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release_n();
  return swift_release();
}

uint64_t sub_10012F1A8()
{
  void (*v10)(uint64_t *__return_ptr, void *);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;

  sub_1000B7690();
  sub_100140B04();
  uint64_t v6 = (void *)sub_1000AC8E4();
  _OWORD v6[2] = v3;
  v6[3] = v0;
  v6[4] = v1;
  v6[5] = v2;
  swift_getObjectType();
  sub_100140CD4();
  swift_retain();
  swift_retain();
  sub_100140CF4();
  if (v5())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = sub_100140AC8();
    sub_100129F80(v7, v8, v9, v10, v11);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = sub_1001188D4();
    *(void *)(v12 + 16) = v4;
    *(void *)(v12 + 24) = sub_10013EF60;
    sub_100140AE0(v12);
    swift_retain();
    sub_100140A50();
    v13();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_10012F2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = sub_100140908;
  v6[4] = 0;
  v6[5] = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  swift_retain();
  if (v9(ObjectType, v7))
  {
    swift_retain();
    swift_retain();
    uint64_t v10 = sub_10012A324(a1, a2, a3);
    CallbackList._run()();
    sub_10003C350(v10);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = a1;
    uint64_t v11[3] = sub_10013F3BC;
    v11[4] = v6;
    uint64_t v12 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v7 + 24);
    swift_retain();
    swift_retain();
    v12(sub_1001408A4, v11, ObjectType, v7);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_10012F490()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_10012A63C(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013F720;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10012F5AC()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_10012A498(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013F708;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10012F6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a6;
  *(void *)(v17 + 40) = a7;
  *(void *)(v17 + 48) = a8;
  *(void *)(v17 + 56) = a9;
  *(unsigned char *)(v17 + 64) = a10;
  *(void *)(v17 + 72) = a11;
  *(void *)(v17 + 80) = a12;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  void v18[3] = a3;
  v18[4] = sub_10013FFCC;
  void v18[5] = v17;
  uint64_t v27 = v18;
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v26(ObjectType, v19))
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v21 = sub_10012A7E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v21);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a1;
    v22[3] = sub_10013FFD4;
    v22[4] = v27;
    uint64_t v23 = v19;
    uint64_t v24 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v19 + 24);
    swift_retain();
    swift_retain();
    v24(sub_1001408AC, v22, ObjectType, v23);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10012FA30()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140D88(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_10012ACAC(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013FF64;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10012FB4C()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140D88(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_10012AE44(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013FF08;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10012FC68()
{
  void (*v6)(void *__return_ptr, uint64_t *);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;

  sub_1000B7690();
  sub_100140B04();
  uint64_t v2 = (void *)sub_1000AC8E4();
  sub_100140B9C(v2);
  sub_100140CD4();
  swift_retain();
  swift_retain();
  sub_100140CF4();
  if (v1())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v3 = sub_100140AC8();
    sub_10012AFF4(v3, v4, v5, v6, v7);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_1001188D4();
    *(void *)(v8 + 16) = v0;
    *(void *)(v8 + 24) = sub_100140158;
    sub_100140AE0(v8);
    swift_retain();
    sub_100140A50();
    v9();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_10012FD88()
{
  void (*v6)(uint64_t *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;

  sub_1000B7690();
  sub_100140B04();
  uint64_t v2 = (void *)sub_1000AC8E4();
  sub_100140B9C(v2);
  sub_100140CD4();
  swift_retain();
  swift_retain();
  sub_100140CF4();
  if (v1())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v3 = sub_100140AC8();
    sub_10012B310(v3, v4, v5, v6, v7);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_1001188D4();
    *(void *)(v8 + 16) = v0;
    *(void *)(v8 + 24) = sub_10013F4CC;
    sub_100140AE0(v8);
    swift_retain();
    sub_100140A50();
    v9();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

#error "10012FF34: call analysis failed (funcsize=92)"

uint64_t sub_100130028()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_10012B6EC(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_1001408C8;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_100130144()
{
  sub_1000B7690();
  sub_100140B48();
  uint64_t v3 = (void *)sub_1001188D4();
  sub_1001416B8(v3);
  sub_100141020();
  swift_retain();
  swift_retain();
  sub_100140A6C();
  if (v2())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v4 = sub_100141098();
    sub_10012B880(v4, v5, v6, v7);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (void *)sub_1001188D4();
    v8[2] = v1;
    v8[3] = sub_1001408B8;
    v8[4] = v0;
    sub_100140BE8();
    swift_retain();
    sub_100140C34();
    v9();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_100130280()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_10012BA0C(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_100140588;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_10013039C()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140C44(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_10012BBB4(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_1001408E0;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_1001304B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = sub_100164D84;
  v6[4] = 0;
  v6[5] = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  swift_retain();
  if (v9(ObjectType, v7))
  {
    swift_retain();
    swift_retain();
    uint64_t v10 = sub_10012BD5C(a1, a2, a3);
    CallbackList._run()();
    sub_10003C350(v10);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = a1;
    uint64_t v11[3] = sub_100140800;
    v11[4] = v6;
    uint64_t v12 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v7 + 24);
    swift_retain();
    swift_retain();
    v12(sub_1001408A4, v11, ObjectType, v7);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_100130668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = sub_10013F7A0;
  v6[4] = 0;
  v6[5] = a3;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  swift_retain();
  if (v9(ObjectType, v7))
  {
    swift_retain();
    swift_retain();
    uint64_t v10 = sub_10012BED0(a1, a2, a3);
    CallbackList._run()();
    sub_10003C350(v10);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = a1;
    uint64_t v11[3] = sub_10013F99C;
    v11[4] = v6;
    uint64_t v12 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v7 + 24);
    swift_retain();
    swift_retain();
    v12(sub_1001408A4, v11, ObjectType, v7);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_100130818()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140D88(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_10012C044(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013F870;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_100130934(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = a4;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = sub_10013F8F8;
  v9[5] = v8;
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v12(ObjectType, v10))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v13 = sub_10012C1DC(a1, a2, a3, a4);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v13);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (void *)swift_allocObject();
    unsigned char v14[2] = a1;
    void v14[3] = sub_10013F918;
    v14[4] = v9;
    uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 24);
    swift_retain();
    swift_retain();
    v16(sub_1001408AC, v14, ObjectType, v10);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_100130B48()
{
  sub_1000B7690();
  uint64_t v5 = v4;
  sub_100140B48();
  uint64_t v6 = (void *)sub_1001188D4();
  _OWORD v6[2] = v1;
  v6[3] = v0;
  v6[4] = v5;
  swift_getObjectType();
  sub_100141020();
  swift_retain();
  swift_retain();
  sub_100140A6C();
  if (v3())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = sub_100141098();
    sub_10012C614(v7, v8, v9, v10);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)sub_1001188D4();
    void v11[2] = v2;
    uint64_t v11[3] = sub_10013F408;
    v11[4] = v6;
    sub_100140BE8();
    swift_retain();
    sub_100140C34();
    v12();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t sub_100130C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F97C;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  if (v11(ObjectType, v9))
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v12 = sub_10012C7A0(a1, a2, a3, a4);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v12);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a1;
    void v13[3] = sub_1001407F4;
    v13[4] = v8;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v9 + 24);
    swift_retain();
    swift_retain();
    v15(sub_1001408AC, v13, ObjectType, v9);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release_n();
  return swift_release();
}

uint64_t sub_100130E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a4;
  uint64_t v12[3] = a5;
  v12[4] = a6;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  void v13[3] = a3;
  v13[4] = sub_10013FA58;
  unsigned char v13[5] = v12;
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v21 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v20(ObjectType, v14))
  {
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = sub_10012C948(a1, a2, a3, a4, a5, a6);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v21;
    v17[3] = sub_1001407F4;
    v17[4] = v13;
    uint64_t v18 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v14 + 24);
    swift_retain();
    swift_retain();
    v18(sub_1001408AC, v17, ObjectType, v14);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100131114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F97C;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  if (v11(ObjectType, v9))
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v12 = sub_10012CB54(a1, a2, a3, a4);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v12);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a1;
    void v13[3] = sub_1001407F4;
    v13[4] = v8;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v9 + 24);
    swift_retain();
    swift_retain();
    v15(sub_1001408AC, v13, ObjectType, v9);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release_n();
  return swift_release();
}

uint64_t sub_100131314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v20 = a5;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a2;
  uint64_t v11[3] = a3;
  v11[4] = sub_10013F968;
  v11[5] = v10;
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  uint64_t v22 = a4;
  uint64_t v15 = a3;
  uint64_t v16 = ObjectType;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v14(v16, v12))
  {
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v17 = sub_10012CCFC(a1, a2, v15, v22, v20);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v17);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a1;
    void v18[3] = sub_1001407F4;
    v18[4] = v11;
    uint64_t v21 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 24);
    swift_retain();
    swift_retain();
    v21(sub_1001408AC, v18, v16, v12);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_10013155C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = sub_10013F7CC;
  v8[5] = a4;
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  if (v11(ObjectType, v9))
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    uint64_t v12 = sub_10012CEE0(a1, a2, a3, a4);
    swift_release();
    CallbackList._run()();
    sub_10003C350(v12);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a1;
    void v13[3] = sub_10013F7D4;
    v13[4] = v8;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v9 + 24);
    swift_retain();
    swift_retain();
    v15(sub_1001408AC, v13, ObjectType, v9);
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release_n();
  return swift_release();
}

uint64_t sub_10013175C()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140D88(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_10012D3E8(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013F26C;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_100131878()
{
  sub_10003C984();
  sub_100140A8C();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  sub_100140D88(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AB4();
    sub_10012D23C(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_10013F2E8;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_100131994()
{
  sub_10003C984();
  sub_100140A78();
  uint64_t v4 = sub_1001188D4();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  sub_100140D88(v4);
  sub_10014098C();
  swift_retain();
  sub_1001409D4();
  if (((uint64_t (*)(void))v3)())
  {
    swift_retain();
    swift_retain();
    uint64_t v5 = sub_100140AA0();
    sub_10012D610(v5, v6, v7, v8);
    sub_1001409A8();
    sub_10014092C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_1001188D4();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = sub_100140440;
    sub_10014090C(v9);
    swift_retain();
    sub_1001409C4();
    v3();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10003C8C8();
  return swift_release();
}

uint64_t sub_100131AB0()
{
  void (*v6)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;

  sub_1000B7690();
  sub_100140B04();
  uint64_t v2 = (void *)sub_1000AC8E4();
  sub_100140B9C(v2);
  sub_100140CD4();
  swift_retain();
  swift_retain();
  sub_100140CF4();
  if (v1())
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v3 = sub_100140AC8();
    sub_10012D898(v3, v4, v5, v6, v7);
    sub_100140B1C();
    sub_1001409F8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_1001188D4();
    *(void *)(v8 + 16) = v0;
    *(void *)(v8 + 24) = sub_10013F1EC;
    sub_100140AE0(v8);
    swift_retain();
    sub_100140A50();
    v9();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000B75A4();
  return swift_release();
}

uint64_t EventLoopFuture._whenComplete(_:)()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_10002FC68();
  uint64_t v6 = *(void *)(v0 + *(void *)(v5 + 96) + 8);
  swift_getObjectType();
  sub_100141330();
  if (v7())
  {
    sub_100141908();
    EventLoopFuture._addCallback(_:)();
    sub_1000B7604();
    sub_1000B75C0();
    sub_10003C780();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = (void *)sub_1001188D4();
    v10[2] = v0;
    void v10[3] = v4;
    v10[4] = v2;
    uint64_t v11 = *(void (**)(void))(v6 + 24);
    swift_retain();
    swift_retain();
    sub_100140E3C();
    v11();
    sub_10003C780();
    return swift_release();
  }
}

void sub_100131CD4()
{
}

void sub_100131CEC()
{
  sub_100141AF0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_100019524(&qword_10030AE38);
  uint64_t v4 = (__n128 *)sub_100140DEC();
  sub_100140C04(v4, v3[2]);
  swift_retain();
  swift_retain();
  sub_100140F68();
  sub_100141B38();
  v1();
  swift_release();
  swift_release();
  sub_10008F248();
}

void EventLoopFuture.flatMapThrowing<A>(file:line:_:)()
{
}

void sub_100131DC0()
{
  sub_10003C7F0();
  sub_100140BC4();
  sub_10002FC68();
  uint64_t v9 = EventLoopPromise.init(eventLoop:file:line:)(*(void *)(v0 + *(void *)(v4 + 96)), *(void *)(v0 + *(void *)(v4 + 96) + 8), v5, v6, v7, v8);
  uint64_t v10 = (void *)sub_100140C60();
  v10[2] = v1;
  void v10[3] = v0;
  v10[4] = v3;
  v10[5] = v2;
  v10[6] = v9;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100141908();
  EventLoopFuture._whenComplete(_:)();
  swift_release();
  sub_10003C780();
}

uint64_t sub_100131E64(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      swift_errorRetain();
      uint64_t v7 = sub_1001FB400(v6, 1);
      sub_10013F4F8(v6, v5);
    }
    else
    {
      a2(result);
      return sub_1001FB400(0, 0);
    }
    return v7;
  }
  return result;
}

uint64_t sub_100131F7C(uint64_t *a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a4;
  uint64_t v38 = a3;
  unint64_t v39 = a2;
  uint64_t v7 = *a1;
  sub_10001B028(&qword_100309768);
  uint64_t v8 = sub_10024FCF0();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (uint64_t *)((char *)&v36 - v11);
  uint64_t v37 = a5;
  uint64_t v36 = *(void *)(a5 - 8);
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v7 + 80);
  uint64_t v40 = *(void *)(v17 - 8);
  __chkstk_darwin(v14, v18);
  uint64_t v20 = (char *)&v36 - v19;
  uint64_t v21 = sub_10024FCF0();
  uint64_t v22 = sub_10024F030();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (uint64_t *)((char *)&v36 - v25);
  uint64_t v27 = (char *)a1 + *(void *)(v7 + 88);
  swift_beginAccess();
  (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v26, v27, v22);
  uint64_t result = sub_10001FA0C((uint64_t)v26, 1, v21);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v12 = *v26;
      uint64_t v29 = v43;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      EventLoopPromise._setValue(value:)();
      uint64_t v31 = v30;
      swift_errorRelease();
      (*(void (**)(void *, uint64_t))(v42 + 8))(v12, v29);
    }
    else
    {
      uint64_t v32 = v40;
      (*(void (**)(char *, void *, uint64_t))(v40 + 32))(v20, v26, v17);
      v39(v20);
      uint64_t v33 = v36;
      (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v12, v16, v37);
      uint64_t v34 = v43;
      swift_storeEnumTagMultiPayload();
      EventLoopPromise._setValue(value:)();
      uint64_t v31 = v35;
      (*(void (**)(void *, uint64_t))(v42 + 8))(v12, v34);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v37);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v17);
    }
    return v31;
  }
  return result;
}

uint64_t sub_100132404(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = sub_10006FF20();
  int v7 = *(unsigned __int8 *)(a1 + 24);
  if (v7 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if ((v7 & 1) == 0) {
      return sub_1001FB400(*(void *)(a1 + 16), 0);
    }
    swift_errorRetain();
    a3(v8);
    uint64_t v9 = a2;
    sub_1001FB400(0, 0);
    sub_1001415D4();
    return v9;
  }
  return result;
}

uint64_t sub_1001324FC(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    if (v6)
    {
      swift_errorRetain();
      a3(v13, v8);
      uint64_t v11 = v13[1];
      uint64_t v12 = swift_unknownObjectRetain();
      uint64_t v10 = sub_1001FB63C(v12, v11, 0);
      sub_10013F2CC(v8, v7, v6);
      swift_unknownObjectRelease_n();
    }
    else
    {
      uint64_t v9 = swift_unknownObjectRetain();
      uint64_t v10 = sub_1001FB63C(v9, v7, 0);
      sub_10013F2CC(v8, v7, v6);
    }
    return v10;
  }
  return result;
}

uint64_t sub_100132668(uint64_t *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 80);
  sub_10001B028(&qword_100309768);
  uint64_t v7 = sub_10024FCF0();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t v14 = __chkstk_darwin(v9, v13);
  uint64_t v31 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = sub_10024F030();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (uint64_t *)((char *)&v30 - v22);
  uint64_t v24 = (uint64_t)a1 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(void *, uint64_t, uint64_t))(v20 + 16))(v23, v24, v19);
  uint64_t result = sub_10001FA0C((uint64_t)v23, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v31;
      v33(*v23);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v11, v26, v6);
      swift_storeEnumTagMultiPayload();
      EventLoopPromise._setValue(value:)();
      uint64_t v29 = v28;
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v7);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v6);
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v12 + 32))(v18, v23, v6);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v11, v18, v6);
      swift_storeEnumTagMultiPayload();
      EventLoopPromise._setValue(value:)();
      uint64_t v29 = v27;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v7);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v6);
    }
    return v29;
  }
  return result;
}

uint64_t sub_100132A88(uint64_t a1, void *a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  uint64_t result = swift_beginAccess();
  unint64_t v5 = a2[9];
  if (HIBYTE(v5) == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a2[2];
    uint64_t v6 = a2[3];
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v10 = a2[7];
    uint64_t v12 = v5 & 0x100000000000000;
    uint64_t v13 = a2[8];
    if ((v5 & 0x100000000000000) != 0)
    {
      sub_10013EFE0(v7, v6, v8, v9, v11, v10, v13, v5, 1);
    }
    else
    {
      v16[0] = v7;
      v16[1] = v6;
      char v17 = v8;
      uint64_t v18 = v9;
      uint64_t v19 = v11;
      uint64_t v20 = v10;
      uint64_t v21 = v13;
      int v22 = v5;
      char v24 = BYTE6(v5);
      __int16 v23 = WORD2(v5);
      sub_10013EFE0(v7, v6, v8, v9, v11, v10, v13, v5, 0);
      a3(&v25, v16);
      sub_10013F080(v7, v6, v8, v9, v11, v10, v13, v5);
      uint64_t v7 = v25;
    }
    uint64_t v14 = sub_1001FB400(v7, SHIBYTE(v12));
    sub_10003C3F0(v7, v12 != 0);
    return v14;
  }
  return result;
}

uint64_t sub_100132C0C(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t *))
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(unsigned __int16 *)(a2 + 24);
  if (v6 >> 8 > 0xFE)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    int v8 = v6 & 0x100;
    if ((v6 & 0x100) != 0)
    {
      sub_1001401B8(v7, v6, 1);
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v12 = v7;
      char v13 = v6;
      sub_1001401A0(v7, v6);
      a3(v11, &v12);
      sub_1001401C4(v7, v6);
      uint64_t v7 = v11[0];
      uint64_t v9 = v11[1];
    }
    uint64_t v10 = sub_1001FB560(v7, v9, SBYTE1(v8));
    sub_10003C378(v7, v9, v8 != 0);
    return v10;
  }
  return result;
}

uint64_t sub_100132D14(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  uint64_t v7 = (uint64_t *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (v9 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = *v7;
    sub_10004F084(v10, v9 & 1);
    uint64_t v11 = sub_100121334(a3, a4, v10, v9 & 1);
    char v13 = v12 & 1;
    sub_10013F4F8(v10, v9);
    uint64_t v14 = sub_1001FB400(v11, v13);
    sub_10003C3F0(v11, v13);
    return v14;
  }
  return result;
}

uint64_t sub_100132DEC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  uint64_t v7 = (uint64_t *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (v9 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = *v7;
    sub_10004F084(v10, v9 & 1);
    uint64_t v11 = sub_10012138C(a3, a4, v10, v9 & 1);
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    sub_10013F4F8(v10, v9);
    uint64_t v16 = sub_1001FB63C(v11, v13, v15);
    sub_10003C23C(v11, v13, v15);
    return v16;
  }
  return result;
}

uint64_t sub_100132ED0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t result = swift_beginAccess();
  int v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    if (v6)
    {
      swift_errorRetain();
    }
    else
    {
      uint64_t v9 = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      a3(&v10, &v9);
      sub_10013F218(v7, v6);
      uint64_t v7 = v10;
    }
    uint64_t v8 = sub_1001FB400(v7, v6 & 1);
    sub_10003C3F0(v7, v6 & 1);
    return v8;
  }
  return result;
}

uint64_t sub_100132FB0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a1;
  uint64_t v7 = *a2;
  sub_10001B028(&qword_100309768);
  uint64_t v8 = sub_10024FCF0();
  uint64_t v9 = sub_10024F030();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = sub_10024FCF0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v19 = (char *)a2 + *(void *)(v7 + 88);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v19, v9);
  uint64_t result = sub_10001FA0C((uint64_t)v13, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1000B42F0(v27, v28, v8, a5, v21, v22, v23, v24, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v13, v8);
    EventLoopPromise._setValue(value:)();
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    return v26;
  }
  return result;
}

uint64_t sub_10013322C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11)
{
  swift_beginAccess();
  int v17 = *(unsigned __int8 *)(a1 + 32);
  if (v17 == 255)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v18 = *(void *)(a1 + 16);
    uint64_t v19 = *(void *)(a1 + 24);
    if (v17)
    {
      sub_10013FF1C(v18, v19, v17);
      ChannelHandlerContext.fireErrorCaught(_:)();
      uint64_t v20 = sub_10011D920(a3, a5, a6, a7, a8, a9, a10, a11);
      uint64_t v21 = *(void *)(v20 + 48);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
      swift_unknownObjectRetain();
      char v24 = v23(ObjectType, v21);
      swift_unknownObjectRelease();
      if (v24)
      {
        swift_retain();
        uint64_t v25 = swift_retain();
        uint64_t v28 = sub_10012AAF8(v25, a2, v20);
        swift_release();
        sub_10013FF34(v18, v19, v17);
        swift_release();
      }
      else
      {
        sub_100031EA4(a2);
        sub_10013FF34(v18, v19, v17);
        swift_release();
        swift_release();
        uint64_t v28 = 0;
      }
    }
    else
    {
      sub_10003C360(*(void *)(a1 + 16));
      uint64_t v28 = sub_1001FB560(v18, v19, 0);
      sub_10013FF34(v18, v19, v17);
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v28;
  }
  return result;
}

uint64_t sub_1001334B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v7 = *(unsigned __int8 *)(a1 + 32);
  if (v7 != 255)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a1 + 24);
    if (v7)
    {
      swift_errorRetain();
      uint64_t v11 = a3(v9);
      uint64_t v12 = *(void *)(v11 + 48);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v12) = v14(ObjectType, v12);
      swift_unknownObjectRelease();
      if ((v12 & 1) == 0)
      {
        sub_100031EA4(a2);
        sub_10013FF34(v9, v8, v7);
        swift_release();
        return 0;
      }
      swift_retain();
      uint64_t v15 = swift_retain();
      uint64_t v10 = sub_10012AAF8(v15, a2, v11);
      swift_release();
    }
    else
    {
      sub_10003C360(v9);
      uint64_t v10 = sub_1001FB560(v9, v8, 0);
    }
    sub_10013FF34(v9, v8, v7);
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100133640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_10013F2B4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
      sub_100192014();
      uint64_t v11 = *(void *)(a3 + 48);
      sub_100019524(&qword_1003110B0);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 40) = v11;
      *(void *)(v12 + 48) = &protocol witness table for SelectableEventLoop;
      *(void *)(v12 + 16) = v8;
      *(void *)(v12 + 24) = v7;
      *(unsigned char *)(v12 + 32) = v6;
      *(void *)(v12 + 64) = 0;
      *(void *)(v12 + 72) = 0;
      *(void *)(v12 + 56) = 0;
      swift_retain();
      sub_10013F2B4(v8, v7, v6);
      type metadata accessor for SelectableEventLoop();
      swift_retain();
      BOOL v13 = j___s25ASOctaneSupportXPCService19SelectableEventLoopC02ineF0Sbvg();
      swift_release();
      if (!v13)
      {
        sub_100031F18(a2);
        sub_10013F2CC(v8, v7, v6);
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      uint64_t v14 = swift_retain();
      uint64_t v10 = sub_10012D088(v14, a2, v12);
      swift_release();
      sub_10013F2CC(v8, v7, v6);
    }
    else
    {
      uint64_t v9 = swift_unknownObjectRetain();
      uint64_t v10 = sub_1001FB63C(v9, v7, 0);
      sub_10013F2CC(v8, v7, v6);
    }
    swift_release();
    return v10;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100133848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  int v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 == 255)
  {
    swift_unknownObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    if (v8)
    {
      sub_10013F2B4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
      sub_10018F308(v10, 2, 0);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = sub_100019524(&qword_10030A528);
      uint64_t v15 = EventLoop.makeFailedFuture<A>(_:file:line:)(v10, "/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 319, ObjectType, v14, a5);
      uint64_t v16 = *(void *)(v15 + 48);
      uint64_t v17 = swift_getObjectType();
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
      swift_unknownObjectRetain();
      char v19 = v18(v17, v16);
      swift_unknownObjectRelease();
      if (v19)
      {
        swift_retain();
        uint64_t v20 = swift_retain();
        uint64_t v12 = sub_10012D088(v20, a2, v15);
        swift_release();
        sub_10013F2CC(v10, v9, v8);
        swift_release();
      }
      else
      {
        sub_100031F18(a2);
        sub_10013F2CC(v10, v9, v8);
        swift_release();
        swift_release();
        uint64_t v12 = 0;
      }
    }
    else
    {
      uint64_t v11 = swift_unknownObjectRetain();
      uint64_t v12 = sub_1001FB63C(v11, v9, 0);
      sub_10013F2CC(v10, v9, v8);
      swift_release();
    }
    swift_unknownObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_100133A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  int v7 = *(unsigned __int8 *)(a1 + 32);
  if (v7 != 255)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a1 + 24);
    if (v7)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v13 = sub_100019524(&qword_10030A528);
      uint64_t v14 = EventLoop.makeFailedFuture<A>(_:file:line:)(v9, "/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 938, ObjectType, v13, a4);
      uint64_t v15 = *(void *)(v14 + 48);
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
      sub_10013F2B4(v9, v8, v7);
      swift_unknownObjectRetain();
      LOBYTE(v15) = v17(v16, v15);
      swift_unknownObjectRelease();
      if ((v15 & 1) == 0)
      {
        sub_100031F18(a2);
        sub_10013F2CC(v9, v8, v7);
        swift_unknownObjectRelease();
        swift_release();
        return 0;
      }
      swift_retain();
      uint64_t v18 = swift_retain();
      uint64_t v11 = sub_10012D088(v18, a2, v14);
      swift_release();
      sub_10013F2CC(v9, v8, v7);
    }
    else
    {
      uint64_t v10 = swift_unknownObjectRetain();
      uint64_t v11 = sub_1001FB63C(v10, v8, 0);
      sub_10013F2CC(v9, v8, v7);
    }
    swift_unknownObjectRelease();
    return v11;
  }
  uint64_t result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_100133C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_10013F2B4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
      sub_1001922A0();
      uint64_t v11 = *(void *)(a3 + 48);
      sub_100019524(&qword_1003110B0);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 40) = v11;
      *(void *)(v12 + 48) = &protocol witness table for SelectableEventLoop;
      *(void *)(v12 + 16) = v8;
      *(void *)(v12 + 24) = v7;
      *(unsigned char *)(v12 + 32) = v6;
      *(void *)(v12 + 64) = 0;
      *(void *)(v12 + 72) = 0;
      *(void *)(v12 + 56) = 0;
      swift_retain();
      sub_10013F2B4(v8, v7, v6);
      type metadata accessor for SelectableEventLoop();
      swift_retain();
      BOOL v13 = j___s25ASOctaneSupportXPCService19SelectableEventLoopC02ineF0Sbvg();
      swift_release();
      if (!v13)
      {
        sub_100031F18(a2);
        sub_10013F2CC(v8, v7, v6);
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      uint64_t v14 = swift_retain();
      uint64_t v10 = sub_10012D088(v14, a2, v12);
      swift_release();
      sub_10013F2CC(v8, v7, v6);
    }
    else
    {
      uint64_t v9 = swift_unknownObjectRetain();
      uint64_t v10 = sub_1001FB63C(v9, v7, 0);
      sub_10013F2CC(v8, v7, v6);
    }
    swift_release();
    return v10;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100133E68(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v7 = *(unsigned __int8 *)(a1 + 32);
  if (v7 != 255)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a1 + 24);
    if (v7)
    {
      swift_errorRetain();
      uint64_t v12 = a3(v9);
      uint64_t v13 = *(void *)(v12 + 48);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v13) = v15(ObjectType, v13);
      swift_unknownObjectRelease();
      if ((v13 & 1) == 0)
      {
        sub_100031F18(a2);
        sub_10013F2CC(v9, v8, v7);
        swift_release();
        return 0;
      }
      swift_retain();
      uint64_t v16 = swift_retain();
      uint64_t v11 = sub_10012D088(v16, a2, v12);
      swift_release();
    }
    else
    {
      uint64_t v10 = swift_unknownObjectRetain();
      uint64_t v11 = sub_1001FB63C(v10, v8, 0);
    }
    sub_10013F2CC(v9, v8, v7);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100133FE8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  v31[1] = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a2;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 80);
  sub_10001B028(&qword_100309768);
  uint64_t v7 = sub_10024FCF0();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)v31 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  __chkstk_darwin(v9, v13);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v16 = sub_10024F030();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (void *)((char *)v31 - v19);
  uint64_t v21 = (uint64_t)a1 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 16))(v20, v21, v16);
  uint64_t result = sub_10001FA0C((uint64_t)v20, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = v32(*v20);
      uint64_t v24 = *(void *)(v23 + *(void *)(*(void *)v23 + 96) + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 16);
      swift_unknownObjectRetain();
      LOBYTE(v24) = v26(ObjectType, v24);
      swift_unknownObjectRelease();
      if (v24)
      {
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v34;
        *(void *)(v27 + 24) = v23;
        swift_retain();
        swift_retain();
        EventLoopFuture._addCallback(_:)();
        uint64_t v29 = v28;
        swift_release();
        swift_release();
        swift_errorRelease();
      }
      else
      {
        EventLoopFuture.cascade(to:)(v34);
        swift_errorRelease();
        swift_release();
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v12 + 32))(v15, v20, v6);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v11, v15, v6);
      swift_storeEnumTagMultiPayload();
      EventLoopPromise._setValue(value:)();
      uint64_t v29 = v30;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v7);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v6);
    }
    return v29;
  }
  return result;
}

uint64_t sub_1001343F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void), uint64_t (*a4)(uint64_t, uint64_t, void), void (*a5)(uint64_t))
{
  uint64_t result = sub_10006FF20();
  int v10 = *(unsigned __int8 *)(a2 + 32);
  if (v10 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = a2 + 16;
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = *(void *)(v13 + 8);
    a3(v11, v12, v10 & 1);
    uint64_t v14 = a4(v11, v12, v10 & 1);
    uint64_t v15 = sub_100141914();
    a5(v15);
    return v14;
  }
  return result;
}

void EventLoopFuture.flatMapResult<A, B>(file:line:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_10003C984();
  sub_100140BC4();
  sub_10002FC68();
  uint64_t v31 = EventLoopPromise.init(eventLoop:file:line:)(*(void *)(v22 + *(void *)(v26 + 96)), *(void *)(v22 + *(void *)(v26 + 96) + 8), v27, v28, v29, v30);
  uint64_t v32 = (void *)sub_100140DEC();
  void v32[2] = v23;
  v32[3] = v21;
  v32[4] = a21;
  v32[5] = v22;
  v32[6] = v25;
  v32[7] = v24;
  v32[8] = v31;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  swift_release();
  sub_10003C8C8();
}

uint64_t sub_10013457C(uint64_t *a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v77 = a4;
  uint64_t v71 = a3;
  uint64_t v72 = a2;
  uint64_t v11 = *a1;
  uint64_t v69 = *(void *)(a6 - 8);
  uint64_t v12 = __chkstk_darwin(a1, a2);
  uint64_t v66 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  long long v68 = (char *)&v63 - v15;
  sub_10001B028(&qword_100309768);
  uint64_t v78 = sub_10024FCF0();
  uint64_t v76 = *(void *)(v78 - 8);
  uint64_t v17 = __chkstk_darwin(v78, v16);
  uint64_t v65 = (uint64_t *)((char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char **)((char *)&v63 - v21);
  uint64_t v64 = *(void *)(a5 - 8);
  __chkstk_darwin(v20, v23);
  uint64_t v63 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a6;
  uint64_t v67 = a7;
  uint64_t v25 = sub_10024FCF0();
  uint64_t v27 = __chkstk_darwin(v25, v26);
  uint64_t v29 = (char *)&v63 - v28;
  uint64_t v30 = *(void *)(v11 + 80);
  uint64_t v73 = *(void *)(v30 - 8);
  __chkstk_darwin(v27, v30);
  unint64_t v74 = (char *)&v63 - v32;
  uint64_t v75 = v31;
  uint64_t v33 = sub_10024FCF0();
  uint64_t v34 = sub_10024F030();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v36);
  uint64_t v38 = (char **)((char *)&v63 - v37);
  unint64_t v39 = (char *)a1 + *(void *)(v11 + 88);
  swift_beginAccess();
  (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v38, v39, v34);
  uint64_t result = sub_10001FA0C((uint64_t)v38, 1, v33);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v22 = *v38;
      uint64_t v41 = v78;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      EventLoopPromise._setValue(value:)();
      uint64_t v43 = v42;
      swift_errorRelease();
      (*(void (**)(void *, uint64_t))(v76 + 8))(v22, v41);
    }
    else
    {
      uint64_t v45 = v73;
      uint64_t v44 = v74;
      uint64_t v46 = v38;
      uint64_t v47 = v75;
      (*(void (**)(char *, void *, uint64_t))(v73 + 32))(v74, v46, v75);
      v72(v44);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v49 = v68;
        uint64_t v48 = v69;
        unint64_t v50 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
        uint64_t v51 = v70;
        v50(v68, v29, v70);
        uint64_t v52 = v66;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v49, v51);
        uint64_t v53 = sub_10024FA10();
        if (v53)
        {
          uint64_t v54 = v53;
          (*(void (**)(char *, uint64_t))(v48 + 8))(v52, v51);
        }
        else
        {
          uint64_t v54 = swift_allocError();
          v50(v59, v52, v51);
        }
        uint64_t v60 = v65;
        *uint64_t v65 = v54;
        uint64_t v61 = v78;
        swift_storeEnumTagMultiPayload();
        EventLoopPromise._setValue(value:)();
        uint64_t v43 = v62;
        (*(void (**)(uint64_t *, uint64_t))(v76 + 8))(v60, v61);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v51);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v74, v47);
      }
      else
      {
        uint64_t v56 = v63;
        uint64_t v55 = v64;
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v29, a5);
        (*(void (**)(void *, char *, uint64_t))(v55 + 16))(v22, v56, a5);
        uint64_t v57 = v78;
        swift_storeEnumTagMultiPayload();
        EventLoopPromise._setValue(value:)();
        uint64_t v43 = v58;
        (*(void (**)(void *, uint64_t))(v76 + 8))(v22, v57);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v56, a5);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v75);
      }
    }
    return v43;
  }
  return result;
}

__n128 *sub_100134C2C()
{
  return sub_100134C5C();
}

__n128 *sub_100134C44()
{
  return sub_100134C5C();
}

__n128 *sub_100134C5C()
{
  sub_1001414A0();
  sub_100019524(&qword_10030AE38);
  uint64_t v2 = (__n128 *)sub_100140DEC();
  sub_100140C04(v2, v1[2]);
  swift_retain();
  swift_retain();
  sub_100140F68();
  uint64_t v3 = sub_100141184();
  v0(v3);
  swift_release();
  swift_release();
  return v2;
}

void EventLoopFuture.recover(file:line:_:)()
{
}

void sub_100134CFC()
{
  sub_10003C7F0();
  sub_100140BC4();
  sub_10007A8B8();
  uint64_t v4 = *(void *)(v0 + *(void *)(v3 + 96));
  sub_10007A8B8();
  uint64_t v10 = EventLoopPromise.init(eventLoop:file:line:)(v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (void *)sub_1000AC8E4();
  void v11[2] = v0;
  uint64_t v11[3] = v10;
  v11[4] = v2;
  v11[5] = v1;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  swift_release();
  sub_10003C780();
}

uint64_t sub_100134DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_beginAccess();
      *(void *)(a3 + 248) = v6;
      sub_10013F4E0(v6, v5);
      swift_errorRetain();
      uint64_t v8 = swift_errorRelease();
      uint64_t v7 = sub_1001FB400(v8, 0);
      uint64_t v9 = sub_10013F4F8(v6, v5);
      sub_10003C3F0(v9, 0);
    }
    else
    {
      uint64_t v7 = sub_1001FB400(v6, 0);
    }
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_100134EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_beginAccess();
      *(void *)(a3 + 240) = v6;
      sub_10013F4E0(v6, v5);
      swift_errorRetain();
      uint64_t v8 = swift_errorRelease();
      uint64_t v7 = sub_1001FB400(v8, 0);
      uint64_t v9 = sub_10013F4F8(v6, v5);
      sub_10003C3F0(v9, 0);
    }
    else
    {
      uint64_t v7 = sub_1001FB400(v6, 0);
    }
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_100134FB8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v6 = *(unsigned __int8 *)(a1 + 24);
  if (v6 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if ((v6 & 1) == 0) {
      return sub_1001FB400(v7, 0);
    }
    swift_errorRetain();
    a3(&v10, v7);
    uint64_t v9 = v10;
    uint64_t v8 = sub_1001FB400(v10, 0);
    sub_10013F4F8(v7, v6);
    sub_10003C3F0(v9, 0);
    return v8;
  }
  return result;
}

uint64_t sub_1001350A4(uint64_t *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  v27[1] = a4;
  uint64_t v28 = a3;
  uint64_t v29 = a2;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 80);
  sub_10001B028(&qword_100309768);
  uint64_t v7 = sub_10024FCF0();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  __chkstk_darwin(v9, v13);
  uint64_t v15 = (char *)v27 - v14;
  uint64_t v16 = sub_10024F030();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (void *)((char *)v27 - v19);
  uint64_t v21 = (uint64_t)a1 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 16))(v20, v21, v16);
  uint64_t result = sub_10001FA0C((uint64_t)v20, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28(*v20);
      swift_storeEnumTagMultiPayload();
      EventLoopPromise._setValue(value:)();
      uint64_t v24 = v23;
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v7);
    }
    else
    {
      uint64_t v25 = v12;
      (*(void (**)(char *, void *, uint64_t))(v12 + 32))(v15, v20, v6);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v11, v15, v6);
      swift_storeEnumTagMultiPayload();
      EventLoopPromise._setValue(value:)();
      uint64_t v24 = v26;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v7);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v6);
    }
    return v24;
  }
  return result;
}

uint64_t sub_100135408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100135470(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10012DAB8);
}

uint64_t sub_100135420(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  a4(a2, a3);
  sub_1000B7604();
  sub_1000B75C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100135470(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  a4(a2, a3);
  sub_1000B7604();
  sub_1000B75C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001354C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100135470(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10012D568);
}

uint64_t sub_1001354D8(uint64_t *a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 80);
  sub_10001B028(&qword_100309768);
  uint64_t v7 = sub_10024FCF0();
  uint64_t v8 = sub_10024F030();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  __chkstk_darwin(v11, v15);
  uint64_t v17 = (char *)&v20 - v16;
  uint64_t v18 = (uint64_t)a1 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v18, v8);
  uint64_t result = sub_10001FA0C((uint64_t)v13, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v13, v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, v6);
      a2(v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v6);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100135748(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_errorRetain();
      a2(v6);
    }
    sub_10013F4F8(v6, v5);
    return 0;
  }
  return result;
}

uint64_t sub_1001357D8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      swift_errorRetain();
      a2(v6);
      sub_10013F9B0(v6, v5);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100135868(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(a1 + 32);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      swift_errorRetain();
      a2(v7);
      sub_10013F2CC(v7, v6, v5);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100135904(uint64_t *a1, void (*a2)(void))
{
  uint64_t v4 = *a1;
  sub_10001B028(&qword_100309768);
  uint64_t v5 = sub_10024FCF0();
  uint64_t v6 = sub_10024F030();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (uint64_t *)((char *)&v13 - v9);
  uint64_t v11 = (char *)a1 + *(void *)(v4 + 88);
  swift_beginAccess();
  (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t result = sub_10001FA0C((uint64_t)v10, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      a2(*v10);
      swift_errorRelease();
    }
    else
    {
      (*(void (**)(void *, uint64_t))(*(void *)(v5 - 8) + 8))(v10, v5);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100135AD8()
{
  return sub_100135904(*(uint64_t **)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_100135AE4(void (*a1)(uint64_t *))
{
  sub_10006FF20();
  uint64_t result = sub_1001417FC();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    sub_10004F084(result, v3 & 1);
    a1(&v5);
    sub_10003C3F0(v5, v6);
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t sub_100135B58(void (*a1)(uint64_t *))
{
  sub_10006FF20();
  uint64_t result = sub_1001417FC();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    sub_1000B736C(result, v3 & 1);
    a1(&v5);
    sub_100140560(v5, v6, (uint64_t (*)(void))&_swift_release);
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t sub_100135BE0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t, void))
{
  sub_10006FF20();
  uint64_t result = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  int v11 = *(unsigned __int8 *)(a3 + 32);
  uint64_t v12 = result;
  uint64_t v13 = v10;
  unsigned __int8 v14 = v11;
  if (v11 == 255)
  {
    __break(1u);
  }
  else
  {
    a4();
    a1(&v12);
    a5(v12, v13, v14);
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t sub_100135C7C(void (*a1)(uint64_t *), uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = a3[2];
  uint64_t v6 = a3[3];
  unint64_t v7 = a3[4];
  uint64_t v8 = result;
  uint64_t v9 = v6;
  unint64_t v10 = v7;
  if (HIBYTE(v7) == 255)
  {
    __break(1u);
  }
  else
  {
    sub_1000B727C(result, v6, v7, HIBYTE(v7) & 1);
    a1(&v8);
    sub_1000B7264(v8, v9, v10 | ((unint64_t)(WORD2(v10) | (BYTE6(v10) << 16)) << 32), SHIBYTE(v10));
    return 0;
  }
  return result;
}

uint64_t sub_100135D28(void (*a1)(char *), uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  sub_10001B028(&qword_100309768);
  uint64_t v6 = sub_10024FCF0();
  uint64_t v7 = sub_10024F030();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  int v11 = (char *)&v14 - v10;
  uint64_t v12 = (char *)a3 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v12, v7);
  uint64_t result = sub_10001FA0C((uint64_t)v11, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    a1(v11);
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v11, v6);
    return 0;
  }
  return result;
}

void EventLoopFuture.and<A>(_:file:line:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_10007A8B8();
  sub_10007A8B8();
  uint64_t v13 = *(void *)(v12 + 80);
  uint64_t v15 = *(void *)(v14 + 80);
  swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_100141914();
  uint64_t v18 = EventLoopPromise.init(eventLoop:file:line:)(v16, v17, v9, v7, v5, v3);
  sub_10024F030();
  uint64_t v19 = swift_allocBox();
  uint64_t v21 = sub_100141460(v19, v20);
  sub_1000195B4(v21, v22, v23, v13);
  sub_10024F030();
  uint64_t v24 = swift_allocBox();
  uint64_t v26 = sub_100141460(v24, v25);
  sub_1000195B4(v26, v27, v28, v15);
  uint64_t v29 = (void *)sub_100140C60();
  v29[2] = v15;
  v29[3] = v1;
  v29[4] = v18;
  void v29[5] = v24;
  void v29[6] = v19;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  swift_release();
  sub_100141914();
  EventLoopFuture.hop(to:)();
  uint64_t v30 = (void *)sub_100140C60();
  v30[2] = v1;
  v30[3] = v11;
  v30[4] = v18;
  v30[5] = v19;
  v30[6] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EventLoopFuture._whenComplete(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10003C8C8();
}

uint64_t sub_1001360D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t), void (*a7)(uint64_t, void))
{
  uint64_t result = sub_10006FF20();
  uint64_t v14 = *(unsigned __int8 *)(a1 + 24);
  if (v14 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v14)
    {
      uint64_t v17 = *(void *)(a1 + 16);
      swift_errorRetain();
      uint64_t v16 = a5(v17, 1);
      a6(v17, v14);
    }
    else
    {
      uint64_t v15 = sub_10006FF20();
      if (*(unsigned char *)(a3 + 16))
      {
        sub_100141040();
        uint64_t v16 = 0;
        *(unsigned char *)(a4 + 16) = 0;
      }
      else
      {
        uint64_t v16 = a5(v15, 0);
        a7(v16, 0);
      }
    }
    return v16;
  }
  return result;
}

uint64_t sub_1001361F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v63 = a2;
  uint64_t v64 = a4;
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 80);
  uint64_t v9 = sub_10024F030();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v54 = (char *)&v50 - v11;
  uint64_t v12 = sub_10024F030();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  uint64_t v14 = __chkstk_darwin(v12, v13);
  uint64_t v57 = (char *)&v50 - v15;
  uint64_t v53 = *(void *)(a5 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v52 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = *(void *)(v8 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v65 = (char *)&v50 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_10001B028(&qword_100309768);
  uint64_t v51 = TupleTypeMetadata2;
  uint64_t v22 = sub_10024FCF0();
  uint64_t v61 = *(void *)(v22 - 8);
  uint64_t v62 = v22;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (uint64_t *)((char *)&v50 - v24);
  uint64_t v26 = sub_10024FCF0();
  uint64_t v27 = sub_10024F030();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v50 - v30;
  uint64_t v32 = swift_projectBox();
  uint64_t v64 = swift_projectBox();
  uint64_t v33 = (uint64_t)a1 + *(void *)(v7 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, v33, v27);
  uint64_t result = sub_10001FA0C((uint64_t)v31, 1, v26);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v25 = *(void *)v31;
      uint64_t v35 = v62;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      EventLoopPromise._setValue(value:)();
      uint64_t v37 = v36;
      swift_errorRelease();
      (*(void (**)(void *, uint64_t))(v61 + 8))(v25, v35);
    }
    else
    {
      uint64_t v38 = v60;
      unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
      v39(v65, v31, v8);
      swift_beginAccess();
      uint64_t v41 = (uint64_t)v57;
      uint64_t v40 = v58;
      uint64_t v42 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v32, v59);
      if (sub_10001FA0C(v41, 1, a5) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
        uint64_t v43 = (uint64_t)v54;
        v39(v54, v65, v8);
        sub_1000195B4(v43, 0, 1, v8);
        uint64_t v44 = v64;
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 40))(v44, v43, v56);
        return 0;
      }
      else
      {
        uint64_t v45 = v53;
        uint64_t v46 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v52, v41, a5);
        uint64_t v47 = (char *)v25 + *(int *)(v51 + 48);
        (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v25, v65, v8);
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v47, v46, a5);
        uint64_t v48 = v62;
        swift_storeEnumTagMultiPayload();
        EventLoopPromise._setValue(value:)();
        uint64_t v37 = v49;
        (*(void (**)(void *, uint64_t))(v61 + 8))(v25, v48);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v46, a5);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v65, v8);
      }
    }
    return v37;
  }
  return result;
}

uint64_t sub_100136878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), void (*a7)(uint64_t, void))
{
  uint64_t v12 = *(void *)(a1 + 40);
  swift_getObjectType();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v13, v14, v15, 812, v16, v12);
  uint64_t result = sub_10006FF20();
  int v18 = *(unsigned __int8 *)(a2 + 24);
  if (v18 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v18)
    {
      uint64_t v21 = *(void *)(a2 + 16);
      swift_errorRetain();
      uint64_t v20 = a6(v21, 1);
      sub_10013F4F8(v21, v18);
    }
    else
    {
      uint64_t v19 = sub_10006FF20();
      if (*(unsigned char *)(a4 + 16))
      {
        sub_100141040();
        uint64_t v20 = 0;
        *(unsigned char *)(a5 + 16) = 0;
      }
      else
      {
        uint64_t v20 = a6(v19, 0);
        a7(v20, 0);
      }
    }
    return v20;
  }
  return result;
}

uint64_t sub_1001369C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v70 = a4;
  uint64_t v71 = a5;
  uint64_t v69 = a3;
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*(void *)a2 + 80);
  uint64_t v9 = sub_10024F030();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v59 = (char *)&v56 - v11;
  uint64_t v12 = *(void *)(v7 + 80);
  uint64_t v13 = sub_10024F030();
  uint64_t v63 = *(void *)(v13 - 8);
  uint64_t v64 = v13;
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v62 = (char *)&v56 - v16;
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v57 = (char *)&v56 - v19;
  uint64_t v65 = *(void *)(v8 - 8);
  __chkstk_darwin(v18, v20);
  long long v68 = (char *)&v56 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_10001B028(&qword_100309768);
  uint64_t v56 = TupleTypeMetadata2;
  uint64_t v23 = sub_10024FCF0();
  uint64_t v66 = *(void *)(v23 - 8);
  uint64_t v67 = v23;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (uint64_t *)((char *)&v56 - v25);
  uint64_t v27 = sub_10024FCF0();
  uint64_t v28 = sub_10024F030();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  uint64_t v32 = (char *)&v56 - v31;
  uint64_t v70 = swift_projectBox();
  uint64_t v71 = swift_projectBox();
  uint64_t v33 = *(uint64_t *)((char *)a1 + *(void *)(v7 + 96) + 8);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 812, ObjectType, v33);
  uint64_t v35 = a2 + *(void *)(*(void *)a2 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v35, v28);
  uint64_t result = sub_10001FA0C((uint64_t)v32, 1, v27);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v26 = *(void *)v32;
      uint64_t v37 = v67;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      EventLoopPromise._setValue(value:)();
      uint64_t v39 = v38;
      swift_errorRelease();
      (*(void (**)(void *, uint64_t))(v66 + 8))(v26, v37);
    }
    else
    {
      uint64_t v40 = v65;
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      uint64_t v42 = v68;
      v41(v68, v32, v8);
      uint64_t v43 = v70;
      swift_beginAccess();
      uint64_t v45 = (uint64_t)v62;
      uint64_t v44 = v63;
      uint64_t v46 = v43;
      uint64_t v47 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v46, v64);
      if (sub_10001FA0C(v45, 1, v12) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v47);
        uint64_t v48 = (uint64_t)v59;
        v41(v59, v42, v8);
        sub_1000195B4(v48, 0, 1, v8);
        uint64_t v49 = v71;
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 40))(v49, v48, v61);
        return 0;
      }
      else
      {
        uint64_t v50 = v58;
        uint64_t v51 = v42;
        uint64_t v52 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v57, v45, v12);
        uint64_t v53 = (char *)v26 + *(int *)(v56 + 48);
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v26, v52, v12);
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v53, v51, v8);
        uint64_t v54 = v67;
        swift_storeEnumTagMultiPayload();
        EventLoopPromise._setValue(value:)();
        uint64_t v39 = v55;
        (*(void (**)(void *, uint64_t))(v66 + 8))(v26, v54);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v12);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v68, v8);
      }
    }
    return v39;
  }
  return result;
}

void EventLoopFuture.and<A>(value:file:line:)()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v12 = v3;
  v11[1] = v4;
  sub_1001414E8();
  sub_10002F9C8();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EventLoopFuture();
  sub_10002FA28();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v0, v2);
  EventLoopFuture.__allocating_init(eventLoop:value:file:line:)();
  swift_unknownObjectRetain();
  sub_1000B7AA8();
  EventLoopFuture.and<A>(_:file:line:)();
  swift_release();
  sub_10003C8C8();
}

uint64_t sub_1001371DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B028(&qword_100309768);
  uint64_t v8 = sub_10024FCF0();
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v14 - v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v14 - v10, a1, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    EventLoopPromise.fail(_:)(*v11);
    return swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v11, a3);
    EventLoopPromise.succeed(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a3);
  }
}

uint64_t EventLoopFuture.cascadeSuccess(to:)(uint64_t a1)
{
  return sub_1001373E8(a1, (uint64_t)&unk_1002E61F0, (uint64_t)sub_10013E540, (void (*)(uint64_t, uint64_t))EventLoopFuture.whenSuccess(_:));
}

uint64_t sub_1001373E8(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *v4;
    uint64_t v9 = sub_10004F2C8();
    *(void *)(v9 + 16) = *(void *)(v8 + 80);
    *(void *)(v9 + 24) = v7;
    swift_retain_n();
    a4(a3, v9);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001374AC(uint64_t a1)
{
  return EventLoopPromise.fail(_:)(a1);
}

uint64_t sub_1001374B8()
{
  return sub_10013E514((uint64_t (*)(void, void, void, void, void))sub_100127C2C);
}

uint64_t sub_1001374D0(uint64_t a1)
{
  return sub_1001371DC(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_1001374D8()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001374F0()
{
  return sub_100135D28(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_100137500()
{
  return sub_100132668(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013750C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Lock.lock()();
  swift_beginAccess();
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  LOBYTE(a3) = *(unsigned char *)(a3 + 32);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  unsigned __int8 v9 = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a2 + 32) = a3;
  sub_10013F2B4(v5, v6, a3);
  sub_10013F2CC(v7, v8, v9);
  sub_100137814(1);
  return 0;
}

uint64_t sub_1001375D8()
{
  sub_1001411C4();
  Lock.lock()();
  sub_10006FF20();
  uint64_t v2 = *(void *)(v0 + 16);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 24);
  sub_100141040();
  uint64_t v4 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = v2;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(v1 + 24) = v3;
  sub_10013F4E0(v2, v3);
  sub_10013F4F8(v4, v5);
  sub_100137814(1);
  return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
}

uint64_t sub_100137674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  uint64_t v4 = sub_10024F030();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = swift_projectBox();
  Lock.lock()();
  uint64_t v10 = a3 + *(void *)(*(void *)a3 + 88);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v10, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 40))(v9, v8, v4);
  sub_100137814(1);
  return 0;
}

uint64_t sub_100137814(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  Lock.unlock()();
  uint64_t result = pthread_cond_broadcast(*(pthread_cond_t **)(v2 + 32));
  if (result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100137870(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  Lock.lock()();
  uint64_t result = sub_10006FF20();
  while (*(void *)(v2 + 16) != a1)
  {
    uint64_t result = pthread_cond_wait(*(pthread_cond_t **)(v2 + 32), *(pthread_mutex_t **)(v4 + 16));
    if (result)
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

void EventLoopFuture.fold<A>(_:with:)()
{
  sub_10003C984();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_100140E04();
  uint64_t v11 = *(void *)(v0 + *(void *)(v10 + 96) + 8);
  swift_getObjectType();
  sub_100141330();
  if (v12())
  {
    sub_10003C8C8();
    sub_100137A38();
  }
  else
  {
    sub_1000B7AA8();
    uint64_t v18 = EventLoop.makePromise<A>(of:file:line:)(v14, v15, v16, v17, 981, v1, v14, v11);
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v19[2] = v3;
    v19[3] = v9;
    v19[4] = v0;
    void v19[5] = v7;
    v19[6] = v5;
    v19[7] = v18;
    uint64_t v20 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v11 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v20(sub_10013E590, v19, v1, v11);
    swift_release();
    sub_10003C8C8();
  }
}

uint64_t sub_100137A38()
{
  type metadata accessor for EventLoopFuture();
  sub_10024EB40();
  type metadata accessor for EventLoopFuture();
  swift_getWitnessTable();
  sub_10024E9D0();
  return v1;
}

uint64_t sub_100137B10@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, void *a5@<X8>)
{
  EventLoopFuture.and<A>(_:file:line:)();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a4;
  void v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  swift_retain();
  swift_retain();
  EventLoopFuture.flatMap<A>(file:line:_:)();
  uint64_t v12 = v11;
  swift_release();
  uint64_t result = swift_release();
  *a5 = v12;
  return result;
}

uint64_t sub_100137C20(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v8 = *(void *)(*(void *)a2 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = __chkstk_darwin(TupleTypeMetadata2 - 8, v10);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = *(void *)(a5 - 8);
  uint64_t v16 = __chkstk_darwin(v11, v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v8 - 8);
  uint64_t v21 = __chkstk_darwin(v16, v20);
  uint64_t v23 = (char *)&v32 - v22;
  uint64_t v24 = *(int *)(v21 + 56);
  uint64_t v25 = &v13[v24];
  uint64_t v26 = a1;
  uint64_t v27 = a1 + v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v13, v26, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v25, v27, a5);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v13, v8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v25, a5);
  uint64_t v28 = *(void *)(a2 + *(void *)(*(void *)a2 + 96) + 8);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 969, ObjectType, v28);
  uint64_t v30 = v33(v23, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, a5);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v8);
  return v30;
}

uint64_t sub_100137EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100137A38();
  EventLoopFuture.cascade(to:)(a5);
  return swift_release();
}

void static EventLoopFuture.reduce<A>(_:_:on:_:)()
{
  sub_10003C984();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_10014140C();
  swift_getObjectType();
  uint64_t v8 = *(void *)(v0 + 80);
  sub_1000B7AA8();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = v5;
  v9[4] = v3;
  v9[5] = v2;
  v9[6] = v1;
  v9[7] = v7;
  swift_unknownObjectRetain();
  swift_retain();
  EventLoopFuture.fold<A>(_:with:)();
  swift_release();
  swift_release();
  sub_10003C8C8();
}

uint64_t sub_100137FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(void *)(a7 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  a5(a1, a2);
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a7);
  return v15;
}

void static EventLoopFuture.reduce<A>(into:_:on:_:)()
{
  sub_1000B7690();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v23 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void *)(v0 + 80);
  sub_1000B7AA8();
  uint64_t v16 = EventLoop.makePromise<A>(of:file:line:)(v12, v13, v14, v15, 1046, ObjectType, v11, v7);
  uint64_t v17 = swift_allocBox();
  sub_10007A8C4();
  sub_100118854();
  v18();
  sub_1000B7AA8();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v19 = (void *)sub_100140DEC();
  uint64_t v19[2] = v11;
  v19[3] = v2;
  v19[4] = v9;
  void v19[5] = v7;
  v19[6] = v23;
  v19[7] = v4;
  v19[8] = v17;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  EventLoopFuture.fold<A>(_:with:)();
  swift_release();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v11;
  v20[3] = v2;
  v20[4] = v9;
  void v20[5] = v7;
  v20[6] = v16;
  v20[7] = v17;
  uint64_t v21 = sub_10004F2C8();
  *(void *)(v21 + 16) = sub_10013E69C;
  *(void *)(v21 + 24) = v20;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012E40C();
  swift_release();
  uint64_t v22 = (void *)sub_100140C60();
  v22[2] = v11;
  v22[3] = v2;
  v22[4] = v9;
  void v22[5] = v7;
  v22[6] = v16;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012DD14();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000B75A4();
}

void sub_100138394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v8 = swift_projectBox();
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1051, ObjectType, a4);
  swift_beginAccess();
  a5(v8, a2);
  swift_endAccess();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
}

uint64_t sub_100138488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_projectBox();
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1057, ObjectType, a2);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, a5);
  EventLoopPromise.succeed(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a5);
}

uint64_t sub_1001385D4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1001385FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1061, ObjectType, a3);
  return EventLoopPromise.fail(_:)(a1);
}

uint64_t static EventLoopFuture.andAllSucceed(_:promise:)()
{
  sub_10003C7F0();
  sub_10014143C();
  sub_1000B75E0();
  if (v2())
  {
    *(void *)(sub_100043C1C() + 16) = *(void *)(v0 + 80);
    sub_100141274();
    static EventLoopFuture._reduceSuccesses0<A>(_:_:_:onValue:)();
  }
  else
  {
    uint64_t v3 = (void *)sub_100140C60();
    sub_10014110C(v3);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_100141B10();
    v1();
  }
  sub_10003C780();
  return swift_release();
}

uint64_t sub_100138750()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100138790()
{
  return sub_10013E514((uint64_t (*)(void, void, void, void, void))sub_100132FB0);
}

uint64_t sub_1001387A8()
{
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1001387D8()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t type metadata accessor for EventLoopFuture()
{
  return sub_10002F7A4();
}

void sub_100138818()
{
  uint64_t v4 = sub_100141718();
  sub_1001413D8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v5, v6, v7, v4);
  uint64_t v8 = (void (*)(void))(v3 >> 62);
  if (v3 >> 62) {
    goto LABEL_67;
  }
  uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v10 = sub_100043C1C();
  uint64_t v16 = (void (*)(void))v10;
  *(void *)(v10 + 16) = v9;
  if (v9)
  {
    uint64_t v77 = v10 + 16;
    if (v8)
    {
      sub_100141168();
      uint64_t v8 = (void (*)(void))sub_10024F6F0();
      if (v8) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v8 = *(void (**)(void))((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_6:
        unint64_t v82 = v3 & 0xC000000000000001;
        sub_100141040();
        uint64_t v17 = 4;
        sub_100141598();
        while (1)
        {
          uint64_t v18 = v17 - 4;
          if (v82)
          {
            uint64_t v19 = sub_10024F380();
          }
          else
          {
            uint64_t v19 = *(void *)(v3 + 8 * v17);
            swift_retain();
          }
          if (__OFADD__(v18, 1))
          {
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            sub_100141168();
            uint64_t v9 = sub_10024F6F0();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          sub_1001418CC();
          sub_100141ABC();
          sub_100140FE0();
          uint64_t v17 = ((uint64_t (*)(void))v1)();
          swift_unknownObjectRelease();
          if ((v17 & 1) == 0
            || (uint64_t v8 = (void (*)(void))(v19 + 16), sub_10006FF20(), v20 = *(unsigned __int8 *)(v19 + 24), v20 == 255))
          {
            unint64_t v3 = sub_100163700(v80, v81);
            uint64_t v24 = (void *)sub_100140C60();
            v24[2] = EventLoop.assertInEventLoop(file:line:);
            v24[3] = 0;
            v24[4] = v16;
            void v24[5] = v2;
            v24[6] = v18;
            uint64_t v25 = (uint64_t)v16;
            uint64_t v26 = (void *)sub_1001188D4();
            v26[2] = sub_100140214;
            void v26[3] = v24;
            v26[4] = v3;
            uint64_t v8 = *(void (**)(void))(v3 + 32);
            uint64_t v17 = *(void *)(v3 + 40);
            swift_getObjectType();
            sub_100141230();
            swift_retain_n();
            sub_100140CBC();
            swift_retain();
            sub_100140A6C();
            if (((uint64_t (*)(void))v0)())
            {
              uint64_t v78 = (uint64_t)v26;
              uint64_t v2 = sub_100140C60();
              *(void *)(v2 + 16) = EventLoop.assertInEventLoop(file:line:);
              *(void *)(v2 + 24) = 0;
              uint64_t v17 = (uint64_t)v83;
              *(void *)(v2 + 32) = v83;
              *(void *)(v2 + 40) = v25;
              *(void *)(v2 + 48) = v18;
              uint64_t v0 = sub_1001188D4();
              *(void *)(v0 + 16) = sub_100140214;
              *(void *)(v0 + 24) = v2;
              *(void *)(v0 + 32) = v3;
              uint64_t v8 = *(void (**)(void))(v3 + 32);
              uint64_t ObjectType = swift_getObjectType();
              sub_100141934((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v28, v29, v30, ObjectType);
              sub_10006FF20();
              int v31 = *(unsigned __int8 *)(v3 + 24);
              if (v31 == 255)
              {
                sub_1000578C0();
                if (*(void *)(v3 + 48))
                {
                  if (*(void *)(v3 + 64))
                  {
                    uint64_t v36 = sub_10004F2C8();
                    *(void *)(v36 + 16) = sub_1001408C8;
                    *(void *)(v36 + 24) = v0;
                    uint64_t v37 = *(void *)(v3 + 64);
                    if (!v37)
                    {
                      __break(1u);
                      return;
                    }
                    uint64_t v38 = v36;
                    sub_1001411F0();
                    sub_100140DC0();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *(void *)(v3 + 64) = v37;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      sub_100141754();
                      uint64_t v37 = v62;
                      *(void *)(v3 + 64) = v62;
                    }
                    unint64_t v1 = *(void *)(v37 + 16);
                    uint64_t v17 = v1 + 1;
                    if (v1 >= *(void *)(v37 + 24) >> 1)
                    {
                      sub_10014151C();
                      uint64_t v37 = v63;
                    }
                    *(void *)(v37 + 16) = v17;
                    uint64_t v40 = v37 + 16 * v1;
                    *(void *)(v40 + 32) = sub_10013CB58;
                    *(void *)(v40 + 40) = v38;
                    *(void *)(v3 + 64) = v37;
                  }
                  else
                  {
                    sub_100019524(&qword_10030A3C0);
                    uint64_t v55 = sub_1000AC8E4();
                    *(_OWORD *)(v55 + 16) = v68;
                    uint64_t v56 = sub_10004F2C8();
                    *(void *)(v56 + 16) = sub_1001408C8;
                    *(void *)(v56 + 24) = v0;
                    *(void *)(v55 + 32) = sub_10013CB58;
                    *(void *)(v55 + 40) = v56;
                    sub_1001411F0();
                    sub_100140DC0();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_bridgeObjectRelease();
                    *(void *)(v3 + 64) = v55;
                  }
                }
                else
                {
                  *(void *)(v3 + 48) = sub_1001408C8;
                  *(void *)(v3 + 56) = v0;
                  sub_1001411F0();
                  sub_100140DC0();
                  sub_100140CBC();
                  swift_retain();
                  swift_retain();
                  swift_retain();
                }
                swift_endAccess();
                uint64_t v8 = v83;
                uint64_t v25 = v76;
              }
              else
              {
                uint64_t v32 = *(void *)(v3 + 16);
                swift_retain();
                swift_retain();
                if (v31)
                {
                  uint64_t v75 = v0;
                  uint64_t v8 = *(void (**)(void))(v25 + 32);
                  unint64_t v1 = *(void *)(v25 + 40);
                  uint64_t v43 = swift_getObjectType();
                  sub_100140E1C();
                  sub_100140DC0();
                  sub_100140CBC();
                  swift_retain();
                  uint64_t v72 = v2;
                  swift_retain();
                  LODWORD(v73) = v31;
                  sub_10013F4E0(v32, v31);
                  uint64_t v70 = v43;
                  uint64_t v71 = v1;
                  sub_100140FE0();
                  uint64_t v17 = v32;
                  if (v44())
                  {
                    uint64_t v8 = (void (*)(void))v25;
                    sub_1001FB400(v32, 1);
                    sub_100141A1C();
                    sub_100140F38();
                    uint64_t v45 = v1;
                  }
                  else
                  {
                    uint64_t v84 = v32;
                    char v85 = 1;
                    uint64_t v49 = sub_1000B7888();
                    uint64_t v50 = sub_100140DD8(v49);
                    sub_100140768(v50, v51, qword_10030ECB8);
                    sub_100141B44();
                    sub_10013F4E0(v32, v31);
                    sub_100140E98();
                    ((void (*)(void))v2)();
                    swift_release();
                    uint64_t v45 = v32;
                  }
                  sub_10013F4F8(v45, v31);
                  swift_release();
                  sub_100141834();
                }
                else
                {
                  sub_100141010();
                  if (v23) {
                    goto LABEL_66;
                  }
                  *uint64_t v34 = v33;
                  if (v33)
                  {
                    uint64_t v25 = v76;
                    sub_100140F20();
                    uint64_t v8 = v83;
                    swift_retain();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    sub_100140F80();
                  }
                  else
                  {
                    uint64_t v75 = v0;
                    uint64_t v25 = v76;
                    unint64_t v1 = sub_1001418CC();
                    sub_100140E1C();
                    sub_100140DC0();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    uint64_t v73 = v1;
                    sub_100140FE0();
                    if (v52())
                    {
                      uint64_t v8 = (void (*)(void))sub_1001FB400(0, 0);
                      uint64_t v17 = v53;
                      unint64_t v1 = v54;
                      CallbackList._run()();
                      sub_100140F38();
                    }
                    else
                    {
                      sub_100141B78();
                      uint64_t v57 = sub_1000B7888();
                      uint64_t v58 = sub_100140DD8(v57);
                      sub_100140768(v58, v59, qword_10030ECB8);
                      sub_100141860();
                      sub_100140E3C();
                      v60();
                      swift_release();
                    }
                    sub_100140F80();
                    sub_100141834();
                  }
                }
              }
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              CallbackList._run()();
              swift_release();
              swift_release();
              uint64_t v16 = v8;
            }
            else
            {
              uint64_t v35 = sub_1001188D4();
              *(void *)(v35 + 16) = v3;
              *(void *)(v35 + 24) = sub_100140230;
              sub_100141814(v35);
              swift_retain();
              sub_100140E3C();
              ((void (*)(void))v2)();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v16 = v83;
            }
            uint64_t v2 = v25;
            swift_release();
            swift_release_n();
            swift_release_n();
            swift_release_n();
            unint64_t v3 = v79;
          }
          else
          {
            if (v20)
            {
              sub_100141880();
              sub_100141540();
              sub_1001418FC();
              if (((uint64_t (*)(void))v1)())
              {
                uint64_t v66 = sub_1001FB400(v18, 1);
                CallbackList._run()();
                sub_10003C350(v66);
                swift_bridgeObjectRelease();
                sub_100140FB0();
                swift_release();
                sub_10013F4F8(v18, v20);
              }
              else
              {
                uint64_t v84 = v18;
                char v85 = 1;
                uint64_t v67 = sub_1000B7888();
                *(void *)(v67 + 16) = v2;
                sub_100140768((uint64_t)&v84, v67 + 24, qword_10030ECB8);
                sub_100141974();
                sub_1001413C0();
                v16();
                swift_release();
                sub_100140FB0();
                swift_release();
                sub_10013F4F8(v18, v20);
              }
              swift_release();
              goto LABEL_63;
            }
            sub_100141010();
            if (v23) {
              goto LABEL_65;
            }
            *uint64_t v22 = v21;
            if (v21) {
              goto LABEL_37;
            }
            uint64_t v8 = *(void (**)(void))(v2 + 32);
            uint64_t v41 = *(void *)(v2 + 40);
            uint64_t v17 = swift_getObjectType();
            sub_1000B75E0();
            if ((v42() & 1) == 0)
            {
              sub_100141B78();
              uint64_t v46 = sub_1000B7888();
              uint64_t v47 = sub_100141ADC(v46);
              sub_100140768(v47, v48, qword_10030ECB8);
              uint64_t v0 = v41 + 24;
              unint64_t v1 = *(void *)(v41 + 24);
              swift_retain();
              sub_100140E98();
              ((void (*)(void))v1)();
              swift_release();
LABEL_37:
              swift_release();
              goto LABEL_49;
            }
            uint64_t v8 = (void (*)(void))v2;
            sub_1001FB400(0, 0);
            sub_1000B7604();
            sub_10003C350(v41);
            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_49:
          sub_100141B24();
          if (v61)
          {
            swift_release();
            swift_bridgeObjectRelease();
LABEL_63:
            sub_100140C78();
            return;
          }
        }
      }
    }
    swift_release();
    sub_100140C78();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B45E8(0, 0, v2, v11, v12, v13, v14, v15, v68, *((uint64_t *)&v68 + 1), v69, v70, v71, v72, v73, v74, v75, v76, v77,
      v78,
      v79,
      v80);
    sub_100140C78();
    swift_release();
  }
}

void sub_100139200()
{
  uint64_t v4 = sub_100141718();
  sub_1001413D8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v5, v6, v7, v4);
  uint64_t v8 = (void (*)(void))(v3 >> 62);
  if (v3 >> 62) {
    goto LABEL_67;
  }
  uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v10 = sub_100043C1C();
  uint64_t v16 = (void (*)(void))v10;
  *(void *)(v10 + 16) = v9;
  if (v9)
  {
    uint64_t v77 = v10 + 16;
    if (v8)
    {
      sub_100141168();
      uint64_t v8 = (void (*)(void))sub_10024F6F0();
      if (v8) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v8 = *(void (**)(void))((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_6:
        unint64_t v82 = v3 & 0xC000000000000001;
        sub_100141040();
        uint64_t v17 = 4;
        sub_100141598();
        while (1)
        {
          uint64_t v18 = v17 - 4;
          if (v82)
          {
            uint64_t v19 = sub_10024F380();
          }
          else
          {
            uint64_t v19 = *(void *)(v3 + 8 * v17);
            swift_retain();
          }
          if (__OFADD__(v18, 1))
          {
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            sub_100141168();
            uint64_t v9 = sub_10024F6F0();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          sub_1001418CC();
          sub_100141ABC();
          sub_100140FE0();
          uint64_t v17 = ((uint64_t (*)(void))v1)();
          swift_unknownObjectRelease();
          if ((v17 & 1) == 0
            || (uint64_t v8 = (void (*)(void))(v19 + 16), sub_10006FF20(), v20 = *(unsigned __int8 *)(v19 + 24), v20 == 255))
          {
            unint64_t v3 = sub_100163700(v80, v81);
            uint64_t v24 = (void *)sub_100140C60();
            v24[2] = EventLoop.assertInEventLoop(file:line:);
            v24[3] = 0;
            v24[4] = v16;
            void v24[5] = v2;
            v24[6] = v18;
            uint64_t v25 = (uint64_t)v16;
            uint64_t v26 = (void *)sub_1001188D4();
            v26[2] = sub_100140214;
            void v26[3] = v24;
            v26[4] = v3;
            uint64_t v8 = *(void (**)(void))(v3 + 32);
            uint64_t v17 = *(void *)(v3 + 40);
            swift_getObjectType();
            sub_100141230();
            swift_retain_n();
            sub_100140CBC();
            swift_retain();
            sub_100140A6C();
            if (((uint64_t (*)(void))v0)())
            {
              uint64_t v78 = (uint64_t)v26;
              uint64_t v2 = sub_100140C60();
              *(void *)(v2 + 16) = EventLoop.assertInEventLoop(file:line:);
              *(void *)(v2 + 24) = 0;
              uint64_t v17 = (uint64_t)v83;
              *(void *)(v2 + 32) = v83;
              *(void *)(v2 + 40) = v25;
              *(void *)(v2 + 48) = v18;
              uint64_t v0 = sub_1001188D4();
              *(void *)(v0 + 16) = sub_100140214;
              *(void *)(v0 + 24) = v2;
              *(void *)(v0 + 32) = v3;
              uint64_t v8 = *(void (**)(void))(v3 + 32);
              uint64_t ObjectType = swift_getObjectType();
              sub_100141934((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v28, v29, v30, ObjectType);
              sub_10006FF20();
              int v31 = *(unsigned __int8 *)(v3 + 24);
              if (v31 == 255)
              {
                sub_1000578C0();
                if (*(void *)(v3 + 48))
                {
                  if (*(void *)(v3 + 64))
                  {
                    uint64_t v36 = sub_10004F2C8();
                    *(void *)(v36 + 16) = sub_1001408C8;
                    *(void *)(v36 + 24) = v0;
                    uint64_t v37 = *(void *)(v3 + 64);
                    if (!v37)
                    {
                      __break(1u);
                      return;
                    }
                    uint64_t v38 = v36;
                    sub_1001411F0();
                    sub_100140DC0();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *(void *)(v3 + 64) = v37;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      sub_100141754();
                      uint64_t v37 = v62;
                      *(void *)(v3 + 64) = v62;
                    }
                    unint64_t v1 = *(void *)(v37 + 16);
                    uint64_t v17 = v1 + 1;
                    if (v1 >= *(void *)(v37 + 24) >> 1)
                    {
                      sub_10014151C();
                      uint64_t v37 = v63;
                    }
                    *(void *)(v37 + 16) = v17;
                    uint64_t v40 = v37 + 16 * v1;
                    *(void *)(v40 + 32) = sub_10013CB58;
                    *(void *)(v40 + 40) = v38;
                    *(void *)(v3 + 64) = v37;
                  }
                  else
                  {
                    sub_100019524(&qword_10030A3C0);
                    uint64_t v55 = sub_1000AC8E4();
                    *(_OWORD *)(v55 + 16) = v68;
                    uint64_t v56 = sub_10004F2C8();
                    *(void *)(v56 + 16) = sub_1001408C8;
                    *(void *)(v56 + 24) = v0;
                    *(void *)(v55 + 32) = sub_10013CB58;
                    *(void *)(v55 + 40) = v56;
                    sub_1001411F0();
                    sub_100140DC0();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_bridgeObjectRelease();
                    *(void *)(v3 + 64) = v55;
                  }
                }
                else
                {
                  *(void *)(v3 + 48) = sub_1001408C8;
                  *(void *)(v3 + 56) = v0;
                  sub_1001411F0();
                  sub_100140DC0();
                  sub_100140CBC();
                  swift_retain();
                  swift_retain();
                  swift_retain();
                }
                swift_endAccess();
                uint64_t v8 = v83;
                uint64_t v25 = v76;
              }
              else
              {
                uint64_t v32 = *(void *)(v3 + 16);
                swift_retain();
                swift_retain();
                if (v31)
                {
                  uint64_t v75 = v0;
                  uint64_t v8 = *(void (**)(void))(v25 + 32);
                  unint64_t v1 = *(void *)(v25 + 40);
                  uint64_t v43 = swift_getObjectType();
                  sub_100140E1C();
                  sub_100140DC0();
                  sub_100140CBC();
                  swift_retain();
                  uint64_t v72 = v2;
                  swift_retain();
                  LODWORD(v73) = v31;
                  sub_10013F4E0(v32, v31);
                  uint64_t v70 = v43;
                  uint64_t v71 = v1;
                  sub_100140FE0();
                  uint64_t v17 = v32;
                  if (v44())
                  {
                    uint64_t v8 = (void (*)(void))v25;
                    sub_1001FB400(v32, 1);
                    sub_100141A1C();
                    sub_100140F38();
                    uint64_t v45 = v1;
                  }
                  else
                  {
                    uint64_t v84 = v32;
                    char v85 = 1;
                    uint64_t v49 = sub_1000B7888();
                    uint64_t v50 = sub_100140DD8(v49);
                    sub_100140768(v50, v51, qword_10030ECB8);
                    sub_100141B44();
                    sub_10013F4E0(v32, v31);
                    sub_100140E98();
                    ((void (*)(void))v2)();
                    swift_release();
                    uint64_t v45 = v32;
                  }
                  sub_10013F4F8(v45, v31);
                  swift_release();
                  sub_100141834();
                }
                else
                {
                  sub_100141010();
                  if (v23) {
                    goto LABEL_66;
                  }
                  *uint64_t v34 = v33;
                  if (v33)
                  {
                    uint64_t v25 = v76;
                    sub_100140F20();
                    uint64_t v8 = v83;
                    swift_retain();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    sub_100140F80();
                  }
                  else
                  {
                    uint64_t v75 = v0;
                    uint64_t v25 = v76;
                    unint64_t v1 = sub_1001418CC();
                    sub_100140E1C();
                    sub_100140DC0();
                    sub_100140CBC();
                    swift_retain();
                    swift_retain();
                    uint64_t v73 = v1;
                    sub_100140FE0();
                    if (v52())
                    {
                      uint64_t v8 = (void (*)(void))sub_1001FB400(0, 0);
                      uint64_t v17 = v53;
                      unint64_t v1 = v54;
                      CallbackList._run()();
                      sub_100140F38();
                    }
                    else
                    {
                      sub_100141B78();
                      uint64_t v57 = sub_1000B7888();
                      uint64_t v58 = sub_100140DD8(v57);
                      sub_100140768(v58, v59, qword_10030ECB8);
                      sub_100141860();
                      sub_100140E3C();
                      v60();
                      swift_release();
                    }
                    sub_100140F80();
                    sub_100141834();
                  }
                }
              }
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              CallbackList._run()();
              swift_release();
              swift_release();
              uint64_t v16 = v8;
            }
            else
            {
              uint64_t v35 = sub_1001188D4();
              *(void *)(v35 + 16) = v3;
              *(void *)(v35 + 24) = sub_1001408C8;
              sub_100141814(v35);
              swift_retain();
              sub_100140E3C();
              ((void (*)(void))v2)();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v16 = v83;
            }
            uint64_t v2 = v25;
            swift_release();
            swift_release_n();
            swift_release_n();
            swift_release_n();
            unint64_t v3 = v79;
          }
          else
          {
            if (v20)
            {
              sub_100141880();
              sub_100141540();
              sub_1001418FC();
              if (((uint64_t (*)(void))v1)())
              {
                uint64_t v66 = sub_1001FB400(v18, 1);
                CallbackList._run()();
                sub_10003C350(v66);
                swift_bridgeObjectRelease();
                sub_100140FB0();
                swift_release();
                sub_10013F4F8(v18, v20);
              }
              else
              {
                uint64_t v84 = v18;
                char v85 = 1;
                uint64_t v67 = sub_1000B7888();
                *(void *)(v67 + 16) = v2;
                sub_100140768((uint64_t)&v84, v67 + 24, qword_10030ECB8);
                sub_100141974();
                sub_1001413C0();
                v16();
                swift_release();
                sub_100140FB0();
                swift_release();
                sub_10013F4F8(v18, v20);
              }
              swift_release();
              goto LABEL_63;
            }
            sub_100141010();
            if (v23) {
              goto LABEL_65;
            }
            *uint64_t v22 = v21;
            if (v21) {
              goto LABEL_37;
            }
            uint64_t v8 = *(void (**)(void))(v2 + 32);
            uint64_t v41 = *(void *)(v2 + 40);
            uint64_t v17 = swift_getObjectType();
            sub_1000B75E0();
            if ((v42() & 1) == 0)
            {
              sub_100141B78();
              uint64_t v46 = sub_1000B7888();
              uint64_t v47 = sub_100141ADC(v46);
              sub_100140768(v47, v48, qword_10030ECB8);
              uint64_t v0 = v41 + 24;
              unint64_t v1 = *(void *)(v41 + 24);
              swift_retain();
              sub_100140E98();
              ((void (*)(void))v1)();
              swift_release();
LABEL_37:
              swift_release();
              goto LABEL_49;
            }
            uint64_t v8 = (void (*)(void))v2;
            sub_1001FB400(0, 0);
            sub_1000B7604();
            sub_10003C350(v41);
            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_49:
          sub_100141B24();
          if (v61)
          {
            swift_release();
            swift_bridgeObjectRelease();
LABEL_63:
            sub_100140C78();
            return;
          }
        }
      }
    }
    swift_release();
    sub_100140C78();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B45E8(0, 0, v2, v11, v12, v13, v14, v15, v68, *((uint64_t *)&v68 + 1), v69, v70, v71, v72, v73, v74, v75, v76, v77,
      v78,
      v79,
      v80);
    sub_100140C78();
    swift_release();
  }
}

void static EventLoopFuture._reduceSuccesses0<A>(_:_:_:onValue:)()
{
  sub_10003C984();
  uint64_t v67 = v1;
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_1000ACEB8();
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  uint64_t v59 = sub_10014157C();
  sub_10002F9C8();
  uint64_t v12 = v11;
  sub_10007A8E8();
  __chkstk_darwin(v13, v14);
  sub_100140C94();
  uint64_t v16 = v15;
  __chkstk_darwin(v17, v18);
  sub_1000E2460();
  __chkstk_darwin(v19, v20);
  uint64_t v57 = (uint64_t)&v53 - v21;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v61 = v10;
  uint64_t v62 = v8;
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1171, ObjectType, v8);
  uint64_t v23 = sub_100043C1C();
  uint64_t v24 = sub_1001417A8();
  *(void *)(v23 + 16) = v24;
  if (!v24)
  {
    sub_1000B45E8(0, 0, v2, v25, v26, v27, v28, v29, v53, v54, (uint64_t)v55, v56, v57, v58, v59, v60, v61, v62, v63,
      (uint64_t)v64,
      v65,
      v66);
    sub_10003C8C8();
    swift_release();
    return;
  }
  uint64_t v56 = v3;
  uint64_t v68 = v0;
  sub_10024EB40();
  swift_getWitnessTable();
  sub_10024E970();
  sub_1001414F8();
  sub_10024F6B0();
  uint64_t v63 = sub_10024F6D0();
  sub_10024F6C0();
  uint64_t v30 = v69;
  if (!v69)
  {
LABEL_11:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v31 = v16;
  uint64_t v32 = v68;
  uint64_t v58 = v12 + 16;
  uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
  uint64_t v53 = v31 + 8;
  uint64_t v54 = v12 + 8;
  while (1)
  {
    uint64_t v33 = *(void *)(v30 + *(void *)(*(void *)v30 + 96) + 8);
    swift_getObjectType();
    uint64_t v34 = v2;
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 16);
    swift_unknownObjectRetain();
    sub_1001418FC();
    uint64_t v38 = v35(v36, v37);
    uint64_t v2 = v34;
    uint64_t v39 = (void *)v38;
    swift_unknownObjectRelease();
    if (v39) {
      break;
    }
LABEL_7:
    EventLoopFuture.hop(to:)();
    uint64_t v47 = (void *)sub_100140DEC();
    v39[5] = sub_100140FEC(v47);
    v39[6] = v23;
    v39[7] = v34;
    v39[8] = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    EventLoopFuture.whenComplete(_:)();
    swift_release();
    swift_release();
    swift_release();
LABEL_10:
    sub_10024F6C0();
    uint64_t v32 = v68;
    uint64_t v30 = v69;
    if (!v69) {
      goto LABEL_11;
    }
  }
  sub_10006FF20();
  sub_1001418F0();
  sub_100118854();
  v42(v40, v41);
  uint64_t v43 = v60;
  if (sub_10001FA0C(v4, 1, v60) == 1)
  {
    sub_1001419AC();
    sub_10014179C();
    v46(v44, v45);
    goto LABEL_7;
  }
  uint64_t v48 = *v55;
  uint64_t v49 = v57;
  (*v55)(v57, v4, v43);
  sub_10013A758(v32, v49, v64, v65, v23, v34, *(void *)(v67 + 80), v66);
  swift_release();
  v48(v56, v49, v43);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v50 = sub_1001418A0();
    v51(v50);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_release();
LABEL_12:
  sub_10003C8C8();
}

uint64_t static EventLoopFuture.whenAllSucceed(_:on:)()
{
  sub_100141658();
  sub_10024EB40();
  sub_1000B7AA8();
  sub_100141A9C(v1, v2, v3, v4, 1119);
  sub_100141B64();
  static EventLoopFuture.whenAllSucceed(_:promise:)();
  return v0;
}

void static EventLoopFuture.whenAllSucceed(_:promise:)()
{
  sub_10003C984();
  uint64_t v22 = v1;
  sub_1000ACEB8();
  uint64_t v4 = *(void *)(v1 + 80);
  sub_10024F030();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v5, v6);
  sub_1001185C8();
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B7AA8();
  uint64_t v14 = EventLoop.makePromise<A>(of:file:line:)(v10, v11, v12, v13, 1134, ObjectType, v10, v8);
  uint64_t v15 = sub_100043C1C();
  sub_1000195B4(v3, 1, 1, v4);
  sub_10024EB20();
  *(void *)(v15 + 16) = sub_10024EB30();
  uint64_t v16 = sub_10004F2C8();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = *(uint64_t (**)(void))(v8 + 16);
  swift_retain();
  uint64_t v21 = ObjectType;
  sub_100140FE0();
  if (v17())
  {
    static EventLoopFuture._reduceSuccesses0<A>(_:_:_:onValue:)();
  }
  else
  {
    uint64_t v18 = (void *)sub_100140DEC();
    v18[2] = v22;
    void v18[3] = v14;
    v18[4] = v2;
    void v18[5] = v7;
    v18[6] = v8;
    v18[7] = sub_10013E7E0;
    v18[8] = v16;
    uint64_t v19 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v8 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    v19(sub_10013E7EC, v18, v21, v8);
    swift_release();
  }
  uint64_t v20 = (void *)sub_1001188D4();
  sub_100141308(v20);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012DE30();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  sub_10003C8C8();
}

uint64_t sub_10013A314(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10024F030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v15 - v11, a2, a4);
  sub_1000195B4((uint64_t)v12, 0, 1, a4);
  swift_beginAccess();
  sub_10024EB40();
  sub_10024EAE0();
  uint64_t v13 = *(void *)(a3 + 16);
  sub_10013F158(a1, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 40))(v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * a1, v12, v8);
  return swift_endAccess();
}

uint64_t sub_10013A498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v5 = *(void *)a1;
    swift_errorRetain();
    sub_10024EB40();
    EventLoopPromise.fail(_:)(v5);
    return sub_10003C3F0(v5, 1);
  }
  else
  {
    uint64_t v8 = swift_beginAccess();
    uint64_t v15 = *(void *)(a2 + 16);
    __chkstk_darwin(v8, v9);
    unsigned char v14[2] = a4;
    sub_10024F030();
    uint64_t v10 = sub_10024EB40();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v13 = sub_1001BD35C((void (*)(char *, uint64_t))sub_10013FE2C, (uint64_t)v14, v10, a4, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v12);
    swift_bridgeObjectRelease();
    uint64_t v15 = v13;
    sub_10024EB40();
    EventLoopPromise.succeed(_:)();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10013A638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10024F030();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)v12 - v8, a1);
  uint64_t result = sub_10001FA0C((uint64_t)v9, 1, a2);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v9, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_10013A758(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a3;
  uint64_t v13 = *(void *)(a8 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B028(&qword_100309768);
  uint64_t v16 = sub_10024FCF0();
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (uint64_t *)((char *)&v35 - v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v35 - v18, a2, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = *v19;
    swift_errorRetain();
    sub_1000B45E8(v21, 1, a6, v22, v23, v24, v25, v26, (uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
      v46,
      v47,
      v48);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v28 = (uint64_t *)(a5 + 16);
    (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 32))(v15, v19, a8);
    v35(a1, v15);
    uint64_t result = swift_beginAccess();
    uint64_t v34 = *v28 - 1;
    if (__OFSUB__(*v28, 1))
    {
      __break(1u);
    }
    else
    {
      *uint64_t v28 = v34;
      if (!v34) {
        sub_1000B45E8(0, 0, a6, v29, v30, v31, v32, v33, (uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
      }
          v46,
          v47,
          v48);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, a8);
    }
  }
  return result;
}

#error "10013AA34: call analysis failed (funcsize=50)"

uint64_t static EventLoopFuture.andAllComplete(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013AA84(a1, a2, a3, 1228, (void (*)(uint64_t, uint64_t))static EventLoopFuture.andAllComplete(_:promise:));
}

uint64_t sub_10013AA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  swift_getObjectType();
  sub_1000B7AA8();
  uint64_t v14 = EventLoop.makePromise<A>(of:file:line:)(v9, v10, v11, v12, a4, v13, v9, a3);
  a5(a1, v14);
  return v14;
}

uint64_t static EventLoopFuture.andAllComplete(_:promise:)()
{
  sub_10003C7F0();
  sub_10014143C();
  sub_1000B75E0();
  if (v2())
  {
    *(void *)(sub_100043C1C() + 16) = *(void *)(v0 + 80);
    sub_100141274();
    static EventLoopFuture._reduceCompletions0<A>(_:_:_:onResult:)();
  }
  else
  {
    uint64_t v3 = (void *)sub_100140C60();
    sub_10014110C(v3);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_100141B10();
    v1();
  }
  sub_10003C780();
  return swift_release();
}

void static EventLoopFuture._reduceCompletions0<A>(_:_:_:onResult:)()
{
  sub_10003C984();
  uint64_t v61 = v0;
  uint64_t v58 = v3;
  uint64_t v59 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_1000ACEB8();
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  uint64_t v53 = sub_10014157C();
  sub_10002F9C8();
  uint64_t v10 = v9;
  sub_10007A8E8();
  __chkstk_darwin(v11, v12);
  sub_100140C94();
  uint64_t v14 = v13;
  sub_10007A8E8();
  __chkstk_darwin(v15, v16);
  uint64_t v51 = (uint64_t)&v47 - v17;
  swift_getObjectType();
  sub_10002FD7C();
  uint64_t v55 = v8;
  uint64_t v56 = v6;
  EventLoop.assertInEventLoop(file:line:)(v18, v19, v20, 1325, v21, v6);
  uint64_t v22 = sub_100043C1C();
  uint64_t v23 = sub_1001417A8();
  *(void *)(v22 + 16) = v23;
  if (v23)
  {
    sub_10024EB40();
    swift_getWitnessTable();
    sub_10024E970();
    sub_1001414F8();
    sub_10024F6B0();
    uint64_t v57 = sub_10024F6D0();
    sub_10024F6C0();
    uint64_t v29 = v63;
    if (v63)
    {
      uint64_t v30 = v62;
      uint64_t v52 = v10 + 16;
      uint64_t v49 = v14 + 8;
      uint64_t v50 = v14 + 32;
      uint64_t v48 = v10 + 8;
      do
      {
        sub_10002FA28();
        uint64_t v32 = *(void *)(v29 + *(void *)(v31 + 96) + 8);
        swift_getObjectType();
        uint64_t v33 = v2;
        uint64_t v34 = v1;
        uint64_t v35 = *(uint64_t (**)(void))(v32 + 16);
        swift_unknownObjectRetain();
        sub_1001418FC();
        uint64_t v36 = v35();
        uint64_t v1 = v34;
        uint64_t v2 = v33;
        uint64_t v37 = v36;
        swift_unknownObjectRelease();
        if (v37)
        {
          sub_10002FA28();
          sub_10006FF20();
          uint64_t v37 = v53;
          sub_1001418F0();
          sub_100118854();
          v38();
          if (sub_10001FA0C(v33, 1, v54) != 1)
          {
            uint64_t v42 = v51;
            sub_100141778();
            v43();
            sub_10013B5D8(v30, v42, v58, v59, v22, v1, *(void *)(v61 + 80), v60);
            swift_release();
            uint64_t v44 = sub_1001418A0();
            v45(v44);
            goto LABEL_9;
          }
          uint64_t v39 = sub_1001419AC();
          v40(v39, v37);
        }
        EventLoopFuture.hop(to:)();
        uint64_t v41 = (void *)sub_100140DEC();
        *(void *)(v37 + 40) = sub_100140FEC(v41);
        *(void *)(v37 + 48) = v22;
        *(void *)(v37 + 56) = v1;
        *(void *)(v37 + 64) = v30;
        swift_retain();
        swift_retain();
        swift_retain();
        EventLoopFuture.whenComplete(_:)();
        swift_release();
        swift_release();
        swift_release();
LABEL_9:
        sub_10024F6C0();
        uint64_t v30 = v62;
        uint64_t v29 = v63;
      }
      while (v63);
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_10003C8C8();
  }
  else
  {
    sub_1000B45E8(0, 0, v1, v24, v25, v26, v27, v28, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
      v58,
      v59,
      v60);
    sub_10003C8C8();
    swift_release();
  }
}

uint64_t sub_10013AFB8()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  sub_1001414E8();
  *(void *)(sub_100043C1C() + 16) = *(void *)(v0 + 80);
  uint64_t v3 = sub_100141920();
  v2(v3);
  sub_10003C780();
  return swift_release();
}

uint64_t static EventLoopFuture.whenAllComplete(_:on:)()
{
  sub_100141658();
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  sub_10024EB40();
  sub_1000B7AA8();
  sub_100141A9C(v1, v2, v3, v4, 1269);
  sub_100141B64();
  static EventLoopFuture.whenAllComplete(_:promise:)();
  return v0;
}

void static EventLoopFuture.whenAllComplete(_:promise:)()
{
  sub_10003C984();
  uint64_t v23 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 80);
  sub_10001B028(&qword_100309768);
  sub_1001411AC();
  sub_100025FBC();
  sub_10007A8E8();
  __chkstk_darwin(v7, v8);
  sub_1001185C8();
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B7AA8();
  uint64_t v16 = EventLoop.makePromise<A>(of:file:line:)(v12, v13, v14, v15, 1285, ObjectType, v12, v10);
  uint64_t v17 = sub_100043C1C();
  sub_10013E928();
  *uint64_t v1 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  sub_10024EB20();
  *(void *)(v17 + 16) = sub_10024EB30();
  uint64_t v18 = sub_10004F2C8();
  *(void *)(v18 + 16) = v6;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = *(uint64_t (**)(void))(v10 + 16);
  swift_retain();
  sub_100140FE0();
  if (v19())
  {
    static EventLoopFuture._reduceCompletions0<A>(_:_:_:onResult:)();
  }
  else
  {
    uint64_t v20 = (void *)sub_100140DEC();
    void v20[2] = v23;
    v20[3] = v16;
    v20[4] = v5;
    void v20[5] = v9;
    v20[6] = v10;
    v20[7] = sub_10013E974;
    v20[8] = v18;
    uint64_t v21 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    v21(sub_10013E9C8, v20, ObjectType, v10);
    swift_release();
  }
  uint64_t v22 = (void *)sub_1001188D4();
  sub_100141308(v22);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100130028();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  sub_10003C8C8();
}

uint64_t sub_10013B36C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  sub_10001B028(&qword_100309768);
  uint64_t v6 = sub_10024FCF0();
  sub_10024EB40();
  sub_10024EAE0();
  uint64_t v7 = *(void *)(a3 + 16);
  sub_10013F158(a1, v7);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(v7+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * a1, a2, v6);
  return swift_endAccess();
}

uint64_t sub_10013B468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  return a8(a2, a3, a4, a5, a6, a7, *(void *)(a1 + 80));
}

uint64_t sub_10013B4B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v1 = *(void *)a1;
    swift_errorRetain();
    sub_10001B028(&qword_100309768);
    sub_10024FCF0();
    sub_10024EB40();
    EventLoopPromise.fail(_:)(v1);
    return sub_10003C3F0(v1, 1);
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10001B028(&qword_100309768);
    sub_10024FCF0();
    sub_10024EB40();
    EventLoopPromise.succeed(_:)();
    return swift_bridgeObjectRelease();
  }
}

#error "10013B63C: call analysis failed (funcsize=32)"

uint64_t sub_10013B658()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t EventLoopFuture.unwrap<A>(orError:)(uint64_t a1)
{
  sub_10004F2C8();
  sub_1001413B4();
  *(void *)(v3 + 16) = *(void *)(*(void *)(v2 + 80) + 16);
  *(void *)(v3 + 24) = a1;
  swift_errorRetain();
  sub_10002FD7C();
  EventLoopFuture.flatMapThrowing<A>(file:line:_:)();
  uint64_t v5 = v4;
  swift_release();
  return v5;
}

uint64_t sub_10013B71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10024F030();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - v9, a1, v6);
  if (sub_10001FA0C((uint64_t)v10, 1, a2) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v10, a2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  swift_willThrow();
  return swift_errorRetain();
}

uint64_t EventLoopFuture.unwrap<A>(orReplace:)()
{
  sub_10002FC68();
  uint64_t v1 = *(char **)(*(void *)(v0 + 80) + 16);
  sub_10002F9C8();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v17 - v6;
  sub_1000ACAD0();
  v8();
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  (*(void (**)(unint64_t, char *, char *))(v3 + 32))(v10 + v9, v7, v1);
  sub_10002FD7C();
  uint64_t v15 = EventLoopFuture.map<A>(file:line:_:)(v11, v12, v13, 1445, v14, v10, v1);
  swift_release();
  return v15;
}

uint64_t sub_10013B9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10024F030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - v11, a1, v8);
  if (sub_10001FA0C((uint64_t)v12, 1, a3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v12, a3);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, a2, a3);
}

uint64_t EventLoopFuture.unwrap<A>(orElse:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)sub_1001188D4();
  uint64_t v7 = *(char **)(*(void *)(v5 + 80) + 16);
  _OWORD v6[2] = v7;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  sub_10002FD7C();
  uint64_t v12 = EventLoopFuture.map<A>(file:line:_:)(v8, v9, v10, 1469, v11, (uint64_t)v6, v7);
  swift_release();
  return v12;
}

uint64_t sub_10013BBD8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10024F030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - v11, a1, v8);
  if (sub_10001FA0C((uint64_t)v12, 1, a3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v12, a3);
  }
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return a2(v13);
}

uint64_t EventLoopFuture.flatMapBlocking<A>(onto:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)sub_100140C60();
  void v9[2] = a4;
  v9[3] = a1;
  v9[4] = v4;
  v9[5] = a2;
  v9[6] = a3;
  id v10 = a1;
  swift_retain();
  swift_retain();
  sub_10002FD7C();
  EventLoopFuture.flatMap<A>(file:line:_:)();
  uint64_t v12 = v11;
  swift_release();
  return v12;
}

uint64_t sub_10013BDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[1] = a2;
  uint64_t v9 = *(void *)(*(void *)a3 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(a1, a1);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v15 = (uint64_t *)(v14 + *(void *)(v13 + 96));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  (*(void (**)(char *))(v10 + 16))((char *)v22 - v11);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v9;
  *((void *)v19 + 3) = a6;
  *((void *)v19 + 4) = a4;
  *((void *)v19 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v18], v12, v9);
  swift_retain();
  uint64_t v20 = OS_dispatch_queue.asyncWithFuture<A>(eventLoop:_:)(v16, v17, (uint64_t)sub_10013FDB0, (uint64_t)v19, a6);
  swift_release();
  return v20;
}

uint64_t EventLoopFuture.whenSuccessBlocking(onto:_:)()
{
  return sub_10013C618();
}

uint64_t sub_10013BFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v30 = a2;
  uint64_t v7 = sub_10024E2A0();
  uint64_t v29 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10024E2D0();
  uint64_t v11 = *(void *)(v28 - 8);
  uint64_t v13 = __chkstk_darwin(v28, v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a5 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v13, v18);
  uint64_t v19 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, a5);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v26;
  uint64_t v23 = v27;
  *((void *)v21 + 2) = a5;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = v23;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v21[v20], v19, a5);
  aBlock[4] = sub_10013FCBC;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = &unk_1002E7850;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  sub_10024E2C0();
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_100029BC0();
  sub_100019524(&qword_100309168);
  sub_100029C10();
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v28);
  return swift_release();
}

uint64_t EventLoopFuture.whenFailureBlocking(onto:_:)()
{
  sub_1001411C4();
  uint64_t v3 = (void *)sub_1001188D4();
  v3[2] = v2;
  v3[3] = v1;
  v3[4] = v0;
  id v4 = v2;
  swift_retain();
  EventLoopFuture.whenFailure(_:)((uint64_t)sub_10013EBFC, (uint64_t)v3);
  return swift_release();
}

uint64_t sub_10013C368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10024E2A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10024E2D0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = a1;
  aBlock[4] = sub_10013FBFC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = &unk_1002E7800;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_errorRetain();
  sub_10024E2C0();
  v20[1] = _swiftEmptyArrayStorage;
  sub_100029BC0();
  sub_100019524(&qword_100309168);
  sub_100029C10();
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

uint64_t EventLoopFuture.whenCompleteBlocking(onto:_:)()
{
  return sub_10013C618();
}

uint64_t sub_10013C618()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = *v0;
  uint64_t v12 = (void *)sub_1000AC8E4();
  void v12[2] = *(void *)(v11 + 80);
  uint64_t v12[3] = v10;
  v12[4] = v8;
  void v12[5] = v6;
  id v13 = v10;
  swift_retain();
  v2(v4, v12);
  sub_10003C780();
  return swift_release();
}

uint64_t sub_10013C6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v29 = a2;
  uint64_t v7 = sub_10024E2A0();
  uint64_t v28 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10024E2D0();
  uint64_t v11 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B028(&qword_100309768);
  uint64_t v15 = sub_10024FCF0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v25 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v25 - v18, a1, v15);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v25;
  *((void *)v21 + 2) = a5;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v21[v20], v19, v15);
  aBlock[4] = sub_10013FB6C;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = &unk_1002E77B0;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  sub_10024E2C0();
  uint64_t v30 = _swiftEmptyArrayStorage;
  sub_100029BC0();
  sub_100019524(&qword_100309168);
  sub_100029C10();
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v27);
  return swift_release();
}

Swift::Int _NIOEventLoopFutureIdentifier.hashValue.getter(Swift::UInt a1)
{
  return sub_10024FC70();
}

Swift::Int sub_10013CA5C()
{
  return _NIOEventLoopFutureIdentifier.hashValue.getter(*v0);
}

Swift::Int sub_10013CA64()
{
  Swift::UInt v1 = *v0;
  sub_10024FC00();
  sub_10024FC20(v1);
  return sub_10024FC70();
}

uint64_t sub_10013CAA8(void *a1, void *a2)
{
  return static _NIOEventLoopFutureIdentifier.__derived_struct_equals(_:_:)(*a1, *a2);
}

void *sub_10013CAB4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (pthread_cond_t *)swift_slowAlloc();
  v2[4] = v4;
  v2[2] = a1;
  type metadata accessor for Lock();
  sub_100043C1C();
  v2[3] = Lock.init()();
  uint64_t result = (void *)pthread_cond_init(v4, 0);
  if (!result) {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10013CB2C()
{
  return sub_100137674(v0[2], v0[3], v0[4]);
}

uint64_t sub_10013CB3C()
{
  return sub_1001354D8(*(uint64_t **)(v0 + 16), *(void (**)(char *))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10013CB4C()
{
  return sub_100133FE8(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013CB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  int v8 = *((_DWORD *)v3 + 2);
  uint64_t v9 = v3[2];
  int v10 = *((_DWORD *)v3 + 6);
  uint64_t v11 = v3[4];
  uint64_t v12 = v3[5];
  sub_100141640();
  uint64_t v14 = sub_10000CF7C(v13);
  uint64_t v15 = (unsigned int *)v14;
  if (!a2) {
    goto LABEL_14;
  }
  if (!a3) {
    goto LABEL_15;
  }
  if (a3 < 0) {
LABEL_17:
  }
    __break(1u);
  if (!v14)
  {
LABEL_14:
    a3 = 0;
    goto LABEL_15;
  }
  uint64_t v25 = v11;
  int v26 = v8;
  uint64_t v27 = v7;
  uint64_t v16 = 0;
  do
  {
    uint64_t v17 = *(void *)(v15 + 1);
    uint64_t v18 = sub_10000CFFC((uint64_t)v15);
    uint64_t v19 = *v15;
    uint64_t v20 = sub_10000D034(0);
    if (__OFSUB__(v19, v20))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v18) {
      uint64_t v21 = v18 + v19 - v20;
    }
    else {
      uint64_t v21 = 0;
    }
    sub_100141640();
    uint64_t v23 = sub_10000CFB0(v22, v15);
    uint64_t v15 = (unsigned int *)v23;
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v18;
    *(void *)(a2 + 16) = v21;
    *(unsigned char *)(a2 + 24) = 0;
    if (a3 - 1 == v16) {
      goto LABEL_13;
    }
    a2 += 32;
    ++v16;
  }
  while (v23);
  a3 = v16;
LABEL_13:
  uint64_t v7 = v27;
  int v8 = v26;
  uint64_t v11 = v25;
LABEL_15:
  *(void *)a1 = v7;
  *(_DWORD *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  *(_DWORD *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v15;
  return a3;
}

uint64_t *sub_10013CCC8(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a2)
  {
    a3 = 0;
    goto LABEL_25;
  }
  if (!a3)
  {
LABEL_25:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = a6;
    result[3] = a3;
    return (uint64_t *)a3;
  }
  if (a3 < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a4)
  {
    uint64_t v6 = 0;
    BOOL v8 = a6 - a5 == 0x8000000000000000 && a4 == -1;
    while (1)
    {
      if (a5)
      {
        if (v8) {
          goto LABEL_29;
        }
        if (v6 == (a6 - a5) / a4)
        {
LABEL_24:
          a3 = v6;
          goto LABEL_25;
        }
      }
      else if (!v6)
      {
        goto LABEL_24;
      }
      uint64_t v9 = v6 * a4;
      if ((unsigned __int128)(v6 * (__int128)a4) >> 64 != (v6 * a4) >> 63) {
        break;
      }
      uint64_t v10 = ++v6 * a4;
      if ((unsigned __int128)(v6 * (__int128)a4) >> 64 != (v6 * a4) >> 63) {
        goto LABEL_27;
      }
      if (v10 < v9) {
        goto LABEL_28;
      }
      uint64_t v11 = a5 + v9;
      uint64_t v12 = a5 + v10;
      if (!a5)
      {
        uint64_t v12 = 0;
        uint64_t v11 = 0;
      }
      *a2 = v11;
      a2[1] = v12;
      a2 += 2;
      if (a3 == v6) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_10013CD90()
{
  sub_10001B51C();
  uint64_t v4 = v3;
  uint64_t v5 = *v0;
  uint64_t v6 = *((unsigned int *)v0 + 2);
  uint64_t v7 = *(uint64_t *)((char *)v0 + 12);
  uint64_t v8 = *((unsigned __int16 *)v0 + 10);
  uint64_t v9 = *((unsigned __int8 *)v0 + 22);
  uint64_t v11 = v0[3];
  uint64_t v10 = v0[4];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v12 = v2;
  if (!v2) {
    goto LABEL_5;
  }
  if (v2 < 0) {
    goto LABEL_24;
  }
  if (v10 == v11)
  {
LABEL_5:
    uint64_t v13 = v11;
LABEL_6:
    *(void *)uint64_t v4 = v5;
    *(_DWORD *)(v4 + 8) = v6;
    *(void *)(v4 + 12) = v7;
    *(_WORD *)(v4 + 20) = v8;
    *(unsigned char *)(v4 + 22) = v9;
    *(void *)(v4 + 24) = v11;
    *(void *)(v4 + 32) = v10;
    *(void *)(v4 + 40) = v13;
    sub_10001B500();
    return;
  }
  v20[0] = v7;
  uint64_t v14 = (v7 - v6);
  if (v7 >= v6)
  {
    uint64_t v15 = v1;
    sub_10006FF20();
    uint64_t v7 = v20[0];
    if (v10 <= v11)
    {
LABEL_19:
      __break(1u);
LABEL_20:
      uint64_t v13 = v10;
      goto LABEL_6;
    }
    uint64_t v16 = *(void *)(v5 + 24) + (v9 | (v8 << 8)) + v6;
    uint64_t v17 = v12 - 1;
    uint64_t v13 = v11 + 1;
    while (1)
    {
      uint64_t v18 = v13 - 1 - v6;
      if (__OFSUB__(v13 - 1, v6)) {
        break;
      }
      if (v18 < 0) {
        goto LABEL_22;
      }
      if (v18 >= v14) {
        goto LABEL_23;
      }
      *uint64_t v15 = *(unsigned char *)(v16 + v18);
      if (!v17) {
        goto LABEL_6;
      }
      if (v10 == v13) {
        goto LABEL_20;
      }
      ++v15;
      --v17;
      BOOL v19 = v13 >= v11 && v13 < v10;
      ++v13;
      if (!v19) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
}

void sub_10013CEC4()
{
  sub_10003C984();
  char v4 = v3;
  uint64_t v5 = v2;
  uint64_t v7 = v6;
  if (!v0)
  {
LABEL_11:
    unint64_t v8 = 0;
    goto LABEL_14;
  }
  unint64_t v8 = v1;
  if (!v1)
  {
LABEL_14:
    *(void *)uint64_t v7 = v5;
    *(unsigned char *)(v7 + 8) = v4;
    *(void *)(v7 + 16) = v8;
    sub_10003C8C8();
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    if (*(void *)(v2 + 16))
    {
      uint64_t v9 = v0;
      uint64_t v10 = (uint64_t *)(v2 + 56);
      unint64_t v11 = 1;
      while (1)
      {
        uint64_t v12 = *(v10 - 1);
        uint64_t v13 = *v10;
        uint64_t v14 = *(v10 - 2);
        *uint64_t v9 = *(v10 - 3);
        v9[1] = v14;
        void v9[2] = v12;
        v9[3] = v13;
        if (v8 == v11) {
          break;
        }
        unint64_t v15 = *(void *)(v5 + 16);
        if (v11 == v15)
        {
          unint64_t v8 = v11;
          break;
        }
        v10 += 4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 += 4;
        if (v11++ >= v15)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  __break(1u);
}

void sub_10013CF98()
{
  sub_10003C7F0();
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v7 = v6;
  if (!v0 || !v1) {
    goto LABEL_5;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    unint64_t v8 = *(void *)(v2 + 16);
    if (v8 == v3)
    {
LABEL_5:
      *uint64_t v7 = v5;
      v7[1] = v4;
      sub_10003C780();
      return;
    }
    uint64_t v9 = v0;
    uint64_t v10 = 0;
    uint64_t v11 = v1 - 1;
    uint64_t v12 = v2 + 16 * v3 + 32;
    while (1)
    {
      uint64_t v13 = v10;
      if (v4 + v10 >= v8) {
        break;
      }
      *(_OWORD *)(v9 + 16 * v10) = *(_OWORD *)(v12 + 16 * v10);
      if (v11 == v10)
      {
        swift_unknownObjectRetain();
        v4 += v13 + 1;
        goto LABEL_5;
      }
      swift_unknownObjectRetain();
      unint64_t v8 = *(void *)(v5 + 16);
      uint64_t v10 = v13 + 1;
      if (v4 + v13 + 1 == v8)
      {
        v4 += v13 + 1;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10013D070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a5 < 0) {
    goto LABEL_31;
  }
  if (HIDWORD(a5)) {
    goto LABEL_30;
  }
  if (!a2)
  {
    a3 = 0;
    *(void *)a1 = a4;
    *(void *)(a1 + 8) = a5;
    *(void *)(a1 + 16) = a6;
    *(_DWORD *)(a1 + 24) = a5;
    *(_DWORD *)(a1 + 28) = 0x1FFFFFF;
    return a3;
  }
  if (!a3)
  {
    BOOL v11 = 1;
    LODWORD(v8) = a5;
LABEL_23:
    *(void *)a1 = a4;
    *(void *)(a1 + 8) = a5;
    *(void *)(a1 + 16) = a6;
    *(_DWORD *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 28) = -1;
    *(unsigned char *)(a1 + 30) = -1;
LABEL_25:
    *(unsigned char *)(a1 + 31) = v11;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_28;
  }
  if (a6 < 0)
  {
LABEL_31:
    sub_10003C4F8();
    sub_10003C6E8();
    goto LABEL_32;
  }
  if (!HIDWORD(a6))
  {
    uint64_t v6 = 0;
    if (a5 == a6 && a6 >= a5)
    {
      BOOL v11 = 1;
LABEL_24:
      *(void *)a1 = a4;
      *(void *)(a1 + 8) = a5;
      *(void *)(a1 + 16) = a6;
      *(_DWORD *)(a1 + 24) = a6;
      *(_WORD *)(a1 + 28) = -1;
      *(unsigned char *)(a1 + 30) = -1;
      a3 = v6;
      goto LABEL_25;
    }
    LODWORD(v8) = a5;
    while (1)
    {
      unint64_t v9 = *(void *)(a4 + 16);
      if (v9 <= v8) {
        break;
      }
      uint64_t v10 = (unsigned char *)(a4 + 32 + 2 * v8);
      if (v10[1]) {
        goto LABEL_29;
      }
      uint64_t v8 = (v9 - 1) & (v8 + 1);
      if (HIDWORD(v8)) {
        goto LABEL_30;
      }
      BOOL v11 = v8 >= a5;
      *(unsigned char *)(a2 + v6) = *v10;
      if (a3 - 1 == v6) {
        goto LABEL_23;
      }
      ++v6;
      if (v8 == a6 && a6 < a5 != v8 >= a5) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
LABEL_30:
  sub_10003C4F8();
  sub_10003C6D8();
LABEL_32:
  uint64_t result = sub_10003C850();
  __break(1u);
  return result;
}

void *sub_10013D208(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_36:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_18;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    int64_t v13 = v8;
LABEL_18:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_19;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
    goto LABEL_18;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    unint64_t v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10013D39C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7 = a7;
  uint64_t v11 = result;
  unint64_t v12 = HIWORD(a7);
  unint64_t v13 = HIDWORD(a7);
  if (!a2)
  {
    uint64_t v15 = 0;
    uint64_t result = 0;
    goto LABEL_16;
  }
  uint64_t v14 = a3;
  if (!a3)
  {
    uint64_t v15 = 0;
LABEL_15:
    uint64_t result = v14;
    goto LABEL_16;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v15 = a4;
  uint64_t result = a4;
  if (!a4)
  {
LABEL_16:
    *(void *)uint64_t v11 = a4;
    *(void *)(v11 + 8) = a5;
    *(void *)(v11 + 16) = a6;
    *(_DWORD *)(v11 + 24) = v7;
    *(unsigned char *)(v11 + 30) = v12;
    *(_WORD *)(v11 + 28) = v13;
    *(void *)(v11 + 32) = v15;
    return result;
  }
  if (a4 >= 1)
  {
    *(void *)a2 = a5;
    *(void *)(a2 + 8) = a6;
    *(_DWORD *)(a2 + 16) = a7;
    *(unsigned char *)(a2 + 22) = BYTE6(a7);
    *(_WORD *)(a2 + 20) = WORD2(a7);
    if (a3 != 1)
    {
      uint64_t v16 = a2 + 40;
      uint64_t v17 = 1;
      while (a4 != v17)
      {
        ++v17;
        *(void *)(v16 - 16) = a5;
        *(void *)(v16 - 8) = a6;
        *(_DWORD *)uint64_t v16 = v7;
        *(unsigned char *)(v16 + 6) = v12;
        *(_WORD *)(v16 + 4) = v13;
        swift_retain();
        v16 += 24;
        if (v14 == v17) {
          goto LABEL_14;
        }
      }
      uint64_t v14 = a4;
    }
LABEL_14:
    swift_retain();
    uint64_t v15 = v14;
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10013D4B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v11 = result;
  if (!a2)
  {
    uint64_t v13 = 0;
    uint64_t result = 0;
    goto LABEL_16;
  }
  uint64_t v12 = a3;
  if (!a3)
  {
    uint64_t v13 = 0;
LABEL_15:
    uint64_t result = v12;
    goto LABEL_16;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v13 = a4;
  uint64_t result = a4;
  if (!a4)
  {
LABEL_16:
    *(void *)uint64_t v11 = a4;
    *(void *)(v11 + 8) = a5;
    *(void *)(v11 + 16) = a6;
    *(unsigned char *)(v11 + 24) = a7;
    *(void *)(v11 + 32) = v13;
    return result;
  }
  if (a4 >= 1)
  {
    *(void *)a2 = a5;
    *(void *)(a2 + 8) = a6;
    *(unsigned char *)(a2 + 16) = a7;
    if (a3 != 1)
    {
      uint64_t v14 = (unsigned char *)(a2 + 40);
      uint64_t v15 = 1;
      while (a4 != v15)
      {
        ++v15;
        *((void *)v14 - 2) = a5;
        *((void *)v14 - 1) = a6;
        *uint64_t v14 = a7;
        v14 += 24;
        sub_10003C1B8(a5);
        if (v12 == v15) {
          goto LABEL_14;
        }
      }
      uint64_t v12 = a4;
    }
LABEL_14:
    sub_10003C1B8(a5);
    uint64_t v13 = v12;
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10013D5B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = result;
  long long v6 = *(_OWORD *)v3;
  long long v7 = *((_OWORD *)v3 + 1);
  long long v8 = *((_OWORD *)v3 + 2);
  long long v9 = *((_OWORD *)v3 + 3);
  uint64_t v10 = v3[8];
  if (!a2)
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
LABEL_16:
    *(_OWORD *)uint64_t v5 = v6;
    *(_OWORD *)(v5 + 16) = v7;
    *(_OWORD *)(v5 + 32) = v8;
    *(_OWORD *)(v5 + 48) = v9;
    *(void *)(v5 + 64) = v10;
    *(void *)(v5 + 72) = v12;
    return v11;
  }
  uint64_t v11 = a3;
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_16;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v6;
  if (!(void)v6)
  {
    uint64_t v11 = 0;
    goto LABEL_16;
  }
  long long v16 = v9;
  long long v17 = v8;
  long long v18 = v7;
  long long v19 = v6;
  uint64_t result = sub_100140768((uint64_t)(v4 + 1), (uint64_t)v20, &qword_10030A588);
  if (v12 >= 1)
  {
    sub_100140768((uint64_t)v20, a2, &qword_10030A588);
    if (v11 != 1)
    {
      uint64_t v14 = a2 + 64;
      uint64_t v15 = 1;
      while (v12 != v15)
      {
        ++v15;
        sub_100140768((uint64_t)v20, v14, &qword_10030A588);
        sub_10013F2FC(v4);
        v14 += 64;
        if (v11 == v15) {
          goto LABEL_15;
        }
      }
      uint64_t v11 = v12;
    }
LABEL_15:
    sub_10013F2FC(v4);
    uint64_t v12 = v11;
    long long v7 = v18;
    long long v6 = v19;
    long long v9 = v16;
    long long v8 = v17;
    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_10013D6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_10001B51C();
  a25 = v26;
  a26 = v30;
  unint64_t v32 = v31;
  uint64_t v34 = v33;
  unint64_t v35 = v29;
  uint64_t v37 = v36;
  if (!v27)
  {
    uint64_t v39 = 0;
    goto LABEL_23;
  }
  unint64_t v38 = v28;
  if (!v28)
  {
    uint64_t v39 = 0;
    goto LABEL_23;
  }
  if ((v28 & 0x8000000000000000) != 0)
  {
LABEL_28:
    __break(1u);
  }
  else if (!(v29 >> 62))
  {
    uint64_t v39 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_6;
  }
  uint64_t v43 = v27;
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_10024F6F0();
  swift_bridgeObjectRelease();
  uint64_t v27 = v43;
LABEL_6:
  if (v39)
  {
    unint64_t v40 = 0;
    uint64_t v41 = 1;
    unint64_t v44 = v38;
    while (2)
    {
      uint64_t v45 = v41;
      uint64_t v46 = v27;
      unint64_t v38 = v40;
      while (1)
      {
        if ((v35 & 0xC000000000000001) != 0)
        {
          uint64_t v42 = sub_10024F380();
        }
        else
        {
          if ((v38 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          if (v38 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_26;
          }
          uint64_t v42 = *(void *)(v35 + 8 * v38 + 32);
          swift_retain();
        }
        unint64_t v40 = v38 + 1;
        if (__OFADD__(v38, 1)) {
          goto LABEL_27;
        }
        a14 = v42;
        if (v34(&a14)) {
          break;
        }
        swift_release();
        ++v38;
        if (v40 == v39) {
          goto LABEL_23;
        }
      }
      *uint64_t v46 = v42;
      if (v45 == v44)
      {
        uint64_t v39 = v38 + 1;
      }
      else
      {
        uint64_t v27 = v46 + 1;
        uint64_t v41 = v45 + 1;
        if (v40 != v39) {
          continue;
        }
      }
      break;
    }
  }
LABEL_23:
  *uint64_t v37 = v35;
  v37[1] = v39;
  v37[2] = (unint64_t)v34;
  v37[3] = v32;
  sub_10001B500();
}

void sub_10013D878()
{
  sub_1000B7690();
  uint64_t v6 = v5;
  uint64_t v7 = v5 + 56;
  sub_100141148();
  if (v9 && (uint64_t v10 = v8) != 0)
  {
    if (v8 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      sub_100140EBC();
      if (!v2) {
        goto LABEL_6;
      }
LABEL_5:
      sub_100141610();
      while (1)
      {
        ++v1;
        uint64_t v13 = (void *)(*(void *)(v6 + 48) + 16 * v11);
        uint64_t v14 = v13[1];
        *uint64_t v0 = *v13;
        v0[1] = v14;
        if (v1 == v10)
        {
          swift_bridgeObjectRetain();
          goto LABEL_28;
        }
        v0 += 2;
        swift_bridgeObjectRetain();
        if (v2) {
          goto LABEL_5;
        }
LABEL_6:
        uint64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v12 >= v3) {
          goto LABEL_28;
        }
        if (!*(void *)(v7 + 8 * v12))
        {
          v4 += 2;
          if (v12 + 1 >= v3) {
            goto LABEL_28;
          }
          if (!*(void *)(v7 + 8 * v4))
          {
            if (v12 + 2 >= v3) {
              goto LABEL_28;
            }
            if (!*(void *)(v7 + 8 * (v12 + 2)))
            {
              uint64_t v4 = v12 + 3;
              if (v12 + 3 >= v3) {
                goto LABEL_28;
              }
              if (!*(void *)(v7 + 8 * v4))
              {
                uint64_t v15 = v12 + 4;
                if (v12 + 4 >= v3) {
                  goto LABEL_28;
                }
                if (!*(void *)(v7 + 8 * v15)) {
                  break;
                }
              }
            }
          }
        }
LABEL_14:
        sub_1001412C4();
      }
      while (1)
      {
        uint64_t v16 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v16 >= v3) {
          goto LABEL_28;
        }
        ++v15;
        if (*(void *)(v7 + 8 * v16)) {
          goto LABEL_14;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    sub_1001414B0();
    sub_1000B75A4();
  }
}

uint64_t sub_10013D9F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = (uint64_t)memcpy(__dst, v4, 0x41uLL);
  __dst[9] = 0;
  if (!a2)
  {
LABEL_12:
    a3 = 0;
    goto LABEL_13;
  }
  if (!a3)
  {
LABEL_13:
    memcpy(a1, __dst, 0x50uLL);
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (__dst[0])
    {
      uint64_t v9 = 1;
      while (1)
      {
        sub_100140710((uint64_t)__dst, (uint64_t)v13, &qword_100311080);
        uint64_t v10 = v13[0];
        uint64_t result = sub_10003C3FC((uint64_t)v13, &qword_100311080);
        if (v9 - 1 >= v10) {
          break;
        }
        if (v9 - 1 >= __dst[0]) {
          goto LABEL_15;
        }
        __dst[9] = v9;
        sub_100140710((uint64_t)&__dst[1], a2, &qword_10030A508);
        if (a3 == v9) {
          goto LABEL_13;
        }
        a2 += 64;
        uint64_t v11 = v9 + 1;
        if (v9++ == __dst[0])
        {
          a3 = v11 - 1;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10013DB28(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = result;
  long long v6 = *(_OWORD *)v3;
  long long v7 = *((_OWORD *)v3 + 1);
  uint64_t v8 = v3[4];
  if (!a2)
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
LABEL_16:
    *(_OWORD *)uint64_t v5 = v6;
    *(_OWORD *)(v5 + 16) = v7;
    *(void *)(v5 + 32) = v8;
    *(void *)(v5 + 40) = v10;
    return v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    uint64_t v10 = 0;
    goto LABEL_16;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = v6;
  if (!(void)v6)
  {
    uint64_t v9 = 0;
    goto LABEL_16;
  }
  long long v14 = v7;
  long long v15 = v6;
  uint64_t result = sub_100140768((uint64_t)(v4 + 1), (uint64_t)v16, &qword_10030A408);
  if (v10 >= 1)
  {
    sub_100140768((uint64_t)v16, a2, &qword_10030A408);
    if (v9 != 1)
    {
      uint64_t v12 = a2 + 32;
      uint64_t v13 = 1;
      while (v10 != v13)
      {
        ++v13;
        sub_100140768((uint64_t)v16, v12, &qword_10030A408);
        sub_10013F41C(v4);
        v12 += 32;
        if (v9 == v13) {
          goto LABEL_15;
        }
      }
      uint64_t v9 = v10;
    }
LABEL_15:
    sub_10013F41C(v4);
    uint64_t v10 = v9;
    long long v7 = v14;
    long long v6 = v15;
    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10013DC54(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = (uint64_t)memcpy(__dst, v4, 0x50uLL);
  void __dst[10] = 0;
  if (!a2)
  {
LABEL_12:
    a3 = 0;
    goto LABEL_13;
  }
  if (!a3)
  {
LABEL_13:
    memcpy(a1, __dst, 0x58uLL);
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (__dst[0])
    {
      uint64_t v9 = 1;
      while (1)
      {
        sub_100140710((uint64_t)__dst, (uint64_t)v13, &qword_100311098);
        uint64_t v10 = v13[0];
        uint64_t result = sub_10003C3FC((uint64_t)v13, &qword_100311098);
        if (v9 - 1 >= v10) {
          break;
        }
        if (v9 - 1 >= __dst[0]) {
          goto LABEL_15;
        }
        void __dst[10] = v9;
        sub_100140710((uint64_t)&__dst[1], a2, &qword_10030A550);
        if (a3 == v9) {
          goto LABEL_13;
        }
        a2 += 72;
        uint64_t v11 = v9 + 1;
        if (v9++ == __dst[0])
        {
          a3 = v11 - 1;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10013DD84(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = (uint64_t)memcpy(__dst, v4, 0x42uLL);
  __dst[9] = 0;
  if (!a2)
  {
LABEL_12:
    a3 = 0;
    goto LABEL_13;
  }
  if (!a3)
  {
LABEL_13:
    memcpy(a1, __dst, 0x50uLL);
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (__dst[0])
    {
      uint64_t v9 = 1;
      while (1)
      {
        sub_100140710((uint64_t)__dst, (uint64_t)v13, &qword_1003110C0);
        uint64_t v10 = v13[0];
        uint64_t result = sub_10003C3FC((uint64_t)v13, &qword_1003110C0);
        if (v9 - 1 >= v10) {
          break;
        }
        if (v9 - 1 >= __dst[0]) {
          goto LABEL_15;
        }
        __dst[9] = v9;
        sub_100140710((uint64_t)&__dst[1], a2, &qword_10030A1F0);
        if (a3 == v9) {
          goto LABEL_13;
        }
        a2 += 64;
        uint64_t v11 = v9 + 1;
        if (v9++ == __dst[0])
        {
          a3 = v11 - 1;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_10013DEB4()
{
  sub_1000B7690();
  uint64_t v6 = v5;
  uint64_t v7 = v5 + 64;
  sub_100141148();
  if (v9 && (uint64_t v10 = v8) != 0)
  {
    if (v8 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      sub_100140EBC();
      if (!v2) {
        goto LABEL_6;
      }
LABEL_5:
      sub_100141610();
      while (1)
      {
        ++v1;
        uint64_t v13 = *(void **)(*(void *)(v6 + 56) + 8 * v11);
        *uint64_t v0 = v13;
        if (v1 == v10)
        {
          id v17 = v13;
          goto LABEL_28;
        }
        ++v0;
        id v14 = v13;
        if (v2) {
          goto LABEL_5;
        }
LABEL_6:
        uint64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v12 >= v3) {
          goto LABEL_28;
        }
        if (!*(void *)(v7 + 8 * v12))
        {
          v4 += 2;
          if (v12 + 1 >= v3) {
            goto LABEL_28;
          }
          if (!*(void *)(v7 + 8 * v4))
          {
            if (v12 + 2 >= v3) {
              goto LABEL_28;
            }
            if (!*(void *)(v7 + 8 * (v12 + 2)))
            {
              uint64_t v4 = v12 + 3;
              if (v12 + 3 >= v3) {
                goto LABEL_28;
              }
              if (!*(void *)(v7 + 8 * v4))
              {
                uint64_t v15 = v12 + 4;
                if (v12 + 4 >= v3) {
                  goto LABEL_28;
                }
                if (!*(void *)(v7 + 8 * v15)) {
                  break;
                }
              }
            }
          }
        }
LABEL_14:
        sub_1001412C4();
      }
      while (1)
      {
        uint64_t v16 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v16 >= v3) {
          goto LABEL_28;
        }
        ++v15;
        if (*(void *)(v7 + 8 * v16)) {
          goto LABEL_14;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    sub_1001414B0();
    sub_1000B75A4();
  }
}

void sub_10013E030()
{
  sub_10003C7F0();
  uint64_t v6 = v4;
  uint64_t v7 = v3;
  uint64_t v8 = v2;
  uint64_t v10 = v9;
  if (!v0)
  {
    uint64_t v12 = 0;
    goto LABEL_15;
  }
  uint64_t v11 = v1;
  if (!v1)
  {
    uint64_t v12 = 0;
    goto LABEL_15;
  }
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v12 = v2;
  if (!v2)
  {
LABEL_15:
    *uint64_t v10 = v8;
    v10[1] = v7;
    v10[2] = v6;
    void v10[3] = v12;
    sub_10003C780();
    return;
  }
  if (v2 >= 1)
  {
    uint64_t v13 = v5;
    *uint64_t v0 = v3;
    v0[1] = v4;
    if (v1 != 1)
    {
      id v14 = v0 + 3;
      uint64_t v15 = 1;
      while (v8 != v15)
      {
        ++v15;
        *(v14 - 1) = v7;
        *id v14 = v6;
        v13(v7, v6);
        v14 += 2;
        if (v11 == v15) {
          goto LABEL_14;
        }
      }
      uint64_t v11 = v8;
    }
LABEL_14:
    v13(v7, v6);
    uint64_t v12 = v11;
    goto LABEL_15;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_10013E118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x8000000000000000) != 0) {
    goto LABEL_16;
  }
  if (HIDWORD(a5))
  {
LABEL_26:
    sub_10003C4F8();
    sub_10003C6D8();
    goto LABEL_27;
  }
  sub_10014184C();
  if (!v16)
  {
    sub_10014139C(v14);
    return v36;
  }
  if (!v15)
  {
    LOBYTE(v17) = 1;
LABEL_21:
    sub_100140EFC(v14, v17);
    return v36;
  }
  if (v15 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v46 = v14;
  uint64_t v48 = v15;
  if ((v6 & 0x8000000000000000) == 0)
  {
    sub_1001410AC();
    while (!v5)
    {
      if (v10 == v12 && (((v6 < (uint64_t)a5) ^ v17) & 1) != 0)
      {
        sub_100140D58(v17, v38, v40, v42, v44, v46);
        return v36;
      }
      if (*(void *)(v7 + 16) <= v10)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v18 = sub_100140710(v9 + (v10 << 6), (uint64_t)&v50, &qword_10030A508);
      if (v57 == 255) {
        goto LABEL_25;
      }
      sub_100140D04(v18, v19, v20, v21, v22, v23, v24, v25, v38, v40, v42, v44, v46, v48, v50, v51, v52, v53, v54,
        v55,
        v56,
        v57);
      if (v34) {
        goto LABEL_26;
      }
      sub_100140B58(v26, v27, v28, v29, v30, v31, v32, v33, v39, v41, v43, v45, v47, v49, v50, v51, v52, v53, v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63);
      if (v35)
      {
        uint64_t v14 = v46;
        goto LABEL_21;
      }
      v8 += 64;
      ++v11;
      if (v6 < 0) {
        goto LABEL_16;
      }
    }
    goto LABEL_26;
  }
LABEL_16:
  sub_10003C4F8();
  sub_10003C6E8();
LABEL_27:
  uint64_t result = sub_10003C850();
  __break(1u);
  return result;
}

uint64_t sub_10013E270()
{
  sub_10003C7F0();
  sub_10001B028(&qword_100309768);
  sub_1001411AC();
  sub_100140D38();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_10007A8C4();
    sub_10014179C();
    v0();
  }
  sub_10003C780();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10013E354()
{
  sub_10001B028(&qword_100309768);
  uint64_t v0 = sub_1001411AC();
  sub_100140E4C(v0);
  return sub_1001268A0();
}

uint64_t sub_10013E3C0()
{
  return sub_100135420(v0[2], v0[3], v0[4], (void (*)(uint64_t, uint64_t))EventLoopFuture._addCallback(_:));
}

uint64_t sub_10013E3F8()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E438()
{
  return sub_10013E514((uint64_t (*)(void, void, void, void, void))sub_100131F7C);
}

uint64_t sub_10013E450()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001410EC();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E490()
{
  return sub_10013457C(*(uint64_t **)(v0 + 40), *(void (**)(char *))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10013E4A8()
{
  return sub_1001350A4(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013E4B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E4FC()
{
  return sub_10013E514((uint64_t (*)(void, void, void, void, void))sub_1001361F4);
}

uint64_t sub_10013E514(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[3], v1[4], v1[5], v1[6], v1[2]);
}

uint64_t sub_10013E530()
{
  return sub_1001369C0(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10013E540()
{
  return EventLoopPromise.succeed(_:)();
}

uint64_t sub_10013E548()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001414D8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E590()
{
  return sub_100137EC8(v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_10013E5A0()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_1001414D8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E5D8(uint64_t a1, uint64_t a2)
{
  return sub_100137FF0(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(uint64_t, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16));
}

uint64_t sub_10013E5E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001410EC();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_10013E628(uint64_t a1, uint64_t a2)
{
  sub_100138394(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(uint64_t, uint64_t))(v2 + 48));
}

uint64_t sub_10013E65C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001414D8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E69C()
{
  return sub_100138488(v0[4], v0[5], v0[6], v0[7], v0[2]);
}

uint64_t sub_10013E6AC()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E6DC()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E714(uint64_t a1)
{
  return sub_1001385FC(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10013E724()
{
  return sub_10014031C();
}

uint64_t sub_10013E750()
{
  return sub_10013E888();
}

uint64_t sub_10013E790(uint64_t a1)
{
  return sub_10013E908(a1, (uint64_t (*)(void, uint64_t, void, void, void, void, void, void))sub_10013A758);
}

uint64_t sub_10013E7A8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013E7E0(unint64_t a1, uint64_t a2)
{
  return sub_10013A314(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 16));
}

uint64_t sub_10013E7EC()
{
  return sub_10013E9E0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))static EventLoopFuture._reduceSuccesses0<A>(_:_:_:onValue:));
}

uint64_t sub_10013E804()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013E81C(uint64_t a1)
{
  return sub_10013A498(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_10013E828()
{
  return sub_10014031C();
}

uint64_t sub_10013E854()
{
  return sub_10013E888();
}

uint64_t sub_10013E888()
{
  return sub_10013AFB8();
}

uint64_t sub_10013E8B0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001410EC();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E8F0(uint64_t a1)
{
  return sub_10013E908(a1, (uint64_t (*)(void, uint64_t, void, void, void, void, void, void))sub_10013B5D8);
}

uint64_t sub_10013E908(uint64_t a1, uint64_t (*a2)(void, uint64_t, void, void, void, void, void, void))
{
  return a2(v2[8], a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3]);
}

unint64_t sub_10013E928()
{
  unint64_t result = qword_100310F70;
  if (!qword_100310F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310F70);
  }
  return result;
}

uint64_t sub_10013E974(unint64_t a1, uint64_t a2)
{
  return sub_10013B36C(a1, a2, *(void *)(v2 + 24));
}

uint64_t sub_10013E980()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_1001410EC();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013E9C8()
{
  return sub_10013E9E0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))static EventLoopFuture._reduceCompletions0<A>(_:_:_:onResult:));
}

uint64_t sub_10013E9E0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  return sub_10013B468(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_10013EA0C()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013EA24(uint64_t a1)
{
  return sub_10013B4B0(a1);
}

uint64_t sub_10013EA30()
{
  swift_errorRelease();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013EA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013B71C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10013EA7C()
{
  sub_10007A8C4();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10013EB00()
{
  sub_100141198();
  return sub_10013B9AC(v2, v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v3, v4);
}

uint64_t sub_10013EB28()
{
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013EB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013BBD8(a1, *(uint64_t (**)(uint64_t))(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t sub_10013EB64()
{
  swift_release();
  swift_release();
  uint64_t v1 = sub_1000B7BF8();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10013EBA4(uint64_t a1)
{
  return sub_10013BDDC(a1, v1[3], v1[4], v1[5], v1[6], v1[2]);
}

uint64_t sub_10013EBB8(uint64_t a1)
{
  return sub_10013BFB0(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_10013EBC4()
{
  swift_release();
  uint64_t v1 = sub_100140E60();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10013EBFC(uint64_t a1)
{
  return sub_10013C368(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10013EC0C()
{
  swift_release();
  uint64_t v1 = sub_10004F264();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10013EC44(uint64_t a1)
{
  return sub_10013C6B4(a1, v1[3], v1[4], v1[5], v1[2]);
}

unint64_t sub_10013EC54()
{
  unint64_t result = qword_100310F78[0];
  if (!qword_100310F78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100310F78);
  }
  return result;
}

uint64_t destroy for CallbackList(void *a1)
{
  if (*a1) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void *_s25ASOctaneSupportXPCService12CallbackListVwCP_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CallbackList(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
LABEL_8:
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CallbackList(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
LABEL_8:
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for CallbackList()
{
}

void type metadata accessor for OperationPlaceholderError()
{
}

uint64_t type metadata accessor for EventLoopPromise()
{
  return sub_10002F7A4();
}

uint64_t sub_10013EE80()
{
  sub_10001B028(&qword_100309768);
  sub_10024FCF0();
  uint64_t result = sub_10024F030();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for _NIOEventLoopFutureIdentifier()
{
}

uint64_t sub_10013EF60()
{
  return sub_100132A88(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t *__return_ptr, void *))(v0 + 32));
}

uint64_t sub_10013EF70()
{
  return sub_100135420(v0[2], v0[3], v0[4], (void (*)(uint64_t, uint64_t))sub_10012A24C);
}

uint64_t sub_10013EFA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (HIBYTE(a8) != 255) {
    return sub_10013EFE0(result, a2, a3, a4, a5, a6, a7, a8, HIBYTE(a8) & 1);
  }
  return result;
}

uint64_t sub_10013EFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    return swift_errorRetain();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_100065938(a4, a5, a6);
  }
}

uint64_t sub_10013F080(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (HIBYTE(a8) != 255) {
    return sub_10013F0B8(result, a2, a3, a4, a5, a6, a7, a8, HIBYTE(a8) & 1);
  }
  return result;
}

uint64_t sub_10013F0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100045868(a4, a5, a6);
  }
}

uint64_t sub_10013F158(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_10013F1AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a8 + 32) = a1;
  *(void *)(a8 + 40) = a10;
  *(void *)(a8 + 16) = a2;
  *(unsigned char *)(a8 + 24) = a3;
  *(void *)(a8 + 56) = 0;
  *(void *)(a8 + 64) = 0;
  *(void *)(a8 + 48) = 0;
  return a8;
}

uint64_t sub_10013F1D4()
{
  return sub_100134FB8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_10013F1EC()
{
  return sub_100132ED0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t *))(v0 + 32));
}

uint64_t sub_10013F200(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1000B6B84(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10013F218(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100140560(result, a2 & 1, (uint64_t (*)(void))&_swift_bridgeObjectRelease);
  }
  return result;
}

uint64_t sub_10013F26C()
{
  return sub_1001A6564(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_10013F27C()
{
  return sub_100135470(v0[2], v0[3], v0[4], (void (*)(uint64_t, uint64_t))sub_10012D568);
}

uint64_t sub_10013F2B4(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1000B6AE4(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_10013F2CC(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10003C23C(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_10013F2E8()
{
  return sub_100135868(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t *sub_10013F2FC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10013F338()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10013F364()
{
  return sub_100131E64(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_10013F37C()
{
  return sub_100127504(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013F390()
{
  return sub_100140A28();
}

uint64_t sub_10013F3A8(uint64_t a1, uint64_t a2)
{
  return sub_1000B51E8(a1, *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_10013F3BC()
{
  return sub_1001277D0(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013F3D0()
{
  return sub_100140A28();
}

void sub_10013F3E8()
{
  sub_100128060(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10013F408()
{
  return sub_10013750C(v0[2], v0[3], v0[4]);
}

uint64_t *sub_10013F41C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10013F460()
{
  return sub_1001375D8();
}

uint64_t sub_10013F488()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013F4CC()
{
  return sub_100132D14(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t *__return_ptr))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013F4E0(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_10004F084(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10013F4F8(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_10003C3F0(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10013F514()
{
  return sub_10013F540();
}

uint64_t sub_10013F540()
{
  uint64_t v0 = sub_1001417E4();
  return sub_100136878(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10013F568()
{
  return sub_1001360D4(v0[2], v0[3], v0[4], v0[5], (uint64_t (*)(uint64_t, uint64_t))sub_1001FB58C, (void (*)(uint64_t, uint64_t))sub_1001407CC, (void (*)(uint64_t, void))sub_10003C3F0);
}

uint64_t sub_10013F5D0()
{
  return sub_10013F540();
}

uint64_t sub_10013F604()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013F658()
{
  return sub_1001360D4(v0[2], v0[3], v0[4], v0[5], (uint64_t (*)(uint64_t, uint64_t))sub_1001FB5B8, (void (*)(uint64_t, uint64_t))sub_1001407CC, (void (*)(uint64_t, void))sub_1001407C0);
}

uint64_t sub_10013F6BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013F708()
{
  return sub_1001357D8(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_10013F720()
{
  return sub_1001A64E0(*(void *)(v0 + 16), *(void (**)(uint64_t *))(v0 + 24));
}

uint64_t sub_10013F734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10013A9A0(*(void *)a1, *(unsigned __int8 *)(a1 + 8), a2, a3, a4, a5, a6);
}

uint64_t sub_10013F758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100019524(&qword_10030AE38);
  uint64_t result = sub_100140DEC();
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a7;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 48) = 0;
  return result;
}

uint64_t sub_10013F7A0(void *a1)
{
  return Scheduled._promise.getter(*a1);
}

uint64_t sub_10013F7A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a9 + 40) = a1;
  *(void *)(a9 + 48) = a11;
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(unsigned char *)(a9 + 32) = a4;
  *(void *)(a9 + 64) = 0;
  *(void *)(a9 + 72) = 0;
  *(void *)(a9 + 56) = 0;
  return a9;
}

uint64_t sub_10013F7D4()
{
  return sub_100133E68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_10013F7E8()
{
  return sub_100140A28();
}

uint64_t sub_10013F800()
{
  return sub_1001343F8(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t, uint64_t, void))sub_1000B6AE4, (uint64_t (*)(uint64_t, uint64_t, void))sub_1001FB63C, (void (*)(uint64_t))sub_10013F2CC);
}

uint64_t sub_10013F858()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013F870()
{
  return sub_100135BE0(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (void (*)(void))sub_1000B6AE4, (void (*)(uint64_t, uint64_t, void))sub_10003C23C);
}

uint64_t sub_10013F8BC()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013F8D8()
{
  return sub_100132DEC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t *__return_ptr))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013F8EC()
{
  return sub_1000E223C(v0, 20);
}

uint64_t sub_10013F8F8(uint64_t a1)
{
  return sub_100169224(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_10013F918()
{
  return sub_1001324FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_10013F928()
{
  return sub_1000E223C(v0, 20);
}

uint64_t sub_10013F938()
{
  swift_unknownObjectRelease();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013F968(uint64_t a1)
{
  return sub_100168AC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10013F99C()
{
  return sub_100127AA8(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013F9B0(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100140560(result, a2 & 1, (uint64_t (*)(void))&_swift_release);
  }
  return result;
}

uint64_t sub_10013F9F0(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1000B736C(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10013FA1C()
{
  return sub_100140A28();
}

uint64_t sub_10013FA40()
{
  return sub_10014134C();
}

uint64_t sub_10013FA58(uint64_t a1)
{
  return sub_100164D00(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10013FA6C()
{
  return sub_10014134C();
}

uint64_t sub_10013FA88()
{
  sub_10003C7F0();
  sub_10001B028(&qword_100309768);
  sub_1001411AC();
  sub_100140D38();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_10007A8C4();
    sub_10014179C();
    v0();
  }
  sub_10003C780();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10013FB6C()
{
  sub_10001B028(&qword_100309768);
  uint64_t v1 = sub_1001411AC();
  sub_100140E4C(v1);
  return (*(uint64_t (**)(unint64_t))(v0 + 24))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_10013FBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10013FBDC()
{
  return swift_release();
}

uint64_t sub_10013FBE4()
{
  return sub_100140610((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10013FBFC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_10013FC2C()
{
  sub_10002F9C8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 40) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  uint64_t v8 = sub_100141470();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_10013FCBC()
{
  return (*(uint64_t (**)(unint64_t))(v0 + 24))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_10013FD20()
{
  sub_10002F9C8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 48) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  uint64_t v8 = sub_100141470();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_10013FDB0()
{
  sub_100141198();
  return (*(uint64_t (**)(unint64_t))(v0 + 32))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_10013FDF4()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013FE10()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013FE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013A638(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10013FE54()
{
  return sub_100135748(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_10013FE6C()
{
  return sub_1001A63E8(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_10013FE80@<X0>(void *a1@<X8>)
{
  return sub_100137B10(v1[3], v1[4], v1[5], v1[2], a1);
}

uint64_t sub_10013FEA0()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10013FED8(uint64_t a1)
{
  return sub_100137C20(a1, *(void *)(v1 + 24), *(uint64_t (**)(char *, char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_10013FEE4()
{
  return sub_100140A28();
}

uint64_t sub_10013FEFC()
{
  return sub_1001280EC(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_10013FF08()
{
  return sub_1001A644C(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_10013FF1C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1000B706C(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_10013FF34(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10003C378(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_10013FF4C()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013FF64()
{
  return sub_100135BE0(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (void (*)(void))sub_1000B706C, (void (*)(uint64_t, uint64_t, void))sub_10003C378);
}

uint64_t sub_10013FFB0()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10013FFD4()
{
  return sub_1001334B8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_10013FFE8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100140050(uint64_t a1)
{
  return sub_10011EAD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_10014008C()
{
  return sub_100140A28();
}

uint64_t sub_1001400A4()
{
  sub_1000ACEB8();
  swift_release();
  v2(*(void *)(v1 + 24));
  return _swift_deallocObject(v1, v0, 7);
}

uint64_t sub_1001400FC()
{
  return sub_1001343F8(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t, uint64_t, void))sub_1000B706C, (uint64_t (*)(uint64_t, uint64_t, void))sub_1001FB560, (void (*)(uint64_t))sub_10013FF34);
}

uint64_t sub_100140158()
{
  return sub_100132C0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *__return_ptr, uint64_t *))(v0 + 32));
}

uint64_t sub_100140168()
{
  return sub_100135420(v0[2], v0[3], v0[4], (void (*)(uint64_t, uint64_t))sub_10012B238);
}

uint64_t sub_1001401A0(uint64_t result, uint64_t a2)
{
  if (BYTE1(a2) != 255) {
    return sub_1001401B8(result, a2, BYTE1(a2) & 1);
  }
  return result;
}

uint64_t sub_1001401B8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1001401C4(uint64_t result, uint64_t a2)
{
  if (BYTE1(a2) != 255) {
    return sub_1001401DC(result, a2, BYTE1(a2) & 1);
  }
  return result;
}

uint64_t sub_1001401DC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001401E8()
{
  return sub_10014031C();
}

uint64_t sub_100140218()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_100140230()
{
  return sub_100135AE4(*(void (**)(uint64_t *))(v0 + 16));
}

uint64_t sub_100140254()
{
  return sub_10014031C();
}

uint64_t sub_100140280()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001402A8()
{
  return sub_10014031C();
}

uint64_t sub_1001402D4()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001402F0()
{
  return sub_10014031C();
}

uint64_t sub_10014031C()
{
  sub_1000ACEB8();
  swift_release();
  v2(*(void *)(v1 + 32));
  v0(*(void *)(v1 + 40));
  uint64_t v3 = sub_1000B7BF8();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100140378(uint64_t a1)
{
  return sub_10013F734(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100140388()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001403A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1001403E4()
{
  swift_release();
  sub_10003C3F0(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100140428()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_100140440()
{
  return sub_100135C7C(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100140450()
{
  return sub_100135420(v0[2], v0[3], v0[4], (void (*)(uint64_t, uint64_t))sub_10012D7C0);
}

uint64_t sub_100140484()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_10014049C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (HIBYTE(a3) != 255) {
    return sub_1000B727C(result, a2, a3, HIBYTE(a3) & 1);
  }
  return result;
}

uint64_t sub_1001404B4()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001404D0()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001404EC()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10014052C()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_100140548()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_100140560(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return a3();
  }
}

uint64_t sub_100140570()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_100140588()
{
  return sub_100135B58(*(void (**)(uint64_t *))(v0 + 16));
}

uint64_t sub_1001405AC()
{
  return sub_100135470(v0[2], v0[3], v0[4], (void (*)(uint64_t, uint64_t))sub_10012DAB8);
}

uint64_t sub_1001405E0()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_1001405F8()
{
  return sub_100140610((void (*)(void))&_swift_release);
}

uint64_t sub_100140610(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  uint64_t v3 = sub_100140E60();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100140658()
{
  return sub_1001280EC(*(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_100140664()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100140694()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1001406D0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100140710(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_100025FBC();
  sub_100118854();
  v4();
  return a2;
}

uint64_t sub_100140768(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_100025FBC();
  sub_100141778();
  v4();
  return a2;
}

uint64_t sub_100140884()
{
  return sub_10013F338();
}

uint64_t sub_1001408F0(uint64_t a1)
{
  return sub_10013F8F8(a1);
}

uint64_t sub_10014090C(uint64_t a1)
{
  *(void *)(a1 + 32) = v1;
  return swift_retain();
}

uint64_t sub_10014092C()
{
  sub_10003C350(v0);
  return swift_release();
}

uint64_t sub_10014095C(uint64_t a1, __n128 a2)
{
  *(__n128 *)(a1 + 40) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = -1;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  return swift_retain_n();
}

uint64_t sub_10014098C()
{
  return swift_retain();
}

void sub_1001409A8()
{
  CallbackList._run()();
}

uint64_t sub_1001409F8()
{
  sub_10003C350(v0);
  return swift_release();
}

uint64_t sub_100140A28()
{
  return sub_1001400A4();
}

uint64_t sub_100140A30()
{
  return swift_retain();
}

uint64_t sub_100140AA0()
{
  return v0;
}

uint64_t sub_100140AB4()
{
  return v0;
}

uint64_t sub_100140AC8()
{
  return v0;
}

uint64_t sub_100140AE0(uint64_t a1)
{
  *(void *)(a1 + 32) = v1;
  return swift_retain();
}

void sub_100140B1C()
{
  CallbackList._run()();
}

uint64_t sub_100140B38()
{
  return 0;
}

__n128 sub_100140B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,long long a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  v31[24] = a28;
  *(void *)&v31[16] = a27;
  *(void *)&v31[8] = a26;
  *(void *)uint64_t v31 = a25;
  *(_OWORD *)(v29 - 119) = *(_OWORD *)&v31[9];
  *(_OWORD *)(v29 - 144) = a24;
  *(_OWORD *)(v29 - 128) = *(_OWORD *)v31;
  *(_OWORD *)(v29 - 160) = a23;
  *(_OWORD *)uint64_t v28 = a23;
  *(_OWORD *)(v28 + 16) = a24;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 - 128);
  __n128 result = *(__n128 *)(v29 - 119);
  *(__n128 *)(v28 + 41) = result;
  return result;
}

uint64_t sub_100140B9C(void *a1)
{
  a1[2] = v4;
  a1[3] = v1;
  a1[4] = v2;
  a1[5] = v3;
  return swift_getObjectType();
}

uint64_t sub_100140BE8()
{
  return swift_retain();
}

uint64_t sub_100140C04(__n128 *a1, __n128 a2)
{
  a1[2] = a2;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u8[8] = -1;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  a1[3].n128_u64[0] = 0;
  return swift_retain_n();
}

uint64_t sub_100140C44(uint64_t a1)
{
  *(void *)(a1 + 32) = v1;
  return swift_getObjectType();
}

uint64_t sub_100140C60()
{
  return swift_allocObject();
}

void sub_100140C94()
{
  *(void *)(v1 - 216) = v0;
}

uint64_t sub_100140CBC()
{
  return swift_retain_n();
}

uint64_t sub_100140CD4()
{
  return swift_retain();
}

__n128 sub_100140D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  v23[16] = a22;
  *(void *)&v23[8] = a21;
  *(void *)uint64_t v23 = a20;
  return *(__n128 *)&v23[1];
}

void sub_100140D58(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)a6 = v8;
  *(void *)(a6 + 8) = v7;
  *(void *)(a6 + 16) = v6;
  *(_DWORD *)(a6 + 24) = v9;
  *(_WORD *)(a6 + 28) = -1;
  *(unsigned char *)(a6 + 30) = -1;
  *(unsigned char *)(a6 + 31) = a1 & 1;
}

uint64_t sub_100140D88(uint64_t a1)
{
  *(void *)(a1 + 32) = v1;
  return swift_getObjectType();
}

void sub_100140DA4()
{
  sub_100038C48();
}

uint64_t sub_100140DC0()
{
  return swift_retain_n();
}

uint64_t sub_100140DD8(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return v2 - 160;
}

uint64_t sub_100140DEC()
{
  return swift_allocObject();
}

uint64_t sub_100140E1C()
{
  return swift_retain_n();
}

uint64_t sub_100140E4C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100140E60()
{
  return v0;
}

uint64_t sub_100140EA4()
{
  return sub_100121040(v1, v0);
}

uint64_t sub_100140EFC@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(void *)__n128 result = v4;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = v2;
  *(_DWORD *)(result + 24) = v5;
  *(_WORD *)(result + 28) = -1;
  *(unsigned char *)(result + 30) = -1;
  *(unsigned char *)(result + 31) = a2;
  return result;
}

uint64_t sub_100140F20()
{
  return swift_retain_n();
}

uint64_t sub_100140F38()
{
  sub_10003C350(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100140F68()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100140F80()
{
  sub_10013F4F8(v1, v0);
  return swift_release();
}

uint64_t sub_100140FB0()
{
  sub_10013F4F8(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100140FEC(void *a1)
{
  uint64_t v2 = *(void *)(v1 - 168);
  a1[2] = *(void *)(*(void *)(v1 - 160) + 80);
  a1[3] = v2;
  a1[4] = *(void *)(v1 - 184);
  return *(void *)(v1 - 176);
}

uint64_t sub_100141020()
{
  return swift_retain();
}

uint64_t sub_100141040()
{
  return swift_beginAccess();
}

uint64_t sub_100141058()
{
  return v0;
}

uint64_t sub_10014106C(void *a1)
{
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v1;
  a1[6] = v2;
  return swift_getObjectType();
}

uint64_t sub_100141098()
{
  return v0;
}

double sub_1001410CC()
{
  return 0.0;
}

uint64_t sub_1001410EC()
{
  return v0;
}

void sub_1001410FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v10[1] = 0;
  v10[2] = v11;
  *unint64_t v10 = a10;
}

uint64_t sub_10014110C(void *a1)
{
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = v3;
  a1[5] = v2;
  a1[6] = v1;
  return swift_retain();
}

uint64_t sub_100141138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return v10 - *(void *)(a10 + 16);
}

uint64_t sub_100141168()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100141184()
{
  return v0;
}

uint64_t sub_1001411AC()
{
  return sub_10024FCF0();
}

uint64_t sub_1001411D4()
{
  return v0;
}

uint64_t sub_1001411F0()
{
  return swift_retain_n();
}

uint64_t sub_100141208()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100141230()
{
  return swift_retain_n();
}

uint64_t sub_100141274()
{
  return v0;
}

uint64_t sub_100141290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t sub_1001412AC()
{
  return swift_allocObject();
}

uint64_t sub_1001412E0(void *a1)
{
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v1;
  a1[5] = v2;
  return swift_getObjectType();
}

uint64_t sub_100141308(void *a1)
{
  a1[2] = v1;
  a1[3] = v2;
  a1[4] = *(void *)(v3 - 88);
  return swift_retain_n();
}

uint64_t sub_10014134C()
{
  return sub_1001400A4();
}

uint64_t sub_100141354()
{
  return sub_1001695EC();
}

uint64_t sub_10014135C()
{
  return sub_100167374();
}

uint64_t sub_100141364()
{
  return sub_1001A8758();
}

uint64_t sub_10014136C()
{
  return sub_1001A8590();
}

uint64_t sub_100141374()
{
  return swift_retain();
}

uint64_t sub_10014139C(uint64_t result)
{
  *(void *)__n128 result = v3;
  *(void *)(result + 8) = v2;
  *(void *)(result + 16) = v1;
  *(_DWORD *)(result + 24) = v4;
  *(_DWORD *)(result + 28) = 0x1FFFFFF;
  return result;
}

uint64_t sub_1001413D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 1171, a5, v5);
}

uint64_t sub_10014143C()
{
  return swift_getObjectType();
}

uint64_t sub_100141460(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100141470()
{
  return v0 + v1;
}

uint64_t sub_100141488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_1001414B0()
{
  *uint64_t v0 = v1;
  v0[1] = v3;
  v0[2] = ~v4;
  v0[3] = v6;
  v0[4] = v5;
  return v2;
}

uint64_t sub_1001414C8()
{
  return v0;
}

uint64_t sub_1001414D8()
{
  return v0;
}

uint64_t sub_1001414F8()
{
  *(void *)(v0 - 128) = *(void *)(v0 - 152);
  return sub_10024F6E0();
}

void sub_10014151C()
{
  sub_1000350C8();
}

uint64_t sub_100141540()
{
  sub_10013F4E0(v0, v1);
  return swift_errorRetain();
}

uint64_t sub_10014157C()
{
  return sub_10024F030();
}

uint64_t sub_1001415B0()
{
  return sub_10013F4F8(v0, v1);
}

uint64_t sub_1001415D4()
{
  return sub_10013F4F8(v1, v0);
}

uint64_t sub_1001415F8()
{
  return v0;
}

__n128 sub_100141640()
{
  return v0[2];
}

uint64_t sub_100141658()
{
  return swift_getObjectType();
}

uint64_t sub_10014167C()
{
  sub_10003C350(v0);
  sub_10003C350(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001416B8(void *a1)
{
  a1[2] = v3;
  a1[3] = v1;
  a1[4] = v2;
  return swift_getObjectType();
}

uint64_t sub_1001416DC()
{
  return swift_retain();
}

uint64_t sub_100141700()
{
  return v0;
}

uint64_t sub_100141718()
{
  return swift_getObjectType();
}

uint64_t sub_10014173C()
{
  return v0;
}

void sub_100141754()
{
  sub_1000350C8();
}

uint64_t sub_1001417A8()
{
  *(void *)(v1 - 168) = v0;
  type metadata accessor for EventLoopFuture();
  return sub_10024EB20();
}

uint64_t sub_1001417E4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1001417FC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100141814(uint64_t a1)
{
  *(void *)(a1 + 32) = v1;
  return swift_retain();
}

uint64_t sub_100141834()
{
  return swift_release();
}

uint64_t sub_100141860()
{
  return swift_retain();
}

uint64_t sub_100141880()
{
  return swift_getObjectType();
}

uint64_t sub_1001418A0()
{
  return v0;
}

uint64_t sub_1001418B4()
{
  return sub_10024F030();
}

uint64_t sub_1001418CC()
{
  return swift_getObjectType();
}

uint64_t sub_1001418E4()
{
  return v0;
}

uint64_t sub_1001418F0()
{
  return v0;
}

uint64_t sub_100141908()
{
  return v0;
}

uint64_t sub_100141914()
{
  return v0;
}

uint64_t sub_100141920()
{
  return v0;
}

uint64_t sub_100141934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 692, a5, v5);
}

uint64_t sub_100141954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 692, a5, v5);
}

uint64_t sub_100141974()
{
  sub_10013F4E0(v0, v1);
  return swift_retain();
}

uint64_t sub_1001419AC()
{
  return v0;
}

uint64_t sub_1001419C0()
{
  return sub_10003C350(v0);
}

uint64_t sub_1001419D8()
{
  return swift_retain();
}

uint64_t sub_1001419F0()
{
  return EventLoopFuture.__allocating_init(_eventLoop:value:file:line:)();
}

uint64_t sub_100141A10()
{
  return v0;
}

void sub_100141A1C()
{
  CallbackList._run()();
}

void sub_100141A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t))
{
  sub_10012450C(a1, v10, 0, v11, a5, a6, a7, a8, a9, a10);
}

void sub_100141A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t))
{
  sub_100122228(a1, v10, 0, v11, a5, a6, a7, a8, a9, a10);
}

void sub_100141A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1001242D0(a1, 0, 0, a4, a5, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100141A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.makePromise<A>(of:file:line:)(a1, a2, a3, a4, a5, v6, a1, v5);
}

uint64_t sub_100141ABC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100141ADC(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return v2 - 160;
}

uint64_t sub_100141B44()
{
  return swift_retain();
}

uint64_t sub_100141B64()
{
  return v0;
}

void sub_100141B78()
{
  *(void *)(v0 - 160) = 0;
  *(unsigned char *)(v0 - 152) = 0;
}

uint64_t ByteBuffer.getJSONDecodable<A>(_:decoder:at:length:)@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v9 = ByteBuffer.getData(at:length:byteTransferStrategy:)(a1, a2, 1, a3, a4);
  if (v10 >> 60 == 15) {
    return sub_1000195B4(a6, 1, 1, a5);
  }
  uint64_t v12 = v9;
  unint64_t v13 = v10;
  sub_10024D960();
  if (!v6) {
    sub_1000195B4(a6, 0, 1, a5);
  }
  return sub_10003F7F4(v12, v13);
}

uint64_t ByteBuffer.readJSONDecodable<A>(_:decoder:length:)@<X0>(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v6 = sub_10024F030();
  uint64_t v20 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v11 = *(unsigned int *)(v3 + 8);
  uint64_t v10 = *(unsigned int *)(v3 + 12);
  uint64_t v12 = v22;
  uint64_t result = ByteBuffer.getJSONDecodable<A>(_:decoder:at:length:)(v11, a1, *(void *)v3, v11 | (v10 << 32), a2, (uint64_t)&v19 - v8);
  if (!v12)
  {
    uint64_t v22 = v10;
    uint64_t v15 = v20;
    uint64_t v14 = v21;
    if (sub_10001FA0C((uint64_t)v9, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v6);
      uint64_t v16 = v14;
      uint64_t v17 = 1;
      return sub_1000195B4(v16, v17, 1, a2);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(v14, v9, a2);
    unsigned int v18 = v11 + a1;
    if (__CFADD__(v11, a1))
    {
      __break(1u);
    }
    else if (v22 >= v18)
    {
      *(_DWORD *)(v3 + 8) = v18;
      uint64_t v16 = v14;
      uint64_t v17 = 0;
      return sub_1000195B4(v16, v17, 1, a2);
    }
    __break(1u);
  }
  return result;
}

uint64_t ByteBuffer.setJSONEncodable<A>(_:encoder:at:)()
{
  uint64_t result = sub_10024D9E0();
  if (!v0)
  {
    uint64_t v3 = result;
    unint64_t v4 = v2;
    __chkstk_darwin(result, v2);
    switch(v5 >> 62)
    {
      case 1uLL:
        v14[1] = v14;
        if (v3 >> 32 < (int)v3)
        {
          __break(1u);
          swift_release();
          swift_release();
          __break(1u);
          sub_10003F808(v3, v4);
          __break(1u);
          JUMPOUT(0x100142074);
        }
        sub_1000473AC(v3, v4);
        unint64_t v11 = (unint64_t)sub_100083E60((int)v3, v3 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, void *, uint64_t))sub_100083E40);
        sub_10003F808(v3, v4);
        if ((v11 & 0x100000000) != 0) {
          goto LABEL_8;
        }
        break;
      case 2uLL:
        uint64_t v9 = *(void *)(v3 + 16);
        uint64_t v10 = *(void *)(v3 + 24);
        swift_retain();
        swift_retain();
        unint64_t v11 = (unint64_t)sub_100083E60(v9, v10, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, void *, uint64_t))sub_100083E40);
        swift_release();
        swift_release();
        if ((v11 & 0x100000000) != 0) {
          goto LABEL_8;
        }
        break;
      case 3uLL:
        uint64_t v8 = 0;
        uint64_t v7 = 0;
        uint64_t v6 = 0;
        goto LABEL_7;
      default:
        uint64_t v6 = BYTE6(v4);
        uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
        uint64_t v8 = v3;
LABEL_7:
        unint64_t v12 = (unint64_t)sub_100083CF4(v8, v7, v6, (void *(*)(unsigned int *__return_ptr, uint64_t *, uint64_t))sub_100083E40);
        LODWORD(v11) = v12;
        if ((v12 & 0x100000000) != 0)
        {
LABEL_8:
          sub_10006D978();
          LODWORD(v11) = v13;
        }
        break;
    }
    sub_10003F808(v3, v4);
    return v11;
  }
  return result;
}

Swift::Int ByteBuffer.writeJSONEncodable<A>(_:encoder:)()
{
  Swift::Int v1 = ByteBuffer.setJSONEncodable<A>(_:encoder:at:)();
  Swift::Int v2 = v1;
  if (!v0) {
    ByteBuffer.moveWriterIndex(forwardBy:)(v1);
  }
  return v2;
}

uint64_t JSONDecoder.decode<A>(_:from:)@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v15 = a4;
  unint64_t v8 = HIDWORD(a2);
  uint64_t v9 = sub_10024F030();
  uint64_t result = __chkstk_darwin(v9 - 8, v10);
  int v13 = (char *)&v14 - v12;
  if (v8 < a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = ByteBuffer.getJSONDecodable<A>(_:decoder:at:length:)(a2, (v8 - a2), a1, a2, a3, (uint64_t)&v14 - v12);
  if (v4) {
    return result;
  }
  uint64_t result = sub_10001FA0C((uint64_t)v13, 1, a3);
  if (result == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v15, v13, a3);
}

Swift::Int JSONEncoder.encode<A>(_:into:)()
{
  return ByteBuffer.writeJSONEncodable<A>(_:encoder:)();
}

uint64_t JSONEncoder.encodeAsByteBuffer<A>(_:allocator:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_10024D9E0();
  if (!v5)
  {
    uint64_t v15 = result;
    unint64_t v17 = v11;
    uint64_t v12 = sub_10024DF30();
    if (v12 < 0)
    {
      __break(1u);
    }
    else
    {
      int v13 = v12;
      if (v12)
      {
        type metadata accessor for ByteBuffer._Storage();
        uint64_t v14 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v13, a2, a3, a4, a5);
LABEL_7:
        uint64_t v16 = v14;
        ByteBuffer.writeJSONEncodable<A>(_:encoder:)();
        sub_10003F808(v15, v17);
        return v16;
      }
      if (qword_100308D08 == -1)
      {
LABEL_6:
        uint64_t v14 = swift_retain();
        goto LABEL_7;
      }
    }
    swift_once();
    goto LABEL_6;
  }
  return result;
}

void *sub_1001423CC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1)
  {
    uint64_t result = a3(&v6, a1, a2 - a1);
    if (!v3) {
      return (void *)v6;
    }
  }
  else
  {
    uint64_t result = a3(&var4, 0, 0);
    if (!v3) {
      return (void *)var4;
    }
  }
  return result;
}

NSNumber sub_100142444(char a1)
{
  sub_1000184A4(0, qword_10030ED68);
  if (a1) {
    Swift::Int v2 = 37;
  }
  else {
    Swift::Int v2 = 36;
  }
  return sub_10024EF40(v2);
}

uint64_t sub_100142490()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExternalGatewaySheetRequest.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001424A0()
{
  return swift_bridgeObjectRetain();
}

void *sub_1001424A8()
{
  type metadata accessor for DaemonConnection();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100144B7C();
  qword_10034C080 = v0;
  return result;
}

uint64_t sub_1001424E4()
{
  sub_1000184A4(0, &qword_100311278);
  id v0 = sub_100142774(0xD000000000000024, 0x800000010027EC00, 0);
  id v1 = [self interfaceWithProtocol:&OBJC_PROTOCOL___ASDOctaneServiceInternalProtocol];
  [v0 setRemoteObjectInterface:v1];
  uint64_t v12 = sub_1001427F0;
  uint64_t v13 = 0;
  aBlocuint64_t k = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_100018758;
  unint64_t v11 = &unk_1002E8368;
  Swift::Int v2 = _Block_copy(&aBlock);
  [v0 setInterruptionHandler:v2];
  _Block_release(v2);
  uint64_t v12 = sub_1001427FC;
  uint64_t v13 = 0;
  aBlocuint64_t k = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_100018758;
  unint64_t v11 = &unk_1002E8390;
  uint64_t v3 = _Block_copy(&aBlock);
  [v0 setInvalidationHandler:v3];
  _Block_release(v3);
  [v0 resume];
  uint64_t v12 = sub_1001428E0;
  uint64_t v13 = 0;
  aBlocuint64_t k = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_100142AD4;
  unint64_t v11 = &unk_1002E83B8;
  uint64_t v4 = _Block_copy(&aBlock);
  id v5 = [v0 remoteObjectProxyWithErrorHandler:v4];
  _Block_release(v4);
  sub_10024F250();

  swift_unknownObjectRelease();
  sub_100019524(&qword_100311280);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

id sub_100142774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithMachServiceName:v5 options:a3];

  return v6;
}

void sub_1001427F0()
{
}

void sub_1001427FC()
{
}

void sub_100142808(const char *a1)
{
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10024E1F0();
  oslog = sub_1000ACE40(v2, (uint64_t)qword_10034C0E0);
  os_log_type_t v3 = sub_10024EE10();
  if (os_log_type_enabled(oslog, v3))
  {
    id v4 = (uint8_t *)sub_10003FD28();
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, a1, v4, 2u);
    sub_10003FBCC();
  }
}

void sub_1001428E0()
{
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10024E1F0();
  sub_10001B0E8(v0, (uint64_t)qword_10034C0E0);
  swift_errorRetain();
  swift_errorRetain();
  oslog = sub_10024E1D0();
  os_log_type_t v1 = sub_10024EE10();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136446210;
    swift_getErrorValue();
    uint64_t v3 = sub_10024FB80();
    sub_1000F3F3C(v3, v4, &v6);
    sub_10024F100();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Could not create remote object proxy, error:%{public}s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_100142AD4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100142B3C()
{
  os_log_type_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    [v1 invalidateBag];
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_10024E1F0();
    uint64_t v20 = sub_1000ACE40(v2, (uint64_t)qword_10034C0E0);
    os_log_type_t v3 = sub_10024EE10();
    if (sub_10014612C(v3, v4, v5, v6, v7, v8, v9, v10, v18, v20))
    {
      unint64_t v11 = (_WORD *)sub_10003FD28();
      sub_100146148(v11);
      sub_10014610C((void *)&_mh_execute_header, v12, v13, "Unable to communicate with daemon to invalidate the bag", v14, v15, v16, v17, v19, v21);
      sub_10003FBCC();
    }
  }
}

void sub_100142C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 56);
  if (v3)
  {
    sub_100019524(&qword_1003090E8);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100255FB0;
    *(void *)(v6 + 32) = a1;
    *(void *)(v6 + 40) = a2;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_10010C978(v6, KeyPath, (uint64_t)sub_1001460A4, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    sub_10008F248();
    swift_release();
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10024E1F0();
    loga = sub_1000ACE40(v10, (uint64_t)qword_10034C0E0);
    os_log_type_t v11 = sub_10024EE10();
    if (sub_10014612C(v11, v12, v13, v14, v15, v16, v17, v18, v28, loga))
    {
      uint64_t v19 = (_WORD *)sub_10003FD28();
      sub_100146148(v19);
      sub_10014610C((void *)&_mh_execute_header, v20, v21, "Unable to communicate with daemon to signal queue refresh", v22, v23, v24, v25, v29, log);
      sub_10003FBCC();
    }
    sub_10008F248();
  }
}

uint64_t sub_100142DB8(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_100142DFC(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_bridgeObjectRetain();
    NSString v18 = sub_10024E6A0();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = v17;
    v21[4] = sub_1001460E4;
    void v21[5] = v19;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    long long v21[2] = sub_100143290;
    v21[3] = &unk_1002E8480;
    int v20 = _Block_copy(v21);
    swift_release();
    [a2 refreshQueueForBundleId:v18 completion:v20];
    _Block_release(v20);

    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v12 >= v8) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_21;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_21;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_21:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
}

void sub_10014301C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10024E1F0();
    sub_10001B0E8(v5, (uint64_t)qword_10034C0E0);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    oslog = sub_10024E1D0();
    os_log_type_t v6 = sub_10024EE10();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a2, a3, &v11);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v8 = sub_10024FB80();
      sub_1000F3F3C(v8, v9, &v11);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Failed to refresh queue for %{public}s: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_100143290(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_1001432FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1001D4BB0(v7);
    sub_1000193C8();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void **)(v3 + 56);
    if (v8)
    {
      swift_unknownObjectRetain();
      Class isa = sub_10024EA80().super.isa;
      swift_release();
      NSString v10 = sub_10024E6A0();
      uint64_t v11 = (void *)swift_allocObject();
      _DWORD v11[2] = a1;
      uint64_t v11[3] = a2;
      v11[4] = a3;
      aBlock[4] = sub_10014604C;
      aBlock[5] = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100143290;
      aBlock[3] = &unk_1002E8408;
      int64_t v12 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      [v8 revokeEntitlementsForProductIdentifiers:isa forBundleId:v10 completion:v12];
      _Block_release(v12);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_10024E1F0();
      uint64_t v31 = sub_1000ACE40(v13, (uint64_t)qword_10034C0E0);
      os_log_type_t v14 = sub_10024EE10();
      if (sub_10014612C(v14, v15, v16, v17, v18, v19, v20, v21, v29, v31))
      {
        int v22 = (_WORD *)sub_10003FD28();
        sub_100146148(v22);
        sub_10014610C((void *)&_mh_execute_header, v23, v24, "Unable to communicate with daemon to revoke entitlements", v25, v26, v27, v28, v30, v32);
        sub_10003FBCC();
      }
    }
  }
}

void sub_100143524(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_10024E1F0();
    sub_10001B0E8(v6, (uint64_t)qword_10034C0E0);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    oslog = sub_10024E1D0();
    os_log_type_t v7 = sub_10024EE10();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10024EAB0();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_1000F3F3C(v9, v11, &v15);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a3, a4, &v15);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v12 = sub_10024FB80();
      sub_1000F3F3C(v12, v13, &v15);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Failed to revoke entitlements of %s for %{public}s: %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_100143830()
{
  os_log_type_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    swift_unknownObjectRetain();
    uint64_t v2 = sub_1000D5AE4();
    sub_1000D427C();
    NSString v3 = sub_10024E6A0();
    swift_bridgeObjectRelease();
    sub_1000D428C();
    os_log_t loga = (os_log_t)sub_10024E6A0();
    swift_bridgeObjectRelease();
    [v1 transactionDeleted:v2 productID:v3 forBundleID:loga];
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_10024E1F0();
    logb = sub_1000ACE40(v4, (uint64_t)qword_10034C0E0);
    os_log_type_t v5 = sub_10024EE10();
    if (sub_10014612C(v5, v6, v7, v8, v9, v10, v11, v12, v22, logb))
    {
      unint64_t v13 = (_WORD *)sub_10003FD28();
      sub_100146148(v13);
      sub_10014610C((void *)&_mh_execute_header, v14, v15, "Unable to communicate with daemon to notify of deleted transaction", v16, v17, v18, v19, v23, log);
      sub_10003FBCC();
    }
  }
  sub_10008F248();
}

void sub_100143968()
{
  os_log_type_t v1 = self;
  sub_1000D4700();
  Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  id v22 = 0;
  id v3 = [v1 dataWithJSONObject:isa options:0 error:&v22];

  id v4 = v22;
  if (v3)
  {
    uint64_t v5 = sub_10024DF10();
    unint64_t v7 = v6;

    int v8 = *(void **)(v0 + 56);
    if (v8)
    {
      swift_unknownObjectRetain();
      Class v9 = sub_10024DEF0().super.isa;
      sub_1000D428C();
      NSString v10 = sub_10024E6A0();
      swift_bridgeObjectRelease();
      [v8 transactionUpdated:v9 forBundleID:v10];
      sub_10003F808(v5, v7);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_10024E1F0();
      int v19 = sub_1000ACE40(v18, (uint64_t)qword_10034C0E0);
      os_log_type_t v20 = sub_10024EE10();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)sub_10003FD28();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to communicate with daemon to notify of updated transaction", v21, 2u);
        sub_10003FBCC();
      }
      sub_10003F808(v5, v7);
    }
  }
  else
  {
    int v11 = v4;
    sub_10024DCE0();

    swift_willThrow();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10024E1F0();
    sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE10();
    if (os_log_type_enabled(v13, v14))
    {
      int v15 = (uint8_t *)swift_slowAlloc();
      id v22 = (id)swift_slowAlloc();
      *(_DWORD *)int v15 = 136446210;
      swift_getErrorValue();
      uint64_t v16 = sub_10024FB80();
      sub_1000F3F3C(v16, v17, (uint64_t *)&v22);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error serializing transaction for updated transaction: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_100143D28(uint64_t a1)
{
  id v3 = *(void **)(v1 + 56);
  if (v3)
  {
    [v3 updatePort:a1];
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_10024E1F0();
    id v22 = sub_1000ACE40(v4, (uint64_t)qword_10034C0E0);
    os_log_type_t v5 = sub_10024EE10();
    if (sub_10014612C(v5, v6, v7, v8, v9, v10, v11, v12, v20, v22))
    {
      unint64_t v13 = (_WORD *)sub_10003FD28();
      sub_100146148(v13);
      sub_10014610C((void *)&_mh_execute_header, v14, v15, "Unable to communicate with daemon to update the port", v16, v17, v18, v19, v21, v23);
      sub_10003FBCC();
    }
  }
}

void sub_100143E0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, void *a6)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_100144114(v11, a1);
  swift_bridgeObjectRelease();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10024E1F0();
  sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  unint64_t v13 = sub_10024E1D0();
  os_log_type_t v14 = sub_10024EE00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v22 = a4;
    uint64_t v15 = swift_slowAlloc();
    int v16 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412546;
    sub_1000184A4(0, qword_10030ED68);
    if (a3) {
      Swift::Int v17 = 37;
    }
    else {
      Swift::Int v17 = 36;
    }
    Class isa = sub_10024EF40(v17).super.super.isa;
    sub_10024F100();
    *int v16 = isa;
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1000F3F3C(v22, a5, &v23);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "sending push %@ from %s", (uint8_t *)v15, 0x16u);
    sub_100019524(&qword_1003170F0);
    swift_arrayDestroy();
    sub_10003FBCC();
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000184A4(0, qword_10030ED68);
  if (a3) {
    Swift::Int v19 = 37;
  }
  else {
    Swift::Int v19 = 36;
  }
  Class v20 = sub_10024EF40(v19).super.super.isa;
  sub_1000193C8();
  swift_bridgeObjectRelease();
  Class v21 = sub_10024EA80().super.isa;
  swift_release();
  [a6 simulateStoreKitPushWithAction:v20 forBundleIdentifiers:v21];
}

unint64_t *sub_100144114(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    sub_100144D90(a1);
    return (unint64_t *)a2;
  }
  else
  {
    return sub_100145510(a1, a2);
  }
}

void sub_100144178(uint64_t a1, uint64_t a2, void (*a3)())
{
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v4 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    a3();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  swift_setAtReferenceWritableKeyPath();
  swift_release();
  sub_10008F248();
}

void sub_100144254(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 56);
  if (v2)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      swift_unknownObjectRetain();
      sub_10024F450();
      uint64_t v5 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v6 = *v5++;
        [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v6];
        sub_10024F400();
        sub_10024F490();
        sub_10024F4A0();
        sub_10024F420();
        --v4;
      }
      while (v4);
    }
    else
    {
      swift_unknownObjectRetain();
    }
    sub_1000184A4(0, qword_10030ED68);
    Class isa = sub_10024EA80().super.isa;
    swift_bridgeObjectRelease();
    sub_10024E6A0();
    objc_msgSend(v2, "removeTransactionIdentifiersFromCache:forBundleIdentifier:", isa);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10024E1F0();
    oslog = sub_1000ACE40(v7, (uint64_t)qword_10034C0E0);
    os_log_type_t v8 = sub_10024EE10();
    if (os_log_type_enabled(oslog, v8))
    {
      int v9 = (_WORD *)sub_10003FD28();
      sub_100146148(v9);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Unable to communicate with daemon to notify of deleted transactions", (uint8_t *)v1, 2u);
      sub_10003FBCC();
    }
  }
  sub_1000B75A4();
}

void sub_100144454(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void **)(v3 + 56);
  if (v5)
  {
    swift_unknownObjectRetain();
    if (a3 >> 60 == 15) {
      Class isa = 0;
    }
    else {
      Class isa = sub_10024DEF0().super.isa;
    }
    [v5 receiveEventOfType:a1 eventData:isa identifier:sub_10024E060().super.isa];
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10024E1F0();
    oslog = sub_1000ACE40(v8, (uint64_t)qword_10034C0E0);
    os_log_type_t v9 = sub_10024EE10();
    if (os_log_type_enabled(oslog, v9))
    {
      int v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v10 = 134217984;
      sub_10024F100();
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Unable to communicate with daemon to notify of event %ld", v10, 0xCu);
      sub_10003FBCC();

      sub_10008F248();
      return;
    }
  }
  sub_10008F248();
}

uint64_t sub_1001445F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100146154((uint64_t)sub_100145FEC, a2, (uint64_t)&type metadata for Bool, a4, a5, a6, a7, a8, v9);
  return v10;
}

uint64_t sub_100144650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  sub_1000D4104(a2, a3, v8);
  LOBYTE(a3) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = a3 & 1;
  return result;
}

void sub_1001446E0(uint64_t a1, void *a2, int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = *(void **)(v5 + 56);
  if (!v6)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10024E1F0();
    oslogb = sub_1000ACE40(v18, (uint64_t)qword_10034C0E0);
    os_log_type_t v19 = sub_10024EE10();
    if (sub_10014612C(v19, v20, v21, v22, v23, v24, v25, v26, v40, oslogb))
    {
      int v27 = (_WORD *)sub_10003FD28();
      sub_100146148(v27);
      sub_10014610C((void *)&_mh_execute_header, v28, v29, "Unable to communicate with daemon to show message", v30, v31, v32, v33, v41, oslog);
      sub_10003FBCC();
    }
    goto LABEL_14;
  }
  uint64_t v12 = qword_100308D38;
  swift_unknownObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_10034C070;
  os_log_type_t v14 = *(os_unfair_lock_s **)(*(void *)(qword_10034C070 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  uint64_t v15 = *(void *)(v13 + 40);
  os_unfair_lock_unlock(v14);
  swift_release();
  uint64_t v16 = sub_1000C855C(v15, a4, a5, a1, a2, a3 & 0xFFFFFF01);
  if (v16)
  {
    sub_1002056F4(v16);
    swift_bridgeObjectRelease();
    Class isa = sub_10024E4E0().super.isa;
    swift_bridgeObjectRelease();
    [v6 showMessage:isa forBundleID:sub_10024E6A0()];
    swift_unknownObjectRelease();

LABEL_14:
    sub_1000B75A4();

    return;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_10024E1F0();
  osos_log_t loga = sub_1000ACE40(v34, (uint64_t)qword_10034C0E0);
  os_log_type_t v35 = sub_10024EE10();
  if (os_log_type_enabled(osloga, v35))
  {
    uint64_t v36 = (uint8_t *)sub_10003FD28();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, osloga, v35, "Unable to parse message info to show message", v36, 2u);
    sub_10003FBCC();
    swift_unknownObjectRelease();
    goto LABEL_14;
  }

  sub_1000B75A4();
  swift_unknownObjectRelease();
}

uint64_t sub_10014499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100146154((uint64_t)sub_100145FC8, a2, (uint64_t)&type metadata for Bool, a4, a5, a6, a7, a8, v9);
  return v10;
}

uint64_t sub_1001449FC@<X0>(char a1@<W0>, Swift::Int a2@<X2>, Swift::Int a3@<X3>, unsigned char *a4@<X8>)
{
  if (a1)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v7 = sub_1001F1AF0(&v12, a2, a3);
    swift_endAccess();
    uint64_t result = swift_bridgeObjectRelease();
    char v9 = v7 & 1;
  }
  else
  {
    swift_beginAccess();
    sub_100145048(a2, a3);
    uint64_t v11 = v10;
    uint64_t result = swift_endAccess();
    if (v11) {
      uint64_t result = swift_bridgeObjectRelease();
    }
    char v9 = v11 != 0;
  }
  *a4 = v9;
  return result;
}

uint64_t sub_100144ADC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100144B24()
{
  sub_100144ADC();
  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for DaemonConnection()
{
  return self;
}

void *sub_100144B7C()
{
  uint64_t v1 = sub_10024EE80();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  sub_10002059C();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10024EE60();
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v9 = sub_10024E2D0();
  __chkstk_darwin(v9 - 8, v10);
  sub_10002059C();
  v0[2] = &_swiftEmptySetSingleton;
  v0[3] = &_swiftEmptySetSingleton;
  v0[4] = &_swiftEmptySetSingleton;
  v0[5] = &_swiftEmptySetSingleton;
  sub_1000184A4(0, (unint64_t *)&qword_1003170D0);
  sub_10024E2C0();
  sub_100145F0C();
  sub_100019524((uint64_t *)&unk_1003170E0);
  sub_100145F5C();
  sub_10024F280();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  v0[6] = sub_10024EEC0();
  v0[7] = sub_1001424E4();
  return v0;
}

uint64_t sub_100144D90(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    os_log_type_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_100145048(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_21;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_100144F3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_10024FBF0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001F43A0();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_1001451D8(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100145048(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_10024FC00();
  swift_bridgeObjectRetain();
  sub_10024E780();
  Swift::Int v6 = sub_10024FC70();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_10024FA60() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_10024FA60() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001F3F5C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_100145354(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1001451D8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10024F290();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        BOOL v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_10024FBF0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            BOOL v16 = v2 != v6 || v15 >= v11 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100145354(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10024F290();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_10024FC00();
        swift_bridgeObjectRetain();
        sub_10024E780();
        Swift::Int v10 = sub_10024FC70();
        swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            BOOL v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *uint64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t *sub_100145510(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v37 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
    while (1)
    {
      BOOL v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_10024FC00();
      swift_bridgeObjectRetain();
      sub_10024E780();
      Swift::Int v19 = sub_10024FC70();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v37) {
        goto LABEL_48;
      }
      unint64_t v13 = *(void *)(v38 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v37) {
          goto LABEL_48;
        }
        unint64_t v13 = *(void *)(v38 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v37) {
            goto LABEL_48;
          }
          unint64_t v13 = *(void *)(v38 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v37) {
              goto LABEL_48;
            }
            unint64_t v13 = *(void *)(v38 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v37)
              {
LABEL_48:
                sub_10001B070();
                return (unint64_t *)v2;
              }
              unint64_t v13 = *(void *)(v38 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v37) {
                    goto LABEL_48;
                  }
                  unint64_t v13 = *(void *)(v38 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_22;
                  }
                }
LABEL_50:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v9 = v14;
    }
    uint64_t v22 = *(void *)(v2 + 48);
    int v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_10024FA60() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_37;
        }
        int v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_10024FA60() & 1) == 0);
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v30 = *(unsigned char *)(v2 + 32);
    unint64_t v31 = (unint64_t)((1 << v30) + 63) >> 6;
    size_t v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      int v33 = sub_100145988((unint64_t *)((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0)), v31, v2, v21, &v39);
      swift_release();
      sub_10001B070();
    }
    else
    {
      uint64_t v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      int v33 = sub_100145988((unint64_t *)v34, v31, v2, v21, &v39);
      swift_release();
      sub_10001B070();
      swift_slowDealloc();
    }
    return v33;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t *sub_100145988(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_15;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_46;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_46;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_46;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_14;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_46;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_46;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v36 = v9 + 6;
                while (v36 < v14)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_14;
                  }
                }
                int64_t v15 = v14 - 1;
LABEL_46:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_100145C7C(v39, a2, v38, a3);
              }
              goto LABEL_14;
            }
          }
          int64_t v13 = v18;
        }
LABEL_14:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_15:
        Swift::Int v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_10024FC00();
        swift_bridgeObjectRetain();
        sub_10024E780();
        Swift::Int v22 = sub_10024FC70();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_32;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        int v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_10024FA60() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_10024FA60() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_22;
          }
        }
LABEL_32:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_22:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_48:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_100145C7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_35:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100019524((uint64_t *)&unk_100318D60);
  uint64_t result = sub_10024F310();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_35;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_35;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_10024FC00();
    swift_bridgeObjectRetain();
    sub_10024E780();
    uint64_t result = sub_10024FC70();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    int v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *int v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_35;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_100145F0C()
{
  unint64_t result = qword_10030B050;
  if (!qword_10030B050)
  {
    sub_10024EE60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030B050);
  }
  return result;
}

unint64_t sub_100145F5C()
{
  unint64_t result = qword_10030B058;
  if (!qword_10030B058)
  {
    sub_10001B028((uint64_t *)&unk_1003170E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030B058);
  }
  return result;
}

uint64_t sub_100145FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100145FC0()
{
  return swift_release();
}

uint64_t sub_100145FC8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001449FC(*(unsigned char *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100145FEC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100144650(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_10014600C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10014604C(uint64_t a1)
{
  sub_100143524(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100146058@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10014606C()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001460A4(uint64_t a1)
{
  sub_100142DFC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001460AC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001460E4(uint64_t a1)
{
  sub_10014301C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10014610C(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log)
{
  _os_log_impl(a1, log, v10, a4, v11, 2u);
}

BOOL sub_10014612C(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

_WORD *sub_100146148(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t sub_100146154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return OS_dispatch_queue.sync<A>(execute:)(a1, &a9);
}

uint64_t sub_100146174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, unint64_t a7@<X8>)
{
  int v207 = a6;
  uint64_t v209 = a5;
  uint64_t v210 = a4;
  uint64_t v208 = a3;
  uint64_t v220 = a2;
  uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v211 = (uint64_t)&v198 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  unint64_t v17 = (char *)&v198 - v16;
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v206 = (uint64_t)&v198 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  v203 = (char *)&v198 - v23;
  __chkstk_darwin(v22, v24);
  BOOL v26 = (char *)&v198 - v25;
  uint64_t v27 = sub_10024E030();
  sub_10001B550();
  unint64_t v29 = (unint64_t)v28;
  __chkstk_darwin(v30, v31);
  sub_10002059C();
  unint64_t v34 = v33 - v32;
  sub_10014ADF0();
  *(void *)a7 = v35;
  *(void *)(a7 + 8) = v36;
  uint64_t v37 = sub_1000D946C(8);
  if (v38) {
    uint64_t v37 = sub_1000D5AE4();
  }
  *(void *)&NSDecimal number = v37;
  *(void *)(a7 + 24) = sub_10024F9E0();
  *(void *)(a7 + 32) = v39;
  *(void *)(a7 + 56) = sub_1000D427C();
  *(void *)(a7 + 64) = v40;
  int v219 = (int *)type metadata accessor for RenewalInfo();
  sub_10024E020();
  uint64_t v218 = swift_allocObject();
  *(void *)(v218 + 16) = 1;
  sub_10024E010();
  char v41 = sub_1000D5964();
  uint64_t v42 = v29 + 8;
  uint64_t v215 = *(void (**)(unint64_t, uint64_t))(v29 + 8);
  v215(v34, v27);
  uint64_t v217 = a1;
  unint64_t v213 = v34;
  uint64_t v214 = v27;
  unint64_t v205 = v29;
  uint64_t v212 = v29 + 8;
  if (v41)
  {
    *(unsigned char *)(a7 + 16) = 5;
LABEL_19:
    uint64_t p_number = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  sub_1000D79EC((uint64_t)v26);
  uint64_t v7 = 1;
  int v43 = sub_10001FA0C((uint64_t)v26, 1, v27);
  sub_100058654((uint64_t)v26);
  if (v43 == 1)
  {
    uint64_t v44 = sub_100147540(v218);
    swift_release();
    if (v44)
    {
      if (sub_1000D4218())
      {
LABEL_8:
        *(unsigned char *)(a7 + 16) = 0;
        goto LABEL_16;
      }
      if (sub_1000D55F8() == 5)
      {
        sub_1000D563C();
        uint64_t v47 = v46;
        swift_bridgeObjectRelease();
        if (!v47) {
          goto LABEL_8;
        }
        char v45 = 4;
      }
      else
      {
        char v45 = 2;
      }
    }
    else
    {
      char v45 = 3;
    }
    *(unsigned char *)(a7 + 16) = v45;
  }
  else
  {
    *(unsigned char *)(a7 + 16) = 1;
  }
LABEL_16:
  uint64_t v48 = sub_100147540(v218);
  uint64_t p_number = (uint64_t)_swiftEmptyArrayStorage;
  if (!v48) {
    goto LABEL_20;
  }
  uint64_t v201 = v48;
  sub_1000D563C();
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  if (v51)
  {
    swift_release();
    goto LABEL_19;
  }
  unint64_t v85 = *(void *)(v201 + 160);
  unint64_t v199 = a7;
  uint64_t v202 = v17;
  if (!(v85 >> 62))
  {
    uint64_t v86 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v86) {
      goto LABEL_42;
    }
LABEL_170:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t p_number = (uint64_t)_swiftEmptyArrayStorage;
LABEL_171:
    a7 = v199;
    unint64_t v17 = v202;
    a1 = v217;
    unint64_t v34 = v213;
    uint64_t v27 = v214;
    uint64_t v42 = v212;
LABEL_20:
    *(void *)(a7 + v219[21]) = p_number;
    sub_10024E010();
    char v52 = sub_1000D5964();
    v215(v34, v27);
    if (((v52 & 1) != 0 || (sub_1000D55F8() - 1) <= 4u && sub_1000D55F8() != 2)
      && (uint64_t v53 = sub_1000D6E60()) != 0)
    {
      if (v53[2])
      {
        uint64_t v27 = v53[4];
        a1 = v53[5];
        uint64_t v7 = v53[6];
        uint64_t v42 = v53[7];
        unint64_t v29 = *((unsigned __int8 *)v53 + 64);
        uint64_t v54 = sub_10014AD70();
        sub_1000AC290(v54, v55, v56, v57, v58);
      }
      else
      {
        sub_10014AD48();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10014AD48();
    }
    uint64_t v59 = sub_100147540(v218);
    if (v59)
    {
      uint64_t v60 = v59;
      if (v29 == 255)
      {
        swift_release();
      }
      else
      {
        uint64_t v202 = v17;
        uint64_t v61 = v7;
        unint64_t v62 = v213;
        sub_10024E010();
        char v63 = sub_1000D5964();
        v215(v62, v214);
        if (v63 & 1) != 0 || (sub_1000D5828())
        {
          uint64_t v64 = 1;
          *(unsigned char *)(a7 + 72) = 1;
          sub_1000D9478(4);
          uint64_t v65 = (uint64_t)v203;
          if ((v66 & 1) == 0)
          {
            sub_10024DF60();
            uint64_t v64 = 0;
          }
          sub_1000195B4(v65, v64, 1, v214);
          sub_1001487FC(v65, a7 + v219[23]);
          uint64_t v221 = v60;
          switch((int)v29)
          {
            case 1:
              sub_10014AD0C();
              *(unsigned char *)(a7 + v107) = 1;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v108 = sub_10014AD28();
              if (sub_100026CB8(v108, v109))
              {
                uint64_t v110 = sub_1001751F8();
                uint64_t v112 = sub_10014AC4C(v110, v111);
                unsigned __int8 v116 = 1;
                goto LABEL_61;
              }
              LOBYTE(v65) = 1;
              uint64_t v135 = sub_10014AB60();
              sub_1000DC32C(v135, v136, v137, v138, 1u);
              sub_10014AD38();
              break;
            case 2:
              *(void *)(a7 + 40) = v27;
              *(void *)(a7 + 48) = a1;
              unint64_t v29 = (unint64_t)v219;
              *(unsigned char *)(a7 + v219[16]) = 2;
              swift_bridgeObjectRetain();
              uint64_t v91 = sub_10014AD28();
              uint64_t v93 = sub_100026F0C(v91, v92);
              uint64_t v94 = v93;
              if (v93)
              {
                uint64_t v95 = *(void *)(v93 + 88);
                unint64_t v96 = (void *)(a7 + *(int *)(v29 + 68));
                *unint64_t v96 = *(void *)(v94 + 80);
                v96[1] = v95;
                LODWORD(v204) = *(unsigned __int8 *)(v94 + 57);
                swift_bridgeObjectRetain();
                uint64_t v97 = sub_1001751F8();
                uint64_t v99 = sub_10014ACF0(v97, v98);
                LODWORD(a1) = v204;
                sub_1000DC32C(v99, v100, v101, v42, 2u);
                swift_release();
              }
              else
              {
                uint64_t v130 = sub_10014AB60();
                sub_1000DC32C(v130, v131, v132, v133, 2u);
                sub_10014AD38();
                uint64_t v134 = (void *)(a7 + *(int *)(v29 + 68));
                *uint64_t v134 = 0;
                v134[1] = 0;
                LOBYTE(v65) = 1;
              }
              goto LABEL_94;
            case 3:
              sub_10014AD0C();
              *(unsigned char *)(a7 + v117) = 3;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v118 = sub_10014AD28();
              if (sub_100026F74(v118, v119))
              {
                uint64_t v120 = sub_1001751F8();
                uint64_t v112 = sub_10014AC4C(v120, v121);
                unsigned __int8 v116 = 3;
LABEL_61:
                sub_1000DC32C(v112, v113, v114, v115, v116);
                swift_release();
              }
              else
              {
                uint64_t v139 = sub_10014AB60();
                sub_1000DC32C(v139, v140, v141, v142, 3u);
LABEL_92:
                sub_10014AD38();
                LOBYTE(v65) = 1;
              }
              break;
            case 4:
              *(void *)(a7 + 40) = v27;
              *(void *)(a7 + 48) = a1;
              sub_10014ACBC();
              uint64_t v102 = sub_10014AB60();
              sub_100148864(v102, v103, v104, v105, 4u);
              swift_retain();
              sub_10020F78C();
              uint64_t v216 = v106;
              sub_1000DC32C(v27, a1, v61, v42, 4u);
              swift_release();
              LOBYTE(v65) = 0;
              LODWORD(a1) = 0;
              goto LABEL_94;
            default:
              *(void *)(a7 + 40) = v27;
              *(void *)(a7 + 48) = a1;
              uint64_t v67 = v219;
              uint64_t v68 = (void *)(a7 + v219[17]);
              *uint64_t v68 = 0;
              v68[1] = 0;
              *(unsigned char *)(a7 + v67[16]) = 0;
              uint64_t v69 = *(void *)(v60 + 136);
              if (!v69) {
                goto LABEL_92;
              }
              int v70 = *(unsigned __int8 *)(v69 + 57);
              uint64_t v71 = sub_10014AB60();
              sub_100148864(v71, v72, v73, v74, 0);
              swift_retain();
              uint64_t v75 = sub_1001751F8();
              uint64_t v77 = sub_10014ACF0(v75, v76);
              LODWORD(a1) = v70;
              sub_1000DC32C(v77, v78, v79, v42, 0);
              swift_release();
              break;
          }
          unint64_t v29 = (unint64_t)v219;
LABEL_94:
          char v143 = sub_100156568(a1);
          uint64_t v144 = (NSDecimal *)*(int *)(v29 + 72);
          *((unsigned char *)v144 + a7) = v143;
          unint64_t v34 = v217;
          unint64_t v85 = v214;
          if (v65)
          {
            unint64_t v29 = (unint64_t)v219;
            switch((int)a1)
            {
              case 1:
                swift_bridgeObjectRelease();
                goto LABEL_99;
              default:
                char v163 = sub_10024FA60();
                swift_bridgeObjectRelease();
                if (v163)
                {
LABEL_99:
                  sub_10014AD60();
                  goto LABEL_100;
                }
                sub_10014AD60();
                *(unsigned char *)(v191 + 8) = 1;
                break;
            }
          }
          else
          {
            sub_10024EF90(v144, 1000);
            uint64_t v145 = sub_10024EFB0();
            *(_DWORD *)&NSDecimal number = v145;
            number._mantissa[0] = WORD2(v145);
            number._mantissa[1] = HIWORD(v145);
            *(void *)&number._mantissa[2] = v146;
            number._mantissa[6] = v147;
            number._mantissa[7] = v148;
            sub_10024EF90((NSDecimal *)HIWORD(v146), 0);
            *(_DWORD *)&NSDecimal result = v149;
            result._mantissa[0] = v150;
            result._mantissa[1] = v151;
            result._mantissa[2] = v152;
            result._mantissa[3] = v153;
            result._mantissa[4] = v154;
            result._mantissa[5] = v155;
            result._mantissa[6] = v156;
            result._mantissa[7] = v157;
            NSDecimalRound(&result, &number, 0, NSRoundDown);
            sub_10024EFA0(v158);
            uint64_t v160 = v159;
            id v161 = [v159 longLongValue];

            unint64_t v162 = a7 + *(int *)(v29 + 76);
            *(void *)unint64_t v162 = v161;
LABEL_100:
            *(unsigned char *)(v162 + 8) = 0;
          }
          a1 = sub_10009317C();
          uint64_t p_number = v164;
          if (qword_100308D78 == -1) {
            goto LABEL_102;
          }
          goto LABEL_166;
        }
        sub_1000DC32C(v27, a1, v61, v42, v29);
        swift_release();
        unint64_t v17 = v202;
      }
    }
    else
    {
      uint64_t v80 = sub_10014AD70();
      sub_1000DC32C(v80, v81, v82, v83, v84);
    }
    *(unsigned char *)(a7 + 72) = 0;
    *(void *)(a7 + 40) = 0;
    *(void *)(a7 + 48) = 0;
    sub_10014ACBC();
    *(unsigned char *)(a7 + *(int *)(v29 + 72)) = 3;
    unint64_t v85 = v214;
    sub_1000195B4(a7 + *(int *)(v29 + 92), 1, 1, v214);
    sub_10014AD60();
    *(unsigned char *)(v89 + 8) = 1;
    char v90 = (void *)(a7 + *(int *)(v29 + 80));
    *char v90 = 0;
    v90[1] = 0;
    unint64_t v34 = v217;
    goto LABEL_115;
  }
LABEL_169:
  swift_bridgeObjectRetain();
  uint64_t v86 = sub_10024F6F0();
  if (!v86) {
    goto LABEL_170;
  }
LABEL_42:
  uint64_t p_number = 0;
  a7 = v85 & 0xC000000000000001;
  unint64_t v200 = v85 + 32;
  while (1)
  {
    if (a7)
    {
      swift_bridgeObjectRetain();
      uint64_t v87 = sub_10024F380();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v87 = *(void *)(v85 + 8 * p_number + 32);
      swift_retain();
    }
    uint64_t v7 = *(unsigned __int8 *)(v87 + 112);
    swift_release();
    if (v7) {
      break;
    }
    uint64_t v88 = p_number + 1;
    if (__OFADD__(p_number, 1))
    {
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    ++p_number;
    if (v88 == v86)
    {
      uint64_t p_number = v86;
      break;
    }
  }
  if (v86 >= p_number)
  {
    if (p_number == v86) {
      goto LABEL_170;
    }
    uint64_t v7 = 1;
    a1 = v86;
  }
  else
  {
    uint64_t v7 = -1;
    a1 = p_number;
    uint64_t p_number = v86;
  }
  uint64_t v122 = 0;
  uint64_t v221 = v85 & 0xFFFFFFFFFFFFFF8;
  uint64_t v123 = v7;
  do
  {
    BOOL v124 = __OFADD__(v122, v7);
    v122 += v7;
    if (v124) {
      goto LABEL_158;
    }
    if (p_number == v86) {
      goto LABEL_159;
    }
    if (__OFADD__(p_number, 1)) {
      goto LABEL_160;
    }
    uint64_t v216 = v123;
    unint64_t v125 = v86;
    if (p_number + 1 != v86)
    {
      unint64_t v29 = p_number + 5;
      while (1)
      {
        unint64_t v125 = v29 - 4;
        if (a7)
        {
          swift_bridgeObjectRetain();
          uint64_t p_number = sub_10024F380();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v125 & 0x8000000000000000) != 0) {
            goto LABEL_154;
          }
          if (v125 >= *(void *)(v221 + 16)) {
            goto LABEL_155;
          }
          uint64_t p_number = *(void *)(v85 + 8 * v29);
          swift_retain();
        }
        unint64_t v34 = *(unsigned __int8 *)(p_number + 112);
        swift_release();
        if (v34) {
          goto LABEL_79;
        }
        v126 = (char *)(v29 - 3);
        if (__OFADD__(v125, 1)) {
          break;
        }
        ++v29;
        if (v126 == (char *)v86)
        {
          unint64_t v125 = v86;
          goto LABEL_79;
        }
      }
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
      goto LABEL_161;
    }
LABEL_79:
    uint64_t v123 = v216 + v7;
    uint64_t p_number = v125;
  }
  while (v125 != a1);
  if (!v122) {
    goto LABEL_170;
  }
  *(void *)&NSDecimal number = _swiftEmptyArrayStorage;
  sub_1000389BC();
  unint64_t v127 = 0;
  uint64_t p_number = (uint64_t)number;
  while (1)
  {
    a1 = p_number;
    if (a7)
    {
      swift_bridgeObjectRetain();
      uint64_t p_number = sub_10024F380();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t p_number = *(void *)(v85 + 8 * v127 + 32);
      swift_retain();
    }
    char v128 = *(unsigned char *)(p_number + 112);
    swift_release();
    if (v128) {
      break;
    }
    unint64_t v129 = v127 + 1;
    if (__OFADD__(v127, 1)) {
      goto LABEL_165;
    }
    uint64_t p_number = a1;
    ++v127;
    if (v129 == v86)
    {
      unint64_t v127 = v86;
      goto LABEL_127;
    }
  }
  uint64_t p_number = a1;
LABEL_127:
  if (v122 < 0) {
    __break(1u);
  }
  uint64_t v7 = 0;
  while (v7 != v216)
  {
    if (a7)
    {
      uint64_t v192 = p_number;
      uint64_t p_number = sub_10024F380();
    }
    else
    {
      if ((v127 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_168:
        __break(1u);
        goto LABEL_169;
      }
      if (v127 >= *(void *)(v221 + 16)) {
        goto LABEL_168;
      }
      uint64_t v192 = p_number;
      uint64_t p_number = *(void *)(v200 + 8 * v127);
      swift_retain();
    }
    a1 = *(void *)(p_number + 104);
    uint64_t v204 = *(void *)(p_number + 96);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v193 = (void *)v192;
    *(void *)&NSDecimal number = v192;
    unint64_t v34 = *(void *)(v192 + 16);
    unint64_t v194 = *(void *)(v192 + 24);
    unint64_t v29 = v34 + 1;
    if (v34 >= v194 >> 1)
    {
      uint64_t p_number = (uint64_t)&number;
      sub_1000389BC();
      uint64_t v193 = (void *)number;
    }
    v193[2] = v29;
    uint64_t v195 = &v193[2 * v34];
    v195[4] = v204;
    v195[5] = a1;
    if (v127 == v86) {
      goto LABEL_163;
    }
    if (__OFADD__(v127, 1)) {
      goto LABEL_164;
    }
    unint64_t v34 = (unint64_t)v193;
    uint64_t p_number = v86;
    if (v127 + 1 != v86)
    {
      a1 = v127 + 5;
      while (1)
      {
        uint64_t p_number = a1 - 4;
        if (a7)
        {
          swift_bridgeObjectRetain();
          uint64_t v196 = sub_10024F380();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (p_number < 0) {
            goto LABEL_156;
          }
          if ((unint64_t)p_number >= *(void *)(v221 + 16)) {
            goto LABEL_157;
          }
          uint64_t v196 = *(void *)(v85 + 8 * a1);
          swift_retain();
        }
        unint64_t v29 = *(unsigned __int8 *)(v196 + 112);
        swift_release();
        if (v29) {
          break;
        }
        uint64_t v197 = a1 - 3;
        if (__OFADD__(p_number, 1)) {
          goto LABEL_153;
        }
        ++a1;
        if (v197 == v86)
        {
          uint64_t p_number = v86;
          break;
        }
      }
    }
    ++v7;
    unint64_t v127 = p_number;
    uint64_t p_number = v34;
    if (v7 == v122)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_171;
    }
  }
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  swift_once();
LABEL_102:
  uint64_t v165 = *(void *)(qword_10034C0A0 + 16);
  if (v165)
  {
    uint64_t v166 = (uint64_t *)(qword_10034C0A0 + 48);
    while (1)
    {
      uint64_t v167 = *v166;
      uint64_t v168 = v166[1];
      BOOL v169 = *(v166 - 2) == a1 && *(v166 - 1) == p_number;
      if (v169 || (sub_10024FA60() & 1) != 0) {
        break;
      }
      v166 += 10;
      if (!--v165)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v167 = 0;
        uint64_t v168 = 0;
        goto LABEL_113;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_113:
    unint64_t v34 = v217;
    unint64_t v85 = v214;
    unint64_t v29 = (unint64_t)v219;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v167 = 0;
    uint64_t v168 = 0;
  }
  unint64_t v170 = (void *)(a7 + *(int *)(v29 + 80));
  *unint64_t v170 = v167;
  v170[1] = v168;
  unint64_t v17 = v202;
LABEL_115:
  uint64_t v171 = v206;
  int v172 = v207 & 1;
  sub_1000D79EC(v206);
  int v173 = sub_10001FA0C(v171, 1, v85);
  sub_100058654(v171);
  if (v173 == 1) {
    char v174 = 2;
  }
  else {
    char v174 = sub_1000D5828() & 1;
  }
  *(unsigned char *)(a7 + 73) = v174;
  sub_1000D7974(a7 + *(int *)(v29 + 48));
  unint64_t v175 = v213;
  sub_10024E010();
  char v176 = sub_1000D5964();
  v215(v175, v85);
  if (v176) {
    unint64_t v177 = 0x20101020100uLL >> (8 * sub_1000D55F8());
  }
  else {
    LOBYTE(v177) = 2;
  }
  uint64_t v178 = v208;
  uint64_t v179 = v209;
  *(unsigned char *)(a7 + 74) = v177;
  uint64_t v180 = sub_10006B418(v178, v210, v179, v172);
  uint64_t v182 = v181;
  uint64_t v184 = v183;
  uint64_t v186 = v185;
  swift_bridgeObjectRelease();
  uint64_t v187 = (uint64_t *)(a7 + *(int *)(v29 + 56));
  *uint64_t v187 = v180;
  v187[1] = v182;
  uint64_t v188 = (void *)(a7 + *(int *)(v29 + 52));
  *uint64_t v188 = v184;
  v188[1] = v186;
  uint64_t v189 = v211;
  sub_1000D5B40(v211);
  if (sub_10001FA0C(v189, 1, v85) == 1)
  {
    sub_10024DF90();

    swift_release();
    sub_100058654(v189);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t, unint64_t))(v205 + 32))(v17, v189, v85);
  }
  sub_1000195B4((uint64_t)v17, 0, 1, v85);
  sub_1001487FC((uint64_t)v17, a7 + *(int *)(v29 + 88));
  return swift_release();
}

uint64_t _s15StoreKit_Shared11MessageTypeO8rawValueACSgSi_tcfC_0(unint64_t a1)
{
  if (a1 >= 6) {
    return 5;
  }
  else {
    return (0x40302010005uLL >> (8 * a1));
  }
}

void sub_1001472C0()
{
}

uint64_t sub_1001472C8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s15StoreKit_Shared11MessageTypeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001472F4()
{
  return sub_10024EA60();
}

uint64_t sub_100147354()
{
  return sub_10024EA10();
}

uint64_t sub_1001473A4(uint64_t a1)
{
  return sub_1000D3014(a1, *v1);
}

uint64_t sub_1001473AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000D8874(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1001473D8()
{
  return sub_10024EA60();
}

uint64_t sub_100147438()
{
  return sub_10024EA10();
}

uint64_t sub_100147488(uint64_t a1)
{
  return DecodingState.hash(into:)(a1, *v1);
}

uint64_t sub_100147490()
{
  return sub_10024EA60();
}

uint64_t sub_1001474F0()
{
  return sub_10024EA10();
}

uint64_t sub_100147540(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v3 = v1;
  if (v1 == 1)
  {
    uint64_t v4 = sub_1000D427C();
    uint64_t v3 = sub_1000FE9DC(v4, v5);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v6 = *v2;
    *uint64_t v2 = v3;
    swift_retain();
    sub_100148878(v6);
  }
  sub_100148888(v1);
  return v3;
}

uint64_t sub_1001475E4()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_10014763C()
{
  return 20;
}

unint64_t sub_100147644(char a1)
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x49746375646F7270;
      break;
    case 5:
      unint64_t result = 0x656E65526F747561;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0x614464656E676973;
      break;
    case 12:
      unint64_t result = 0x707954726566666FLL;
      break;
    case 13:
      unint64_t result = 0x656449726566666FLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    case 15:
      unint64_t result = 0xD000000000000017;
      break;
    case 16:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 17:
      unint64_t result = 0x446C6177656E6572;
      break;
    case 18:
      unint64_t result = 0x506C6177656E6572;
      break;
    case 19:
      unint64_t result = 0x79636E6572727563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001478E8(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100311398);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v10 = v9 - v8;
  sub_10001C2A8(a1, a1[3]);
  sub_10014A02C();
  sub_10024FD40();
  sub_10024F940();
  if (!v1)
  {
    sub_10014A2B4();
    sub_10014AB3C();
    sub_10014AB74(2);
    sub_10014AC98(3);
    sub_10014AB74(4);
    sub_10014A300();
    sub_10024F980();
    sub_10024F8E0();
    sub_10014A34C();
    sub_10014AB3C();
    uint64_t v11 = (int *)type metadata accessor for RenewalInfo();
    sub_10024E030();
    sub_10014A398((unint64_t *)&qword_100309420, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10014AC74();
    sub_1000205DC(v11[13]);
    sub_10014AB74(9);
    sub_1000205DC(v11[14]);
    sub_10014AB74(10);
    sub_10024F980();
    sub_10014A3E0();
    sub_10014AB3C();
    sub_1000205DC(v11[17]);
    sub_10014AC98(13);
    sub_10014A42C();
    sub_10014AB3C();
    sub_100019524(&qword_100309410);
    sub_10001FC58((unint64_t *)&qword_100309418);
    sub_10024F980();
    sub_10014AC74();
    sub_10014AC74();
    sub_10024F920();
    sub_1000205DC(v11[20]);
    sub_10014AC98(19);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t sub_100147D44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  sub_10024E030();
  sub_10001B550();
  uint64_t v77 = v4;
  uint64_t v78 = v3;
  __chkstk_darwin(v3, v5);
  sub_10002059C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  unint64_t v17 = (char *)&v73 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v73 - v19;
  uint64_t v81 = sub_100019524(&qword_100311360);
  sub_10001B550();
  uint64_t v79 = v21;
  __chkstk_darwin(v22, v23);
  sub_10002059C();
  uint64_t v26 = v25 - v24;
  unint64_t v85 = (int *)type metadata accessor for RenewalInfo();
  __chkstk_darwin(v85, v27);
  sub_10002059C();
  sub_10014ADF0();
  *uint64_t v30 = v28;
  v30[1] = v29;
  uint64_t v83 = v30;
  uint64_t v31 = a1[3];
  unsigned int v32 = sub_10001C2A8(a1, v31);
  sub_10014A02C();
  uint64_t v80 = v26;
  uint64_t v33 = v84;
  sub_10024FD20();
  int v34 = v33;
  uint64_t v82 = a1;
  if (v33)
  {
    uint64_t v84 = v33;
    int v35 = 0;
    sub_10014AAF8();
  }
  else
  {
    LODWORD(v26) = v20;
    uint64_t v74 = v17;
    uint64_t v75 = v8;
    uint64_t v73 = v13;
    LODWORD(v8) = v79;
    char v87 = 1;
    sub_10014A078();
    int v35 = v81;
    sub_10024F800();
    uint64_t v39 = v83;
    *((unsigned char *)v83 + 16) = v86;
    LODWORD(v31) = v8;
    v39[3] = sub_10014AD98(2);
    v39[4] = v40;
    sub_10014AD88(3);
    v39[5] = sub_10024F7C0();
    v39[6] = v41;
    v39[7] = sub_10014AD98(4);
    v39[8] = v42;
    char v87 = 5;
    sub_10014A0C4();
    sub_10014ADD8();
    sub_10024F870();
    *((unsigned char *)v39 + 72) = v86;
    sub_10014AD88(6);
    *((unsigned char *)v39 + 73) = sub_10024F7D0();
    char v87 = 7;
    sub_10014A110();
    sub_10014ADD8();
    sub_10024F800();
    int v34 = 0;
    *((unsigned char *)v39 + 74) = v86;
    LOBYTE(v86) = 8;
    LODWORD(a1) = sub_10014A398(&qword_100309440, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10024F800();
    sub_1001487FC((uint64_t)v20, (uint64_t)v39 + v85[12]);
    sub_10014AD88(9);
    uint64_t v43 = sub_10024F830();
    uint64_t v84 = 0;
    uint64_t v44 = (void *)((char *)v39 + v85[13]);
    *uint64_t v44 = v43;
    v44[1] = v45;
    uint64_t v46 = sub_10014AD98(10);
    uint64_t v84 = 0;
    uint64_t v47 = (void *)((char *)v83 + v85[14]);
    *uint64_t v47 = v46;
    v47[1] = v48;
    LOBYTE(v86) = 11;
    sub_10014ACDC();
    sub_10024F870();
    uint64_t v84 = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))((char *)v83 + v85[15], v75, v78);
    char v87 = 12;
    sub_10014A15C();
    sub_10014ADB4();
    uint64_t v84 = 0;
    *((unsigned char *)v83 + v85[16]) = v86;
    LOBYTE(v86) = 13;
    uint64_t v49 = sub_10024F7C0();
    uint64_t v84 = 0;
    uint64_t v50 = (void *)((char *)v83 + v85[17]);
    *uint64_t v50 = v49;
    v50[1] = v51;
    char v87 = 14;
    sub_10014A1A8();
    sub_10014ADB4();
    uint64_t v84 = 0;
    *((unsigned char *)v83 + v85[18]) = v86;
    sub_100019524(&qword_100309410);
    char v87 = 15;
    sub_10001FC58(&qword_100309438);
    unsigned int v32 = v80;
    uint64_t v52 = v84;
    sub_10024F870();
    uint64_t v84 = v52;
    if (v52)
    {
      uint64_t v53 = sub_10014AAE4();
      v54(v53);
      sub_10014ABC8();
      LODWORD(v31) = 1;
    }
    else
    {
      *(void *)((char *)v83 + v85[21]) = v86;
      LOBYTE(v86) = 16;
      sub_10014ACDC();
      sub_10024F800();
      uint64_t v84 = 0;
      sub_1001487FC((uint64_t)v74, (uint64_t)v83 + v85[22]);
      LOBYTE(v86) = 17;
      sub_10014ACDC();
      uint64_t v55 = v84;
      sub_10024F800();
      uint64_t v84 = v55;
      if (v55)
      {
        uint64_t v56 = sub_10014AAE4();
        v57(v56);
        sub_10014AB98();
        LODWORD(v80) = v58;
      }
      else
      {
        sub_1001487FC((uint64_t)v73, (uint64_t)v83 + v85[23]);
        LOBYTE(v86) = 18;
        uint64_t v59 = v84;
        uint64_t v60 = sub_10024F810();
        uint64_t v84 = v59;
        if (!v59)
        {
          unint64_t v62 = (char *)v83 + v85[19];
          *(void *)unint64_t v62 = v60;
          v62[8] = v61 & 1;
          LOBYTE(v86) = 19;
          uint64_t v63 = sub_10024F7C0();
          uint64_t v84 = 0;
          uint64_t v66 = v63;
          uint64_t v68 = v67;
          uint64_t v69 = sub_10014AAE4();
          v70(v69);
          uint64_t v71 = (uint64_t)v83;
          uint64_t v72 = (void *)((char *)v83 + v85[20]);
          *uint64_t v72 = v66;
          v72[1] = v68;
          sub_10014A1F4(v71, v76);
          sub_10001C2EC((uint64_t)v82);
          return sub_10014A258(v71);
        }
        uint64_t v64 = sub_10014AAE4();
        v65(v64);
        int v35 = 1;
        unsigned int v32 = 1;
        int v34 = 1;
        LODWORD(v26) = 1;
        LODWORD(v20) = 1;
        LODWORD(v8) = 1;
        LODWORD(a1) = 1;
        LODWORD(v31) = 1;
        LODWORD(v79) = 1;
        LODWORD(v80) = 1;
        LODWORD(v81) = 1;
      }
    }
  }
  uint64_t v36 = (char *)v83;
  sub_10001C2EC((uint64_t)v82);
  uint64_t result = swift_bridgeObjectRelease();
  if (v35)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (!v32)
    {
LABEL_6:
      if (!v34) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  else if (!v32)
  {
    goto LABEL_6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v34) {
LABEL_7:
  }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_8:
  char v38 = v85;
  if (v26) {
    uint64_t result = sub_100058654((uint64_t)&v36[v85[12]]);
  }
  if (v20)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (!v8)
    {
LABEL_12:
      if (!a1) {
        goto LABEL_13;
      }
LABEL_27:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(&v36[v38[15]], v78);
      if (!v31) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
  else if (!v8)
  {
    goto LABEL_12;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (a1) {
    goto LABEL_27;
  }
LABEL_13:
  if (v31) {
LABEL_14:
  }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
  if (v79) {
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v80) {
    uint64_t result = sub_100058654((uint64_t)&v36[v38[22]]);
  }
  if (v81) {
    return sub_100058654((uint64_t)&v36[v38[23]]);
  }
  return result;
}

uint64_t sub_100148610(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FB8A0(*a1, *a2);
}

Swift::Int sub_10014861C()
{
  return sub_1001D374C(*v0);
}

uint64_t sub_100148624(uint64_t a1)
{
  return sub_1000D2548(a1, *v1);
}

Swift::Int sub_10014862C(uint64_t a1)
{
  return sub_1000D3A68(a1, *v1);
}

uint64_t sub_100148634@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001475E4();
  *a1 = result;
  return result;
}

unint64_t sub_100148664@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100147644(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100148690()
{
  return sub_1001478E4(*v0);
}

uint64_t sub_100148698@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100147638();
  *a1 = result;
  return result;
}

void sub_1001486C0(unsigned char *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1001486CC(uint64_t a1)
{
  unint64_t v2 = sub_10014A02C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100148708(uint64_t a1)
{
  unint64_t v2 = sub_10014A02C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100148744@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100147D44(a1, a2);
}

uint64_t sub_10014875C(void *a1)
{
  return sub_1001478E8(a1);
}

uint64_t type metadata accessor for RenewalInfo()
{
  uint64_t result = qword_1003112E0;
  if (!qword_1003112E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001487BC()
{
  if (*(void *)(v0 + 16) != 1) {
    swift_release();
  }
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001487FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100148864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 0xFF) {
    return sub_1000AC290(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_100148878(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100148888(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

void *sub_100148898(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_WORD *)(a1 + 73) = *(_WORD *)((char *)a2 + 73);
    uint64_t v12 = a3[12];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    uint64_t v15 = sub_10024E030();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      sub_1000195B4((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v18 = a3[13];
    uint64_t v19 = a3[14];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (void *)((char *)v4 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[15];
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (uint64_t)a2 + v26;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v27, v28, v15);
    uint64_t v30 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    uint64_t v31 = (void *)((char *)v4 + v30);
    unsigned int v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = a3[18];
    uint64_t v36 = a3[19];
    char v37 = *((unsigned char *)a2 + v35);
    *uint64_t v31 = v34;
    v31[1] = v33;
    *((unsigned char *)v4 + v35) = v37;
    char v38 = (char *)v4 + v36;
    *(void *)char v38 = *(uint64_t *)((char *)a2 + v36);
    v38[8] = *((unsigned char *)a2 + v36 + 8);
    uint64_t v39 = a3[20];
    uint64_t v40 = a3[21];
    uint64_t v41 = (void *)((char *)v4 + v39);
    uint64_t v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    uint64_t v44 = *(uint64_t *)((char *)a2 + v40);
    *uint64_t v41 = *v42;
    v41[1] = v43;
    *(void *)((char *)v4 + v40) = v44;
    uint64_t v45 = a3[22];
    uint64_t v46 = (char *)v4 + v45;
    uint64_t v47 = (char *)a2 + v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v47, 1, v15))
    {
      uint64_t v48 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v29(v46, (uint64_t)v47, v15);
      sub_1000195B4((uint64_t)v46, 0, 1, v15);
    }
    uint64_t v49 = a3[23];
    uint64_t v50 = (char *)v4 + v49;
    uint64_t v51 = (char *)a2 + v49;
    if (sub_10001FA0C((uint64_t)v51, 1, v15))
    {
      uint64_t v52 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      v29(v50, (uint64_t)v51, v15);
      sub_1000195B4((uint64_t)v50, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_100148C08(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = sub_10024E030();
  if (!sub_10001FA0C(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v9(a1 + a2[15], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[22];
  if (!sub_10001FA0C(v6, 1, v5)) {
    v9(v6, v5);
  }
  uint64_t v7 = a1 + a2[23];
  uint64_t result = sub_10001FA0C(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

uint64_t sub_100148DC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  uint64_t v11 = a3[12];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  uint64_t v14 = sub_10024E030();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    sub_1000195B4((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = a3[13];
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[15];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v25, v26, v14);
  uint64_t v28 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  uint64_t v33 = a3[18];
  uint64_t v34 = a3[19];
  char v35 = *(unsigned char *)(a2 + v33);
  *uint64_t v29 = v32;
  v29[1] = v31;
  *(unsigned char *)(a1 + v33) = v35;
  uint64_t v36 = a1 + v34;
  *(void *)uint64_t v36 = *(void *)(a2 + v34);
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(a2 + v34 + 8);
  uint64_t v37 = a3[20];
  uint64_t v38 = a3[21];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  uint64_t v42 = *(void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v41;
  *(void *)(a1 + v38) = v42;
  uint64_t v43 = a3[22];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v45, 1, v14))
  {
    uint64_t v46 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    v27(v44, v45, v14);
    sub_1000195B4((uint64_t)v44, 0, 1, v14);
  }
  uint64_t v47 = a3[23];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  if (sub_10001FA0C((uint64_t)v49, 1, v14))
  {
    uint64_t v50 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    v27(v48, v49, v14);
    sub_1000195B4((uint64_t)v48, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1001490E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  uint64_t v6 = a3[12];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10024E030();
  int v10 = sub_10001FA0C((uint64_t)v7, 1, v9);
  int v11 = sub_10001FA0C((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      sub_1000195B4((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = *(void (**)(void *, const void *, uint64_t))(v20 + 24);
  v21((void *)(a1 + a3[15]), (const void *)(a2 + a3[15]), v9);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v22 = a3[17];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v25 = a3[19];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  char v28 = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = v28;
  uint64_t v29 = a3[20];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[22];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  int v35 = sub_10001FA0C(a1 + v32, 1, v9);
  int v36 = sub_10001FA0C((uint64_t)v34, 1, v9);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v33, v34, v9);
      sub_1000195B4((uint64_t)v33, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v33, v9);
LABEL_12:
    uint64_t v37 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  v21(v33, v34, v9);
LABEL_13:
  uint64_t v38 = a3[23];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (const void *)(a2 + v38);
  int v41 = sub_10001FA0C(a1 + v38, 1, v9);
  int v42 = sub_10001FA0C((uint64_t)v40, 1, v9);
  if (!v41)
  {
    if (!v42)
    {
      v21(v39, v40, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v39, v9);
    goto LABEL_18;
  }
  if (v42)
  {
LABEL_18:
    uint64_t v43 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v39, v40, v9);
  sub_1000195B4((uint64_t)v39, 0, 1, v9);
  return a1;
}

uint64_t sub_1001495E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  uint64_t v7 = a3[12];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v10 = sub_10024E030();
  if (sub_10001FA0C((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    uint64_t v12 = *(void *)(v10 - 8);
  }
  else
  {
    uint64_t v12 = *(void *)(v10 - 8);
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v10);
    sub_1000195B4((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v14((void *)(a1 + a3[15]), (const void *)(a2 + a3[15]), v10);
  uint64_t v15 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[22];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (sub_10001FA0C(a2 + v20, 1, v10))
  {
    uint64_t v23 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v14(v21, v22, v10);
    sub_1000195B4((uint64_t)v21, 0, 1, v10);
  }
  uint64_t v24 = a3[23];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  if (sub_10001FA0C((uint64_t)v26, 1, v10))
  {
    uint64_t v27 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v14(v25, v26, v10);
    sub_1000195B4((uint64_t)v25, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1001498A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  uint64_t v10 = a3[12];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_10024E030();
  int v14 = sub_10001FA0C((uint64_t)v11, 1, v13);
  int v15 = sub_10001FA0C((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      sub_1000195B4((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = a3[13];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[14];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = *(void (**)(void *, const void *, uint64_t))(v28 + 40);
  v29((void *)(a1 + a3[15]), (const void *)(a2 + a3[15]), v13);
  uint64_t v30 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a3[20];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[22];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  int v46 = sub_10001FA0C(a1 + v43, 1, v13);
  int v47 = sub_10001FA0C((uint64_t)v45, 1, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v44, v45, v13);
      sub_1000195B4((uint64_t)v44, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v44, v13);
LABEL_12:
    uint64_t v48 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_13;
  }
  v29(v44, v45, v13);
LABEL_13:
  uint64_t v49 = a3[23];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  int v52 = sub_10001FA0C(a1 + v49, 1, v13);
  int v53 = sub_10001FA0C((uint64_t)v51, 1, v13);
  if (!v52)
  {
    if (!v53)
    {
      v29(v50, v51, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v50, v13);
    goto LABEL_18;
  }
  if (v53)
  {
LABEL_18:
    uint64_t v54 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v50, v51, v13);
  sub_1000195B4((uint64_t)v50, 0, 1, v13);
  return a1;
}

uint64_t sub_100149D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100149D24);
}

uint64_t sub_100149D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100019524((uint64_t *)&unk_10030FD70);
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 48);
    }
    else
    {
      uint64_t v10 = sub_10024E030();
      uint64_t v11 = *(int *)(a3 + 60);
    }
    return sub_10001FA0C(a1 + v11, a2, v10);
  }
}

uint64_t sub_100149DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100149DE8);
}

uint64_t sub_100149DE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_100019524((uint64_t *)&unk_10030FD70);
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 48);
    }
    else
    {
      uint64_t v10 = sub_10024E030();
      uint64_t v11 = *(int *)(a4 + 60);
    }
    return sub_1000195B4(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100149E94()
{
  sub_1000C1D28();
  if (v0 <= 0x3F)
  {
    sub_10024E030();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100149FD4(uint64_t a1)
{
  uint64_t result = sub_10014A398((unint64_t *)&unk_10030B878, (void (*)(uint64_t))type metadata accessor for RenewalInfo);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10014A02C()
{
  unint64_t result = qword_100311368;
  if (!qword_100311368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311368);
  }
  return result;
}

unint64_t sub_10014A078()
{
  unint64_t result = qword_100311370;
  if (!qword_100311370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311370);
  }
  return result;
}

unint64_t sub_10014A0C4()
{
  unint64_t result = qword_100311378;
  if (!qword_100311378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311378);
  }
  return result;
}

unint64_t sub_10014A110()
{
  unint64_t result = qword_100311380;
  if (!qword_100311380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311380);
  }
  return result;
}

unint64_t sub_10014A15C()
{
  unint64_t result = qword_100311388;
  if (!qword_100311388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311388);
  }
  return result;
}

unint64_t sub_10014A1A8()
{
  unint64_t result = qword_100311390;
  if (!qword_100311390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311390);
  }
  return result;
}

uint64_t sub_10014A1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RenewalInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014A258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RenewalInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10014A2B4()
{
  unint64_t result = qword_1003113A0;
  if (!qword_1003113A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113A0);
  }
  return result;
}

unint64_t sub_10014A300()
{
  unint64_t result = qword_1003113A8;
  if (!qword_1003113A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113A8);
  }
  return result;
}

unint64_t sub_10014A34C()
{
  unint64_t result = qword_1003113B0;
  if (!qword_1003113B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113B0);
  }
  return result;
}

uint64_t sub_10014A398(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10014A3E0()
{
  unint64_t result = qword_1003113B8;
  if (!qword_1003113B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113B8);
  }
  return result;
}

unint64_t sub_10014A42C()
{
  unint64_t result = qword_1003113C0;
  if (!qword_1003113C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113C0);
  }
  return result;
}

uint64_t sub_10014A478(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 19) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v5 = v6 - 20;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_10014A500(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014A5CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

void type metadata accessor for RenewalInfo.CodingKeys()
{
}

void type metadata accessor for RenewalInfo.PriceIncreaseStatus()
{
}

unsigned char *sub_10014A610(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014A6DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for RenewalInfo.RenewalStatus()
{
}

unsigned char *sub_10014A710(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014A7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for RenewalInfo.ExpirationIntent()
{
}

unint64_t sub_10014A814()
{
  unint64_t result = qword_1003113C8;
  if (!qword_1003113C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113C8);
  }
  return result;
}

unint64_t sub_10014A864()
{
  unint64_t result = qword_1003113D0;
  if (!qword_1003113D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113D0);
  }
  return result;
}

unint64_t sub_10014A8B4()
{
  unint64_t result = qword_1003113D8;
  if (!qword_1003113D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113D8);
  }
  return result;
}

unint64_t sub_10014A904()
{
  unint64_t result = qword_1003113E0;
  if (!qword_1003113E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113E0);
  }
  return result;
}

unint64_t sub_10014A954()
{
  unint64_t result = qword_1003113E8;
  if (!qword_1003113E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113E8);
  }
  return result;
}

unint64_t sub_10014A9A4()
{
  unint64_t result = qword_1003113F0;
  if (!qword_1003113F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113F0);
  }
  return result;
}

unint64_t sub_10014A9F0()
{
  unint64_t result = qword_1003113F8;
  if (!qword_1003113F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003113F8);
  }
  return result;
}

unint64_t sub_10014AA3C()
{
  unint64_t result = qword_100311400;
  if (!qword_100311400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311400);
  }
  return result;
}

unint64_t sub_10014AA88()
{
  unint64_t result = qword_100311408;
  if (!qword_100311408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311408);
  }
  return result;
}

uint64_t sub_10014AAE4()
{
  return *(void *)(v0 - 136);
}

void sub_10014AAF8()
{
  *(_DWORD *)(v0 - 144) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
}

uint64_t sub_10014AB24()
{
  return v0;
}

uint64_t sub_10014AB3C()
{
  return sub_10024F910();
}

uint64_t sub_10014AB60()
{
  return v0;
}

uint64_t sub_10014AB74@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_10024F940();
}

void sub_10014AB98()
{
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 144) = 1;
}

void sub_10014ABC8()
{
  *(_DWORD *)(v0 - 144) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
}

void sub_10014ABF4()
{
  *(_DWORD *)(v0 - 144) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
}

void sub_10014AC20()
{
  *(_DWORD *)(v0 - 144) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
}

uint64_t sub_10014AC4C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 192) = a2;
  return v2;
}

uint64_t sub_10014AC74()
{
  return sub_10024F910();
}

uint64_t sub_10014AC98@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_10024F8D0();
}

void sub_10014ACBC()
{
  uint64_t v2 = *(void *)(v1 - 168);
  uint64_t v3 = (void *)(v0 + *(int *)(v2 + 68));
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(unsigned char *)(v0 + *(int *)(v2 + 64)) = 4;
}

uint64_t sub_10014ACDC()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_10014ACF0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 192) = a2;
  return v2;
}

void sub_10014AD0C()
{
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = v1;
  unsigned int v6 = (void *)(v3 + *(int *)(*(void *)(v5 - 168) + 68));
  *unsigned int v6 = v0;
  v6[1] = v4;
}

uint64_t sub_10014AD28()
{
  return v0;
}

void sub_10014AD38()
{
  *(void *)(v0 - 192) = 0;
}

void sub_10014AD60()
{
  *(void *)(v1 + *(int *)(v0 + 76)) = 0;
}

uint64_t sub_10014AD70()
{
  return v0;
}

uint64_t sub_10014AD88@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_10014AD98@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_10024F830();
}

uint64_t sub_10014ADB4()
{
  return sub_10024F800();
}

uint64_t sub_10014AE04(unint64_t a1)
{
  if (a1 < 9) {
    return 2 * a1 + 14;
  }
  type metadata accessor for ASOctaneSimulatedErrorCategory(0);
  uint64_t result = sub_10024FB20();
  __break(1u);
  return result;
}

uint64_t sub_10014AE54(unint64_t a1)
{
  if (a1 < 9) {
    return 2 * a1 + 13;
  }
  type metadata accessor for ASOctaneSimulatedErrorCategory(0);
  uint64_t result = sub_10024FB20();
  __break(1u);
  return result;
}

unint64_t sub_10014AEA4(unint64_t result)
{
  switch(result)
  {
    case 0uLL:
      return result;
    case 1uLL:
      uint64_t result = 0x6E776F6E6B6E55;
      break;
    case 2uLL:
      uint64_t result = 0x6E61432072657355;
      break;
    case 3uLL:
      uint64_t result = 0x206B726F7774654ELL;
      break;
    case 4uLL:
      uint64_t result = 0x45206D6574737953;
      break;
    case 5uLL:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 6uLL:
      uint64_t result = 0x69746E4520746F4ELL;
      break;
    case 7uLL:
      uint64_t result = 0xD000000000000010;
      break;
    case 8uLL:
    case 0xCuLL:
    case 0x11uLL:
      uint64_t result = 0xD000000000000013;
      break;
    case 9uLL:
      uint64_t result = 0xD000000000000014;
      break;
    case 0xAuLL:
      uint64_t result = 0xD000000000000014;
      break;
    case 0xBuLL:
      uint64_t result = 0xD000000000000018;
      break;
    case 0xDuLL:
      uint64_t result = 0xD000000000000017;
      break;
    case 0xEuLL:
      uint64_t result = 0xD000000000000018;
      break;
    case 0xFuLL:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x10uLL:
      uint64_t result = 0x64656C696146;
      break;
    case 0x12uLL:
      uint64_t result = 0xD000000000000019;
      break;
    case 0x13uLL:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 0x14uLL:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x15uLL:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x16uLL:
      uint64_t result = 0xD00000000000001BLL;
      break;
    default:
      type metadata accessor for ASOctaneSimulatedError(0);
      sub_10024FB20();
      __break(1u);
      JUMPOUT(0x10014B138);
  }
  return result;
}

void sub_10014B194()
{
  static ASOctaneSimulatedErrorCategory.allCases = (uint64_t)&off_1002D8650;
}

uint64_t *ASOctaneSimulatedErrorCategory.allCases.unsafeMutableAddressor()
{
  if (qword_100308D50 != -1) {
    swift_once();
  }
  return &static ASOctaneSimulatedErrorCategory.allCases;
}

uint64_t static ASOctaneSimulatedErrorCategory.allCases.getter()
{
  if (qword_100308D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ASOctaneSimulatedErrorCategory.allCases.setter(uint64_t a1)
{
  if (qword_100308D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ASOctaneSimulatedErrorCategory.allCases = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ASOctaneSimulatedErrorCategory.allCases.modify())()
{
  if (qword_100308D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_10014B378()
{
  unint64_t result = qword_100311410;
  if (!qword_100311410)
  {
    sub_10001B028(&qword_100311418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100311410);
  }
  return result;
}

uint64_t sub_10014B3CC@<X0>(void *a1@<X8>)
{
  *a1 = static ASOctaneSimulatedErrorCategory.allCases;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10014B420(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E55 && a2 == 0xE700000000000000;
  if (v2 || (sub_1000CC324() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6E61432072657355 && a2 == 0xEE0064656C6C6563;
    if (v6 || (sub_1000CC324() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x206B726F7774654ELL && a2 == 0xED0000726F727245;
      if (v7 || (sub_1000CC324() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x45206D6574737953 && a2 == 0xEC000000726F7272;
        if (v8 || (sub_1000CC324() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD00000000000001BLL && (sub_10014BBA8((uint64_t)"Not Available In Storefront"), v2) {
               || (sub_1000CC324() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x69746E4520746F4ELL && a2 == 0xEC00000064656C74;
          if (v9 || (sub_1000CC324() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x800000010027EE10 || (sub_1000CC324() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000013 && (sub_10014BBA8((uint64_t)"Product Unavailable"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000014 && (sub_10014BBA8((uint64_t)"Purchase Not Allowed"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000014 && (sub_10014BBA8((uint64_t)"Ineligible For Offer"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000018 && (sub_10014BBA8((uint64_t)"Invalid Offer Identifier"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000013 && (sub_10014BBA8((uint64_t)"Invalid Offer Price"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x800000010027ED50 || (sub_1000CC324() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else if (a1 == 0xD000000000000018 && (sub_10014BBA8((uint64_t)"Missing Offer Parameters"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 14;
          }
          else if (a1 == 0xD000000000000011 && (sub_10014BBA8((uint64_t)"Duplicate Request"), v2) {
                 || (sub_1000CC324() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 15;
          }
          else
          {
            BOOL v10 = a1 == 0x64656C696146 && a2 == 0xE600000000000000;
            if (v10 || (sub_1000CC324() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000013 && (sub_10014BBA8((uint64_t)"Revoked Certificate"), v2) {
                   || (sub_1000CC324() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x800000010027ECD0 || (sub_1000CC324() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else if (a1 == 0xD00000000000001BLL && (sub_10014BBA8((uint64_t)"Invalid Device Verification"), v2) {
                   || (sub_1000CC324() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 19;
            }
            else if (a1 == 0xD000000000000010 && (sub_10014BBA8((uint64_t)"Invalid Encoding"), v2) {
                   || (sub_1000CC324() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 20;
            }
            else if (a1 == 0xD000000000000011 && (sub_10014BBA8((uint64_t)"Invalid Signature"), v2) {
                   || (sub_1000CC324() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 21;
            }
            else if (a1 == 0xD00000000000001BLL && (sub_10014BBA8((uint64_t)"Missing Required Properties"), v2))
            {
              swift_bridgeObjectRelease();
              return 22;
            }
            else
            {
              char v11 = sub_1000CC324();
              swift_bridgeObjectRelease();
              if (v11) {
                return 22;
              }
              else {
                return 0;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_10014BBA8@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_10014BBB8(uint64_t a1)
{
  return sub_10014BC94(a1, &qword_10030A518, (uint64_t (*)(uint64_t))sub_10003301C);
}

uint64_t sub_10014BBD8()
{
  return sub_100033028();
}

uint64_t sub_10014BC04()
{
  return sub_10014C0AC();
}

uint64_t sub_10014BC34()
{
  return NIOAny.forceAsByteBuffer()();
}

void sub_10014BC5C()
{
}

uint64_t ChannelInboundHandler.unwrapInboundIn(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_10014C714(a1);
}

uint64_t sub_10014BC94(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_100019524(a2);
  return a3(v4);
}

uint64_t ChannelOutboundHandler.unwrapOutboundIn(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_10014C714(a1);
}

uint64_t sub_10014BCD4@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = (ValueMetadata *)sub_10014C71C();
  return NIOAny.forceAs<A>(type:)(v2, a1);
}

uint64_t sub_10014BD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t, unint64_t, unint64_t)@<X4>, uint64_t a6@<X8>)
{
  unint64_t v11 = HIBYTE(a3);
  *(void *)(a6 + 24) = sub_100019524(a4);
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 22) = BYTE6(a3);
  *(_WORD *)(a6 + 20) = WORD2(a3);
  *(unsigned char *)(a6 + 23) = v11;
  *(unsigned char *)(a6 + 56) = 2;
  return a5(a1, a2, a3, v11);
}

uint64_t sub_10014BD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  *(unsigned char *)(a4 + 22) = BYTE6(a3);
  *(_WORD *)(a4 + 20) = WORD2(a3);
  *(unsigned char *)(a4 + 56) = 0;
  return sub_10003AFD0();
}

uint64_t sub_10014BDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10014BD0C(a1, a2, a3, &qword_10030A1F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_10014C544, a4);
}

_OWORD *_EmittingChannelHandler.wrapOutboundOut(_:)@<X0>(_OWORD *a1@<X8>)
{
  sub_10014C71C();
  sub_10014C6CC();
  __chkstk_darwin(v4, v5);
  BOOL v7 = sub_10014C6EC(v6, v10);
  v8(v7);
  return NIOAny.init<A>(_:)(v2, v1, a1);
}

uint64_t sub_10014BE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C054(a1, &qword_10030A518, (uint64_t (*)(uint64_t))sub_10003301C, a2);
}

uint64_t sub_10014BE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C43C(a1, &qword_10030A518, a2);
}

uint64_t sub_10014BE94@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = a2;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  *(void *)a3 = v5;
  long long v6 = a1[1];
  v5[1] = *a1;
  v5[2] = v6;
  *(_OWORD *)((char *)v5 + 47) = *(_OWORD *)((char *)a1 + 31);
  *(unsigned char *)(a3 + 56) = 2;
  return sub_10014C674((uint64_t)a1);
}

void sub_10014BEF0(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for Never;
  *(unsigned char *)(a1 + 56) = 2;
}

uint64_t sub_10014BF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  *(unsigned char *)(a4 + 22) = BYTE6(a3);
  *(_WORD *)(a4 + 20) = WORD2(a3);
  *(unsigned char *)(a4 + 56) = 0;
  return swift_retain();
}

_OWORD *sub_10014BF28@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100030CE8(a1, (uint64_t)v7);
  uint64_t v5 = &type metadata for NIOAny;
  *(void *)&long long v4 = swift_allocObject();
  sub_100030CE8((uint64_t)v7, v4 + 16);
  char v6 = 2;
  sub_10003908C((uint64_t)v7);
  return sub_10009AA80(&v4, a2);
}

_OWORD *ChannelInboundHandler.wrapInboundOut(_:)@<X0>(_OWORD *a1@<X8>)
{
  sub_10014C71C();
  sub_10014C6CC();
  __chkstk_darwin(v4, v5);
  BOOL v7 = sub_10014C6EC(v6, v10);
  v8(v7);
  return NIOAny.init<A>(_:)(v2, v1, a1);
}

uint64_t sub_10014C034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C054(a1, &qword_10030A1F8, (uint64_t (*)(uint64_t))sub_100033424, a2);
}

uint64_t sub_10014C054@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t result = sub_10014BC94(a1, a2, a3);
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v6;
  *(_DWORD *)(a4 + 16) = v7;
  *(unsigned char *)(a4 + 22) = v8;
  *(_WORD *)(a4 + 20) = v9;
  *(unsigned char *)(a4 + 23) = v10;
  return result;
}

uint64_t sub_10014C0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C500(a1, &qword_10030A1F8, a2);
}

uint64_t sub_10014C0AC()
{
  uint64_t v0 = (ValueMetadata *)sub_100019524(&qword_10030A528);
  if (v0 == &type metadata for ByteBuffer)
  {
    uint64_t v15 = NIOAny.forceAsByteBuffer()();
    uint64_t v16 = v2;
    int v17 = v3;
    __int16 v18 = v4;
    char v19 = v5;
LABEL_9:
    swift_dynamicCast();
    return v20;
  }
  if (v0 == &type metadata for FileRegion)
  {
    uint64_t v15 = NIOAny.forceAsFileRegion()();
    uint64_t v16 = v6;
    int v17 = v7;
    __int16 v18 = v8;
    char v19 = v9;
    goto LABEL_9;
  }
  if (v0 == &type metadata for IOData)
  {
    uint64_t v15 = NIOAny.forceAsIOData()();
    uint64_t v16 = v10;
    int v17 = v11;
    char v19 = v12;
    __int16 v18 = v13;
    goto LABEL_9;
  }
  if (v0 == (ValueMetadata *)sub_100019524(&qword_10030A530))
  {
    NIOAny.forceAsByteEnvelope()((uint64_t)&v15);
    goto LABEL_9;
  }
  uint64_t v20 = sub_100033430();
  uint64_t v21 = v1;
  return v20;
}

uint64_t sub_10014C1F0(uint64_t a1)
{
  sub_10014C738(a1);
  return sub_10014BE94(v3, (uint64_t)&type metadata for NIOHTTPServerRequestFull, v1);
}

uint64_t sub_10014C228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C054(a1, &qword_10030A520, (uint64_t (*)(uint64_t))sub_100033418, a2);
}

uint64_t sub_10014C248(uint64_t a1)
{
  sub_10014C738(a1);
  return sub_10014BE94(v3, (uint64_t)&type metadata for NIOHTTPClientResponseFull, v1);
}

uint64_t sub_10014C280()
{
  sub_10002F9E0();
  return ChannelInboundHandler.unwrapInboundIn(_:)(v0);
}

_OWORD *sub_10014C2A0()
{
  sub_10002F9E0();
  return ChannelInboundHandler.wrapInboundOut(_:)(v0);
}

_OWORD *sub_10014C2C0@<X0>(_OWORD *a1@<X8>)
{
  return _EmittingChannelHandler.wrapOutboundOut(_:)(a1);
}

uint64_t sub_10014C2D8()
{
  sub_10002F9E0();
  return ChannelOutboundHandler.unwrapOutboundIn(_:)(v0);
}

uint64_t sub_10014C2F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10014BC04();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10014C324@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10014BC34();
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 20) = v6;
  *(unsigned char *)(a1 + 22) = v7;
  return result;
}

uint64_t sub_10014C368()
{
  sub_10014C74C();
  return sub_10014BF08(v5, v3, v0 | (v1 << 32) | (v2 << 48), v4);
}

uint64_t sub_10014C394()
{
  sub_10014C74C();
  return sub_10014BF08(v5, v3, v0 | (v1 << 32) | (v2 << 48), v4);
}

_OWORD *sub_10014C3C8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10014BF28(a1, a2);
}

_OWORD *sub_10014C3E0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10014BF28(a1, a2);
}

uint64_t sub_10014C404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C43C(a1, &qword_10030A520, a2);
}

uint64_t sub_10014C410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C054(a1, &qword_10030A510, (uint64_t (*)(uint64_t))sub_100033200, a2);
}

uint64_t sub_10014C430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014C500(a1, &qword_10030A510, a2);
}

uint64_t sub_10014C43C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  return sub_10014BD0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_100093004, a3);
}

uint64_t sub_10014C474@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10014BBD8();
  *a1 = result;
  return result;
}

void sub_10014C49C(uint64_t a1@<X8>)
{
}

uint64_t sub_10014C4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014BD98(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), a2);
}

uint64_t sub_10014C500@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  return sub_10014BD0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_10014C544, a3);
}

uint64_t sub_10014C544(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2)
  {
LABEL_5:
    return swift_bridgeObjectRetain();
  }
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_retain();
    goto LABEL_5;
  }
  return sub_10003AFD0();
}

uint64_t sub_10014C5C0()
{
  int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 == 2)
  {
    sub_10001C2EC(v0 + 16);
  }
  else if (v1 == 1)
  {
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 48) != 4 && (~*(void *)(v0 + 56) & 0xF000000000000007) != 0) {
      swift_release();
    }
  }
  else if (!*(unsigned char *)(v0 + 72))
  {
    sub_10001B070();
  }
  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_10014C674(uint64_t a1)
{
  return a1;
}

char *sub_10014C6EC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t sub_10014C714@<X0>(uint64_t a1@<X8>)
{
  return sub_10014BCD4(a1);
}

uint64_t sub_10014C71C()
{
  return swift_getAssociatedTypeWitness();
}

__n128 sub_10014C738(uint64_t a1)
{
  return *(__n128 *)(a1 + 31);
}

uint64_t sub_10014C760(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  else
  {
    sub_10014F364();
    v2._countAndFlagsBits = sub_10024F230();
    sub_10024E800(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *static MultiThreadedEventLoopGroup.currentEventLoop.getter()
{
  if (qword_100308D60 != -1) {
    swift_once();
  }
  return sub_10014C96C((void (*)(void))type metadata accessor for SelectableEventLoop);
}

void *ScheduledTask.__allocating_init(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000B7BF8();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  return result;
}

uint64_t sub_10014C8DC(unint64_t a1)
{
  unint64_t v3 = *(void *)(v1 + 48);
  if ((v3 & 0x8000000000000000) != 0 || (a1 & 0x8000000000000000) != 0)
  {
    sub_10009A12C();
    uint64_t result = sub_10009A108();
    __break(1u);
  }
  else if (v3 >= a1)
  {
    return static NIODeadline.- infix(_:_:)(v3, a1);
  }
  else
  {
    return 0;
  }
  return result;
}

void *sub_10014C954()
{
  return sub_10014C96C((void (*)(void))sub_100051014);
}

void *sub_10014C96C(void (*a1)(void))
{
  uint64_t result = pthread_getspecific(*(void *)(*(void *)(v1 + 16) + 16));
  if (result)
  {
    swift_unknownObjectRetain();
    a1(0);
    swift_dynamicCast();
    return (void *)v4;
  }
  return result;
}

void *sub_10014C9E0()
{
  uint64_t v2 = v0;
  *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)(v0 + 32) = -1;
  type metadata accessor for Lock();
  swift_allocObject();
  *(void *)(v0 + 48) = Lock.init()();
  *(_DWORD *)(v0 + 56) = -1;
  *(void *)(v0 + 72) = 64;
  pthread_t v3 = pthread_self();
  type metadata accessor for NIOThread();
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = v3;
  result[2] = 0;
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 16) = 2;
  if ((unint64_t)(*(void *)(v2 + 72) - 0x400000000000000) >> 59 == 31)
  {
    uint64_t v5 = (_OWORD *)swift_slowAlloc();
    *uint64_t v5 = 0u;
    v5[1] = 0u;
    *(void *)(v2 + 64) = v5;
    sub_10014CAD4();
    if (v1) {
      swift_release();
    }
    return (void *)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10014CAD4()
{
  sub_1001B7504();
  if (!v1)
  {
    *(_DWORD *)(v0 + 56) = v2;
    *(unsigned char *)(v0 + 16) = 0;
    v3.ident = 0;
    *(_DWORD *)&v3.filter = 2490358;
    memset(&v3.fflags, 0, 20);
    sub_10015CCE4(&v3, 1);
  }
}

uint64_t MultiThreadedEventLoopGroup.__allocating_init(numberOfThreads:)(uint64_t a1)
{
  return sub_10014D30C(a1, (uint64_t)sub_10014D2F4, 0);
}

uint64_t sub_10014CB70()
{
  sub_100019524(&qword_100308F30);
  uint64_t v0 = swift_bufferAllocate();
  sub_100007818((void *)(v0 + 16), 0);
  uint64_t result = swift_dynamicCastClassUnconditional();
  qword_100311420 = result;
  return result;
}

uint64_t sub_10014CBD8()
{
  sub_100019524(&qword_1003115B8);
  uint64_t v0 = swift_allocObject();
  sub_100019524(&qword_1003115C0);
  swift_allocObject();
  uint64_t result = sub_100050EDC((void (__cdecl *)(void *))j_j__swift_release);
  *(void *)(v0 + 16) = result;
  qword_100311428 = v0;
  return result;
}

uint64_t sub_10014CC4C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, NSObject *a10)
{
  uint64_t v13 = a5();
  uint64_t v14 = a3(v13);
  type metadata accessor for SelectableEventLoop();
  swift_allocObject();
  uint64_t v15 = swift_retain();
  uint64_t v16 = sub_10004B3E0(v15, v14, a2 & 1);
  if (qword_100308D60 != -1) {
    swift_once();
  }
  uint64_t v17 = swift_retain();
  sub_1000508E8(v17);
  sub_10014D270(v16, a8, a9, a10);
  sub_10004BF18();
  sub_1000508E8(0);

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10014CE64(uint64_t a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v10 = a5();
  uint64_t v11 = a3(v10);
  type metadata accessor for SelectableEventLoop();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_10004B3E0(v12, v11, a2 & 1);
  if (qword_100308D60 != -1) {
    swift_once();
  }
  uint64_t v14 = swift_retain();
  sub_1000508E8(v14);
  a7(v13);
  sub_10004BF18();
  sub_1000508E8(0);
  return swift_release();
}

uint64_t sub_10014D03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for Lock();
  swift_allocObject();
  uint64_t v10 = Lock.init()();
  uint64_t v11 = dispatch_group_create();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  dispatch_group_enter(v11);
  type metadata accessor for NIOThread();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  void v13[3] = a4;
  v13[4] = a5;
  unsigned char v13[5] = a6;
  v13[6] = v10;
  v13[7] = v12;
  v13[8] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = v11;
  sub_1000C6D6C(a1, a2, 0, (uint64_t)sub_10014F610, (uint64_t)v13);
  swift_release();
  sub_10024EE40();
  Lock.lock()();
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(v12 + 16);
  if (v16)
  {
    swift_retain();
    Lock.unlock()();
    swift_release();

    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10014D1C8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = type metadata accessor for MultiThreadedEventLoopGroup();
  swift_retain();
  swift_retain();
  return sub_10014CC4C(a1, 0, a2, a3, a4, a5, v16, a6, a7, a8);
}

void sub_10014D270(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  *(void *)(a3 + 16) = a1;
  swift_retain();
  swift_release();
  Lock.unlock()();
  dispatch_group_leave(a4);
}

void *sub_10014D2F4()
{
  return sub_10014E998();
}

uint64_t sub_10014D30C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = sub_1000DA69C((uint64_t)debugOnly(_:), 0, result);
    uint64_t v6 = swift_allocObject();
    sub_10014D390((uint64_t)v5, a2, a3);
    return v6;
  }
  return result;
}

uint64_t sub_10014D390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_100019524(&qword_100308F30);
  sub_10014F8A8();
  uint64_t v8 = swift_bufferAllocate();
  sub_100007818((void *)(v8 + 16), 0);
  *(void *)(v3 + 24) = swift_dynamicCastClassUnconditional();
  type metadata accessor for Lock();
  sub_10014F8A8();
  swift_allocObject();
  *(void *)(v3 + 40) = Lock.init()();
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 2;
  if (qword_100308D58 != -1) {
    swift_once();
  }
  char v9 = (atomic_ullong *)(qword_100311420 + 16);
  swift_retain();
  unint64_t v10 = sub_1000077F4(v9, 1uLL);
  swift_release();
  *(void *)(v4 + 16) = v10;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    sub_10024F450();
    uint64_t v14 = a2;
    for (uint64_t i = 0; i != v15; ++i)
    {
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = *(_OWORD *)(a1 + 32 + 16 * i);
      swift_retain_n();
      v16._countAndFlagsBits = sub_10024F9E0();
      sub_10024E800(v16);
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = 9005;
      v17._object = (void *)0xE200000000000000;
      sub_10024E800(v17);
      v18._countAndFlagsBits = sub_10024F9E0();
      sub_10024E800(v18);
      swift_bridgeObjectRelease();
      sub_10014D03C(0x2D544C452D4F494ELL, 0xE800000000000000, v14, a3, (uint64_t)sub_10014F440, v12);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_10024F400();
      sub_10024F490();
      sub_10024F4A0();
      sub_10024F420();
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 32) = &_swiftEmptyArrayStorage;
  return v4;
}

void MultiThreadedEventLoopGroup.makeIterator()()
{
  sub_10007D084(*(void *)(v0 + 32));
}

uint64_t MultiThreadedEventLoopGroup.next()()
{
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  int64_t v3 = sub_1000077F4((atomic_ullong *)(v2 + 16), 1uLL);
  uint64_t result = swift_release();
  if (!(v1 >> 62))
  {
    uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    __break(1u);
    return sub_10024F380();
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10024F6F0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v3 != 0x8000000000000000 || v5 != -1)
  {
    if (v3 % v5 >= 0) {
      unint64_t v7 = v3 % v5;
    }
    else {
      unint64_t v7 = -(v3 % v5);
    }
    sub_10014F340(v7, (v1 & 0xC000000000000001) == 0, v1);
    if ((v1 & 0xC000000000000001) == 0) {
      return swift_retain();
    }
    return sub_10024F380();
  }
  __break(1u);
  return result;
}

void MultiThreadedEventLoopGroup.shutdownGracefully(queue:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10024E2A0();
  sub_10001B550();
  __chkstk_darwin();
  sub_10002059C();
  uint64_t v3 = sub_10024EE80();
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin();
  sub_10002059C();
  uint64_t v8 = v7 - v6;
  sub_10024EE60();
  __chkstk_darwin();
  sub_10002059C();
  sub_10024E2D0();
  sub_10001B550();
  __chkstk_darwin();
  sub_10002059C();
  dispatch_group_t v9 = dispatch_group_create();
  sub_100051014();
  sub_10024E2C0();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10014EF18((unint64_t *)&qword_10030B050, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100019524((uint64_t *)&unk_1003170E0);
  sub_100051120((unint64_t *)&qword_10030B058, (uint64_t *)&unk_1003170E0);
  sub_10024F280();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  id v10 = a1;
  uint64_t v11 = (void *)sub_10024EEC0();
  uint64_t v12 = *(void *)(v27 + 40);
  swift_retain();
  id v13 = v11;
  swift_retain();
  if ((sub_100172574(v12, v27, v13, a2, a3) & 1) == 0)
  {

    return;
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(unsigned char *)(v14 + 24) = 0;
  unint64_t v15 = *(void *)(v27 + 32);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10024F6F0();
    if (v16) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = v27;
    void v20[3] = v14;
    v20[4] = v10;
    void v20[5] = a2;
    v20[6] = a3;
    aBlock[4] = sub_10014EE5C;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018758;
    aBlock[3] = &unk_1002E8828;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10024E2C0();
    sub_10014EF18((unint64_t *)&qword_100317080, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100019524(&qword_100309168);
    sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
    sub_10024F280();
    sub_10024EE50();

    _Block_release(v21);
    sub_10003FDC8();
    v23();
    sub_10003FDC8();
    v24();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_10;
  }
LABEL_4:
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        sub_10024F380();
      }
      else {
        swift_retain();
      }
      ++v17;
      dispatch_group_enter(v9);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v14;
      *(void *)(v18 + 24) = v9;
      swift_retain();
      char v19 = v9;
      sub_10004CB14();
      swift_release();
      swift_release();
    }
    while (v16 != v17);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_10014DD4C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  sub_10024E2A0();
  sub_10001B550();
  __chkstk_darwin();
  sub_10002059C();
  sub_10024E2D0();
  sub_10001B550();
  __chkstk_darwin();
  sub_10002059C();
  uint64_t v8 = *(void *)(a1 + 48);
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(unsigned char *)(a1 + 56) == 1)
    {
      dispatch_group_t v9 = (void *)swift_allocObject();
      void v9[2] = a3;
      v9[3] = a4;
      v9[4] = v8;
      aBlock[4] = sub_10014F528;
      aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100018758;
      aBlock[3] = &unk_1002E8B08;
      id v22 = _Block_copy(aBlock);
      sub_10014EFF0(v8, 1);
      sub_10014EFF0(v8, 1);
      swift_retain();
      sub_10024E2C0();
      aBlock[7] = &_swiftEmptyArrayStorage;
      sub_10014EF18((unint64_t *)&qword_100317080, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100019524(&qword_100309168);
      sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
      sub_10024F280();
      sub_10024EEB0();
      _Block_release(v22);
      sub_10014EEB4(v8, 1);
      sub_10003FDC8();
      v10();
      sub_10003FDC8();
      v11();
      uint64_t result = swift_release();
      char v13 = 0;
    }
    else
    {
      *(void *)(a1 + 48) = &_swiftEmptyArrayStorage;
      *(unsigned char *)(a1 + 56) = 0;
      uint64_t result = sub_10014EEB4(v8, 2);
      char v13 = 1;
    }
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = a4;
    sub_10014EFF0(v8, 0);
    id v15 = a2;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100035E80();
      uint64_t v8 = v20;
    }
    unint64_t v16 = *(void *)(v8 + 16);
    if (v16 >= *(void *)(v8 + 24) >> 1)
    {
      sub_100035E80();
      uint64_t v8 = v21;
    }
    *(void *)(v8 + 16) = v16 + 1;
    uint64_t v17 = (void *)(v8 + 24 * v16);
    v17[4] = v15;
    void v17[5] = sub_10014F558;
    v17[6] = v14;
    uint64_t v18 = *(void *)(a1 + 48);
    *(void *)(a1 + 48) = v8;
    char v19 = *(unsigned char *)(a1 + 56);
    *(unsigned char *)(a1 + 56) = 0;
    uint64_t result = sub_10014EEB4(v18, v19);
    char v13 = 0;
  }
  *a5 = v13;
  return result;
}

void sub_10014E104(uint64_t a1, char a2, uint64_t a3, dispatch_group_t group)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(a3 + 16);
    char v8 = *(unsigned char *)(a3 + 24);
    *(void *)(a3 + 16) = a1;
    *(unsigned char *)(a3 + 24) = 1;
    swift_errorRetain();
    sub_10003C3F0(v7, v8);
  }
  dispatch_group_leave(group);
}

void sub_10014E18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v61 = a3;
  uint64_t v7 = sub_10024E2A0();
  uint64_t v64 = *(void *)(v7 - 8);
  __chkstk_darwin();
  dispatch_group_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10024E2D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  __chkstk_darwin();
  char v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *(void *)(a1 + 32);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10024F6F0();
    if (!v15) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_9;
    }
  }
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      sub_10024F380();
    }
    else {
      swift_retain();
    }
    sub_10004D334(1);
    swift_release();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  Lock.lock()();
  if (*(unsigned char *)(a1 + 56))
  {
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v18 = *(void *)(a1 + 48);
  swift_beginAccess();
  BOOL v19 = *(unsigned char *)(a2 + 24) == 1;
  uint64_t v54 = v18;
  if (v19)
  {
    uint64_t v20 = *(void *)(a2 + 16);
    *(void *)(v17 + 16) = v20;
    sub_10014EFF0(v18, 0);
    sub_10004F084(v20, 1);
  }
  else
  {
    *(void *)(v17 + 16) = 0;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
  }
  swift_errorRelease();
  uint64_t v21 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v20;
  char v22 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = 1;
  swift_errorRetain();
  sub_10014EEB4(v21, v22);
  Lock.unlock()();
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v60;
  v23[2] = v59;
  v23[3] = v24;
  v23[4] = v17;
  int v70 = sub_10014F3FC;
  uint64_t v71 = v23;
  aBlocuint64_t k = _NSConcreteStackBlock;
  uint64_t v67 = 1107296256;
  int v58 = &v68;
  uint64_t v68 = sub_100018758;
  uint64_t v69 = &unk_1002E8A40;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_10024E2C0();
  uint64_t v65 = &_swiftEmptyArrayStorage;
  uint64_t v26 = sub_10014EF18((unint64_t *)&qword_100317080, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v27 = sub_100019524(&qword_100309168);
  uint64_t v59 = sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
  uint64_t v60 = v27;
  uint64_t v28 = v26;
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v25);
  uint64_t v29 = v64 + 8;
  uint64_t v30 = v13;
  uint64_t v31 = v9;
  uint64_t v32 = v9;
  uint64_t v33 = v7;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v64 + 8);
  v34(v32, v7);
  uint64_t v35 = v63 + 8;
  uint64_t v36 = v30;
  uint64_t v37 = v30;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v63 + 8);
  v38(v37, v62);
  swift_release();
  uint64_t v39 = *(void *)(v54 + 16);
  if (v39)
  {
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v61 = v17;
    uint64_t v41 = (uint64_t *)(v40 + 48);
    uint64_t v56 = v28;
    uint64_t v55 = v34;
    uint64_t v63 = v35;
    uint64_t v64 = v29;
    uint64_t v57 = v38;
    do
    {
      uint64_t v43 = (void *)*(v41 - 2);
      uint64_t v42 = *(v41 - 1);
      uint64_t v44 = *v41;
      v41 += 3;
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v42;
      *(void *)(v45 + 24) = v44;
      int v46 = (void *)swift_allocObject();
      v46[2] = v43;
      void v46[3] = sub_10014F440;
      uint64_t v47 = v61;
      v46[4] = v45;
      v46[5] = v47;
      int v70 = sub_10014F4B4;
      uint64_t v71 = v46;
      aBlocuint64_t k = _NSConcreteStackBlock;
      uint64_t v67 = 1107296256;
      uint64_t v68 = sub_100018758;
      uint64_t v69 = &unk_1002E8AB8;
      uint64_t v48 = _Block_copy(&aBlock);
      id v49 = v43;
      swift_retain();
      id v50 = v49;
      swift_retain();
      swift_retain();
      sub_10024E2C0();
      uint64_t v65 = &_swiftEmptyArrayStorage;
      sub_10024F280();
      sub_10024EEB0();
      uint64_t v51 = v48;
      int v52 = v57;
      _Block_release(v51);
      swift_release();

      v55(v31, v33);
      v52(v36, v62);
      swift_release();
      --v39;
    }
    while (v39);
    uint64_t v53 = v54;
    sub_10014EEB4(v54, 0);
    sub_10014EEB4(v53, 0);
  }
  else
  {
    sub_10014EEB4(v54, 0);
  }
  swift_release();
}

uint64_t sub_10014E7D0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a3 + 16);
  swift_errorRetain();
  a1(v5);
  return swift_errorRelease();
}

uint64_t sub_10014E83C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a4 + 16);
  swift_errorRetain();
  a2(v6);
  return swift_errorRelease();
}

uint64_t static MultiThreadedEventLoopGroup.withCurrentThreadAsEventLoop(_:)(uint64_t a1, uint64_t a2)
{
  pthread_t v4 = pthread_self();
  type metadata accessor for NIOThread();
  uint64_t v5 = (void *)swift_allocObject();
  v5[3] = 0;
  void v5[4] = v4;
  v5[2] = 0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  sub_10014CE64((uint64_t)v5, 1, (uint64_t (*)(uint64_t))sub_10014D2F4, 0, (uint64_t (*)(void))debugOnly(_:), 0, (void (*)(uint64_t))sub_10014EE84);
  swift_release();
  return swift_release();
}

void *sub_10014E998()
{
  return sub_10014C9E0();
}

uint64_t MultiThreadedEventLoopGroup._preconditionSafeToSyncShutdown(file:line:)()
{
  uint64_t result = (uint64_t)static MultiThreadedEventLoopGroup.currentEventLoop.getter();
  if (result)
  {
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t MultiThreadedEventLoopGroup.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10014EEB4(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  return v0;
}

uint64_t MultiThreadedEventLoopGroup.__deallocating_deinit()
{
  MultiThreadedEventLoopGroup.deinit();
  return _swift_deallocClassInstance(v0, 57, 7);
}

uint64_t sub_10014EA70()
{
  return MultiThreadedEventLoopGroup.next()();
}

void sub_10014EA94()
{
}

uint64_t MultiThreadedEventLoopGroup.description.getter()
{
  sub_10024F330(61);
  v1._object = (void *)0x800000010027EE70;
  v1._countAndFlagsBits = 0xD000000000000036;
  sub_10024E800(v1);
  v2._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x7D202A232DLL;
  v3._object = (void *)0xE500000000000000;
  sub_10024E800(v3);
  return 0;
}

uint64_t sub_10014EB68()
{
  return MultiThreadedEventLoopGroup.description.getter();
}

uint64_t ScheduledTask._readyTime.getter()
{
  return *(void *)(v0 + 48);
}

void *ScheduledTask.init(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a1;
  v5[3] = a2;
  void v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t ScheduledTask.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ScheduledTask.__deallocating_deinit()
{
  ScheduledTask.deinit();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t ScheduledTask.description.getter()
{
  sub_10024F330(28);
  v2._object = (void *)0x800000010027EEB0;
  v2._countAndFlagsBits = 0xD000000000000019;
  sub_10024E800(v2);
  sub_10014C760(*(void *)(v0 + 48));
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  sub_10024E800(v3);
  return 0;
}

uint64_t sub_10014EC80()
{
  return ScheduledTask.description.getter();
}

uint64_t static ScheduledTask.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 48);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = *(void *)(a2 + 48);
    if ((v3 & 0x8000000000000000) == 0) {
      return v2 < v3;
    }
  }
  sub_10009A12C();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

uint64_t sub_10014ECFC(uint64_t *a1, uint64_t *a2)
{
  return static ScheduledTask.< infix(_:_:)(*a1, *a2) & 1;
}

BOOL sub_10014ED20(uint64_t *a1, uint64_t *a2)
{
  return sub_1001FAE54(*a1, *a2);
}

BOOL sub_10014ED2C()
{
  return sub_10007E934();
}

uint64_t sub_10014ED38()
{
  return sub_10007B808();
}

BOOL sub_10014ED44(uint64_t *a1, uint64_t *a2)
{
  return static ChannelOptions.Types.SocketOption.__derived_struct_equals(_:_:)(*a1, *a2);
}

unint64_t sub_10014ED68(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10014ED8C()
{
  sub_10003C3F0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10014EDC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10014EE08(uint64_t a1, char a2)
{
  sub_10014E104(a1, a2 & 1, *(void *)(v2 + 16), *(dispatch_group_t *)(v2 + 24));
}

uint64_t sub_10014EE14()
{
  swift_release();
  swift_release();

  swift_release();
  uint64_t v1 = sub_1000B7BF8();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_10014EE5C()
{
  sub_10014E18C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_10014EE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014EE7C()
{
  return swift_release();
}

uint64_t sub_10014EE84(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v1 + 16))(a1, &protocol witness table for SelectableEventLoop);
}

uint64_t sub_10014EEB4(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRelease();
  }
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10014EED0(uint64_t a1, uint64_t a2)
{
  return sub_10014EF18(&qword_100311430, a2, (void (*)(uint64_t))type metadata accessor for ScheduledTask);
}

uint64_t sub_10014EF18(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScheduledTask()
{
  return self;
}

uint64_t type metadata accessor for MultiThreadedEventLoopGroup()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiThreadedEventLoopGroup.RunState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10014EFF0(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_10014EFF0(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRetain();
  }
  if (!a2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for MultiThreadedEventLoopGroup.RunState(uint64_t a1)
{
  return sub_10014EEB4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t *assignWithCopy for MultiThreadedEventLoopGroup.RunState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10014F6A8(a1, a2, a3, (uint64_t)sub_10014EFF0, (void (*)(uint64_t, uint64_t))sub_10014EEB4);
}

uint64_t assignWithTake for MultiThreadedEventLoopGroup.RunState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_10014EEB4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiThreadedEventLoopGroup.RunState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiThreadedEventLoopGroup.RunState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10014F10C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10014F124(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MultiThreadedEventLoopGroup.RunState()
{
  return &type metadata for MultiThreadedEventLoopGroup.RunState;
}

uint64_t sub_10014F150(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_10014F890(a1, a2);
  Scheduled._promise.getter(v6);
  *(void *)uint64_t v2 = v3;
  *(unsigned char *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 9) = *(unsigned char *)(a2 + 9);
  *(_DWORD *)(v2 + 12) = *(_DWORD *)(a2 + 12);
  return v2;
}

uint64_t *assignWithCopy for NIORegistration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  Scheduled._promise.getter(*a2);
  uint64_t v6 = *a1;
  *a1 = v4;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v5;
  j__swift_release(v6, v7);
  *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
  *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
  return a1;
}

uint64_t *assignWithTake for NIORegistration(uint64_t *a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  *a1 = *a2;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v4;
  j__swift_release(v5, v6);
  *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
  *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
  return a1;
}

uint64_t getEnumTagSinglePayload for NIORegistration(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3FFD && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 16380;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) | (4
                                                 * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F) << 7)))) ^ 0x3FFF;
      if (v2 >> 2 >= 0xFFF) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for NIORegistration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFC)
  {
    *(void *)uint64_t result = a2 - 16381;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(unsigned char *)(result + 8) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NIORegistration()
{
  return &type metadata for NIORegistration;
}

unint64_t sub_10014F340(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_10014F364()
{
  unint64_t result = qword_1003115A8;
  if (!qword_1003115A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003115A8);
  }
  return result;
}

uint64_t sub_10014F3B0()
{
  swift_errorRelease();
  sub_10014F8A8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10014F3E4()
{
  return sub_10014F4D8((void (*)(void))&_swift_release);
}

uint64_t sub_10014F3FC()
{
  return sub_10014E7D0(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10014F408()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014F440()
{
  sub_10014F8B4();
  return v0();
}

uint64_t sub_10014F46C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10014F4B4()
{
  return sub_10014E83C(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10014F4C0()
{
  return sub_10014F4D8((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10014F4D8(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_10014F528()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_10014F558(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10014F584()
{
  swift_release();
  sub_10014F8A8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10014F5B8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10014F610(uint64_t a1)
{
  return sub_10014D1C8(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t initializeBufferWithCopyOfBuffer for NIORegistration.ChannelType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  Scheduled._promise.getter(*a2);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for NIORegistration.ChannelType(uint64_t a1)
{
  return j__swift_release(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for NIORegistration.ChannelType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10014F6A8(a1, a2, a3, (uint64_t)Scheduled._promise.getter, (void (*)(uint64_t, uint64_t))j__swift_release);
}

uint64_t *sub_10014F6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9 = sub_10014F890(a1, a2);
  v10(v9);
  uint64_t v11 = *v5;
  *uint64_t v5 = v6;
  uint64_t v12 = *((unsigned __int8 *)v5 + 8);
  *((unsigned char *)v5 + 8) = v7;
  a5(v11, v12);
  return v5;
}

uint64_t *assignWithTake for NIORegistration.ChannelType(uint64_t *a1, uint64_t *a2)
{
  char v3 = *((unsigned char *)a2 + 8);
  uint64_t v4 = *a1;
  *a1 = *a2;
  uint64_t v5 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v3;
  j__swift_release(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for NIORegistration.ChannelType(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3FFD && *(unsigned char *)(a1 + 9))
    {
      unsigned int v2 = *(_DWORD *)a1 + 16380;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) | (4
                                                 * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F) << 7)))) ^ 0x3FFF;
      if (v2 >> 2 >= 0xFFF) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for NIORegistration.ChannelType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 16381;
    if (a3 >= 0x3FFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(unsigned char *)(result + 8) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_10014F814(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_10014F820(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_10014F830(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 8) & 1 | (a2 << 6);
  *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for NIORegistration.ChannelType()
{
  return &type metadata for NIORegistration.ChannelType;
}

uint64_t sub_10014F890(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

unint64_t sub_10014F8CC(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000030;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10014F954()
{
  return sub_10014F8CC(*v0);
}

unint64_t sub_10014F968(char a1)
{
  unint64_t result = 0xD00000000000003FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000027;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10014FA04()
{
  return sub_10014F968(*v0);
}

ValueMetadata *type metadata accessor for ConfigurationError()
{
  return &type metadata for ConfigurationError;
}

unsigned char *_s25ASOctaneSupportXPCService18ConfigurationErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014FAF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionError()
{
  return &type metadata for TransactionError;
}

unint64_t sub_10014FB2C()
{
  unint64_t result = qword_1003115C8;
  if (!qword_1003115C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003115C8);
  }
  return result;
}

unint64_t sub_10014FB7C()
{
  unint64_t result = qword_1003115D0;
  if (!qword_1003115D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003115D0);
  }
  return result;
}

#error "10014FC00: call analysis failed (funcsize=21)"

uint64_t sub_10014FC1C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_100152878();
  sub_100151DA8(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t sub_10014FC98()
{
  sub_100152828();
  uint64_t v0 = sub_100152878();
  sub_100152808();
  sub_10015157C();
  return v0;
}

BOOL sub_10014FCF4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D86B8;
  v6._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_10014FD3C()
{
  return 0x7A69726F68747561;
}

uint64_t sub_10014FD60(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D86F0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_10014FDAC(char a1)
{
  if (!a1) {
    return 7959874;
  }
  if (a1 == 1) {
    return 0x6C65636E6143;
  }
  return 27503;
}

BOOL sub_10014FDF8@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10014FCF4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10014FE30(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_10014FE58()
{
  return sub_10024EA50();
}

uint64_t sub_10014FEB8()
{
  return sub_10024EA00();
}

uint64_t sub_10014FF08(unsigned __int8 *a1, char *a2)
{
  return sub_1000FB318(*a1, *a2);
}

Swift::Int sub_10014FF14()
{
  return sub_1001D3784();
}

uint64_t sub_10014FF1C(uint64_t a1)
{
  return sub_1000D21AC(a1, *v1);
}

Swift::Int sub_10014FF24()
{
  return sub_1000D3854();
}

uint64_t sub_10014FF2C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10014FD60(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10014FF5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10014FDAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10014FF88()
{
  return sub_10024EA50();
}

uint64_t sub_10014FFE8()
{
  return sub_10024EA00();
}

id sub_100150038()
{
  id result = sub_100150058();
  qword_10034C090 = (uint64_t)result;
  return result;
}

id sub_100150058()
{
  uint64_t v0 = sub_10024E0F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v5 setNumberStyle:5];
  sub_10024E0B0();
  Class isa = sub_10024E0C0().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  [v5 setLocale:isa];

  return v5;
}

uint64_t sub_100150180()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10024DA50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  Swift::String v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = *(void *)(v0 + 48);
  if (result)
  {
    v9[0] = *(void *)(v0 + 40);
    v9[1] = result;
    swift_bridgeObjectRetain();
    sub_10024DA30();
    sub_10001DAC0();
    sub_10024F160();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_bridgeObjectRelease();
    v10._object = (void *)0x800000010027F880;
    v10._countAndFlagsBits = 0xD000000000000014;
    BOOL v8 = sub_10024E8C0(v10);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v8)
    {
      swift_beginAccess();
      if (*(void *)(v1 + 48))
      {
        v11._countAndFlagsBits = 0xD000000000000016;
        v11._object = (void *)0x800000010027C7D0;
        sub_10024E800(v11);
      }
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_10015032C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  swift_bridgeObjectRelease();
  return sub_100150180();
}

uint64_t sub_100150384(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8758;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xC) {
    return 12;
  }
  else {
    return v4;
  }
}

void sub_1001503D4(char a1)
{
  switch(a1)
  {
    case 7:
    case 8:
    case 9:
    case 11:
      sub_100020688();
      break;
    default:
      return;
  }
}

unint64_t sub_100150560(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65776F6C6C612D6DLL;
      break;
    case 2:
      unint64_t result = 0x6567617373656DLL;
      break;
    case 3:
      unint64_t result = 0x74616E616C707865;
      break;
    case 4:
      unint64_t result = 0x42746C7561666564;
      break;
    case 5:
    case 6:
      unint64_t result = 0x6E6F747475426B6FLL;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x656572467369;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001506E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F8B58(*a1, *a2);
}

Swift::Int sub_1001506F0()
{
  return sub_1001D3790(*v0);
}

uint64_t sub_1001506F8(uint64_t a1)
{
  return sub_1000D0914(a1, *v1);
}

Swift::Int sub_100150700(uint64_t a1)
{
  return sub_1000D2AFC(a1, *v1);
}

uint64_t sub_100150708@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100150384(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100150738(void *a1@<X8>)
{
  sub_1001503D4(*v1);
  *a1 = v3;
  a1[1] = v4;
}

unint64_t sub_100150764()
{
  return sub_100150560(*v0);
}

uint64_t sub_10015076C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001503D0();
  *a1 = result;
  return result;
}

uint64_t sub_100150794(uint64_t a1)
{
  unint64_t v2 = sub_1001523CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001507D0(uint64_t a1)
{
  unint64_t v2 = sub_1001523CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t *sub_10015080C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001109E0(v0[10], v0[11], v0[12]);
  swift_bridgeObjectRelease();
  sub_1001109E0(v0[20], v0[21], v0[22]);
  sub_1000458B4((uint64_t)(v0 + 28), (uint64_t)v2, &qword_100313690);
  sub_100152260(v2);
  return v0;
}

uint64_t sub_100150898()
{
  sub_10015080C();
  return _swift_deallocClassInstance(v0, 448, 7);
}

uint64_t type metadata accessor for Dialog()
{
  return self;
}

uint64_t sub_1001508F0(void *a1)
{
  uint64_t v3 = v1;
  sub_100019524(&qword_100313698);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_10001C2A8(a1, a1[3]);
  sub_1001523CC();
  sub_10024FD40();
  LOBYTE(v24) = *(unsigned char *)(v3 + 16);
  v23[0] = 0;
  sub_100152418();
  sub_100152848();
  if (v2) {
    goto LABEL_3;
  }
  sub_100152860(1);
  sub_10024F950();
  uint64_t v10 = *(void *)(v3 + 24);
  sub_1001528F4(2);
  sub_100152740();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 40);
    sub_1001528F4(3);
    sub_100152740();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v24) = *(unsigned char *)(v3 + 56);
      v23[0] = 4;
      sub_100152464();
      sub_100152848();
      uint64_t v14 = *(void *)(v3 + 64);
      sub_1001528F4(5);
      sub_100152740();
      if (!v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = *(void *)(v3 + 128);
        __int16 v16 = *(_WORD *)(v3 + 136);
        long long v17 = *(_OWORD *)(v3 + 96);
        long long v24 = *(_OWORD *)(v3 + 80);
        long long v25 = v17;
        long long v26 = *(_OWORD *)(v3 + 112);
        uint64_t v27 = v15;
        __int16 v28 = v16;
        v23[0] = 6;
        unint64_t v18 = sub_1001524B0();
        sub_100152848();
        unint64_t v30 = v18;
        uint64_t v19 = *(void *)(v3 + 144);
        sub_1001528F4(7);
        sub_100152740();
        if (!v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = *(void *)(v3 + 208);
          __int16 v21 = *(_WORD *)(v3 + 216);
          long long v22 = *(_OWORD *)(v3 + 176);
          long long v24 = *(_OWORD *)(v3 + 160);
          long long v25 = v22;
          long long v26 = *(_OWORD *)(v3 + 192);
          uint64_t v27 = v20;
          __int16 v28 = v21;
          v23[0] = 8;
          sub_100152848();
          sub_100152860(9);
          sub_10024F8E0();
          char v29 = 10;
          sub_10024F8E0();
          sub_1000458B4(v3 + 224, (uint64_t)&v24, &qword_100313690);
          sub_1000458B4((uint64_t)&v24, (uint64_t)v23, &qword_100313690);
          sub_1001524FC();
          sub_100152848();
LABEL_3:
          uint64_t v7 = sub_1001528E0();
          return v8(v7);
        }
      }
    }
  }
  uint64_t v12 = sub_1001528E0();
  v13(v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100150C50()
{
  *(_WORD *)(v0 + 16) = 1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(unsigned char *)(v0 + 56) = 3;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 1;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_WORD *)(v0 + 136) = 0;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(void *)(v0 + 176) = 1;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_DWORD *)(v0 + 216) = 33619968;
  sub_100152258(v2);
  sub_1000458B4((uint64_t)v2, v0 + 224, &qword_100313690);
  return v0;
}

uint64_t sub_100150CE0(void *a1)
{
  return sub_1001508F0(a1);
}

int8x16_t *sub_100150D04(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = 0xD000000000000010;
  sub_100150C50();
  sub_1000458B4((uint64_t)(a1 + 24), (uint64_t)v24, &qword_1003136C8);
  sub_1000458B4((uint64_t)v24, (uint64_t)v26, &qword_1003136C8);
  if (v26[0])
  {
    unint64_t v5 = 0x800000010027F9F0;
  }
  else
  {
    type metadata accessor for OctaneSubscription();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6) {
      unint64_t v4 = 0xD000000000000012;
    }
    else {
      unint64_t v4 = 0xD00000000000001CLL;
    }
    unint64_t v5 = 0x800000010027F9D0;
    if (!v6) {
      unint64_t v5 = 0x800000010027F9B0;
    }
  }
  v1[1].i64[1] = v4;
  v1[2].i64[0] = v5;
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_100098044();
  sub_10015032C(v7, v8);
  sub_1000458B4((uint64_t)v24, (uint64_t)v25, &qword_1003136C8);
  if (v25[0])
  {
    int8x16_t v9 = (int8x16_t)xmmword_100260C30;
  }
  else
  {
    type metadata accessor for OctaneSubscription();
    int32x2_t v10 = vdup_n_s32(swift_dynamicCastClass() == 0);
    v11.i64[0] = v10.u32[0];
    v11.i64[1] = v10.u32[1];
    int8x16_t v9 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v11, 0x3FuLL)), (int8x16_t)xmmword_1002628E0, (int8x16_t)xmmword_1002628D0);
  }
  v1[4] = v9;
  swift_bridgeObjectRelease();
  uint64_t v13 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v14 = a1[11];
  uint64_t v15 = *(void *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 88);
  uint64_t v21 = (uint64_t)a1;
  uint64_t v17 = v2[5].i64[0];
  uint64_t v18 = v2[5].i64[1];
  uint64_t v19 = v2[6].i64[0];
  v2[5].i64[0] = 1;
  v2[5].i64[1] = v13;
  v2[6].i64[0] = v12;
  v2[6].i64[1] = v15;
  v2[7].i64[0] = v16;
  v2[7].i64[1] = 0;
  v2[8].i64[0] = 0;
  v2[8].i16[4] = 513;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001109E0(v17, v18, v19);
  v2[3].i8[8] = 0;
  v2[9] = (int8x16_t)xmmword_100260C20;
  swift_bridgeObjectRelease();
  sub_1001C6A00(v21, v22);
  debugOnly(_:)(v22);
  sub_1000458B4((uint64_t)v2[14].i64, (uint64_t)v23, &qword_100313690);
  sub_1000458B4((uint64_t)v22, (uint64_t)v2[14].i64, &qword_100313690);
  sub_100152260(v23);
  swift_release();
  return v2;
}

uint64_t type metadata accessor for ConfirmDialog()
{
  return self;
}

uint64_t sub_100150F8C()
{
  sub_100150C50();
  *(unsigned char *)(v0 + 219) = 1;
  sub_1001527E8(0x1000000000000011);
  swift_bridgeObjectRelease();
  sub_100020688();
  sub_10015032C(0xD00000000000001DLL, v1);
  *(unsigned char *)(v0 + 56) = 2;
  *(_OWORD *)(v0 + 64) = xmmword_100260C30;
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for AllSetDialog()
{
  return self;
}

uint64_t sub_10015103C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100150C50();
  *(unsigned char *)(v3 + 219) = 1;
  sub_1001527E8(0x100000000000004ALL);
  swift_bridgeObjectRelease();
  sub_100020688();
  sub_10015032C(0xD000000000000015, v4);
  *(unsigned char *)(v3 + 56) = 2;
  *(_OWORD *)(v3 + 64) = xmmword_100260C30;
  uint64_t v5 = swift_bridgeObjectRelease();
  sub_100152768(v5, v6, v7, v8, v9, v10, v11, v12, v14, a3);
  sub_1001527B8();
  swift_release();
  *(_OWORD *)(v3 + 144) = xmmword_100260C20;
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t type metadata accessor for AlreadyOwnNonConsumableDialog()
{
  return self;
}

void sub_100151144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1000B784C();
  uint64_t v27 = v26;
  char v29 = v28;
  uint64_t v50 = v30;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_100150C50();
  *(unsigned char *)(v26 + 219) = 1;
  sub_1001528C0(0x1000000000000026);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_10024F330(114);
  v51._countAndFlagsBits = 0x2072756F59;
  v51._object = (void *)0xE500000000000000;
  sub_10024E800(v51);
  v52._countAndFlagsBits = sub_100214084(*(void *)(v42 + 176), *(unsigned char *)(v42 + 184));
  sub_10024E800(v52);
  swift_bridgeObjectRelease();
  sub_100020688();
  v53._countAndFlagsBits = 0xD000000000000018;
  sub_10024E800(v53);
  v54._countAndFlagsBits = v40;
  v54._object = v38;
  sub_10024E800(v54);
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = 0x20726F6620;
  v55._object = (void *)0xE500000000000000;
  sub_10024E800(v55);
  v56._countAndFlagsBits = v36;
  v56._object = v34;
  sub_10024E800(v56);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 0xD00000000000004ALL;
  sub_100152894(v43, (uint64_t)". To review subscription settings or cancel this subscription, tap Manage.");
  sub_10015032C(0, 0xE000000000000000);
  swift_release();
  sub_1001528B0();
  *(_OWORD *)(v26 + 64) = xmmword_100260C30;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v26 + 144) = xmmword_1002628F0;
  swift_bridgeObjectRelease();
  if (v32)
  {
    if (v29)
    {
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v44 = sub_1001513A4(v50, v29, v32, a25, a26);
      uint64_t v46 = v45;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_unknownObjectRelease_n();
      uint64_t v47 = sub_10015290C();
      *(void *)(v27 + 160) = 2;
      *(_OWORD *)(v27 + 168) = 0u;
      *(_OWORD *)(v27 + 184) = 0u;
      *(void *)(v27 + 200) = v44;
      *(void *)(v27 + 208) = v46;
      *(_WORD *)(v27 + 216) = 0;
      sub_1001109E0(v47, v48, v49);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_release();
    }
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v27 + 218) = 1;
  sub_10002FD48();
}

uint64_t sub_1001513A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_10001DA14(a3, 11, a4, a5);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  sub_10024E800(v9);
  v10._countAndFlagsBits = 0x3D7070613FLL;
  v10._object = (void *)0xE500000000000000;
  sub_10024E800(v10);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for AlreadyOwnSubscriptionDialog()
{
  return self;
}

uint64_t sub_100151464()
{
  sub_100150C50();
  *(void *)(v0 + 24) = 0xD000000000000012;
  *(void *)(v0 + 32) = 0x800000010027F820;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_10024F330(64);
  v2._countAndFlagsBits = 0xD00000000000003ELL;
  v2._object = (void *)0x800000010027F840;
  sub_10024E800(v2);
  v3._countAndFlagsBits = 0xD000000000000014;
  v3._object = (void *)0x800000010027F880;
  sub_10024E800(v3);
  sub_10015032C(0, 0xE000000000000000);
  *(unsigned char *)(v0 + 56) = 2;
  *(_OWORD *)(v0 + 64) = xmmword_100260C30;
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for CannotRedeemOfferCodeDialog()
{
  return self;
}

void sub_10015157C()
{
  sub_1000B784C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_100150C50();
  *(unsigned char *)(v0 + 219) = 1;
  *(_OWORD *)(v0 + 24) = xmmword_100260C00;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_10024F330(66);
  sub_100020688();
  v25._countAndFlagsBits = 0x1000000000000014;
  sub_10024E800(v25);
  v26._countAndFlagsBits = v13;
  v26._object = v11;
  sub_10024E800(v26);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x100000000000002CLL;
  sub_100152894(v14, (uint64_t)"“ will be sent to your parent or guardian.");
  sub_10015032C(0, 0xE000000000000000);
  sub_1001528B0();
  *(_OWORD *)(v0 + 64) = xmmword_100260C10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 144) = xmmword_100260C20;
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_100152920();
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(void *)(v0 + 128) = 0;
  *(_WORD *)(v0 + 136) = 513;
  sub_1001109E0(v15, v16, v17);
  if (v3)
  {
    type metadata accessor for AskToBuyPermissionRoute();
    uint64_t v18 = swift_unknownObjectRetain();
    uint64_t v19 = sub_100178F5C(v18, v9, v7, v5, 1);
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    uint64_t v22 = sub_10015290C();
    *(void *)(v1 + 160) = 3;
    *(_OWORD *)(v1 + 168) = 0u;
    *(_OWORD *)(v1 + 184) = 0u;
    *(void *)(v1 + 200) = v19;
    *(void *)(v1 + 208) = v21;
    *(_WORD *)(v1 + 216) = 513;
    sub_1001109E0(v22, v23, v24);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  sub_10002FD48();
}

uint64_t type metadata accessor for AskToBuyDialog()
{
  return self;
}

uint64_t sub_100151770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100150C50();
  sub_1001527E8(0x1000000000000027);
  swift_bridgeObjectRelease();
  sub_100020688();
  sub_10015032C(0xD00000000000002DLL, v4);
  *(unsigned char *)(v3 + 56) = 2;
  *(_OWORD *)(v3 + 64) = xmmword_1002628E0;
  uint64_t v5 = swift_bridgeObjectRelease();
  sub_100152768(v5, v6, v7, v8, v9, v10, v11, v12, v14, a3);
  sub_1001527B8();
  swift_release();
  *(_OWORD *)(v3 + 144) = xmmword_100260C20;
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t type metadata accessor for PreviouslyPurchasedNonRenewingSubscriptionDialog()
{
  return self;
}

uint64_t sub_100151870()
{
  return sub_1001527B0(18, 0x800000010027F7D0, 0xD00000000000002BLL, 0x800000010027F7F0);
}

uint64_t type metadata accessor for UnableToPurchaseDialog()
{
  return self;
}

uint64_t sub_1001518C8()
{
  return sub_1001527B0(22, 0x800000010027F940, 0xD00000000000004CLL, 0x800000010027F960);
}

uint64_t type metadata accessor for IneligibleForOfferDialog()
{
  return self;
}

uint64_t sub_100151920()
{
  sub_100150C50();
  sub_1001528C0(0xD00000000000001CLL);
  swift_bridgeObjectRelease();
  sub_10024F330(52);
  v3._object = (void *)0x800000010027F730;
  v3._countAndFlagsBits = 0xD000000000000018;
  sub_10024E800(v3);
  v4._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v4);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  sub_100152894(v1, (uint64_t)" of this item at one time.");
  sub_10015032C(0, 0xE000000000000000);
  *(unsigned char *)(v0 + 56) = 2;
  *(_OWORD *)(v0 + 64) = xmmword_100260C30;
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for InvalidQuantityDialog()
{
  return self;
}

uint64_t sub_100151A54()
{
  return sub_100151AE4(0xD000000000000033, 0x800000010027F6B0, 0xD00000000000001ELL, 0x800000010027F6F0);
}

uint64_t type metadata accessor for MultipleQuantitiesNotAllowedDialog()
{
  return self;
}

uint64_t sub_100151AB0()
{
  return sub_1001527B0(27, 0x800000010027F770, 0xD00000000000003ELL, 0x800000010027F790);
}

uint64_t sub_100151AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100150C50();
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_10015032C(a3, a4);
  *(unsigned char *)(v4 + 56) = 2;
  *(_OWORD *)(v4 + 64) = xmmword_100260C30;
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t type metadata accessor for InvalidAppAccountTokenDialog()
{
  return self;
}

uint64_t sub_100151B98(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10024E030();
  sub_10001B550();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100150F8C();
  swift_retain();
  sub_10024DF60();
  if (qword_100308CE8 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_10030B088;
  Class isa = sub_10024DFB0().super.isa;
  id v15 = [v13 stringFromDate:isa];

  uint64_t v16 = sub_10024E6B0();
  uint64_t v18 = v17;

  uint64_t v20 = 0;
  uint64_t v21 = 0xE000000000000000;
  sub_10024F330(47);
  swift_bridgeObjectRelease();
  uint64_t v20 = 0xD000000000000026;
  uint64_t v21 = 0x800000010027F910;
  v22._countAndFlagsBits = v16;
  v22._object = v18;
  sub_10024E800(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 544497952;
  v23._object = (void *)0xE400000000000000;
  sub_10024E800(v23);
  v24._countAndFlagsBits = a1;
  v24._object = a2;
  sub_10024E800(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  sub_10024E800(v25);
  sub_10015032C(v20, v21);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
  return v3;
}

uint64_t type metadata accessor for DidConsentToPriceIncreaseDialog()
{
  return self;
}

uint64_t sub_100151DA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  sub_100150C50();
  *(void *)(v7 + 24) = 0xD000000000000020;
  *(void *)(v7 + 32) = 0x800000010027E750;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100020688();
  sub_10015032C(v16, v17);
  sub_1001528B0();
  *(_OWORD *)(v7 + 64) = xmmword_100260C30;
  swift_bridgeObjectRelease();
  if (a5)
  {
    type metadata accessor for ConfirmPurchaseEngagementUIRoute();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = a3;
    v28._object = a4;
    unint64_t v18 = sub_1000706E4(v28);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1000FFC58(v18, v20, a6, a7);
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    uint64_t v24 = sub_100152920();
    *(void *)(v8 + 80) = 2;
    *(void *)(v8 + 88) = a3;
    *(void *)(v8 + 96) = a4;
    *(void *)(v8 + 104) = a1;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = v21;
    *(void *)(v8 + 128) = v23;
    *(_WORD *)(v8 + 136) = 256;
    sub_1001109E0(v24, v25, v26);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v8 + 218) = 1;
  swift_release();
  return v8;
}

uint64_t type metadata accessor for PurchaseEngagementDialog()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DefaultButton(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100152014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultButton()
{
  return &type metadata for DefaultButton;
}

unsigned char *storeEnumTagSinglePayload for DialogKind(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001520E8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogKind()
{
  return &type metadata for DialogKind;
}

unint64_t sub_100152124()
{
  unint64_t result = qword_100313670;
  if (!qword_100313670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313670);
  }
  return result;
}

unint64_t sub_100152174()
{
  unint64_t result = qword_100313678;
  if (!qword_100313678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313678);
  }
  return result;
}

unint64_t sub_1001521C0()
{
  unint64_t result = qword_100313680;
  if (!qword_100313680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313680);
  }
  return result;
}

unint64_t sub_10015220C()
{
  unint64_t result = qword_100313688;
  if (!qword_100313688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313688);
  }
  return result;
}

void sub_100152258(void *a1)
{
}

uint64_t *sub_100152260(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1001522D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1001523CC()
{
  unint64_t result = qword_1003136A0;
  if (!qword_1003136A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136A0);
  }
  return result;
}

unint64_t sub_100152418()
{
  unint64_t result = qword_1003136A8;
  if (!qword_1003136A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136A8);
  }
  return result;
}

unint64_t sub_100152464()
{
  unint64_t result = qword_1003136B0;
  if (!qword_1003136B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136B0);
  }
  return result;
}

unint64_t sub_1001524B0()
{
  unint64_t result = qword_1003136B8;
  if (!qword_1003136B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136B8);
  }
  return result;
}

unint64_t sub_1001524FC()
{
  unint64_t result = qword_1003136C0;
  if (!qword_1003136C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Dialog.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100152614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Dialog.CodingKeys()
{
  return &type metadata for Dialog.CodingKeys;
}

unint64_t sub_100152650()
{
  unint64_t result = qword_1003136D0;
  if (!qword_1003136D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136D0);
  }
  return result;
}

unint64_t sub_1001526A0()
{
  unint64_t result = qword_1003136D8;
  if (!qword_1003136D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136D8);
  }
  return result;
}

unint64_t sub_1001526F0()
{
  unint64_t result = qword_1003136E0;
  if (!qword_1003136E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136E0);
  }
  return result;
}

uint64_t sub_100152740()
{
  return sub_10024F8D0();
}

uint64_t sub_100152768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = *(void *)(v10 + 80);
  uint64_t v14 = *(void *)(v10 + 88);
  *(void *)(v11 + 80) = 1;
  *(void *)(v11 + 88) = v12;
  *(void *)(v11 + 96) = a10;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 112) = v14;
  *(void *)(v11 + 120) = 0;
  *(void *)(v11 + 128) = 0;
  *(_WORD *)(v11 + 136) = 513;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001527B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100151AE4(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4);
}

uint64_t sub_1001527B8()
{
  return sub_1001109E0(v0, v1, v2);
}

uint64_t sub_1001527E8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = (v1 - 32) | 0x8000000000000000;
  return swift_retain();
}

uint64_t sub_100152808()
{
  return v0;
}

uint64_t sub_100152848()
{
  return sub_10024F910();
}

void sub_100152860(char a1@<W8>)
{
  *(unsigned char *)(v1 + 240) = a1;
}

uint64_t sub_100152878()
{
  return swift_allocObject();
}

void sub_100152894(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_10024E800(a1);
}

uint64_t sub_1001528B0()
{
  *(unsigned char *)(v0 + 56) = 2;
  return *(void *)(v0 + 72);
}

uint64_t sub_1001528C0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = (v1 - 32) | 0x8000000000000000;
  return swift_retain();
}

uint64_t sub_1001528E0()
{
  return v0;
}

uint64_t sub_1001528F4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 240) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10015290C()
{
  return *(void *)(v0 + 160);
}

uint64_t sub_100152920()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_100152934(unsigned int *a1)
{
  return sub_100152964(a1, (uint64_t (*)(void))sub_10000CFFC);
}

uint64_t sub_10015294C(unsigned int *a1)
{
  return sub_100152964(a1, (uint64_t (*)(void))sub_10000D018);
}

uint64_t sub_100152964(unsigned int *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2();
  uint64_t v4 = *a1;
  uint64_t result = sub_10000D034(0);
  if (!__OFSUB__(v4, result)) {
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001529BC(uint64_t a1, uint64_t a2)
{
  memset(&v10, 0, 28);
  memset(&v10.st_atimespec, 0, 112);
  sub_1001B723C(a1, a2, &v10);
  if (!v2)
  {
    int st_mode = v10.st_mode;
    int v4 = sub_10024E280() & st_mode;
    if (v4 == (unsigned __int16)sub_10024E280()) {
      return sub_1001B732C();
    }
    sub_100152B64();
    swift_allocError();
    swift_willThrow();
  }
  swift_errorRetain();
  sub_100019524(&qword_100309768);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    __darwin_ino64_t st_ino = v10.st_ino;
    uid_t st_uid = v10.st_uid;
    if (v10.st_uid == 2)
    {
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    uint64_t v8 = *(void *)&v10.st_dev;
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v9 = v8;
    *(void *)(v9 + 8) = st_ino;
    *(_DWORD *)(v9 + 16) = st_uid;
    swift_willThrow();
  }
  return swift_errorRelease();
}

unint64_t sub_100152B64()
{
  unint64_t result = qword_1003136E8;
  if (!qword_1003136E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003136E8);
  }
  return result;
}

_UNKNOWN **sub_100152BB0()
{
  return &off_1002D7338;
}

unint64_t sub_100152BBC(char a1)
{
  unint64_t result = 0x6E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746174735F627461;
      break;
    case 2:
      unint64_t result = 0x695F656C646E7562;
      break;
    case 3:
      unint64_t result = 0x645F6C65636E6163;
      break;
    case 4:
      unint64_t result = 0x6974617269707865;
      break;
    case 5:
      unint64_t result = 0x64656873696E6966;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 25705;
      break;
    case 8:
      unint64_t result = 0x6C616E696769726FLL;
      break;
    case 9:
      unint64_t result = 0x5F746375646F7270;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x6573616863727570;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0x797469746E617571;
      break;
    case 14:
      uint64_t v3 = 1952543859;
      goto LABEL_22;
    case 15:
    case 26:
    case 32:
      unint64_t result = 0xD000000000000015;
      break;
    case 16:
      unint64_t result = 1701869940;
      break;
    case 17:
      unint64_t result = 0x756665725F646964;
      break;
    case 18:
      unint64_t result = 0x64695F726566666FLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 20:
      unint64_t result = 0x6F726665726F7473;
      break;
    case 21:
      uint64_t v3 = 1667854960;
LABEL_22:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    case 22:
      unint64_t result = 0xD000000000000014;
      break;
    case 23:
      unint64_t result = 0x6470755F7473616CLL;
      break;
    case 24:
      unint64_t result = 0x61726770755F7369;
      break;
    case 25:
      unint64_t result = 0xD000000000000016;
      break;
    case 27:
      unint64_t result = 0xD000000000000011;
      break;
    case 28:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 29:
      unint64_t result = 0xD000000000000024;
      break;
    case 30:
      unint64_t result = 0xD000000000000016;
      break;
    case 31:
      unint64_t result = 0x735F736568737570;
      break;
    case 33:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 34:
      unint64_t result = 0xD000000000000014;
      break;
    case 35:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100153000()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x24) {
    return 36;
  }
  else {
    return v0;
  }
}

uint64_t sub_100153054(char a1)
{
  uint64_t result = 0x6E65725F6F747561;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1836020336;
      goto LABEL_4;
    case 2:
      unsigned int v3 = 1920233065;
LABEL_4:
      uint64_t result = v3 | 0x666F5F6F00000000;
      break;
    case 3:
      uint64_t result = 0xD000000000000017;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100153114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FAA84(*a1, *a2);
}

Swift::Int sub_100153120()
{
  return sub_1001D37A8(*v0);
}

uint64_t sub_100153128(uint64_t a1)
{
  return sub_1000D1B18(a1, *v1);
}

Swift::Int sub_100153130(uint64_t a1)
{
  return sub_1000D3448(a1, *v1);
}

uint64_t sub_100153138@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100153000();
  *a1 = result;
  return result;
}

unint64_t sub_100153168@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100152BBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100153194(void *a1@<X8>)
{
  *a1 = &off_1002D7338;
}

uint64_t sub_1001531A4(uint64_t a1, void *a2)
{
  sub_100153934(a1, v46);
  uint64_t v2 = v46[0];
  unint64_t v3 = v46[4];
  uint64_t v37 = v46[1];
  int64_t v38 = (unint64_t)(v46[2] + 64) >> 6;
  int64_t v39 = v46[3];
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v4 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v5 = v4 | (v39 << 6);
  while (1)
  {
    char v13 = *(unsigned char *)(*(void *)(v2 + 48) + v5);
    sub_1000318C8(*(void *)(v2 + 56) + 32 * v5, (uint64_t)v44 + 8);
    LOBYTE(v44[0]) = v13;
    v42[0] = v44[0];
    v42[1] = v44[1];
    uint64_t v43 = v45;
    sub_1000318C8((uint64_t)v42 + 8, (uint64_t)v40 + 8);
    sub_10003B908((_OWORD *)((char *)v40 + 8), v41);
    unint64_t v14 = sub_100152BBC(v13);
    unint64_t v16 = v15;
    sub_1000318C8((uint64_t)v41, (uint64_t)v40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v18 = sub_10011ED00();
    uint64_t v20 = _swiftEmptyDictionarySingleton[2];
    BOOL v21 = (v19 & 1) == 0;
    Swift::Int v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    unint64_t v23 = v18;
    char v24 = v19;
    sub_100019524(&qword_100313718);
    if (sub_10024F630(isUniquelyReferenced_nonNull_native, v22))
    {
      unint64_t v25 = sub_10011ED00();
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_39;
      }
      unint64_t v23 = v25;
    }
    if (v24)
    {
      uint64_t v27 = (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v23);
      sub_10001C2EC((uint64_t)v27);
      sub_10003B908(v40, v27);
    }
    else
    {
      _swiftEmptyDictionarySingleton[(v23 >> 6) + 8] |= 1 << v23;
      Swift::String v28 = (unint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v23);
      *Swift::String v28 = v14;
      v28[1] = v16;
      sub_10003B908(v40, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v23));
      uint64_t v29 = _swiftEmptyDictionarySingleton[2];
      BOOL v10 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v10) {
        goto LABEL_37;
      }
      _swiftEmptyDictionarySingleton[2] = v30;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)v41);
    sub_1001538D4((uint64_t)v42);
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v6 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      goto LABEL_38;
    }
    if (v6 >= v38) {
      goto LABEL_35;
    }
    unint64_t v7 = *(void *)(v37 + 8 * v6);
    int64_t v8 = v39 + 1;
    if (!v7)
    {
      sub_100153BAC();
      if (v9 == v10) {
        goto LABEL_35;
      }
      sub_100153BA0();
      if (!v7)
      {
        sub_100153BAC();
        if (v9 == v10) {
          goto LABEL_35;
        }
        sub_100153BA0();
        if (!v7)
        {
          sub_100153BAC();
          if (v9 == v10) {
            goto LABEL_35;
          }
          sub_100153BA0();
          if (!v7)
          {
            sub_100153BAC();
            if (v9 == v10) {
              goto LABEL_35;
            }
            sub_100153BA0();
            if (!v7)
            {
              int64_t v8 = v11 + 5;
              if (v11 + 5 >= v38) {
                goto LABEL_35;
              }
              unint64_t v7 = *(void *)(v37 + 8 * v8);
              if (!v7)
              {
                int64_t v12 = v39 + 7;
                while (v12 < v38)
                {
                  unint64_t v7 = *(void *)(v37 + 8 * v12++);
                  if (v7)
                  {
                    int64_t v8 = v12 - 1;
                    goto LABEL_24;
                  }
                }
LABEL_35:
                swift_release();
                id v31 = objc_allocWithZone(v35);
                swift_bridgeObjectRelease();
                sub_1002056F4((uint64_t)_swiftEmptyDictionarySingleton);
                swift_bridgeObjectRelease();
                Class isa = sub_10024E4E0().super.isa;
                swift_bridgeObjectRelease();
                id v33 = [v31 initWithPropertyValues:isa onConnection:a2];

                return (uint64_t)v33;
              }
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v3 = (v7 - 1) & v7;
    unint64_t v5 = __clz(__rbit64(v7)) + (v8 << 6);
    int64_t v39 = v8;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_10024FB70();
  __break(1u);
  return result;
}

unint64_t sub_100153568()
{
  return 0xD000000000000012;
}

uint64_t sub_1001535D4()
{
  return type metadata accessor for Transaction();
}

id sub_100153604(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone(v2);
  Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithPropertyValues:isa onConnection:a2];

  return v6;
}

id sub_100153694(uint64_t a1, void *a2)
{
  Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for TransactionEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithPropertyValues:onConnection:", isa, a2);

  return v5;
}

id sub_10015378C(uint64_t a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for TransactionEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithPersistentID:onConnection:", a1, a2);

  return v5;
}

id sub_100153820()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransactionEntity();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100153878()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransactionEntity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TransactionEntity()
{
  return self;
}

uint64_t sub_1001538D4(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_100313720);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100153934@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t getEnumTagSinglePayload for TransactionEntity.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDD)
  {
    if (a2 + 35 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 35) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 36;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x24;
  int v5 = v6 - 36;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for TransactionEntity.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 35 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 35) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDC)
  {
    unsigned int v6 = ((a2 - 221) >> 8) + 1;
    *uint64_t result = a2 + 35;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100153AC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 35;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionEntity.Key()
{
  return &type metadata for TransactionEntity.Key;
}

unint64_t sub_100153AFC()
{
  unint64_t result = qword_100313728;
  if (!qword_100313728)
  {
    sub_10001B028(&qword_100313730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313728);
  }
  return result;
}

unint64_t sub_100153B54()
{
  unint64_t result = qword_100313738;
  if (!qword_100313738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313738);
  }
  return result;
}

void *sub_100153BB8(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v66 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v66 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    BOOL v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10024E030();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    unint64_t v15 = (void *)((char *)v4 + v13);
    unint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *unint64_t v15 = *v16;
    v15[1] = v17;
    unint64_t v18 = (void *)((char *)v4 + v14);
    char v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *unint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    unint64_t v23 = (void *)((char *)v4 + v21);
    char v24 = (void *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *unint64_t v23 = *v24;
    v23[1] = v25;
    char v26 = (char *)v4 + v22;
    uint64_t v27 = (char *)a2 + v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v26, v27, v11);
    uint64_t v28 = a3[10];
    uint64_t v29 = a3[11];
    uint64_t v30 = (void *)((char *)v4 + v28);
    id v31 = (void *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    *((unsigned char *)v4 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v33 = a3[12];
    uint64_t v34 = a3[13];
    uint64_t v35 = (void *)((char *)v4 + v33);
    uint64_t v36 = (void *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    int64_t v38 = (char *)v4 + v34;
    int64_t v39 = (char *)a2 + v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v131 = v12;
    v12(v38, v39, v11);
    uint64_t v40 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    uint64_t v41 = (void *)((char *)v4 + v40);
    uint64_t v42 = (void *)((char *)a2 + v40);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    *((unsigned char *)v4 + v44) = *((unsigned char *)a2 + v44);
    uint64_t v45 = a3[18];
    uint64_t v46 = a3[19];
    uint64_t v47 = (void *)((char *)v4 + v45);
    uint64_t v48 = (void *)((char *)a2 + v45);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = (void *)((char *)v4 + v46);
    Swift::String v51 = (void *)((char *)a2 + v46);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = a3[20];
    uint64_t v54 = a3[21];
    Swift::String v55 = (void *)((char *)v4 + v53);
    Swift::String v56 = (void *)((char *)a2 + v53);
    uint64_t v57 = v56[1];
    *Swift::String v55 = *v56;
    v55[1] = v57;
    int v58 = (void *)((char *)v4 + v54);
    uint64_t v59 = (void *)((char *)a2 + v54);
    uint64_t v60 = v59[1];
    *int v58 = *v59;
    v58[1] = v60;
    uint64_t v61 = a3[22];
    uint64_t v62 = (char *)v4 + v61;
    uint64_t v63 = (char *)a2 + v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v63, 1, v11))
    {
      uint64_t v64 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      uint64_t v65 = v131;
    }
    else
    {
      uint64_t v65 = v131;
      v131(v62, v63, v11);
      sub_1000195B4((uint64_t)v62, 0, 1, v11);
    }
    uint64_t v67 = a3[23];
    uint64_t v68 = a3[24];
    uint64_t v69 = (void *)((char *)v4 + v67);
    int v70 = (void *)((char *)a2 + v67);
    uint64_t v71 = v70[1];
    *uint64_t v69 = *v70;
    v69[1] = v71;
    uint64_t v72 = (void *)((char *)v4 + v68);
    uint64_t v73 = (void *)((char *)a2 + v68);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = a3[25];
    uint64_t v76 = a3[26];
    uint64_t v77 = (void *)((char *)v4 + v75);
    uint64_t v78 = (void *)((char *)a2 + v75);
    uint64_t v79 = v78[1];
    void *v77 = *v78;
    v77[1] = v79;
    uint64_t v80 = (char *)v4 + v76;
    uint64_t v81 = (char *)a2 + v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v81, 1, v11))
    {
      uint64_t v82 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      v65(v80, v81, v11);
      sub_1000195B4((uint64_t)v80, 0, 1, v11);
    }
    uint64_t v83 = a3[28];
    *((unsigned char *)v4 + a3[27]) = *((unsigned char *)a2 + a3[27]);
    uint64_t v84 = (void *)((char *)v4 + v83);
    unint64_t v85 = (void *)((char *)a2 + v83);
    uint64_t v86 = v85[1];
    *uint64_t v84 = *v85;
    v84[1] = v86;
    uint64_t v87 = a3[30];
    *((unsigned char *)v4 + a3[29]) = *((unsigned char *)a2 + a3[29]);
    *((unsigned char *)v4 + v87) = *((unsigned char *)a2 + v87);
    uint64_t v88 = a3[32];
    *((unsigned char *)v4 + a3[31]) = *((unsigned char *)a2 + a3[31]);
    uint64_t v89 = (void *)((char *)v4 + v88);
    char v90 = (void *)((char *)a2 + v88);
    uint64_t v132 = v90[1];
    *uint64_t v89 = *v90;
    v89[1] = v132;
    uint64_t v91 = a3[33];
    uint64_t v92 = a3[34];
    uint64_t v93 = (void *)((char *)v4 + v91);
    uint64_t v94 = (void *)((char *)a2 + v91);
    uint64_t v95 = v94[1];
    *uint64_t v93 = *v94;
    v93[1] = v95;
    unint64_t v96 = (void *)((char *)v4 + v92);
    uint64_t v97 = (void *)((char *)a2 + v92);
    uint64_t v130 = v97[1];
    *unint64_t v96 = *v97;
    v96[1] = v130;
    uint64_t v98 = a3[35];
    uint64_t v99 = a3[36];
    uint64_t v100 = (void *)((char *)v4 + v98);
    uint64_t v101 = (void *)((char *)a2 + v98);
    uint64_t v102 = v101[1];
    *uint64_t v100 = *v101;
    v100[1] = v102;
    uint64_t v103 = (void *)((char *)v4 + v99);
    uint64_t v104 = (void *)((char *)a2 + v99);
    uint64_t v105 = v104[1];
    *uint64_t v103 = *v104;
    v103[1] = v105;
    uint64_t v106 = a3[37];
    uint64_t v107 = a3[38];
    uint64_t v108 = (void *)((char *)v4 + v106);
    uint64_t v109 = (void *)((char *)a2 + v106);
    uint64_t v110 = v109[1];
    *uint64_t v108 = *v109;
    v108[1] = v110;
    uint64_t v111 = (void *)((char *)v4 + v107);
    uint64_t v112 = (void *)((char *)a2 + v107);
    uint64_t v113 = v112[1];
    *uint64_t v111 = *v112;
    v111[1] = v113;
    uint64_t v114 = a3[39];
    uint64_t v115 = a3[40];
    unsigned __int8 v116 = (void *)((char *)v4 + v114);
    uint64_t v117 = (void *)((char *)a2 + v114);
    uint64_t v118 = v117[1];
    *unsigned __int8 v116 = *v117;
    v116[1] = v118;
    uint64_t v119 = (void *)((char *)v4 + v115);
    uint64_t v120 = (void *)((char *)a2 + v115);
    uint64_t v121 = v120[1];
    *uint64_t v119 = *v120;
    v119[1] = v121;
    uint64_t v122 = a3[41];
    uint64_t v123 = a3[42];
    BOOL v124 = (char *)v4 + v122;
    unint64_t v125 = (char *)a2 + v122;
    *(void *)BOOL v124 = *(void *)v125;
    v124[8] = v125[8];
    v126 = (void *)((char *)v4 + v123);
    unint64_t v127 = (void *)((char *)a2 + v123);
    uint64_t v128 = v127[1];
    void *v126 = *v127;
    v126[1] = v128;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001540CC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_10024E030();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(a1 + a2[9], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(a1 + a2[13], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[22];
  if (!sub_10001FA0C(v7, 1, v5)) {
    v6(v7, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[26];
  if (!sub_10001FA0C(v8, 1, v5)) {
    v6(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_100154368(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10024E030();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  unint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  unint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v20);
  unint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (char *)a1 + v21;
  char v26 = (char *)a2 + v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v25, v26, v10);
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)((char *)a1 + v32);
  uint64_t v35 = (void *)((char *)a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = (char *)a1 + v33;
  int64_t v38 = (char *)a2 + v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v129 = v11;
  v11(v37, v38, v10);
  uint64_t v39 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  uint64_t v44 = a3[18];
  uint64_t v45 = a3[19];
  uint64_t v46 = (void *)((char *)a1 + v44);
  uint64_t v47 = (void *)((char *)a2 + v44);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = (void *)((char *)a1 + v45);
  uint64_t v50 = (void *)((char *)a2 + v45);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  uint64_t v52 = a3[20];
  uint64_t v53 = a3[21];
  uint64_t v54 = (void *)((char *)a1 + v52);
  Swift::String v55 = (void *)((char *)a2 + v52);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = (void *)((char *)a1 + v53);
  int v58 = (void *)((char *)a2 + v53);
  uint64_t v59 = v58[1];
  void *v57 = *v58;
  v57[1] = v59;
  uint64_t v60 = a3[22];
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = (char *)a2 + v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v62, 1, v10))
  {
    uint64_t v63 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    uint64_t v64 = v129;
  }
  else
  {
    uint64_t v64 = v129;
    v129(v61, v62, v10);
    sub_1000195B4((uint64_t)v61, 0, 1, v10);
  }
  uint64_t v65 = a3[23];
  uint64_t v66 = a3[24];
  uint64_t v67 = (void *)((char *)a1 + v65);
  uint64_t v68 = (void *)((char *)a2 + v65);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  int v70 = (void *)((char *)a1 + v66);
  uint64_t v71 = (void *)((char *)a2 + v66);
  uint64_t v72 = v71[1];
  void *v70 = *v71;
  v70[1] = v72;
  uint64_t v73 = a3[25];
  uint64_t v74 = a3[26];
  uint64_t v75 = (void *)((char *)a1 + v73);
  uint64_t v76 = (void *)((char *)a2 + v73);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  uint64_t v78 = (char *)a1 + v74;
  uint64_t v79 = (char *)a2 + v74;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v79, 1, v10))
  {
    uint64_t v80 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    v64(v78, v79, v10);
    sub_1000195B4((uint64_t)v78, 0, 1, v10);
  }
  uint64_t v81 = a3[28];
  *((unsigned char *)a1 + a3[27]) = *((unsigned char *)a2 + a3[27]);
  uint64_t v82 = (void *)((char *)a1 + v81);
  uint64_t v83 = (void *)((char *)a2 + v81);
  uint64_t v84 = v83[1];
  *uint64_t v82 = *v83;
  v82[1] = v84;
  uint64_t v85 = a3[30];
  *((unsigned char *)a1 + a3[29]) = *((unsigned char *)a2 + a3[29]);
  *((unsigned char *)a1 + v85) = *((unsigned char *)a2 + v85);
  uint64_t v86 = a3[32];
  *((unsigned char *)a1 + a3[31]) = *((unsigned char *)a2 + a3[31]);
  uint64_t v87 = (void *)((char *)a1 + v86);
  uint64_t v88 = (void *)((char *)a2 + v86);
  uint64_t v130 = v88[1];
  *uint64_t v87 = *v88;
  v87[1] = v130;
  uint64_t v89 = a3[33];
  uint64_t v90 = a3[34];
  uint64_t v91 = (void *)((char *)a1 + v89);
  uint64_t v92 = (void *)((char *)a2 + v89);
  uint64_t v93 = v92[1];
  *uint64_t v91 = *v92;
  v91[1] = v93;
  uint64_t v94 = (void *)((char *)a1 + v90);
  uint64_t v95 = (void *)((char *)a2 + v90);
  uint64_t v128 = v95[1];
  *uint64_t v94 = *v95;
  v94[1] = v128;
  uint64_t v96 = a3[35];
  uint64_t v97 = a3[36];
  uint64_t v98 = (void *)((char *)a1 + v96);
  uint64_t v99 = (void *)((char *)a2 + v96);
  uint64_t v100 = v99[1];
  *uint64_t v98 = *v99;
  v98[1] = v100;
  uint64_t v101 = (void *)((char *)a1 + v97);
  uint64_t v102 = (void *)((char *)a2 + v97);
  uint64_t v103 = v102[1];
  *uint64_t v101 = *v102;
  v101[1] = v103;
  uint64_t v104 = a3[37];
  uint64_t v105 = a3[38];
  uint64_t v106 = (void *)((char *)a1 + v104);
  uint64_t v107 = (void *)((char *)a2 + v104);
  uint64_t v108 = v107[1];
  *uint64_t v106 = *v107;
  v106[1] = v108;
  uint64_t v109 = (void *)((char *)a1 + v105);
  uint64_t v110 = (void *)((char *)a2 + v105);
  uint64_t v111 = v110[1];
  *uint64_t v109 = *v110;
  v109[1] = v111;
  uint64_t v112 = a3[39];
  uint64_t v113 = a3[40];
  uint64_t v114 = (void *)((char *)a1 + v112);
  uint64_t v115 = (void *)((char *)a2 + v112);
  uint64_t v116 = v115[1];
  *uint64_t v114 = *v115;
  v114[1] = v116;
  uint64_t v117 = (void *)((char *)a1 + v113);
  uint64_t v118 = (void *)((char *)a2 + v113);
  uint64_t v119 = v118[1];
  *uint64_t v117 = *v118;
  v117[1] = v119;
  uint64_t v120 = a3[41];
  uint64_t v121 = a3[42];
  uint64_t v122 = (char *)a1 + v120;
  uint64_t v123 = (char *)a2 + v120;
  *(void *)uint64_t v122 = *(void *)v123;
  v122[8] = v123[8];
  BOOL v124 = (void *)((char *)a1 + v121);
  unint64_t v125 = (void *)((char *)a2 + v121);
  uint64_t v126 = v125[1];
  *BOOL v124 = *v125;
  v124[1] = v126;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10015482C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10024E030();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11(&a1[a3[9]], &a2[a3[9]], v9);
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  unint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[11]] = a2[a3[11]];
  uint64_t v24 = a3[12];
  uint64_t v25 = &a1[v24];
  char v26 = &a2[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11(&a1[a3[13]], &a2[a3[13]], v9);
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  uint64_t v27 = a3[15];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  a1[a3[17]] = a2[a3[17]];
  uint64_t v30 = a3[18];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[19];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[20];
  uint64_t v37 = &a1[v36];
  int64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[21];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[22];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = sub_10001FA0C((uint64_t)&a1[v42], 1, v9);
  int v46 = sub_10001FA0C((uint64_t)v44, 1, v9);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      sub_1000195B4((uint64_t)v43, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v9);
LABEL_6:
    uint64_t v47 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_7;
  }
  v11(v43, v44, v9);
LABEL_7:
  uint64_t v48 = a3[23];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[24];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  *(void *)uint64_t v52 = *(void *)v53;
  *((void *)v52 + 1) = *((void *)v53 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[25];
  Swift::String v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  *(void *)Swift::String v55 = *(void *)v56;
  *((void *)v55 + 1) = *((void *)v56 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[26];
  int v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  int v60 = sub_10001FA0C((uint64_t)&a1[v57], 1, v9);
  int v61 = sub_10001FA0C((uint64_t)v59, 1, v9);
  if (!v60)
  {
    if (!v61)
    {
      v11(v58, v59, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v58, v9);
    goto LABEL_12;
  }
  if (v61)
  {
LABEL_12:
    uint64_t v62 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v58, v59, v9);
  sub_1000195B4((uint64_t)v58, 0, 1, v9);
LABEL_13:
  a1[a3[27]] = a2[a3[27]];
  uint64_t v63 = a3[28];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = *((void *)v65 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[29]] = a2[a3[29]];
  a1[a3[30]] = a2[a3[30]];
  a1[a3[31]] = a2[a3[31]];
  uint64_t v66 = a3[32];
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = *((void *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[33];
  int v70 = &a1[v69];
  uint64_t v71 = &a2[v69];
  *(void *)int v70 = *(void *)v71;
  *((void *)v70 + 1) = *((void *)v71 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[34];
  uint64_t v73 = &a1[v72];
  uint64_t v74 = &a2[v72];
  *(void *)uint64_t v73 = *(void *)v74;
  *((void *)v73 + 1) = *((void *)v74 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = a3[35];
  uint64_t v76 = &a1[v75];
  uint64_t v77 = &a2[v75];
  *(void *)uint64_t v76 = *(void *)v77;
  *((void *)v76 + 1) = *((void *)v77 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v78 = a3[36];
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  *(void *)uint64_t v79 = *(void *)v80;
  *((void *)v79 + 1) = *((void *)v80 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = a3[37];
  uint64_t v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  *(void *)uint64_t v82 = *(void *)v83;
  *((void *)v82 + 1) = *((void *)v83 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v84 = a3[38];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  *(void *)uint64_t v85 = *(void *)v86;
  *((void *)v85 + 1) = *((void *)v86 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = a3[39];
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  *(void *)uint64_t v88 = *(void *)v89;
  *((void *)v88 + 1) = *((void *)v89 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = a3[40];
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  *(void *)uint64_t v91 = *(void *)v92;
  *((void *)v91 + 1) = *((void *)v92 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[41];
  uint64_t v94 = &a1[v93];
  uint64_t v95 = &a2[v93];
  uint64_t v96 = *(void *)v95;
  v94[8] = v95[8];
  *(void *)uint64_t v94 = v96;
  uint64_t v97 = a3[42];
  uint64_t v98 = &a1[v97];
  uint64_t v99 = &a2[v97];
  *(void *)uint64_t v98 = *(void *)v99;
  *((void *)v98 + 1) = *((void *)v99 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100154F78(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10024E030();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  uint64_t v12 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  v10(&a1[v12], &a2[v12], v9);
  uint64_t v13 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  a1[v13] = a2[v13];
  uint64_t v14 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  v10(&a1[v14], &a2[v14], v9);
  uint64_t v15 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  uint64_t v16 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[19];
  *(_OWORD *)&a1[a3[18]] = *(_OWORD *)&a2[a3[18]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  uint64_t v18 = a3[21];
  *(_OWORD *)&a1[a3[20]] = *(_OWORD *)&a2[a3[20]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[22];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  if (sub_10001FA0C((uint64_t)&a2[v19], 1, v9))
  {
    uint64_t v22 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v10(v20, v21, v9);
    sub_1000195B4((uint64_t)v20, 0, 1, v9);
  }
  uint64_t v23 = a3[24];
  *(_OWORD *)&a1[a3[23]] = *(_OWORD *)&a2[a3[23]];
  *(_OWORD *)&a1[v23] = *(_OWORD *)&a2[v23];
  uint64_t v24 = a3[26];
  *(_OWORD *)&a1[a3[25]] = *(_OWORD *)&a2[a3[25]];
  uint64_t v25 = &a1[v24];
  char v26 = &a2[v24];
  if (sub_10001FA0C((uint64_t)&a2[v24], 1, v9))
  {
    uint64_t v27 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v10(v25, v26, v9);
    sub_1000195B4((uint64_t)v25, 0, 1, v9);
  }
  uint64_t v28 = a3[28];
  a1[a3[27]] = a2[a3[27]];
  *(_OWORD *)&a1[v28] = *(_OWORD *)&a2[v28];
  uint64_t v29 = a3[30];
  a1[a3[29]] = a2[a3[29]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[32];
  a1[a3[31]] = a2[a3[31]];
  *(_OWORD *)&a1[v30] = *(_OWORD *)&a2[v30];
  uint64_t v31 = a3[34];
  *(_OWORD *)&a1[a3[33]] = *(_OWORD *)&a2[a3[33]];
  *(_OWORD *)&a1[v31] = *(_OWORD *)&a2[v31];
  uint64_t v32 = a3[36];
  *(_OWORD *)&a1[a3[35]] = *(_OWORD *)&a2[a3[35]];
  *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
  uint64_t v33 = a3[38];
  *(_OWORD *)&a1[a3[37]] = *(_OWORD *)&a2[a3[37]];
  *(_OWORD *)&a1[v33] = *(_OWORD *)&a2[v33];
  uint64_t v34 = a3[40];
  *(_OWORD *)&a1[a3[39]] = *(_OWORD *)&a2[a3[39]];
  *(_OWORD *)&a1[v34] = *(_OWORD *)&a2[v34];
  uint64_t v35 = a3[41];
  uint64_t v36 = a3[42];
  uint64_t v37 = &a1[v35];
  int64_t v38 = &a2[v35];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  *(_OWORD *)&a1[v36] = *(_OWORD *)&a2[v36];
  return a1;
}

char *sub_100155294(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10024E030();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = (uint64_t *)&a2[v13];
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (uint64_t *)&a2[v18];
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (uint64_t *)&a2[v23];
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v12(&a1[a3[9]], &a2[a3[9]], v10);
  uint64_t v28 = a3[10];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = (uint64_t *)&a2[v28];
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *(void *)uint64_t v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (uint64_t *)&a2[v33];
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v12(&a1[a3[13]], &a2[a3[13]], v10);
  uint64_t v38 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = (uint64_t *)&a2[v38];
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *(void *)uint64_t v39 = v42;
  *((void *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  a1[v43] = a2[v43];
  uint64_t v44 = a3[18];
  int v45 = &a1[v44];
  int v46 = (uint64_t *)&a2[v44];
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *(void *)int v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[19];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = (uint64_t *)&a2[v49];
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *(void *)uint64_t v50 = v53;
  *((void *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[20];
  Swift::String v55 = &a1[v54];
  uint64_t v56 = (uint64_t *)&a2[v54];
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *(void *)Swift::String v55 = v58;
  *((void *)v55 + 1) = v57;
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[21];
  int v60 = &a1[v59];
  int v61 = (uint64_t *)&a2[v59];
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *(void *)int v60 = v63;
  *((void *)v60 + 1) = v62;
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[22];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  int v67 = sub_10001FA0C((uint64_t)&a1[v64], 1, v10);
  int v68 = sub_10001FA0C((uint64_t)v66, 1, v10);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v65, v66, v10);
      sub_1000195B4((uint64_t)v65, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v65, v10);
LABEL_6:
    uint64_t v69 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_7;
  }
  v12(v65, v66, v10);
LABEL_7:
  uint64_t v70 = a3[23];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = (uint64_t *)&a2[v70];
  uint64_t v74 = *v72;
  uint64_t v73 = v72[1];
  *(void *)uint64_t v71 = v74;
  *((void *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  uint64_t v75 = a3[24];
  uint64_t v76 = &a1[v75];
  uint64_t v77 = (uint64_t *)&a2[v75];
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  *(void *)uint64_t v76 = v79;
  *((void *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[25];
  uint64_t v81 = &a1[v80];
  uint64_t v82 = (uint64_t *)&a2[v80];
  uint64_t v84 = *v82;
  uint64_t v83 = v82[1];
  *(void *)uint64_t v81 = v84;
  *((void *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = a3[26];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  int v88 = sub_10001FA0C((uint64_t)&a1[v85], 1, v10);
  int v89 = sub_10001FA0C((uint64_t)v87, 1, v10);
  if (!v88)
  {
    if (!v89)
    {
      v12(v86, v87, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v86, v10);
    goto LABEL_12;
  }
  if (v89)
  {
LABEL_12:
    uint64_t v90 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v86, v87, v10);
  sub_1000195B4((uint64_t)v86, 0, 1, v10);
LABEL_13:
  uint64_t v91 = a3[28];
  a1[a3[27]] = a2[a3[27]];
  uint64_t v92 = &a1[v91];
  uint64_t v93 = (uint64_t *)&a2[v91];
  uint64_t v95 = *v93;
  uint64_t v94 = v93[1];
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = a3[30];
  a1[a3[29]] = a2[a3[29]];
  a1[v96] = a2[v96];
  uint64_t v97 = a3[32];
  a1[a3[31]] = a2[a3[31]];
  uint64_t v98 = &a1[v97];
  uint64_t v99 = (uint64_t *)&a2[v97];
  uint64_t v101 = *v99;
  uint64_t v100 = v99[1];
  *(void *)uint64_t v98 = v101;
  *((void *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = a3[33];
  uint64_t v103 = &a1[v102];
  uint64_t v104 = (uint64_t *)&a2[v102];
  uint64_t v106 = *v104;
  uint64_t v105 = v104[1];
  *(void *)uint64_t v103 = v106;
  *((void *)v103 + 1) = v105;
  swift_bridgeObjectRelease();
  uint64_t v107 = a3[34];
  uint64_t v108 = &a1[v107];
  uint64_t v109 = (uint64_t *)&a2[v107];
  uint64_t v111 = *v109;
  uint64_t v110 = v109[1];
  *(void *)uint64_t v108 = v111;
  *((void *)v108 + 1) = v110;
  swift_bridgeObjectRelease();
  uint64_t v112 = a3[35];
  uint64_t v113 = &a1[v112];
  uint64_t v114 = (uint64_t *)&a2[v112];
  uint64_t v116 = *v114;
  uint64_t v115 = v114[1];
  *(void *)uint64_t v113 = v116;
  *((void *)v113 + 1) = v115;
  swift_bridgeObjectRelease();
  uint64_t v117 = a3[36];
  uint64_t v118 = &a1[v117];
  uint64_t v119 = (uint64_t *)&a2[v117];
  uint64_t v121 = *v119;
  uint64_t v120 = v119[1];
  *(void *)uint64_t v118 = v121;
  *((void *)v118 + 1) = v120;
  swift_bridgeObjectRelease();
  uint64_t v122 = a3[37];
  uint64_t v123 = &a1[v122];
  BOOL v124 = (uint64_t *)&a2[v122];
  uint64_t v126 = *v124;
  uint64_t v125 = v124[1];
  *(void *)uint64_t v123 = v126;
  *((void *)v123 + 1) = v125;
  swift_bridgeObjectRelease();
  uint64_t v127 = a3[38];
  uint64_t v128 = &a1[v127];
  unint64_t v129 = (uint64_t *)&a2[v127];
  uint64_t v131 = *v129;
  uint64_t v130 = v129[1];
  *(void *)uint64_t v128 = v131;
  *((void *)v128 + 1) = v130;
  swift_bridgeObjectRelease();
  uint64_t v132 = a3[39];
  uint64_t v133 = &a1[v132];
  uint64_t v134 = (uint64_t *)&a2[v132];
  uint64_t v136 = *v134;
  uint64_t v135 = v134[1];
  *(void *)uint64_t v133 = v136;
  *((void *)v133 + 1) = v135;
  swift_bridgeObjectRelease();
  uint64_t v137 = a3[40];
  uint64_t v138 = &a1[v137];
  uint64_t v139 = (uint64_t *)&a2[v137];
  uint64_t v141 = *v139;
  uint64_t v140 = v139[1];
  *(void *)uint64_t v138 = v141;
  *((void *)v138 + 1) = v140;
  swift_bridgeObjectRelease();
  uint64_t v142 = a3[41];
  uint64_t v143 = a3[42];
  uint64_t v144 = &a1[v142];
  uint64_t v145 = &a2[v142];
  *(void *)uint64_t v144 = *(void *)v145;
  v144[8] = v145[8];
  unint64_t v146 = &a1[v143];
  unsigned __int16 v147 = (uint64_t *)&a2[v143];
  uint64_t v149 = *v147;
  uint64_t v148 = v147[1];
  *(void *)unint64_t v146 = v149;
  *((void *)v146 + 1) = v148;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100155834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100155848);
}

uint64_t sub_100155848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10024E030();
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
      uint64_t v11 = *(int *)(a3 + 88);
    }
    return sub_10001FA0C(a1 + v11, a2, v10);
  }
}

uint64_t sub_1001558F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015590C);
}

uint64_t sub_10015590C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10024E030();
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
      uint64_t v11 = *(int *)(a4 + 88);
    }
    return sub_1000195B4(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CheddarTransaction()
{
  uint64_t result = qword_100313798;
  if (!qword_100313798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100155A00()
{
  sub_10024E030();
  if (v0 <= 0x3F)
  {
    sub_1000C1D28();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100155B60(uint64_t a1)
{
  uint64_t result = sub_100158870((unint64_t *)&qword_10030B868, (void (*)(uint64_t))type metadata accessor for CheddarTransaction);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_100155BB8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  sub_10024E030();
  sub_10001B550();
  uint64_t v115 = v9;
  uint64_t v116 = v10;
  __chkstk_darwin(v9, v11);
  sub_10002059C();
  uint64_t v114 = v13 - v12;
  uint64_t v14 = sub_10024E0A0();
  sub_10001B550();
  uint64_t v16 = v15;
  __chkstk_darwin(v17, v18);
  sub_1000ACE78();
  uint64_t v19 = sub_100019524(&qword_10030C100);
  __chkstk_darwin(v19 - 8, v20);
  sub_10002059C();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = (int *)type metadata accessor for CheddarTransaction();
  uint64_t v25 = (uint64_t *)((char *)a6 + v24[8]);
  void *v25 = 0x65646F6358;
  v25[1] = 0xE500000000000000;
  sub_1000D6DE0(v23);
  if (sub_10001FA0C(v23, 1, v14))
  {
    sub_10003C3FC(v23, &qword_10030C100);
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v6, v23, v14);
    sub_10003C3FC(v23, &qword_10030C100);
    uint64_t v28 = sub_10024E050();
    uint64_t v30 = v29;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v6, v14);
    *(void *)&v117[0] = v28;
    *((void *)&v117[0] + 1) = v30;
    sub_10001DAC0();
    uint64_t v26 = sub_10024F150();
    uint64_t v27 = v31;
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = (uint64_t *)((char *)a6 + v24[25]);
  *uint64_t v32 = v26;
  v32[1] = v27;
  *a6 = sub_1000D428C();
  a6[1] = v33;
  sub_1000D9478(3);
  if ((v34 & 1) != 0 || (sub_1000D4218() & 1) == 0)
  {
    sub_1000195B4((uint64_t)a6 + v24[26], 1, 1, v115);
    char v36 = 2;
  }
  else
  {
    uint64_t v35 = (uint64_t)a6 + v24[26];
    sub_10024DF60();
    sub_1000195B4(v35, 0, 1, v115);
    char v36 = sub_1000D4238();
  }
  *((unsigned char *)a6 + v24[27]) = v36;
  sub_1000D9478(4);
  if (v37)
  {
    uint64_t v39 = (uint64_t)a6 + v24[22];
    uint64_t v40 = 1;
  }
  else
  {
    uint64_t v38 = (char *)a6 + v24[22];
    sub_10024DF60();
    uint64_t v39 = (uint64_t)v38;
    uint64_t v40 = 0;
  }
  sub_1000195B4(v39, v40, 1, v115);
  uint64_t v41 = sub_1000D939C(15);
  if (!v42)
  {
    *((unsigned char *)a6 + v24[31]) = 2;
    uint64_t v45 = sub_10015933C(v41, v24[29]);
    *((unsigned char *)a6 + v24[30]) = 3;
    int v46 = (uint64_t *)((char *)a6 + v24[23]);
    *int v46 = v45;
    v46[1] = 0;
    uint64_t v47 = (uint64_t *)((char *)a6 + v24[24]);
    *uint64_t v47 = v45;
    v47[1] = 0;
    goto LABEL_28;
  }
  sub_1001592B0(v41, v42, v24[23]);
  *((unsigned char *)a6 + v24[31]) = sub_1000DA070() & 1;
  uint64_t v43 = sub_1000D946C(25);
  if (v44) {
    *(void *)&v117[0] = -1;
  }
  else {
    *(void *)&v117[0] = v43;
  }
  uint64_t v48 = sub_10024F9E0();
  uint64_t v50 = sub_1001592B0(v48, v49, v24[24]);
  BOOL v51 = sub_1000D6564(v50);
  if (v51)
  {
    *((unsigned char *)a6 + v24[29]) = 0;
    sub_1001591F4(v24[28]);
  }
  else
  {
    uint64_t v52 = sub_1000D6724(v51);
    if (v53)
    {
      uint64_t v54 = v24[29];
      char v55 = 1;
    }
    else
    {
      uint64_t v52 = sub_1000D939C(28);
      if (v53)
      {
        uint64_t v54 = v24[29];
        char v55 = 2;
      }
      else
      {
        uint64_t v52 = sub_1000D67C0(v52);
        uint64_t v54 = v24[29];
        if (!v53)
        {
          sub_10015933C(v52, v54);
          goto LABEL_25;
        }
        char v55 = 3;
      }
    }
    *((unsigned char *)a6 + v54) = v55;
    uint64_t v56 = (uint64_t *)((char *)a6 + v24[28]);
    *uint64_t v56 = v52;
    v56[1] = v53;
  }
LABEL_25:
  char v57 = sub_1000D9D34();
  if (v57 == 4) {
    char v57 = 0;
  }
  *((unsigned char *)a6 + v24[30]) = sub_100156568(v57);
LABEL_28:
  sub_1000D453C();
  sub_10024DF60();
  sub_1000D9478(12);
  if (v58)
  {
    uint64_t v59 = sub_1001592F8(v24[9]);
    v60(v59);
  }
  else
  {
    sub_10024DF60();
  }
  sub_1000D4318();
  sub_10005CF84((uint64_t)v123, (uint64_t)__src, &qword_100309EA0);
  if (*((void *)&__src[0] + 1))
  {
    memcpy(v117, __src, sizeof(v117));
    long long v118 = __src[0];
    *(_OWORD *)((char *)a6 + v24[18]) = __src[0];
    long long v119 = v117[2];
    long long v120 = v117[1];
    *(_OWORD *)((char *)a6 + v24[19]) = v117[2];
    sub_1000562D8((uint64_t)&v118);
    sub_1000562D8((uint64_t)&v119);
    sub_1000562D8((uint64_t)&v120);
    sub_1000DC3D8(v123);
    *(_OWORD *)((char *)a6 + v24[15]) = v120;
  }
  else
  {
    int v61 = (uint64_t *)((char *)a6 + v24[18]);
    *int v61 = 5790042;
    v61[1] = 0xE300000000000000;
    uint64_t v62 = (uint64_t *)((char *)a6 + v24[19]);
    *uint64_t v62 = 0x313233343536;
    v62[1] = 0xE600000000000000;
    uint64_t v63 = (uint64_t *)((char *)a6 + v24[15]);
    void *v63 = 5789784;
    v63[1] = 0xE300000000000000;
  }
  char v64 = 1;
  switch(sub_1000D627C())
  {
    case 1u:
      break;
    default:
      char v64 = sub_10024FA60();
      break;
  }
  swift_bridgeObjectRelease();
  *((unsigned char *)a6 + v24[17]) = v64 & 1;
  sub_10024E020();
  uint64_t v65 = sub_1000D946C(8);
  if (v66) {
    uint64_t v65 = sub_1000D5AE4();
  }
  *(void *)&NSDecimal v122 = v65;
  uint64_t v67 = sub_10024F9E0();
  sub_1001592B0(v67, v68, v24[10]);
  uint64_t v69 = sub_1000D427C();
  uint64_t v70 = (uint64_t *)((char *)a6 + v24[12]);
  uint64_t *v70 = v69;
  v70[1] = v71;
  uint64_t v72 = sub_1001592F8(v24[13]);
  v73(v72);
  sub_1000D44D4();
  if ((v75 & 0x100000000) != 0) {
    sub_10024EF90(v74, 0);
  }
  sub_10024EF90(v74, 1000);
  uint64_t v76 = sub_10024EFB0();
  *(_DWORD *)&NSDecimal v122 = v76;
  v122._mantissa[0] = WORD2(v76);
  v122._mantissa[1] = HIWORD(v76);
  *(void *)&v122._mantissa[2] = v77;
  v122._mantissa[6] = v78;
  v122._mantissa[7] = v79;
  sub_10024EF90((NSDecimal *)HIWORD(v77), 0);
  *(_DWORD *)&NSDecimal v121 = v80;
  v121._mantissa[0] = v81;
  v121._mantissa[1] = v82;
  v121._mantissa[2] = v83;
  v121._mantissa[3] = v84;
  v121._mantissa[4] = v85;
  v121._mantissa[5] = v86;
  v121._mantissa[6] = v87;
  v121._mantissa[7] = v88;
  NSDecimalRound(&v121, &v122, 0, NSRoundDown);
  sub_10024EFA0(v89);
  uint64_t v91 = v90;
  id v92 = [v90 longLongValue];

  *(uint64_t *)((char *)a6 + v24[14]) = (uint64_t)v92;
  uint64_t v93 = sub_1000D64FC();
  if (v93 < 0)
  {
    sub_10024F660();
    __break(1u);
    JUMPOUT(0x100156548);
  }
  *(uint64_t *)((char *)a6 + v24[16]) = v93;
  sub_1000D5AE4();
  uint64_t v94 = sub_10024F9E0();
  sub_1001592B0(v94, v95, v24[20]);
  char v96 = sub_1000D6528();
  unint64_t v97 = 0xEA0000000000656CLL;
  unint64_t v98 = 0x62616D75736E6F43;
  switch(v96)
  {
    case 1:
      unint64_t v97 = 0xEE00656C62616D75;
      unint64_t v98 = 0x736E6F432D6E6F4ELL;
      break;
    case 2:
      unint64_t v97 = 0x800000010027DB40;
      unint64_t v98 = 0xD000000000000019;
      break;
    case 3:
      unint64_t v98 = 0xD00000000000001BLL;
      unint64_t v97 = 0x800000010027DB20;
      break;
    default:
      break;
  }
  uint64_t v99 = (unint64_t *)((char *)a6 + v24[21]);
  *uint64_t v99 = v98;
  v99[1] = v97;
  uint64_t v100 = sub_10006B418(a2, a3, a4, a5 & 1);
  uint64_t v102 = v101;
  uint64_t v104 = v103;
  uint64_t v106 = v105;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v114, v115);
  uint64_t v107 = (uint64_t *)((char *)a6 + v24[7]);
  *uint64_t v107 = v100;
  v107[1] = v102;
  uint64_t v108 = (uint64_t *)((char *)a6 + v24[6]);
  *uint64_t v108 = v104;
  v108[1] = v106;
  *((unsigned char *)a6 + v24[11]) = 0;
  sub_1001591F4(v24[35]);
  sub_1001591F4(v24[37]);
  sub_1001591F4(v24[38]);
  sub_1001591F4(v24[39]);
  sub_1001591F4(v24[42]);
  sub_1001591F4(v24[40]);
  uint64_t v109 = (char *)a6 + v24[41];
  *(void *)uint64_t v109 = 0;
  v109[8] = 1;
  sub_1001591F4(v24[32]);
  sub_1001591F4(v24[33]);
  sub_1001591F4(v24[34]);
  sub_1001591F4(v24[36]);
}

uint64_t sub_100156568(char a1)
{
  return 0x2010003u >> (8 * a1);
}

uint64_t sub_100156580(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D8898;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_10015658C(char a1)
{
  if (a1) {
    return 0x535F594C494D4146;
  }
  else {
    return 0x4553414843525550;
  }
}

uint64_t sub_1001565D4(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D88E8;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_1001565E0(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  Swift::Int v5 = sub_10024F790(a3, v8);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_100156630(char a1)
{
  if (a1) {
    return 0x4C4157454E4552;
  }
  else {
    return 0x4553414843525550;
  }
}

uint64_t sub_100156668(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8938;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001566B4(char a1)
{
  if (!a1) {
    return 0x4952545F45455246;
  }
  if (a1 == 1) {
    return 0x595F53415F594150;
  }
  return 0x465F50555F594150;
}

uint64_t sub_100156724(char *a1, char *a2)
{
  return sub_1000FA9C8(*a1, *a2);
}

Swift::Int sub_100156730()
{
  return sub_1001D37C0();
}

uint64_t sub_100156738()
{
  return sub_1000D1A84();
}

Swift::Int sub_100156740()
{
  return sub_1000D33B0();
}

uint64_t sub_100156748@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D8898;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_100156780()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_10015658C(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001567A8()
{
  return sub_10024EA50();
}

uint64_t sub_100156808()
{
  return sub_10024EA00();
}

uint64_t sub_100156858()
{
  unsigned __int8 v1 = sub_1000621E4();
  uint64_t result = MessageType.rawValue.getter(v1);
  *unint64_t v0 = result;
  return result;
}

uint64_t sub_100156880()
{
  return sub_10024EA60();
}

uint64_t sub_1001568E0()
{
  return sub_10024EA10();
}

uint64_t sub_100156930(char *a1, char *a2)
{
  return sub_1000FA80C(*a1, *a2);
}

Swift::Int sub_10015693C()
{
  return sub_1001D3810();
}

uint64_t sub_100156944()
{
  return sub_1000D1988();
}

Swift::Int sub_10015694C()
{
  return sub_1000D32AC();
}

uint64_t sub_100156954@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D88E8;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_10015698C()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100156630(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001569B4()
{
  return sub_10024EA50();
}

uint64_t sub_100156A14()
{
  return sub_10024EA00();
}

uint64_t sub_100156A64(unsigned __int8 *a1, char *a2)
{
  return sub_1000FA8A0(*a1, *a2);
}

Swift::Int sub_100156A70()
{
  return sub_1001D381C();
}

uint64_t sub_100156A78(uint64_t a1)
{
  return sub_1000D19F4(a1, *v1);
}

Swift::Int sub_100156A80()
{
  return sub_1000D331C();
}

uint64_t sub_100156A88@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100156668(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100156AB8()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1001566B4(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100156AE0()
{
  return sub_10024EA50();
}

uint64_t sub_100156B40()
{
  return sub_10024EA00();
}

uint64_t sub_100156B90()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x27) {
    return 39;
  }
  else {
    return v0;
  }
}

uint64_t sub_100156BE8()
{
  return 39;
}

uint64_t sub_100156BF0(char a1)
{
  uint64_t result = 0x6843746E756F6D61;
  switch(a1)
  {
    case 1:
      return 0x756F636341707061;
    case 2:
      return 0x6449656C646E7562;
    case 3:
      return 0x6F43656772616863;
    case 4:
      return 0x614464656E676973;
    case 5:
    case 23:
      return 0x79636E6572727563;
    case 6:
      uint64_t v3 = 0x6D6F74737563;
      goto LABEL_35;
    case 7:
      return 0xD000000000000012;
    case 8:
      return 0xD000000000000017;
    case 9:
      return 0x6D6E6F7269766E65;
    case 10:
      return 0x6574616D69747365;
    case 11:
      return 0x4473657269707865;
    case 12:
      return 0x6461726770557369;
    case 13:
      return 0xD000000000000014;
    case 14:
      return 0xD000000000000015;
    case 15:
      return 0x656449726566666FLL;
    case 16:
      return 0x707954726566666FLL;
    case 17:
    case 19:
    case 20:
    case 27:
      return 0xD000000000000011;
    case 18:
      return 0xD000000000000012;
    case 21:
      return 0x49746375646F7270;
    case 22:
      return 0x6563697270;
    case 24:
      return 0x6573616863727570;
    case 25:
      return 0xD000000000000012;
    case 26:
      return 0x797469746E617571;
    case 28:
      return 0x697461636F766572;
    case 29:
      return 0xD000000000000010;
    case 30:
    case 31:
      return 0x6F726665726F7473;
    case 32:
      return 0xD00000000000001BLL;
    case 33:
      uint64_t v4 = 0x646F43786174;
      goto LABEL_31;
    case 34:
      uint64_t v4 = 0x746152786174;
LABEL_31:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
      break;
    case 35:
      uint64_t result = 0x746361736E617274;
      break;
    case 36:
      uint64_t result = 1701869940;
      break;
    case 37:
      uint64_t v3 = 0x64724F626577;
LABEL_35:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
      break;
    case 38:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001570AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FAA6C(*a1, *a2);
}

Swift::Int sub_1001570B8()
{
  return sub_1001D3828(*v0);
}

uint64_t sub_1001570C0(uint64_t a1)
{
  return sub_1000D1B00(a1, *v1);
}

Swift::Int sub_1001570C8(uint64_t a1)
{
  return sub_1000D3430(a1, *v1);
}

uint64_t sub_1001570D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100156B90();
  *a1 = result;
  return result;
}

uint64_t sub_100157100()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100156BF0(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100157128()
{
  return sub_1001570A8(*v0);
}

uint64_t sub_100157130@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100156BE4();
  *a1 = result;
  return result;
}

uint64_t sub_100157158@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100156BE8();
  *a1 = result;
  return result;
}

uint64_t sub_100157180(uint64_t a1)
{
  unint64_t v2 = sub_1001586CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001571BC(uint64_t a1)
{
  unint64_t v2 = sub_1001586CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001571F8(void *a1)
{
  sub_100019524(&qword_100313888);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_10002059C();
  sub_10001C2A8(a1, a1[3]);
  sub_1001586CC();
  sub_10024FD40();
  Swift::Int v5 = (int *)type metadata accessor for CheddarTransaction();
  sub_1000205DC(v5[32]);
  sub_10024F8D0();
  if (!v1)
  {
    sub_1000205DC(v5[25]);
    sub_10015914C(1);
    sub_100159184(2);
    sub_1000205DC(v5[33]);
    sub_10015914C(3);
    sub_10024E030();
    sub_100158870((unint64_t *)&qword_100309420, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100159214();
    sub_1000205DC(v5[34]);
    sub_10015914C(5);
    sub_1000205DC(v5[35]);
    sub_10015914C(6);
    sub_1000205DC(v5[6]);
    sub_100159184(7);
    sub_1000205DC(v5[7]);
    sub_100159184(8);
    sub_1000205DC(v5[8]);
    sub_100159184(9);
    sub_1000205DC(v5[36]);
    sub_10015914C(10);
    sub_1001592C0(11);
    sub_100159238(12);
    sub_10024F8E0();
    sub_100159214();
    sub_1000205DC(v5[10]);
    sub_100159184(14);
    sub_1000205DC(v5[28]);
    sub_10015914C(15);
    sub_100159314(v5[29]);
    sub_10014A3E0();
    sub_10015928C();
    sub_100159314(v5[30]);
    sub_10014A42C();
    sub_10015928C();
    sub_100159314(v5[11]);
    sub_1001588B8();
    sub_100159384();
    sub_1000205DC(v5[37]);
    sub_10015914C(19);
    sub_1000205DC(v5[38]);
    sub_10015914C(20);
    sub_1000205DC(v5[12]);
    sub_100159184(21);
    sub_100159238(22);
    sub_10024F990();
    sub_1000205DC(v5[15]);
    sub_100159184(23);
    sub_100159214();
    sub_1000205DC(v5[39]);
    sub_10015914C(25);
    sub_100159238(26);
    sub_10024F970();
    sub_100159314(v5[17]);
    sub_100158904();
    sub_100159384();
    sub_1001592C0(28);
    sub_100159314(v5[27]);
    sub_100067B94();
    sub_10015928C();
    sub_1000205DC(v5[18]);
    sub_100159184(30);
    sub_1000205DC(v5[19]);
    sub_100159184(31);
    sub_1000205DC(v5[23]);
    sub_10015914C(32);
    sub_1000205DC(v5[40]);
    sub_10015914C(33);
    sub_10024F8F0();
    sub_1000205DC(v5[20]);
    sub_100159184(35);
    sub_1000205DC(v5[21]);
    sub_100159184(36);
    sub_1000205DC(v5[42]);
    sub_10015914C(37);
    sub_1000205DC(v5[24]);
    sub_10015914C(38);
  }
  sub_1000EA6E4();
  return v6();
}

uint64_t sub_100157788@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v144 = a2;
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  Swift::String v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  sub_10024E030();
  sub_10001B550();
  uint64_t v154 = v10;
  uint64_t v155 = v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v131 - v19;
  uint64_t v147 = sub_100019524(&qword_100313868);
  sub_10001B550();
  uint64_t v145 = v21;
  __chkstk_darwin(v22, v23);
  sub_1000ACE78();
  type metadata accessor for CheddarTransaction();
  sub_100025FBC();
  __chkstk_darwin(v24, v25);
  sub_10002059C();
  unsigned __int16 v151 = (uint64_t *)(v28 - v27);
  unsigned __int16 v152 = v26;
  uint64_t v29 = (void *)(v28 - v27 + v26[8]);
  *uint64_t v29 = 0x65646F6358;
  v29[1] = 0xE500000000000000;
  uint64_t v149 = a1;
  unsigned __int16 v150 = v29;
  sub_10001C2A8(a1, a1[3]);
  sub_1001586CC();
  uint64_t v148 = v2;
  uint64_t v30 = v153;
  sub_10024FD20();
  if (v30)
  {
    unsigned __int16 v153 = v30;
    LODWORD(v148) = 0;
    unint64_t v32 = 16;
  }
  else
  {
    uint64_t v143 = (uint64_t)v15;
    unint64_t v146 = v8;
    char v158 = 0;
    uint64_t v31 = sub_10024F7C0();
    uint64_t v45 = v151;
    int v46 = v152;
    sub_1001592EC(v31, v47, v152[32]);
    uint64_t v48 = sub_100159320(1);
    sub_1001592EC(v48, v49, v46[25]);
    char v158 = 2;
    uint64_t *v45 = sub_10024F830();
    v45[1] = v50;
    uint64_t v51 = sub_100159320(3);
    sub_1001592EC(v51, v52, v46[33]);
    char v158 = 4;
    uint64_t v53 = sub_100158870(&qword_100309440, (void (*)(uint64_t))&type metadata accessor for Date);
    unsigned __int16 v153 = v20;
    uint64_t v54 = v154;
    uint64_t v142 = v53;
    sub_10024F870();
    char v55 = (char *)v45 + v46[5];
    uint64_t v141 = *(void (**)(char *, char *, uint64_t))(v155 + 32);
    v141(v55, v153, v54);
    char v158 = 5;
    uint64_t v56 = sub_10024F7C0();
    sub_1001592EC(v56, v57, v46[34]);
    uint64_t v58 = sub_100159320(6);
    sub_1001592EC(v58, v59, v46[35]);
    char v158 = 7;
    uint64_t v60 = sub_10024F830();
    unsigned __int16 v153 = 0;
    sub_1001592EC(v60, v61, v46[6]);
    sub_1001593B4(8);
    uint64_t v62 = sub_10024F830();
    unsigned __int16 v153 = 0;
    sub_1001592EC(v62, v63, v46[7]);
    sub_1001593B4(10);
    uint64_t v64 = sub_10024F7C0();
    unsigned __int16 v153 = 0;
    sub_1001591E8(v64, v65, v152[36]);
    sub_1001593C8(11);
    sub_1001593FC();
    sub_10024F800();
    unsigned __int16 v153 = 0;
    sub_10005CF84(0, (uint64_t)v151 + v152[22], (uint64_t *)&unk_10030FD70);
    sub_100159200(12);
    char v66 = sub_10024F7D0();
    unsigned __int16 v153 = 0;
    *((unsigned char *)v151 + v152[31]) = v66;
    sub_1001593C8(13);
    sub_1001593FC();
    sub_10024F870();
    unsigned __int16 v153 = 0;
    sub_1001593D4();
    v69();
    uint64_t v70 = sub_1001591C8(14);
    unsigned __int16 v153 = 0;
    sub_1001591E8(v70, v71, v152[10]);
    uint64_t v72 = sub_1001591A8(15);
    unsigned __int16 v153 = 0;
    sub_1001591E8(v72, v73, v152[28]);
    char v157 = 16;
    sub_10014A15C();
    sub_100159250();
    unsigned __int16 v153 = 0;
    sub_100159354();
    *(unsigned char *)(v76 + *(int *)(v74 + 116)) = v75;
    char v157 = 17;
    sub_10014A1A8();
    sub_100159250();
    unsigned __int16 v153 = 0;
    sub_100159354();
    *(unsigned char *)(v79 + *(int *)(v77 + 120)) = v78;
    char v157 = 18;
    sub_100158718();
    sub_100159360();
    unsigned __int16 v153 = 0;
    sub_100159354();
    *(unsigned char *)(v82 + *(int *)(v80 + 44)) = v81;
    uint64_t v83 = sub_1001591A8(19);
    unsigned __int16 v153 = 0;
    sub_1001591E8(v83, v84, v152[37]);
    uint64_t v85 = sub_1001591A8(20);
    unsigned __int16 v153 = 0;
    sub_1001591E8(v85, v86, v152[38]);
    uint64_t v87 = sub_1001591C8(21);
    unsigned __int16 v153 = 0;
    sub_1001591E8(v87, v88, v152[12]);
    sub_100159200(22);
    uint64_t v89 = sub_10024F880();
    unsigned __int16 v153 = 0;
    *(uint64_t *)((char *)v151 + v152[14]) = v89;
    uint64_t v90 = sub_1001591C8(23);
    unsigned __int16 v153 = 0;
    sub_1001591E8(v90, v91, v152[15]);
    sub_1001593C8(24);
    id v92 = v153;
    sub_10024F870();
    unsigned __int16 v153 = v92;
    if (v92)
    {
      uint64_t v93 = sub_100159170();
      v94(v93);
      LODWORD(v148) = 0;
      unint64_t v32 = 0x7F124097FLL;
    }
    else
    {
      sub_1001593D4();
      v95();
      uint64_t v96 = sub_1001591A8(25);
      unsigned __int16 v153 = 0;
      sub_1001591E8(v96, v97, v152[39]);
      sub_100159200(26);
      uint64_t v98 = sub_10024F860();
      unsigned __int16 v153 = 0;
      *(uint64_t *)((char *)v151 + v152[16]) = v98;
      char v157 = 27;
      sub_100158764();
      sub_100159360();
      unsigned __int16 v153 = 0;
      sub_100159354();
      *(unsigned char *)(v101 + *(int *)(v99 + 68)) = v100;
      sub_1001593C8(28);
      uint64_t v102 = v153;
      sub_10024F800();
      unsigned __int16 v153 = v102;
      if (!v102)
      {
        sub_10005CF84((uint64_t)v146, (uint64_t)v151 + v152[26], (uint64_t *)&unk_10030FD70);
        char v157 = 29;
        sub_100067B48();
        sub_100159250();
        unsigned __int16 v153 = 0;
        sub_100159354();
        *(unsigned char *)(v105 + *(int *)(v103 + 108)) = v104;
        uint64_t v106 = sub_1001591C8(30);
        unsigned __int16 v153 = 0;
        sub_1001591E8(v106, v107, v152[18]);
        uint64_t v108 = sub_1001591C8(31);
        unsigned __int16 v153 = 0;
        sub_1001591E8(v108, v109, v152[19]);
        uint64_t v110 = sub_1001591A8(32);
        unsigned __int16 v153 = 0;
        sub_1001591E8(v110, v111, v152[23]);
        uint64_t v112 = sub_1001591A8(33);
        unsigned __int16 v153 = 0;
        sub_1001591E8(v112, v113, v152[40]);
        sub_100159200(34);
        uint64_t v114 = sub_10024F7E0();
        unsigned __int16 v153 = 0;
        uint64_t v115 = (char *)v151 + v152[41];
        *(void *)uint64_t v115 = v114;
        v115[8] = v116 & 1;
        uint64_t v117 = sub_1001591C8(35);
        LODWORD(v146) = 1;
        unsigned __int16 v153 = 0;
        sub_1001591E8(v117, v118, v152[20]);
        uint64_t v119 = sub_1001591C8(36);
        unsigned __int16 v153 = 0;
        sub_1001591E8(v119, v120, v152[21]);
        uint64_t v121 = sub_1001591A8(37);
        unsigned __int16 v153 = 0;
        sub_1001591E8(v121, v122, v152[42]);
        uint64_t v123 = sub_1001591A8(38);
        unsigned __int16 v153 = 0;
        uint64_t v124 = v123;
        uint64_t v126 = v125;
        uint64_t v127 = sub_100159170();
        v128(v127);
        uint64_t v129 = (uint64_t)v151;
        uint64_t v130 = (uint64_t *)((char *)v151 + v152[24]);
        *uint64_t v130 = v124;
        v130[1] = v126;
        sub_1001587B0(v129, v144);
        sub_10001C2EC((uint64_t)v149);
        return sub_100158814(v129);
      }
      unint64_t v32 = 0xFF1240B7FLL;
      uint64_t v67 = sub_100159170();
      v68(v67);
      LODWORD(v148) = 0;
    }
  }
  uint64_t v33 = v151;
  char v34 = v152;
  sub_10001C2EC((uint64_t)v149);
  uint64_t v35 = (v32 >> 2) & 1;
  uint64_t v36 = (v32 >> 3) & 1;
  uint64_t v37 = (v32 >> 5) & 1;
  uint64_t v38 = (v32 >> 6) & 1;
  uint64_t v39 = (v32 >> 8) & 1;
  uint64_t v40 = (v32 >> 9) & 1;
  uint64_t v131 = (v32 >> 11) & 1;
  uint64_t v132 = (v32 >> 14) & 1;
  uint64_t v133 = (v32 >> 15) & 1;
  uint64_t v134 = (v32 >> 18) & 1;
  uint64_t v135 = (v32 >> 19) & 1;
  uint64_t v136 = (v32 >> 21) & 1;
  uint64_t v137 = (v32 >> 22) & 1;
  uint64_t v138 = (v32 >> 24) & 1;
  uint64_t v139 = (v32 >> 28) & 1;
  uint64_t v140 = (v32 >> 29) & 1;
  uint64_t v141 = (void (*)(char *, char *, uint64_t))((v32 >> 30) & 1);
  uint64_t v142 = (v32 >> 31) & 1;
  uint64_t v143 = HIDWORD(v32) & 1;
  uint64_t v144 = (v32 >> 33) & 1;
  uint64_t v145 = (v32 >> 34) & 1;
  uint64_t v149 = (void *)((v32 >> 35) & 1);
  if (v32)
  {
    LODWORD(v146) = 0;
    int v156 = 0;
    LODWORD(v147) = 0;
    swift_bridgeObjectRelease();
    if (((v32 >> 1) & 1) == 0)
    {
LABEL_6:
      uint64_t v41 = v154;
      if (v35) {
        goto LABEL_7;
      }
LABEL_11:
      if (!v36) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
  else
  {
    LODWORD(v147) = 0;
    int v156 = 0;
    LODWORD(v146) = 0;
    if ((v32 & 2) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t v41 = v154;
  sub_1001593E8();
  v42();
  if ((v35 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_7:
  sub_100020640();
  if (v36) {
LABEL_12:
  }
    sub_100020640();
LABEL_13:
  uint64_t result = swift_bridgeObjectRelease();
  if (v37)
  {
    sub_1001593E8();
    uint64_t result = v44();
    if (!v38) {
      goto LABEL_15;
    }
LABEL_61:
    uint64_t result = sub_100020640();
    if (!v39) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v38) {
    goto LABEL_61;
  }
LABEL_15:
  if (v39) {
LABEL_16:
  }
    uint64_t result = sub_100020640();
LABEL_17:
  if (v40) {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v155 + 8))((char *)v33 + v34[13], v41);
  }
  if (v131) {
    uint64_t result = sub_100020640();
  }
  if (v132) {
    uint64_t result = sub_100020640();
  }
  if (v133) {
    uint64_t result = sub_100020640();
  }
  if (v146) {
    uint64_t result = sub_100020640();
  }
  if (v156) {
    uint64_t result = sub_100020640();
  }
  if (v134) {
    uint64_t result = sub_10003C3FC((uint64_t)v33 + v34[22], (uint64_t *)&unk_10030FD70);
  }
  if (v135) {
    uint64_t result = sub_100020640();
  }
  if (v136) {
    uint64_t result = sub_100020640();
  }
  if (v137) {
    uint64_t result = sub_10003C3FC((uint64_t)v33 + v34[26], (uint64_t *)&unk_10030FD70);
  }
  if (v138) {
    uint64_t result = sub_100020640();
  }
  if (v139) {
    uint64_t result = sub_100020640();
  }
  if (v140) {
    uint64_t result = sub_100020640();
  }
  if (v141) {
    uint64_t result = sub_100020640();
  }
  if (v142) {
    uint64_t result = sub_100020640();
  }
  if (v143) {
    uint64_t result = sub_100020640();
  }
  if (v144) {
    uint64_t result = sub_100020640();
  }
  if (v145) {
    uint64_t result = sub_100020640();
  }
  if (v149) {
    uint64_t result = sub_100020640();
  }
  if (v148) {
    uint64_t result = sub_100020640();
  }
  if (v147) {
    return sub_100020640();
  }
  return result;
}

uint64_t sub_10015869C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100157788(a1, a2);
}

uint64_t sub_1001586B4(void *a1)
{
  return sub_1001571F8(a1);
}

unint64_t sub_1001586CC()
{
  unint64_t result = qword_100313870;
  if (!qword_100313870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313870);
  }
  return result;
}

unint64_t sub_100158718()
{
  unint64_t result = qword_100313878;
  if (!qword_100313878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313878);
  }
  return result;
}

unint64_t sub_100158764()
{
  unint64_t result = qword_100313880;
  if (!qword_100313880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313880);
  }
  return result;
}

uint64_t sub_1001587B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CheddarTransaction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100158814(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CheddarTransaction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100158870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001588B8()
{
  unint64_t result = qword_100313890;
  if (!qword_100313890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313890);
  }
  return result;
}

unint64_t sub_100158904()
{
  unint64_t result = qword_100313898;
  if (!qword_100313898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313898);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CheddarTransaction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDA)
  {
    if (a2 + 38 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 38) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 39;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x27;
  int v5 = v6 - 39;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CheddarTransaction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 38 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 38) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD9)
  {
    unsigned int v6 = ((a2 - 218) >> 8) + 1;
    *unint64_t result = a2 + 38;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100158AA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 38;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CheddarTransaction.CodingKeys()
{
  return &type metadata for CheddarTransaction.CodingKeys;
}

unsigned char *sub_100158ADC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100158BA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for CheddarTransaction.OfferPaymentMode()
{
}

unsigned char *sub_100158BDC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100158CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for CheddarTransaction.OfferType()
{
}

void type metadata accessor for CheddarTransaction.Reason()
{
}

unsigned char *sub_100158CEC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100158DB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CheddarTransaction.OwnershipType()
{
}

unint64_t sub_100158DF0()
{
  unint64_t result = qword_1003138A0;
  if (!qword_1003138A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138A0);
  }
  return result;
}

unint64_t sub_100158E40()
{
  unint64_t result = qword_1003138A8;
  if (!qword_1003138A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138A8);
  }
  return result;
}

unint64_t sub_100158E90()
{
  unint64_t result = qword_1003138B0;
  if (!qword_1003138B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138B0);
  }
  return result;
}

unint64_t sub_100158EE0()
{
  unint64_t result = qword_1003138B8;
  if (!qword_1003138B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138B8);
  }
  return result;
}

unint64_t sub_100158F30()
{
  unint64_t result = qword_1003138C0;
  if (!qword_1003138C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138C0);
  }
  return result;
}

unint64_t sub_100158F80()
{
  unint64_t result = qword_1003138C8;
  if (!qword_1003138C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138C8);
  }
  return result;
}

unint64_t sub_100158FD0()
{
  unint64_t result = qword_1003138D0;
  if (!qword_1003138D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138D0);
  }
  return result;
}

unint64_t sub_10015901C()
{
  unint64_t result = qword_1003138D8;
  if (!qword_1003138D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138D8);
  }
  return result;
}

unint64_t sub_100159068()
{
  unint64_t result = qword_1003138E0;
  if (!qword_1003138E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138E0);
  }
  return result;
}

unint64_t sub_1001590B4()
{
  unint64_t result = qword_1003138E8;
  if (!qword_1003138E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138E8);
  }
  return result;
}

unint64_t sub_100159100()
{
  unint64_t result = qword_1003138F0;
  if (!qword_1003138F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138F0);
  }
  return result;
}

uint64_t sub_10015914C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_10024F8D0();
}

uint64_t sub_100159170()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_100159184@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_10024F940();
}

uint64_t sub_1001591A8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_10024F7C0();
}

uint64_t sub_1001591C8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_10024F830();
}

uint64_t sub_1001591E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = (void *)(v3 + a3);
  *unsigned int v4 = result;
  v4[1] = a2;
  return result;
}

void sub_1001591F4(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t sub_100159200@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return v1 - 65;
}

uint64_t sub_100159214()
{
  return sub_10024F980();
}

void sub_100159238(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
}

uint64_t sub_100159250()
{
  return sub_10024F800();
}

uint64_t sub_100159274()
{
  return v0;
}

uint64_t sub_10015928C()
{
  return sub_10024F910();
}

uint64_t sub_1001592B0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = (void *)(v3 + a3);
  *unsigned int v4 = result;
  v4[1] = a2;
  return result;
}

uint64_t sub_1001592C0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_10024F910();
}

uint64_t sub_1001592EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = (void *)(v3 + a3);
  *unsigned int v4 = result;
  v4[1] = a2;
  return result;
}

uint64_t sub_1001592F8@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

void sub_100159314(uint64_t a1@<X8>)
{
  *(unsigned char *)(v2 - 65) = *(unsigned char *)(v1 + a1);
}

uint64_t sub_100159320@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_10024F7C0();
}

uint64_t sub_10015933C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + a2) = 4;
  unsigned int v4 = (void *)(v2 + *(int *)(v3 + 112));
  *unsigned int v4 = result;
  v4[1] = 0;
  return result;
}

uint64_t sub_100159360()
{
  return sub_10024F870();
}

uint64_t sub_100159384()
{
  return sub_10024F980();
}

void sub_1001593A8(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_1001593B4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return v1 - 65;
}

void sub_1001593C8(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
}

uint64_t sub_1001593FC()
{
  return *(void *)(v0 - 104);
}

unint64_t sub_100159414()
{
  unint64_t result = qword_1003138F8;
  if (!qword_1003138F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003138F8);
  }
  return result;
}

uint64_t sub_100159460(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7, unint64_t a8, uint64_t *a9)
{
  uint64_t v12 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    if (!v13)
    {
      a6 = _swiftEmptyArrayStorage;
LABEL_29:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_10006B3E8(a7, a8);
      return (uint64_t)a6;
    }
    if ((uint64_t)a6 > (uint64_t)(a5 >> 1)) {
      break;
    }
    if ((uint64_t)a6 < a4) {
      goto LABEL_37;
    }
    uint64_t v27 = a6;
    unint64_t v28 = v12 & 0xC000000000000001;
    a6 = _swiftEmptyArrayStorage;
    uint64_t v14 = 4;
    uint64_t v26 = v12;
    while (1)
    {
      a4 = v14 - 4;
      if (v28)
      {
        uint64_t v12 = sub_10024F380();
      }
      else
      {
        uint64_t v12 = *(void *)(v12 + 8 * v14);
        swift_retain();
      }
      uint64_t v15 = v14 - 3;
      if (__OFADD__(a4, 1)) {
        break;
      }
      uint64_t v16 = *a9;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      a4 = sub_10015A254(a2, a3, v27, a5, a7, a8, v16);
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a4 + 16);
      uint64_t v17 = a6[2];
      if (__OFADD__(v17, v12)) {
        goto LABEL_31;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v12 > a6[3] >> 1)
      {
        sub_10003525C();
        a6 = v18;
      }
      if (*(void *)(a4 + 16))
      {
        uint64_t v19 = a6[2];
        if ((a6[3] >> 1) - v19 < v12) {
          goto LABEL_33;
        }
        unint64_t v20 = (unint64_t)&a6[6 * v19 + 4];
        if (a4 + 32 < v20 + 48 * v12 && v20 < a4 + 32 + 48 * v12) {
          goto LABEL_38;
        }
        sub_100019524(&qword_10030A450);
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v22 = a6[2];
          BOOL v23 = __OFADD__(v22, v12);
          uint64_t v24 = v22 + v12;
          if (v23) {
            goto LABEL_34;
          }
          a6[2] = v24;
        }
      }
      else if (v12)
      {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      ++v14;
      uint64_t v12 = v26;
      if (v15 == v13) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10024F6F0();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_10024F730();
  __break(1u);
  return result;
}

void sub_10015973C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_100019524(&qword_100313A28);
  __chkstk_darwin(v6 - 8, v7);
  sub_100051C7C();
  sub_10024DB50();
  sub_100094C34();
  uint64_t v9 = v8;
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12, v15);
  uint64_t v17 = &v44[-v16];
  uint64_t v18 = a1[4];
  swift_bridgeObjectRetain();
  sub_10024DB40();
  swift_bridgeObjectRelease();
  if (sub_10001FA0C(v2, 1, v3) == 1)
  {
    sub_100051BB4(v2, &qword_100313A28);
    sub_1000CB5C8(0x6C727520646142, 0xE700000000000000, 6, (uint64_t)&aBlock);
    int v19 = (int)v56;
    HTTPVersion.init(major:minor:)(1, 1);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 0;
    *(void *)(v20 + 24) = 0;
    uint64_t v21 = sub_10015C454(v20, 21);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32))(v17, v2, v3);
    aBlocuint64_t k = sub_10024DB30();
    uint64_t v53 = v23;
    uint64_t v50 = 47;
    unint64_t v51 = 0xE100000000000000;
    sub_10001DAC0();
    uint64_t v24 = sub_10024F130();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1000D8730(v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v14, v17, v3);
    if (!v27)
    {
      uint64_t v25 = sub_10024DB30();
      unint64_t v27 = v28;
    }
    uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    uint64_t v29 = v9 + 8;
    uint64_t v48 = v30;
    uint64_t v49 = v17;
    v30(v14, v3);
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10024E1F0();
    sub_10001B0E8(v31, (uint64_t)qword_10034C0E0);
    sub_100065878(a1);
    swift_bridgeObjectRetain();
    sub_100065878(a1);
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_10024E1D0();
    os_log_type_t v33 = sub_10024EE00();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      int v45 = v34;
      uint64_t v36 = v35;
      uint64_t v46 = swift_slowAlloc();
      aBlocuint64_t k = v46;
      *(_DWORD *)uint64_t v36 = 136446466;
      unint64_t v37 = HTTPMethod.rawValue.getter(*(void *)(v18 + 16), *(void *)(v18 + 24));
      uint64_t v50 = sub_1000F3F3C(v37, v38, &aBlock);
      uint64_t v47 = v29;
      sub_10024F100();
      swift_bridgeObjectRelease();
      sub_1000457A8(a1);
      sub_1000457A8(a1);
      *(_WORD *)(v36 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1000F3F3C(v25, v27, &aBlock);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v45, "Request received: Method: %{public}s Endpoint: /%{public}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000457A8(a1);
      sub_1000457A8(a1);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v39 = v49;
    uint64_t v40 = (void *)swift_allocObject();
    _OWORD v40[2] = v25;
    v40[3] = v27;
    memcpy(v40 + 4, a1, 0x68uLL);
    sub_100065878(a1);
    NSString v41 = sub_10024E6A0();
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_10015B0B4;
    *(void *)(v42 + 24) = v40;
    uint64_t v56 = sub_1000C0A80;
    uint64_t v57 = v42;
    aBlocuint64_t k = (uint64_t)_NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = sub_10015AFA8;
    char v55 = &unk_1002E9328;
    uint64_t v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v43);
    swift_release();

    if (qword_100308D70 != -1) {
      swift_once();
    }
    swift_retain();
    sub_100159DF8((uint64_t)a1, (uint64_t)&aBlock);
    swift_release();
    v48(v39, v3);
    int v19 = v58;
    uint64_t v21 = aBlock;
    char v22 = (char)v54;
  }
  sub_10015C440(v21, v22);
  *(_DWORD *)(a2 + 56) = v19;
  sub_10015C468();
}

uint64_t sub_100159D6C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3;
  sub_100019524(&qword_10030A3E0);
  sub_10015B110();
  *(void *)(v3 + 40) = sub_10024E510();
  type metadata accessor for Router.Node();
  *(void *)(v3 + 48) = sub_10024E510();
  *(void *)(v3 + 56) = &_swiftEmptyArrayStorage;
  return v3;
}

void sub_100159DF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v5 - 8, v6);
  sub_100051C7C();
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_10024DD90();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_10024DDC0();
  uint64_t v35 = v8;
  char v34 = v9;
  if (sub_10001FA0C(v2, 1, v10) == 1)
  {
    sub_100051BB4(v2, &qword_100309778);
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v11 = (void *)sub_10024DD10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v2, v10);
  }
  unint64_t v12 = (2 * v11[2]) | 1;
  uint64_t v13 = *(void *)(v7 + 16);
  unint64_t v14 = *(void *)(v7 + 24);
  sub_10006B3D4(v13, v14);
  uint64_t v15 = sub_10024E510();
  uint64_t v16 = sub_10015A254(v11, (uint64_t)(v11 + 4), 0, v12, v13, v14, v15);
  swift_bridgeObjectRelease();
  sub_10006B3E8(v13, v14);
  swift_bridgeObjectRelease();
  sub_10009A24C((uint64_t)v16, &v44);
  swift_bridgeObjectRelease();
  if (*((void *)&v45 + 1))
  {
    uint64_t v33 = v47;
    sub_10002F754(&v44, (uint64_t)v37);
    uint64_t v32 = v38;
    uint64_t v31 = v39;
    sub_10001C2A8(v37, v38);
    uint64_t v17 = *(void *)a1;
    uint64_t v29 = *(void *)a1;
    unint64_t v28 = *(void *)(a1 + 8);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 72);
    uint64_t v30 = *(void *)(a1 + 64);
    uint64_t v20 = *(void *)(a1 + 80);
    int v21 = *(_DWORD *)(a1 + 88);
    char v22 = *(unsigned char *)(a1 + 94);
    __int16 v23 = *(_WORD *)(a1 + 92);
    uint64_t v43 = *(void *)(a1 + 96);
    long long v36 = *(_OWORD *)(a1 + 16);
    sub_100065878((uint64_t *)a1);
    sub_10005D0C8((uint64_t)&v43);
    *(void *)&long long v44 = v17;
    *((void *)&v44 + 1) = v28;
    long long v45 = v36;
    uint64_t v46 = v7;
    uint64_t v47 = v35;
    char v48 = v34;
    uint64_t v49 = v18;
    uint64_t v50 = v30;
    uint64_t v51 = v19;
    uint64_t v52 = v20;
    char v55 = v22;
    __int16 v54 = v23;
    int v53 = v21;
    uint64_t v56 = v33;
    (*(void (**)(uint64_t *__return_ptr, long long *, uint64_t))(v31 + 24))(&v40, &v44, v32);
    sub_100045854(v29, v28);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    sub_100045868(v18, v30, v19);
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)v37);
    int v24 = v42;
    uint64_t v25 = v40;
    char v26 = v41;
  }
  else
  {
    sub_100051BB4((uint64_t)&v44, &qword_100313A48);
    sub_1000CB5C8(0x6E756F6620746F4ELL, 0xE900000000000064, 6, (uint64_t)&v44);
    int v24 = v46;
    HTTPVersion.init(major:minor:)(1, 1);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0;
    uint64_t v25 = sub_10015C454(v27, 25);
  }
  sub_10015C440(v25, v26);
  sub_10015C468();
  *(_DWORD *)(a2 + 56) = v24;
}

void *sub_10015A254(void *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v8 = a4 >> 1;
  if (a4 >> 1 == a3) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v11 = a6;
  uint64_t v12 = a5;
  uint64_t v15 = a2;
  uint64_t v49 = a7;
  uint64_t v42 = (uint64_t)result;
  if (*(unsigned char *)(v7 + 32) == 1)
  {
    if (v8 <= a3)
    {
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v16 = *(void *)(v7 + 24);
    uint64_t v40 = *(void *)(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v48[0] = a7;
    uint64_t v18 = sub_10015C434();
    unint64_t v11 = a6;
    uint64_t v12 = a5;
    uint64_t v15 = a2;
    sub_10020CDA8(v18, v19, v40, v16, v20);
    uint64_t v49 = a7;
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  if (__OFSUB__(v8, a3))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v8 - a3 == 1)
  {
    swift_beginAccess();
    uint64_t v21 = *(void *)(v7 + 40);
    sub_10006B3D4(v12, v11);
    swift_bridgeObjectRetain();
    sub_1001615F8(v21, (uint64_t)&v45);
    swift_bridgeObjectRelease();
    sub_10006B3E8(v12, v11);
    if (!v46)
    {
      sub_100051BB4((uint64_t)&v45, &qword_1003195B0);
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    sub_10002F754(&v45, (uint64_t)v48);
    sub_100019524(&qword_10030A448);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100255FB0;
    sub_100027788((uint64_t)v48, v9 + 32);
    *(void *)(v9 + 72) = a7;
    swift_bridgeObjectRetain();
    sub_10001C2EC((uint64_t)v48);
LABEL_22:
    swift_bridgeObjectRelease();
    return (void *)v9;
  }
  uint64_t v22 = a3 + 1;
  if (__OFADD__(a3, 1)) {
    goto LABEL_26;
  }
  if (v22 >= a3 && v22 < v8)
  {
    unint64_t v41 = v11;
    uint64_t v24 = *(void *)(v15 + 16 * v22);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100161610(v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
      uint64_t v26 = v42;
      uint64_t v27 = sub_10015B1EC(a3 + 1, v8, v42, a2, a3, a4);
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      swift_bridgeObjectRetain();
      uint64_t v34 = v29;
      uint64_t v35 = v31;
      uint64_t v36 = a5;
      unint64_t v11 = v41;
      unint64_t v37 = (void *)sub_10015A254(v27, v34, v35, v33, a5, v41, a7);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = (void *)(a3 + 1);
      swift_release();
    }
    else
    {
      unint64_t v37 = _swiftEmptyArrayStorage;
      uint64_t v36 = a5;
      uint64_t v38 = (void *)(a3 + 1);
      uint64_t v26 = v42;
    }
    swift_beginAccess();
    sub_10006B3D4(v36, v11);
    swift_unknownObjectRetain();
    unint64_t v39 = swift_bridgeObjectRetain();
    sub_100159460(v39, v26, a2, a3, a4, v38, v36, v11, &v49);
    swift_bridgeObjectRelease();
    uint64_t v47 = v37;
    sub_1001D68F4();
    uint64_t v9 = (uint64_t)v37;
    goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10015A5F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v11 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024DDC0();
  sub_100094C34();
  uint64_t v16 = v15;
  uint64_t result = __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v22 = a2;
    goto LABEL_17;
  }
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  sub_10001C2A8(a1, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  sub_10024DD90();
  swift_bridgeObjectRelease();
  if (sub_10001FA0C((uint64_t)v14, 1, v5) == 1)
  {
    sub_100051BB4((uint64_t)v14, &qword_100309778);
    sub_10001C2A8(a1, a1[3]);
    uint64_t v25 = sub_10015C434();
    uint64_t v27 = v26(v25);
    uint64_t v29 = v28;
    sub_10015B19C();
    swift_allocError();
    *(void *)uint64_t v30 = v27;
    *(void *)(v30 + 8) = v29;
    *(void *)(v30 + 16) = 0;
    *(void *)(v30 + 24) = 0;
    *(unsigned char *)(v30 + 32) = 0;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v5);
  uint64_t v31 = (void *)sub_10024DD10();
  if (v31[2])
  {
    uint64_t v33 = v31[4];
    uint64_t v32 = v31[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v33 == 47 && v32 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_15:
      a4 = 0;
      uint64_t v37 = sub_10024DD10();
      a3 = v37 + 32;
      a5 = (2 * *(void *)(v37 + 16)) | 1;
      goto LABEL_16;
    }
    char v35 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = (void *)sub_10024DD10();
  uint64_t v91 = &off_1002D5808;
  id v92 = &unk_1002D5828;
  uint64_t v93 = 0;
  uint64_t v94 = 3;
  sub_10015B42C(v36);
  uint64_t v37 = (uint64_t)v91;
  a3 = (uint64_t)v92;
  a4 = v93;
  a5 = v94;
LABEL_16:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v5);
  uint64_t v22 = v37;
LABEL_17:
  if (a4 == a5 >> 1)
  {
    sub_10015B19C();
    swift_allocError();
    *(_OWORD *)uint64_t v38 = 0u;
    *(_OWORD *)(v38 + 16) = 0u;
    *(unsigned char *)(v38 + 32) = 2;
    swift_unknownObjectRetain();
LABEL_19:
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  uint64_t v39 = a5 >> 1;
  if (a4 >= (uint64_t)(a5 >> 1))
  {
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v90 = a3;
  uint64_t v40 = (uint64_t *)(a3 + 16 * a4);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  uint64_t v44 = *(void *)(v95 + 16);
  uint64_t v43 = *(void *)(v95 + 24);
  if (*v40 != v44 || v41 != v43)
  {
    uint64_t v89 = a2;
    uint64_t v46 = a4;
    unint64_t v47 = a5;
    char v48 = a1;
    uint64_t v49 = v22;
    uint64_t v50 = v39;
    uint64_t result = sub_10024FA60();
    uint64_t v39 = v50;
    uint64_t v22 = v49;
    a1 = v48;
    a5 = v47;
    a4 = v46;
    if ((result & 1) == 0 && (*(unsigned char *)(v95 + 32) & 1) == 0)
    {
      sub_10015B19C();
      swift_allocError();
      *(void *)uint64_t v77 = v44;
      *(void *)(v77 + 8) = v43;
      *(void *)(v77 + 16) = v42;
      *(void *)(v77 + 24) = v41;
      *(unsigned char *)(v77 + 32) = 1;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
  }
  if (__OFSUB__(v39, a4)) {
    goto LABEL_48;
  }
  if (v39 - a4 == 1)
  {
    uint64_t v51 = a1[4];
    sub_10001C2A8(a1, a1[3]);
    uint64_t v52 = *(uint64_t (**)(uint64_t))(v51 + 16);
    swift_unknownObjectRetain();
    uint64_t v53 = sub_10015C434();
    uint64_t v54 = v52(v53);
    unint64_t v56 = v55;
    sub_100027788((uint64_t)a1, (uint64_t)&v91);
    swift_beginAccess();
    sub_100205658((uint64_t)&v91, v54, v56);
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
  uint64_t v89 = v39;
  if (a4 + 1 < v39)
  {
    uint64_t v88 = a4 + 1;
    uint64_t v57 = (uint64_t *)(v90 + 16 * (a4 + 1));
    uint64_t v58 = *v57;
    unint64_t v59 = v57[1];
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_10009A148(v58, v59);
    uint64_t v62 = v61;
    swift_bridgeObjectRelease();
    if (v62)
    {
      if (v60 == 58 && v62 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v64 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0) {
          goto LABEL_38;
        }
      }
      uint64_t v71 = *v57;
      unint64_t v70 = v57[1];
      swift_bridgeObjectRetain();
      sub_10006BE74(1uLL, v71, v70);
      uint64_t v72 = sub_10024E740();
      uint64_t v74 = v73;
      swift_bridgeObjectRelease();
      type metadata accessor for Router.Node();
      swift_allocObject();
      sub_100159D6C(v72, v74, 1);
      uint64_t v75 = v95;
      swift_beginAccess();
      swift_retain();
      sub_10024EA70();
      sub_1000348E0(*(void *)((*(void *)(v75 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10));
      sub_10024EB10();
      sub_10024EAC0();
      swift_endAccess();
      sub_10015B1EC(v88, v89, v22, v90, a4, a5);
      uint64_t v76 = sub_10015C40C();
      sub_10015A5F4(v76);
      swift_unknownObjectRelease();
      swift_release();
      return swift_unknownObjectRelease();
    }
LABEL_38:
    uint64_t v87 = v22;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10015C434();
    uint64_t v66 = sub_100161610(v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v66)
    {
      uint64_t v67 = v88;
      uint64_t v68 = v89;
      uint64_t v69 = v87;
    }
    else
    {
      uint64_t v78 = *v57;
      uint64_t v79 = v57[1];
      type metadata accessor for Router.Node();
      swift_allocObject();
      swift_bridgeObjectRetain_n();
      uint64_t v80 = sub_10015C434();
      uint64_t v82 = sub_100159D6C(v80, v81, 0);
      swift_beginAccess();
      sub_10020C9B0(v82, v78, v79);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v83 = *v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_100161610(v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v69 = v87;
      if (!v84) {
        return swift_unknownObjectRelease();
      }
      uint64_t v67 = v88;
      uint64_t v68 = v89;
    }
    sub_10015B1EC(v67, v68, v69, v90, a4, a5);
    uint64_t v85 = sub_10015C40C();
    sub_10015A5F4(v85);
    swift_unknownObjectRelease();
    swift_release();
    return swift_unknownObjectRelease();
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_10015AD90()
{
  type metadata accessor for Router.Node();
  swift_allocObject();
  uint64_t result = sub_100159D6C(47, 0xE100000000000000, 0);
  qword_10034C098 = result;
  return result;
}

uint64_t sub_10015ADD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10015AE10()
{
  sub_10015ADD8();
  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_10015AE44()
{
  sub_100019524(&qword_100313A38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100256170;
  *(void *)(inited + 32) = 0x746E696F70646E65;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = sub_10024E6A0();
  *(void *)(inited + 56) = 0x6973726556697061;
  *(void *)(inited + 64) = 0xEA00000000006E6FLL;
  v1._object = (void *)0x800000010027E0F0;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  HTTPHeaders.first(name:)(v1);
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v2;
  sub_10015B15C();
  return sub_10024E510();
}

Swift::Int sub_10015AF5C()
{
  return sub_1001D3840(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_10015AF64(uint64_t a1)
{
  return sub_1000D293C(a1, *(void *)v1, *(void *)(v1 + 8));
}

Swift::Int sub_10015AF6C(uint64_t a1)
{
  return sub_1000D3DC4(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t type metadata accessor for Router.Node()
{
  return self;
}

ValueMetadata *type metadata accessor for Router()
{
  return &type metadata for Router;
}

Class sub_10015AFA8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10015B15C();
    v4.super.Class isa = sub_10024E4E0().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }
  return v4.super.isa;
}

uint64_t sub_10015B034()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_10015B0B4()
{
  return sub_10015AE44();
}

uint64_t sub_10015B0C0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015B0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10015B108()
{
  return swift_release();
}

unint64_t sub_10015B110()
{
  unint64_t result = qword_1003195F0;
  if (!qword_1003195F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003195F0);
  }
  return result;
}

unint64_t sub_10015B15C()
{
  unint64_t result = qword_100313A30;
  if (!qword_100313A30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100313A30);
  }
  return result;
}

unint64_t sub_10015B19C()
{
  unint64_t result = qword_100313A40;
  if (!qword_100313A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313A40);
  }
  return result;
}

uint64_t sub_10015B1EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10015B268(uint64_t result)
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(v1 + 24);
  NSDictionary v4 = *(void **)v1;
  int64_t v5 = v3 >> 1;
  if ((v3 & 1) == 0) {
    goto LABEL_8;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull();
  *(void *)uint64_t v1 = v4;
  if ((result & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = *(void *)(v1 + 8);
  sub_10024FAE0();
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = &_swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)(v8 + 16 * v6 + 16 * v7) != &v9[2 * v10 + 4])
  {
    unint64_t result = swift_release();
    goto LABEL_23;
  }
  unint64_t v17 = v9[3];
  unint64_t result = swift_release();
  uint64_t v18 = (v17 >> 1) - v10;
  BOOL v19 = __OFADD__(v7, v18);
  v7 += v18;
  if (!v19)
  {
LABEL_23:
    if (v7 >= v2) {
      goto LABEL_21;
    }
LABEL_8:
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v12 = v5 - v11;
    if (__OFSUB__(v5, v11))
    {
      __break(1u);
    }
    else
    {
      uint64_t v13 = *(void *)(v1 + 8);
      if (v12 <= v2) {
        uint64_t v14 = v2;
      }
      else {
        uint64_t v14 = v5 - v11;
      }
      if (v14)
      {
        sub_100019524(&qword_1003090E8);
        NSDictionary v4 = (void *)swift_allocObject();
        unint64_t result = j__malloc_size(v4);
        v4[2] = v12;
        v4[3] = 2 * ((result - 32) / 16);
      }
      else
      {
        NSDictionary v4 = &_swiftEmptyArrayStorage;
      }
      if (v5 >= v11)
      {
        unint64_t result = sub_1001DD06C(v13 + 16 * v11, v5 - v11, v4 + 4);
        if (!__OFSUB__(0, v11))
        {
          uint64_t v15 = v4[2];
          uint64_t v16 = v11 + v15;
          if (!__OFADD__(v11, v15))
          {
            if (v16 >= v11)
            {
              unint64_t result = swift_unknownObjectRelease();
              if ((v16 & 0x8000000000000000) == 0)
              {
                *(void *)(v1 + 8) = &v4[-2 * v11 + 4];
                *(void *)(v1 + 16) = v11;
                *(void *)(v1 + 24) = (2 * v16) | 1;
LABEL_21:
                *(void *)uint64_t v1 = v4;
                return result;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_10015B42C(void *a1)
{
  uint64_t v3 = a1[2];
  unint64_t result = (void *)sub_10015B824(v3);
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = v1[1] + 16 * v6 + 16 * v7;
  if ((v5 & 1) == 0) {
    goto LABEL_7;
  }
  sub_10024FAE0();
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = &_swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)v8 != &v9[2 * v10 + 4])
  {
    unint64_t result = (void *)swift_release();
LABEL_7:
    uint64_t v11 = v7;
    goto LABEL_9;
  }
  unint64_t v12 = v9[3];
  unint64_t result = (void *)swift_release();
  uint64_t v13 = (v12 >> 1) - v10;
  BOOL v14 = __OFADD__(v7, v13);
  uint64_t v11 = v7 + v13;
  if (v14)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_9:
  uint64_t v15 = v11 - v7;
  if (__OFSUB__(v11, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v16 = a1[2];
  if (v16)
  {
    if (v15 >= v3)
    {
      sub_1001DD06C(a1 + 4, v3, v8);
      if (!v3) {
        goto LABEL_16;
      }
      unint64_t result = (void *)(v7 + v3);
      if (!__OFADD__(v7, v3))
      {
        sub_10015B92C(result);
        goto LABEL_16;
      }
LABEL_28:
      __break(1u);
      return result;
    }
    goto LABEL_26;
  }
  if (v3)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_16:
  if (v3 == v15)
  {
    return sub_10015B9E4(a1, v16);
  }
  else
  {
    return (void *)swift_bridgeObjectRelease();
  }
}

uint64_t sub_10015B59C(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(result + 16);
  BOOL v3 = __OFADD__(a2, v2);
  uint64_t v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t sub_10015B5E4(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  unint64_t v6 = (unint64_t)v4[3] >> 1;
  uint64_t v7 = (void *)(v6 - v5);
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)result;
  uint64_t v10 = *(void *)(*(void *)result + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v13 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  BOOL v14 = (char *)v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  BOOL v11 = __OFSUB__(v14, v13);
  uint64_t v15 = &v14[-v13];
  if (v11)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v30 = v15;
  unint64_t v17 = (char *)(v9 + 32);
  uint64_t v18 = v9 + 32 + 16 * a2;
  uint64_t v32 = (char *)(v18 + 16 * a3);
  unint64_t result = sub_10015BF30(v7);
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v29 = v4[2];
    uint64_t v28 = a4;
    uint64_t v20 = (char *)(v4[1] + 16 * v29);
    swift_arrayDestroy();
    sub_100037C6C(v20, a2, v17);
    swift_arrayDestroy();
    v28(v18, a3);
    sub_100037C6C(&v20[16 * a2 + 16 * (void)v30], v13, v32);
    uint64_t v21 = v29;
    swift_arrayDestroy();
    *(void *)(v19 + 16) = 0;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    unint64_t result = sub_10015B59C(v9, v21);
    *uint64_t v4 = result;
    v4[1] = v25;
    v4[2] = v26;
    v4[3] = v27;
    return result;
  }
  uint64_t v21 = v4[2];
  uint64_t v22 = v21 + a2;
  if (__OFADD__(v21, a2)) {
    goto LABEL_21;
  }
  if (v22 < v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v22, v21))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  unint64_t result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[16 * a2], a3);
  int64_t v23 = (int64_t)&v30[v22];
  if (__OFADD__(v22, v30))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v24 = (unint64_t)v4[3] >> 1;
  if (v24 < v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v24, v23))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10015B824(uint64_t result)
{
  uint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  uint64_t v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v5 = result;
  if ((v2 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v6 = v1[1];
  sub_10024FAE0();
  swift_unknownObjectRetain();
  uint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    uint64_t v7 = &_swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7[2];
  if ((void *)(v6 + 16 * v3 + 16 * v4) != &v7[2 * v8 + 4])
  {
    swift_release();
LABEL_7:
    uint64_t v9 = v4;
    goto LABEL_9;
  }
  unint64_t v10 = v7[3];
  unint64_t result = swift_release();
  uint64_t v11 = (v10 >> 1) - v8;
  BOOL v12 = __OFADD__(v4, v11);
  uint64_t v9 = v4 + v11;
  if (v12)
  {
LABEL_20:
    __break(1u);
    return result;
  }
LABEL_9:
  unint64_t result = v4 + v5;
  if (__OFADD__(v4, v5))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 < result)
  {
    if (v9 + 0x4000000000000000 >= 0)
    {
      uint64_t v13 = 2 * v9;
      if (v13 > result) {
        unint64_t result = v13;
      }
      goto LABEL_14;
    }
    goto LABEL_19;
  }
LABEL_14:
  return sub_10015B268(result);
}

void *sub_10015B92C(void *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = (char *)result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  sub_10024FAE0();
  swift_unknownObjectRetain();
  unint64_t result = (void *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    unint64_t result = &_swiftEmptyArrayStorage;
  }
  uint64_t v8 = result[2];
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = &v7[v8];
  if (v5) {
    goto LABEL_13;
  }
  result[2] = v9;
  unint64_t result = (void *)swift_release();
  unint64_t v10 = &v7[v4];
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * (void)v10);
  return result;
}

void *sub_10015B9E4(void *result, unint64_t a2)
{
  uint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  uint64_t v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4)) {
    goto LABEL_48;
  }
  unint64_t v6 = result[2];
  if (v6 == a2)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  if (v6 <= a2) {
    goto LABEL_49;
  }
  uint64_t v7 = (char *)&result[2 * a2];
  uint64_t v37 = result;
  unint64_t v38 = a2 + 1;
  uint64_t v8 = *((void *)v7 + 4);
  unint64_t v9 = result[2];
  uint64_t v10 = *((void *)v7 + 5);
  unint64_t result = (void *)swift_bridgeObjectRetain();
  unint64_t v32 = 1 - v9;
  unint64_t v33 = v9;
  while (!__OFADD__(v5, 1))
  {
    uint64_t v39 = sub_10015BD14((void *)v5, v5 + 1, *v2, v2[1], v4, v3);
    uint64_t v11 = (void (*)(uint64_t, uint64_t))sub_10015BF14();
    sub_10015B5E4((uint64_t)&v39, v5, 0, v11);
    swift_release();
    unint64_t result = (void *)swift_release();
    uint64_t v4 = v2[2];
    unint64_t v12 = v2[3];
    uint64_t v13 = (v12 >> 1) - v4;
    if (__OFSUB__(v12 >> 1, v4)) {
      goto LABEL_41;
    }
    unint64_t v35 = v12 >> 1;
    unint64_t v36 = v2[3];
    uint64_t v14 = v2[1];
    if ((v12 & 1) == 0) {
      goto LABEL_12;
    }
    sub_10024FAE0();
    swift_unknownObjectRetain();
    uint64_t v15 = (void *)swift_dynamicCastClass();
    if (!v15)
    {
      swift_unknownObjectRelease();
      uint64_t v15 = &_swiftEmptyArrayStorage;
    }
    uint64_t v16 = v15[2];
    if ((void *)(v14 + 16 * v4 + 16 * v13) != &v15[2 * v16 + 4])
    {
      unint64_t result = (void *)swift_release();
LABEL_12:
      uint64_t v17 = v13;
      goto LABEL_14;
    }
    unint64_t v18 = v15[3];
    unint64_t result = (void *)swift_release();
    uint64_t v19 = (v18 >> 1) - v16;
    uint64_t v17 = v13 + v19;
    if (__OFADD__(v13, v19)) {
      goto LABEL_46;
    }
LABEL_14:
    if (v5 < v17)
    {
      uint64_t v20 = (void *)(v14 + 16 * v4 + 16 * v5);
      *uint64_t v20 = v8;
      v20[1] = v10;
      if (v38 == v33)
      {
        uint64_t v8 = 0;
        uint64_t v10 = 0;
        ++v5;
        unint64_t v38 = v33;
      }
      else
      {
        if ((v38 & 0x8000000000000000) != 0) {
          goto LABEL_47;
        }
        uint64_t v34 = v4;
        if (v38 >= v37[2])
        {
LABEL_39:
          __break(1u);
          break;
        }
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        int64_t v23 = &v37[2 * v38];
        uint64_t v24 = v14 + 16 * v5 + 16 * v34;
        while (1)
        {
          uint64_t v8 = v23[v21 + 4];
          uint64_t v25 = v23[v21 + 5];
          if (v5 + v22 + 1 >= v17)
          {
            v38 += v22 + 1;
            uint64_t v10 = v23[v21 + 5];
            goto LABEL_26;
          }
          uint64_t v26 = v24 + v21 * 8;
          *(void *)(v26 + 16) = v8;
          *(void *)(v26 + 24) = v25;
          if (!(v32 + v38 + v22)) {
            break;
          }
          unint64_t result = (void *)swift_bridgeObjectRetain();
          ++v22;
          v21 += 2;
          if (v38 + v22 >= v37[2]) {
            goto LABEL_39;
          }
        }
        uint64_t v8 = 0;
        uint64_t v10 = 0;
        uint64_t v17 = v5 + v22 + 2;
        unint64_t v38 = v33;
LABEL_26:
        unint64_t result = (void *)swift_bridgeObjectRetain();
        uint64_t v5 = v17;
        uint64_t v4 = v34;
      }
    }
    uint64_t v27 = v5 - v13;
    unint64_t v3 = v36;
    if (__OFSUB__(v5, v13)) {
      goto LABEL_42;
    }
    if (v27)
    {
      sub_10024FAE0();
      swift_unknownObjectRetain();
      unint64_t result = (void *)swift_dynamicCastClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        unint64_t result = &_swiftEmptyArrayStorage;
      }
      uint64_t v28 = result[2];
      BOOL v29 = __OFADD__(v28, v27);
      uint64_t v30 = v28 + v27;
      if (v29) {
        goto LABEL_43;
      }
      result[2] = v30;
      unint64_t result = (void *)swift_release();
      unint64_t v31 = v35 + v27;
      if (__OFADD__(v35, v27)) {
        goto LABEL_44;
      }
      if ((v31 & 0x8000000000000000) != 0) {
        goto LABEL_45;
      }
      unint64_t v3 = v36 & 1 | (2 * v31);
      v2[3] = v3;
    }
    if (!v10) {
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

void *sub_10015BD14(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = a2;
  uint64_t v6 = (uint64_t)result;
  if ((a6 & 1) == 0) {
    goto LABEL_32;
  }
  sub_10024FAE0();
  swift_unknownObjectRetain();
  uint64_t v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = &_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  uint64_t v13 = a4 + 16 * a5 + 16 * v8;
  if ((void *)v13 == &v11[2 * v12 + 4])
  {
    unint64_t v15 = v11[3];
    unint64_t result = (void *)swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = (void *)swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = &_swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    if ((void *)v13 == &v17[2 * v18 + 4])
    {
      unint64_t v20 = v17[3];
      unint64_t result = (void *)swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      unint64_t result = (void *)swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = &_swiftEmptyArrayStorage;
  }
  uint64_t v19 = v17[2];
  if ((void *)v13 == &v17[2 * v19 + 4])
  {
    unint64_t v23 = v17[3];
    unint64_t result = (void *)swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = v25;
  }
  if (!v26) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100019524(&qword_1003090E8);
  uint64_t v27 = (void *)swift_allocObject();
  size_t v28 = j__malloc_size(v27);
  void v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 16);
  return v27;
}

uint64_t (*sub_10015BF14())(void)
{
  return debugOnly(_:);
}

uint64_t sub_10015BF30(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_10024FAE0();
  swift_unknownObjectRetain();
  unint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    unint64_t v9 = &_swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)(v8 + 16 * v6 + 16 * v7) != &v9[2 * v10 + 4])
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = v9[3];
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < (uint64_t)a1) {
      return 0;
    }
    sub_10024FAE0();
    swift_unknownObjectRetain();
    a1 = (void *)swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = &_swiftEmptyArrayStorage;
    }
    uint64_t v16 = (v8 + 16 * v6 - (uint64_t)a1 - 32) / 16;
    uint64_t isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      uint64_t v4 = a1[2];
      if (isUniquelyReferenced_nonNull >= v4) {
        return (uint64_t)a1;
      }
LABEL_19:
      sub_10015C09C(isUniquelyReferenced_nonNull, v4, 0);
      return (uint64_t)a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015C09C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 16 * result;
  uint64_t result = swift_arrayDestroy();
  BOOL v9 = __OFSUB__(a3, v4);
  uint64_t v10 = a3 - v4;
  if (v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v10) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v7 + 16);
  if (__OFSUB__(v11, a2)) {
    goto LABEL_11;
  }
  uint64_t result = (uint64_t)sub_100037C6C((char *)(v7 + 32 + 16 * a2), v11 - a2, (char *)(v8 + 16 * a3));
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v12, v10);
  uint64_t v13 = v12 + v10;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v7 + 16) = v13;
LABEL_7:
  if (a3 > 0) {
LABEL_13:
  }
    __break(1u);
  return result;
}

uint64_t sub_10015C148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for Router.RouterError(uint64_t a1)
{
  return sub_10015C1BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_10015C1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Router.RouterError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10015C148(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for Router.RouterError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10015C148(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_10015C1BC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for Router.RouterError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_10015C1BC(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Router.RouterError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Router.RouterError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10015C3C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10015C3E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Router.RouterError()
{
  return &type metadata for Router.RouterError;
}

uint64_t sub_10015C40C()
{
  return v0;
}

uint64_t sub_10015C434()
{
  return v0;
}

uint64_t sub_10015C440@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = v2;
  *(unsigned char *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  *(void *)(v3 + 48) = v7;
  return result;
}

uint64_t sub_10015C454@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 32) = a2;
  *(_WORD *)(result + 40) = v2;
  *(_WORD *)(result + 42) = v3;
  return result;
}

void sub_10015C468()
{
  *(unsigned char *)(v0 + 62) = BYTE6(v1);
  *(_WORD *)(v0 + 60) = WORD2(v1);
}

uint64_t sub_10015C47C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_10015C484@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = debugOnly(_:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10015C4B0(unsigned __int8 *a1)
{
  return sub_1000FC760(*a1);
}

uint64_t sub_10015C4B8(char a1)
{
  return a1 & 0xC;
}

uint64_t sub_10015C4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10015C580(a1, a2, a3, a4, a5, (uint64_t (*)(_OWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))sub_10015C66C);
}

uint64_t sub_10015C520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10015C580(a1, a2, a3, a4, a5, (uint64_t (*)(_OWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))sub_10015C894);
}

uint64_t sub_10015C580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_OWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))
{
  memset(v8, 0, sizeof(v8));
  return a6(v8, &v9, a1, a4, a2, a3, a5, &v7);
}

uint64_t sub_10015C60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10015C580(a1, a2, a3, a4, a5, (uint64_t (*)(_OWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))sub_10015CABC);
}

uint64_t sub_10015C66C(kevent *a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, unsigned int a5, unsigned int a6, uint64_t a7, void *a8)
{
  if (!a1)
  {
    swift_release();
    __break(1u);
    goto LABEL_25;
  }
  int v10 = a4 ^ a3;
  if ((~v10 & 4) != 0)
  {
    uint64_t v12 = 0;
  }
  else
  {
    if ((~a4 & 4) != 0) {
      __int16 v11 = 2;
    }
    else {
      __int16 v11 = 1;
    }
    if ((a5 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    a1->ident = a5;
    a1->filter = -1;
    a1->flags = v11;
    a1->fflags = 0;
    a1->data = 0;
    a1->udata = (void *)a6;
    uint64_t v12 = 1;
  }
  if ((~v10 & 8) == 0)
  {
    if ((~a4 & 8) != 0) {
      __int16 v13 = 2;
    }
    else {
      __int16 v13 = 1;
    }
    if ((a5 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    a1[v12].ident = a5;
    uint64_t v14 = &a1[v12];
    v14->filter = -2;
    v14->flags = v13;
    v14->fflags = 0;
    v14->data = 0;
    v14->udata = (void *)a6;
    ++v12;
  }
  if ((~v10 & 2) != 0) {
    goto LABEL_21;
  }
  if ((~a4 & 2) != 0) {
    __int16 v15 = 2;
  }
  else {
    __int16 v15 = 1;
  }
  if ((a5 & 0x80000000) != 0)
  {
LABEL_25:
    swift_release();
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  a1[v12].ident = a5;
  uint64_t v16 = &a1[v12];
  v16->filter = -15;
  v16->flags = v15;
  v16->fflags = 1;
  v16->data = 0x7FFFFFFFFFFFFFFFLL;
  v16->udata = (void *)a6;
  ++v12;
LABEL_21:
  sub_10015CCE4(a1, v12);
  uint64_t result = swift_release();
  if (v8) {
    *a8 = v8;
  }
  return result;
}

uint64_t sub_10015C894(kevent *a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, unsigned int a5, unsigned int a6, uint64_t a7, void *a8)
{
  if (!a1)
  {
    swift_release();
    __break(1u);
    goto LABEL_25;
  }
  int v10 = a4 ^ a3;
  if ((~v10 & 4) != 0)
  {
    uint64_t v12 = 0;
  }
  else
  {
    if ((~a4 & 4) != 0) {
      __int16 v11 = 2;
    }
    else {
      __int16 v11 = 1;
    }
    if ((a5 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    a1->ident = a5;
    a1->filter = -1;
    a1->flags = v11;
    a1->fflags = 0;
    a1->data = 0;
    a1->udata = (void *)a6;
    uint64_t v12 = 1;
  }
  if ((~v10 & 8) == 0)
  {
    if ((~a4 & 8) != 0) {
      __int16 v13 = 2;
    }
    else {
      __int16 v13 = 1;
    }
    if ((a5 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    a1[v12].ident = a5;
    uint64_t v14 = &a1[v12];
    v14->filter = -2;
    v14->flags = v13;
    v14->fflags = 0;
    v14->data = 0;
    v14->udata = (void *)a6;
    ++v12;
  }
  if ((~v10 & 2) != 0) {
    goto LABEL_21;
  }
  if ((~a4 & 2) != 0) {
    __int16 v15 = 2;
  }
  else {
    __int16 v15 = 1;
  }
  if ((a5 & 0x80000000) != 0)
  {
LABEL_25:
    swift_release();
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  a1[v12].ident = a5;
  uint64_t v16 = &a1[v12];
  v16->filter = -15;
  v16->flags = v15;
  v16->fflags = 1;
  v16->data = 0x7FFFFFFFFFFFFFFFLL;
  v16->udata = (void *)a6;
  ++v12;
LABEL_21:
  sub_10015CCE4(a1, v12);
  uint64_t result = swift_release();
  if (v8) {
    *a8 = v8;
  }
  return result;
}

uint64_t sub_10015CABC(kevent *a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, unsigned int a5, unsigned int a6, uint64_t a7, void *a8)
{
  if (!a1)
  {
    swift_release();
    __break(1u);
    goto LABEL_25;
  }
  int v10 = a4 ^ a3;
  if ((~v10 & 4) != 0)
  {
    uint64_t v12 = 0;
  }
  else
  {
    if ((~a4 & 4) != 0) {
      __int16 v11 = 2;
    }
    else {
      __int16 v11 = 1;
    }
    if ((a5 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    a1->ident = a5;
    a1->filter = -1;
    a1->flags = v11;
    a1->fflags = 0;
    a1->data = 0;
    a1->udata = (void *)a6;
    uint64_t v12 = 1;
  }
  if ((~v10 & 8) == 0)
  {
    if ((~a4 & 8) != 0) {
      __int16 v13 = 2;
    }
    else {
      __int16 v13 = 1;
    }
    if ((a5 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    a1[v12].ident = a5;
    uint64_t v14 = &a1[v12];
    v14->filter = -2;
    v14->flags = v13;
    v14->fflags = 0;
    v14->data = 0;
    v14->udata = (void *)a6;
    ++v12;
  }
  if ((~v10 & 2) != 0) {
    goto LABEL_21;
  }
  if ((~a4 & 2) != 0) {
    __int16 v15 = 2;
  }
  else {
    __int16 v15 = 1;
  }
  if ((a5 & 0x80000000) != 0)
  {
LABEL_25:
    swift_release();
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  a1[v12].ident = a5;
  uint64_t v16 = &a1[v12];
  v16->filter = -15;
  v16->flags = v15;
  v16->fflags = 1;
  v16->data = 0x7FFFFFFFFFFFFFFFLL;
  v16->udata = (void *)a6;
  ++v12;
LABEL_21:
  sub_10015CCE4(a1, v12);
  uint64_t result = swift_release();
  if (v8) {
    *a8 = v8;
  }
  return result;
}

const kevent *sub_10015CCE4(const kevent *result, uint64_t a2)
{
  if (a2 < 1) {
    return result;
  }
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if ((unint64_t)a2 >> 31)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = (const kevent *)sub_1001B741C(*(_DWORD *)(v2 + 56), result, a2, 0, 0, 0);
  if (v3)
  {
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      if (v7 == 4)
      {
        swift_bridgeObjectRelease();
        return (const kevent *)swift_errorRelease();
      }
      sub_100028EB4();
      swift_allocError();
      *(void *)uint64_t v4 = v5;
      *(void *)(v4 + 8) = v6;
      *(_DWORD *)(v4 + 16) = v7;
      swift_willThrow();
    }
    return (const kevent *)swift_errorRelease();
  }
  return result;
}

void *NIOBSDSocket.OptionLevel.socket.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.socket;
}

void *NIOBSDSocket.Option.so_error.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_error;
}

void *NIOBSDSocket.AddressFamily.inet.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.inet;
}

void *NIOBSDSocket.AddressFamily.inet6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.inet6;
}

void *NIOBSDSocket.ProtocolFamily.unix.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.unix;
}

void *NIOBSDSocket.Option.so_reuseaddr.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_reuseaddr;
}

void *NIOBSDSocket.ProtocolFamily.inet.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.inet;
}

void *NIOBSDSocket.ProtocolFamily.inet6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.inet6;
}

void *NIOBSDSocket.AddressFamily.unix.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.unix;
}

uint64_t sub_10015CE6C(int a1, const char *a2, void *a3)
{
  uint64_t result = inet_pton(a1, a2, a3);
  if (result)
  {
    if (result == 1) {
      return result;
    }
    int v4 = sub_10024E210();
  }
  else
  {
    int v4 = 22;
  }
  sub_100028EB4();
  swift_allocError();
  sub_10015D264(v5, (uint64_t)"inet_pton(addressFamily:addressDescription:address:)");
  *(_DWORD *)(v6 + 16) = v4;
  return swift_willThrow();
}

const char *sub_10015CEEC(int a1, const void *a2, char *a3, socklen_t a4)
{
  int v4 = inet_ntop(a1, a2, a3, a4);
  if (!v4)
  {
    int v5 = sub_10024E210();
    sub_100028EB4();
    swift_allocError();
    sub_10015D264(v6, (uint64_t)"inet_ntop(addressFamily:addressBytes:addressDescription:addressDescriptionLength:)");
    *(_DWORD *)(v7 + 16) = v5;
    swift_willThrow();
  }
  return v4;
}

void *NIOBSDSocket.OptionLevel.ipv6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.ipv6;
}

void *NIOBSDSocket.Option.ipv6_v6only.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_v6only;
}

void *NIOBSDSocket.OptionLevel.tcp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.tcp;
}

void *NIOBSDSocket.Option.tcp_nodelay.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.tcp_nodelay;
}

uint64_t sub_10015CFA0()
{
  return sub_1001D3890(*v0);
}

void sub_10015CFA8(uint64_t a1)
{
  sub_1000D2218(a1, *v1);
}

uint64_t sub_10015CFB0(uint64_t a1)
{
  return sub_1000D38C4(a1, *v1);
}

uint64_t static NIOBSDSocket.ProtocolFamily.inet6.getter()
{
  return 30;
}

void *NIOBSDSocket.ProtocolFamily.local.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.local;
}

void *NIOBSDSocket.OptionLevel.ip.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.ip;
}

uint64_t static NIOBSDSocket.OptionLevel.ipv6.getter()
{
  return 41;
}

uint64_t static NIOBSDSocket.OptionLevel.socket.getter()
{
  return 0xFFFFLL;
}

void *NIOBSDSocket.Option.ip_add_membership.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_add_membership;
}

void *NIOBSDSocket.Option.ip_drop_membership.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_drop_membership;
}

uint64_t static NIOBSDSocket.Option.ip_drop_membership.getter()
{
  return 13;
}

void *NIOBSDSocket.Option.ip_multicast_if.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_if;
}

void *NIOBSDSocket.Option.ip_multicast_loop.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_loop;
}

void *NIOBSDSocket.Option.ip_multicast_ttl.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_ttl;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_hops.getter()
{
  return 10;
}

void *NIOBSDSocket.Option.ipv6_join_group.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_join_group;
}

void *NIOBSDSocket.Option.ipv6_leave_group.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_leave_group;
}

void *NIOBSDSocket.Option.ipv6_multicast_hops.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_hops;
}

void *NIOBSDSocket.Option.ipv6_multicast_if.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_if;
}

void *NIOBSDSocket.Option.ipv6_multicast_loop.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_loop;
}

void *NIOBSDSocket.Option.tcp_connection_info.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.tcp_connection_info;
}

uint64_t static NIOBSDSocket.Option.tcp_connection_info.getter()
{
  return 262;
}

uint64_t static NIOBSDSocket.Option.so_error.getter()
{
  return 4103;
}

void *NIOBSDSocket.Option.so_keepalive.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_keepalive;
}

void *NIOBSDSocket.Option.so_linger.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_linger;
}

uint64_t static NIOBSDSocket.Option.so_linger.getter()
{
  return 128;
}

void *NIOBSDSocket.Option.so_rcvbuf.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_rcvbuf;
}

uint64_t static NIOBSDSocket.Option.so_rcvbuf.getter()
{
  return 4098;
}

void *NIOBSDSocket.Option.so_rcvtimeo.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_rcvtimeo;
}

uint64_t static NIOBSDSocket.Option.so_rcvtimeo.getter()
{
  return 4102;
}

void *NIOBSDSocket.Option.so_timestamp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_timestamp;
}

uint64_t static NIOBSDSocket.Option.so_timestamp.getter()
{
  return 1024;
}

unint64_t sub_10015D0EC()
{
  unint64_t result = qword_100313AA8;
  if (!qword_100313AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313AA8);
  }
  return result;
}

unint64_t sub_10015D13C()
{
  unint64_t result = qword_100313AB0;
  if (!qword_100313AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313AB0);
  }
  return result;
}

unint64_t sub_10015D18C()
{
  unint64_t result = qword_100313AB8;
  if (!qword_100313AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100313AB8);
  }
  return result;
}

unint64_t sub_10015D1DC()
{
  unint64_t result = qword_100313AC0[0];
  if (!qword_100313AC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100313AC0);
  }
  return result;
}

void type metadata accessor for NIOBSDSocket()
{
}

void type metadata accessor for NIOBSDSocket.AddressFamily()
{
}

void type metadata accessor for NIOBSDSocket.ProtocolFamily()
{
}

void type metadata accessor for NIOBSDSocket.OptionLevel()
{
}

void type metadata accessor for NIOBSDSocket.Option()
{
}

void sub_10015D264(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  a1[1] = (a2 - 32) | 0x8000000000000000;
}

uint64_t sub_10015D278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_10015D280()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10015D31C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    __int16 v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v11 = *v12;
    v11[1] = v12[1];
    uint64_t v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    __int16 v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_10015D458(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_10015D4DC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_10015D59C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_10015D66C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_10015D6F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_10015D7A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 32) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return sub_10001FA0C(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7, v6, v4);
      }
      unint64_t v16 = *((void *)a1 + 1);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_10015D93C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 32) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10015DB90);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v20 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
          sub_1000195B4(v20, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AppStoreConnectResponse.Item()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10015DBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_10015DBD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10015DC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10015DC7C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t sub_10015DD14(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingDatagramWritesState(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingDatagramWritesState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AppStoreConnectResponse()
{
  return sub_10002F7A4();
}

uint64_t sub_10015DE18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x736B6E696CLL && a2 == 0xE500000000000000;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1635018093 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10015DF3C(char a1)
{
  uint64_t result = 1635017060;
  if (a1)
  {
    if (a1 == 1) {
      return 0x736B6E696CLL;
    }
    else {
      return 1635018093;
    }
  }
  return result;
}

void sub_10015DF80()
{
  sub_1000EA748();
  uint64_t v18 = v0;
  uint64_t v19 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  type metadata accessor for AppStoreConnectResponse.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_10015FAC0();
  sub_10001B550();
  uint64_t v17 = v8;
  sub_10007A8E8();
  __chkstk_darwin(v9, v10);
  char v12 = (char *)&v17 - v11;
  sub_10001C2A8(v3, v3[3]);
  uint64_t v13 = v18;
  sub_10024FD40();
  char v23 = 0;
  *(void *)&long long v21 = v5;
  *((void *)&v21 + 1) = v5;
  *(void *)&long long v22 = v6;
  *((void *)&v22 + 1) = v6;
  type metadata accessor for AppStoreConnectResponse.Item();
  sub_10024EB40();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v14 = v19;
  sub_10024F980();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v7);
  }
  else
  {
    uint64_t v15 = v17;
    long long v16 = *(_OWORD *)(v13 + 24);
    long long v21 = *(_OWORD *)(v13 + 8);
    long long v22 = v16;
    sub_10015FAAC(1);
    type metadata accessor for AppStoreConnectResponse.Links();
    swift_getWitnessTable();
    sub_10015FA4C();
    long long v21 = *(_OWORD *)(v13 + 40);
    sub_10015FAAC(2);
    type metadata accessor for AppStoreConnectResponse.Meta();
    swift_getWitnessTable();
    sub_10015FA4C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v7);
  }
  sub_1000EA730();
}

uint64_t sub_10015E1CC()
{
  return sub_10015DF3C(*v0);
}

uint64_t sub_10015E1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10015DE18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10015E208()
{
  return variable initialization expression of MarkedCircularBuffer._markedIndexOffset();
}

uint64_t sub_10015E22C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOHTTPObjectAggregatorError.unexpectedMessageHead.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10015E25C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10015E2B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10015E304()
{
}

uint64_t sub_10015E31C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10015E450(char a1)
{
  if (!a1) {
    return 1701869940;
  }
  if (a1 == 1) {
    return 25705;
  }
  return 0x7475626972747461;
}

void sub_10015E498()
{
  sub_1000EA748();
  uint64_t v15 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v16 = *(void *)(v4 + 16);
  long long v13 = *(_OWORD *)(v4 + 24);
  long long v17 = v13;
  uint64_t v14 = v5;
  uint64_t v18 = v5;
  type metadata accessor for AppStoreConnectResponse.Item.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_10015FAC0();
  sub_10001B550();
  uint64_t v8 = v7;
  sub_10007A8E8();
  __chkstk_darwin(v9, v10);
  char v12 = (char *)&v13 - v11;
  sub_10001C2A8(v3, v3[3]);
  sub_10024FD40();
  LOBYTE(v16) = 0;
  sub_10024F940();
  if (!v1)
  {
    LOBYTE(v16) = 1;
    sub_10024F940();
    LOBYTE(v16) = 2;
    sub_10024F980();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
  sub_1000EA730();
}

uint64_t sub_10015E640(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8D68;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_10015E698(char a1)
{
  if (a1) {
    return 1954047342;
  }
  else {
    return 1718379891;
  }
}

void sub_10015E6B8()
{
  sub_1000EA748();
  void v14[2] = v1;
  uint64_t v15 = v0;
  v14[0] = v2;
  v14[1] = v3;
  unsigned int v5 = v4;
  type metadata accessor for AppStoreConnectResponse.Links.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_10015FA78();
  sub_10001B550();
  uint64_t v8 = v7;
  sub_10007A8E8();
  __chkstk_darwin(v9, v10);
  char v12 = (char *)v14 - v11;
  sub_10001C2A8(v5, v5[3]);
  sub_10024FD40();
  uint64_t v13 = v15;
  sub_10024F940();
  if (!v13) {
    sub_10024F8D0();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
  sub_1000EA730();
}

uint64_t sub_10015E804(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x676E69676170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10024FA60();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10015E884()
{
  return 0x676E69676170;
}

void sub_10015E898()
{
  sub_1000EA748();
  v11[1] = v2;
  uint64_t v12 = v1;
  uint64_t v13 = v3;
  sub_10015FA98();
  type metadata accessor for AppStoreConnectResponse.Meta.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_10015FA78();
  sub_10001B550();
  uint64_t v6 = v5;
  sub_10007A8E8();
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v11 - v9;
  sub_10001C2A8(v0, v0[3]);
  sub_10024FD40();
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  type metadata accessor for AppStoreConnectResponse.Meta.Paging();
  swift_getWitnessTable();
  sub_10024F980();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  sub_1000EA730();
}

uint64_t sub_10015E9EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61746F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10015EAD4(char a1)
{
  if (a1) {
    return 0x74696D696CLL;
  }
  else {
    return 0x6C61746F74;
  }
}

void sub_10015EAFC()
{
  sub_1000EA748();
  uint64_t v11 = v2;
  uint64_t v12 = v1;
  sub_10015FA98();
  type metadata accessor for AppStoreConnectResponse.Meta.Paging.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_10024F9A0();
  sub_10001B550();
  uint64_t v5 = v4;
  sub_10007A8E8();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_10001C2A8(v0, v0[3]);
  sub_10024FD40();
  uint64_t v10 = v12;
  sub_10024F960();
  if (!v10) {
    sub_10024F960();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v3);
  sub_1000EA730();
}

BOOL sub_10015EC48(char *a1, char *a2)
{
  return static CloseMode.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10015EC60()
{
  return CloseMode.hashValue.getter(*v0);
}

void sub_10015EC70(uint64_t a1)
{
  CloseMode.hash(into:)(a1, *v1);
}

Swift::Int sub_10015EC80()
{
  sub_10024FC00();
  CloseMode.hash(into:)((uint64_t)v2, *v0);
  return sub_10024FC70();
}

uint64_t sub_10015ECCC()
{
  return sub_10015E450(*v0);
}

uint64_t sub_10015ECDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10015E31C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10015ED10()
{
  return variable initialization expression of MarkedCircularBuffer._markedIndexOffset();
}

uint64_t sub_10015ED38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOHTTPObjectAggregatorError.unexpectedMessageHead.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10015ED6C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10015EDC0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10015EE14()
{
}

uint64_t type metadata accessor for AppStoreConnectResponse.CodingKeys()
{
  return sub_10002F7A4();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Links()
{
  return sub_10002F7A4();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Meta()
{
  return sub_10002F7A4();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Item.CodingKeys()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_10015EE90(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10015EF5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10015EF84()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015EFA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015EFBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015EFD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015EFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10015F068(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10015F0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10015F144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10015F1B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10015E640(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10015F1EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10015E698(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10015F220()
{
  return sub_10015E698(*v0);
}

uint64_t sub_10015F230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_10015E694(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_10015F260(uint64_t a1, uint64_t a2)
{
  return sub_10015F74C(a1, a2, (uint64_t (*)(void, void, void))j___s25ASOctaneSupportXPCService20MarkedCircularBufferV18_markedIndexOffsetSiSgvpfi);
}

uint64_t sub_10015F278(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10015F2CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10015F320()
{
}

uint64_t sub_10015F348()
{
  return static System.hasAsyncAwaitSupport.getter();
}

Swift::Int sub_10015F350()
{
  return ByteBufferFoundationError.hashValue.getter();
}

void sub_10015F35C()
{
}

Swift::Int sub_10015F368()
{
  return sub_10024FC70();
}

uint64_t sub_10015F3AC()
{
  return sub_10015E884();
}

uint64_t sub_10015F3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10015E804(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10015F3EC()
{
  return variable initialization expression of MarkedCircularBuffer._markedIndexOffset();
}

uint64_t sub_10015F410@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static System.hasAsyncAwaitSupport.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10015F444(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10015F498(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10015F4EC()
{
}

uint64_t sub_10015F510()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015F52C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Links.CodingKeys()
{
  return sub_10002F7A4();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Meta.CodingKeys()
{
  return sub_10002F7A4();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Meta.Paging()
{
  return sub_10002F7A4();
}

unsigned char *sub_10015F590(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10015F62CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10015F658()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015F674()
{
  return swift_getWitnessTable();
}

BOOL sub_10015F690(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static NIOHTTPObjectAggregatorEvent.__derived_struct_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10015F6A4()
{
  return NIOHTTPObjectAggregatorEvent.hashValue.getter(*v0);
}

void sub_10015F6B4(uint64_t a1)
{
  NIOHTTPObjectAggregatorEvent.hash(into:)(a1, *v1);
}

Swift::Int sub_10015F6C4()
{
  sub_10024FC00();
  NIOHTTPObjectAggregatorEvent.hash(into:)((uint64_t)v2, *v0);
  return sub_10024FC70();
}

uint64_t sub_10015F70C()
{
  return sub_10015EAD4(*v0);
}

uint64_t sub_10015F71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10015E9EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10015F74C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  return a3(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_10015F77C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOHTTPObjectAggregatorError.endingIgnoredMessage.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10015F7AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10015F800(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10015F854()
{
}

uint64_t sub_10015F878()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015F894()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015F8B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015F8CC()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AppStoreConnectResponse.Meta.Paging.CodingKeys()
{
  return sub_10002F7A4();
}

unsigned char *sub_10015F900(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10015F9CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10015F9F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015FA10()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015FA2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015FA4C()
{
  return sub_10024F980();
}

uint64_t sub_10015FA78()
{
  return sub_10024F9A0();
}

uint64_t sub_10015FA98()
{
  return 255;
}

uint64_t sub_10015FAAC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_10015FAC0()
{
  return sub_10024F9A0();
}

void sub_10015FAE0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      uint64_t v16 = _swiftEmptyArrayStorage;
      sub_100038E38();
      if (v5 < 0) {
        break;
      }
      uint64_t v6 = 0;
      uint64_t v7 = v16;
      while (v5 != v6)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = sub_10024F380();
        }
        else
        {
          uint64_t v8 = *(void *)(a1 + 8 * v6 + 32);
          swift_retain();
        }
        sub_100160E44(v8, (uint64_t *)v15);
        swift_release();
        uint64_t v16 = v7;
        unint64_t v9 = v7[2];
        if (v9 >= v7[3] >> 1)
        {
          sub_100038E38();
          uint64_t v7 = v16;
        }
        ++v6;
        void v7[2] = v9 + 1;
        uint64_t v10 = &v7[8 * v9];
        long long v11 = v15[0];
        long long v12 = v15[1];
        long long v13 = v15[3];
        v10[4] = v15[2];
        v10[5] = v13;
        v10[2] = v11;
        void v10[3] = v12;
        if (v5 == v6) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_10024F6F0();
      swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_release();
    swift_release();
    sub_10001DB0C(a4);
  }
}

void *sub_10015FC90()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = (void *)v1;
  if (v1 == 1)
  {
    uint64_t v2 = sub_1000C2720(0xD000000000000013, 0x800000010027FC50, 1819112552, 0xE400000000000000);
    uint64_t v3 = *(void *)(v0 + 128);
    *(void *)(v0 + 128) = v2;
    *(void *)(v0 + 136) = v4;
    swift_bridgeObjectRetain();
    sub_100021534(v3);
  }
  sub_10002158C(v1);
  return v2;
}

void sub_10015FD34(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v4 = sub_10024E030();
  sub_10001B550();
  uint64_t inited = v5;
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (char *)&v126 - v18;
  unint64_t v20 = sub_10024DBF0();
  sub_10001B550();
  unint64_t v145 = v21;
  __chkstk_darwin(v22, v23);
  sub_10002059C();
  uint64_t v144 = v25 - v24;
  uint64_t v26 = sub_100161540(0x444970756F7267, 0xE700000000000000, *(void *)(a1 + 96));
  if (!v27) {
    goto LABEL_27;
  }
  uint64_t v28 = v26;
  uint64_t v29 = v27;
  uint64_t v142 = v20;
  uint64_t v143 = v16;
  uint64_t v30 = sub_100212134();
  LODWORD(a1) = v30;
  uint64_t v31 = sub_100161540(7368801, 0xE300000000000000, v30);
  unint64_t v20 = v32;
  swift_bridgeObjectRelease();
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    sub_100022D68();
    sub_10006711C();
    sub_100022D50();
    *(double *)&long long v55 = sub_100022D80();
    unint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v56 = 21;
    goto LABEL_38;
  }
  uint64_t v139 = v19;
  uint64_t v137 = v11;
  unint64_t v33 = v146;
  sub_10001C2A8(v146 + 6, v146[9]);
  a1 = sub_10008A5FC(v31, v20);
  uint64_t v34 = sub_1000FEBDC(v28, v29);
  if (!v34)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100022D68();
    sub_10006711C();
    sub_100022D50();
    *(double *)&long long v55 = sub_100022D80();
    unint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v56 = 25;
    goto LABEL_38;
  }
  uint64_t v132 = v33 + 6;
  uint64_t v141 = (void *)v34;
  uint64_t v35 = a1;
  uint64_t v133 = inited;
  unint64_t v134 = v4;
  unint64_t v36 = sub_10001C2A8(v33 + 11, v33[14]);
  sub_100019524(&qword_1003090E8);
  uint64_t inited = swift_initStackObject();
  long long v138 = xmmword_100255FB0;
  *(_OWORD *)(inited + 16) = xmmword_100255FB0;
  *(void *)(inited + 32) = v28;
  *(void *)(inited + 40) = v29;
  uint64_t v37 = *v36;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v140 = v31;
  unint64_t v38 = 0;
  unint64_t v4 = (unint64_t)sub_1000FFCF4(inited, v37);
  swift_setDeallocating();
  sub_10020BB20();
  if (v4 >> 62)
  {
LABEL_61:
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v40 = v35;
  uint64_t v41 = v141;
  if (!v39)
  {
    swift_bridgeObjectRelease();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_10024E1F0();
    sub_10001B0E8(v57, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    a1 = sub_10024E1D0();
    os_log_type_t v58 = sub_10024EE10();
    unint64_t v4 = v58;
    if (os_log_type_enabled((os_log_t)a1, v58))
    {
      unint64_t v38 = (void *)swift_slowAlloc();
      *(void *)&long long v147 = swift_slowAlloc();
      uint64_t v150 = v147;
      *(_DWORD *)unint64_t v38 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)&long long v152 = sub_1000F3F3C(v28, v29, &v150);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *((_WORD *)v38 + 6) = 2080;
      uint64_t inited = (uint64_t)v38 + 14;
      swift_bridgeObjectRetain();
      uint64_t v59 = v140;
      *(void *)&long long v152 = sub_1000F3F3C(v140, v20, &v150);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)a1, (os_log_type_t)v4, "no transaction for %s and %s", (uint8_t *)v38, 0x16u);
      unint64_t v4 = v147;
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v59 = v140;
    }
    sub_100019524(&qword_100309300);
    uint64_t v60 = swift_allocObject();
    sub_1001614D4(v60);
    swift_bridgeObjectRelease();
    uint64_t v150 = 0xD000000000000018;
    unint64_t v151 = 0x800000010027FC30;
    v158._countAndFlagsBits = v59;
    v158._object = (void *)v20;
    sub_10024E800(v158);
    swift_bridgeObjectRelease();
    unint64_t v61 = v151;
    v38[6] = v150;
    v38[7] = v61;
    goto LABEL_37;
  }
  uint64_t v131 = v38;
  uint64_t v135 = v40;
  sub_10014ED88(0, (v4 & 0xC000000000000001) == 0, v4);
  unint64_t v38 = (void *)v20;
  if ((v4 & 0xC000000000000001) != 0) {
    id v42 = (id)sub_10024F380();
  }
  else {
    id v42 = *(id *)(v4 + 32);
  }
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v20 = v41[7];
  *(void *)&long long v147 = v43;
  uint64_t v136 = a2;
  if (!(v20 >> 62))
  {
    unint64_t v4 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    id v44 = v43;
    if (v4) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain_n();
  id v125 = v43;
  unint64_t v4 = sub_10024F6F0();
  if (!v4)
  {
LABEL_22:
    char v48 = (void *)v147;

    swift_bridgeObjectRelease_n();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_10024E1F0();
    LODWORD(a1) = sub_10001B0E8(v49, (uint64_t)qword_10034C0E0);
    unint64_t v20 = (unint64_t)v38;
    swift_bridgeObjectRetain_n();
    unint64_t v4 = v48;
    unint64_t v38 = (void *)sub_10024E1D0();
    os_log_type_t v50 = sub_10024EE10();
    if (os_log_type_enabled((os_log_t)v38, v50))
    {
      uint64_t inited = swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      *(_DWORD *)uint64_t inited = 136315394;
      uint64_t v51 = sub_1000D427C();
      *(void *)&long long v152 = sub_1000F3F3C(v51, v52, &v150);
      a2 = (char *)&v152 + 8;
      sub_10024F100();

      swift_bridgeObjectRelease();
      *(_WORD *)(inited + 12) = 2080;
      LODWORD(a1) = inited + 14;
      swift_bridgeObjectRetain();
      uint64_t v53 = v140;
      *(void *)&long long v152 = sub_1000F3F3C(v140, v20, &v150);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v38, v50, "no subscription for %s and %s", (uint8_t *)inited, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();

      sub_10016151C();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_10016151C();
      uint64_t v53 = v140;
    }
    sub_100019524(&qword_100309300);
    uint64_t v62 = swift_allocObject();
    sub_1001614D4(v62);
    swift_bridgeObjectRelease();
    uint64_t v150 = 0xD000000000000018;
    unint64_t v151 = 0x800000010027FC30;
    v159._countAndFlagsBits = v53;
    v159._object = (void *)v20;
    sub_10024E800(v159);
    swift_bridgeObjectRelease();
    unint64_t v63 = v151;
    v38[6] = v150;
    v38[7] = v63;

LABEL_37:
    swift_release();
    swift_release();
    sub_100022D68();
    sub_10006711C();
    sub_100022D50();
    *(double *)&long long v55 = sub_100022D80();
    uint64_t v56 = 16;
    goto LABEL_38;
  }
LABEL_11:
  a2 = (char *)(v20 & 0xC000000000000001);
  uint64_t v35 = 4;
  while (1)
  {
    if (a2)
    {
      uint64_t v29 = sub_10024F380();
    }
    else
    {
      uint64_t v29 = *(void *)(v20 + 8 * v35);
      swift_retain();
    }
    uint64_t v45 = v35 - 3;
    if (__OFADD__(v35 - 4, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    uint64_t inited = *(void *)(v29 + 80);
    uint64_t v28 = *(void *)(v29 + 88);
    swift_bridgeObjectRetain();
    if (inited == sub_1000D427C() && v28 == v46)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    uint64_t inited = sub_10024FA60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (inited) {
      break;
    }
    swift_release();
    ++v35;
    if (v45 == v4) {
      goto LABEL_22;
    }
  }

LABEL_41:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v64 = (uint64_t)v146;
  LODWORD(a1) = v146;
  uint64_t v65 = sub_10015FC90();
  a2 = v136;
  uint64_t v67 = v135;
  uint64_t v68 = v141;
  if (v65)
  {
    Swift::Int v129 = v66;
    uint64_t v130 = v65;
    uint64_t v69 = v132;
    sub_10001C2A8(v132, *(void *)(v64 + 72));
    unint64_t v70 = v38;
    uint64_t v71 = sub_10008A7F0();
    sub_10001C2A8(v69, *(void *)(v64 + 72));
    sub_10008AFE8();
    unint64_t v72 = v68[7];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100048DF8((uint64_t)&v150);
    sub_10015FAE0(v72, v64, v71, (uint64_t)&v150);
    *(void *)&long long v138 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v146 = (void *)v71;
    uint64_t v132 = (void *)sub_10005148C();
    uint64_t v131 = v74;
    sub_10001DB0C((uint64_t)&v150);
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void *)(v29 + 176);
    LOBYTE(v72) = *(unsigned char *)(v29 + 184);
    id v76 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v76 setUnitsStyle:3];
    [v76 setAllowedUnits:4124];
    uint64_t v77 = v144;
    sub_100213A0C(v75, v72);
    Class isa = sub_10024DBC0().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v77, v142);
    id v79 = [v76 stringFromDateComponents:isa];

    if (v79)
    {
      uint64_t v80 = sub_10024E6B0();
      uint64_t v82 = v81;
    }
    else
    {
      uint64_t v80 = 0;
      uint64_t v82 = (void *)0xE000000000000000;
    }
    if (v75 == 1)
    {
      *(void *)&long long v152 = v80;
      *((void *)&v152 + 1) = v82;
      uint64_t v148 = 32;
      unint64_t v149 = 0xE100000000000000;
      sub_10001DAC0();
      uint64_t v83 = sub_10024F130();
      swift_bridgeObjectRelease();
      *(void *)&long long v152 = sub_10006BFC0(1, v83);
      *((void *)&v152 + 1) = v84;
      unint64_t v153 = v85;
      uint64_t v154 = v86;
      sub_100019524(&qword_10030BF68);
      sub_1000691D8();
      uint64_t v80 = sub_10024E5C0();
      uint64_t v82 = v87;
      swift_unknownObjectRelease();
    }

    uint64_t v88 = v134;
    type metadata accessor for AppIconRoute();
    unint64_t v145 = sub_10006ACC8(v140, v70);
    uint64_t v144 = v89;
    swift_bridgeObjectRelease();
    uint64_t v90 = *(void *)(v67 + 24);
    if (v90)
    {
      uint64_t v142 = *(void *)(v67 + 16);
      uint64_t v140 = v90;
    }
    else
    {
      uint64_t v140 = 0xE800000000000000;
      uint64_t v142 = 0x656D614E20707041;
    }
    uint64_t v91 = v68[6];
    unint64_t v134 = v68[5];
    uint64_t v92 = v68[3];
    uint64_t v128 = v68[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v127 = sub_100161008();
    uint64_t v126 = v93;
    *(void *)&long long v152 = v132;
    *((void *)&v152 + 1) = v131;
    v160._countAndFlagsBits = 47;
    v160._object = (void *)0xE100000000000000;
    sub_10024E800(v160);
    v161._countAndFlagsBits = v80;
    v161._object = v82;
    sub_10024E800(v161);
    swift_bridgeObjectRelease();
    uint64_t v94 = sub_10024E710();
    uint64_t v132 = v95;
    swift_bridgeObjectRelease();
    sub_1000D9478(4);
    if (v96)
    {
      uint64_t v98 = 1;
      uint64_t v99 = v133;
      uint64_t v97 = (uint64_t)v139;
    }
    else
    {
      uint64_t v97 = (uint64_t)v139;
      sub_10024DF60();
      uint64_t v98 = 0;
      uint64_t v99 = v133;
    }
    sub_1000195B4(v97, v98, 1, v88);
    uint64_t v100 = v97;
    uint64_t v101 = (uint64_t)v143;
    sub_1000C0AF4(v100, (uint64_t)v143);
    int v102 = sub_10001FA0C(v101, 1, v88);
    a1 = v147;
    if (v102 == 1)
    {
      uint64_t v103 = 0;
      uint64_t v104 = 0;
    }
    else
    {
      uint64_t v133 = v94;
      uint64_t v105 = v137;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v137, v101, v88);
      uint64_t v106 = v88;
      if (qword_100308CE8 != -1) {
        swift_once();
      }
      uint64_t v107 = (void *)qword_10030B088;
      Class v108 = sub_10024DFB0().super.isa;
      uint64_t v109 = v105;
      id v110 = [v107 stringFromDate:v108];

      uint64_t v103 = sub_10024E6B0();
      uint64_t v104 = v111;

      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v109, v106);
      a1 = v147;
      uint64_t v94 = v133;
    }
    sub_100058654((uint64_t)v139);
    uint64_t v112 = sub_1000D5AE4();
    uint64_t v154 = &type metadata for EditSubscriptionUIRoute.ViewProperties;
    uint64_t v113 = (void *)swift_allocObject();
    *(void *)&long long v152 = v113;
    uint64_t v114 = v144;
    v113[2] = v145;
    v113[3] = v114;
    uint64_t v115 = v140;
    v113[4] = v142;
    v113[5] = v115;
    v113[6] = v134;
    v113[7] = v91;
    v113[8] = v128;
    v113[9] = v92;
    uint64_t v116 = v126;
    v113[10] = v127;
    v113[11] = v116;
    uint64_t v117 = v132;
    v113[12] = v94;
    v113[13] = v117;
    v113[14] = v103;
    v113[15] = v104;
    uint64_t v118 = v138;
    v113[16] = v112;
    v113[17] = v118;
    uint64_t v119 = sub_1000C2DBC((uint64_t)&v152, (uint64_t)v130, v129);
    unint64_t v121 = v120;
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)&v152);
    sub_1000CB5C8(v119, v121, 1, (uint64_t)&v152);
    long long v147 = v152;
    unint64_t v4 = v153;
    uint64_t inited = (uint64_t)v154;
    uint64_t v122 = v155;
    uint64_t v123 = v156;
    uint64_t v124 = v157;

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v20 = v122 | (v123 << 32) | (v124 << 48);
    sub_100022D68();
    sub_10006711C();
    uint64_t v54 = sub_100022D50();
    long long v55 = v147;
    unint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v56 = 3;
    a2 = v136;
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100022D68();
    sub_10006711C();
    sub_100022D50();
    *(double *)&long long v55 = sub_100022D80();
    unint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v56 = 49;
  }
LABEL_38:
  *(void *)(v54 + 16) = 0;
  *(void *)(v54 + 24) = 0;
  *(void *)(v54 + 32) = v56;
  *(_DWORD *)(v54 + 40) = a1;
  *(void *)a2 = v54;
  *((void *)a2 + 1) = v38;
  a2[16] = 2;
  *(_OWORD *)(a2 + 24) = v55;
  *((void *)a2 + 5) = v4;
  *((void *)a2 + 6) = inited;
  a2[62] = BYTE6(v20);
  *((_WORD *)a2 + 30) = WORD2(v20);
  *((_DWORD *)a2 + 14) = v20;
}

uint64_t sub_100160E44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10024DBF0();
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = v10 - v9;
  uint64_t v27 = sub_100161008();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(a1 + 176);
  char v15 = *(unsigned char *)(a1 + 184);
  id v16 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v16 setUnitsStyle:3];
  [v16 setAllowedUnits:4124];
  sub_100213A0C(v14, v15);
  Class isa = sub_10024DBC0().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
  id v18 = [v16 stringFromDateComponents:isa];

  if (v18)
  {
    uint64_t v19 = sub_10024E6B0();
    unint64_t v21 = v20;
  }
  else
  {

    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10005148C();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a1 + 80);
  uint64_t result = swift_bridgeObjectRetain();
  *a2 = v27;
  a2[1] = v13;
  a2[2] = v19;
  a2[3] = v21;
  a2[4] = v22;
  a2[5] = v24;
  a2[6] = v25;
  a2[7] = result;
  return result;
}

uint64_t sub_100161008()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1000F072C(v0);
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_10020F734();
  }
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  return v2;
}

uint64_t type metadata accessor for EditSubscriptionUIRoute()
{
  return self;
}

uint64_t sub_1001610A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 144, 7);
}

ValueMetadata *type metadata accessor for EditSubscriptionUIRoute.ViewProperties.Option()
{
  return &type metadata for EditSubscriptionUIRoute.ViewProperties.Option;
}

uint64_t destroy for EditSubscriptionUIRoute.ViewProperties()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EditSubscriptionUIRoute.ViewProperties(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EditSubscriptionUIRoute.ViewProperties(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for EditSubscriptionUIRoute.ViewProperties(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditSubscriptionUIRoute.ViewProperties(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EditSubscriptionUIRoute.ViewProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditSubscriptionUIRoute.ViewProperties()
{
  return &type metadata for EditSubscriptionUIRoute.ViewProperties;
}

void sub_1001614D4(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 384);
  *(void *)(a1 + 32) = 0x6E6F697461636F4CLL;
  *(void *)(a1 + 40) = 0xE800000000000000;
  *(void *)(v1 - 208) = 0;
  *(void *)(v1 - 200) = 0xE000000000000000;
  sub_10024F330(26);
}

ValueMetadata *type metadata accessor for OctaneStorefront()
{
  return &type metadata for OctaneStorefront;
}

uint64_t sub_100161540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_10011ED00();
  if ((v4 & 1) == 0) {
    return 0;
  }
  sub_100161FA4();
  return v3;
}

unint64_t sub_100161588(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0xF000000000000007;
  }
  unint64_t v3 = sub_10011EDD4(a1);
  if ((v4 & 1) == 0) {
    return 0xF000000000000007;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 16 * v3);
  Scheduled._promise.getter(v5);
  return v5;
}

double sub_1001615F8@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_100161684(a1, (uint64_t (*)(void))sub_10011EE18, a2);
}

double sub_100161614(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return sub_100161F98();
  }
  unint64_t v2 = sub_10011EE7C();
  if ((v3 & 1) == 0) {
    return sub_100161F98();
  }
  uint64_t v4 = sub_100161F7C(v2);
  sub_1000318C8(v4, v5);
  return result;
}

double sub_10016166C@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_100161684(a1, (uint64_t (*)(void))sub_10011ED00, a2);
}

double sub_100161684@<D0>(uint64_t a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16) && (uint64_t v5 = a2(), (v6 & 1) != 0))
  {
    sub_100027788(*(void *)(a1 + 56) + 40 * v5, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    return sub_100161F98();
  }
  return result;
}

double sub_1001616DC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return sub_100161F98();
  }
  unint64_t v2 = sub_10011EEF0(a1);
  if ((v3 & 1) == 0) {
    return sub_100161F98();
  }
  uint64_t v4 = sub_100161F7C(v2);
  sub_1000318C8(v4, v5);
  return result;
}

uint64_t sub_100161734(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v2 = sub_10011EF34();
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_100161F8C(v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100161774(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (uint64_t v2 = sub_10011EF34(), (v3 & 1) != 0)) {
    return sub_100161F8C(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001617B8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_10011EF34();
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_100161FA4();
  return v2;
}

uint64_t sub_100161800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_10011ED00();
  if ((v4 & 1) == 0) {
    return 0;
  }
  sub_100161F8C(v3);
  return swift_retain();
}

uint64_t sub_100161840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v3 = sub_10011ED00(), (v4 & 1) != 0)) {
    return sub_100161F8C(v3);
  }
  else {
    return 0;
  }
}

double sub_100161884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return sub_100161F98();
  }
  unint64_t v3 = sub_10011ED00();
  if ((v4 & 1) == 0) {
    return sub_100161F98();
  }
  uint64_t v5 = sub_100161F7C(v3);
  sub_1000318C8(v5, v6);
  return result;
}

void *sub_1001618DC()
{
  double result = sub_1001618FC();
  qword_10034C0A0 = (uint64_t)result;
  return result;
}

void *sub_1001618FC()
{
  uint64_t v0 = sub_10024DDC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  char v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v7 = sub_10024E6A0();
  NSString v8 = sub_10024E6A0();
  id v9 = [v6 pathForResource:v7 ofType:v8];

  if (v9)
  {
    sub_10024E6B0();

    sub_10024DD30();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10024DE00();
    unint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    sub_10024DC80();
    swift_allocObject();
    sub_10024DC70();
    sub_100019524(&qword_100310110);
    sub_1000F0DB4();
    sub_10024DC60();
    sub_10003F808(v10, v12);
    swift_release();
    char v48 = v55;
  }
  else
  {
    char v48 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v48[2];
  if (!v13)
  {
    char v15 = _swiftEmptyArrayStorage;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  char v15 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v16 = v48[v14 + 4];
    if (!*(void *)(v16 + 16)) {
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_10011ED00();
    if ((v18 & 1) == 0 || !*(void *)(v16 + 16)) {
      goto LABEL_24;
    }
    uint64_t v19 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v17);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_10011ED00();
    if ((v23 & 1) == 0 || !*(void *)(v16 + 16)) {
      goto LABEL_23;
    }
    uint64_t v24 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v22);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_10011ED00();
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v29 = v15;
    uint64_t v30 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v27);
    uint64_t v53 = *v30;
    uint64_t v54 = v26;
    uint64_t v31 = v30[1];
    uint64_t v32 = *(void *)(v16 + 16);
    swift_bridgeObjectRetain();
    if (v32 && (unint64_t v33 = sub_10011ED00(), (v34 & 1) != 0))
    {
      char v15 = v29;
      if (!*(void *)(v16 + 16)) {
        goto LABEL_29;
      }
      uint64_t v35 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v33);
      uint64_t v36 = v35[1];
      uint64_t v52 = *v35;
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_10011ED00();
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_29:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      uint64_t v39 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v37);
      uint64_t v40 = *v39;
      uint64_t v50 = v39[1];
      uint64_t v51 = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100034D08();
        char v15 = v45;
      }
      unint64_t v41 = v15[2];
      unint64_t v42 = v41 + 1;
      if (v41 >= v15[3] >> 1)
      {
        unint64_t v49 = v41 + 1;
        sub_100034D08();
        unint64_t v42 = v49;
        char v15 = v46;
      }
      uint64_t v15[2] = v42;
      uint64_t v43 = &v15[10 * v41];
      v43[4] = v21;
      v43[5] = v20;
      v43[6] = v54;
      v43[7] = v25;
      v43[8] = v53;
      v43[9] = v31;
      v43[10] = v52;
      v43[11] = v36;
      uint64_t v44 = v50;
      v43[12] = v51;
      v43[13] = v44;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v15 = v29;
    }
LABEL_25:
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100161E34()
{
  sub_100019524(&qword_100309300);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002642A0;
  long long v2 = *v0;
  long long v9 = v0[1];
  long long v3 = v9;
  long long v10 = v2;
  *(_OWORD *)(inited + 48) = v2;
  *(_OWORD *)(inited + 80) = v3;
  long long v4 = v0[3];
  long long v8 = v0[2];
  *(_OWORD *)(inited + 112) = v8;
  *(void *)(inited + 32) = 0x437972746E756F63;
  *(void *)(inited + 40) = 0xEB0000000065646FLL;
  strcpy((char *)(inited + 64), "currencyCode");
  *(unsigned char *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(void *)(inited + 96) = 0x696669746E656469;
  *(void *)(inited + 104) = 0xEA00000000007265;
  strcpy((char *)(inited + 128), "ISOCountryCode");
  *(unsigned char *)(inited + 143) = -18;
  *(_OWORD *)(inited + 144) = v4;
  *(void *)(inited + 160) = 1701667182;
  *(void *)(inited + 168) = 0xE400000000000000;
  long long v6 = v0[4];
  long long v7 = v4;
  *(_OWORD *)(inited + 176) = v6;
  sub_1000562D8((uint64_t)&v10);
  sub_1000562D8((uint64_t)&v9);
  sub_1000562D8((uint64_t)&v8);
  sub_1000562D8((uint64_t)&v7);
  sub_1000562D8((uint64_t)&v6);
  return sub_10024E510();
}

uint64_t sub_100161F7C(uint64_t a1)
{
  return *(void *)(v1 + 56) + 32 * a1;
}

uint64_t sub_100161F8C(uint64_t a1)
{
  return *(void *)(*(void *)(v1 + 56) + 8 * a1);
}

double sub_100161F98()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t sub_100161FA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t NIOClientTCPBootstrap.channelOption<A>(_:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  long long v6 = v5;
  uint64_t v11 = v6[3];
  uint64_t v12 = v6[4];
  sub_10001C2A8(v6, v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 24);
  a5[3] = v11;
  a5[4] = v12;
  sub_1000709B8(a5);
  v13(a1, a2, a3, a4, v11, v12);
  uint64_t v14 = v6[6];
  a5[5] = v6[5];
  a5[6] = v14;
  return swift_retain();
}

uint64_t NIOClientTCPBootstrap.underlyingBootstrap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100027788(v1, a1);
}

uint64_t NIOClientTCPBootstrap.init<A, B>(_:tls:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  a7[3] = a3;
  a7[4] = a5;
  uint64_t v14 = sub_1000709B8(a7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v14, a1, a3);
  uint64_t v15 = *(void *)(a4 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a3;
  *((void *)v17 + 3) = a4;
  *((void *)v17 + 4) = a5;
  *((void *)v17 + 5) = a6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 32))(&v17[v16], a2, a4);
  a7[5] = (uint64_t)sub_100162394;
  a7[6] = (uint64_t)v17;
  return result;
}

uint64_t sub_1001621CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v12 = *(void *)(a3 - 8);
  uint64_t v13 = __chkstk_darwin(a1, a2);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100027788(v13, (uint64_t)v19);
  sub_100019524(&qword_100314168);
  swift_dynamicCast();
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(a6 + 16);
  a7[3] = a3;
  a7[4] = a5;
  sub_1000709B8(a7);
  v16(v15, a4, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a3);
}

uint64_t sub_10016230C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100162394@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001621CC(a1, (uint64_t)v2+ ((*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80)), v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t NIOClientTCPBootstrap.channelInitializer(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = v4[3];
  uint64_t v9 = v4[4];
  sub_10001C2A8(v4, v8);
  long long v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
  a3[3] = v8;
  a3[4] = v9;
  sub_1000709B8(a3);
  v10(a1, a2, v8, v9);
  uint64_t v11 = v4[6];
  a3[5] = v4[5];
  a3[6] = v11;
  return swift_retain();
}

uint64_t NIOClientTCPBootstrap.connectTimeout(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  sub_10001C2A8(v3, v6);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  a2[3] = v6;
  a2[4] = v7;
  sub_1000709B8(a2);
  v8(a1, v6, v7);
  uint64_t v9 = v3[6];
  a2[5] = v3[5];
  a2[6] = v9;
  return swift_retain();
}

uint64_t NIOClientTCPBootstrap.connect(host:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  sub_10001C2A8(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, a3, v7, v8);
}

uint64_t NIOClientTCPBootstrap.connect(to:)(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_10001C2A8(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
}

uint64_t NIOClientTCPBootstrap.connect(unixDomainSocketPath:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_10001C2A8(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64))(a1, a2, v5, v6);
}

uint64_t NIOClientTCPBootstrap.enableTLS()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void (**)(uint64_t))(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  v5(v2);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v4;
  return swift_retain();
}

void NIOInsecureNoTLS.enableTLS(_:)()
{
}

void sub_100162710()
{
}

uint64_t destroy for NIOClientTCPBootstrap(uint64_t a1)
{
  sub_10001C2EC(a1);
  return swift_release();
}

uint64_t initializeWithCopy for NIOClientTCPBootstrap(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for NIOClientTCPBootstrap(uint64_t *a1, uint64_t *a2)
{
  sub_1001199B4(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NIOClientTCPBootstrap(uint64_t a1, uint64_t a2)
{
  sub_10001C2EC(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NIOClientTCPBootstrap(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NIOClientTCPBootstrap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOClientTCPBootstrap()
{
  return &type metadata for NIOClientTCPBootstrap;
}

uint64_t type metadata accessor for NIOInsecureNoTLS()
{
  return sub_10002F7A4();
}

uint64_t destroy for HTTPResponse(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for HTTPResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v5;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 59) = *(_DWORD *)(a2 + 59);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
    *(void *)(a1 + 55) = *(void *)(a2 + 55);
  }
  return a1;
}

uint64_t assignWithCopy for HTTPResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_retain();
      swift_release();
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
      *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
    }
    else
    {
      sub_100162B60(a1 + 24);
      uint64_t v8 = *(void *)(a2 + 55);
      long long v9 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v9;
      *(void *)(a1 + 55) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    int v7 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 59) = *(_DWORD *)(a2 + 59);
    *(_DWORD *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 55) = *(void *)(a2 + 55);
    *uint64_t v4 = v10;
    *(_OWORD *)(a1 + 40) = v11;
  }
  return a1;
}

uint64_t sub_100162B60(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for HTTPResponse(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 47) = *(_OWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HTTPResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 40);
  if (!v4)
  {
    sub_100162B60(a1 + 24);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(void *)(a1 + 55) = *(void *)(a2 + 55);
    return a1;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = v4;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPResponse(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 63))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 62) = 0;
    *(_WORD *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 63) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 63) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPResponse()
{
  return &type metadata for HTTPResponse;
}

uint64_t sub_100162D48(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 584))();
  if ((result & 1) == 0)
  {
    if (!a1) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v14 = swift_allocError();
    uint64_t v15 = 2;
    goto LABEL_7;
  }
  a2();
  uint64_t v9 = v8;
  __int16 v11 = v10;
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 166, ObjectType, v9);
  swift_release();
  uint64_t result = swift_unknownObjectRelease();
  if ((v11 & 0xFB00) != 0)
  {
    if (!a1) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v14 = swift_allocError();
    uint64_t v15 = 12;
LABEL_7:
    *(void *)uint64_t v13 = v15;
    *(unsigned char *)(v13 + 8) = 3;
LABEL_8:
    swift_errorRetain();
    sub_1000B44D0(v14, 1, a1, v16, v17, v18, v19, v20, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49,
      v50,
      vars0,
      vars8);
    swift_errorRelease();
    return swift_errorRelease();
  }
  if (*(unsigned char *)(*(void *)(v3 + 48) + 88))
  {
    uint64_t v21 = a3(result);
    sub_10002F2C8();
    sub_10016B758();
    *unint64_t v22 = 2;
    uint64_t v23 = *(void *)(v21 + 56);
    uint64_t v24 = swift_getObjectType();
    EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1189, v24, v23);
    if (sub_1000B05F8())
    {
      sub_1000B1750();
      swift_release();
    }
    swift_errorRelease();
    swift_release();
    uint64_t v25 = sub_10016B758();
    unsigned char *v26 = 2;
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)v3 + 760))(v25, 2, 0);
    uint64_t result = swift_errorRelease();
    if (a1)
    {
      uint64_t v14 = sub_10016B758();
      unsigned char *v27 = 2;
      goto LABEL_8;
    }
  }
  else
  {
    sub_10004F230();
    uint64_t v28 = *(void *)(v3 + 232);
    uint64_t v29 = swift_getObjectType();
    uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 91, v29, v28);
    if (*(unsigned char *)(v3 + 249))
    {
      __break(1u);
    }
    else
    {
      *(unsigned char *)(v3 + 249) = 1;
      uint64_t v30 = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, v29, v28);
      uint64_t v36 = a3(v30);
      if (a1) {
        sub_1000B44D0(0, 0, a1, v31, v32, v33, v34, v35, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49,
      }
          v50,
          vars0,
          vars8);
      uint64_t v37 = *(void *)(v36 + 56);
      uint64_t v38 = swift_getObjectType();
      EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1125, v38, v37);
      if (sub_1000B05F8())
      {
        swift_retain();
        sub_1000B1044();
        swift_release_n();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1001630D8(uint64_t a1)
{
  uint64_t v2 = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 884);
  sub_100162D48(v2, (void (*)(void))sub_10018E72C, sub_10018E878);
  swift_retain_n();
  swift_retain_n();
  sub_10012DD14();
  swift_release();
  swift_release_n();
  swift_retain();
  sub_10002DDEC(a1);
  uint64_t v3 = swift_release();
  sub_10018E72C(v3);
  uint64_t v5 = v4;
  __int16 v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 166, ObjectType, v5);
  swift_release();
  swift_unknownObjectRelease();
  if ((v7 & 0xFB00) != 0)
  {
    uint64_t v9 = sub_100190428();
    sub_10018E72C(v9);
    uint64_t v11 = v10;
    unsigned int v13 = v12;
    uint64_t v14 = swift_getObjectType();
    EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 176, v14, v11);
    if (v13 <= 4 && ((1 << v13) & 0x13) != 0)
    {
      swift_release();
      swift_release();
      return swift_unknownObjectRelease();
    }
    swift_release();
    swift_unknownObjectRelease();
    sub_10019050C(a1);
  }
  return swift_release();
}

uint64_t sub_100163328(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  ChannelPipeline.close(mode:promise:)();
  return swift_release();
}

uint64_t sub_100163374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 32);
  uint64_t v10 = *(void *)(v4 + 40);
  uint64_t v11 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = sub_10013F1AC(v9, 0, 255, a1, a2, a3, a4, v11, ObjectType, v10);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_10012E770();
  swift_release();
  return v13;
}

uint64_t sub_100163484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a6(a2, a3, a4, a5);
  sub_10018E878(v6);
  swift_retain();
  ChannelPipeline.bind(to:promise:)();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1001634F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10016B69C();
  sub_10016B5D8();
  uint64_t v9 = v8();
  uint64_t v10 = (void *)sub_1001188D4();
  v10[2] = v9;
  void v10[3] = v6;
  v10[4] = v5;
  swift_retain();
  swift_retain();
  SelectableEventLoop.execute(_:)(a5, (uint64_t)v10);
  swift_release();
  return v9;
}

__objc2_class *ServerBootstrap.__allocating_init(group:)(void *a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_10016A328(a1, v2, ObjectType, a2);
}

uint64_t ServerBootstrap.serverChannelOption<A>(_:value:)()
{
  return swift_retain();
}

uint64_t ServerBootstrap.childChannelOption<A>(_:value:)()
{
  return swift_retain();
}

uint64_t ServerBootstrap.childChannelInitializer(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 64);
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  sub_10003C350(v3);
  swift_retain();
  return swift_retain();
}

uint64_t ServerBootstrap.bind(host:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100167FC0(a1, a2, a3, sub_100163E00);
}

uint64_t sub_100163700(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(void *)(v2 + 32) == a1)
  {
    swift_retain();
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for () + 8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1379, ObjectType, (uint64_t)&type metadata for () + 8, a2);
    uint64_t v7 = swift_retain();
    sub_100031E30(v7);
    swift_release();
    return v6;
  }
  return v3;
}

uint64_t sub_10016379C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(void *)(v2 + 40) == a1)
  {
    swift_retain();
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = sub_100019524(&qword_100310F60);
    uint64_t v7 = EventLoop.makePromise<A>(of:file:line:)(v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1379, ObjectType, v6, a2);
    uint64_t v8 = swift_retain();
    sub_100031EA4(v8);
    swift_release();
    return v7;
  }
  return v3;
}

uint64_t ServerBootstrap._serverChannelOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServerBootstrap._serverChannelOptions.setter(uint64_t a1)
{
  sub_10004F230();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ServerBootstrap._serverChannelOptions.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ServerBootstrap._childChannelOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServerBootstrap._childChannelOptions.setter(uint64_t a1)
{
  sub_10004F230();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*EmbeddedChannelCore.pendingOutboundBuffer.modify())()
{
  return j_j__swift_endAccess;
}

__objc2_class *ServerBootstrap.__allocating_init(group:childGroup:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t result = (__objc2_class *)object_getClass(a1);
  if (result != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && result != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a1 == 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t result = (__objc2_class *)object_getClass(a3);
  if (result != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && result != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a3 == 0)
  {
    goto LABEL_18;
  }
  uint64_t v13 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t result = (__objc2_class *)sub_10016A3D4(a1, a3, a4, v13, ObjectType, a2);
  if (result)
  {
    uint64_t v15 = result;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v15;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t ServerBootstrap.__allocating_init(validatingGroup:childGroup:)()
{
  sub_10016B69C();
  swift_allocObject();
  swift_getObjectType();
  uint64_t v0 = (void *)sub_10016B710();
  return sub_10016A3D4(v0, v1, v2, v3, v4, v5);
}

uint64_t ServerBootstrap.init(validatingGroup:childGroup:)()
{
  swift_getObjectType();
  uint64_t v0 = (void *)sub_10016B710();
  return sub_10016A3D4(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100163B44(uint64_t a1, int a2)
{
  uint64_t v17 = a1;
  int v16 = a2;
  char v15 = 0;
  uint64_t v3 = *v2;
  void v7[2] = &v17;
  v7[3] = &v15;
  v7[4] = &v16;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1001AD660((void (*)(void *__return_ptr, uint64_t))sub_10016B118, (uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = (uint64_t)v4;
  if ((v15 & 1) == 0)
  {
    uint64_t v13 = &type metadata for ChannelOptions.Types.SocketOption;
    *(void *)&long long v12 = v17;
    uint64_t v11 = &type metadata for Int32;
    LODWORD(v10) = v16;
    sub_10003B908(&v12, v8);
    sub_10003B908(&v10, v9);
    sub_10003B908(v8, __src);
    sub_10003B908(v9, &__src[2]);
    *(void *)&__src[4] = sub_100169FBC;
    *((void *)&__src[4] + 1) = 0;
    sub_100034718();
    sub_1000349F4();
    uint64_t v6 = (void *)sub_10016B6F4();
    uint64_t result = (uint64_t)memcpy(v6, __src, 0x50uLL);
    *uint64_t v2 = (uint64_t)__src;
  }
  return result;
}

uint64_t sub_100163C84(int a1)
{
  int v15 = a1;
  char v14 = 0;
  uint64_t v2 = *v1;
  v6[3] = &v14;
  v6[4] = &v15;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1001AD660((void (*)(void *__return_ptr, uint64_t))sub_10016AB78, (uint64_t)v6, v2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = (uint64_t)v3;
  if ((v14 & 1) == 0)
  {
    long long v12 = &type metadata for ChannelOptions.Types.BacklogOption;
    long long v10 = &type metadata for Int32;
    LODWORD(v9) = v15;
    sub_10003B908(&v11, v7);
    sub_10003B908(&v9, v8);
    sub_10003B908(v7, __src);
    sub_10003B908(v8, &__src[2]);
    *(void *)&__src[4] = sub_100169FF0;
    *((void *)&__src[4] + 1) = 0;
    sub_100034718();
    sub_1000349F4();
    uint64_t v5 = (void *)sub_10016B6F4();
    uint64_t result = (uint64_t)memcpy(v5, __src, 0x50uLL);
    *uint64_t v1 = (uint64_t)__src;
  }
  return result;
}

uint64_t ServerBootstrap.serverChannelInitializer(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  sub_10003C350(v3);
  swift_retain();
  return swift_retain();
}

uint64_t sub_100163E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = static SocketAddress.makeAddressResolvingHost(_:port:)(a2, a3, a4);
  void v9[2] = __chkstk_darwin(v4, v5);
  uint64_t v6 = sub_100043C1C();
  *(void *)(v6 + 16) = v4;
  swift_retain();
  uint64_t v7 = sub_100164300((uint64_t (*)(void *, uint64_t, uint64_t))sub_10016B51C, (uint64_t)v9, (uint64_t)sub_10016B5D0, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_100163F80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_bridgeObjectRetain();
  unint64_t v5 = SocketAddress.init(unixDomainSocketPath:)(a2, a3);
  v10[2] = __chkstk_darwin(v5, v6);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  swift_retain();
  uint64_t v8 = sub_100164300((uint64_t (*)(void *, uint64_t, uint64_t))sub_10016B51C, (uint64_t)v10, (uint64_t)sub_10016B5D0, v7);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v8;
}

uint64_t ServerBootstrap.bind(to:)(uint64_t a1)
{
  return sub_1001683A4(a1, (uint64_t)&unk_1002E9BA0, (uint64_t)sub_10016A58C, (uint64_t)sub_10016A5AC, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))sub_100164300);
}

uint64_t ServerBootstrap.bind(unixDomainSocketPath:)()
{
  sub_10016B790();
  return sub_100163F80(v1, v2, v0);
}

uint64_t ServerBootstrap.bind(unixDomainSocketPath:cleanupExistingSocketFile:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001684A0(a1, a2, a3, 238, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100163F80);
}

uint64_t ServerBootstrap.withBoundSocket(descriptor:)(int a1)
{
  v2[4] = a1;
  return sub_100164300((uint64_t (*)(void *, uint64_t, uint64_t))sub_10016A5B4, (uint64_t)v2, (uint64_t)sub_1001642E4, 0);
}

uint64_t ServerBootstrap.withBoundSocket(_:)(int a1)
{
  v2[4] = a1;
  return sub_100164300((uint64_t (*)(void *, uint64_t, uint64_t))sub_10016B504, (uint64_t)v2, (uint64_t)sub_1001642E4, 0);
}

uint64_t sub_10016426C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100192A1C(a4, a1, a2, a3);
}

uint64_t sub_1001642E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100167C4C(a1, a2, a3, 265, (void (*)(uint64_t))sub_1001630D8);
}

uint64_t sub_100164300(uint64_t (*a1)(void *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  swift_getObjectType();
  sub_10016B660();
  uint64_t v7 = (void *)v6();
  uint64_t v9 = v8;
  uint64_t v10 = v4[5];
  uint64_t v34 = v5[4];
  sub_10006FF20();
  uint64_t v11 = v5[10];
  uint64_t v13 = v5[6];
  uint64_t v12 = v5[7];
  uint64_t v37 = v9;
  uint64_t v14 = sub_10004F2C8();
  if (v13)
  {
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v12;
    int v15 = sub_10016A78C;
  }
  else
  {
    *(void *)(v14 + 16) = v7;
    *(void *)(v14 + 24) = v9;
    swift_unknownObjectRetain();
    int v15 = sub_10016B148;
  }
  int v16 = v15;
  uint64_t v17 = sub_10004F2C8();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  uint64_t v18 = v5[8];
  uint64_t v19 = v5[9];
  sub_10006FF20();
  uint64_t v20 = v5[11];
  if (object_getClass(v7) == (Class)_TtC25ASOctaneSupportXPCService19SelectableEventLoop) {
    uint64_t v21 = v7;
  }
  else {
    uint64_t v21 = 0;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003C360(v13);
  sub_10003C360(v18);
  swift_bridgeObjectRetain();
  uint64_t v22 = a1(v21, v34, v10);
  swift_unknownObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v11;
  v23[3] = v22;
  v23[4] = sub_10016A704;
  uint64_t v23[5] = v17;
  v23[6] = v18;
  uint64_t v23[7] = v19;
  v23[8] = v20;
  v23[9] = a3;
  v23[10] = a4;
  v23[11] = v7;
  v23[12] = v37;
  uint64_t v24 = *(uint64_t (**)(uint64_t (*)(), void *, uint64_t, uint64_t, uint64_t))(v37 + 32);
  swift_unknownObjectRetain();
  sub_10003C360(v18);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = sub_100019524(&qword_1003110B0);
  uint64_t v26 = (__n128 *)v24(sub_10016B200, v23, v25, ObjectType, v37);
  swift_release();
  sub_10016B5D8();
  uint64_t v30 = sub_100120B20(v27, v28, v29, 321, v26);
  swift_release();
  swift_release();
  sub_10003C350(v18);
  swift_unknownObjectRelease();
  swift_release();
  return v30;
}

uint64_t sub_100164620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100192B84(a1, a2, a3);
}

uint64_t sub_1001646A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(swift_allocObject() + 16) = a4;
  swift_retain();
  uint64_t v4 = sub_1001647BC();
  swift_release();
  return v4;
}

void sub_100164754()
{
}

uint64_t sub_1001647BC()
{
  sub_10016B69C();
  uint64_t v3 = sub_10016B7E0();
  v4(v3);
  unint64_t v5 = (void *)sub_1001188D4();
  v5[2] = v0;
  v5[3] = v2;
  void v5[4] = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10016B7E0();
  sub_100120A9C();
  uint64_t v7 = v6;
  swift_release();
  swift_release();
  return v7;
}

void sub_10016486C(void *a1@<X8>)
{
  swift_getObjectType();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  *a1 = v2;
}

uint64_t sub_1001648D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19 = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 368);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = 0;
  swift_bridgeObjectRetain();
  sub_10016A0B8(v20, v19, a2, (uint64_t)&unk_1002EA860, (uint64_t)&unk_1002EA888, (uint64_t)sub_10016B4FC, (uint64_t)sub_10009306C);
  swift_release();
  uint64_t v21 = (void *)swift_allocObject();
  long long v21[2] = a3;
  v21[3] = a4;
  v21[4] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = a2;
  v22[3] = a5;
  v22[4] = a6;
  void v22[5] = a7;
  swift_retain();
  swift_retain();
  sub_10003C360(a5);
  swift_bridgeObjectRetain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a8;
  v23[3] = a10;
  v23[4] = a11;
  uint64_t v23[5] = a12;
  v23[6] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10016ACE4;
  *(void *)(v24 + 24) = a2;
  swift_retain();
  sub_1001B7AB8();
  swift_release();
  swift_release();
  swift_retain();
  swift_unknownObjectRetain();
  sub_100124CFC();
  uint64_t v26 = v25;
  uint64_t result = swift_release();
  *a9 = v26;
  return result;
}

uint64_t sub_100164C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10018E878(a1);
  type metadata accessor for ServerBootstrap.AcceptHandler();
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a2;
  _OWORD v8[3] = a3;
  v8[4] = a4;
  sub_10003C360(a2);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000F679C((uint64_t)v8, 0x6148747065636341, 0xED000072656C646ELL, 1, 0x8000000000000000, v7);
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_100164D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10018F308(a1, 2, 0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_100019524(&qword_10030A528);
  return EventLoop.makeFailedFuture<A>(_:file:line:)(a1, "/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 319, ObjectType, v7, a4);
}

uint64_t sub_100164D84()
{
  return swift_retain();
}

uint64_t sub_100164D8C(uint64_t a1, uint64_t a2)
{
  sub_1000318C8(a2, (uint64_t)v4);
  if (swift_dynamicCast())
  {
    uint64_t v2 = sub_1000AE91C();
    swift_getObjectType();
    v4[0] = v2;
    ChannelOutboundInvoker.close(mode:file:line:)();
    swift_unknownObjectRelease();
    swift_retain();
    swift_retain_n();
    sub_10012DD14();
    swift_release();
    swift_release();
  }
  return ChannelHandlerContext.fireUserInboundEventTriggered(_:)();
}

uint64_t sub_100164E90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for SocketChannel(0);
  uint64_t v29 = a2;
  uint64_t v6 = sub_100033028();
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v30 = *(void *)(v7 + 56);
  uint64_t v9 = *(void *)(v6 + 48);
  uint64_t v11 = v3[2];
  uint64_t v10 = v3[3];
  uint64_t v12 = swift_allocObject();
  if (v11)
  {
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v10;
    uint64_t v13 = sub_10016A78C;
  }
  else
  {
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = &protocol witness table for SelectableEventLoop;
    swift_retain();
    uint64_t v13 = sub_10016A8A4;
  }
  uint64_t v14 = v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v12;
  uint64_t ObjectType = swift_getObjectType();
  if (v9 == v8)
  {
    uint64_t v20 = v3[4];
    uint64_t v21 = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 368);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = 0;
    swift_retain_n();
    sub_10003C360(v11);
    swift_bridgeObjectRetain();
    sub_10016A0B8(v22, v21, v6, (uint64_t)&unk_1002E9F78, (uint64_t)&unk_1002E9FA0, (uint64_t)sub_10016AA94, (uint64_t)sub_100092E78);
    swift_release();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v8;
    v23[3] = &protocol witness table for SelectableEventLoop;
    v23[4] = sub_10016A704;
    uint64_t v23[5] = v15;
    v23[6] = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100120A9C();
    swift_release();
    swift_release();
    EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 362, ObjectType, v30);
    sub_100030CE8(v29, (uint64_t)&v31);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v8;
    *(void *)(v24 + 24) = v30;
    *(void *)(v24 + 32) = a1;
    long long v25 = v32;
    *(_OWORD *)(v24 + 40) = v31;
    *(_OWORD *)(v24 + 56) = v25;
    *(_OWORD *)(v24 + 72) = v33[0];
    *(_OWORD *)(v24 + 81) = *(_OWORD *)((char *)v33 + 9);
    swift_retain();
    swift_retain();
    sub_100163374((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 363);
    swift_release();
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = v8;
    void v26[3] = v30;
    v26[4] = v3;
    void v26[5] = a1;
    v26[6] = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10012DD14();
    swift_release();
    swift_release_n();
  }
  else
  {
    int v16 = (void *)swift_allocObject();
    void v16[2] = v3;
    void v16[3] = v6;
    void v16[4] = v9;
    void v16[5] = &protocol witness table for SelectableEventLoop;
    v16[6] = sub_10016A704;
    v16[7] = v15;
    swift_retain_n();
    swift_unknownObjectRetain();
    sub_10003C360(v11);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1001658D4((uint64_t)sub_10016A8FC, (uint64_t)v16);
    swift_release();
    sub_100163700(v8, v30);
    swift_release();
    EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 362, ObjectType, v30);
    sub_100030CE8(v29, (uint64_t)&v31);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v8;
    *(void *)(v17 + 24) = v30;
    *(void *)(v17 + 32) = a1;
    long long v18 = v32;
    *(_OWORD *)(v17 + 40) = v31;
    *(_OWORD *)(v17 + 56) = v18;
    *(_OWORD *)(v17 + 72) = v33[0];
    *(_OWORD *)(v17 + 81) = *(_OWORD *)((char *)v33 + 9);
    swift_unknownObjectRetain();
    swift_retain();
    sub_100163374((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 363);
    swift_release();
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v19[2] = v8;
    v19[3] = v30;
    v19[4] = v3;
    void v19[5] = a1;
    v19[6] = v6;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10012DD14();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_100165478(void *a1@<X8>)
{
  swift_getObjectType();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  *a1 = v2;
}

uint64_t sub_1001654E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _UNKNOWN **), uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 355, ObjectType, a2);
  return a3(a5, &off_1002DBF00);
}

uint64_t sub_100165560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 364, ObjectType, a3);
  uint64_t v7 = *(void *)(a4 + 32);
  sub_1000AE91C();
  uint64_t v9 = v8;
  uint64_t v10 = swift_getObjectType();
  LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v9);
  swift_unknownObjectRelease();
  if (v9)
  {
    ChannelHandlerContext.fireChannelRead(_:)();
    swift_getObjectType();
    swift_unknownObjectRetain();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v12 = v11;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)(v7 + 56);
    uint64_t v14 = swift_getObjectType();
    sub_10002F0C8();
    uint64_t v15 = swift_allocError();
    *(void *)uint64_t v16 = 2;
    *(unsigned char *)(v16 + 8) = 3;
    uint64_t v12 = EventLoop.makeFailedFuture<A>(_:file:line:)(v15, "/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 366, v14, &type metadata for ()[8], v13);
    swift_errorRelease();
  }
  return v12;
}

uint64_t sub_1001656E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 371, ObjectType, a3);
  return sub_100165A7C(a5, a6, a1);
}

uint64_t sub_100165768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 368);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = 0;
  swift_bridgeObjectRetain();
  sub_10016A0B8(v13, v12, a2, (uint64_t)&unk_1002E9F78, (uint64_t)&unk_1002E9FA0, (uint64_t)sub_10016AA94, (uint64_t)sub_100092E78);
  swift_release();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  void v14[3] = a4;
  v14[4] = a5;
  void v14[5] = a6;
  void v14[6] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_100120A9C();
  uint64_t v16 = v15;
  swift_release();
  swift_release();
  return v16;
}

__n128 *sub_1001658D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  unint64_t v5 = (__n128 *)sub_1001634F8((uint64_t)sub_10016AAD8, v4, (uint64_t)sub_10004A274, (uint64_t)&unk_1002EA018, (uint64_t)sub_10016AB08);
  swift_release();
  uint64_t v6 = sub_100120AB4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoop.swift", 111, 2, 582, v5);
  swift_release();
  return v6;
}

uint64_t sub_1001659A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  unint64_t v5 = (__n128 *)sub_1001634F8((uint64_t)sub_10016AAD8, v4, (uint64_t)sub_10004A280, (uint64_t)&unk_1002EA590, (uint64_t)sub_10016B05C);
  swift_release();
  uint64_t v6 = sub_100120B38((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoop.swift", 111, 2, 582, v5);
  swift_release();
  return v6;
}

uint64_t sub_100165A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10018E878(a1);
  ChannelPipeline.close(mode:promise:)();
  swift_release();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
  swift_unknownObjectRetain();
  LOBYTE(v6) = v8(ObjectType, v6);
  swift_unknownObjectRelease();
  if (v6) {
    return ChannelHandlerContext.fireErrorCaught(_:)();
  }
  uint64_t v10 = *(void *)(v5 + 56);
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 24);
  swift_unknownObjectRetain();
  swift_retain();
  swift_errorRetain();
  v13(sub_10016A87C, v12, v11, v10);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_100165BD8()
{
  sub_10003C350(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100165C00()
{
  uint64_t v0 = sub_100165BD8();
  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t ServerBootstrap.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_10003C350(*(void *)(v0 + 48));
  sub_10003C350(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerBootstrap.__deallocating_deinit()
{
  ServerBootstrap.deinit();
  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t (*sub_100165CB4())(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  if (v1)
  {
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = v0;
    _OWORD v3[3] = v1;
    v3[4] = v2;
    swift_retain();
    uint64_t v4 = sub_10016AEE8;
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[6];
    swift_retain();
  }
  sub_10003C360(v1);
  return v4;
}

uint64_t sub_100165D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a3 + 48);
  swift_retain();
  v9(a1, a2);
  swift_release();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  void v10[3] = a2;
  v10[4] = a4;
  v10[5] = a5;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_100120A9C();
  uint64_t v12 = v11;
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_100165E2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  uint64_t v6 = a3();
  uint64_t v7 = ChannelPipeline.addHandlers(_:position:)(v6, 0, 0x8000000000000000);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t ClientBootstrap._channelOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClientBootstrap._channelOptions.setter(uint64_t a1)
{
  sub_10004F230();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ClientBootstrap._channelOptions.modify())()
{
  return j__swift_endAccess;
}

__objc2_class *ClientBootstrap.__allocating_init(group:)(void *a1, uint64_t a2)
{
  return sub_100167A8C(a1, a2, 128, ClientBootstrap.init(validatingGroup:));
}

uint64_t ClientBootstrap.__allocating_init(validatingGroup:)(uint64_t a1, uint64_t a2)
{
  return ClientBootstrap.init(validatingGroup:)(a1, a2);
}

uint64_t ClientBootstrap.init(validatingGroup:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10002F9E0();
  *(void *)(v2 + 72) = 10000000000;
  Class = (__objc2_class *)object_getClass(v6);
  if (Class != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && Class != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a1 == 0)
  {
    swift_unknownObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v2 + 16) = a1;
    *(void *)(v2 + 24) = a2;
    swift_unknownObjectRetain();
    *(void *)(v2 + 64) = sub_100035E7C(0, 2, 0, _swiftEmptyArrayStorage);
    sub_1000578C0();
    sub_100163B44(0x100000006, 1);
    swift_endAccess();
    swift_unknownObjectRelease();
    *(void *)(v2 + 48) = sub_1001660E8;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 32) = 0;
    *(void *)(v2 + 40) = 0;
    *(_OWORD *)(v2 + 80) = 0u;
    *(_OWORD *)(v2 + 96) = 0u;
    *(void *)(v2 + 112) = 0;
    *(void *)(v2 + 120) = 0xF000000000000007;
  }
  return v3;
}

uint64_t sub_1001660E8(uint64_t a1, uint64_t a2)
{
  return sub_1001664E8(a1, a2);
}

uint64_t ClientBootstrap.channelInitializer(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  swift_retain();
  swift_release();
  return swift_retain();
}

uint64_t ClientBootstrap.protocolHandlers(_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 32))
  {
    uint64_t v7 = *(void *)(v2 + 32);
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t v9 = sub_10004F2C8();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    sub_10003C360(v7);
    uint64_t result = sub_10003C350((uint64_t)sub_10016A5D0);
    __break(1u);
  }
  else
  {
    sub_10003C360(0);
    sub_10003C350(0);
    uint64_t v5 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = a1;
    *(void *)(v2 + 40) = a2;
    sub_10003C350(v5);
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t ClientBootstrap.channelOption<A>(_:value:)()
{
  return swift_retain();
}

uint64_t ClientBootstrap.connectTimeout(_:)(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return ChannelPipeline.syncOperations.getter();
}

uint64_t ClientBootstrap.resolver(_:)(uint64_t a1)
{
  sub_1000578C0();
  sub_10016A600(a1, v1 + 80);
  swift_endAccess();
  return swift_retain();
}

uint64_t ClientBootstrap.bind(to:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 120);
  *(void *)(v1 + 120) = a1;
  sub_10002F2A0(v3);
  swift_retain();
  return swift_retain();
}

uint64_t ClientBootstrap.connect(host:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  sub_10016B69C();
  swift_getObjectType();
  sub_10016B690();
  uint64_t v9 = v8();
  uint64_t v11 = v10;
  sub_10006FF20();
  sub_100092F38(v3 + 80, (uint64_t)&v17, &qword_100314170);
  if (v18)
  {
    sub_10002F754(&v17, (uint64_t)v19);
  }
  else
  {
    uint64_t v12 = type metadata accessor for GetaddrinfoResolver();
    sub_1001188D4();
    uint64_t v13 = swift_unknownObjectRetain();
    uint64_t v14 = sub_1000501FC(v13, v11, 1, 6);
    v19[3] = v12;
    v19[4] = &off_1002DD0A8;
    v19[0] = v14;
    sub_100051BB4((uint64_t)&v17, &qword_100314170);
  }
  sub_100027788((uint64_t)v19, (uint64_t)&v17);
  uint64_t v15 = *(void *)(v3 + 72);
  type metadata accessor for HappyEyeballsConnector();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001A6AC8((uint64_t)&v17, v9, v11, v5, v4, a3, v15, 50000000, 250000000, (uint64_t)sub_10016A668, v6);
  sub_1001A6C40();
  sub_10016B814();
  swift_unknownObjectRelease();
  sub_10001C2EC((uint64_t)v19);
  return a3;
}

uint64_t sub_1001664A4(void *a1, uint64_t a2, int a3)
{
  return sub_10016658C(a1, a2, a3);
}

uint64_t sub_1001664E0(uint64_t a1, uint64_t a2)
{
  return sub_1001664E8(a1, a2);
}

uint64_t sub_1001664E8(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(a2 + 8) + 80))(ObjectType);
  swift_getObjectType();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v5 = v4;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_10016658C(void *a1, uint64_t a2, int a3)
{
  if (object_getClass(a1) == (Class)_TtC25ASOctaneSupportXPCService19SelectableEventLoop) {
    uint64_t v5 = (uint64_t)a1;
  }
  else {
    uint64_t v5 = 0;
  }
  type metadata accessor for SocketChannel(0);
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_100192D3C(v5, a3);
  swift_retain();
  sub_1001669F8();
  uint64_t v7 = v6;
  swift_release_n();
  return v7;
}

uint64_t sub_1001666AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 80);
  v7(ObjectType, v6);
  uint64_t v9 = v8;
  uint64_t v10 = swift_getObjectType();
  uint64_t v11 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 598, v10, (uint64_t)&type metadata for ()[8], v9);
  swift_unknownObjectRelease();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24);
  swift_retain();
  v12(a3, v11, ObjectType, v6);
  swift_release();
  v7(ObjectType, v6);
  uint64_t v14 = v13;
  uint64_t v20 = swift_getObjectType();
  uint64_t v15 = *(void *)(v21 + 72);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v11;
  void v16[3] = v21;
  void v16[4] = a1;
  void v16[5] = a2;
  long long v17 = *(void (**)(uint64_t, uint64_t (*)(), void *, char *, uint64_t, uint64_t))(v14 + 48);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v17(v15, sub_10016B0F0, v16, &type metadata for ()[8], v20, v14);
  swift_release();
  swift_unknownObjectRelease();
  swift_retain_n();
  swift_retain_n();
  sub_10012DE30();
  swift_release();
  swift_release_n();
  return v11;
}

#error "10016692C: call analysis failed (funcsize=45)"

#error "1001669CC: call analysis failed (funcsize=29)"

void sub_1001669F8()
{
  sub_1000B784C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_100165CB4();
  uint64_t v10 = v9;
  sub_10004F1B0();
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v12 = *(void *)(v7 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (sub_1000C6ADC())
  {
    uint64_t v13 = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 368);
    uint64_t v14 = sub_10004F2C8();
    *(void *)(v14 + 16) = v11;
    *(void *)(v14 + 24) = 0;
    swift_bridgeObjectRetain();
    sub_10016A0B8(v14, v13, v7, (uint64_t)&unk_1002E9F78, (uint64_t)&unk_1002E9FA0, (uint64_t)sub_10016AA94, (uint64_t)sub_100092E78);
    swift_release();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v15[2] = v1;
    void v15[3] = v7;
    _OWORD v15[4] = v8;
    void v15[5] = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10016B5D8();
    sub_100120A9C();
    swift_release();
    swift_release();
    uint64_t v16 = (void *)swift_allocObject();
    void v16[2] = v12;
    void v16[3] = &protocol witness table for SelectableEventLoop;
    void v16[4] = v7;
    void v16[5] = v5;
    v16[6] = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10016B5D8();
    sub_100120A9C();
    swift_release();
    swift_release();
    uint64_t v17 = sub_10004F2C8();
    *(void *)(v17 + 16) = sub_10016ACE4;
    *(void *)(v17 + 24) = v7;
    swift_retain();
    sub_10016B5D8();
    sub_1001B7AB8();
    swift_release();
    swift_release();
    swift_retain();
    sub_10016B5D8();
    sub_100124CE4();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v12;
    void v18[3] = &protocol witness table for SelectableEventLoop;
    v18[4] = v11;
    void v18[5] = v7;
    v18[6] = v0;
    v18[7] = v8;
    v18[8] = v10;
    v18[9] = v5;
    v18[10] = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1001659A8((uint64_t)sub_10016AF98, (uint64_t)v18);
    swift_release();
  }
  swift_release();
  swift_release();
  sub_10002FD48();
}

uint64_t ClientBootstrap.connect(to:)(unint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_10016B690();
  uint64_t v5 = (void *)v4();
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)((char *)&unk_100264578 + ((a1 >> 60) & 0xC));
  uint64_t v9 = sub_10004F2C8();
  *(void *)(v9 + 16) = v2;
  *(void *)(v9 + 24) = a1;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_10016658C(v5, v7, v8);
  swift_unknownObjectRelease();
  swift_release();
  return v10;
}

uint64_t ClientBootstrap.connect(unixDomainSocketPath:)()
{
  sub_10016B790();
  unint64_t v2 = SocketAddress.init(unixDomainSocketPath:)(v1, v0);
  uint64_t v3 = ClientBootstrap.connect(to:)(v2);
  swift_release();
  return v3;
}

uint64_t ClientBootstrap.withConnectedSocket(_:)()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_10016B660();
  uint64_t v3 = (void *)v2();
  uint64_t v5 = v4;
  uint64_t v6 = sub_100165CB4();
  uint64_t v8 = v7;
  object_getClass(v3);
  type metadata accessor for SocketChannel(0);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v10 = v9;
  uint64_t v11 = sub_100192DFC();
  swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v5 + 16);
  swift_retain();
  uint64_t v13 = sub_10016B748();
  if (v12(v13))
  {
    sub_10016710C();
    sub_10016B678();
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = v3;
    void v14[3] = v5;
    v14[4] = v1;
    void v14[5] = v11;
    void v14[6] = v6;
    v14[7] = v8;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_100019524(&qword_10030A528);
    sub_10016B774();
    sub_10016B678();
    swift_release();
    swift_release();
    swift_release();
  }
  return v10;
}

void sub_10016710C()
{
  sub_1000B784C();
  sub_10016B6CC();
  sub_10016B5D8();
  EventLoop.assertInEventLoop(file:line:)(v5, v6, v7, 672, v8, v1);
  sub_10004F1B0();
  uint64_t v9 = sub_10016B72C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/Swi"
                              "ftNIO/ChannelOption.swift");
  uint64_t v10 = sub_10004F2C8();
  sub_10016B7C0(v10);
  sub_10016A0B8(v4, v9, v0, (uint64_t)&unk_1002E9F78, (uint64_t)&unk_1002E9FA0, (uint64_t)sub_10016AA94, (uint64_t)sub_100092E78);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = (void *)sub_1001188D4();
  void v11[2] = v3;
  uint64_t v11[3] = v2;
  v11[4] = v0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10016B5D8();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v12 = (void *)sub_1001188D4();
  sub_10016B7F4(v12);
  swift_retain();
  swift_unknownObjectRetain();
  sub_10016B5D8();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v13 = sub_10004F2C8();
  *(void *)(v13 + 16) = sub_10016ACE4;
  *(void *)(v13 + 24) = v0;
  swift_retain();
  sub_10016B5D8();
  sub_1001B7AB8();
  swift_release();
  swift_release();
  swift_retain();
  sub_10016B5D8();
  sub_100124DA4();
  sub_10016B814();
  sub_10002FD48();
}

uint64_t sub_100167348()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100167374()
{
  sub_10016B838();
  sub_100019524(&qword_1003110B0);
  uint64_t v0 = sub_1001412AC();
  sub_10016B620(v0, (uint64_t)&protocol witness table for SelectableEventLoop);
  swift_retain();
  return v0;
}

uint64_t sub_1001673CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _UNKNOWN **), uint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 120);
  if ((~v7 & 0xF000000000000007) == 0) {
    return a3(a2, &off_1002DBF00);
  }
  swift_retain();
  sub_100163484(v7, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 718, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000328A4);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  _OWORD v9[3] = a4;
  v9[4] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100120A9C();
  uint64_t v11 = v10;
  swift_release();
  swift_release();
  sub_10002F2A0(v7);
  return v11;
}

uint64_t sub_1001674FC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 725, ObjectType, a2);
  return sub_1001647BC();
}

uint64_t sub_1001675A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 715, ObjectType, a2);
  uint64_t v17 = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 368);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = 0;
  swift_bridgeObjectRetain();
  sub_10016A0B8(v18, v17, a4, (uint64_t)&unk_1002E9F78, (uint64_t)&unk_1002E9FA0, (uint64_t)sub_10016AA94, (uint64_t)sub_100092E78);
  swift_release();
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v19[2] = a5;
  v19[3] = a4;
  v19[4] = a6;
  void v19[5] = a7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a1;
  void v20[3] = a2;
  v20[4] = a4;
  void v20[5] = a8;
  v20[6] = a9;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10016ACE4;
  *(void *)(v21 + 24) = a4;
  swift_retain();
  sub_1001B7AB8();
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v22 = sub_100124CE4();
  swift_release();
  return v22;
}

uint64_t ClientBootstrap.deinit()
{
  swift_unknownObjectRelease();
  sub_10003C350(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_100051BB4(v0 + 80, &qword_100314170);
  sub_10002F2A0(*(void *)(v0 + 120));
  return v0;
}

uint64_t ClientBootstrap.__deallocating_deinit()
{
  ClientBootstrap.deinit();
  return _swift_deallocClassInstance(v0, 128, 7);
}

uint64_t sub_10016790C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  uint64_t result = ClientBootstrap.channelInitializer(_:)(a1, a2);
  *a3 = v5;
  return result;
}

uint64_t sub_100167938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  uint64_t result = ClientBootstrap.protocolHandlers(_:)(a1, a2);
  *a3 = v5;
  return result;
}

uint64_t sub_100167964@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = ClientBootstrap.channelOption<A>(_:value:)();
  *a1 = v3;
  return result;
}

uint64_t sub_100167990@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t result = ClientBootstrap.connectTimeout(_:)(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1001679BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ClientBootstrap.connect(host:port:)(a1, a2, a3);
}

uint64_t sub_1001679E0(unint64_t a1)
{
  return ClientBootstrap.connect(to:)(a1);
}

uint64_t sub_100167A04()
{
  return ClientBootstrap.connect(unixDomainSocketPath:)();
}

uint64_t (*DatagramBootstrap._channelOptions.modify())()
{
  return j_j__swift_endAccess;
}

__objc2_class *DatagramBootstrap.__allocating_init(group:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10016B6C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))DatagramBootstrap.init(validatingGroup:));
}

__objc2_class *sub_100167A8C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = (__objc2_class *)object_getClass(a1);
  if (result != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && result != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a1 == 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_unknownObjectRetain();
    uint64_t result = (__objc2_class *)a4(v11, a2);
    if (result)
    {
      sub_10016B678();
      return (__objc2_class *)v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t DatagramBootstrap.withBoundSocket(descriptor:)(int a1)
{
  v2[4] = a1;
  return sub_100167CD8((uint64_t (*)(void *))sub_10016A6B8, (uint64_t)v2, (uint64_t)sub_100167C30, 0);
}

uint64_t DatagramBootstrap.withBoundSocket(_:)(int a1)
{
  v2[4] = a1;
  return sub_100167CD8((uint64_t (*)(void *))sub_10016B4CC, (uint64_t)v2, (uint64_t)sub_100167C30, 0);
}

uint64_t sub_100167BDC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DatagramChannel(0);
  uint64_t v3 = swift_retain();
  return sub_100192C40(v3, a2);
}

uint64_t sub_100167C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100167C4C(a1, a2, a3, 846, (void (*)(uint64_t))sub_1001630D8);
}

uint64_t sub_100167C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_10016B64C();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, v5, ObjectType, (uint64_t)&type metadata for ()[8], v6);
  uint64_t v10 = swift_retain();
  a5(v10);
  swift_release();
  return v9;
}

uint64_t sub_100167CD8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_getObjectType();
  sub_10016B660();
  uint64_t v10 = (void *)v9();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v4 + 32);
  uint64_t v14 = *(void *)(v5 + 40);
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v15 = sub_10004F2C8();
  if (v13)
  {
    *(void *)(v15 + 16) = v13;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = sub_10016A78C;
  }
  else
  {
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v12;
    swift_unknownObjectRetain();
    uint64_t v16 = sub_10016AD70;
  }
  uint64_t v17 = v16;
  uint64_t v18 = sub_10004F2C8();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v15;
  sub_10006FF20();
  uint64_t v19 = *(void *)(v5 + 48);
  if (object_getClass(v10) == (Class)_TtC25ASOctaneSupportXPCService19SelectableEventLoop) {
    uint64_t v20 = v10;
  }
  else {
    uint64_t v20 = 0;
  }
  swift_unknownObjectRetain();
  sub_10003C360(v13);
  swift_bridgeObjectRetain();
  uint64_t v21 = a1(v20);
  swift_unknownObjectRelease();
  swift_getObjectType();
  uint64_t v22 = *(uint64_t (**)(uint64_t))(v12 + 16);
  swift_retain();
  uint64_t v23 = sub_10016B748();
  if (v22(v23))
  {
    sub_1001687B0((uint64_t)v10, v12, v19, v21, (uint64_t)sub_10016A704, v18, v26, v27);
    sub_10016B678();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v24 = (void *)sub_1001412AC();
    v24[2] = v10;
    v24[3] = v12;
    v24[4] = v19;
    void v24[5] = v21;
    v24[6] = sub_10016A704;
    v24[7] = v18;
    v24[8] = v26;
    v24[9] = v27;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_100019524(&qword_10030A528);
    sub_10016B774();
    sub_10016B678();
    swift_release();
    swift_release();
    swift_release();
  }
  return v27;
}

uint64_t DatagramBootstrap.bind(host:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100167FC0(a1, a2, a3, sub_10016802C);
}

uint64_t sub_100167FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  return a4(v4, a1, a2, a3);
}

uint64_t sub_10016802C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = static SocketAddress.makeAddressResolvingHost(_:port:)(a2, a3, a4);
  void v9[2] = __chkstk_darwin(v4, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  swift_retain();
  uint64_t v7 = sub_100167CD8((uint64_t (*)(void *))sub_10016B4E4, (uint64_t)v9, (uint64_t)sub_10016B5CC, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1001681C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_bridgeObjectRetain();
  unint64_t v5 = SocketAddress.init(unixDomainSocketPath:)(a2, a3);
  v10[2] = __chkstk_darwin(v5, v6);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  swift_retain();
  uint64_t v8 = sub_100167CD8((uint64_t (*)(void *))sub_10016B4E4, (uint64_t)v10, (uint64_t)sub_10016B5CC, v7);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v8;
}

uint64_t DatagramBootstrap.bind(to:)(uint64_t a1)
{
  return sub_1001683A4(a1, (uint64_t)&unk_1002E9C40, (uint64_t)sub_10016A6D4, (uint64_t)sub_10016A6F4, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))sub_100167CD8);
}

uint64_t sub_1001683A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void *, uint64_t, uint64_t))
{
  void v12[2] = a1;
  uint64_t v9 = sub_100043C1C();
  *(void *)(v9 + 16) = a1;
  swift_retain_n();
  uint64_t v10 = a5(a3, v12, a4, v9);
  swift_release_n();
  swift_release();
  return v10;
}

uint64_t DatagramBootstrap.bind(unixDomainSocketPath:)()
{
  sub_10016B790();
  return sub_1001681C0(v1, v2, v0);
}

uint64_t DatagramBootstrap.bind(unixDomainSocketPath:cleanupExistingSocketFile:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001684A0(a1, a2, a3, 891, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001681C0);
}

uint64_t sub_1001684A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_10016B69C();
  if (v8) {
    sub_1001529BC(v7, v6);
  }
  swift_bridgeObjectRetain();
  return a5(v5, v7, v6);
}

uint64_t sub_1001685B8(uint64_t a1, unint64_t a2)
{
  int v2 = *(_DWORD *)((char *)&unk_100264578 + ((a2 >> 60) & 0xC));
  type metadata accessor for DatagramChannel(0);
  swift_allocObject();
  uint64_t v3 = swift_retain();
  return sub_1001946C0(v3, v2);
}

uint64_t sub_100168628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  sub_1001FAAF4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 910);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  swift_retain();
  sub_100120A9C();
  uint64_t v8 = v7;
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1001686F4(uint64_t a1, uint64_t a2)
{
  return sub_100163484(a2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 911, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000328A4);
}

void sub_100168748(void *a1@<X8>)
{
  swift_getObjectType();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  *a1 = v2;
}

uint64_t sub_1001687B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_getObjectType();
  sub_10016B5D8();
  EventLoop.assertInEventLoop(file:line:)(v15, v16, v17, 929, v18, a2);
  uint64_t v19 = sub_10016B72C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/Sw"
                               "iftNIO/ChannelOption.swift");
  uint64_t v20 = sub_10004F2C8();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = 0;
  swift_bridgeObjectRetain();
  sub_10016A0B8(v20, v19, a4, (uint64_t)&unk_1002EA360, (uint64_t)&unk_1002EA388, (uint64_t)sub_10016B4FC, (uint64_t)sub_10009306C);
  swift_release();
  uint64_t v21 = (void *)sub_1001188D4();
  long long v21[2] = a5;
  v21[3] = a6;
  v21[4] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10016B5D8();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = a1;
  v22[3] = a2;
  v22[4] = a7;
  void v22[5] = a8;
  v22[6] = a4;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_10016B5D8();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v23 = sub_10004F2C8();
  *(void *)(v23 + 16) = sub_10016ACE4;
  *(void *)(v23 + 24) = a4;
  swift_retain();
  sub_10016B5D8();
  sub_1001B7AB8();
  swift_release();
  swift_release();
  swift_unknownObjectRetain();
  sub_10016B5D8();
  sub_100124DBC();
  sub_10016B814();
  return a2;
}

uint64_t sub_100168A48(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, 933, ObjectType, a2);
  return a3(a1, a2, a5);
}

uint64_t sub_100168AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_100019524(&qword_10030A528);
  uint64_t v5 = sub_10016B5E4();
  return EventLoop.makeFailedFuture<A>(_:file:line:)(v5, v6, v7, v8, 938, ObjectType, v9, a3);
}

uint64_t _s25ASOctaneSupportXPCService17DatagramBootstrapC15_channelOptionsAA07ChannelG0V7StorageVvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s25ASOctaneSupportXPCService17DatagramBootstrapC15_channelOptionsAA07ChannelG0V7StorageVvs_0(uint64_t a1)
{
  sub_10004F230();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t NIOPipeBootstrap.__allocating_init(validatingGroup:)(uint64_t a1, uint64_t a2)
{
  return DatagramBootstrap.init(validatingGroup:)(a1, a2);
}

void *_s25ASOctaneSupportXPCService17DatagramBootstrapC15validatingGroupACSgAA09EventLoopG0_p_tcfc_0(uint64_t a1, uint64_t a2)
{
  sub_10002F9E0();
  Class = (__objc2_class *)object_getClass(v5);
  if (Class != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && Class != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a1 == 0)
  {
    swift_unknownObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    uint64_t v9 = sub_100035E7C(0, 2, 0, _swiftEmptyArrayStorage);
    v2[5] = 0;
    v2[6] = v9;
    v2[2] = a1;
    v2[3] = a2;
    v2[4] = 0;
  }
  return v2;
}

uint64_t _s25ASOctaneSupportXPCService17DatagramBootstrapC18channelInitializeryACXDAA15EventLoopFutureCyytGAA7Channel_pcF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  sub_10003C350(v3);
  swift_retain();
  return swift_retain();
}

uint64_t _s25ASOctaneSupportXPCService17DatagramBootstrapC13channelOption_5valueACXDx_5ValueQztAA07ChannelG0RzlF_0()
{
  return swift_retain();
}

void sub_100168D2C()
{
  type metadata accessor for MultiThreadedEventLoopGroup();
  uint64_t v1 = static MultiThreadedEventLoopGroup.currentEventLoop.getter();
  swift_unknownObjectRelease();
  if (v1) {
    __break(1u);
  }
  sub_1001B75A8();
  if (!v0)
  {
    sub_10024E230();
    if (!(unsigned __int16)sub_10024E270()
      || !(unsigned __int16)sub_10024E250()
      || !(unsigned __int16)sub_10024E260()
      || !(unsigned __int16)sub_10024E240())
    {
      sub_10002F0C8();
      swift_allocError();
      *(void *)uint64_t v2 = 1;
      *(unsigned char *)(v2 + 8) = 3;
      swift_willThrow();
    }
  }
}

uint64_t NIOPipeBootstrap.withInputOutputDescriptor(_:)(int a1)
{
  int v1 = dup(a1);
  NIOPipeBootstrap.withPipes(inputDescriptor:outputDescriptor:)();
  uint64_t v3 = v2;
  sub_10016B5D8();
  uint64_t v7 = sub_1001210A0(v4, v5, v6, 1055, v3, v1);
  swift_release();
  return v7;
}

void NIOPipeBootstrap.withPipes(inputDescriptor:outputDescriptor:)()
{
  sub_1000B784C();
  if (v1 == v2 || (int v3 = v2, v4 = v1, (v2 | v1) < 0))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v0;
    swift_getObjectType();
    sub_10016B660();
    uint64_t v7 = (void *)v6();
    uint64_t v9 = v8;
    sub_100168D2C();
    sub_100168D2C();
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v11 = *(void *)(v5 + 40);
    uint64_t v12 = sub_10004F2C8();
    if (v10)
    {
      *(void *)(v12 + 16) = v10;
      *(void *)(v12 + 24) = v11;
      uint64_t v13 = sub_10016A78C;
    }
    else
    {
      *(void *)(v12 + 16) = v7;
      *(void *)(v12 + 24) = v9;
      swift_unknownObjectRetain();
      uint64_t v13 = sub_10016A6FC;
    }
    uint64_t v14 = v13;
    uint64_t v15 = sub_10004F2C8();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = v12;
    uint64_t v23 = v15;
    type metadata accessor for NIOFileHandle();
    uint64_t v16 = sub_100043C1C();
    *(_DWORD *)(v16 + 20) = v4;
    *(unsigned char *)(v16 + 16) = 1;
    uint64_t v17 = sub_100043C1C();
    *(_DWORD *)(v17 + 20) = v3;
    *(unsigned char *)(v17 + 16) = 1;
    if (object_getClass(v7) == (Class)_TtC25ASOctaneSupportXPCService19SelectableEventLoop) {
      uint64_t v18 = v7;
    }
    else {
      uint64_t v18 = 0;
    }
    type metadata accessor for PipeChannel();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_10003C360(v10);
    uint64_t v19 = sub_1000C9A88(v18, v16, v17);
    swift_getObjectType();
    uint64_t v20 = *(uint64_t (**)(uint64_t))(v9 + 16);
    swift_retain();
    uint64_t v21 = sub_10016B748();
    if (v20(v21))
    {
      sub_1001692EC();
      sub_10016B678();
      swift_release();
      swift_release_n();
    }
    else
    {
      uint64_t v22 = (void *)swift_allocObject();
      void v22[2] = v7;
      v22[3] = v9;
      v22[4] = v5;
      void v22[5] = v19;
      v22[6] = sub_10016A704;
      v22[7] = v23;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_100019524(&qword_10030A528);
      sub_10016B774();
      sub_10016B678();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_10002FD48();
  }
}

uint64_t sub_100169224(uint64_t a1, int a2)
{
  sub_100028D58(a2);
  if (v2)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_willThrow();
    return swift_errorRetain();
  }
  return result;
}

void sub_100169284(void *a1@<X8>)
{
  swift_getObjectType();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  *a1 = v2;
}

void sub_1001692EC()
{
  sub_1000B784C();
  sub_10016B6CC();
  sub_10016B5D8();
  EventLoop.assertInEventLoop(file:line:)(v5, v6, v7, 1102, v8, v1);
  sub_10004F1B0();
  uint64_t v9 = sub_10016B72C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/Swi"
                              "ftNIO/ChannelOption.swift");
  uint64_t v10 = sub_10004F2C8();
  sub_10016B7C0(v10);
  sub_10016A0B8(v4, v9, v0, (uint64_t)&unk_1002EA180, (uint64_t)&unk_1002EA1A8, (uint64_t)sub_10016B4FC, (uint64_t)sub_10009306C);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = (void *)sub_1001188D4();
  void v11[2] = v3;
  uint64_t v11[3] = v2;
  v11[4] = v0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10016B5D8();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v12 = (void *)sub_1001188D4();
  sub_10016B7F4(v12);
  swift_retain();
  swift_unknownObjectRetain();
  sub_10016B5D8();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v13 = sub_10004F2C8();
  *(void *)(v13 + 16) = sub_10016ACE4;
  *(void *)(v13 + 24) = v0;
  swift_retain();
  sub_10016B5D8();
  sub_1001B7AB8();
  swift_release();
  swift_release();
  swift_retain();
  sub_10016B5D8();
  sub_100124E3C();
  sub_10016B814();
  sub_10002FD48();
}

uint64_t sub_100169528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  sub_10016B5D8();
  EventLoop.assertInEventLoop(file:line:)(v11, v12, v13, a4, ObjectType, a2);
  uint64_t v14 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Bootstrap.swift", 111, 2, a5, ObjectType, (uint64_t)&type metadata for ()[8], a2);
  uint64_t v15 = swift_retain();
  a6(v15);
  swift_release();
  return v14;
}

uint64_t sub_1001695EC()
{
  sub_1001922A0();
  sub_100019524(&qword_1003110B0);
  uint64_t v0 = sub_1001412AC();
  sub_10016B620(v0, (uint64_t)&protocol witness table for SelectableEventLoop);
  swift_retain();
  return v0;
}

uint64_t _s25ASOctaneSupportXPCService17DatagramBootstrapCfd_0()
{
  swift_unknownObjectRelease();
  sub_10003C350(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NIOPipeBootstrap.__deallocating_deinit()
{
  DatagramBootstrap.deinit();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1001696B0(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, void (*a4)(uint64_t, void, uint64_t))
{
  a2(&v8);
  uint64_t v6 = swift_retain();
  a4(v6, 0, a1);
  return swift_release_n();
}

uint64_t (*sub_100169770(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_unknownObjectRetain();
  return sub_10016B13C;
}

uint64_t (*sub_1001697DC(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_unknownObjectRetain();
  return sub_10016AC2C;
}

uint64_t sub_100169848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1000318C8(a1, (uint64_t)v14);
  swift_dynamicCast();
  sub_1000318C8(a2, (uint64_t)v12);
  swift_dynamicCast();
  uint64_t v8 = *(uint64_t (**)(unsigned char *, unsigned char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 64);
  unint64_t v9 = sub_100071D38();
  return v8(v13, v11, &type metadata for ChannelOptions.Types.SocketOption, v9, ObjectType, a4);
}

uint64_t sub_100169928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1000318C8(a1, (uint64_t)v13);
  swift_dynamicCast();
  sub_1000318C8(a2, (uint64_t)v12);
  swift_dynamicCast();
  uint64_t v8 = *(uint64_t (**)(unint64_t, unsigned char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 64);
  unint64_t v9 = sub_10016AC34();
  return v8(v9, v11, &type metadata for ChannelOptions.Types.BacklogOption, v9, ObjectType, a4);
}

uint64_t sub_100169A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v39 = a4;
  uint64_t v9 = a1 + 32;
  sub_1000318C8(a1, (uint64_t)v35);
  sub_1000318C8(v9, (uint64_t)v36);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v37 = *(void *)(a1 + 64);
  uint64_t v10 = v37;
  uint64_t v38 = v11;
  sub_10003B908(v35, v31);
  sub_10003B908(v36, v32);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v33 = sub_10016B5BC;
  uint64_t v34 = v12;
  sub_1000318C8((uint64_t)v31, (uint64_t)v26);
  sub_1000318C8((uint64_t)v32, (uint64_t)v27);
  uint64_t v28 = sub_10016B5BC;
  uint64_t v29 = v12;
  sub_10003B908(v26, v30);
  swift_retain();
  sub_10001C2EC((uint64_t)v27);
  sub_1000318C8((uint64_t)v30, (uint64_t)v26);
  if (!swift_dynamicCast())
  {
    *(void *)&long long v21 = 0;
    BYTE8(v21) = 1;
    sub_10001C2EC((uint64_t)v30);
    goto LABEL_8;
  }
  uint64_t v13 = a3;
  int v14 = v39;
  if (v21 != a2 || DWORD1(v21) != HIDWORD(a2))
  {
    sub_10001C2EC((uint64_t)v30);
LABEL_8:
    sub_10003B908(v31, v26);
    sub_10003B908(v32, v27);
    uint64_t v16 = v33;
    uint64_t v17 = v34;
    uint64_t v28 = v33;
    uint64_t v29 = v34;
    sub_10003B908(v26, &v21);
    sub_10003B908(v27, v23);
    uint64_t v24 = v16;
    uint64_t v25 = v17;
    sub_10003B908(&v21, (_OWORD *)a5);
    sub_10003B908(v23, (_OWORD *)(a5 + 32));
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v16;
    *(void *)(result + 24) = v17;
    *(void *)(a5 + 64) = sub_10016B5C0;
    *(void *)(a5 + 72) = result;
    return result;
  }
  *uint64_t v13 = 1;
  uint64_t v22 = &type metadata for ChannelOptions.Types.SocketOption;
  *(void *)&long long v21 = a2;
  uint64_t v20 = &type metadata for Int32;
  LODWORD(v19) = v14;
  sub_10001C2EC((uint64_t)v30);
  sub_100051BB4((uint64_t)v31, &qword_10030A598);
  sub_10003B908(&v21, v26);
  sub_10003B908(&v19, v27);
  sub_10003B908(v26, (_OWORD *)a5);
  uint64_t result = (uint64_t)sub_10003B908(v27, (_OWORD *)(a5 + 32));
  *(void *)(a5 + 64) = sub_100169FBC;
  *(void *)(a5 + 72) = 0;
  return result;
}

uint64_t sub_100169CB0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1 + 32;
  sub_1000318C8(a1, (uint64_t)v32);
  sub_1000318C8(v8, (uint64_t)v33);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v34 = *(void *)(a1 + 64);
  uint64_t v10 = v34;
  uint64_t v35 = v9;
  sub_10003B908(v32, v28);
  sub_10003B908(v33, v29);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  uint64_t v30 = sub_10016AC80;
  uint64_t v31 = v11;
  sub_1000318C8((uint64_t)v28, (uint64_t)v23);
  sub_1000318C8((uint64_t)v29, (uint64_t)v24);
  uint64_t v25 = sub_10016AC80;
  uint64_t v26 = v11;
  sub_10003B908(v23, v27);
  swift_retain();
  sub_10001C2EC((uint64_t)v24);
  sub_1000318C8((uint64_t)v27, (uint64_t)v23);
  if (swift_dynamicCast())
  {
    *a2 = 1;
    long long v19 = &type metadata for ChannelOptions.Types.BacklogOption;
    uint64_t v17 = &type metadata for Int32;
    LODWORD(v16) = a3;
    sub_10001C2EC((uint64_t)v27);
    sub_100051BB4((uint64_t)v28, &qword_10030A598);
    sub_10003B908(&v18, v23);
    sub_10003B908(&v16, v24);
    sub_10003B908(v23, (_OWORD *)a4);
    sub_10003B908(v24, (_OWORD *)(a4 + 32));
    uint64_t result = 0;
    uint64_t v13 = sub_100169FF0;
  }
  else
  {
    LOBYTE(v18) = 1;
    sub_10001C2EC((uint64_t)v27);
    sub_10003B908(v28, v23);
    sub_10003B908(v29, v24);
    int v14 = v30;
    uint64_t v15 = v31;
    uint64_t v25 = v30;
    uint64_t v26 = v31;
    sub_10003B908(v23, &v18);
    sub_10003B908(v24, v20);
    long long v21 = v14;
    uint64_t v22 = v15;
    sub_10003B908(&v18, (_OWORD *)a4);
    sub_10003B908(v20, (_OWORD *)(a4 + 32));
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v14;
    *(void *)(result + 24) = v15;
    uint64_t v13 = sub_10016AC88;
  }
  *(void *)(a4 + 64) = v13;
  *(void *)(a4 + 72) = result;
  return result;
}

uint64_t (*sub_100169F1C(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, void *)))()
{
  v5[0] = a1;
  v5[1] = a2;
  a3(&v4, v5);
  *(_OWORD *)(sub_10004F2C8() + 16) = v4;
  return sub_10016AAA0;
}

uint64_t sub_100169F84(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v4);
  return v4;
}

uint64_t sub_100169FBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10016A024(a1, (uint64_t (*)(void, void))sub_100169770, (uint64_t)sub_10016B5B8, a2);
}

uint64_t sub_100169FF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10016A024(a1, (uint64_t (*)(void, void))sub_1001697DC, (uint64_t)sub_10016ABCC, a2);
}

uint64_t sub_10016A024@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void)@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v6 = a2(*a1, a1[1]);
  uint64_t v8 = v7;
  uint64_t result = sub_10004F2C8();
  *(void *)(result + 16) = v6;
  *(void *)(result + 24) = v8;
  *a4 = a3;
  a4[1] = result;
  return result;
}

uint64_t sub_10016A088@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_10016A0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v20)(_OWORD *__return_ptr, long long *);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  long long v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _OWORD v35[3];
  long long v36;
  uint64_t v37;
  long long v38;
  void (*v39)(_OWORD *__return_ptr, long long *);
  _OWORD v40[2];
  _OWORD v41[2];

  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  unint64_t v18 = *(void *)(a1 + 24);
  unint64_t v19 = *(void *)(v17 + 16);
  if (v18 != v19)
  {
    if (v18 >= v19)
    {
      __break(1u);
      return;
    }
    sub_100092F38(v17 + 80 * v18 + 32, (uint64_t)&v36, &qword_10030A598);
    *(void *)(a1 + 24) = v18 + 1;
    if (v37)
    {
      sub_10003B908(&v36, &v26);
      sub_10003B908(&v38, &v29);
      uint64_t v25 = a7;
      uint64_t v20 = v39;
      sub_10003B908(&v26, v34);
      sub_10003B908(&v29, v35);
      sub_10003B908(v34, v41);
      sub_10003B908(v35, v40);
      *(void *)&uint64_t v36 = a3;
      *((void *)&v36 + 1) = &off_1002DBF00;
      swift_retain();
      swift_retain();
      v20(v34, &v36);
      swift_release();
      (*(void (**)(long long *__return_ptr, _OWORD *, _OWORD *))&v34[0])(&v36, v41, v40);
      swift_release();
      long long v21 = (void *)swift_allocObject();
      long long v21[2] = a1;
      v21[3] = a2;
      v21[4] = a3;
      void v21[5] = &off_1002DBF00;
      uint64_t v22 = sub_10004F2C8();
      *(void *)(v22 + 16) = a6;
      *(void *)(v22 + 24) = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 378, v25, v22);
      swift_release();
      swift_release();
      sub_10002DDEC(a2);
      swift_release();
      swift_release_n();
      sub_10001C2EC((uint64_t)v40);
      sub_10001C2EC((uint64_t)v41);
      return;
    }
  }
  sub_1000B44D0(0, 0, a2, v12, v13, v14, v15, v16, v23, v24, v26, *((uint64_t *)&v26 + 1), v27, v28, v29, *((uint64_t *)&v29 + 1), v30, v31, v32,
    v33,
    *(uint64_t *)&v34[0],
    *((uint64_t *)&v34[0] + 1));
}

uint64_t sub_10016A2F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X2>, int *a4@<X3>, uint64_t a5@<X8>)
{
  return sub_100169A00(a1, *a2, a3, *a4, a5);
}

__objc2_class *sub_10016A328(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (__objc2_class *)object_getClass(a1);
  if (result != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && result != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a1 == 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = (void *)swift_unknownObjectRetain_n();
    uint64_t result = (__objc2_class *)sub_10016A3D4(v11, a1, a4, v10, a3, a4);
    if (result)
    {
      uint64_t v12 = result;
      swift_unknownObjectRelease();
      return v12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10016A3D4(id a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    id v10 = a2;
  }
  else
  {
    swift_unknownObjectRetain();
    id v10 = a1;
    a3 = a6;
  }
  Class = (__objc2_class *)object_getClass(a1);
  BOOL v13 = Class != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
     && Class != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
     || a1 == 0;
  if (v13
    || ((uint64_t v14 = (__objc2_class *)object_getClass(v10),
         v14 != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup)
      ? (BOOL v15 = v14 == _TtC25ASOctaneSupportXPCService19SelectableEventLoop)
      : (BOOL v15 = 1),
        v15 ? (BOOL v16 = v10 == 0) : (BOOL v16 = 1),
        v16))
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(a4 + 16) = a1;
    *(void *)(a4 + 24) = a6;
    *(void *)(a4 + 32) = v10;
    *(void *)(a4 + 40) = a3;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    *(void *)(a4 + 80) = sub_100035E7C(0, 2, 0, _swiftEmptyArrayStorage);
    *(void *)(a4 + 88) = sub_100035E7C(0, 2, 0, _swiftEmptyArrayStorage);
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    swift_beginAccess();
    sub_100163B44(0x100000006, 1);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return a4;
}

uint64_t sub_10016A58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100164620(a1, a2, a3);
}

uint64_t sub_10016A5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001646A8(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10016A5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10016426C(a1, a2, a3, *(unsigned int *)(v3 + 16));
}

uint64_t sub_10016A5D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_10016A600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100314170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016A668(void *a1, uint64_t a2, int a3)
{
  return sub_1001664A4(a1, a2, a3);
}

uint64_t sub_10016A674(uint64_t a1, uint64_t a2)
{
  return sub_1001666AC(a1, a2, *(void *)(v2 + 24));
}

uint64_t sub_10016A6A0()
{
  return sub_10016A774((uint64_t (*)(void, void, void, void, void, void))sub_10016710C);
}

uint64_t sub_10016A6B8(uint64_t a1)
{
  return sub_100167BDC(a1, *(unsigned int *)(v1 + 16));
}

uint64_t sub_10016A6D4(uint64_t a1)
{
  return sub_1001685B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10016A6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100168628(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_10016A6FC(void *a1@<X8>)
{
}

uint64_t sub_10016A70C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10016A75C()
{
  return sub_10016A774((uint64_t (*)(void, void, void, void, void, void))sub_1001692EC);
}

uint64_t sub_10016A774(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t type metadata accessor for ServerBootstrap()
{
  return self;
}

uint64_t type metadata accessor for ServerBootstrap.AcceptHandler()
{
  return self;
}

uint64_t type metadata accessor for ClientBootstrap()
{
  return self;
}

uint64_t type metadata accessor for DatagramBootstrap()
{
  return self;
}

uint64_t type metadata accessor for NIOPipeBootstrap()
{
  return self;
}

uint64_t sub_10016A844()
{
  swift_release();
  swift_errorRelease();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016A87C()
{
  return ChannelHandlerContext.fireErrorCaught(_:)();
}

void sub_10016A8A4(void *a1@<X8>)
{
}

uint64_t sub_10016A8AC()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10016A8FC()
{
  return sub_100165768(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_10016A910(uint64_t a1)
{
  return sub_100165560(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10016A928()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016A95C()
{
  return sub_10016B0D4((uint64_t (*)(void, void, void, void, void))sub_1001654E0);
}

uint64_t sub_10016A978()
{
  swift_unknownObjectRelease();
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 == 2)
  {
    sub_10001C2EC(v0 + 40);
  }
  else if (v1 == 1)
  {
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 72) != 4 && (~*(void *)(v0 + 80) & 0xF000000000000007) != 0) {
      swift_release();
    }
  }
  else if (!*(unsigned char *)(v0 + 96))
  {
    sub_10001B070();
  }
  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_10016AA38()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016AA80(uint64_t a1)
{
  return sub_1001656E4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_10016AA94()
{
}

uint64_t sub_10016AAA0()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_10016AAD8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10016B010(a1);
}

uint64_t sub_10016AAF0()
{
  return sub_10016B410((void (*)(void))&_swift_release);
}

uint64_t sub_10016AB08()
{
  void (*v1)(uint64_t *__return_ptr);
  uint64_t v2;

  uint64_t v0 = sub_10016B82C();
  return sub_1001696B0(v0, v1, v2, (void (*)(uint64_t, void, uint64_t))sub_1000B46A8);
}

uint64_t sub_10016AB40@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  return sub_100169CB0(a1, a2, *a3, a4);
}

uint64_t sub_10016AB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10016AB40(a1, *(unsigned char **)(v2 + 24), *(int **)(v2 + 32), a2);
}

uint64_t sub_10016AB9C()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016ABCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_10016ABFC()
{
  swift_unknownObjectRelease();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016AC2C(uint64_t a1, uint64_t a2)
{
  return sub_100169928(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_10016AC34()
{
  unint64_t result = qword_100314580;
  if (!qword_100314580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314580);
  }
  return result;
}

uint64_t (*sub_10016AC80(uint64_t a1, uint64_t a2))()
{
  return sub_100169F1C(a1, a2, *(void (**)(long long *__return_ptr, void *))(v2 + 16));
}

uint64_t sub_10016AC88@<X0>(void *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  return sub_1001AE2B0(a1, *(uint64_t (**)(void, void))(v2 + 16), a2);
}

uint64_t sub_10016AC94()
{
  return sub_10016B410((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_10016ACAC()
{
  uint64_t v0 = sub_10016B82C();
  return sub_100169528(v0, v1, v2, 1106, 1107, (void (*)(uint64_t))sub_1001630D8);
}

uint64_t sub_10016ACEC(uint64_t a1)
{
  return sub_100163328(a1, v1, (void (*)(void))sub_10018E878);
}

uint64_t sub_10016AD28()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016AD64()
{
  return sub_1001686F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10016AD70(void *a1@<X8>)
{
}

uint64_t sub_10016AD78()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10016ADD0()
{
  uint64_t v0 = sub_10016B7AC();
  return sub_1001687B0(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10016ADE8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016AE28()
{
  return sub_10016B0D4((uint64_t (*)(void, void, void, void, void))sub_100168A48);
}

uint64_t sub_10016AE48()
{
  return (*(uint64_t (**)(void, _UNKNOWN **))(v0 + 16))(*(void *)(v0 + 32), &off_1002DBF00);
}

uint64_t sub_10016AE80()
{
  return sub_10016B410((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_10016AE98()
{
  uint64_t v0 = sub_10016B82C();
  return sub_100169528(v0, v1, v2, 676, 677, (void (*)(uint64_t))sub_1001630D8);
}

uint64_t sub_10016AED0()
{
  return sub_10016B410((void (*)(void))&_swift_release);
}

uint64_t sub_10016AEE8(uint64_t a1, uint64_t a2)
{
  return sub_100165D48(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10016AEF4()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016AF2C()
{
  return sub_100165E2C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_10016AF38()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10016AF98()
{
  uint64_t v1 = sub_10016B7AC();
  return sub_1001675A4(v1, v2, v3, v4, v5, v6, v7, v8, *(void *)(v0 + 80));
}

uint64_t sub_10016AFC8()
{
  return sub_1001673CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10016AFD8()
{
  return sub_10016B0D4((uint64_t (*)(void, void, void, void, void))sub_1001674FC);
}

uint64_t sub_10016AFF0()
{
  return sub_10016B410((void (*)(void))&_swift_release);
}

uint64_t sub_10016B010@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_10016B044()
{
  return sub_10016B410((void (*)(void))&_swift_release);
}

uint64_t sub_10016B05C()
{
  void (*v1)(uint64_t *__return_ptr);
  uint64_t v2;

  uint64_t v0 = sub_10016B82C();
  return sub_1001696B0(v0, v1, v2, (void (*)(uint64_t, void, uint64_t))sub_1000B5128);
}

uint64_t sub_10016B094()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016B0D4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10016B0F0()
{
  return sub_1001668C8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10016B110(uint64_t a1)
{
  return sub_100166980(a1, v1);
}

uint64_t sub_10016B118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10016A2F0(a1, *(uint64_t **)(v2 + 16), *(unsigned char **)(v2 + 24), *(int **)(v2 + 32), a2);
}

uint64_t sub_10016B13C(uint64_t a1, uint64_t a2)
{
  return sub_100169848(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_10016B148(void *a1@<X8>)
{
}

uint64_t sub_10016B150(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t *__return_ptr, void *);
  uint64_t v5;
  void v6[2];

  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, void *))(v2 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v3(&v5, v6);
  return v5;
}

uint64_t sub_10016B190()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10016B200()
{
  uint64_t v1 = sub_10016B7AC();
  return sub_1001648D4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0[10], v0[11], v0[12]);
}

uint64_t sub_10016B234@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_10016B270()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016B2B0()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10004F264();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10016B2F8()
{
  return sub_100164C3C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10016B304()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016B344()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10016B378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10016B3AC()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_10016B3F0()
{
}

uint64_t sub_10016B3F8()
{
  return sub_10016B410((void (*)(void))&_swift_release);
}

uint64_t sub_10016B410(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_10016B458()
{
  return (*(uint64_t (**)(void, _UNKNOWN **))(v0 + 24))(*(void *)(v0 + 16), &off_1002DBF00);
}

uint64_t sub_10016B490()
{
  swift_release();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016B4CC(uint64_t a1)
{
  return sub_10016A6B8(a1);
}

uint64_t sub_10016B4E4(uint64_t a1)
{
  return sub_10016A6D4(a1);
}

uint64_t sub_10016B504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10016A5B4(a1, a2, a3);
}

uint64_t sub_10016B51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10016A58C(a1, a2, a3);
}

uint64_t sub_10016B5E4()
{
  return v0;
}

uint64_t sub_10016B5F4()
{
  return sub_100167348();
}

uint64_t sub_10016B5FC()
{
  return ChannelOptions.Storage.append<A>(key:value:)(v3, v2, v1, v0);
}

uint64_t sub_10016B620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  return swift_errorRetain();
}

uint64_t sub_10016B678()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_10016B6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return EventLoop.makeFailedFuture<A>(_:file:line:)(a1, a2, a3, a4, a5, v7, a7, v8);
}

__objc2_class *sub_10016B6C4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  return sub_100167A8C(a1, a2, 56, a4);
}

uint64_t sub_10016B6CC()
{
  return swift_getObjectType();
}

uint64_t sub_10016B6F4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v0 + 1;
  return v2 + 80 * v0 + 32;
}

uint64_t sub_10016B710()
{
  return v0;
}

uint64_t sub_10016B72C(uint64_t a1)
{
  return sub_10004A268(a1, 115, 2, 368);
}

uint64_t sub_10016B748()
{
  return v0;
}

uint64_t sub_10016B758()
{
  return swift_allocError();
}

void sub_10016B774()
{
  EventLoop.flatSubmit<A>(_:)();
}

uint64_t sub_10016B790()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016B7AC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10016B7C0(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = 0;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10016B7E0()
{
  return v0;
}

uint64_t sub_10016B7F4(void *a1)
{
  a1[2] = v2;
  a1[3] = v3;
  a1[4] = v1;
  return swift_retain();
}

uint64_t sub_10016B814()
{
  return swift_release();
}

uint64_t sub_10016B82C()
{
  return *(void *)(v0 + 16);
}

void sub_10016B838()
{
  sub_100192014();
}

uint64_t sub_10016B858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (!*(void *)(a1 + 16) || (unint64_t v8 = sub_10011ED00(), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_10016C63C(__dst);
    goto LABEL_7;
  }
  id v10 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  swift_bridgeObjectRetain_n();
  unint64_t v13 = sub_100161540(0xD000000000000011, 0x80000001002800A0, a1);
  if (v14)
  {
    sub_10016D588(v13, v14);
    uint64_t v15 = sub_10016D5B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_100161540(0xD00000000000001CLL, 0x80000001002800C0, a1);
  if (v18)
  {
    sub_10016D588(v17, v18);
    uint64_t v19 = sub_10016D5B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  if (!(v15 | v19))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v51 = v15;
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_100161540(108, 0xE100000000000000, a1);
  uint64_t v49 = v20;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_100161540(0x6F726665726F7473, 0xEA0000000000746ELL, a3);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v48 = v22;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_100161540(0x6D726F6674616C70, 0xE800000000000000, a1);
  uint64_t v47 = v23;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_100161540(0x646E65747865, 0xE600000000000000, a1);
  if (v25)
  {
    uint64_t v57 = v24;
    uint64_t v58 = v25;
    __dst[0] = 44;
    __dst[1] = 0xE100000000000000;
    sub_10001DAC0();
    uint64_t v26 = (void *)sub_10016D5B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  uint64_t v50 = v19;
  uint64_t v52 = v12;
  uint64_t v27 = v26[2];
  if (v27)
  {
    uint64_t v42 = v11;
    uint64_t v43 = a4;
    swift_bridgeObjectRetain();
    uint64_t v28 = (void **)(v26 + 5);
    uint64_t v29 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v30 = (uint64_t)*(v28 - 1);
      uint64_t v31 = *v28;
      swift_bridgeObjectRetain();
      v32._rawValue = &off_1002D6700;
      v59._countAndFlagsBits = v30;
      v59._object = v31;
      unint64_t v33 = sub_10024F790(v32, v59);
      swift_bridgeObjectRelease();
      if (v33 <= 4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000356C0();
          uint64_t v29 = v35;
        }
        unint64_t v34 = v29[2];
        if (v34 >= v29[3] >> 1)
        {
          sub_1000356C0();
          uint64_t v29 = v36;
        }
        _OWORD v29[2] = v34 + 1;
        *((unsigned char *)v29 + v34 + 32) = v33;
      }
      v28 += 2;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v11 = v42;
    a4 = v43;
  }
  else
  {
    uint64_t v29 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_1001D4DB0((uint64_t)v29);
  uint64_t v37 = sub_100161540(1752459639, 0xE400000000000000, a1);
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  if (v39)
  {
    uint64_t v57 = v37;
    uint64_t v58 = v39;
    __dst[0] = 0x66664F636F486461;
    __dst[1] = 0xEB00000000737265;
    sub_10001DAC0();
    if (sub_10016D5D0()) {
      sub_1001F204C(&v57, 2);
    }
    uint64_t v57 = v37;
    uint64_t v58 = v39;
    strcpy((char *)__dst, "winbackOffers");
    HIWORD(__dst[1]) = -4864;
    char v40 = sub_10016D5D0();
    swift_bridgeObjectRelease();
    if (v40) {
      sub_1001F204C(&v57, 3);
    }
  }
  uint64_t v41 = v55;
  swift_bridgeObjectRetain();
  sub_1000F2780(a2, (uint64_t)v53);
  debugOnly(_:)(v53);
  __src[0] = v52;
  __src[1] = v11;
  __src[2] = v46;
  __src[3] = v49;
  __src[4] = v45;
  _OWORD __src[5] = v48;
  __src[6] = v51;
  memset(&__src[7], 0, 24);
  LOBYTE(__src[10]) = 1;
  __src[11] = 0;
  LOBYTE(__src[12]) = 1;
  __src[13] = v44;
  __src[14] = v47;
  __src[15] = v41;
  __src[16] = v50;
  sub_1000458B4((uint64_t)v53, (uint64_t)&__src[17], &qword_10030A860);
  sub_100048C3C(__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100048E64(__src);
  memcpy(__dst, __src, 0x1C1uLL);
  debugOnly(_:)(__dst);
LABEL_7:
  sub_1000458B4((uint64_t)__dst, (uint64_t)&v57, &qword_10030AA28);
  return sub_1000458B4((uint64_t)&v57, a4, &qword_10030AA28);
}

uint64_t sub_10016BDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10016C624(v95);
  sub_1000458B4((uint64_t)v95, (uint64_t)v91, &qword_10030A860);
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_10011ED00(), (v7 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10016C63C(&v70);
    sub_1000458B4((uint64_t)&v70, (uint64_t)&v93, &qword_10030AA28);
    return sub_1000458B4((uint64_t)&v93, a3, &qword_10030AA28);
  }
  unint64_t v8 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v6);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_100161540(0x6D614E726566666FLL, 0xEA00000000007365, a1);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v64 = v9;
  uint64_t v87 = v9;
  unint64_t v88 = v10;
  uint64_t v93 = v11;
  uint64_t v94 = v12;
  uint64_t v70 = 44;
  unint64_t v71 = 0xE100000000000000;
  sub_10001DAC0();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_10024F130();
  swift_bridgeObjectRelease();
  *(void *)&long long v89 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_100161540(1936881250, 0xE400000000000000, a1);
  uint64_t v16 = v15;
  *((void *)&v89 + 1) = v14;
  uint64_t v90 = v15;
  swift_bridgeObjectRetain();
  uint64_t result = sub_100161540(0x7256747845707061, 0xEB00000000644973, a1);
  uint64_t v65 = a3;
  uint64_t v63 = v16;
  uint64_t v62 = v14;
  if (!v18)
  {
LABEL_66:
    uint64_t v40 = 0;
    LOBYTE(v39) = 1;
    goto LABEL_67;
  }
  uint64_t v19 = v18;
  uint64_t v20 = HIBYTE(v18) & 0xF;
  uint64_t v21 = result & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    uint64_t v24 = sub_1001A4F88(result, v19, 10);
    LOBYTE(v14) = v56;
LABEL_41:
    swift_bridgeObjectRelease();
    int v39 = v14 & 1;
    if (v39) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = v24;
    }
LABEL_67:
    sub_100161540(0x496D616441707061, 0xE900000000000064, a1);
    uint64_t v61 = v40;
    char v60 = v39;
    uint64_t v59 = v13;
    if (v48)
    {
      uint64_t v49 = sub_1001A3CE8();
      char v51 = v50 & 1;
    }
    else
    {
      uint64_t v49 = 0;
      char v51 = 1;
    }
    uint64_t v58 = sub_100161540(0x6C61636F4C756369, 0xE900000000000065, a1);
    uint64_t v53 = v52;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_100161540(1682531955, 0xE400000000000000, a1);
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1000F2780(a2, (uint64_t)__src);
    memcpy(__dst, __src, 0x139uLL);
    debugOnly(_:)(__dst);
    sub_1000458B4((uint64_t)v91, (uint64_t)v67, &qword_10030A860);
    sub_10016C644((uint64_t)__src);
    sub_1000C12F4(v67);
    v68[0] = v64;
    v68[1] = v10;
    v68[2] = v58;
    v68[3] = v53;
    v68[4] = v57;
    v68[5] = v55;
    v68[6] = v59;
    v68[7] = v62;
    v68[8] = v63;
    v68[9] = v49;
    LOBYTE(v68[10]) = v51;
    v68[11] = v61;
    LOBYTE(v68[12]) = v60 & 1;
    v68[14] = 0;
    v68[13] = 0;
    v68[15] = &_swiftEmptySetSingleton;
    v68[16] = 0;
    sub_1000458B4((uint64_t)__dst, (uint64_t)&v68[17], &qword_10030A860);
    sub_100048C3C(v68);
    sub_1000C51B4((uint64_t)__src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v69, v68, 0x1C1uLL);
    debugOnly(_:)(v69);
    uint64_t v70 = v87;
    unint64_t v71 = v88;
    uint64_t v72 = v58;
    uint64_t v73 = v53;
    uint64_t v74 = v57;
    uint64_t v75 = v55;
    long long v76 = v89;
    uint64_t v77 = v90;
    uint64_t v78 = v49;
    char v79 = v51;
    uint64_t v80 = v61;
    char v81 = v60 & 1;
    uint64_t v83 = 0;
    uint64_t v82 = 0;
    uint64_t v84 = &_swiftEmptySetSingleton;
    uint64_t v85 = 0;
    sub_1000458B4((uint64_t)__dst, (uint64_t)&v86, &qword_10030A860);
    sub_100048E64(&v70);
    sub_1000458B4((uint64_t)v69, (uint64_t)&v93, &qword_10030AA28);
    a3 = v65;
    return sub_1000458B4((uint64_t)&v93, a3, &qword_10030AA28);
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v23 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v23 = (unsigned __int8 *)sub_10024F3E0();
    }
    uint64_t v24 = (uint64_t)sub_1001A4F58(v23, v21);
    LOBYTE(v14) = v25 & 1;
    goto LABEL_41;
  }
  uint64_t v93 = result;
  uint64_t v94 = v19 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v20) {
      goto LABEL_74;
    }
    if (v20 == 1) {
      goto LABEL_40;
    }
    sub_100067DD4();
    if (!v30 & v29) {
      goto LABEL_40;
    }
    uint64_t v33 = v32;
    if (v31 == 2)
    {
LABEL_45:
      LOBYTE(v14) = 0;
      uint64_t v24 = v33;
      goto LABEL_41;
    }
    sub_100067DD4();
    if (!v30 & v29) {
      goto LABEL_40;
    }
    uint64_t v24 = 10 * v36 + v35;
    if (v34 != 3)
    {
      while (1)
      {
        sub_100028C7C();
        if (!v30 & v29) {
          goto LABEL_40;
        }
        sub_10016D574();
        if (!v30) {
          goto LABEL_40;
        }
        uint64_t v24 = v38 + v37;
        if (__OFADD__(v38, v37)) {
          goto LABEL_40;
        }
        sub_100028CA4();
        if (v30) {
          goto LABEL_41;
        }
      }
    }
LABEL_57:
    LOBYTE(v14) = 0;
    goto LABEL_41;
  }
  if (result != 45)
  {
    if (!v20 || (result - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v33 = (result - 48);
    if (v20 == 1) {
      goto LABEL_45;
    }
    sub_100067DD4();
    if (!v30 & v29) {
      goto LABEL_40;
    }
    uint64_t v24 = 10 * v43 + v42;
    if (v41 != 2)
    {
      while (1)
      {
        sub_100028C7C();
        if (!v30 & v29) {
          goto LABEL_40;
        }
        sub_10016D574();
        if (!v30) {
          goto LABEL_40;
        }
        uint64_t v24 = v45 + v44;
        if (__OFADD__(v45, v44)) {
          goto LABEL_40;
        }
        sub_100028CA4();
        if (v30) {
          goto LABEL_41;
        }
      }
    }
    goto LABEL_57;
  }
  if (v20)
  {
    if (v20 != 1)
    {
      sub_100067DD4();
      if (!(!v30 & v29))
      {
        if (v27 == 2)
        {
          LOBYTE(v14) = 0;
          uint64_t v24 = -(uint64_t)v28;
          goto LABEL_41;
        }
        if ((v26 - 48) <= 9u)
        {
          uint64_t v24 = -10 * v28 - (v26 - 48);
          if (v27 == 3) {
            goto LABEL_57;
          }
          while (1)
          {
            sub_100028C7C();
            if (!v30 & v29) {
              break;
            }
            sub_10016D574();
            if (!v30) {
              break;
            }
            uint64_t v24 = v47 - v46;
            if (__OFSUB__(v47, v46)) {
              break;
            }
            sub_100028CA4();
            if (v30) {
              goto LABEL_41;
            }
          }
        }
      }
    }
LABEL_40:
    uint64_t v24 = 0;
    LOBYTE(v14) = 1;
    goto LABEL_41;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_10016C48C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8DB8;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_10016C4D8(char a1)
{
  uint64_t result = 0x6F43646574736F68;
  switch(a1)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 0x66664F636F486461;
      break;
    case 3:
      uint64_t result = 0x4F6B6361626E6977;
      break;
    case 4:
      uint64_t result = 0x6C61636F4C756369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10016C5A4(unsigned __int8 *a1, char *a2)
{
  return sub_1000F8E40(*a1, *a2);
}

uint64_t sub_10016C5B0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10016C48C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10016C5E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10016C4D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_10016C60C()
{
  return sub_1001D3894(*v0);
}

uint64_t sub_10016C614(uint64_t a1)
{
  return sub_1000D0AC0(a1, *v1);
}

Swift::Int sub_10016C61C(uint64_t a1)
{
  return sub_1000D2BF4(a1, *v1);
}

void sub_10016C624(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 1;
  bzero(a1 + 4, 0x119uLL);
}

void sub_10016C63C(void *a1)
{
}

uint64_t sub_10016C644(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FetchSoftwareAddOnsRequest.Extension(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016C830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSoftwareAddOnsRequest.Extension()
{
  return &type metadata for FetchSoftwareAddOnsRequest.Extension;
}

uint64_t destroy for FetchSoftwareAddOnsRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 160);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FetchSoftwareAddOnsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  char v29 = (unsigned char *)(a2 + 136);
  char v30 = (void *)(a1 + 136);
  uint64_t v12 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    memcpy(v30, v29, 0x139uLL);
  }
  else
  {
    *char v30 = *(void *)v29;
    *(unsigned char *)(a1 + 144) = v29[8];
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v12;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    uint64_t v13 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v13;
    uint64_t v14 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v14;
    uint64_t v15 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v15;
    uint64_t v16 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v16;
    uint64_t v17 = *(void *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v17;
    uint64_t v18 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v18;
    uint64_t v19 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v19;
    uint64_t v20 = *(void *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = v20;
    *(_WORD *)(a1 + 312) = *(_WORD *)(a2 + 312);
    uint64_t v21 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v21;
    *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    uint64_t v22 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v22;
    uint64_t v23 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v23;
    uint64_t v24 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v24;
    uint64_t v25 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v25;
    uint64_t v26 = *(void *)(a2 + 424);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v26;
    uint64_t v27 = *(void *)(a2 + 440);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = v27;
    *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FetchSoftwareAddOnsRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(a1 + 136);
  uint64_t v7 = (uint64_t *)(a2 + 136);
  uint64_t v8 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160) != 1)
  {
    if (v8 != 1)
    {
      uint64_t v12 = *v7;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *uint64_t v6 = v12;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 168) = v13;
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 336);
      *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
      *(void *)(a1 + 336) = v14;
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
      return a1;
    }
    sub_1000468B4(a1 + 136);
    goto LABEL_6;
  }
  if (v8 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 136), (const void *)(a2 + 136), 0x139uLL);
    return a1;
  }
  uint64_t v9 = *v7;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *uint64_t v6 = v9;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v10 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v10;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  uint64_t v11 = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 336) = v11;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *initializeWithTake for FetchSoftwareAddOnsRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C1uLL);
}

uint64_t assignWithTake for FetchSoftwareAddOnsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160) != 1)
  {
    uint64_t v9 = *(void *)(a2 + 160);
    if (v9 != 1)
    {
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v9;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 280);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = v15;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v16;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 312) = *(_WORD *)(a2 + 312);
      uint64_t v17 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v17;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
      uint64_t v18 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 424);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = v23;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
      return a1;
    }
    sub_1000468B4(a1 + 136);
  }
  memcpy((void *)(a1 + 136), (const void *)(a2 + 136), 0x139uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchSoftwareAddOnsRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 449))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchSoftwareAddOnsRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 440) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(unsigned char *)(result + 448) = 0;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 449) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 449) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSoftwareAddOnsRequest()
{
  return &type metadata for FetchSoftwareAddOnsRequest;
}

unint64_t sub_10016D528()
{
  unint64_t result = qword_100314588;
  if (!qword_100314588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314588);
  }
  return result;
}

unint64_t sub_10016D588(unint64_t a1, unint64_t a2)
{
  STACK[0x540] = a1;
  STACK[0x548] = a2;
  STACK[0x378] = 44;
  STACK[0x380] = 0xE100000000000000;
  return sub_10001DAC0();
}

uint64_t sub_10016D5B4()
{
  return sub_10024F130();
}

uint64_t sub_10016D5D0()
{
  return sub_10024F190();
}

uint64_t sub_10016D5F4()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1000F072C(v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_10016D66C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x617A696C61636F6CLL && a2 == 0xED0000736E6F6974;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1701667182 && a2 == 0xE400000000000000;
      if (v7 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7069726373627573 && a2 == 0xED0000736E6F6974)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_10016D834(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x617A696C61636F6CLL;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 0x7069726373627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10016D8BC()
{
  return sub_10016D834(*v0);
}

uint64_t sub_10016D8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10016D66C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10016D8EC(uint64_t a1)
{
  unint64_t v2 = sub_10016DFAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10016D928(uint64_t a1)
{
  unint64_t v2 = sub_10016DFAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10016D964()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10016D99C()
{
  sub_10016D964();
  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for OctaneSubscriptionGroup()
{
  return self;
}

uint64_t sub_10016D9F4(void *a1)
{
  sub_100019524(&qword_100314710);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_10001C2A8(a1, a1[3]);
  sub_10016DFAC();
  sub_10024FD40();
  sub_10024F940();
  if (!v1)
  {
    sub_100019524(&qword_1003146E0);
    sub_10016DFF8(&qword_100314718, &qword_100314720);
    sub_10016E36C();
    swift_bridgeObjectRetain();
    sub_10024F940();
    swift_bridgeObjectRelease();
    sub_100019524(&qword_1003146F8);
    sub_10016E07C(&qword_100314728, &qword_100314730);
    sub_10016E36C();
  }
  uint64_t v5 = sub_1000CD424();
  return v6(v5);
}

uint64_t sub_10016DC24(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10016DC74(a1);
  return v2;
}

void *sub_10016DC74(void *a1)
{
  sub_100019524(&qword_1003146D0);
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_10001C2A8(a1, a1[3]);
  sub_10016DFAC();
  sub_10024FD20();
  if (v2)
  {
    type metadata accessor for OctaneSubscriptionGroup();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v11) = 0;
    v1[2] = sub_10024F830();
    v1[3] = v6;
    sub_100019524(&qword_1003146E0);
    sub_10016DFF8(&qword_1003146E8, &qword_1003146F0);
    sub_10016E33C();
    v1[4] = v11;
    LOBYTE(v11) = 2;
    v1[5] = sub_10024F830();
    v1[6] = v7;
    sub_100019524(&qword_1003146F8);
    sub_10016E07C(&qword_100314700, &qword_100314708);
    sub_10016E33C();
    uint64_t v9 = sub_100027AC4();
    v10(v9);
    v1[7] = v11;
  }
  sub_10001C2EC((uint64_t)a1);
  return v1;
}

uint64_t sub_10016DF08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10016DC24(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10016DF34(void *a1)
{
  return sub_10016D9F4(a1);
}

uint64_t sub_10016DF58(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_10024FA60();
  }
}

uint64_t sub_10016DF88(uint64_t *a1, uint64_t *a2)
{
  return sub_10016DF58(*a1, *a2) & 1;
}

unint64_t sub_10016DFAC()
{
  unint64_t result = qword_1003146D8;
  if (!qword_1003146D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003146D8);
  }
  return result;
}

uint64_t sub_10016DFF8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_1003146E0);
    sub_10016E100(a2, (void (*)(uint64_t))type metadata accessor for OctaneLocalization);
    uint64_t result = sub_1000FFC38();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016E07C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_1003146F8);
    sub_10016E100(a2, (void (*)(uint64_t))type metadata accessor for OctaneSubscription);
    uint64_t result = sub_1000FFC38();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016E100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OctaneSubscriptionGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016E214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneSubscriptionGroup.CodingKeys()
{
  return &type metadata for OctaneSubscriptionGroup.CodingKeys;
}

unint64_t sub_10016E250()
{
  unint64_t result = qword_100314738;
  if (!qword_100314738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314738);
  }
  return result;
}

unint64_t sub_10016E2A0()
{
  unint64_t result = qword_100314740;
  if (!qword_100314740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314740);
  }
  return result;
}

unint64_t sub_10016E2F0()
{
  unint64_t result = qword_100314748;
  if (!qword_100314748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314748);
  }
  return result;
}

uint64_t sub_10016E33C()
{
  return sub_10024F870();
}

uint64_t sub_10016E36C()
{
  return sub_10024F980();
}

uint64_t EventLoop.makePromise<A>(of:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = EventLoopPromise.init(eventLoop:file:line:)(v8, a8, a2, a3, a4, a5);
  swift_unknownObjectRetain();
  return v9;
}

BOOL sub_10016E3E0()
{
  BOOL result = sub_1000C6ADC();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t EventLoop.preconditionInEventLoop(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1001722D0(a1, a2, a3, a4, a5);
  uint64_t result = v6(v5);
  if ((result & 1) == 0) {
    __break(1u);
  }
  return result;
}

void EventLoop.makeSucceededFuture<A>(_:file:line:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_10002F9C8();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v12 = v11 - v10;
  if (v13 == (char *)&type metadata for () + 8)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 72))(v9, v1);
    type metadata accessor for EventLoopFuture();
    sub_10003C8C8();
    swift_dynamicCastClassUnconditional();
  }
  else
  {
    uint64_t v14 = v8;
    type metadata accessor for EventLoopFuture();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v12, v14, v3);
    EventLoopFuture.__allocating_init(eventLoop:value:file:line:)();
    swift_unknownObjectRetain();
    sub_10003C8C8();
  }
}

#error "10016E60C: call analysis failed (funcsize=38)"

uint64_t sub_10016E63C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_100171554(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

void EventLoopGroup.shutdownGracefully(_:)()
{
  sub_10003C984();
  sub_10017241C();
  uint64_t v4 = sub_10024E2B0();
  sub_10002F9C8();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = v10 - v9;
  sub_100051014();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v4);
  uint64_t v12 = (void *)sub_10024EED0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 16))(v12, v3, v2, v1, v0);

  sub_10003C8C8();
}

uint64_t Scheduled.init(promise:cancellationTask:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  EventLoopFuture.whenFailure(_:)((uint64_t)sub_10016F31C, v6);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t static NIODeadline.now()()
{
  uint64_t v0 = sub_10024E340();
  sub_10002F9C8();
  uint64_t v2 = v1;
  __chkstk_darwin();
  sub_10002059C();
  uint64_t v5 = v4 - v3;
  sub_10024E330();
  unint64_t v6 = sub_10024E320();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v0);
  if (v6 >= 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    return v6;
  }
}

uint64_t static NIODeadline.+ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    sub_10009A12C();
    uint64_t result = sub_10009A108();
    __break(1u);
  }
  else if (__OFADD__(a1, a2))
  {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    return (a1 + a2) & ~((a1 + a2) >> 63);
  }
  return result;
}

void EventLoop.submit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  EmbeddedChannel.WrongTypeError.actual.getter(a3, a4);
  sub_100172394();
  uint64_t v15 = EventLoop.makePromise<A>(of:file:line:)(v10, v11, v12, v13, 559, v14, a4, a5);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  void v16[3] = a4;
  void v16[4] = a5;
  void v16[5] = v15;
  v16[6] = a1;
  v16[7] = a2;
  uint64_t v17 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(a5 + 24);
  swift_retain();
  swift_retain();
  v17(sub_100170CAC, v16, a3, a5);
  swift_release();
  sub_10003C780();
}

BOOL sub_10016E9F8()
{
  BOOL result = sub_1000C6ADC();
  if (result) {
    __break(1u);
  }
  return result;
}

uint64_t EventLoop.preconditionNotInEventLoop(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1001722D0(a1, a2, a3, a4, a5);
  uint64_t result = v6(v5);
  if (result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10016EA4C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10016EA7C()
{
  return swift_unknownObjectRetain();
}

uint64_t EventLoop.next()()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10016EAD8()
{
  return sub_10016EAF8((uint64_t)&protocol witness table for SelectableEventLoop);
}

uint64_t sub_10016EAF8(uint64_t a1)
{
  sub_100019524(&qword_10030A5B8);
  uint64_t v3 = sub_1000AC8E4();
  *(_OWORD *)(v3 + 16) = xmmword_100255FB0;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = a1;
  swift_retain();
  return v3;
}

uint64_t EventLoop.makeIterator()(uint64_t a1, uint64_t a2)
{
  sub_100019524(&qword_10030A5B8);
  uint64_t v4 = sub_1000AC8E4();
  *(_OWORD *)(v4 + 16) = xmmword_100255FB0;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = a2;
  swift_unknownObjectRetain();
  return v4;
}

void EventLoop.makeCompletedFuture<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10003C984();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_10002F9C8();
  uint64_t v27 = v26;
  __chkstk_darwin(v28, v29);
  sub_10002059C();
  uint64_t v32 = v31 - v30;
  sub_10001B028(&qword_100309768);
  uint64_t v33 = sub_10024FCF0();
  sub_10002F9C8();
  __chkstk_darwin(v34, v35);
  unsigned __int8 v37 = (char *)&a9 - v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))((char *)&a9 - v36, v25, v33);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100172394();
    EventLoop.makeFailedFuture<A>(_:file:line:)();
    swift_errorRelease();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v32, v37, v23);
    sub_100172394();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v23);
  }
  sub_10003C8C8();
}

uint64_t static TimeAmount.seconds(_:)(uint64_t a1)
{
  uint64_t result = 1000000000 * a1;
  if ((unsigned __int128)(a1 * (__int128)1000000000) >> 64 != result >> 63) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Scheduled.cancel()()
{
  sub_10002F2C8();
  uint64_t v0 = swift_allocError();
  *uint64_t v1 = 1;
  EventLoopPromise.fail(_:)(v0);
  swift_errorRelease();
}

void *NIODeadline.distantPast.unsafeMutableAddressor()
{
  return &static NIODeadline.distantPast;
}

uint64_t static NIODeadline.- infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0 && (a2 & 0x8000000000000000) == 0) {
    return a1 - a2;
  }
  sub_10009A12C();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EventLoopGroup.syncShutdownGracefully()()
{
  sub_10024E2A0();
  sub_100025FBC();
  __chkstk_darwin(v0, v1);
  sub_10002059C();
  sub_10016B5D8();
  v2();
  type metadata accessor for Lock();
  swift_allocObject();
  uint64_t v3 = Lock.init()();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  aBlock[4] = debugOnly(_:);
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = &unk_1002EAB68;
  _Block_copy(aBlock);
  aBlock[7] = _swiftEmptyArrayStorage;
  sub_100029BC0();
  sub_100019524(&qword_100309168);
  sub_100029C10();
  sub_10024F280();
  sub_10024E380();
  swift_allocObject();
  uint64_t v5 = sub_10024E360();
  unint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v3;
  v6[3] = v4;
  v6[4] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  EventLoopGroup.shutdownGracefully(_:)();
  swift_release();
  sub_10024E350();
  Lock.lock()();
  swift_beginAccess();
  if (*(void *)(v4 + 16))
  {
    swift_errorRetain();
    swift_willThrow();
  }
  Lock.unlock()();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t static NIODeadline.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0 && (a2 & 0x8000000000000000) == 0) {
    return a1 < a2;
  }
  sub_10009A12C();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

void EventLoop.flatSubmit<A>(_:)()
{
  sub_10003C984();
  uint64_t v5 = v4;
  sub_10017241C();
  unint64_t v6 = (void *)sub_100140C60();
  _OWORD v6[2] = v1;
  v6[3] = v0;
  v6[4] = v5;
  void v6[5] = v3;
  v6[6] = v2;
  uint64_t v7 = *(void (**)(uint64_t (*)@<X0>(uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v8 = type metadata accessor for EventLoopFuture();
  swift_retain();
  v7(sub_1001714B0, v6, v8, v1, v5);
  swift_release();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v1;
  _OWORD v9[3] = v0;
  v9[4] = v5;
  sub_10016B5D8();
  EventLoopFuture.flatMap<A>(file:line:_:)();
  swift_release();
  swift_release();
  sub_10003C8C8();
}

uint64_t sub_10016F278(uint64_t a1, uint64_t (*a2)(void))
{
  swift_errorRetain();
  sub_100019524(&qword_100309768);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) != 0 && v4 == 1) {
    return a2();
  }
  return result;
}

uint64_t sub_10016F2EC()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10016F31C(uint64_t a1)
{
  return sub_10016F278(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10016F324()
{
  sub_100172370();
  sub_10017228C();
  if (v4())
  {
    sub_10003C780();
    return sub_10016F3F8(v5);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v3;
    uint64_t v9 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v0 + 24);
    swift_retain();
    v9(sub_10017200C, v8, v2, v0);
    sub_10003C780();
    return swift_release();
  }
}

uint64_t sub_10016F3F8(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = v1[7];
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = v2[4];
    uint64_t v7 = v2[8];
    uint64_t v8 = (void *)swift_allocObject();
    _OWORD v8[2] = v3;
    _OWORD v8[3] = v7;
    v8[4] = v2;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v6 + 48);
    sub_10003C360(v3);
    sub_10003C360(v3);
    swift_retain();
    uint64_t v10 = sub_100019524(&qword_10030AE38);
    uint64_t v11 = v9(v4, sub_100172074, v8, v10, ObjectType, v6);
    swift_release();
    v2[6] = v11;
    swift_release();
    sub_10016F53C();
    return sub_10003C350(v3);
  }
  return result;
}

uint64_t sub_10016F53C()
{
  if (*(void *)(v0 + 48))
  {
    swift_retain_n();
    swift_retain_n();
    sub_10012F490();
    swift_release();
    swift_release_n();
    swift_retain_n();
    swift_retain_n();
    sub_10012F5AC();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t RepeatedTask.cancel(promise:)()
{
  sub_100172370();
  sub_10017228C();
  if (v4())
  {
    sub_10003C780();
    return sub_10016F6DC(v5);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v3;
    uint64_t v9 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v0 + 24);
    swift_retain();
    swift_retain();
    v9(sub_1001714D0, v8, v2, v0);
    sub_10003C780();
    return swift_release();
  }
}

#error "10016F758: call analysis failed (funcsize=88)"

#error "10016F86C: call analysis failed (funcsize=24)"

uint64_t sub_10016F8A8(uint64_t a1, uint64_t a2)
{
  sub_100163700(*(void *)(a2 + 24), *(void *)(a2 + 32));
  swift_retain_n();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_release();
}

void sub_10016F928()
{
  if (v0[7])
  {
    uint64_t v1 = v0;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[2];
    uint64_t v5 = *(uint64_t (**)(uint64_t, void (*)(uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v3 + 48);
    swift_retain();
    uint64_t v6 = sub_100019524(&qword_10030AE38);
    uint64_t v7 = v5(v4, sub_1001720D0, v0, v6, ObjectType, v3);
    swift_release();
    v1[6] = v7;
    swift_release();
    sub_10016F53C();
  }
}

void sub_10016FA10(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t))(a1 + 56);
  if (v4)
  {
    swift_retain();
    uint64_t v5 = v4(a1);
    sub_10003C350((uint64_t)v4);
  }
  else
  {
    swift_getObjectType();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v5 = v6;
  }
  *a2 = v5;
}

uint64_t RepeatedTask.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_10003C350(*(void *)(v0 + 56));
  return v0;
}

uint64_t RepeatedTask.__deallocating_deinit()
{
  RepeatedTask.deinit();
  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t EventLoopIterator.next()()
{
  unint64_t v1 = v0[1];
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v1 == v2) {
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    v0[1] = v1 + 1;
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_10016FB88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = debugOnly(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10016FBB4()
{
  return static NIODeadline.distantPast.getter();
}

uint64_t sub_10016FBBC()
{
  return sub_10016E63C(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_10016FBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007AA9C(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_10016FBCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EventLoopIterator.next()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10016FBF4()
{
  sub_100019524(&qword_10030AE38);
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 40) = &protocol witness table for EmbeddedEventLoop;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 48) = 0;
  swift_retain();
  return v1;
}

uint64_t EventLoop.makeSucceededVoidFuture()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10013F758(v2, (uint64_t)"n/a", 3, 2, 0, a1, a2);
  swift_unknownObjectRetain();
  return v3;
}

uint64_t EventLoop._preconditionSafeToWait(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

double EventLoop._promiseCompleted(futureIdentifier:)@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t EventLoopGroup.description.getter()
{
  return sub_10024E700();
}

uint64_t static TimeAmount.microseconds(_:)(uint64_t a1)
{
  uint64_t result = 1000 * a1;
  if ((unsigned __int128)(a1 * (__int128)1000) >> 64 != result >> 63) {
    __break(1u);
  }
  return result;
}

uint64_t static TimeAmount.milliseconds(_:)(uint64_t a1)
{
  uint64_t result = 1000000 * a1;
  if ((unsigned __int128)(a1 * (__int128)1000000) >> 64 != result >> 63) {
    __break(1u);
  }
  return result;
}

uint64_t static TimeAmount.minutes(_:)(uint64_t a1)
{
  uint64_t result = 60000000000 * a1;
  if ((unsigned __int128)(a1 * (__int128)60000000000) >> 64 != result >> 63) {
    __break(1u);
  }
  return result;
}

uint64_t static TimeAmount.hours(_:)(uint64_t a1)
{
  uint64_t result = 3600000000000 * a1;
  if ((unsigned __int128)(a1 * (__int128)3600000000000) >> 64 != result >> 63) {
    __break(1u);
  }
  return result;
}

void TimeAmount.hash(into:)(uint64_t a1, Swift::UInt64 a2)
{
}

uint64_t sub_10016FDCC()
{
  return NIODeadline.hashValue.getter(*v0);
}

void sub_10016FDD4(uint64_t a1)
{
  TimeAmount.hash(into:)(a1, *v1);
}

BOOL static HTTPHeaders.Index.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_10016FDEC(uint64_t *a1, uint64_t *a2)
{
  return static HTTPHeaders.Index.< infix(_:_:)(*a1, *a2);
}

BOOL sub_10016FDF8(uint64_t *a1, uint64_t *a2)
{
  return sub_1001FAEB4(*a1, *a2);
}

BOOL sub_10016FE04(uint64_t *a1, uint64_t *a2)
{
  return sub_10007E968(*a1, *a2);
}

BOOL sub_10016FE10(uint64_t *a1, uint64_t *a2)
{
  return sub_10007B83C(*a1, *a2);
}

uint64_t static TimeAmount.+ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v2) {
    __break(1u);
  }
  return result;
}

void *static TimeAmount.+= infix(_:_:)(void *result, uint64_t a2)
{
  if (__OFADD__(*result, a2)) {
    __break(1u);
  }
  else {
    *result += a2;
  }
  return result;
}

uint64_t static TimeAmount.- infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a1, a2);
  uint64_t result = a1 - a2;
  if (v2) {
    __break(1u);
  }
  return result;
}

void *static TimeAmount.-= infix(_:_:)(void *result, uint64_t a2)
{
  if (__OFSUB__(*result, a2)) {
    __break(1u);
  }
  else {
    *result -= a2;
  }
  return result;
}

void static TimeAmount.* infix<A>(_:_:)()
{
  sub_10003C984();
  uint64_t v6 = v5;
  uint64_t v75 = v7;
  int64_t v71 = *(void *)(*(void *)(v8 + 24) + 16);
  v70[4] = swift_getAssociatedTypeWitness();
  sub_100025FBC();
  __chkstk_darwin(v9, v10);
  void v70[3] = (uint64_t)v70 - v11;
  sub_10002F9C8();
  uint64_t v13 = v12;
  __chkstk_darwin(v14, v15);
  v70[5] = (uint64_t)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AC774();
  __chkstk_darwin(v17, v18);
  uint64_t v72 = (char *)v70 - v19;
  sub_1000AC774();
  __chkstk_darwin(v20, v21);
  uint64_t v74 = (char *)v70 - v22;
  sub_1000AC774();
  __chkstk_darwin(v23, v24);
  sub_1000E2A68();
  __chkstk_darwin(v25, v26);
  uint64_t v73 = (char *)v70 - v27;
  sub_1000AC774();
  __chkstk_darwin(v28, v29);
  sub_1000E2A54();
  __chkstk_darwin(v30, v31);
  sub_1001723E0();
  uint64_t v34 = __chkstk_darwin(v32, v33);
  unsigned __int8 v42 = sub_1001721AC(v34, v35, v36, v37, v38, v39, v40, v41, v70[0]);
  ((void (*)(char *))v2)(v42);
  char v43 = sub_1000EC0D0();
  sub_10017215C();
  v2();
  if ((v43 & 1) == 0)
  {
    uint64_t v76 = *(void *)(v13 + 8);
    sub_1000ACADC();
    v48();
    goto LABEL_20;
  }
  sub_1000EC1F4();
  uint64_t v44 = sub_100172200();
  v45(v44);
  if (v3 <= 64) {
    goto LABEL_20;
  }
  sub_10017215C();
  v2();
  int64_t v78 = 0x8000000000000000;
  if (sub_1000EC0D0())
  {
    LOBYTE(v46) = v1;
    if (sub_1000EC1F4() >= 64)
    {
      unint64_t v47 = sub_100171AA0();
      uint64_t v13 = (uint64_t)v73;
      sub_1000EC0EC((uint64_t)&v78, (uint64_t)&type metadata for Int64, v47);
      sub_100172170();
      sub_1001723F4();
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  char v49 = sub_1000EC0D0();
  uint64_t v46 = v1;
  uint64_t v50 = sub_1000EC1F4();
  if ((v49 & 1) == 0)
  {
    if (v50 >= 64)
    {
      uint64_t v58 = sub_100172408();
      v59(v58);
      goto LABEL_20;
    }
LABEL_13:
    sub_100172248();
    uint64_t v52 = sub_100172270();
    v53(v52);
    BOOL v54 = v1 < v78;
    goto LABEL_16;
  }
  v70[1] = v13;
  if (v50 > 64)
  {
    unint64_t v51 = sub_100171AA0();
    uint64_t v13 = (uint64_t)v73;
    sub_1000EC0EC((uint64_t)&v78, (uint64_t)&type metadata for Int64, v51);
    sub_100172170();
    sub_100172358();
LABEL_10:
    sub_1000AC864();
    ((void (*)(void))v13)();
    sub_1000AC864();
    ((void (*)(void))v13)();
    if (v46) {
      goto LABEL_36;
    }
LABEL_20:
    uint64_t v60 = sub_1000EC1F4();
    sub_10017215C();
    v2();
    if (v60 < 65)
    {
      uint64_t v62 = sub_1000EC1F4();
      uint64_t v63 = sub_100172194();
      ((void (*)(uint64_t))v4)(v63);
      if (v62 != 64 || (sub_1000EC0D0() & 1) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v61 = sub_100172194();
      ((void (*)(uint64_t))v4)(v61);
    }
    uint64_t v64 = v74;
    sub_10017215C();
    v2();
    int64_t v78 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = sub_1000EC0D0();
    uint64_t v65 = sub_1000EC1F4();
    if (v13)
    {
      if (v65 > 64)
      {
        unint64_t v66 = sub_100171AA0();
        sub_1000EC0EC((uint64_t)&v78, (uint64_t)&type metadata for Int64, v66);
        uint64_t v46 = sub_100172310();
        uint64_t v13 = (uint64_t)v64;
        goto LABEL_30;
      }
    }
    else if (v65 > 63)
    {
      uint64_t v67 = sub_1001721D8();
      v68(v67);
      unint64_t v69 = sub_100171AA0();
      sub_1000EC0EC((uint64_t)&v77, (uint64_t)&type metadata for Int64, v69);
      uint64_t v46 = sub_100172334();
LABEL_30:
      sub_100172260();
      v4();
      sub_100172260();
      v4();
      if (v46)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_31:
      uint64_t v46 = sub_100172248();
      ((void (*)(uint64_t, uint64_t))v4)(v0, v6);
      if ((unsigned __int128)(v46 * (__int128)v75) >> 64 == (v46 * v75) >> 63)
      {
        sub_10003C8C8();
        return;
      }
      __break(1u);
      goto LABEL_34;
    }
    sub_100172248();
    sub_1000ACADC();
    v4();
    goto LABEL_31;
  }
  sub_1001723C0();
  sub_1001723A0();
  sub_1001722A8();
  LODWORD(v71) = sub_100172170();
  uint64_t v13 = v76;
  sub_1000AC864();
  ((void (*)(void))v13)();
  uint64_t v55 = sub_100172224();
  v56(v55);
  if ((v71 & 1) == 0)
  {
    int64_t v71 = v78;
    uint64_t v57 = sub_100172248();
    sub_1000AC864();
    ((void (*)(void))v13)();
    BOOL v54 = v57 < v71;
LABEL_16:
    if (v54) {
      goto LABEL_36;
    }
    goto LABEL_20;
  }
LABEL_35:
  ((void (*)(uint64_t, uint64_t))v13)(v46, v6);
LABEL_36:
  __break(1u);
}

{
  uint64_t v0;
  int64_t v1;
  void (*v2)(void);
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  unint64_t v47;
  void (*v48)(void);
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  BOOL v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  unint64_t v69;
  uint64_t v70[6];
  int64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;

  sub_10003C984();
  uint64_t v6 = v5;
  uint64_t v75 = v7;
  int64_t v71 = *(void *)(*(void *)(v8 + 24) + 16);
  v70[4] = swift_getAssociatedTypeWitness();
  sub_100025FBC();
  __chkstk_darwin(v9, v10);
  void v70[3] = (uint64_t)v70 - v11;
  sub_10002F9C8();
  uint64_t v13 = v12;
  __chkstk_darwin(v14, v15);
  v70[5] = (uint64_t)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AC774();
  __chkstk_darwin(v17, v18);
  uint64_t v72 = (char *)v70 - v19;
  sub_1000AC774();
  __chkstk_darwin(v20, v21);
  uint64_t v74 = (char *)v70 - v22;
  sub_1000AC774();
  __chkstk_darwin(v23, v24);
  sub_1000E2A68();
  __chkstk_darwin(v25, v26);
  uint64_t v73 = (char *)v70 - v27;
  sub_1000AC774();
  __chkstk_darwin(v28, v29);
  sub_1000E2A54();
  __chkstk_darwin(v30, v31);
  sub_1001723E0();
  uint64_t v34 = __chkstk_darwin(v32, v33);
  unsigned __int8 v42 = sub_1001721AC(v34, v35, v36, v37, v38, v39, v40, v41, v70[0]);
  ((void (*)(char *))v2)(v42);
  char v43 = sub_1000EC0D0();
  sub_10017215C();
  v2();
  if ((v43 & 1) == 0)
  {
    uint64_t v76 = *(void *)(v13 + 8);
    sub_1000ACADC();
    v48();
    goto LABEL_20;
  }
  sub_1000EC1F4();
  uint64_t v44 = sub_100172200();
  v45(v44);
  if (v3 <= 64) {
    goto LABEL_20;
  }
  sub_10017215C();
  v2();
  int64_t v78 = 0x8000000000000000;
  if (sub_1000EC0D0())
  {
    LOBYTE(v46) = v1;
    if (sub_1000EC1F4() >= 64)
    {
      unint64_t v47 = sub_100171AA0();
      uint64_t v13 = (uint64_t)v73;
      sub_1000EC0EC((uint64_t)&v78, (uint64_t)&type metadata for Int64, v47);
      sub_100172170();
      sub_1001723F4();
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  char v49 = sub_1000EC0D0();
  uint64_t v46 = v1;
  uint64_t v50 = sub_1000EC1F4();
  if ((v49 & 1) == 0)
  {
    if (v50 >= 64)
    {
      uint64_t v58 = sub_100172408();
      v59(v58);
      goto LABEL_20;
    }
LABEL_13:
    sub_100172248();
    uint64_t v52 = sub_100172270();
    v53(v52);
    BOOL v54 = v1 < v78;
    goto LABEL_16;
  }
  v70[1] = v13;
  if (v50 > 64)
  {
    unint64_t v51 = sub_100171AA0();
    uint64_t v13 = (uint64_t)v73;
    sub_1000EC0EC((uint64_t)&v78, (uint64_t)&type metadata for Int64, v51);
    sub_100172170();
    sub_100172358();
LABEL_10:
    sub_1000AC864();
    ((void (*)(void))v13)();
    sub_1000AC864();
    ((void (*)(void))v13)();
    if (v46) {
      goto LABEL_36;
    }
LABEL_20:
    uint64_t v60 = sub_1000EC1F4();
    sub_10017215C();
    v2();
    if (v60 < 65)
    {
      uint64_t v62 = sub_1000EC1F4();
      uint64_t v63 = sub_100172194();
      ((void (*)(uint64_t))v4)(v63);
      if (v62 != 64 || (sub_1000EC0D0() & 1) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v61 = sub_100172194();
      ((void (*)(uint64_t))v4)(v61);
    }
    uint64_t v64 = v74;
    sub_10017215C();
    v2();
    int64_t v78 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = sub_1000EC0D0();
    uint64_t v65 = sub_1000EC1F4();
    if (v13)
    {
      if (v65 > 64)
      {
        unint64_t v66 = sub_100171AA0();
        sub_1000EC0EC((uint64_t)&v78, (uint64_t)&type metadata for Int64, v66);
        uint64_t v46 = sub_100172310();
        uint64_t v13 = (uint64_t)v64;
        goto LABEL_30;
      }
    }
    else if (v65 > 63)
    {
      uint64_t v67 = sub_1001721D8();
      v68(v67);
      unint64_t v69 = sub_100171AA0();
      sub_1000EC0EC((uint64_t)&v77, (uint64_t)&type metadata for Int64, v69);
      uint64_t v46 = sub_100172334();
LABEL_30:
      sub_100172260();
      v4();
      sub_100172260();
      v4();
      if (v46)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_31:
      uint64_t v46 = sub_100172248();
      ((void (*)(uint64_t, uint64_t))v4)(v0, v6);
      if ((unsigned __int128)(v75 * (__int128)v46) >> 64 == (v75 * v46) >> 63)
      {
        sub_10003C8C8();
        return;
      }
      __break(1u);
      goto LABEL_34;
    }
    sub_100172248();
    sub_1000ACADC();
    v4();
    goto LABEL_31;
  }
  sub_1001723C0();
  sub_1001723A0();
  sub_1001722A8();
  LODWORD(v71) = sub_100172170();
  uint64_t v13 = v76;
  sub_1000AC864();
  ((void (*)(void))v13)();
  uint64_t v55 = sub_100172224();
  v56(v55);
  if ((v71 & 1) == 0)
  {
    int64_t v71 = v78;
    uint64_t v57 = sub_100172248();
    sub_1000AC864();
    ((void (*)(void))v13)();
    BOOL v54 = v57 < v71;
LABEL_16:
    if (v54) {
      goto LABEL_36;
    }
    goto LABEL_20;
  }
LABEL_35:
  ((void (*)(uint64_t, uint64_t))v13)(v46, v6);
LABEL_36:
  __break(1u);
}

uint64_t sub_10017089C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = static TimeAmount.+ infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

void *sub_1001708CC(void *a1, uint64_t *a2)
{
  return static TimeAmount.+= infix(_:_:)(a1, *a2);
}

uint64_t sub_1001708D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = static TimeAmount.- infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

void *sub_100170904(void *a1, uint64_t *a2)
{
  return static TimeAmount.-= infix(_:_:)(a1, *a2);
}

uint64_t NIODeadline.uptimeNanoseconds.getter(uint64_t result)
{
  if (result < 0)
  {
    sub_10009A12C();
    uint64_t result = sub_10009A108();
    __break(1u);
  }
  return result;
}

void *NIODeadline.distantFuture.unsafeMutableAddressor()
{
  return &static NIODeadline.distantFuture;
}

uint64_t static NIODeadline.distantFuture.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

unint64_t static NIODeadline.uptimeNanoseconds(_:)(unint64_t result)
{
  if (result >= 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  return result;
}

Swift::Int _s25ASOctaneSupportXPCService11NIODeadlineV9hashValueSivg_0(Swift::UInt64 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001709B4()
{
  Swift::UInt64 v1 = *v0;
  sub_10024FC00();
  sub_10024FC60(v1);
  return sub_10024FC70();
}

uint64_t static NIODeadline.> infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0 && (a2 & 0x8000000000000000) == 0) {
    return a2 < a1;
  }
  sub_10009A12C();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

uint64_t sub_100170A48(unint64_t *a1, unint64_t *a2)
{
  return static NIODeadline.< infix(_:_:)(*a1, *a2);
}

uint64_t sub_100170A54(void *a1, void *a2)
{
  return sub_1001FAEB0(*a1, *a2);
}

uint64_t sub_100170A60(void *a1, void *a2)
{
  return sub_10007E964(*a1, *a2);
}

uint64_t sub_100170A6C(unint64_t *a1, unint64_t *a2)
{
  return static NIODeadline.> infix(_:_:)(*a1, *a2);
}

uint64_t NIODeadline.description.getter(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_10009A12C();
    uint64_t result = sub_10009A108();
    __break(1u);
  }
  else
  {
    sub_10014F364();
    return sub_10024F230();
  }
  return result;
}

uint64_t sub_100170AE0()
{
  return NIODeadline.description.getter(*v0);
}

uint64_t static NIODeadline.- infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (a1 - a2 >= 0x7FFFFFFFFFFFFFFFLL) {
        return 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        return a1 - a2;
      }
    }
LABEL_12:
    sub_10009A12C();
    uint64_t result = sub_10009A108();
    __break(1u);
    return result;
  }
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_12;
  }
  if (a2 && a1 < a2) {
    return 0;
  }
  uint64_t result = a1 - a2;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_100170B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  uint64_t v7 = __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  EventLoopPromise.succeed(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, a5);
}

uint64_t sub_100170C6C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100170CAC()
{
  return sub_100170B68(v0[5], v0[6], v0[7], v0[2], v0[3]);
}

uint64_t EventLoop.flatScheduleTask<A>(deadline:file:line:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  EmbeddedChannel.WrongTypeError.actual.getter(a8, a9);
  sub_100172394();
  uint64_t v19 = EventLoop.makePromise<A>(of:file:line:)(v14, v15, v16, v17, a5, v18, a9, a10);
  uint64_t v20 = (void *)sub_100140C60();
  _OWORD v20[2] = a8;
  void v20[3] = a9;
  v20[4] = a10;
  void v20[5] = a6;
  v20[6] = a7;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t))(a10 + 40);
  uint64_t v22 = type metadata accessor for EventLoopFuture();
  swift_retain();
  uint64_t v23 = v21(a1, sub_1001714B0, v20, v22, a8, a10);
  swift_release();
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = a8;
  v24[3] = a9;
  v24[4] = a10;
  swift_retain();
  sub_10016B5D8();
  EventLoopFuture.flatMap<A>(file:line:_:)();
  swift_release();
  swift_release();
  uint64_t v25 = swift_retain();
  EventLoopFuture.cascade(to:)(v25);
  swift_release();
  swift_release();
  uint64_t v26 = (void *)sub_1000AC8E4();
  _OWORD v26[2] = a8;
  void v26[3] = a9;
  v26[4] = a10;
  void v26[5] = v23;
  return Scheduled.init(promise:cancellationTask:)(v19, (uint64_t)sub_100172138, (uint64_t)v26);
}

uint64_t EventLoop.flatScheduleTask<A>(in:file:line:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = EmbeddedChannel.WrongTypeError.actual.getter(a8, a9);
  uint64_t v19 = EventLoop.makePromise<A>(of:file:line:)(v17, a2, a3, a4, a5, v18, a9, a10);
  uint64_t v20 = (void *)sub_100140C60();
  _OWORD v20[2] = a8;
  void v20[3] = a9;
  v20[4] = a10;
  void v20[5] = a6;
  v20[6] = a7;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t))(a10 + 48);
  uint64_t v22 = type metadata accessor for EventLoopFuture();
  swift_retain();
  uint64_t v23 = v21(a1, sub_1001714B0, v20, v22, a8, a10);
  swift_release();
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = a8;
  v24[3] = a9;
  v24[4] = a10;
  swift_retain();
  sub_10016B5D8();
  EventLoopFuture.flatMap<A>(file:line:_:)();
  swift_release();
  swift_release();
  uint64_t v25 = swift_retain();
  EventLoopFuture.cascade(to:)(v25);
  swift_release();
  swift_release();
  uint64_t v26 = (void *)sub_1000AC8E4();
  _OWORD v26[2] = a8;
  void v26[3] = a9;
  v26[4] = a10;
  void v26[5] = v23;
  return Scheduled.init(promise:cancellationTask:)(v19, (uint64_t)sub_100171B60, (uint64_t)v26);
}

void sub_100171070()
{
  type metadata accessor for EventLoopFuture();
  Scheduled.cancel()();
}

void EventLoop.scheduleRepeatedTask(initialDelay:delay:notifying:_:)()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = (void *)sub_100140C60();
  uint64_t v15[2] = v4;
  void v15[3] = v2;
  _OWORD v15[4] = v8;
  void v15[5] = v6;
  v15[6] = v0;
  swift_retain();
  swift_unknownObjectRetain();
  EventLoop.scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)(v14, v12, v10, (uint64_t)sub_100171BC0, (uint64_t)v15, v16, v2);
  swift_release();
  sub_10003C8C8();
}

void sub_100171164(uint64_t a1, void (*a2)(void))
{
}

void EventLoop.scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for RepeatedTask();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a2;
  void v13[3] = v7;
  v13[4] = a7;
  unsigned char v13[5] = a3;
  v13[7] = a4;
  unsigned char v13[8] = a5;
  v13[6] = 0;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_10016F324();
  sub_10003C780();
}

uint64_t sub_1001712AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    Lock.lock()();
    swift_beginAccess();
    *(void *)(a3 + 16) = a1;
    swift_errorRetain();
    swift_errorRelease();
    Lock.unlock()();
    swift_errorRelease();
  }
  return sub_10024E370();
}

unint64_t EventLoopError.description.getter(char a1)
{
  unint64_t result = 0xD000000000000049;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000030;
      break;
    case 2:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000031;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001713D8()
{
  return EventLoopError.description.getter(*v0);
}

uint64_t sub_1001713E0()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100171418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100171428()
{
  return swift_release();
}

uint64_t sub_100171430()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100171478()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001714B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100171B28(a1);
}

uint64_t sub_1001714D0()
{
  return sub_10016F6DC(*(void *)(v0 + 24));
}

void sub_1001714F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  EventLoop.submit<A>(_:)(a1, a2, *v5, a3, a5);
}

uint64_t sub_100171534()
{
  return sub_10016EAF8((uint64_t)&protocol witness table for EmbeddedEventLoop);
}

uint64_t sub_100171554(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v4 == a2)
  {
    uint64_t v7 = 0;
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v18 = v6[3];
    if (v18 < 2) {
      return (uint64_t)v6;
    }
    unint64_t v19 = v18 >> 1;
    BOOL v17 = __OFSUB__(v19, v7);
    uint64_t v20 = v19 - v7;
    if (!v17)
    {
      _OWORD v6[2] = v20;
      return (uint64_t)v6;
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = &_swiftEmptyArrayStorage[4];
    while (a2 < v4)
    {
      long long v21 = *(_OWORD *)(a1 + 32 + 16 * a2);
      if (v7)
      {
        uint64_t result = swift_unknownObjectRetain();
      }
      else
      {
        unint64_t v9 = v6[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_29;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_100019524(&qword_10030A5B8);
        uint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(j__malloc_size(v12) - 32) / 16;
        void v12[2] = v11;
        uint64_t v12[3] = 2 * v13;
        uint64_t v14 = v12 + 4;
        uint64_t v15 = v6[3] >> 1;
        uint64_t v8 = &v12[2 * v15 + 4];
        uint64_t v7 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        if (v6[2])
        {
          if (v12 != v6 || v14 >= &v6[2 * v15 + 4]) {
            memmove(v14, v6 + 4, 16 * v15);
          }
          swift_unknownObjectRetain();
          _OWORD v6[2] = 0;
        }
        else
        {
          swift_unknownObjectRetain();
        }
        uint64_t result = swift_release();
        uint64_t v6 = v12;
      }
      BOOL v17 = __OFSUB__(v7--, 1);
      if (v17) {
        goto LABEL_28;
      }
      ++a2;
      *v8++ = v21;
      if (v4 == a2) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001716FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = a1;
    swift_retain();
    uint64_t v4 = 0;
    uint64_t v5 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      uint64_t v7 = v3 + 32;
      uint64_t v6 = *(void *)(v3 + 32);
      uint64_t v8 = v1 - 1;
      if (v1 == 1 || (uint64_t v9 = *(void *)(v7 + 8 * v8), v6 == v9))
      {
        swift_retain();
        uint64_t v31 = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v3 = sub_100120718(v3);
          uint64_t v31 = v3;
        }
        uint64_t v14 = *(void *)(v3 + 16);
        if (!v14) {
          goto LABEL_51;
        }
        *(void *)(v3 + 16) = v14 - 1;
        sub_10024F420();
      }
      else
      {
        type metadata accessor for ScheduledTask();
        char v10 = static ScheduledTask.< infix(_:_:)(v6, v9);
        uint64_t v11 = *(void *)(v7 + 8 * v8);
        if (v10)
        {
          swift_retain();
          swift_retain();
          uint64_t v31 = v3;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v3 = sub_100120718(v3);
            uint64_t v31 = v3;
          }
          if (!*(void *)(v3 + 16)) {
            goto LABEL_53;
          }
          swift_release();
          *(void *)(v3 + 32) = v11;
          sub_10024F420();
          uint64_t v12 = v31;
          if (!*(void *)(v31 + 16)) {
            goto LABEL_55;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v12 = sub_100120718(v31);
            uint64_t v31 = v12;
          }
          uint64_t v13 = *(void *)(v12 + 16);
          if (!v13) {
            goto LABEL_57;
          }
          sub_1001722EC(v13);
          swift_release();
          sub_1001FBC70(0);
          if (v4) {
            goto LABEL_33;
          }
          goto LABEL_20;
        }
        if (static ScheduledTask.< infix(_:_:)(v6, *(void *)(v7 + 8 * v8))) {
          goto LABEL_60;
        }
        swift_retain();
        swift_retain();
        uint64_t v31 = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v3 = sub_100120718(v3);
          uint64_t v31 = v3;
        }
        if (!*(void *)(v3 + 16)) {
          goto LABEL_54;
        }
        swift_retain();
        swift_release();
        *(void *)(v3 + 32) = v11;
        sub_10024F420();
        swift_release();
        uint64_t v25 = v31;
        if (!*(void *)(v31 + 16)) {
          goto LABEL_56;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v25 = sub_100120718(v31);
          uint64_t v31 = v25;
        }
        uint64_t v26 = *(void *)(v25 + 16);
        if (!v26) {
          goto LABEL_58;
        }
        sub_1001722EC(v26);
      }
      swift_release();
      if (v4) {
        goto LABEL_33;
      }
LABEL_20:
      unint64_t v15 = v2[3];
      if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_52;
      }
      int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
      if (v16 <= 1) {
        uint64_t v17 = 1;
      }
      else {
        uint64_t v17 = v16;
      }
      sub_100019524((uint64_t *)&unk_10030FD80);
      unint64_t v18 = (void *)swift_allocObject();
      uint64_t v19 = (uint64_t)(j__malloc_size(v18) - 32) / 8;
      v18[2] = v17;
      void v18[3] = (2 * v19) | 1;
      unint64_t v20 = (unint64_t)(v18 + 4);
      unint64_t v21 = v2[3];
      unint64_t v22 = v21 >> 1;
      if (v2[2])
      {
        if (v18 != v2 || v20 >= (unint64_t)&v2[v22 + 4]) {
          memmove(v18 + 4, v2 + 4, 8 * v22);
        }
        v2[2] = 0;
      }
      uint64_t v5 = (uint64_t *)(v20 + 8 * v22);
      uint64_t v4 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - (v21 >> 1);
      swift_release();
      uint64_t v2 = v18;
LABEL_33:
      BOOL v24 = __OFSUB__(v4--, 1);
      if (v24)
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        uint64_t result = sub_10024F670();
        __break(1u);
        return result;
      }
      *v5++ = v6;
      uint64_t v3 = v31;
      uint64_t v1 = *(void *)(v31 + 16);
      if (!v1)
      {
        swift_release();
        goto LABEL_46;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_46:
  unint64_t v27 = v2[3];
  if (v27 >= 2)
  {
    unint64_t v28 = v27 >> 1;
    BOOL v24 = __OFSUB__(v28, v4);
    unint64_t v29 = v28 - v4;
    if (v24) {
      goto LABEL_59;
    }
    v2[2] = v29;
  }
  return (uint64_t)v2;
}

unint64_t sub_100171AA0()
{
  unint64_t result = qword_100314750;
  if (!qword_100314750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314750);
  }
  return result;
}

uint64_t sub_100171AF0()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100171B28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 40))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void sub_100171B60()
{
}

uint64_t sub_100171B80()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

void sub_100171BC0(uint64_t a1)
{
  sub_100171164(a1, *(void (**)(void))(v1 + 32));
}

uint64_t type metadata accessor for RepeatedTask()
{
  return self;
}

unint64_t sub_100171BF8()
{
  unint64_t result = qword_100314758;
  if (!qword_100314758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314758);
  }
  return result;
}

unint64_t sub_100171C48()
{
  unint64_t result = qword_100314760;
  if (!qword_100314760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314760);
  }
  return result;
}

unint64_t sub_100171C98()
{
  unint64_t result = qword_100314768;
  if (!qword_100314768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100314768);
  }
  return result;
}

unint64_t sub_100171CE8()
{
  unint64_t result = qword_100314770[0];
  if (!qword_100314770[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100314770);
  }
  return result;
}

uint64_t type metadata accessor for Scheduled()
{
  return sub_10002F7A4();
}

void type metadata accessor for EventLoopIterator()
{
}

void type metadata accessor for TimeAmount()
{
}

void type metadata accessor for NIODeadline()
{
}

_OWORD *initializeBufferWithCopyOfBuffer for NIOEventLoopGroupProvider(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for NIOEventLoopGroupProvider()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for NIOEventLoopGroupProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for NIOEventLoopGroupProvider(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for NIOEventLoopGroupProvider(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NIOEventLoopGroupProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for NIOEventLoopGroupProvider()
{
}

unsigned char *storeEnumTagSinglePayload for EventLoopError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100171FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for EventLoopError()
{
}

uint64_t sub_100171FDC()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10017200C()
{
  return sub_10016F3F8(*(void *)(v0 + 24));
}

uint64_t sub_100172034()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100172074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))(*(void *)(v1 + 32));
  *a1 = result;
  return result;
}

uint64_t sub_1001720BC(uint64_t a1)
{
  return sub_10016F8A8(a1, v1);
}

uint64_t sub_1001720C4()
{
  return sub_10016F6DC(0);
}

void sub_1001720D0(uint64_t *a1@<X8>)
{
  sub_10016FA10(v1, a1);
}

uint64_t sub_1001720F0()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100172128()
{
  return sub_10016F848(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100172170()
{
  return sub_10024E5D0();
}

uint64_t sub_100172194()
{
  return v0;
}

char *sub_1001721AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - v9;
}

uint64_t sub_1001721D8()
{
  *(void *)(v0 - 96) = 0x7FFFFFFFFFFFFFFFLL;
  return *(void *)(v0 - 128);
}

uint64_t sub_100172200()
{
  *(void *)(v2 - 176) = v0;
  uint64_t result = v1;
  *(void *)(v2 - 104) = *(void *)(v0 + 8);
  return result;
}

uint64_t sub_100172224()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_100172248()
{
  return sub_10024F200();
}

uint64_t sub_100172270()
{
  return v0;
}

uint64_t sub_1001722A8()
{
  return sub_10024FA40();
}

uint64_t sub_1001722D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t sub_1001722EC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 - 1;
  return sub_10024F420();
}

uint64_t sub_100172310()
{
  return sub_10024E5D0();
}

uint64_t sub_100172334()
{
  return sub_10024E5D0();
}

uint64_t sub_100172358()
{
  return v0;
}

uint64_t sub_100172370()
{
  return swift_getObjectType();
}

uint64_t sub_1001723A0()
{
  return sub_10024FB30();
}

uint64_t sub_1001723C0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1001723F4()
{
  return v0;
}

uint64_t sub_100172408()
{
  return v0;
}

uint64_t Lock.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Lock.init()();
  return v0;
}

uint64_t sub_100172468(uint64_t a1, uint64_t a2)
{
  Lock.lock()();
  if (*(unsigned __int8 *)(a2 + 89) > 1u)
  {
    sub_100019524(&qword_10030FDC0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100255FB0;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 32) = 0xD00000000000008DLL;
    *(void *)(v5 + 40) = 0x8000000100280350;
    sub_10024FBE0();
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 72);
    swift_retain();
    swift_retain();
    char v4 = sub_100172628(v3, a2);
  }
  Lock.unlock()();
  swift_release();
  swift_release();
  return v4 & 1;
}

uint64_t sub_100172574(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  Lock.lock()();
  sub_10014DD4C(a2, a3, a4, a5, &v12);
  Lock.unlock()();
  swift_release();
  if (v5)
  {

    swift_release();
  }
  else
  {
    a1 = v12;
    swift_release();
  }
  return a1 & 1;
}

uint64_t sub_100172628(uint64_t a1, uint64_t a2)
{
  Lock.lock()();
  swift_beginAccess();
  sub_10004AE50();
  swift_endAccess();
  swift_beginAccess();
  int v3 = *(unsigned __int8 *)(a2 + 32);
  if ((v3 & 1) == 0) {
    *(unsigned char *)(a2 + 32) = 1;
  }
  uint64_t v4 = v3 ^ 1u;
  Lock.unlock()();
  swift_release();
  swift_release();
  return v4;
}

unint64_t sub_1001726E8()
{
  Lock.lock()();
  sub_10024F330(28);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 32032;
  v2._object = (void *)0xE200000000000000;
  sub_10024E800(v2);
  Lock.unlock()();
  swift_release();
  return 0xD000000000000018;
}

uint64_t (*sub_1001727CC(uint64_t (*a1)(unsigned __int8 *a1), uint64_t a2, uint64_t a3, uint64_t a4))(unsigned __int8 *a1)
{
  Lock.lock()();
  sub_1001EDB18(a2, a3, a4, &v10);
  Lock.unlock()();
  swift_release();
  if (!v4) {
    a1 = v10;
  }
  swift_release();
  return a1;
}

uint64_t sub_100172874(uint64_t a1, uint64_t a2, void *a3)
{
  Lock.lock()();
  sub_1001ED504(a2, &v8);
  Lock.unlock()();
  if (v3)
  {

    swift_release();
  }
  else
  {
    swift_release();
    a1 = v8;
  }
  return a1;
}

void Lock.withLock<A>(_:)()
{
  sub_100173540();
  Lock.lock()();
  v0();
  Lock.unlock()();
}

void Lock.withLockVoid(_:)()
{
  sub_100173540();
  Lock.lock()();
  v0();
  Lock.unlock()();
}

uint64_t ConditionLock.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ConditionLock.init(value:)(a1);
  return v2;
}

Swift::Void __swiftcall ConditionLock.lock()()
{
}

uint64_t ConditionLock.unlock(withValue:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v4, a1);
  swift_endAccess();
  ConditionLock.unlock()();
  sub_10002FC68();
  uint64_t result = pthread_cond_broadcast(*(pthread_cond_t **)((char *)v1 + *(void *)(v5 + 112)));
  if (result) {
    __break(1u);
  }
  return result;
}

uint64_t ConditionLock.lock(whenValue:)()
{
  uint64_t v1 = v0;
  sub_100140E04();
  v18[1] = v3;
  v18[2] = v2;
  uint64_t v5 = *(void *)(v4 + 80);
  sub_100173524();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v18 - v10;
  ConditionLock.lock()();
  uint64_t v12 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v13 = *(void *)(*(void *)v0 + 112);
  uint64_t v14 = *(void *)(*(void *)v0 + 104);
  swift_beginAccess();
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  while (1)
  {
    v15(v11, v12, v5);
    char v16 = sub_100173554();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v5);
    if (v16) {
      break;
    }
    uint64_t result = pthread_cond_wait(*(pthread_cond_t **)(v1 + v13), *(pthread_mutex_t **)(*(void *)(v1 + v14) + 16));
    if (result)
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

Swift::Void __swiftcall ConditionLock.unlock()()
{
}

uint64_t sub_100172C50()
{
  sub_10002FC68();
  return v0();
}

uint64_t Lock.init()()
{
  uint64_t v1 = (pthread_mutex_t *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  v3.__sig = 0;
  *(void *)v3.__opaque = 0;
  pthread_mutexattr_init(&v3);
  pthread_mutexattr_settype(&v3, 1);
  if (pthread_mutex_init(v1, &v3)) {
    __break(1u);
  }
  return v0;
}

uint64_t Lock.deinit()
{
  uint64_t result = pthread_mutex_destroy(*(pthread_mutex_t **)(v0 + 16));
  if (result)
  {
    __break(1u);
  }
  else
  {
    swift_slowDealloc();
    return v0;
  }
  return result;
}

uint64_t Lock.__deallocating_deinit()
{
  Lock.deinit();
  return _swift_deallocClassInstance(v0, 24, 7);
}

Swift::Void __swiftcall Lock.lock()()
{
}

Swift::Void __swiftcall Lock.unlock()()
{
}

uint64_t sub_100172DC4(uint64_t (*a1)(void))
{
  uint64_t result = a1(*(void *)(v1 + 16));
  if (result) {
    __break(1u);
  }
  return result;
}

uint64_t ConditionLock.init(value:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v4 + 112);
  *(void *)&v2[v5] = swift_slowAlloc();
  uint64_t v6 = *(void *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(&v2[*(void *)(*(void *)v2 + 96)], a1, v6);
  type metadata accessor for Lock();
  uint64_t v8 = swift_allocObject();
  Lock.init()();
  *(void *)&v2[*(void *)(*(void *)v2 + 104)] = v8;
  LODWORD(v8) = pthread_cond_init(*(pthread_cond_t **)&v2[*(void *)(*(void *)v2 + 112)], 0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  if (!v8) {
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Lock()
{
  return self;
}

uint64_t ConditionLock.deinit()
{
  sub_100140E04();
  uint64_t v2 = v1;
  uint64_t result = pthread_cond_destroy(*(pthread_cond_t **)(v0 + *(void *)(v3 + 112)));
  if (result)
  {
    __break(1u);
  }
  else
  {
    swift_slowDealloc();
    sub_10002FC68();
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(v0 + *(void *)(v5 + 96));
    swift_release();
    return v0;
  }
  return result;
}

uint64_t ConditionLock.__deallocating_deinit()
{
  ConditionLock.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

void ConditionLock.value.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  ConditionLock.lock()();
  sub_10002FC68();
  uint64_t v5 = (char *)v1 + *(void *)(v4 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v5);
  ConditionLock.unlock()();
}

uint64_t ConditionLock.lock(whenValue:timeoutSeconds:)(uint64_t a1, double a2)
{
  _OWORD v28[2] = a1;
  sub_100140E04();
  v28[1] = v4;
  uint64_t v6 = *(void *)(v5 + 80);
  sub_100173524();
  uint64_t v8 = v7;
  double v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)v28 - v12;
  if (v11 < 0.0)
  {
    __break(1u);
    goto LABEL_14;
  }
  ConditionLock.lock()();
  double v14 = a2 * 1000000000.0;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v33.tv_sec = 0;
  v33.tv_usec = 0;
  gettimeofday(&v33, 0);
  uint64_t v15 = 1000 * v33.tv_usec;
  BOOL v16 = __OFADD__((uint64_t)v14, v15);
  uint64_t v17 = (uint64_t)v14 + v15;
  if (v16)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  if (__OFADD__(v33.tv_sec, v17 / 1000000000)) {
    goto LABEL_18;
  }
  v32.tv_sec = v33.tv_sec + v17 / 1000000000;
  v32.tv_nsec = v17 % 1000000000;
  uint64_t v18 = *v2;
  uint64_t v19 = (uint64_t)v2 + *(void *)(*v2 + 96);
  v28[0] = *(void *)(*v2 + 112);
  uint64_t v20 = *(void *)(v18 + 104);
  swift_beginAccess();
  uint64_t v21 = v8 + 16;
  unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v23 = (void (**)(char *, uint64_t))(v21 - 8);
  do
  {
    v22(v13, v19, v6);
    char v24 = sub_100173554();
    (*v23)(v13, v6);
    if (v24) {
      return v24 & 1;
    }
    int v25 = pthread_cond_timedwait(*(pthread_cond_t **)((char *)v2 + v28[0]), *(pthread_mutex_t **)(*(uint64_t *)((char *)v2 + v20) + 16), &v32);
  }
  while (!v25);
  if (v25 == 60)
  {
    ConditionLock.unlock()();
    return v24 & 1;
  }
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  int v27 = v25;
  sub_10024F330(51);
  v34._countAndFlagsBits = 0x6520746867756163;
  v34._object = (void *)0xED000020726F7272;
  sub_10024E800(v34);
  int v29 = v27;
  v35._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v35);
  swift_bridgeObjectRelease();
  v36._object = (void *)0x80000001002802E0;
  v36._countAndFlagsBits = 0xD000000000000024;
  sub_10024E800(v36);
  uint64_t result = sub_10024F670();
  __break(1u);
  return result;
}

uint64_t sub_10017345C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ConditionLock()
{
  return sub_10002F7A4();
}

uint64_t sub_100173554()
{
  return sub_10024E680();
}

uint64_t sub_100173574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v55 = a1;
  uint64_t v61 = a7;
  uint64_t v11 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v11 - 8, v12);
  double v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10024DDC0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  char v56 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v53 - v22;
  __chkstk_darwin(v21, v24);
  uint64_t v58 = (char *)&v53 - v25;
  uint64_t v60 = type metadata accessor for StaticResourceRoute();
  __chkstk_darwin(v60, v26);
  BOOL v54 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v29 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v57 = a3;
  uint64_t v30 = a3;
  uint64_t v31 = a6;
  id v32 = sub_100174394(v30, a4, a5, a6, v29);

  if (v32)
  {
    sub_10024DD70();

    uint64_t v53 = v16;
    timeval v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v33(v14, v23, v15);
    sub_1000195B4((uint64_t)v14, 0, 1, v15);
    if (sub_10001FA0C((uint64_t)v14, 1, v15) != 1)
    {
      swift_bridgeObjectRelease();
      Swift::String v34 = v58;
      v33(v58, v14, v15);
      uint64_t v35 = sub_10024DE00();
      sub_10003F808(v35, v42);
      char v43 = v54;
      uint64_t v44 = v59;
      uint64_t v45 = v60;
      *(void *)BOOL v54 = v55;
      *((void *)v43 + 1) = v44;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(&v43[*(int *)(v45 + 20)], v34, v15);
      char v46 = sub_1000CB840(a5, v31);
      uint64_t v47 = sub_100174AA0();
      v48(v47);
      if (v46 == 9) {
        char v49 = 6;
      }
      else {
        char v49 = v46;
      }
      v43[*(int *)(v45 + 24)] = v49;
      uint64_t v50 = (uint64_t)v43;
      uint64_t v51 = v61;
      sub_10017440C(v50, v61);
      uint64_t v41 = 0;
      return sub_1000195B4(v51, v41, 1, v45);
    }
  }
  else
  {
    sub_1000195B4((uint64_t)v14, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000257D4((uint64_t)v14);
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_10024E1F0();
  sub_10001B0E8(v36, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_10024E1D0();
  os_log_type_t v38 = sub_10024EE10();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1000F3F3C(v57, a4, &v62);
    sub_1000C4834(v40);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Failed to initialize static resource route: no bundle URL for name \"%s\"", v39, 0xCu);
    uint64_t v41 = 1;
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v41 = 1;
  }
  uint64_t v45 = v60;
  uint64_t v51 = v61;
  return sub_1000195B4(v51, v41, 1, v45);
}

uint64_t type metadata accessor for StaticResourceRoute()
{
  uint64_t result = qword_100314A30;
  if (!qword_100314A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100173CEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticResourceRoute();
  __chkstk_darwin(v6, v7);
  __chkstk_darwin(v8, v9);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v45 = sub_10024DE00();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_10024E1F0();
  sub_10001B0E8(v14, (uint64_t)qword_10034C0E0);
  sub_1001749E0(v2, (uint64_t)v13);
  sub_100065878(a1);
  sub_100065878(a1);
  uint64_t v15 = sub_10024E1D0();
  os_log_type_t v16 = sub_10024EE00();
  int v17 = v16;
  char v46 = v15;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    int v43 = v17;
    uint64_t v19 = v18;
    uint64_t v44 = swift_slowAlloc();
    v48[0] = v44;
    *(_DWORD *)uint64_t v19 = 136315394;
    LOBYTE(v47) = v13[*(int *)(v6 + 24)];
    uint64_t v20 = sub_10024E700();
    uint64_t v47 = sub_1000F3F3C(v20, v21, v48);
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_100174A44((uint64_t)v13);
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v22 = a1[4];
    uint64_t v23 = *(void *)(v22 + 32);
    unint64_t v24 = *(void *)(v22 + 40);
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1000F3F3C(v23, v24, v48);
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_1000457A8(a1);
    sub_1000457A8(a1);
    uint64_t v25 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v43, "will serve %s at %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {
    sub_100174A44((uint64_t)v13);
    sub_1000457A8(a1);
    sub_1000457A8(a1);
  }
  unint64_t v26 = sub_1000CBEC4(*(unsigned char *)(v3 + *(int *)(v6 + 24)));
  uint64_t v28 = v27;
  uint64_t v29 = sub_100174AA0();
  sub_1000473AC(v29, v30);
  uint64_t v31 = sub_100174AA0();
  sub_1000CBAF8(v31, v32, v26, v28, v33);
  uint64_t v34 = v48[0];
  uint64_t v35 = v48[1];
  uint64_t v36 = v48[2];
  uint64_t v37 = v48[3];
  unint64_t v38 = v49 | ((unint64_t)v50 << 32) | ((unint64_t)v51 << 48);
  uint64_t v39 = sub_100174AA0();
  sub_10003F808(v39, v40);
  LODWORD(v26) = HTTPVersion.init(major:minor:)(1, 1);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 3;
  *(_DWORD *)(result + 40) = v26;
  *(void *)a2 = result;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 16) = 2;
  *(void *)(a2 + 24) = v34;
  *(void *)(a2 + 32) = v35;
  *(void *)(a2 + 40) = v36;
  *(void *)(a2 + 48) = v37;
  *(unsigned char *)(a2 + 62) = BYTE6(v38);
  *(_WORD *)(a2 + 60) = WORD2(v38);
  *(_DWORD *)(a2 + 56) = v38;
  return result;
}

uint64_t NIOConnectionError.host.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double sub_10017434C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100173CEC(a1, (uint64_t)v5);
  long long v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  a2[2] = v6[0];
  double result = *(double *)((char *)v6 + 15);
  *(_OWORD *)((char *)a2 + 47) = *(_OWORD *)((char *)v6 + 15);
  return result;
}

id sub_100174394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = sub_10024E6A0();
  NSString v7 = sub_10024E6A0();
  id v8 = [a5 URLForResource:v6 withExtension:v7];

  return v8;
}

uint64_t sub_10017440C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResourceRoute();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100174470(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10024DDC0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

void *sub_100174574(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10024DDC0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_100174628(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10024DDC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1001746D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10024DDC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_100174770(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10024DDC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100174810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100174824);
}

uint64_t sub_100174824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10024DDC0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_10001FA0C(v9, a2, v8);
  }
}

uint64_t sub_1001748AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001748C0);
}

uint64_t sub_1001748C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10024DDC0();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_1000195B4(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100174940()
{
  uint64_t result = sub_10024DDC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001749E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResourceRoute();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100174A44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticResourceRoute();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100174AA0()
{
  return v0;
}

uint64_t SocketOptionProvider.setSoLinger(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(uint64_t (**)(void))(a3 + 24);
  type metadata accessor for linger(0);
  sub_100174E18();
  return v3();
}

uint64_t SocketOptionProvider.getSoLinger()(uint64_t a1, uint64_t a2)
{
  return sub_100174D6C(a1, a2, (uint64_t (*)(void))type metadata accessor for linger, 0xFFFFLL, 128);
}

uint64_t SocketOptionProvider.setIPMulticastIF(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(uint64_t (**)(void))(a3 + 24);
  type metadata accessor for in_addr(0);
  sub_100174E18();
  return v3();
}

uint64_t SocketOptionProvider.getIPMulticastIF()(uint64_t a1, uint64_t a2)
{
  return sub_100174D6C(a1, a2, (uint64_t (*)(void))type metadata accessor for in_addr, 0, 9);
}

uint64_t SocketOptionProvider.setIPMulticastTTL(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_100174BEC(a1, a2, a3, 10);
}

uint64_t SocketOptionProvider.getIPMulticastTTL()(uint64_t a1, uint64_t a2)
{
  return sub_100174E08(0, a2, (uint64_t)&type metadata for UInt8, a1, a2, a2 + 40, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40));
}

uint64_t SocketOptionProvider.setIPMulticastLoop(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_100174BEC(a1, a2, a3, 11);
}

uint64_t sub_100174BEC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = a1;
  return (*(uint64_t (**)(void, uint64_t, char *, void *, uint64_t, uint64_t))(a3 + 24))(0, a4, &v5, &type metadata for UInt8, a2, a3);
}

uint64_t SocketOptionProvider.getIPMulticastLoop()(uint64_t a1, uint64_t a2)
{
  return sub_100174DF8(0, a2, (uint64_t)&type metadata for UInt8, a1, a2, a2 + 40, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40));
}

uint64_t SocketOptionProvider.setIPv6MulticastIF(_:)(int a1, uint64_t a2, uint64_t a3)
{
  return sub_100174CDC(a1, a2, a3, 9, (uint64_t)&type metadata for UInt32);
}

uint64_t SocketOptionProvider.getIPv6MulticastIF()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a2 + 40))(41, 9, &type metadata for UInt32, a1, a2);
}

uint64_t SocketOptionProvider.setIPv6MulticastHops(_:)(int a1, uint64_t a2, uint64_t a3)
{
  return sub_100174CDC(a1, a2, a3, 10, (uint64_t)&type metadata for Int32);
}

uint64_t SocketOptionProvider.getIPv6MulticastHops()(uint64_t a1, uint64_t a2)
{
  return sub_100174E08(41, a2, (uint64_t)&type metadata for Int32, a1, a2, a2 + 40, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40));
}

uint64_t SocketOptionProvider.setIPv6MulticastLoop(_:)(int a1, uint64_t a2, uint64_t a3)
{
  return sub_100174CDC(a1, a2, a3, 11, (uint64_t)&type metadata for UInt32);
}

uint64_t sub_100174CDC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t))(a3 + 24))(41, a4, &v6, a5, a2, a3);
}

uint64_t SocketOptionProvider.getIPv6MulticastLoop()(uint64_t a1, uint64_t a2)
{
  return sub_100174DF8(41, a2, (uint64_t)&type metadata for UInt32, a1, a2, a2 + 40, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40));
}

uint64_t SocketOptionProvider.getTCPConnectionInfo()(uint64_t a1, uint64_t a2)
{
  return sub_100174D6C(a1, a2, (uint64_t (*)(void))type metadata accessor for tcp_connection_info, 6, 262);
}

uint64_t sub_100174D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 40);
  uint64_t v9 = a3(0);
  return v11(a4, a5, v9, a1, a2);
}

uint64_t sub_100174DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  return a7(a1, 11);
}

uint64_t sub_100174E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  return a7(a1, 10);
}

uint64_t sub_100174E2C(char a1)
{
  uint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701147238;
      break;
    case 2:
      uint64_t result = 0x756F597341796170;
      break;
    case 3:
      uint64_t result = 0x6F72467055796170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100174EB8(char a1)
{
  if (!a1) {
    return 7824750;
  }
  if (a1 == 1) {
    return 0x676E697473697865;
  }
  return 0x64657269707865;
}

uint64_t sub_100174F08(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D5FC0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_100174F54(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8E50;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_100174FA0(unsigned __int8 *a1, char *a2)
{
  return sub_1000FA184(*a1, *a2);
}

Swift::Int sub_100174FAC()
{
  return sub_1001D38AC();
}

uint64_t sub_100174FB4()
{
  return sub_1000D1598();
}

Swift::Int sub_100174FBC()
{
  return sub_1000D30B0();
}

uint64_t sub_100174FC4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100174F54(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100174FF4()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100174EB8(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10017501C()
{
  return sub_10024EA50();
}

uint64_t sub_10017507C()
{
  return sub_10024EA00();
}

uint64_t sub_1001750CC(char *a1)
{
  return sub_1000FA02C(*a1);
}

Swift::Int sub_1001750D8()
{
  return sub_1001D38B8(*v0);
}

uint64_t sub_1001750E0()
{
  return sub_1000D14D8();
}

Swift::Int sub_1001750E8(uint64_t a1)
{
  return sub_1000D3098(a1, *v1);
}

uint64_t sub_1001750F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100174F08(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100175120()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100174E2C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100175148()
{
  return sub_10024EA50();
}

uint64_t sub_1001751A8()
{
  return sub_10024EA00();
}

uint64_t sub_1001751F8()
{
  uint64_t v1 = sub_100019524(&qword_10030B090);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 40)) {
    return 0;
  }
  uint64_t v5 = sub_10024E0F0();
  sub_1000195B4((uint64_t)v4, 1, 1, v5);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10024EFC0();
  swift_bridgeObjectRelease();
  sub_100097FE4((uint64_t)v4);
  return v6;
}

uint64_t sub_100175300()
{
  unint64_t v1 = *(void *)(v0 + 72);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  uint64_t result = sub_100213024(v2, v1);
  if (v4 == 7) {
    return 1;
  }
  return result;
}

uint64_t sub_100175350(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E7265746E69 && a2 == 0xEA00000000004449;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x5079616C70736964 && a2 == 0xEC00000065636972;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x664F7265626D756ELL && a2 == 0xEF73646F69726550;
      if (v7 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x4D746E656D796170 && a2 == 0xEB0000000065646FLL;
        if (v8 || (sub_10024FA60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x8000000100280450)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_10024FA60();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_1001755C0(char a1)
{
  unint64_t result = 0x6C616E7265746E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5079616C70736964;
      break;
    case 2:
      unint64_t result = 0x664F7265626D756ELL;
      break;
    case 3:
      unint64_t result = 0x4D746E656D796170;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100175694()
{
  return sub_1001755C0(*v0);
}

uint64_t sub_10017569C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100175350(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001756C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOHTTPObjectAggregatorError.unexpectedMessageEnd.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001756EC(uint64_t a1)
{
  unint64_t v2 = sub_100177784();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100175728(uint64_t a1)
{
  unint64_t v2 = sub_100177784();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100175764()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100175794()
{
  sub_100175764();
  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t _s8DiscountCMa()
{
  return self;
}

uint64_t sub_1001757EC(void *a1)
{
  sub_100019524(&qword_100315420);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_10001C2A8(a1, a1[3]);
  sub_100177784();
  sub_10024FD40();
  sub_10024F940();
  if (v1)
  {
    uint64_t v5 = sub_10005728C();
    return v6(v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10024F8D0();
    swift_bridgeObjectRelease();
    sub_10024F900();
    sub_1001779BC();
    sub_10024F980();
    swift_bridgeObjectRetain();
    sub_10024F8D0();
    uint64_t v8 = sub_10005728C();
    v9(v8);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001759F4()
{
  sub_100178370();
  uint64_t v1 = sub_100178230();
  sub_100175A28(v1, v2, v3, v4, v5, v6, v7, v8, v10, *(int *)v11, v11[4]);
  return v0;
}

void sub_100175A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  sub_1000EA748();
  uint64_t v13 = v11;
  uint64_t v15 = v14;
  sub_100019524(&qword_1003153A8);
  sub_10001B550();
  __chkstk_darwin(v16, v17);
  sub_100057274();
  *(void *)(v11 + 32) = 0;
  *(void *)(v11 + 40) = 0;
  *(void *)(v11 + 48) = 0;
  *(unsigned char *)(v11 + 56) = 1;
  *(void *)(v11 + 64) = 0;
  *(void *)(v11 + 72) = 0;
  sub_10001C2A8(v15, v15[3]);
  sub_100177784();
  sub_10024FD20();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s8DiscountCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v11 + 16) = sub_10024F830();
    *(void *)(v11 + 24) = v18;
    *(void *)(v11 + 32) = sub_10024F7C0();
    *(void *)(v11 + 40) = v19;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 48) = sub_10024F7F0();
    *(unsigned char *)(v11 + 56) = v20 & 1;
    sub_1001777D0();
    sub_10024F870();
    *(unsigned char *)(v11 + 57) = a11;
    uint64_t v21 = sub_10024F7C0();
    uint64_t v23 = v22;
    uint64_t v24 = sub_100027AC4();
    v25(v24);
    *(void *)(v13 + 64) = v21;
    *(void *)(v13 + 72) = v23;
    swift_bridgeObjectRelease();
  }
  sub_10001C2EC((uint64_t)v15);
  sub_1000EA730();
}

uint64_t sub_100175C78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 272))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100175CB4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264))();
}

uint64_t sub_100175D00()
{
  sub_100178370();
  uint64_t v1 = sub_100178230();
  sub_100175D34(v1);
  return v0;
}

uint64_t sub_100175D34(uint64_t a1)
{
  sub_100027788(a1, (uint64_t)&v12);
  sub_100175A28((uint64_t)&v12, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13);
  sub_10001C2EC(a1);
  return v1;
}

uint64_t _s17IntroductoryOfferCMa()
{
  return self;
}

uint64_t sub_100175DAC()
{
  sub_1001782BC();
  swift_allocObject();
  sub_100178230();
  sub_100175DEC();
  return v0;
}

void sub_100175DEC()
{
  sub_1000EA748();
  uint64_t v3 = v2;
  sub_100019524(&qword_100315398);
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_100057274();
  sub_10001C2A8(v3, v3[3]);
  sub_100177738();
  sub_10017840C();
  sub_10024FD20();
  if (v1)
  {
    swift_release();
    sub_10001C2EC((uint64_t)v3);
    _s17ReferencableOfferCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v0 + 80) = sub_10024F830();
    *(void *)(v0 + 88) = v6;
    swift_release();
    sub_100027788((uint64_t)v3, (uint64_t)&v17);
    sub_100175A28((uint64_t)&v17, v7, v8, v9, v10, v11, v12, v13, v16, v17, v18);
    uint64_t v14 = sub_100027AC4();
    v15(v14);
    sub_10001C2EC((uint64_t)v3);
  }
  sub_1000EA730();
}

void sub_100175F80()
{
  sub_1000EA748();
  sub_1001782CC();
  sub_100019524(&qword_100315418);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_100178260();
  sub_100177738();
  sub_100178240();
  uint64_t v4 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  sub_100178284();
  if (v4)
  {
    uint64_t v5 = sub_1001781F0();
    v6(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1001757EC(v1);
    uint64_t v7 = sub_1001782DC();
    v8(v7);
  }
  sub_1001783E0();
  sub_1000EA730();
}

BOOL sub_100176074(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8EB8;
  v6._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_1001760BC(uint64_t a1, void *a2)
{
  return sub_100176074(a1, a2);
}

uint64_t sub_1001760D8()
{
  return 0x636E657265666572;
}

BOOL sub_100176108@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100176074(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10017613C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001760D8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_100176168@<W0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  BOOL result = sub_1001760BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100176194(uint64_t a1)
{
  unint64_t v2 = sub_100177738();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001761D0(uint64_t a1)
{
  unint64_t v2 = sub_100177738();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10017620C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100176214()
{
  sub_100175764();
  swift_bridgeObjectRelease();
  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t _s17ReferencableOfferCMa()
{
  return self;
}

uint64_t sub_100176274()
{
  sub_1001782BC();
  swift_allocObject();
  sub_100178230();
  sub_1001762B4();
  return v0;
}

void sub_1001762B4()
{
  sub_1000EA748();
  sub_1001781B8();
  sub_100019524(&qword_100315410);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_100178318();
  sub_100177970();
  sub_10017840C();
  sub_100178208();
  if (v1)
  {
    swift_release();
    sub_10001C2EC(v2);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v0 + 96) = sub_10017833C();
    *(void *)(v0 + 104) = v5;
    swift_release();
    sub_100027788(v2, (uint64_t)&v8);
    sub_1001783B0();
    uint64_t v6 = sub_1001781D8();
    v7(v6);
    sub_10001C2EC(v2);
  }
  sub_100178360();
  sub_1000EA730();
}

void sub_1001763F4()
{
  sub_1000EA748();
  sub_1001782CC();
  sub_100019524(&qword_100315400);
  sub_10001B550();
  __chkstk_darwin(v1, v2);
  sub_100178260();
  sub_100177970();
  sub_100178240();
  uint64_t v3 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  sub_100178284();
  if (v3)
  {
    uint64_t v4 = sub_1001781F0();
    v5(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100178394();
    uint64_t v6 = sub_1001782DC();
    v7(v6);
  }
  sub_1001783E0();
  sub_1000EA730();
}

uint64_t sub_1001764E4(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D8EF0;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100176504(char a1)
{
  if (a1) {
    return 0x636E657265666572;
  }
  else {
    return 0x4449726566666FLL;
  }
}

uint64_t sub_100176548(char *a1, char *a2)
{
  return sub_1000FA528(*a1, *a2);
}

Swift::Int sub_100176554()
{
  return sub_1001D38F0();
}

uint64_t sub_10017655C()
{
  return sub_1000D17BC();
}

Swift::Int sub_100176564()
{
  return sub_1000D31E4();
}

uint64_t sub_10017656C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D8EF0;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1001765A4()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100176504(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001765CC()
{
  return sub_100176504(*v0);
}

uint64_t sub_1001765D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001764E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001765FC(uint64_t a1)
{
  unint64_t v2 = sub_100177970();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100176638(uint64_t a1)
{
  unint64_t v2 = sub_100177970();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100176674()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100176680()
{
  sub_1001770EC();
  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t _s10AdHocOfferCMa()
{
  return self;
}

uint64_t sub_1001766D8()
{
  sub_1001782BC();
  swift_allocObject();
  sub_100178230();
  sub_100176718();
  return v0;
}

void sub_100176718()
{
  sub_1000EA748();
  sub_1001781B8();
  sub_100019524(&qword_1003153E8);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_100178318();
  sub_10017781C();
  sub_10017840C();
  sub_100178208();
  if (v1)
  {
    swift_release();
    sub_10001C2EC(v2);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100019524(&qword_1003153D0);
    sub_1001778B4(&qword_1003153F0, (void (*)(void))sub_100177924);
    sub_10024F870();
    *(void *)(v0 + 96) = v7;
    *(unsigned char *)(v0 + 104) = sub_1001782F0() & 1;
    swift_release();
    sub_100027788(v2, (uint64_t)&v7);
    sub_1001783B0();
    uint64_t v5 = sub_1001781D8();
    v6(v5);
    sub_10001C2EC(v2);
  }
  sub_100178360();
  sub_1000EA730();
}

void sub_100176908()
{
  sub_1000EA748();
  sub_1001782CC();
  sub_100019524(&qword_1003153C0);
  sub_10001B550();
  __chkstk_darwin(v1, v2);
  sub_100178260();
  sub_10017781C();
  sub_100178240();
  sub_100019524(&qword_1003153D0);
  sub_1001778B4(&qword_1003153D8, (void (*)(void))sub_100177868);
  sub_10024F980();
  if (!v0)
  {
    sub_10024F950();
    sub_100178394();
  }
  uint64_t v3 = sub_1001781F0();
  v4(v3);
  sub_1001783E0();
  sub_1000EA730();
}

uint64_t sub_100176A5C(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D8F40;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100176A68(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D8F40;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100176A88(char a1)
{
  if (a1) {
    return 0x616B636174537369;
  }
  else {
    return 0x6C69626967696C65;
  }
}

uint64_t sub_100176AD0(char *a1, char *a2)
{
  return sub_1000F9F88(*a1, *a2);
}

Swift::Int sub_100176ADC()
{
  return sub_1001D38FC();
}

uint64_t sub_100176AE4()
{
  return sub_1000D145C();
}

Swift::Int sub_100176AEC()
{
  return sub_1000D3018();
}

uint64_t sub_100176AF4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D8F40;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_100176B2C()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100176A88(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100176B54()
{
  return sub_100176A88(*v0);
}

uint64_t sub_100176B5C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100176A68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100176B84(uint64_t a1)
{
  unint64_t v2 = sub_10017781C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100176BC0(uint64_t a1)
{
  unint64_t v2 = sub_10017781C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100176BFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100176C04()
{
  sub_100175764();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100176C30()
{
  sub_100176C04();
  return _swift_deallocClassInstance(v0, 105, 7);
}

uint64_t _s9CodeOfferCMa()
{
  return self;
}

uint64_t sub_100176C88()
{
  sub_1001782BC();
  swift_allocObject();
  sub_100178230();
  sub_100176CC8();
  return v0;
}

void sub_100176CC8()
{
  sub_1000EA748();
  sub_1001781B8();
  sub_100019524(&qword_100315390);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_100178318();
  sub_1001776EC();
  sub_10017840C();
  sub_100178208();
  if (v1)
  {
    swift_release();
    sub_10001C2EC(v2);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v0 + 96) = sub_10017833C();
    *(void *)(v0 + 104) = v5;
    *(unsigned char *)(v0 + 112) = sub_1001782F0() & 1;
    swift_release();
    sub_100027788(v2, (uint64_t)&v8);
    sub_1001783B0();
    uint64_t v6 = sub_1001781D8();
    v7(v6);
    sub_10001C2EC(v2);
  }
  sub_100178360();
  sub_1000EA730();
}

void sub_100176E4C()
{
  sub_1000EA748();
  sub_1001782CC();
  sub_100019524(&qword_100315380);
  sub_10001B550();
  __chkstk_darwin(v1, v2);
  sub_100178260();
  sub_1001776EC();
  sub_100178240();
  uint64_t v3 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  sub_100178284();
  if (v3)
  {
    uint64_t v4 = sub_1001781F0();
    v5(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10024F950();
    sub_100178394();
    uint64_t v6 = sub_1001782DC();
    v7(v6);
  }
  sub_1001783E0();
  sub_1000EA730();
}

uint64_t sub_100176F64(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D8F90;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100176F84(char a1)
{
  if (a1) {
    return 0x626967696C457369;
  }
  else {
    return 0x4449726566666FLL;
  }
}

uint64_t sub_100176FC0(char *a1, char *a2)
{
  return sub_1000FA270(*a1, *a2);
}

Swift::Int sub_100176FCC()
{
  return sub_1001D3908();
}

uint64_t sub_100176FD4()
{
  return sub_1000D163C();
}

Swift::Int sub_100176FDC()
{
  return sub_1000D3158();
}

uint64_t sub_100176FE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D8F90;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_10017701C()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100176F84(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100177044()
{
  return sub_100176F84(*v0);
}

uint64_t sub_10017704C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100176F64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100177074(uint64_t a1)
{
  unint64_t v2 = sub_1001776EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001770B0(uint64_t a1)
{
  unint64_t v2 = sub_1001776EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001770EC()
{
  sub_100175764();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100177118()
{
  sub_1001770EC();
  return _swift_deallocClassInstance(v0, 113, 7);
}

uint64_t _s12WinbackOfferCMa()
{
  return self;
}

unsigned char *sub_100177170(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017723CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void _s8DiscountC11EligibilityOMa()
{
}

unsigned char *sub_100177270(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017733CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void _s8DiscountC11PaymentModeOMa()
{
}

unint64_t sub_100177374()
{
  unint64_t result = qword_100315360;
  if (!qword_100315360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315360);
  }
  return result;
}

unint64_t sub_1001773C4()
{
  unint64_t result = qword_100315368;
  if (!qword_100315368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315368);
  }
  return result;
}

uint64_t sub_100177410()
{
  sub_1001783CC();
  if (v2)
  {
    if (!v3) {
      return 0;
    }
    if (*(void *)(v1 + 32) != *(void *)(v0 + 32) || v2 != v3)
    {
      sub_10024FA60();
      uint64_t result = sub_100178400();
      if ((v6 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v3)
  {
    return 0;
  }
  if (*(unsigned char *)(v1 + 56))
  {
    if (!*(unsigned char *)(v0 + 56)) {
      return 0;
    }
  }
  else
  {
    sub_1001783EC();
    if (v7) {
      return 0;
    }
  }
  if ((sub_1000FA02C(*(unsigned char *)(v1 + 57)) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v0 + 72);
  if (v8)
  {
    if (v9)
    {
      if (*(void *)(v1 + 64) != *(void *)(v0 + 64) || v8 != v9)
      {
        sub_10024FA60();
        uint64_t result = sub_100178400();
        if ((v11 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_26;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
LABEL_26:
  BOOL v12 = *(void *)(v1 + 96) == *(void *)(v0 + 96) && *(void *)(v1 + 104) == *(void *)(v0 + 104);
  if (v12 || (sub_10024FA60(), uint64_t result = sub_100178400(), (v13 & 1) != 0))
  {
    if (*(void *)(v1 + 80) == *(void *)(v0 + 80) && *(void *)(v1 + 88) == *(void *)(v0 + 88))
    {
      return 1;
    }
    else
    {
      return sub_10024FA60();
    }
  }
  return result;
}

uint64_t sub_100177530()
{
  return sub_100177410() & 1;
}

uint64_t sub_100177554()
{
  sub_1001783CC();
  if (v2)
  {
    if (!v3) {
      return 0;
    }
    if (*(void *)(v1 + 32) != *(void *)(v0 + 32) || v2 != v3)
    {
      sub_10024FA60();
      uint64_t result = sub_100178400();
      if ((v6 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v3)
  {
    return 0;
  }
  if ((*(unsigned char *)(v1 + 56) & 1) == 0)
  {
    sub_1001783EC();
    if ((v7 & 1) == 0) {
      goto LABEL_14;
    }
    return 0;
  }
  if (!*(unsigned char *)(v0 + 56)) {
    return 0;
  }
LABEL_14:
  if ((sub_1000FA02C(*(unsigned char *)(v1 + 57)) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t result = (v8 | v9) == 0;
  if (v8 && v9)
  {
    if (*(void *)(v1 + 64) == *(void *)(v0 + 64) && v8 == v9)
    {
      return 1;
    }
    else
    {
      return sub_10024FA60();
    }
  }
  return result;
}

uint64_t sub_100177630()
{
  return sub_100177554() & 1;
}

unint64_t sub_100177654()
{
  unint64_t result = qword_100315370;
  if (!qword_100315370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315370);
  }
  return result;
}

unint64_t sub_1001776A0()
{
  unint64_t result = qword_100315378;
  if (!qword_100315378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315378);
  }
  return result;
}

unint64_t sub_1001776EC()
{
  unint64_t result = qword_100315388;
  if (!qword_100315388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315388);
  }
  return result;
}

unint64_t sub_100177738()
{
  unint64_t result = qword_1003153A0;
  if (!qword_1003153A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003153A0);
  }
  return result;
}

unint64_t sub_100177784()
{
  unint64_t result = qword_1003153B0;
  if (!qword_1003153B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003153B0);
  }
  return result;
}

unint64_t sub_1001777D0()
{
  unint64_t result = qword_1003153B8;
  if (!qword_1003153B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003153B8);
  }
  return result;
}

unint64_t sub_10017781C()
{
  unint64_t result = qword_1003153C8;
  if (!qword_1003153C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003153C8);
  }
  return result;
}

unint64_t sub_100177868()
{
  unint64_t result = qword_1003153E0;
  if (!qword_1003153E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003153E0);
  }
  return result;
}

uint64_t sub_1001778B4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_1003153D0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100177924()
{
  unint64_t result = qword_1003153F8;
  if (!qword_1003153F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003153F8);
  }
  return result;
}

unint64_t sub_100177970()
{
  unint64_t result = qword_100315408;
  if (!qword_100315408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315408);
  }
  return result;
}

unint64_t sub_1001779BC()
{
  unint64_t result = qword_100315428;
  if (!qword_100315428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315428);
  }
  return result;
}

ValueMetadata *_s10AdHocOfferC10CodingKeysOMa()
{
  return &_s10AdHocOfferC10CodingKeysON;
}

void _s9CodeOfferC10CodingKeysOMa()
{
}

unsigned char *_s8DiscountC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100177AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8DiscountC10CodingKeysOMa()
{
  return &_s8DiscountC10CodingKeysON;
}

unsigned char *_s17ReferencableOfferC10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100177BC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s17ReferencableOfferC10CodingKeysOMa()
{
  return &_s17ReferencableOfferC10CodingKeysON;
}

unsigned char *_s10AdHocOfferC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100177CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12WinbackOfferC10CodingKeysOMa()
{
  return &_s12WinbackOfferC10CodingKeysON;
}

unint64_t sub_100177D08()
{
  unint64_t result = qword_100315430;
  if (!qword_100315430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315430);
  }
  return result;
}

unint64_t sub_100177D58()
{
  unint64_t result = qword_100315438;
  if (!qword_100315438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315438);
  }
  return result;
}

unint64_t sub_100177DA8()
{
  unint64_t result = qword_100315440;
  if (!qword_100315440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315440);
  }
  return result;
}

unint64_t sub_100177DF8()
{
  unint64_t result = qword_100315448;
  if (!qword_100315448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315448);
  }
  return result;
}

unint64_t sub_100177E48()
{
  unint64_t result = qword_100315450;
  if (!qword_100315450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315450);
  }
  return result;
}

unint64_t sub_100177E98()
{
  unint64_t result = qword_100315458;
  if (!qword_100315458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315458);
  }
  return result;
}

unint64_t sub_100177EE8()
{
  unint64_t result = qword_100315460;
  if (!qword_100315460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315460);
  }
  return result;
}

unint64_t sub_100177F38()
{
  unint64_t result = qword_100315468;
  if (!qword_100315468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315468);
  }
  return result;
}

unint64_t sub_100177F88()
{
  unint64_t result = qword_100315470;
  if (!qword_100315470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315470);
  }
  return result;
}

unint64_t sub_100177FD8()
{
  unint64_t result = qword_100315478;
  if (!qword_100315478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315478);
  }
  return result;
}

unint64_t sub_100178028()
{
  unint64_t result = qword_100315480;
  if (!qword_100315480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315480);
  }
  return result;
}

unint64_t sub_100178078()
{
  unint64_t result = qword_100315488;
  if (!qword_100315488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315488);
  }
  return result;
}

unint64_t sub_1001780C8()
{
  unint64_t result = qword_100315490;
  if (!qword_100315490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315490);
  }
  return result;
}

unint64_t sub_100178118()
{
  unint64_t result = qword_100315498;
  if (!qword_100315498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315498);
  }
  return result;
}

unint64_t sub_100178168()
{
  unint64_t result = qword_1003154A0;
  if (!qword_1003154A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003154A0);
  }
  return result;
}

uint64_t sub_1001781D8()
{
  return v0;
}

uint64_t sub_1001781F0()
{
  return v0;
}

uint64_t sub_100178208()
{
  return sub_10024FD20();
}

uint64_t sub_100178230()
{
  return v0;
}

uint64_t sub_100178240()
{
  return sub_10024FD40();
}

void *sub_100178260()
{
  return sub_10001C2A8(v0, v0[3]);
}

uint64_t sub_100178284()
{
  return sub_10024F940();
}

uint64_t sub_1001782A8()
{
  return v0;
}

uint64_t sub_1001782BC()
{
  return v0;
}

uint64_t sub_1001782DC()
{
  return v0;
}

uint64_t sub_1001782F0()
{
  *(unsigned char *)(v0 - 120) = 1;
  return sub_10024F840();
}

void *sub_100178318()
{
  return sub_10001C2A8(v0, v0[3]);
}

uint64_t sub_10017833C()
{
  *(unsigned char *)(v0 - 120) = 0;
  return sub_10024F830();
}

uint64_t sub_100178360()
{
  return v0;
}

uint64_t sub_100178370()
{
  return swift_allocObject();
}

void sub_100178394()
{
  sub_100175F80();
}

void sub_1001783B0()
{
  sub_100175DEC();
}

uint64_t sub_100178400()
{
  return 0;
}

uint64_t sub_10017840C()
{
  return swift_retain();
}

uint64_t sub_100178424(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D6828;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100178478(char a1)
{
  if (a1) {
    return 0x6C65636E6163;
  }
  else {
    return 7041889;
  }
}

uint64_t sub_1001784A4(char *a1, char *a2)
{
  return sub_1000F911C(*a1, *a2);
}

Swift::Int sub_1001784B0()
{
  return sub_1001D3914();
}

uint64_t sub_1001784B8()
{
  return sub_1000D0C38();
}

Swift::Int sub_1001784C0()
{
  return sub_1000D2C24();
}

uint64_t sub_1001784C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100178424(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001784F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100178478(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100178524@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10024E0F0();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v6 = sub_100019524(&qword_100315588);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v8 = a1[12];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100212134();
  uint64_t v10 = sub_100161540(0x6E6F69746361, 0xE600000000000000, v8);
  BOOL v12 = v11;
  swift_bridgeObjectRelease();
  if (v12
    && (char v13 = sub_100178424(v10, v12), v13 != 2)
    && (char v14 = v13, sub_100161540(6580596, 0xE300000000000000, v9), v15))
  {
    sub_10024E0D0();
    sub_1001790B8();
    sub_10024DC40();
    sub_10024F1A0();
    uint64_t v17 = v26[0];
    uint64_t v18 = sub_100161540(6580578, 0xE300000000000000, v9);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = swift_bridgeObjectRetain();
      sub_1000F2780(v21, (uint64_t)v22);
      sub_1000457A8(a1);
      swift_bridgeObjectRelease();
      memcpy(v23, v22, 0x139uLL);
      debugOnly(_:)(v23);
      LOBYTE(v24[0]) = v14;
      v24[1] = v17;
      _OWORD v24[2] = v18;
      v24[3] = v20;
      sub_1000458B4((uint64_t)v23, (uint64_t)&v24[4], &qword_10030A860);
      memcpy(v25, v24, 0x159uLL);
      debugOnly(_:)(v25);
      goto LABEL_7;
    }
    sub_1000457A8(a1);
  }
  else
  {
    sub_1000457A8(a1);
    swift_bridgeObjectRelease();
  }
  sub_1001790B0(v25);
LABEL_7:
  sub_1000458B4((uint64_t)v25, (uint64_t)v26, &qword_100315580);
  return sub_1000458B4((uint64_t)v26, a2, &qword_100315580);
}

uint64_t sub_100178808@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = v2;
  uint64_t v7 = (__n128 *)a1;
  sub_100065878(a1);
  sub_100178524((uint64_t *)v7, (uint64_t)v49);
  sub_1000458B4((uint64_t)v49, (uint64_t)v54, &qword_100315580);
  if (sub_1000E7B2C((uint64_t)v54) == 1)
  {
    sub_1000CB5C8(0x7571657220646142, 0xEB00000000747365, 6, (uint64_t)__dst);
    unsigned int v9 = sub_100179CFC();
    Swift::UInt16 v10 = v9;
    unsigned int v11 = HIWORD(v9);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t result = sub_100022D50();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    uint64_t v13 = 21;
  }
  else
  {
    char v14 = v54[0];
    uint64_t v3 = v55;
    uint64_t v4 = v56;
    uint64_t v5 = v2 + 88;
    sub_10001C2A8((void *)(v2 + 88), *(void *)(v2 + 112));
    uint64_t v15 = sub_1000A10B0();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      type metadata accessor for AllSetDialog();
      swift_allocObject();
      id v17 = v16;
      uint64_t v18 = sub_100150F8C();
      v28[0] = 0;
      v28[1] = 0;
      _OWORD v28[2] = _swiftEmptyArrayStorage;
      __int16 v29 = 0;
      uint64_t v30 = 0x3233363232333731;
      unint64_t v31 = 0xEB00000000373231;
      uint64_t v32 = 0;
      char v33 = 1;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      unint64_t v36 = 0xF000000000000000;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 1;
      long long v40 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v43 = 0u;
      char v44 = 22;
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = v18;
      char v48 = 2;
      if (v14)
      {
        sub_10001C2A8((void *)(v6 + 88), *(void *)(v6 + 112));
        if (sub_10009F408() != 4)
        {

          sub_100178C70(v49);
          unsigned int v26 = HTTPVersion.init(major:minor:)(1, 1);
          Swift::UInt16 v10 = v26;
          unsigned int v11 = HIWORD(v26);
          sub_10006382C(v28);
          type metadata accessor for HTTPResponseHead._Storage();
          uint64_t result = sub_100022D50();
          uint64_t v7 = 0;
          uint64_t v6 = 0;
          uint64_t v4 = 0;
          uint64_t v5 = 0;
          uint64_t v3 = 0;
          *(void *)(result + 16) = 0;
          *(void *)(result + 24) = 0;
          uint64_t v13 = 49;
          goto LABEL_11;
        }
        sub_100178C70(v49);
        swift_release();
        uint64_t v18 = 0;
        char v19 = 7;
        char v20 = 1;
      }
      else
      {
        sub_100178BF0(v17);
        sub_100178C70(v49);
        char v19 = 22;
        char v20 = 2;
      }
      *(void *)__src = 0;
      *(void *)&__src[8] = 0;
      *(void *)&__src[16] = _swiftEmptyArrayStorage;
      *(_WORD *)&__src[24] = 0;
      strcpy(&__src[32], "17322632127");
      *(_DWORD *)&__src[44] = -352321536;
      *(void *)&__src[48] = 0;
      __src[56] = 1;
      *(void *)&__src[64] = 0;
      *(void *)&__src[72] = 0;
      *(void *)&__src[80] = 0xF000000000000000;
      *(void *)&__src[88] = 0;
      *(void *)&__src[96] = 0;
      *(void *)&__src[104] = 1;
      memset(&__src[112], 0, 64);
      __src[176] = v19;
      *(void *)&__src[184] = 0;
      *(void *)&__src[192] = 0;
      *(void *)&__src[200] = v18;
      __src[208] = v20;
      memcpy(__dst, __src, 0xD1uLL);
      sub_1000636BC(__src);
      sub_1001C13C8(__dst, v7, (uint64_t)v50);
      uint64_t v7 = (__n128 *)v50[0];
      uint64_t v6 = v50[1];
      uint64_t v4 = v50[2];
      uint64_t v5 = v50[3];
      uint64_t v22 = v51;
      uint64_t v23 = v52;
      uint64_t v24 = v53;
      sub_10006382C(__src);

      uint64_t v3 = v22 | (v23 << 32) | (v24 << 48);
      unsigned int v25 = HTTPVersion.init(major:minor:)(1, 1);
      Swift::UInt16 v10 = v25;
      unsigned int v11 = HIWORD(v25);
      sub_10006382C(__src);
      type metadata accessor for HTTPResponseHead._Storage();
      uint64_t result = sub_100022D50();
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      uint64_t v13 = 3;
    }
    else
    {
      sub_100178C70(v49);
      sub_1000CB5C8(0xD000000000000014, 0x8000000100280640, 6, (uint64_t)__dst);
      unsigned int v21 = sub_100179CFC();
      Swift::UInt16 v10 = v21;
      unsigned int v11 = HIWORD(v21);
      type metadata accessor for HTTPResponseHead._Storage();
      uint64_t result = sub_100022D50();
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      uint64_t v13 = 25;
    }
  }
LABEL_11:
  *(void *)(result + 32) = v13;
  *(_WORD *)(result + 40) = v10;
  *(_WORD *)(result + 42) = v11;
  *(void *)a2 = result;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 16) = 2;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 62) = BYTE6(v3);
  *(_WORD *)(a2 + 60) = WORD2(v3);
  *(_DWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_100178BF0(void *a1)
{
  sub_1000D62F0(0);
  sub_1000D63A4(4u);
  sub_10001C2A8((void *)(v1 + 88), *(void *)(v1 + 112));
  return sub_1000A1278(a1, 1);
}

uint64_t type metadata accessor for AskToBuyPermissionRoute()
{
  return self;
}

uint64_t *sub_100178C70(uint64_t *a1)
{
  return a1;
}

void sub_100178D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    sub_100045DA0(a5, a6, a7, a8);
  }
}

uint64_t sub_100178F5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  sub_10024F330(25);
  swift_bridgeObjectRelease();
  if (a5) {
    v8._countAndFlagsBits = 0x6C65636E6163;
  }
  else {
    v8._countAndFlagsBits = 7041889;
  }
  if (a5) {
    unsigned int v9 = (void *)0xE600000000000000;
  }
  else {
    unsigned int v9 = (void *)0xE300000000000000;
  }
  v8._object = v9;
  sub_10024E800(v8);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x3D6469743FLL;
  v12._object = (void *)0xE500000000000000;
  sub_10024E800(v12);
  v13._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x3D64696226;
  v14._object = (void *)0xE500000000000000;
  sub_10024E800(v14);
  v15._countAndFlagsBits = a3;
  v15._object = a4;
  sub_10024E800(v15);
  uint64_t v10 = sub_1001CF778(0x7975426F546B7361, (void *)0xE90000000000002FLL);
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1001790B0(void *a1)
{
}

unint64_t sub_1001790B8()
{
  unint64_t result = qword_100315590;
  if (!qword_100315590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315590);
  }
  return result;
}

uint64_t destroy for AskToBuyPermissionRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AskToBuyPermissionRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = (void *)(a1 + 32);
  uint64_t v5 = (unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    memcpy((void *)(a1 + 32), v5, 0x139uLL);
  }
  else
  {
    *uint64_t v4 = *(void *)v5;
    *(unsigned char *)(a1 + 40) = v5[8];
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    uint64_t v7 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v7;
    uint64_t v8 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v8;
    uint64_t v9 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v9;
    uint64_t v10 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v10;
    uint64_t v11 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v11;
    uint64_t v12 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v12;
    uint64_t v22 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v22;
    uint64_t v13 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v13;
    *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
    uint64_t v14 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v14;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    uint64_t v15 = *(void *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v15;
    uint64_t v16 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v16;
    uint64_t v17 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v17;
    uint64_t v18 = *(void *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = v18;
    uint64_t v19 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = v19;
    uint64_t v20 = *(void *)(a2 + 336);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = v20;
    *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for AskToBuyPermissionRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 32);
  uint64_t v5 = (uint64_t *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) != 1)
  {
    if (v6 != 1)
    {
      uint64_t v10 = *v5;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *uint64_t v4 = v10;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 232) = v12;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
      return a1;
    }
    sub_1000468B4(a1 + 32);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x139uLL);
    return a1;
  }
  uint64_t v7 = *v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *uint64_t v4 = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v9 = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 232) = v9;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *initializeWithTake for AskToBuyPermissionRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x159uLL);
}

uint64_t assignWithTake for AskToBuyPermissionRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) != 1)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    if (v4 != 1)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v10;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v11;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
      uint64_t v12 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v12;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      uint64_t v13 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 320);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v18;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
      return a1;
    }
    sub_1000468B4(a1 + 32);
  }
  memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x139uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for AskToBuyPermissionRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 345))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AskToBuyPermissionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 344) = 0;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 345) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 345) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AskToBuyPermissionRequest()
{
  return &type metadata for AskToBuyPermissionRequest;
}

unsigned char *storeEnumTagSinglePayload for AskToBuyPermissionRequest.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100179C74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AskToBuyPermissionRequest.Action()
{
  return &type metadata for AskToBuyPermissionRequest.Action;
}

unint64_t sub_100179CB0()
{
  unint64_t result = qword_100315598;
  if (!qword_100315598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315598);
  }
  return result;
}

ASOctaneSupportXPCService::HTTPVersion sub_100179CFC()
{
  return HTTPVersion.init(major:minor:)(1, 1);
}

char *sub_100179D38(char *a1, char *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v9;
    uint64_t v10 = *((void *)a2 + 7);
    uint64_t v11 = a3[8];
    uint64_t v24 = &a2[v11];
    unsigned int v25 = &a1[v11];
    *((void *)a1 + 6) = *((void *)a2 + 6);
    *((void *)a1 + 7) = v10;
    uint64_t v12 = sub_10024E030();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v25, v24, v12);
    v13(&v4[a3[9]], &a2[a3[9]], v12);
    v13(&v4[a3[10]], &a2[a3[10]], v12);
    uint64_t v14 = a3[11];
    uint64_t v15 = a3[12];
    uint64_t v16 = &v4[v14];
    uint64_t v17 = &a2[v14];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = &v4[v15];
    uint64_t v20 = &a2[v15];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100179ED0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_10024E030();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[9], v5);
  v6(a1 + a2[10], v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_100179FC4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  uint64_t v9 = *((void *)a2 + 7);
  uint64_t v10 = a3[8];
  uint64_t v22 = &a2[v10];
  uint64_t v23 = &a1[v10];
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = v9;
  uint64_t v11 = sub_10024E030();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v23, v22, v11);
  v12(&a1[a3[9]], &a2[a3[9]], v11);
  v12(&a1[a3[10]], &a2[a3[10]], v11);
  uint64_t v13 = a3[11];
  uint64_t v14 = a3[12];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  uint64_t v18 = &a1[v14];
  uint64_t v19 = &a2[v14];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10017A10C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10024E030();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  v10(&a1[a3[10]], &a2[a3[10]], v9);
  uint64_t v11 = a3[11];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[12];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_10017A2AC(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10024E030();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(&a1[a3[9]], &a2[a3[9]], v11);
  v12(&a1[a3[10]], &a2[a3[10]], v11);
  uint64_t v13 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

char *sub_10017A398(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *((void *)a2 + 7);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_10024E030();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v14(&a1[a3[9]], &a2[a3[9]], v13);
  v14(&a1[a3[10]], &a2[a3[10]], v13);
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[12];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (uint64_t *)&a2[v20];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10017A4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017A4EC);
}

uint64_t sub_10017A4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10024E030();
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return sub_10001FA0C(v9, a2, v8);
  }
}

uint64_t sub_10017A574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017A588);
}

uint64_t sub_10017A588(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10024E030();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return sub_1000195B4(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AppTransaction()
{
  uint64_t result = qword_1003155F8;
  if (!qword_1003155F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10017A650()
{
  uint64_t result = sub_10024E030();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10017A6F4(uint64_t a1)
{
  uint64_t result = sub_10017B4EC(&qword_100315650, (void (*)(uint64_t))type metadata accessor for AppTransaction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10017A74C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8FE0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

unint64_t sub_10017A79C(char a1)
{
  unint64_t result = 0x6449656C646E7562;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x5474706965636572;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x4474736575716572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10017A8D4(char a1)
{
  unint64_t result = 0x6449656C646E7562;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x5474706965636572;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x4474736575716572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10017AA0C(void *a1)
{
  uint64_t v4 = sub_100019524(&qword_100315668);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_1000869F4();
  sub_10001C2A8(a1, a1[3]);
  sub_10017B3E0();
  sub_10024FD40();
  sub_1000EA868();
  if (!v1)
  {
    sub_1000EA868();
    type metadata accessor for AppTransaction();
    sub_1000EA868();
    sub_1000EA868();
    sub_1000EA868();
    sub_1000EA868();
    sub_10024E030();
    sub_10017B4EC((unint64_t *)&qword_100309420, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10017B740();
    sub_10017B740();
    sub_10017B740();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_10017AC58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = sub_10024E030();
  sub_10001B550();
  uint64_t v52 = v5;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v44 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v44 - v16;
  sub_100019524(&qword_100315658);
  sub_10001B550();
  uint64_t v46 = v19;
  uint64_t v47 = v18;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v53 = (int *)type metadata accessor for AppTransaction();
  __chkstk_darwin(v53, v23);
  sub_1000869F4();
  *(void *)uint64_t v2 = 0x65646F6358;
  *((void *)v2 + 1) = 0xE500000000000000;
  uint64_t v24 = a1[3];
  unsigned __int16 v50 = a1;
  sub_10001C2A8(a1, v24);
  sub_10017B3E0();
  char v48 = v22;
  unsigned int v25 = v49;
  sub_10024FD20();
  uint64_t v51 = v4;
  if (v25)
  {
    sub_10001C2EC((uint64_t)v50);
    return swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v26 = v17;
    unsigned int v49 = v13;
    char v44 = v9;
    char v61 = 0;
    *((void *)v2 + 2) = sub_10024F830();
    *((void *)v2 + 3) = v27;
    char v60 = 1;
    uint64_t v28 = v4;
    *((void *)v2 + 4) = sub_10024F830();
    *((void *)v2 + 5) = v29;
    char v59 = 2;
    uint64_t v30 = sub_10024F830();
    unint64_t v31 = v53;
    uint64_t v32 = (uint64_t *)&v2[v53[11]];
    *uint64_t v32 = v30;
    v32[1] = v33;
    char v58 = 3;
    uint64_t v34 = sub_10024F830();
    uint64_t v35 = (uint64_t *)&v2[v31[12]];
    *uint64_t v35 = v34;
    v35[1] = v36;
    char v57 = 5;
    *((void *)v2 + 6) = sub_10024F830();
    *((void *)v2 + 7) = v37;
    char v56 = 6;
    sub_10017B4EC(&qword_100309440, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10024F870();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v38(&v2[v53[10]], v26, v28);
    char v55 = 7;
    uint64_t v39 = v49;
    sub_10024F870();
    v38(&v2[v53[8]], v39, v28);
    char v54 = 8;
    sub_10024F870();
    long long v40 = v53;
    uint64_t v41 = sub_10017B780();
    v42(v41);
    v38(&v2[v40[9]], v44, v51);
    sub_10017B42C((uint64_t)v2, v45);
    sub_10001C2EC((uint64_t)v50);
    return sub_10017B490((uint64_t)v2);
  }
}

uint64_t sub_10017B260(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FB1E0(*a1, *a2);
}

Swift::Int sub_10017B26C()
{
  return sub_1001D3920(*v0);
}

uint64_t sub_10017B274(uint64_t a1)
{
  return sub_1000D2018(a1, *v1);
}

Swift::Int sub_10017B27C(uint64_t a1)
{
  return sub_1000D37EC(a1, *v1);
}

uint64_t sub_10017B284@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10017A74C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_10017B2B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10017A79C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10017B2E0()
{
  return sub_10017A8D4(*v0);
}

uint64_t sub_10017B2E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10017A798();
  *a1 = result;
  return result;
}

uint64_t sub_10017B310@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOBSDSocket.Option.ipv6_multicast_if.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10017B338(uint64_t a1)
{
  unint64_t v2 = sub_10017B3E0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10017B374(uint64_t a1)
{
  unint64_t v2 = sub_10017B3E0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10017B3B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10017AC58(a1, a2);
}

uint64_t sub_10017B3C8(void *a1)
{
  return sub_10017AA0C(a1);
}

unint64_t sub_10017B3E0()
{
  unint64_t result = qword_100315660;
  if (!qword_100315660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315660);
  }
  return result;
}

uint64_t sub_10017B42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppTransaction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017B490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppTransaction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10017B4EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppTransaction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017B600);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppTransaction.CodingKeys()
{
  return &type metadata for AppTransaction.CodingKeys;
}

unint64_t sub_10017B63C()
{
  unint64_t result = qword_100315670;
  if (!qword_100315670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315670);
  }
  return result;
}

unint64_t sub_10017B68C()
{
  unint64_t result = qword_100315678;
  if (!qword_100315678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315678);
  }
  return result;
}

unint64_t sub_10017B6DC()
{
  unint64_t result = qword_100315680;
  if (!qword_100315680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315680);
  }
  return result;
}

uint64_t sub_10017B728()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_10017B740()
{
  return sub_10024F980();
}

uint64_t sub_10017B780()
{
  return v0;
}

BOOL static NIONetworkInterface.== infix(_:_:)(uint64_t a1)
{
  sub_10017D2B8(a1);
  BOOL v6 = v6 && v4 == v5;
  if (v6 || (char v7 = sub_10024FA60(), result = 0, (v7 & 1) != 0))
  {
    if (static SocketAddress.== infix(_:_:)(*(void *)(v2 + 32), *(void *)(v1 + 32)))
    {
      sub_10017D20C();
      if (v6)
      {
        if (v10 != v9) {
          return 0;
        }
      }
      else
      {
        if (v10 == v9) {
          return 0;
        }
        sub_10017D16C();
        sub_10017D1A4();
        if ((v3 & 1) == 0) {
          return 0;
        }
      }
      sub_10017D20C();
      if (v6)
      {
        if (v12 == v11) {
          goto LABEL_19;
        }
      }
      else if (v12 != v11)
      {
        sub_10017D16C();
        sub_10017D1A4();
        if (v3)
        {
LABEL_19:
          sub_10017D20C();
          if (v6)
          {
            if (v14 == v13) {
              return sub_10017D380();
            }
          }
          else if (v14 != v13)
          {
            sub_10017D16C();
            sub_10017D1A4();
            if (v3) {
              return sub_10017D380();
            }
          }
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t NIONetworkInterface.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NIONetworkInterface.address.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t NIONetworkInterface.netmask.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkInterface.broadcastAddress.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkInterface.pointToPointDestinationAddress.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkInterface.multicastSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t NIONetworkInterface.interfaceIndex.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_10017B978(uint64_t result)
{
  uint64_t v2 = *(const char **)(result + 8);
  if (v2)
  {
    uint64_t v3 = result;
    *(void *)(v1 + 16) = sub_10024E820();
    *(void *)(v1 + 24) = v4;
    uint64_t v5 = *(void *)(v3 + 24);
    if (!v5 || (unint64_t v6 = sub_1000F1A2C(v5), (~v6 & 0xF000000000000007) == 0))
    {
      swift_bridgeObjectRelease();
      sub_10017D334();
      return 0;
    }
    uint64_t v7 = v6;
    *(void *)(v1 + 32) = v6;
    sub_10017D104(v3 + 32, (uint64_t)v15);
    sub_10017D104((uint64_t)v15, (uint64_t)&v16);
    uint64_t v8 = v16;
    if (v16)
    {
      swift_retain();
      *(void *)(v1 + 40) = sub_1000F1A2C(v8);
      int v9 = *(_DWORD *)(v3 + 16);
      if ((v9 & 2) != 0)
      {
LABEL_13:
        sub_10017D104(v3 + 40, (uint64_t)v14);
        sub_10017D104((uint64_t)v14, (uint64_t)&v17);
        if (v17)
        {
          *(void *)(v1 + 48) = sub_1000F1A2C(v17);
          *(void *)(v1 + 56) = 0xF000000000000007;
          goto LABEL_18;
        }
        int v9 = *(_DWORD *)(v3 + 16);
        if ((v9 & 0x10) == 0)
        {
LABEL_21:
          *(int64x2_t *)(v1 + 48) = vdupq_n_s64(0xF000000000000007);
          if ((v9 & 0x8000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_22;
        }
LABEL_16:
        sub_10017D104(v3 + 40, (uint64_t)v13);
        sub_10017D104((uint64_t)v13, (uint64_t)&v18);
        uint64_t v10 = v18;
        if (v18)
        {
          *(void *)(v1 + 48) = 0xF000000000000007;
          *(void *)(v1 + 56) = sub_1000F1A2C(v10);
LABEL_18:
          if ((*(unsigned char *)(v3 + 17) & 0x80) == 0)
          {
LABEL_19:
            char v11 = 0;
LABEL_23:
            *(unsigned char *)(v1 + 64) = v11;
            unsigned int v12 = sub_100028FBC(v2);
            sub_10002F2A0(v7);
            *(void *)(v1 + 72) = v12;
            return v1;
          }
LABEL_22:
          char v11 = 1;
          goto LABEL_23;
        }
        int v9 = *(_DWORD *)(v3 + 16);
        goto LABEL_21;
      }
    }
    else
    {
      *(void *)(v1 + 40) = 0xF000000000000007;
      int v9 = *(_DWORD *)(v3 + 16);
      if ((v9 & 2) != 0)
      {
        swift_retain();
        goto LABEL_13;
      }
      swift_retain();
    }
    if ((v9 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t *NIONetworkInterface.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_10002F2A0(v0[5]);
  sub_10002F2A0(v0[6]);
  sub_10002F2A0(v0[7]);
  return v0;
}

uint64_t NIONetworkInterface.__deallocating_deinit()
{
  NIONetworkInterface.deinit();
  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t NIONetworkInterface.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)0xE000000000000000;
  sub_10024F330(24);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v3;
  v14._object = v4;
  sub_10024E800(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = sub_10017D36C();
  sub_10024E800(v15);
  unint64_t v5 = v0[4];
  swift_retain();
  v16._countAndFlagsBits = SocketAddress.description.getter(v5);
  sub_10024E800(v16);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v6 = v1[5];
  sub_10017D294();
  if (v7)
  {
    uint64_t v10 = 0;
  }
  else
  {
    sub_10017D2D4();
    uint64_t v12 = v8;
    uint64_t v13 = v9;
    swift_retain();
    v17._countAndFlagsBits = SocketAddress.description.getter(v6);
    sub_10024E800(v17);
    swift_bridgeObjectRelease();
    sub_10002F2A0(v6);
    uint64_t v10 = v12;
    uint64_t v2 = v13;
  }
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v10;
  v18._object = v2;
  sub_10024E800(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6361667265746E49;
}

uint64_t sub_10017BD54()
{
  return NIONetworkInterface.debugDescription.getter();
}

BOOL sub_10017BD78(uint64_t *a1)
{
  return static NIONetworkInterface.== infix(_:_:)(*a1);
}

uint64_t NIONetworkDevice.name.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NIONetworkDevice.name.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10017D26C();
    sub_1001412AC();
    uint64_t v5 = swift_retain();
    unint64_t v6 = sub_10017CA78(v5);
    sub_10017D1D4((uint64_t)v6);
  }
  uint64_t v7 = *v2;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for NIONetworkDevice.Backing()
{
  return self;
}

uint64_t (*NIONetworkDevice.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_10017BEC4;
}

uint64_t sub_10017BEC4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (int64x2_t **)a1[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for NIONetworkDevice.Backing();
      sub_1001412AC();
      uint64_t v5 = sub_10017D238();
      *uint64_t v4 = sub_10017CA78(v5);
      swift_release();
    }
    unint64_t v6 = *v4;
    v6[1].i64[0] = v3;
    v6[1].i64[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for NIONetworkDevice.Backing();
      sub_1001412AC();
      uint64_t v7 = sub_10017D238();
      *uint64_t v4 = sub_10017CA78(v7);
      swift_release();
    }
    uint64_t v8 = *v4;
    v8[1].i64[0] = v3;
    v8[1].i64[1] = v2;
  }
  return swift_bridgeObjectRelease();
}

uint64_t NIONetworkDevice.address.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkDevice.address.setter()
{
  if ((sub_10017D250() & 1) == 0)
  {
    sub_10017D2F0();
    sub_1001412AC();
    uint64_t v2 = sub_10017D2A0();
    uint64_t v3 = sub_10017CA78(v2);
    sub_10017D1F0((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 32) = v0;
  return sub_10002F2A0(v4);
}

uint64_t (*NIONetworkDevice.address.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10017D284(a1);
  uint64_t v3 = *(void *)(v2 + 32);
  *uint64_t v1 = v3;
  sub_10002F288(v3);
  return sub_10017C078;
}

uint64_t sub_10017C078(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10017D308() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v4 = sub_10017D238();
      uint64_t v5 = sub_10017CA78(v4);
      sub_10017D1D4((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 32);
    *(void *)(*(void *)v3 + 32) = v2;
    sub_10002F2A0(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v7 = sub_10017D238();
      uint64_t v8 = sub_10017CA78(v7);
      sub_10017D1D4((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 32);
    *(void *)(*(void *)v3 + 32) = v2;
    uint64_t v2 = v9;
  }
  return sub_10002F2A0(v2);
}

uint64_t NIONetworkDevice.netmask.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkDevice.netmask.setter()
{
  if ((sub_10017D250() & 1) == 0)
  {
    sub_10017D2F0();
    sub_1001412AC();
    uint64_t v2 = sub_10017D2A0();
    uint64_t v3 = sub_10017CA78(v2);
    sub_10017D1F0((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 40) = v0;
  return sub_10002F2A0(v4);
}

uint64_t (*NIONetworkDevice.netmask.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10017D284(a1);
  uint64_t v3 = *(void *)(v2 + 40);
  *uint64_t v1 = v3;
  sub_10002F288(v3);
  return sub_10017C1EC;
}

uint64_t sub_10017C1EC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10017D308() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v4 = sub_10017D238();
      uint64_t v5 = sub_10017CA78(v4);
      sub_10017D1D4((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 40);
    *(void *)(*(void *)v3 + 40) = v2;
    sub_10002F2A0(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v7 = sub_10017D238();
      uint64_t v8 = sub_10017CA78(v7);
      sub_10017D1D4((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 40);
    *(void *)(*(void *)v3 + 40) = v2;
    uint64_t v2 = v9;
  }
  return sub_10002F2A0(v2);
}

uint64_t NIONetworkDevice.broadcastAddress.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkDevice.broadcastAddress.setter()
{
  if ((sub_10017D250() & 1) == 0)
  {
    sub_10017D2F0();
    sub_1001412AC();
    uint64_t v2 = sub_10017D2A0();
    uint64_t v3 = sub_10017CA78(v2);
    sub_10017D1F0((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 48) = v0;
  return sub_10002F2A0(v4);
}

uint64_t (*NIONetworkDevice.broadcastAddress.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10017D284(a1);
  uint64_t v3 = *(void *)(v2 + 48);
  *uint64_t v1 = v3;
  sub_10002F288(v3);
  return sub_10017C360;
}

uint64_t sub_10017C360(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10017D308() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v4 = sub_10017D238();
      uint64_t v5 = sub_10017CA78(v4);
      sub_10017D1D4((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 48);
    *(void *)(*(void *)v3 + 48) = v2;
    sub_10002F2A0(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v7 = sub_10017D238();
      uint64_t v8 = sub_10017CA78(v7);
      sub_10017D1D4((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 48);
    *(void *)(*(void *)v3 + 48) = v2;
    uint64_t v2 = v9;
  }
  return sub_10002F2A0(v2);
}

uint64_t NIONetworkDevice.pointToPointDestinationAddress.getter()
{
  return sub_10017D21C();
}

uint64_t NIONetworkDevice.pointToPointDestinationAddress.setter()
{
  if ((sub_10017D250() & 1) == 0)
  {
    sub_10017D2F0();
    sub_1001412AC();
    uint64_t v2 = sub_10017D2A0();
    uint64_t v3 = sub_10017CA78(v2);
    sub_10017D1F0((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 56) = v0;
  return sub_10002F2A0(v4);
}

uint64_t (*NIONetworkDevice.pointToPointDestinationAddress.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10017D284(a1);
  uint64_t v3 = *(void *)(v2 + 56);
  *uint64_t v1 = v3;
  sub_10002F288(v3);
  return sub_10017C4D4;
}

uint64_t sub_10017C4D4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10017D308() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v4 = sub_10017D238();
      uint64_t v5 = sub_10017CA78(v4);
      sub_10017D1D4((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 56);
    *(void *)(*(void *)v3 + 56) = v2;
    sub_10002F2A0(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10017D26C();
      sub_1001412AC();
      uint64_t v7 = sub_10017D238();
      uint64_t v8 = sub_10017CA78(v7);
      sub_10017D1D4((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 56);
    *(void *)(*(void *)v3 + 56) = v2;
    uint64_t v2 = v9;
  }
  return sub_10002F2A0(v2);
}

uint64_t NIONetworkDevice.multicastSupported.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t NIONetworkDevice.multicastSupported.setter(char a1)
{
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    sub_10017D2F0();
    sub_1001412AC();
    uint64_t v4 = sub_10017D2A0();
    uint64_t v5 = sub_10017CA78(v4);
    uint64_t result = sub_10017D1F0((uint64_t)v5);
  }
  *(unsigned char *)(*(void *)v1 + 64) = a1 & 1;
  return result;
}

uint64_t (*NIONetworkDevice.multicastSupported.modify(uint64_t a1))(uint64_t *a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(*(void *)v1 + 64);
  return sub_10017C610;
}

uint64_t sub_10017C610(uint64_t *a1)
{
  uint64_t v1 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    type metadata accessor for NIONetworkDevice.Backing();
    sub_1001412AC();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_10017CA78(v4);
    uint64_t result = sub_10017D1F0((uint64_t)v5);
  }
  *(unsigned char *)(*(void *)v1 + 64) = v2;
  return result;
}

uint64_t NIONetworkDevice.interfaceIndex.getter(uint64_t a1)
{
  return *(void *)(a1 + 72);
}

uint64_t NIONetworkDevice.interfaceIndex.setter()
{
  uint64_t result = sub_10017D250();
  if ((result & 1) == 0)
  {
    sub_10017D2F0();
    sub_1001412AC();
    uint64_t v3 = sub_10017D2A0();
    uint64_t v4 = sub_10017CA78(v3);
    uint64_t result = sub_10017D1F0((uint64_t)v4);
  }
  *(void *)(*(void *)v1 + 72) = v0;
  return result;
}

uint64_t (*NIONetworkDevice.interfaceIndex.modify(void *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(*(void *)v1 + 72);
  return sub_10017C6F8;
}

uint64_t sub_10017C6F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    type metadata accessor for NIONetworkDevice.Backing();
    sub_1001412AC();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_10017CA78(v4);
    uint64_t result = sub_10017D1F0((uint64_t)v5);
  }
  *(void *)(*(void *)v1 + 72) = v2;
  return result;
}

uint64_t NIONetworkDevice.init(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  type metadata accessor for NIONetworkDevice.Backing();
  sub_1001412AC();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10002F288(v4);
  sub_10002F288(v5);
  sub_10002F288(v6);
  uint64_t v9 = sub_10017CB34(v1, v2, v3, v4, v5, v6, v7, v8);
  swift_release();
  return v9;
}

uint64_t NIONetworkDevice.init(name:address:netmask:broadcastAddress:pointToPointDestinationAddress:multicastSupported:interfaceIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  return sub_10017CB34(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10017C8A8(uint64_t result)
{
  int64x2_t v2 = vdupq_n_s64(0xF000000000000007);
  *(int64x2_t *)(v1 + 32) = v2;
  *(int64x2_t *)(v1 + 48) = v2;
  uint64_t v3 = *(const char **)(result + 8);
  if (v3)
  {
    uint64_t v4 = result;
    *(void *)(v1 + 16) = sub_10024E820();
    *(void *)(v1 + 24) = v5;
    uint64_t v6 = *(void *)(v4 + 24);
    if (v6) {
      unint64_t v7 = sub_1000F1A2C(v6);
    }
    else {
      unint64_t v7 = 0xF000000000000007;
    }
    uint64_t v8 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = v7;
    sub_10002F2A0(v8);
    uint64_t v9 = *(void *)(v4 + 32);
    if (v9) {
      unint64_t v10 = sub_1000F1A2C(v9);
    }
    else {
      unint64_t v10 = 0xF000000000000007;
    }
    uint64_t v11 = *(void *)(v1 + 40);
    *(void *)(v1 + 40) = v10;
    sub_10002F2A0(v11);
    int v12 = *(_DWORD *)(v4 + 16);
    if ((v12 & 2) != 0 && (sub_10017D104(v4 + 40, (uint64_t)v21), sub_10017D104((uint64_t)v21, (uint64_t)&v22), v22))
    {
      unint64_t v13 = sub_1000F1A2C(v22);
      uint64_t v14 = *(void *)(v1 + 48);
      *(void *)(v1 + 48) = v13;
      sub_10002F2A0(v14);
      unint64_t v15 = 0xF000000000000007;
    }
    else if ((v12 & 0x10) != 0 {
           && (sub_10017D104(v4 + 40, (uint64_t)v20), sub_10017D104((uint64_t)v20, (uint64_t)&v23), (uint64_t v16 = v23) != 0))
    }
    {
      uint64_t v17 = *(void *)(v1 + 48);
      *(void *)(v1 + 48) = 0xF000000000000007;
      sub_10002F2A0(v17);
      unint64_t v15 = sub_1000F1A2C(v16);
    }
    else
    {
      uint64_t v18 = *(void *)(v1 + 48);
      unint64_t v15 = 0xF000000000000007;
      *(void *)(v1 + 48) = 0xF000000000000007;
      sub_10002F2A0(v18);
    }
    uint64_t v19 = *(void *)(v1 + 56);
    *(void *)(v1 + 56) = v15;
    sub_10002F2A0(v19);
    *(unsigned char *)(v1 + 64) = (v12 & 0x8000) != 0;
    *(void *)(v1 + 72) = sub_100028FBC(v3);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int64x2_t *sub_10017CA78(uint64_t a1)
{
  int64x2_t v3 = vdupq_n_s64(0xF000000000000007);
  v1[2] = v3;
  v1[3] = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  v1[1].i64[0] = v5;
  v1[1].i64[1] = v4;
  uint64_t v6 = *(void *)(a1 + 32);
  v1[2].i64[0] = v6;
  swift_bridgeObjectRetain();
  sub_10002F288(v6);
  sub_10002F2A0(0xF000000000000007);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = v1[2].i64[1];
  v1[2].i64[1] = v7;
  sub_10002F288(v7);
  sub_10002F2A0(v8);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = v1[3].i64[0];
  v1[3].i64[0] = v9;
  sub_10002F288(v9);
  sub_10002F2A0(v10);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = v1[3].i64[1];
  v1[3].i64[1] = v11;
  sub_10002F288(v11);
  sub_10002F2A0(v12);
  v1[4].i8[0] = *(unsigned char *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  swift_release();
  v1[4].i64[1] = v13;
  return v1;
}

uint64_t sub_10017CB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(int64x2_t *)(v8 + 40) = vdupq_n_s64(0xF000000000000007);
  *(void *)(v8 + 56) = 0xF000000000000007;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  sub_10002F2A0(0xF000000000000007);
  uint64_t v14 = *(void *)(v8 + 40);
  *(void *)(v8 + 40) = a4;
  sub_10002F2A0(v14);
  uint64_t v15 = *(void *)(v8 + 48);
  *(void *)(v8 + 48) = a5;
  sub_10002F2A0(v15);
  uint64_t v16 = *(void *)(v8 + 56);
  *(void *)(v8 + 56) = a6;
  sub_10002F2A0(v16);
  *(unsigned char *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  return v8;
}

uint64_t *sub_10017CBC4()
{
  swift_bridgeObjectRelease();
  sub_10002F2A0(v0[4]);
  sub_10002F2A0(v0[5]);
  sub_10002F2A0(v0[6]);
  sub_10002F2A0(v0[7]);
  return v0;
}

uint64_t sub_10017CC04()
{
  uint64_t v0 = sub_10017CBC4();
  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t NIONetworkDevice.debugDescription.getter(void *a1)
{
  int64x2_t v2 = (void *)0xE000000000000000;
  sub_10024F330(21);
  swift_bridgeObjectRelease();
  uint64_t v3 = a1[2];
  uint64_t v4 = (void *)a1[3];
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v3;
  v13._object = v4;
  sub_10024E800(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = sub_10017D36C();
  v14._object = (void *)0xEA00000000002073;
  sub_10024E800(v14);
  sub_10002F288(a1[4]);
  sub_100019524(&qword_10030F668);
  v15._countAndFlagsBits = sub_10024E700();
  sub_10024E800(v15);
  swift_bridgeObjectRelease();
  unint64_t v5 = a1[5];
  sub_10017D294();
  if (v6)
  {
    uint64_t v9 = 0;
  }
  else
  {
    sub_10017D2D4();
    uint64_t v11 = v7;
    uint64_t v12 = v8;
    swift_retain();
    v16._countAndFlagsBits = SocketAddress.description.getter(v5);
    sub_10024E800(v16);
    swift_bridgeObjectRelease();
    sub_10002F2A0(v5);
    uint64_t v9 = v11;
    int64x2_t v2 = v12;
  }
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v9;
  v17._object = v2;
  sub_10024E800(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x20656369766544;
}

uint64_t sub_10017CD90()
{
  return NIONetworkDevice.debugDescription.getter(*v0);
}

BOOL static NIONetworkDevice.== infix(_:_:)(uint64_t a1)
{
  sub_10017D2B8(a1);
  BOOL v4 = v4 && v2 == v3;
  if (v4 || (v5 = sub_10024FA60(), BOOL result = 0, (v5 & 1) != 0))
  {
    sub_10017D20C();
    if (v4)
    {
      if (v8 != v7) {
        return 0;
      }
    }
    else
    {
      if (v8 == v7) {
        return 0;
      }
      sub_10017D16C();
      sub_10017D1A4();
      if ((v1 & 1) == 0) {
        return 0;
      }
    }
    sub_10017D20C();
    if (v4)
    {
      if (v10 != v9) {
        return 0;
      }
    }
    else
    {
      if (v10 == v9) {
        return 0;
      }
      sub_10017D16C();
      sub_10017D1A4();
      if ((v1 & 1) == 0) {
        return 0;
      }
    }
    sub_10017D20C();
    if (v4)
    {
      if (v12 == v11) {
        goto LABEL_24;
      }
    }
    else if (v12 != v11)
    {
      sub_10017D16C();
      sub_10017D1A4();
      if (v1)
      {
LABEL_24:
        sub_10017D20C();
        if (v4)
        {
          if (v14 == v13) {
            return sub_10017D380();
          }
        }
        else if (v14 != v13)
        {
          sub_10017D16C();
          sub_10017D1A4();
          if (v1) {
            return sub_10017D380();
          }
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_10017CEB0(uint64_t *a1)
{
  return static NIONetworkDevice.== infix(_:_:)(*a1);
}

void NIONetworkDevice.hash(into:)(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  sub_10024E780();
  swift_bridgeObjectRelease();
  uint64_t v3 = a2[4];
  sub_10017D294();
  if (v4)
  {
    sub_10024FC30(0);
  }
  else
  {
    sub_10024FC30(1u);
    swift_retain();
    sub_10017D354();
    sub_10002F2A0(v3);
  }
  uint64_t v5 = a2[5];
  sub_10017D294();
  if (v4)
  {
    sub_10024FC30(0);
  }
  else
  {
    sub_10024FC30(1u);
    swift_retain();
    sub_10017D354();
    sub_10002F2A0(v5);
  }
  uint64_t v6 = a2[6];
  sub_10017D294();
  if (v4)
  {
    sub_10024FC30(0);
  }
  else
  {
    sub_10024FC30(1u);
    swift_retain();
    sub_10017D354();
    sub_10002F2A0(v6);
  }
  uint64_t v7 = a2[7];
  sub_10017D294();
  if (v4)
  {
    sub_10024FC30(0);
  }
  else
  {
    sub_10024FC30(1u);
    swift_retain();
    sub_10017D354();
    sub_10002F2A0(v7);
  }
  sub_10024FC20(a2[9]);
}

Swift::Int NIONetworkDevice.hashValue.getter(void *a1)
{
  sub_10024FC00();
  NIONetworkDevice.hash(into:)((uint64_t)v3, a1);
  return sub_10024FC70();
}

Swift::Int sub_10017D02C()
{
  return NIONetworkDevice.hashValue.getter(*v0);
}

void sub_10017D034(uint64_t a1)
{
  NIONetworkDevice.hash(into:)(a1, *v1);
}

Swift::Int sub_10017D03C()
{
  char v1 = *v0;
  sub_10024FC00();
  NIONetworkDevice.hash(into:)((uint64_t)v3, v1);
  return sub_10024FC70();
}

unint64_t sub_10017D084()
{
  unint64_t result = qword_100315688;
  if (!qword_100315688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315688);
  }
  return result;
}

uint64_t type metadata accessor for NIONetworkInterface()
{
  return self;
}

ValueMetadata *type metadata accessor for NIONetworkDevice()
{
  return &type metadata for NIONetworkDevice;
}

uint64_t sub_10017D104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100315840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_10017D16C()
{
  sub_10002F288(v1);
  sub_10002F288(v0);
  return static SocketAddress.== infix(_:_:)(v0, v1);
}

uint64_t sub_10017D1A4()
{
  sub_10002F2A0(v1);
  return sub_10002F2A0(v0);
}

uint64_t sub_10017D1D4(uint64_t a1)
{
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t sub_10017D1F0(uint64_t a1)
{
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t sub_10017D21C()
{
  sub_10002F288(v0);
  return v0;
}

uint64_t sub_10017D238()
{
  return swift_retain();
}

uint64_t sub_10017D250()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_10017D26C()
{
  return type metadata accessor for NIONetworkDevice.Backing();
}

uint64_t sub_10017D284(uint64_t result)
{
  *(void *)(result + 8) = v1;
  return result;
}

uint64_t sub_10017D2A0()
{
  return swift_retain();
}

uint64_t sub_10017D2B8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_10017D2F0()
{
  return type metadata accessor for NIONetworkDevice.Backing();
}

uint64_t sub_10017D308()
{
  sub_10002F288(v0);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_10017D334()
{
  return swift_deallocPartialClassInstance();
}

void sub_10017D354()
{
  SocketAddress.hash(into:)(v0, v1);
}

uint64_t sub_10017D36C()
{
  return 0x736572646461203ALL;
}

BOOL sub_10017D380()
{
  return *(void *)(v1 + 72) == *(void *)(v0 + 72);
}

void *ByteBuffer.LengthPrefixError.messageLengthDoesNotFitExactlyIntoRequiredIntegerFormat.unsafeMutableAddressor()
{
  return &static ByteBuffer.LengthPrefixError.messageLengthDoesNotFitExactlyIntoRequiredIntegerFormat;
}

void *ByteBuffer.LengthPrefixError.messageCouldNotBeReadSuccessfully.unsafeMutableAddressor()
{
  return &static ByteBuffer.LengthPrefixError.messageCouldNotBeReadSuccessfully;
}

uint64_t ByteBuffer.writeLengthPrefixed<A>(endianness:as:writeMessage:)(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v43 = a3;
  uint64_t v42 = a4;
  int v9 = a1 & 1;
  uint64_t v41 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v36 = v10;
  sub_10007A8E8();
  __chkstk_darwin(v11, v12);
  long long v40 = (char *)&v33 - v13;
  sub_10002F9C8();
  uint64_t v15 = v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v33 - v22;
  uint64_t v35 = *(unsigned int *)(v6 + 12);
  uint64_t v24 = *(void *)(*(void *)(a6 + 8) + 24);
  sub_10024F6A0();
  int v37 = v9;
  uint64_t v39 = a6;
  ByteBuffer.writeInteger<A>(_:endianness:as:)();
  uint64_t v38 = v25;
  uint64_t v26 = v15;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v23, a5);
  uint64_t v28 = v44;
  uint64_t result = v43(v6);
  if (v28) {
    return v24;
  }
  long long v43 = (uint64_t (*)(uint64_t))v6;
  uint64_t v44 = v24;
  uint64_t v34 = v27;
  uint64_t v42 = v26;
  uint64_t v30 = (uint64_t)v40;
  uint64_t v31 = v41;
  uint64_t v24 = v38 + result;
  if (!__OFADD__(v38, result))
  {
    uint64_t v45 = result;
    sub_1000EBDE0();
    sub_10024EC60();
    if (sub_10001FA0C(v30, 1, a5) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v30, v31);
      sub_10017D65C();
      swift_allocError();
      *uint64_t v32 = 0;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v19, v30, a5);
      ByteBuffer.setInteger<A>(_:at:endianness:as:)();
      v34(v19, a5);
    }
    return v24;
  }
  __break(1u);
  return result;
}

unint64_t sub_10017D65C()
{
  unint64_t result = qword_100315848;
  if (!qword_100315848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315848);
  }
  return result;
}

uint64_t ByteBuffer.readLengthPrefixed<A, B>(endianness:as:readMessage:)@<X0>(char a1@<W0>, void (*a2)(void)@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v24[1] = a3;
  uint64_t v25 = a2;
  char v12 = a1 & 1;
  uint64_t v13 = sub_10024F030();
  sub_10002F9C8();
  v24[0] = v14;
  sub_10007A8E8();
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v24 - v17;
  if (ByteBuffer.readLengthPrefixedSlice<A>(endianness:as:)(v12, v19, a4, a6))
  {
    v25();
    if (v7) {
      return swift_release();
    }
    if (sub_10001FA0C((uint64_t)v18, 1, a5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24[0] + 8))(v18, v13);
      sub_10017D65C();
      swift_allocError();
      *uint64_t v20 = 1;
      swift_willThrow();
      return swift_release();
    }
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a5 - 8) + 32))(a7, v18, a5);
    uint64_t v22 = a7;
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v22 = a7;
    uint64_t v23 = 1;
  }
  return sub_1000195B4(v22, v23, 1, a5);
}

uint64_t ByteBuffer.readLengthPrefixedSlice<A>(endianness:as:)(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  char v7 = a1 & 1;
  uint64_t v8 = *(void *)v4;
  uint64_t v9 = *(unsigned int *)(v4 + 8);
  unint64_t v10 = v9 | ((unint64_t)*(unsigned int *)(v4 + 12) << 32);
  unint64_t v11 = *(unsigned int *)(v4 + 16) | ((unint64_t)*(unsigned __int16 *)(v4 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v4 + 22) << 48);
  swift_retain();
  uint64_t v13 = ByteBuffer.getLengthPrefixedSlice<A>(at:endianness:as:)(v9, v7, v12, v8, v10, v11, a3, a4);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  if (!v13) {
    return 0;
  }
  v20[0] = v13;
  v20[1] = v15;
  int v21 = v17;
  __int16 v22 = WORD2(v17);
  char v23 = BYTE6(v17);
  sub_10017E184((uint64_t)v20, v4, (uint64_t)a3, (uint64_t)&v19);
  swift_release();
  return v19;
}

uint64_t ByteBuffer.getLengthPrefixedSlice<A>(at:endianness:as:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v102 = a6;
  LODWORD(v101) = a2 & 1;
  uint64_t v98 = *(void *)(a8 + 8);
  uint64_t v90 = *(void *)(*(void *)(v98 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10007A8E8();
  __chkstk_darwin(v12, v13);
  uint64_t v86 = (char *)&v84 - v14;
  uint64_t v96 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v16 = v15;
  sub_10007A8E8();
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v84 - v19;
  sub_10002F9C8();
  uint64_t v97 = v21;
  __chkstk_darwin(v22, v23);
  uint64_t v87 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017E41C();
  __chkstk_darwin(v25, v26);
  sub_1000ACD10();
  uint64_t v89 = v27;
  sub_10017E41C();
  __chkstk_darwin(v28, v29);
  sub_1000ACD10();
  uint64_t v95 = v30;
  sub_10017E41C();
  __chkstk_darwin(v31, v32);
  sub_1000ACD10();
  uint64_t v99 = v33;
  sub_10017E41C();
  __chkstk_darwin(v34, v35);
  sub_1000ACD10();
  uint64_t v91 = v36;
  sub_10017E41C();
  __chkstk_darwin(v37, v38);
  sub_1000ACD10();
  uint64_t v100 = v39;
  sub_10017E41C();
  __chkstk_darwin(v40, v41);
  __chkstk_darwin(v42, v43);
  uint64_t v45 = (char *)&v84 - v44;
  uint64_t v94 = v46;
  __chkstk_darwin(v47, v48);
  unsigned __int16 v50 = (char *)&v84 - v49;
  uint64_t v51 = v101;
  uint64_t v92 = v102 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v93 = a4;
  unint64_t v101 = a5;
  uint64_t v102 = a1;
  ByteBuffer.getInteger<A>(at:endianness:as:)(a1, v51, a5, v92, a7, (uint64_t)v20);
  if (sub_10001FA0C((uint64_t)v20, 1, (uint64_t)a7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v96);
    return 0;
  }
  uint64_t v52 = v97;
  unsigned __int8 v53 = (void (*)(void, void, void))*((void *)v97 + 4);
  uint64_t v96 = (uint64_t)(v97 + 32);
  uint64_t v84 = v53;
  v53(v50, v20, a7);
  char v54 = (void (*)(void))*((void *)v52 + 2);
  ((void (*)(char *, char *, void *))v54)(v45, v50, a7);
  char v55 = sub_10024F220();
  sub_10017E398();
  v54();
  uint64_t v85 = v50;
  BOOL v56 = (v55 & 1) != 0 && sub_10017E3AC() > 64;
  char v57 = (void (*)(void))*((void *)v52 + 1);
  sub_10017E388();
  v57();
  sub_10017E398();
  v54();
  if (!v56) {
    goto LABEL_11;
  }
  v104[0] = 0x8000000000000000;
  if (sub_10017E3E4())
  {
    if (sub_10017E3AC() >= 64)
    {
      unint64_t v72 = sub_1000EBDE0();
      sub_10017E3C8((uint64_t)v104, (uint64_t)&type metadata for Int, v72);
      char v73 = sub_10024E5D0();
      sub_10017E388();
      v57();
      sub_10017E388();
      v57();
      if (v73) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v58 = sub_10017E428();
      sub_10017E388();
      v57();
      if (v58 < v104[0]) {
        goto LABEL_40;
      }
    }
    goto LABEL_12;
  }
  uint64_t v97 = v45;
  char v67 = sub_10017E3E4();
  uint64_t v68 = sub_10017E3AC();
  if ((v67 & 1) == 0)
  {
    if (v68 < 64)
    {
      uint64_t v74 = sub_10017E428();
      sub_10017E388();
      v57();
      if (v74 < v104[0]) {
        goto LABEL_40;
      }
      goto LABEL_12;
    }
LABEL_11:
    sub_10017E388();
    v57();
    goto LABEL_12;
  }
  if (v68 <= 64)
  {
    swift_getAssociatedConformanceWitness();
    sub_10024FB30();
    sub_10024FA40();
    char v80 = sub_10024E5D0();
    sub_10017E388();
    v57();
    sub_10017E400();
    v81();
    if (v80)
    {
      sub_10017E388();
      v57();
      goto LABEL_40;
    }
    uint64_t v82 = v104[0];
    uint64_t v83 = sub_10017E428();
    sub_10017E388();
    v57();
    if (v83 < v82) {
      goto LABEL_40;
    }
  }
  else
  {
    unint64_t v69 = sub_1000EBDE0();
    sub_10017E3C8((uint64_t)v104, (uint64_t)&type metadata for Int, v69);
    char v70 = sub_10024E5D0();
    sub_10017E388();
    v57();
    sub_10017E388();
    v57();
    if (v70) {
      goto LABEL_40;
    }
  }
LABEL_12:
  uint64_t v59 = sub_10024F210();
  sub_10017E398();
  v54();
  if (v59 >= 65)
  {
    sub_10017E388();
    v57();
    uint64_t v60 = sub_10017E440();
    ((void (*)(uint64_t))v54)(v60);
    goto LABEL_14;
  }
  uint64_t v65 = sub_10024F210();
  sub_10017E388();
  v57();
  if (v65 != 64)
  {
    uint64_t v71 = sub_10017E440();
    ((void (*)(uint64_t))v54)(v71);
LABEL_27:
    sub_10017E388();
    v57();
    goto LABEL_35;
  }
  char v66 = sub_10017E3E4();
  sub_10017E398();
  v54();
  if (v66) {
    goto LABEL_27;
  }
LABEL_14:
  v104[0] = 0x7FFFFFFFFFFFFFFFLL;
  char v61 = sub_10017E3E4();
  uint64_t v62 = sub_10017E3AC();
  if (v61)
  {
    if (v62 > 64)
    {
      unint64_t v63 = sub_1000EBDE0();
      sub_10017E3C8((uint64_t)v104, (uint64_t)&type metadata for Int, v63);
      char v64 = sub_10024E5D0();
      sub_10017E388();
      v57();
      goto LABEL_34;
    }
LABEL_25:
    sub_10017E428();
    sub_10017E388();
    v57();
    goto LABEL_35;
  }
  if (v62 <= 63) {
    goto LABEL_25;
  }
  uint64_t v103 = 0x7FFFFFFFFFFFFFFFLL;
  sub_10017E400();
  v75();
  unint64_t v76 = sub_1000EBDE0();
  sub_10017E3C8((uint64_t)&v103, (uint64_t)&type metadata for Int, v76);
  char v64 = sub_10024E5D0();
  sub_10017E388();
  v57();
LABEL_34:
  sub_10017E388();
  v57();
  if (v64)
  {
LABEL_40:
    sub_10017E388();
    v57();
    ((void (*)(char *, void *))v57)(v85, a7);
    return 0;
  }
LABEL_35:
  uint64_t v77 = sub_10017E428();
  sub_10017E388();
  v57();
  uint64_t result = v102 + v94;
  if (!__OFADD__(v102, v94))
  {
    uint64_t v79 = ByteBuffer.getSlice(at:length:)(result, v77, v93, v101, v92);
    sub_10017E388();
    v57();
    return v79;
  }
  __break(1u);
  return result;
}

uint64_t sub_10017E184@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v4 = *(_DWORD *)(result + 8);
  uint64_t v5 = *(void *)(result + 12);
  unsigned int v6 = v5 - v4;
  if (v5 < v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(*(void *)(a3 - 8) + 64);
  BOOL v8 = __OFADD__(v7, v6);
  int v9 = v7 + v6;
  if (v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  int v10 = *(_DWORD *)(a2 + 8);
  BOOL v11 = __CFADD__(v10, v9);
  int v12 = v10 + v9;
  if (!v11)
  {
    uint64_t v13 = *(void *)result;
    __int16 v14 = *(_WORD *)(result + 20);
    char v15 = *(unsigned char *)(result + 22);
    *(_DWORD *)(a2 + 8) = v12;
    *(void *)a4 = v13;
    *(_DWORD *)(a4 + 8) = v4;
    *(void *)(a4 + 12) = v5;
    *(_WORD *)(a4 + 20) = v14;
    *(unsigned char *)(a4 + 22) = v15;
    return swift_retain();
  }
LABEL_7:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ByteBuffer.LengthPrefixError()
{
  return &type metadata for ByteBuffer.LengthPrefixError;
}

unsigned char *_s17LengthPrefixErrorV9BaseErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017E300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17LengthPrefixErrorV9BaseErrorOMa()
{
  return &_s17LengthPrefixErrorV9BaseErrorON;
}

unint64_t sub_10017E33C()
{
  unint64_t result = qword_100315850;
  if (!qword_100315850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315850);
  }
  return result;
}

uint64_t sub_10017E3AC()
{
  return sub_10024F210();
}

uint64_t sub_10017E3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)(a1, a2, a3, v3, v4);
}

uint64_t sub_10017E3E4()
{
  return sub_10024F220();
}

uint64_t sub_10017E428()
{
  return sub_10024F200();
}

uint64_t sub_10017E440()
{
  return v0;
}

unsigned __int8 *sub_10017E454(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = sub_10024DF30();
  if ((v7 & 0x8000000000000000) != 0 || (CC_LONG v8 = v7, HIDWORD(v7)))
  {
    sub_10003C4F8();
    unint64_t result = (unsigned __int8 *)sub_10024F660();
    __break(1u);
  }
  else
  {
    sub_1001D58C0(0);
    return CC_SHA256(a1, v8, (unsigned __int8 *)(*(void *)a5 + 32));
  }
  return result;
}

uint64_t static _IntegerBitPacking.packUU<A, B, C>(_:_:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10002F9C8();
  uint64_t v29 = v6;
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = v10 - v9;
  sub_10002F9C8();
  __chkstk_darwin(v12, v13);
  sub_10002059C();
  uint64_t v16 = v15 - v14;
  sub_10002F9C8();
  uint64_t v18 = v17;
  __chkstk_darwin(v19, v20);
  __chkstk_darwin(v21, v22);
  double v25 = __chkstk_darwin(v23, v24);
  (*(void (**)(uint64_t, double))(v26 + 16))(v16, v25);
  sub_10024F240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v11, a2, a5);
  sub_10024F240();
  sub_10024F5D0();
  sub_1000EBDE0();
  sub_10024F1F0();
  sub_10024F1D0();
  uint64_t v27 = *(void (**)(void))(v18 + 8);
  sub_10003C99C();
  v27();
  sub_10003C99C();
  v27();
  sub_10003C99C();
  return ((uint64_t (*)(void))v27)();
}

uint64_t static _IntegerBitPacking.unpackUU<A, B, C>(_:leftType:rightType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v43 = a13;
  uint64_t v44 = a3;
  __chkstk_darwin(a1, a2);
  sub_10002059C();
  v42[1] = v15 - v14;
  __chkstk_darwin(v16, v17);
  sub_10002059C();
  sub_10002F9C8();
  uint64_t v45 = v18;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v49 = (char *)v42 - v25;
  __chkstk_darwin(v26, v27);
  v42[0] = (char *)v42 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v48 = (char *)v42 - v31;
  __chkstk_darwin(v32, v33);
  unsigned __int16 v50 = (char *)v42 - v34;
  v42[3] = v35;
  sub_10024F600();
  v42[4] = *(void *)(a11 + 8);
  sub_10024F240();
  uint64_t v36 = v43;
  sub_10024F600();
  _OWORD v42[2] = *(void *)(v36 + 8);
  sub_10024F240();
  sub_10024F1C0();
  uint64_t v51 = sub_10024F5D0();
  sub_1000EBDE0();
  sub_10024F1E0();
  uint64_t v37 = v49;
  sub_10024F1C0();
  uint64_t v38 = v45;
  uint64_t v39 = *(void (**)(void))(v45 + 8);
  sub_10017EBA0();
  v39();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v40(v22, v37, a6);
  sub_10024F240();
  v40(v22, (char *)v42[0], a6);
  sub_10024F240();
  sub_10017EBA0();
  v39();
  sub_10017EBA0();
  v39();
  sub_10017EBA0();
  v39();
  sub_10017EBA0();
  return ((uint64_t (*)(void))v39)();
}

unint64_t static IntegerBitPacking.packUInt32UInt16UInt8(_:_:_:)(unsigned int a1, unsigned __int16 a2, unsigned __int8 a3)
{
  return ((unint64_t)a2 << 32) | ((unint64_t)a3 << 48) | a1;
}

uint64_t static IntegerBitPacking.unpackUInt32UInt16UInt8(_:)(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t static IntegerBitPacking.packUInt8UInt8(_:_:)(int a1, unsigned __int8 a2)
{
  return a2 | (a1 << 8);
}

uint64_t static IntegerBitPacking.unpackUInt8UInt8(_:)(unsigned int a1)
{
  return bswap32(a1) >> 16;
}

uint64_t static IntegerBitPacking.packUInt16UInt8(_:_:)(unsigned __int16 a1, unsigned __int8 a2)
{
  return a2 | (a1 << 8);
}

ASOctaneSupportXPCService::_UInt24 __swiftcall _UInt24.init(_:)(Swift::UInt32 a1)
{
  Swift::UInt16 v1 = a1 >> 8;
  result._backing._0 = v1;
  return result;
}

unint64_t static IntegerBitPacking.packUInt32CInt(_:_:)(uint64_t a1, unsigned int a2)
{
  return a2 | (unint64_t)(a1 << 32);
}

uint64_t static IntegerBitPacking.unpackUInt32CInt(_:)(uint64_t a1)
{
  return __ROR8__(a1, 32);
}

ValueMetadata *type metadata accessor for _IntegerBitPacking()
{
  return &type metadata for _IntegerBitPacking;
}

ValueMetadata *type metadata accessor for IntegerBitPacking()
{
  return &type metadata for IntegerBitPacking;
}

void Array<A>.init(buffer:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  BOOL v3 = HIDWORD(a2) >= a2;
  Swift::Int v4 = (HIDWORD(a2) - a2);
  if (v3)
  {
    if ((unint64_t)ByteBuffer.getBytes(at:length:)(v2, v4))
    {
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void String.init(buffer:)(uint64_t a1, uint64_t a2)
{
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_10024E760();
    swift_release();
  }
}

void DispatchData.init(buffer:)(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unsigned int v2 = a1;
  unint64_t v4 = HIDWORD(a1);
  uint64_t v5 = sub_100019524(&qword_10030D7E8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v19 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v19 - v15;
  if (v4 < v2)
  {
    __break(1u);
  }
  else
  {
    ByteBuffer.getDispatchData(at:length:)();
    sub_10008EE88((uint64_t)v12, (uint64_t)v8);
    uint64_t v17 = sub_10024E310();
    uint64_t v18 = 1;
    if (sub_10001FA0C((uint64_t)v8, 1, v17) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16, v8, v17);
      uint64_t v18 = 0;
    }
    sub_1000195B4((uint64_t)v16, v18, 1, v17);
    sub_10008EEF0((uint64_t)v12);
    if (sub_10001FA0C((uint64_t)v16, 1, v17) != 1)
    {
      swift_release();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a2, v16, v17);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_10017EE78(unsigned __int8 a1)
{
  uint64_t v3 = type metadata accessor for PurchaseConfiguration();
  uint64_t v4 = 0;
  int v5 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 44));
  if (v5 != 3)
  {
    uint64_t v6 = (uint64_t *)(v1 + *(int *)(v3 + 40));
    if (v6[1]) {
      BOOL v7 = v5 == a1;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7)
    {
      uint64_t v4 = *v6;
      swift_bridgeObjectRetain();
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t type metadata accessor for PurchaseConfiguration()
{
  uint64_t result = qword_1003158B0;
  if (!qword_1003158B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10017EF44(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10024E0A0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_100019524(&qword_10030C100);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      sub_1000195B4((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = (char *)v4 + v16;
    uint64_t v20 = (char *)a2 + v16;
    uint64_t v21 = sub_10024E030();
    if (sub_10001FA0C((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      sub_1000195B4((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v23 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v24 = (void *)((char *)v4 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v27) = *((unsigned char *)a2 + v27);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10017F18C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10024E0A0();
  if (!sub_10001FA0C(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_10024E030();
  if (!sub_10001FA0C(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

void *sub_10017F294(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10024E0A0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_100019524(&qword_10030C100);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    sub_1000195B4((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  uint64_t v17 = (char *)a1 + v14;
  uint64_t v18 = (char *)a2 + v14;
  uint64_t v19 = sub_10024E030();
  if (sub_10001FA0C((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    sub_1000195B4((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v21 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10017F48C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10024E0A0();
  int v10 = sub_10001FA0C((uint64_t)v7, 1, v9);
  int v11 = sub_10001FA0C((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      sub_1000195B4((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_100019524(&qword_10030C100);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  *(void *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_10024E030();
  int v22 = sub_10001FA0C((uint64_t)v19, 1, v21);
  int v23 = sub_10001FA0C((uint64_t)v20, 1, v21);
  if (!v22)
  {
    uint64_t v24 = *(void *)(v21 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v25 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  sub_1000195B4((uint64_t)v19, 0, 1, v21);
LABEL_13:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v26 = a3[10];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

_OWORD *sub_10017F7C4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10024E0A0();
  if (sub_10001FA0C((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_100019524(&qword_10030C100);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    sub_1000195B4((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  unsigned char v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = sub_10024E030();
  if (sub_10001FA0C((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    sub_1000195B4((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  return a1;
}

void *sub_10017F990(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10024E0A0();
  int v12 = sub_10001FA0C((uint64_t)v9, 1, v11);
  int v13 = sub_10001FA0C((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      sub_1000195B4((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = sub_100019524(&qword_10030C100);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  uint64_t v22 = sub_10024E030();
  int v23 = sub_10001FA0C((uint64_t)v20, 1, v22);
  int v24 = sub_10001FA0C((uint64_t)v21, 1, v22);
  if (!v23)
  {
    uint64_t v25 = *(void *)(v22 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v26 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  sub_1000195B4((uint64_t)v20, 0, 1, v22);
LABEL_13:
  uint64_t v27 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v32) = *((unsigned char *)a2 + v32);
  return a1;
}

uint64_t sub_10017FC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017FCA0);
}

uint64_t sub_10017FCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100019524(&qword_10030C100);
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
      uint64_t v11 = *(int *)(a3 + 32);
    }
    return sub_10001FA0C(a1 + v11, a2, v10);
  }
}

uint64_t sub_10017FD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017FD68);
}

uint64_t sub_10017FD68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_100019524(&qword_10030C100);
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
      uint64_t v11 = *(int *)(a4 + 32);
    }
    return sub_1000195B4(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_10017FE18()
{
  sub_10017FF4C(319, (unint64_t *)&unk_1003158C0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_10017FF4C(319, (unint64_t *)&qword_10030EDF0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10017FF4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10024F030();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10017FFA0()
{
  return 1;
}

uint64_t sub_10017FFC0()
{
  return 0;
}

uint64_t sub_10017FFCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F69746F6D6F7270 && a2 == 0xEB000000006C616ELL;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701080931 && a2 == 0xE400000000000000;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6B6361626E6977 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100180124(char a1)
{
  if (!a1) {
    return 0x6F69746F6D6F7270;
  }
  if (a1 == 1) {
    return 1701080931;
  }
  return 0x6B6361626E6977;
}

uint64_t sub_10018017C(void *a1, int a2)
{
  int v32 = a2;
  sub_100019524(&qword_1003159B0);
  sub_10001B550();
  uint64_t v30 = v6;
  uint64_t v31 = v5;
  __chkstk_darwin(v5, v7);
  sub_1000589AC();
  uint64_t v29 = v8;
  sub_100019524(&qword_1003159B8);
  sub_10001B550();
  uint64_t v27 = v10;
  uint64_t v28 = v9;
  __chkstk_darwin(v9, v11);
  int v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100019524(&qword_1003159C0);
  sub_10001B550();
  uint64_t v26 = v15;
  __chkstk_darwin(v16, v17);
  sub_1000DD1B8();
  uint64_t v18 = sub_100019524(&qword_1003159C8);
  sub_10001B550();
  uint64_t v20 = v19;
  __chkstk_darwin(v21, v22);
  sub_100026000();
  sub_10001C2A8(a1, a1[3]);
  sub_100181DD4();
  sub_10024FD40();
  if ((_BYTE)v32)
  {
    if (v32 == 1)
    {
      char v34 = 1;
      sub_100181E6C();
      sub_10018234C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
    }
    else
    {
      char v35 = 2;
      sub_100181E20();
      uint64_t v23 = v29;
      sub_10018234C();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v23, v31);
    }
  }
  else
  {
    char v33 = 0;
    sub_100181EB8();
    sub_10018234C();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v2, v14);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v3, v18);
}

char *sub_1001803F8(void *a1)
{
  sub_100019524(&qword_100315968);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1000589AC();
  sub_100019524(&qword_100315970);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_1000869F4();
  sub_100019524(&qword_100315978);
  sub_10001B550();
  __chkstk_darwin(v7, v8);
  sub_100026000();
  uint64_t v9 = sub_100019524(&qword_100315980);
  sub_10001B550();
  uint64_t v28 = v10;
  __chkstk_darwin(v11, v12);
  sub_1000ACE78();
  sub_10001C2A8(a1, a1[3]);
  sub_100181DD4();
  sub_10024FD20();
  if (v29) {
    goto LABEL_9;
  }
  uint64_t v30 = (uint64_t)a1;
  int v13 = v1;
  uint64_t v14 = sub_10024F890();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    uint64_t v21 = sub_10024F3D0();
    swift_allocError();
    uint64_t v23 = v22;
    unint64_t v1 = (char *)v22 + *(int *)(sub_100019524(&qword_100315990) + 48);
    *uint64_t v23 = &type metadata for PurchaseConfiguration.OfferType;
    sub_10024F7B0();
    sub_10024F3B0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, enum case for DecodingError.typeMismatch(_:), v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v9);
    a1 = (void *)v30;
LABEL_9:
    sub_10001C2EC((uint64_t)a1);
    return v1;
  }
  uint64_t v16 = v1;
  unint64_t v1 = (char *)*(unsigned __int8 *)(v14 + 32);
  sub_10015B1E8(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
  uint64_t v18 = v17;
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    int v13 = v16;
    goto LABEL_8;
  }
  if (v1)
  {
    sub_100181E6C();
    sub_100182368();
    sub_10003FDC8();
    v25();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v9);
  }
  else
  {
    sub_100181EB8();
    sub_100182368();
    sub_10003FDC8();
    v26();
    swift_unknownObjectRelease();
    sub_10003FDC8();
    v27();
  }
  sub_10001C2EC(v30);
  return v1;
}

uint64_t sub_1001808A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10017FFA0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001808D4(uint64_t a1)
{
  unint64_t v2 = sub_100181E6C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100180910(uint64_t a1)
{
  unint64_t v2 = sub_100181E6C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10018094C()
{
  return sub_100180124(*v0);
}

uint64_t sub_100180954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10017FFCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10018097C(uint64_t a1)
{
  unint64_t v2 = sub_100181DD4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001809B8(uint64_t a1)
{
  unint64_t v2 = sub_100181DD4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001809F4(uint64_t a1)
{
  unint64_t v2 = sub_100181EB8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100180A30(uint64_t a1)
{
  unint64_t v2 = sub_100181EB8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100180A6C(uint64_t a1)
{
  unint64_t v2 = sub_100181E20();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100180AA8(uint64_t a1)
{
  unint64_t v2 = sub_100181E20();
  return CodingKey.debugDescription.getter(a1, v2);
}

char *sub_100180AE4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001803F8(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_100180B10(void *a1)
{
  return sub_10018017C(a1, *v1);
}

uint64_t sub_100180B2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x49746375646F7270 && a2 == 0xE900000000000044;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x756F636341707061 && a2 == 0xEF6E656B6F54746ELL;
      if (v7 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x797469746E617571 && a2 == 0xE800000000000000;
        if (v8 || (sub_10024FA60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6573616863727570 && a2 == 0xEC00000065746144;
          if (v9 || (sub_10024FA60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x796C696D61467369 && a2 == 0xEE00646572616853;
            if (v10 || (sub_10024FA60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x4449726566666FLL && a2 == 0xE700000000000000;
              if (v11 || (sub_10024FA60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x707954726566666FLL && a2 == 0xE900000000000065;
                if (v12 || (sub_10024FA60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x8000000100280780)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  char v13 = sub_10024FA60();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 8;
                  }
                  else {
                    return 9;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100180F2C(char a1)
{
  unint64_t result = 0x4449656C646E7562;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x49746375646F7270;
      break;
    case 2:
      unint64_t result = 0x756F636341707061;
      break;
    case 3:
      unint64_t result = 0x797469746E617571;
      break;
    case 4:
      unint64_t result = 0x6573616863727570;
      break;
    case 5:
      unint64_t result = 0x796C696D61467369;
      break;
    case 6:
      unint64_t result = 0x4449726566666FLL;
      break;
    case 7:
      unint64_t result = 0x707954726566666FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10018107C(void *a1)
{
  uint64_t v4 = sub_100019524(&qword_100315930);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_1000869F4();
  sub_10001C2A8(a1, a1[3]);
  sub_100181990();
  sub_10024FD40();
  sub_10024F940();
  if (!v1)
  {
    sub_10024F940();
    type metadata accessor for PurchaseConfiguration();
    sub_10024E0A0();
    sub_100181AE8(&qword_100315938, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100182328();
    sub_10024F900();
    sub_10024E030();
    sub_100181AE8((unint64_t *)&qword_100309420, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100182328();
    sub_10024F8E0();
    sub_10024F8D0();
    sub_100181B30();
    sub_10024F910();
    sub_10024F8E0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_100181378@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v39[0] = a2;
  uint64_t v5 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v5 - 8, v6);
  sub_1000869F4();
  uint64_t v7 = sub_100019524(&qword_10030C100);
  __chkstk_darwin(v7 - 8, v8);
  sub_1000DD1B8();
  sub_100019524(&qword_100315910);
  sub_10001B550();
  v39[1] = v9;
  v39[2] = v10;
  __chkstk_darwin(v9, v11);
  sub_1000ACE78();
  type metadata accessor for PurchaseConfiguration();
  sub_100025FBC();
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (char *)v15 + v16[10];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v40 = v17;
  uint64_t v41 = a1;
  uint64_t v43 = v16;
  uint64_t v18 = v16[11];
  unint64_t v19 = v15;
  *((unsigned char *)v15 + v18) = 3;
  sub_10001C2A8(a1, a1[3]);
  sub_100181990();
  uint64_t v20 = v42;
  sub_10024FD20();
  if (v20)
  {
    sub_10001C2EC((uint64_t)v41);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v3;
    uint64_t v22 = v2;
    uint64_t v42 = v18;
    char v53 = 0;
    uint64_t v23 = (uint64_t)v19;
    *unint64_t v19 = sub_10024F830();
    v19[1] = v24;
    char v52 = 1;
    uint64_t v25 = sub_10024F830();
    uint64_t v26 = (uint64_t)v41;
    uint64_t v19[2] = v25;
    v19[3] = v27;
    sub_10024E0A0();
    char v51 = 2;
    sub_100181AE8(&qword_100315920, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_10024F800();
    uint64_t v28 = v43;
    sub_10005CF84(v21, (uint64_t)v19 + v43[6], &qword_10030C100);
    char v50 = 3;
    uint64_t v29 = sub_10024F7F0();
    uint64_t v30 = (char *)v19 + v28[7];
    *(void *)uint64_t v30 = v29;
    v30[8] = v31 & 1;
    sub_10024E030();
    char v49 = 4;
    sub_100181AE8(&qword_100309440, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v32 = v22;
    sub_10024F800();
    char v33 = (uint64_t *)v40;
    sub_10005CF84(v32, (uint64_t)v19 + v28[8], (uint64_t *)&unk_10030FD70);
    char v48 = 5;
    *((unsigned char *)v19 + v28[9]) = sub_10024F7D0();
    char v47 = 6;
    *char v33 = sub_10024F7C0();
    v33[1] = v34;
    char v45 = 7;
    sub_1001819DC();
    sub_10024F800();
    *((unsigned char *)v19 + v42) = v46;
    char v44 = 8;
    char v35 = sub_10024F7D0();
    uint64_t v36 = sub_10018230C();
    v37(v36);
    *(unsigned char *)(v23 + v28[12]) = v35;
    sub_100181A28(v23, v39[0]);
    sub_10001C2EC(v26);
    return sub_100181A8C(v23);
  }
}

unint64_t sub_1001818B8()
{
  return sub_100180F2C(*v0);
}

uint64_t sub_1001818C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100180B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001818E8(uint64_t a1)
{
  unint64_t v2 = sub_100181990();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100181924(uint64_t a1)
{
  unint64_t v2 = sub_100181990();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100181960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100181378(a1, a2);
}

uint64_t sub_100181978(void *a1)
{
  return sub_10018107C(a1);
}

unint64_t sub_100181990()
{
  unint64_t result = qword_100315918;
  if (!qword_100315918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315918);
  }
  return result;
}

unint64_t sub_1001819DC()
{
  unint64_t result = qword_100315928;
  if (!qword_100315928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315928);
  }
  return result;
}

uint64_t sub_100181A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100181A8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PurchaseConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100181AE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100181B30()
{
  unint64_t result = qword_100315940;
  if (!qword_100315940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315940);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PurchaseConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100181C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseConfiguration.CodingKeys()
{
  return &type metadata for PurchaseConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseConfiguration.OfferType()
{
  return &type metadata for PurchaseConfiguration.OfferType;
}

unint64_t sub_100181C98()
{
  unint64_t result = qword_100315948;
  if (!qword_100315948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315948);
  }
  return result;
}

unint64_t sub_100181CE8()
{
  unint64_t result = qword_100315950;
  if (!qword_100315950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315950);
  }
  return result;
}

unint64_t sub_100181D38()
{
  unint64_t result = qword_100315958;
  if (!qword_100315958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315958);
  }
  return result;
}

unint64_t sub_100181D88()
{
  unint64_t result = qword_100315960;
  if (!qword_100315960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315960);
  }
  return result;
}

unint64_t sub_100181DD4()
{
  unint64_t result = qword_100315988;
  if (!qword_100315988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315988);
  }
  return result;
}

unint64_t sub_100181E20()
{
  unint64_t result = qword_100315998;
  if (!qword_100315998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315998);
  }
  return result;
}

unint64_t sub_100181E6C()
{
  unint64_t result = qword_1003159A0;
  if (!qword_1003159A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159A0);
  }
  return result;
}

unint64_t sub_100181EB8()
{
  unint64_t result = qword_1003159A8;
  if (!qword_1003159A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159A8);
  }
  return result;
}

unsigned char *_s25ASOctaneSupportXPCService21PurchaseConfigurationV9OfferTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100181FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseConfiguration.OfferType.CodingKeys()
{
  return &type metadata for PurchaseConfiguration.OfferType.CodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseConfiguration.OfferType.PromotionalCodingKeys()
{
  return &type metadata for PurchaseConfiguration.OfferType.PromotionalCodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseConfiguration.OfferType.CodeCodingKeys()
{
  return &type metadata for PurchaseConfiguration.OfferType.CodeCodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseConfiguration.OfferType.WinbackCodingKeys()
{
  return &type metadata for PurchaseConfiguration.OfferType.WinbackCodingKeys;
}

unint64_t sub_10018203C()
{
  unint64_t result = qword_1003159D0;
  if (!qword_1003159D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159D0);
  }
  return result;
}

unint64_t sub_10018208C()
{
  unint64_t result = qword_1003159D8;
  if (!qword_1003159D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159D8);
  }
  return result;
}

unint64_t sub_1001820DC()
{
  unint64_t result = qword_1003159E0;
  if (!qword_1003159E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159E0);
  }
  return result;
}

unint64_t sub_10018212C()
{
  unint64_t result = qword_1003159E8;
  if (!qword_1003159E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159E8);
  }
  return result;
}

unint64_t sub_10018217C()
{
  unint64_t result = qword_1003159F0;
  if (!qword_1003159F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159F0);
  }
  return result;
}

unint64_t sub_1001821CC()
{
  unint64_t result = qword_1003159F8;
  if (!qword_1003159F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003159F8);
  }
  return result;
}

unint64_t sub_10018221C()
{
  unint64_t result = qword_100315A00;
  if (!qword_100315A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315A00);
  }
  return result;
}

unint64_t sub_10018226C()
{
  unint64_t result = qword_100315A08;
  if (!qword_100315A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315A08);
  }
  return result;
}

unint64_t sub_1001822BC()
{
  unint64_t result = qword_100315A10;
  if (!qword_100315A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315A10);
  }
  return result;
}

uint64_t sub_10018230C()
{
  return v0;
}

uint64_t sub_100182328()
{
  return sub_10024F910();
}

uint64_t sub_10018234C()
{
  return sub_10024F8C0();
}

uint64_t sub_100182368()
{
  return sub_10024F7A0();
}

uint64_t sub_100182384()
{
  return v0;
}

uint64_t NIOAtomic.store(_:)(uint64_t a1)
{
  sub_100184014();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = sub_100184034();
  swift_unknownObjectRetain();
  uint64_t v7 = sub_10024F760();
  uint64_t v11 = v5;
  uint64_t v12 = v3;
  uint64_t v13 = a1;
  sub_100183664((uint64_t)sub_100183BE8, (uint64_t)v10, v7, (uint64_t)&type metadata for ()[8], v6, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for ()[8], (uint64_t)&protocol witness table for Never, v9);
  return swift_release();
}

uint64_t static NIOAtomic.makeAtomic(value:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v5 = sub_100184054();
  uint64_t v6 = sub_10024F770();
  uint64_t v10 = v4;
  uint64_t v11 = v3;
  uint64_t v12 = a1;
  sub_100183664((uint64_t)sub_100183C04, (uint64_t)v9, v6, (uint64_t)&type metadata for ()[8], v5, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for ()[8], (uint64_t)&protocol witness table for Never, v8);
  sub_10024F780();
  swift_release();
  return swift_dynamicCastClassUnconditional();
}

uint64_t NIOAtomic.load()()
{
  sub_100184014();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = sub_100184034();
  swift_unknownObjectRetain();
  uint64_t v5 = sub_10024F760();
  uint64_t v9 = v3;
  uint64_t v10 = v1;
  sub_100183664((uint64_t)sub_100183C20, (uint64_t)v8, v5, (uint64_t)&type metadata for ()[8], v4, (uint64_t)&type metadata for Never, v3, (uint64_t)&protocol witness table for Never, v7);
  return swift_release();
}

uint64_t NIOAtomic.exchange(with:)(uint64_t a1)
{
  return sub_100183904(a1, (uint64_t)sub_100183C40);
}

uint64_t NIOAtomic.compareAndExchange(expected:desired:)(uint64_t a1, uint64_t a2)
{
  sub_100184014();
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t v8 = sub_100184054();
  swift_unknownObjectRetain();
  uint64_t v9 = sub_10024F760();
  uint64_t v13 = v7;
  uint64_t v14 = v5;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  sub_100183664((uint64_t)sub_100183C5C, (uint64_t)v12, v9, (uint64_t)&type metadata for ()[8], v8, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for Bool, (uint64_t)&protocol witness table for Never, v11);
  swift_release();
  return v17;
}

uint64_t NIOAtomic.add(_:)(uint64_t a1)
{
  return sub_100183904(a1, (uint64_t)sub_100183C80);
}

uint64_t (**Bool.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_create_with_existing_storage;
}

void static Bool.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**Bool.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_compare_and_exchange;
}

void static Bool.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**Bool.nio_atomic_add.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_add;
}

void static Bool.nio_atomic_add.getter()
{
}

uint64_t (**Bool.nio_atomic_sub.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_sub;
}

void static Bool.nio_atomic_sub.getter()
{
}

uint64_t (**Bool.nio_atomic_exchange.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_exchange;
}

void static Bool.nio_atomic_exchange.getter()
{
}

uint64_t (**Bool.nio_atomic_load.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_load;
}

void static Bool.nio_atomic_load.getter()
{
}

uint64_t (**Bool.nio_atomic_store.unsafeMutableAddressor())()
{
  return &static Bool.nio_atomic_store;
}

unsigned char *(*sub_100182870())(unsigned char *a1, char *a2)
{
  return sub_100095954;
}

BOOL (*sub_10018288C())(atomic_uchar *a1, char *a2, char *a3)
{
  return sub_100095800;
}

uint64_t (*sub_1001828A8())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095828;
}

uint64_t (*sub_1001828C4())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095858;
}

uint64_t (*sub_1001828E0())@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095888;
}

uint64_t (*sub_1001828FC())@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10009590C;
}

uint64_t (**Int8.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_create_with_existing_storage;
}

void static Int8.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**Int8.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_compare_and_exchange;
}

void static Int8.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**Int8.nio_atomic_add.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_add;
}

void static Int8.nio_atomic_add.getter()
{
}

uint64_t (**Int8.nio_atomic_sub.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_sub;
}

void static Int8.nio_atomic_sub.getter()
{
}

uint64_t (**Int8.nio_atomic_exchange.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_exchange;
}

void static Int8.nio_atomic_exchange.getter()
{
}

uint64_t (**Int8.nio_atomic_load.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_load;
}

void static Int8.nio_atomic_load.getter()
{
}

uint64_t (**Int8.nio_atomic_store.unsafeMutableAddressor())()
{
  return &static Int8.nio_atomic_store;
}

unsigned char *(*sub_1001829FC())(unsigned char *a1, char *a2)
{
  return sub_100095C84;
}

BOOL (*sub_100182A18())(atomic_uchar *a1, char *a2, unsigned __int8 *a3)
{
  return sub_100095B40;
}

uint64_t (*sub_100182A34())@<X0>(atomic_uchar *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095B68;
}

uint64_t (*sub_100182A50())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095B94;
}

uint64_t (*sub_100182A6C())@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095BC0;
}

uint64_t (*sub_100182A88())@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095C40;
}

uint64_t (**UInt8.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_create_with_existing_storage;
}

void static UInt8.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**UInt8.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_compare_and_exchange;
}

void static UInt8.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**UInt8.nio_atomic_add.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_add;
}

void static UInt8.nio_atomic_add.getter()
{
}

uint64_t (**UInt8.nio_atomic_sub.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_sub;
}

void static UInt8.nio_atomic_sub.getter()
{
}

uint64_t (**UInt8.nio_atomic_exchange.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_exchange;
}

void static UInt8.nio_atomic_exchange.getter()
{
}

uint64_t (**UInt8.nio_atomic_load.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_load;
}

void static UInt8.nio_atomic_load.getter()
{
}

uint64_t (**UInt8.nio_atomic_store.unsafeMutableAddressor())()
{
  return &static UInt8.nio_atomic_store;
}

unsigned char *(*sub_100182B88())(unsigned char *a1, char *a2)
{
  return sub_100095FB4;
}

BOOL (*sub_100182BA4())(atomic_uchar *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return sub_100095E70;
}

uint64_t (*sub_100182BC0())@<X0>(atomic_uchar *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095E98;
}

uint64_t (*sub_100182BDC())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095EC4;
}

unsigned int *(*sub_100182BF8())@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095EF0;
}

uint64_t (*sub_100182C14())@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095F70;
}

uint64_t (**Int16.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_create_with_existing_storage;
}

void static Int16.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**Int16.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_compare_and_exchange;
}

void static Int16.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**Int16.nio_atomic_add.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_add;
}

void static Int16.nio_atomic_add.getter()
{
}

uint64_t (**Int16.nio_atomic_sub.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_sub;
}

void static Int16.nio_atomic_sub.getter()
{
}

uint64_t (**Int16.nio_atomic_exchange.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_exchange;
}

void static Int16.nio_atomic_exchange.getter()
{
}

uint64_t (**Int16.nio_atomic_load.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_load;
}

void static Int16.nio_atomic_load.getter()
{
}

uint64_t (**Int16.nio_atomic_store.unsafeMutableAddressor())()
{
  return &static Int16.nio_atomic_store;
}

_WORD *(*sub_100182D14())(_WORD *a1, __int16 *a2)
{
  return sub_1000962E4;
}

BOOL (*sub_100182D30())(atomic_ushort *a1, __int16 *a2, unsigned __int16 *a3)
{
  return sub_1000961A0;
}

uint64_t (*sub_100182D4C())@<X0>(atomic_ushort *a1@<X0>, unsigned __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_1000961C8;
}

uint64_t (*sub_100182D68())@<X0>(atomic_ushort *a1@<X0>, __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_1000961F4;
}

uint64_t (*sub_100182D84())@<X0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_100096220;
}

uint64_t (*sub_100182DA0())@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_1000962A0;
}

uint64_t (**UInt16.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_create_with_existing_storage;
}

void static UInt16.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**UInt16.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_compare_and_exchange;
}

void static UInt16.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**UInt16.nio_atomic_add.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_add;
}

void static UInt16.nio_atomic_add.getter()
{
}

uint64_t (**UInt16.nio_atomic_sub.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_sub;
}

void static UInt16.nio_atomic_sub.getter()
{
}

uint64_t (**UInt16.nio_atomic_exchange.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_exchange;
}

void static UInt16.nio_atomic_exchange.getter()
{
}

uint64_t (**UInt16.nio_atomic_load.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_load;
}

void static UInt16.nio_atomic_load.getter()
{
}

uint64_t (**UInt16.nio_atomic_store.unsafeMutableAddressor())()
{
  return &static UInt16.nio_atomic_store;
}

_WORD *(*sub_100182EA0())(_WORD *a1, __int16 *a2)
{
  return sub_100096614;
}

BOOL (*sub_100182EBC())(atomic_ushort *a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  return sub_1000964D0;
}

uint64_t (*sub_100182ED8())@<X0>(atomic_ushort *a1@<X0>, unsigned __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_1000964F8;
}

uint64_t (*sub_100182EF4())@<X0>(atomic_ushort *a1@<X0>, __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_100096524;
}

unsigned int *(*sub_100182F10())@<X0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_100096550;
}

uint64_t (*sub_100182F2C())@<X0>(unsigned __int16 *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_1000965D0;
}

_DWORD *(**Int32.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())(_DWORD *result, int)
{
  return &static Int32.nio_atomic_create_with_existing_storage;
}

void static Int32.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**Int32.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int32.nio_atomic_compare_and_exchange;
}

void static Int32.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**Int32.nio_atomic_add.unsafeMutableAddressor())(atomic_uint *, unsigned int)
{
  return &static Int32.nio_atomic_add;
}

void static Int32.nio_atomic_add.getter()
{
}

uint64_t (**Int32.nio_atomic_sub.unsafeMutableAddressor())(atomic_uint *, int)
{
  return &static Int32.nio_atomic_sub;
}

void static Int32.nio_atomic_sub.getter()
{
}

unsigned int *(**Int32.nio_atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static Int32.nio_atomic_exchange;
}

void static Int32.nio_atomic_exchange.getter()
{
}

uint64_t (**Int32.nio_atomic_load.unsafeMutableAddressor())(unsigned int *)
{
  return &static Int32.nio_atomic_load;
}

void static Int32.nio_atomic_load.getter()
{
}

_DWORD *(**Int32.nio_atomic_store.unsafeMutableAddressor())(_DWORD *result, int)
{
  return &static Int32.nio_atomic_store;
}

_DWORD *(*sub_10018302C())(_DWORD *a1, int *a2)
{
  return sub_1000968D8;
}

BOOL (*sub_100183048())(atomic_uint *a1, int *a2, unsigned int *a3)
{
  return sub_100096794;
}

uint64_t (*sub_100183064())@<X0>(atomic_uint *a1@<X0>, unsigned int *a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_1000967BC;
}

uint64_t (*sub_100183080())@<X0>(atomic_uint *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_1000967E8;
}

unsigned int *(*sub_10018309C())@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100096814;
}

uint64_t (*sub_1001830B8())@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100096894;
}

_DWORD *(**UInt32.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())(_DWORD *result, int)
{
  return &static UInt32.nio_atomic_create_with_existing_storage;
}

void static UInt32.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**UInt32.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt32.nio_atomic_compare_and_exchange;
}

void static UInt32.nio_atomic_compare_and_exchange.getter()
{
}

uint64_t (**UInt32.nio_atomic_add.unsafeMutableAddressor())(atomic_uint *, unsigned int)
{
  return &static UInt32.nio_atomic_add;
}

void static UInt32.nio_atomic_add.getter()
{
}

uint64_t (**UInt32.nio_atomic_sub.unsafeMutableAddressor())(atomic_uint *, int)
{
  return &static UInt32.nio_atomic_sub;
}

void static UInt32.nio_atomic_sub.getter()
{
}

unsigned int *(**UInt32.nio_atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static UInt32.nio_atomic_exchange;
}

void static UInt32.nio_atomic_exchange.getter()
{
}

uint64_t (**UInt32.nio_atomic_load.unsafeMutableAddressor())(unsigned int *)
{
  return &static UInt32.nio_atomic_load;
}

void static UInt32.nio_atomic_load.getter()
{
}

_DWORD *(**UInt32.nio_atomic_store.unsafeMutableAddressor())(_DWORD *result, int)
{
  return &static UInt32.nio_atomic_store;
}

void *(**Int64.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static Int64.nio_atomic_create_with_existing_storage;
}

void static Int64.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**Int64.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int64.nio_atomic_compare_and_exchange;
}

void static Int64.nio_atomic_compare_and_exchange.getter()
{
}

unint64_t (**Int64.nio_atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static Int64.nio_atomic_add;
}

void static Int64.nio_atomic_add.getter()
{
}

unint64_t (**Int64.nio_atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static Int64.nio_atomic_sub;
}

void static Int64.nio_atomic_sub.getter()
{
}

unsigned int *(**Int64.nio_atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static Int64.nio_atomic_exchange;
}

void static Int64.nio_atomic_exchange.getter()
{
}

uint64_t (**Int64.nio_atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static Int64.nio_atomic_load;
}

void static Int64.nio_atomic_load.getter()
{
}

void *(**Int64.nio_atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static Int64.nio_atomic_store;
}

void *(*sub_10018329C())(void *a1, uint64_t *a2)
{
  return sub_100096CA4;
}

BOOL (*sub_1001832B8())(atomic_ullong *a1, uint64_t *a2, unint64_t *a3)
{
  return sub_100096B60;
}

unint64_t (*sub_1001832D4())@<X0>(atomic_ullong *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_100096B88;
}

unint64_t (*sub_1001832F0())@<X0>(atomic_ullong *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_100096BB4;
}

unsigned int *(*sub_10018330C())@<X0>(unsigned int *a1@<X0>, unsigned int **a2@<X8>)
{
  return sub_100096BE0;
}

uint64_t (*sub_100183328())@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100096C60;
}

void *(**UInt64.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static UInt64.nio_atomic_create_with_existing_storage;
}

void static UInt64.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**UInt64.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt64.nio_atomic_compare_and_exchange;
}

void static UInt64.nio_atomic_compare_and_exchange.getter()
{
}

unint64_t (**UInt64.nio_atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static UInt64.nio_atomic_add;
}

void static UInt64.nio_atomic_add.getter()
{
}

unint64_t (**UInt64.nio_atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static UInt64.nio_atomic_sub;
}

void static UInt64.nio_atomic_sub.getter()
{
}

unsigned int *(**UInt64.nio_atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static UInt64.nio_atomic_exchange;
}

void static UInt64.nio_atomic_exchange.getter()
{
}

uint64_t (**UInt64.nio_atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static UInt64.nio_atomic_load;
}

void static UInt64.nio_atomic_load.getter()
{
}

void *(**UInt64.nio_atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static UInt64.nio_atomic_store;
}

void *(**Int.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static Int.nio_atomic_create_with_existing_storage;
}

void static Int.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**Int.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int.nio_atomic_compare_and_exchange;
}

void static Int.nio_atomic_compare_and_exchange.getter()
{
}

unint64_t (**Int.nio_atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static Int.nio_atomic_add;
}

void static Int.nio_atomic_add.getter()
{
}

unint64_t (**Int.nio_atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static Int.nio_atomic_sub;
}

void static Int.nio_atomic_sub.getter()
{
}

unsigned int *(**Int.nio_atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static Int.nio_atomic_exchange;
}

void static Int.nio_atomic_exchange.getter()
{
}

uint64_t (**Int.nio_atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static Int.nio_atomic_load;
}

void static Int.nio_atomic_load.getter()
{
}

void *(**Int.nio_atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static Int.nio_atomic_store;
}

void *(**UInt.nio_atomic_create_with_existing_storage.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static UInt.nio_atomic_create_with_existing_storage;
}

void static UInt.nio_atomic_create_with_existing_storage.getter()
{
}

uint64_t (**UInt.nio_atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt.nio_atomic_compare_and_exchange;
}

void static UInt.nio_atomic_compare_and_exchange.getter()
{
}

unint64_t (**UInt.nio_atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static UInt.nio_atomic_add;
}

void static UInt.nio_atomic_add.getter()
{
}

unint64_t (**UInt.nio_atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static UInt.nio_atomic_sub;
}

void static UInt.nio_atomic_sub.getter()
{
}

unsigned int *(**UInt.nio_atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static UInt.nio_atomic_exchange;
}

void static UInt.nio_atomic_exchange.getter()
{
}

uint64_t (**UInt.nio_atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static UInt.nio_atomic_load;
}

void static UInt.nio_atomic_load.getter()
{
}

void *(**UInt.nio_atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static UInt.nio_atomic_store;
}

uint64_t sub_1001835F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6(a1, a2);
  return swift_release();
}

uint64_t sub_100183664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t result = __chkstk_darwin();
  unsigned __int8 v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = *(void *)(v19 + 64);
  BOOL v22 = __OFADD__(v20, v21);
  uint64_t v23 = v20 + v21;
  if (v22)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v24 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 1;
  BOOL v25 = __CFADD__(v23, v24);
  uint64_t v26 = v23 + v24;
  if (v25)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = v15(v13 + ((v26 - 1) & -v24), (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v9) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a9, v17, a6);
  }
  return result;
}

uint64_t sub_1001837D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  LOBYTE(a3) = v10(a1, a2, a3);
  uint64_t result = swift_release();
  *a6 = a3 & 1;
  return result;
}

uint64_t sub_100183868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v6(a1, a2);
  return swift_release();
}

uint64_t NIOAtomic.sub(_:)(uint64_t a1)
{
  return sub_100183904(a1, (uint64_t)sub_100183C9C);
}

uint64_t sub_100183904(uint64_t a1, uint64_t a2)
{
  sub_100184014();
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_unknownObjectRetain();
  uint64_t v9 = sub_10024F760();
  uint64_t v13 = v7;
  uint64_t v14 = v5;
  uint64_t v15 = a1;
  sub_100183664(a2, (uint64_t)v12, v9, (uint64_t)&type metadata for ()[8], AssociatedTypeWitness, (uint64_t)&type metadata for Never, v7, (uint64_t)&protocol witness table for Never, v11);
  return swift_release();
}

uint64_t sub_1001839F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v6(a1, a2);
  return swift_release();
}

uint64_t sub_100183A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v6(a1, a2);
  return swift_release();
}

uint64_t sub_100183B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  v4(a1);
  return swift_release();
}

uint64_t sub_100183B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  v6(a1, a2);
  return swift_release();
}

uint64_t sub_100183BE8()
{
  sub_100184024();
  return sub_100183B74(v0, v1, v2, v3);
}

uint64_t sub_100183C04()
{
  sub_100184024();
  return sub_1001835F0(v0, v1, v2, v3);
}

uint64_t sub_100183C20(uint64_t a1)
{
  return sub_100183B00(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100183C40()
{
  sub_100184024();
  return sub_100183A7C(v0, v1, v2, v3);
}

uint64_t sub_100183C5C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1001837D4(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_100183C80()
{
  sub_100184024();
  return sub_100183868(v0, v1, v2, v3);
}

uint64_t sub_100183C9C()
{
  sub_100184024();
  return sub_1001839F8(v0, v1, v2, v3);
}

uint64_t NIOAtomic.deinit()
{
  sub_100184014();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_unknownObjectRetain();
  uint64_t v6 = sub_10024F760();
  uint64_t v10 = v4;
  uint64_t v11 = v2;
  sub_100183E1C((uint64_t)sub_100183DFC, (uint64_t)v9, v6, (uint64_t)&type metadata for ()[8], AssociatedTypeWitness, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for ()[8], (uint64_t)&protocol witness table for Never, v8);
  swift_release();
  return v0;
}

uint64_t sub_100183DA4()
{
  return sub_10024F010();
}

uint64_t sub_100183DFC()
{
  return sub_100183DA4();
}

uint64_t sub_100183E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t result = __chkstk_darwin();
  unsigned __int8 v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = *(void *)(v19 + 64);
  BOOL v22 = __OFADD__(v20, v21);
  uint64_t v23 = v20 + v21;
  if (v22)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v24 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 1;
  BOOL v25 = __CFADD__(v23, v24);
  uint64_t v26 = v23 + v24;
  if (v25)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = v15(v13 + v20, v13 + ((v26 - 1) & -v24), (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v9) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a9, v17, a6);
  }
  return result;
}

uint64_t NIOAtomic.__deallocating_deinit()
{
  NIOAtomic.deinit();
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_100183FC4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NIOAtomic()
{
  return sub_10002F7A4();
}

uint64_t sub_100184034()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_100184054()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_100184074(char a1)
{
  Swift::UInt32 v2 = *(_DWORD *)(v1 + 12);
  char v7 = a1;
  LODWORD(result) = ByteBuffer._setBytes(_:at:)((uint64_t)&v7, (uint64_t)&v8, v2);
  int v4 = *(_DWORD *)(v1 + 12);
  BOOL v5 = __CFADD__(v4, result);
  int v6 = v4 + result;
  if (v5) {
    __break(1u);
  }
  *(_DWORD *)(v1 + 12) = v6;
  return result;
}

uint64_t sub_1001840EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a4;
  *(unsigned char *)(v5 + 32) = a5;
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 56) = 0;
  return HTTPServerProtocolErrorHandler.deinit();
}

uint64_t sub_100184104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = v8;
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 40);
  sub_100019524(a6);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v14;
  *(void *)(v15 + 16) = 0;
  *(unsigned char *)(v15 + 24) = -1;
  *(void *)(v15 + 56) = 0;
  *(void *)(v15 + 64) = 0;
  *(void *)(v15 + 48) = 0;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 1;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  a7(v11, v11, v15, v17, v16);
  uint64_t v18 = sub_100163700(v13, v14);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  a8(v18, v11, a1, v15, v16, v17);
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1001842AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v8 = a4;
  if (a6)
  {
    if (a2)
    {
      uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 56);
      uint64_t ObjectType = swift_getObjectType();
      EmbeddedChannel.WrongTypeError.actual.getter(ObjectType, (uint64_t)&type metadata for ()[8]);
      uint64_t v13 = sub_1001877B0();
      uint64_t v67 = a3;
      uint64_t v14 = sub_1001877B0();
      uint64_t v15 = v13;
      uint64_t v16 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HTTPEncoder.swift", 113, 2, 21, ObjectType, (uint64_t)&type metadata for ()[8], v11);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10018784C();
      sub_100184104(v17, v18, v19, v20, v21, v22, v23, v24);
      swift_release();
      swift_release();
      swift_retain();
      sub_10018784C();
      sub_100184104(v25, v26, v27, v28, v29, v30, v31, v32);
      swift_release();
      swift_release();
      sub_1001B7AA0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HTTPEncoder.swift", 113, 2, 22, (uint64_t)debugOnly(_:), 0);
      swift_release();
      uint64_t v33 = swift_retain();
      sub_100031E30(v33);
      uint64_t v8 = a4;
      swift_release();
      swift_release_n();
      uint64_t v6 = v14;
      a3 = v67;
      goto LABEL_6;
    }
    swift_retain();
  }
  uint64_t v16 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v34 = IOData.readableBytes.getter(a3, v8, a5 & 0xFFFFFFFFFFFFFFLL);
  if ((a2 & 1) == 0)
  {
    uint64_t v76 = a3;
    unint64_t v77 = v8;
    unsigned int v78 = a5;
    sub_100187820();
    char v81 = 0;
    sub_10003AFD0();
    ChannelHandlerContext.write(_:promise:)((uint64_t)&v76, v6);
    swift_release();
    swift_release();
    swift_release();
    sub_10003908C((uint64_t)&v76);
    return swift_release();
  }
  uint64_t v35 = v34;
  unint64_t v70 = v8;
  uint64_t v68 = v15;
  sub_1000AE91C();
  uint64_t v37 = v36;
  uint64_t v38 = swift_getObjectType();
  uint64_t v39 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v38, v37);
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  swift_unknownObjectRelease();
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v46 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(32, v39, v41, v43, v45);
  unsigned int v47 = *(_DWORD *)(v46 + 16);
  uint64_t v71 = v46;
  uint64_t v72 = 0;
  unsigned int v73 = v47;
  unsigned __int16 v74 = 0;
  unsigned __int8 v75 = 0;
  uint64_t v76 = v35;
  sub_1000EBDE0();
  uint64_t v48 = sub_10024E8E0();
  char v50 = (void *)v49;
  int v51 = sub_10008CF60(v48, v49, (uint64_t)&v71, 0);
  if (v52)
  {
    v53._countAndFlagsBits = v48;
    v53._object = v50;
    int v51 = ByteBuffer._setStringSlowpath(_:at:)(v53, 0);
  }
  int v54 = v51;
  uint64_t result = swift_bridgeObjectRelease();
  Swift::UInt32 v58 = HIDWORD(v72) + v54;
  if (__CFADD__(HIDWORD(v72), v54))
  {
    __break(1u);
    goto LABEL_18;
  }
  HIDWORD(v72) += v54;
  uint64_t result = sub_100187834((uint64_t)"\r\n", v56, v57, v58);
  uint64_t v59 = (HIDWORD(v72) + result);
  if (__CFADD__(HIDWORD(v72), result))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v66 = v16;
  uint64_t v60 = v71;
  unsigned int v61 = v72;
  uint64_t v62 = v73;
  uint64_t v63 = v74;
  uint64_t v64 = v75;
  uint64_t v76 = v71;
  unint64_t v77 = v72 | ((unint64_t)v59 << 32);
  char v80 = v75;
  __int16 v79 = v74;
  unsigned int v78 = v73;
  char v81 = 0;
  swift_retain();
  ChannelHandlerContext.write(_:promise:)((uint64_t)&v76, v68);
  sub_10003908C((uint64_t)&v76);
  uint64_t v76 = a3;
  unint64_t v77 = v70;
  sub_100187820();
  unsigned int v78 = a5;
  char v81 = 0;
  sub_10003AFD0();
  ChannelHandlerContext.write(_:promise:)((uint64_t)&v76, v6);
  uint64_t result = sub_10003908C((uint64_t)&v76);
  if (v59 < v61)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v65 = (v59 - 2);
  if (__CFADD__(v61, v59 - v61 - 2))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v59 >= v65)
  {
    uint64_t v76 = v60;
    unint64_t v77 = (v59 << 32) | v65;
    unsigned int v78 = v62;
    char v80 = (v62 | (v63 << 32) | (unint64_t)(v64 << 48)) >> 48;
    __int16 v79 = (v62 | (v63 << 32) | (unint64_t)(v64 << 48)) >> 32;
    char v81 = 0;
    swift_retain();
    ChannelHandlerContext.write(_:promise:)((uint64_t)&v76, v66);
    swift_release();
    swift_release();
    swift_release();
    sub_10003908C((uint64_t)&v76);
    swift_release();
    return swift_release();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100184784(uint64_t a1, char a2, uint64_t a3, uint64_t a4, const char *a5)
{
  if (a2)
  {
    if (!a3)
    {
      sub_1000AE91C();
      uint64_t v44 = v43;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v46 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(ObjectType, v44);
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      swift_unknownObjectRelease();
      type metadata accessor for ByteBuffer._Storage();
      uint64_t v53 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(8, v46, v48, v50, v52);
      int v54 = *(_DWORD *)(v53 + 16);
      uint64_t v58 = v53;
      uint64_t v59 = 0;
      int v60 = v54;
      __int16 v61 = 0;
      char v62 = 0;
      uint64_t v38 = ByteBuffer.setStaticString(_:at:)((uint64_t)"0\r\n\r\n", 5, 2, 0);
      goto LABEL_22;
    }
    sub_1000AE91C();
    uint64_t v7 = v6;
    uint64_t v8 = swift_getObjectType();
    uint64_t v9 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v8, v7);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    swift_unknownObjectRelease();
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v16 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(256, v9, v11, v13, v15);
    int v17 = *(_DWORD *)(v16 + 16);
    uint64_t v58 = v16;
    LODWORD(v59) = 0;
    int v60 = v17;
    __int16 v61 = 0;
    char v62 = 0;
    Swift::UInt32 v18 = ByteBuffer.setStaticString(_:at:)((uint64_t)"0\r\n", 3, 2, 0);
    HIDWORD(v59) = v18;
    uint64_t v19 = *(void *)(a3 + 16);
    if (v19)
    {
      uint64_t v56 = a5;
      uint64_t v20 = (void **)(swift_bridgeObjectRetain() + 56);
      a5 = "\r\n";
      while (1)
      {
        uint64_t v21 = (uint64_t)*(v20 - 3);
        BOOL v22 = *(v20 - 2);
        uint64_t v23 = (uint64_t)*(v20 - 1);
        uint64_t v24 = *v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v25 = sub_10008CF60(v21, (unint64_t)v22, (uint64_t)&v58, v18);
        if (v26)
        {
          v27._countAndFlagsBits = v21;
          v27._object = v22;
          int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v18);
        }
        Swift::UInt32 v28 = HIDWORD(v59) + v25;
        if (__CFADD__(HIDWORD(v59), v25)) {
          break;
        }
        HIDWORD(v59) += v25;
        int v29 = ByteBuffer._setBytes(_:at:)((uint64_t)": ", (uint64_t)"", v28);
        Swift::Int v30 = (HIDWORD(v59) + v29);
        if (__CFADD__(HIDWORD(v59), v29)) {
          goto LABEL_28;
        }
        HIDWORD(v59) += v29;
        swift_bridgeObjectRetain();
        int v31 = sub_10008CF60(v23, (unint64_t)v24, (uint64_t)&v58, v30);
        char v33 = v32;
        swift_bridgeObjectRelease();
        if (v33)
        {
          v34._countAndFlagsBits = v23;
          v34._object = v24;
          int v31 = ByteBuffer._setStringSlowpath(_:at:)(v34, v30);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::UInt32 v35 = HIDWORD(v59) + v31;
        if (__CFADD__(HIDWORD(v59), v31)) {
          goto LABEL_29;
        }
        HIDWORD(v59) += v31;
        int v36 = ByteBuffer._setBytes(_:at:)((uint64_t)"\r\n", (uint64_t)"", v35);
        Swift::UInt32 v18 = HIDWORD(v59) + v36;
        if (__CFADD__(HIDWORD(v59), v36)) {
          goto LABEL_30;
        }
        v20 += 4;
        HIDWORD(v59) += v36;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          a5 = v56;
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      __break(1u);
      goto LABEL_31;
    }
LABEL_15:
    int v37 = ByteBuffer.setStaticString(_:at:)((uint64_t)"\r\n", 2, 2, v18);
    uint64_t v38 = (HIDWORD(v59) + v37);
    if (!__CFADD__(HIDWORD(v59), v37))
    {
LABEL_22:
      uint64_t v63 = v58;
      uint64_t v64 = v59 | (unint64_t)(v38 << 32);
      char v67 = v62;
      __int16 v66 = v61;
      int v65 = v60;
      char v68 = 0;
      swift_retain();
      ChannelHandlerContext.write(_:promise:)((uint64_t)&v63, (uint64_t)a5);
      sub_10003908C((uint64_t)&v63);
      swift_release();
      return swift_release();
    }
    __break(1u);
  }
  if (a5)
  {
    sub_1000AE91C();
    uint64_t v40 = v39;
    uint64_t v41 = swift_getObjectType();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v40 + 16);
    swift_retain();
    v42(v41, v40);
    swift_unknownObjectRelease();
    if (qword_100308D08 == -1)
    {
LABEL_20:
      uint64_t v63 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      uint64_t v64 = qword_10034C038;
      char v67 = byte_10034C046;
      __int16 v66 = word_10034C044;
      int v65 = dword_10034C040;
      char v68 = 0;
      swift_retain_n();
      swift_retain();
      ChannelHandlerContext.write(_:promise:)((uint64_t)&v63, (uint64_t)a5);
      swift_release();
      swift_release_n();
      sub_10003908C((uint64_t)&v63);
      return swift_release();
    }
LABEL_31:
    swift_once();
    goto LABEL_20;
  }
  return swift_release();
}

uint64_t sub_100184C34(char a1, uint64_t *a2, unsigned int a3)
{
  __int16 v3 = a3;
  unsigned int v5 = HIWORD(a3);
  if (!a1)
  {
    uint64_t v11 = *(void *)(*a2 + 16);
    if (v11)
    {
      uint64_t v12 = (unint64_t *)(*a2 + 40);
      do
      {
        unint64_t v13 = *(v12 - 1);
        unint64_t v14 = *v12;
        if ((*v12 & 0x1000000000000000) != 0
          || ((v14 & 0x2000000000000000) != 0
            ? (v16 = HIBYTE(v14) & 0xF, v46 = *(v12 - 1), v47 = v14 & 0xFFFFFFFFFFFFFFLL, uint64_t v15 = &v46)
            : (v13 & 0x1000000000000000) == 0
            ? (uint64_t v15 = (uint64_t *)sub_10024F3E0())
            : (uint64_t *)(uint64_t v15 = (uint64_t *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32), v16 = v13 & 0xFFFFFFFFFFFFLL),
              char v17 = sub_1001D5F9C(v15, v16, 0x2D746E65746E6F63, 0xEE006874676E656CLL),
              (v17 & 0xFE) == 2))
        {
          char v17 = sub_1001D60B0(0x2D746E65746E6F63uLL, 0xEE006874676E656CLL, v13, v14);
        }
        if (v17) {
          return 1;
        }
        v12 += 4;
      }
      while (--v11);
    }
    uint64_t result = 2;
    if (v5 != 1 || !v3) {
      return result;
    }
    v40._object = (void *)0x8000000100281B40;
    v40._countAndFlagsBits = 0xD000000000000011;
    v41._countAndFlagsBits = 0x64656B6E756863;
    v41._object = (void *)0xE700000000000000;
    HTTPHeaders.replaceOrAdd(name:value:)(v40, v41);
    return 0;
  }
  if (a1 != 1)
  {
    uint64_t v18 = *(void *)(*a2 + 16);
    if (v18)
    {
      uint64_t v19 = (unint64_t *)(*a2 + 40);
      do
      {
        unint64_t v20 = *(v19 - 1);
        unint64_t v21 = *v19;
        if ((*v19 & 0x1000000000000000) != 0
          || ((v21 & 0x2000000000000000) != 0
            ? (v23 = HIBYTE(v21) & 0xF, v46 = *(v19 - 1), v47 = v21 & 0xFFFFFFFFFFFFFFLL, BOOL v22 = &v46)
            : (v20 & 0x1000000000000000) == 0
            ? (BOOL v22 = (uint64_t *)sub_10024F3E0())
            : (uint64_t *)(BOOL v22 = (uint64_t *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 32), v23 = v20 & 0xFFFFFFFFFFFFLL),
              char v24 = sub_1001D5F9C(v22, v23, 0x2D746E65746E6F63, 0xEE006874676E656CLL),
              (v24 & 0xFE) == 2))
        {
          char v24 = sub_1001D60B0(0x2D746E65746E6F63uLL, 0xEE006874676E656CLL, v20, v21);
        }
        if (v24) {
          return 1;
        }
        v19 += 4;
      }
      while (--v18);
    }
    uint64_t result = 2;
    if (v5 != 1 || !v3) {
      return result;
    }
    uint64_t v25 = *a2;
    uint64_t v26 = *(void *)(*a2 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain_n();
      Swift::String v27 = (uint64_t *)(v25 + 56);
      Swift::UInt32 v28 = _swiftEmptyArrayStorage;
      do
      {
        unint64_t v30 = *(v27 - 3);
        unint64_t v29 = *(v27 - 2);
        uint64_t v31 = *(v27 - 1);
        uint64_t v32 = *v27;
        if ((v29 & 0x1000000000000000) != 0
          || ((v29 & 0x2000000000000000) != 0
            ? (v34 = HIBYTE(v29) & 0xF, v46 = *(v27 - 3), v47 = v29 & 0xFFFFFFFFFFFFFFLL, char v33 = &v46)
            : (v30 & 0x1000000000000000) == 0
            ? (char v33 = (uint64_t *)sub_10024F3E0())
            : (uint64_t *)(char v33 = (uint64_t *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 32), v34 = v30 & 0xFFFFFFFFFFFFLL),
              char v35 = sub_1001D5F9C(v33, v34, 0xD000000000000011, 0x8000000100281B40),
              (v35 & 0xFE) == 2))
        {
          char v35 = sub_1001D60B0(0xD000000000000011, 0x8000000100281B40, v30, v29);
        }
        if (v35)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100034BF0();
            Swift::UInt32 v28 = v38;
          }
          unint64_t v36 = v28[2];
          if (v36 >= v28[3] >> 1)
          {
            sub_100034BF0();
            Swift::UInt32 v28 = v39;
          }
          _OWORD v28[2] = v36 + 1;
          int v37 = &v28[2 * v36];
          v37[4] = v31;
          v37[5] = v32;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v27 += 4;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      Swift::UInt32 v28 = _swiftEmptyArrayStorage;
    }
    if (!v28[2])
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    uint64_t v43 = v28[4];
    uint64_t v42 = v28[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v43 != 0x64656B6E756863 || v42 != 0xE700000000000000)
    {
      char v45 = sub_10024FA60();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (v45) {
        return result;
      }
      return 2;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = sub_100032B9C();
  if (v6) {
    *((unsigned char *)a2 + 8) = 2;
  }
  __chkstk_darwin(v6, v7);
  uint64_t result = sub_10003A870(a2);
  if (*(void *)(*a2 + 16) < result)
  {
    __break(1u);
  }
  else
  {
    sub_10003ABA4();
    uint64_t v9 = sub_100032B9C();
    if (v9) {
      *((unsigned char *)a2 + 8) = 2;
    }
    __chkstk_darwin(v9, v10);
    uint64_t result = sub_10003A870(a2);
    if (*(void *)(*a2 + 16) >= result)
    {
      sub_10003ABA4();
      return 2;
    }
  }
  __break(1u);
  return result;
}

uint64_t HTTPRequestEncoder.write(context:data:promise:)(uint64_t a1, uint64_t a2, const char *a3)
{
  sub_100019524(&qword_10030A510);
  sub_100033200();
  uint64_t v9 = v6;
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  if (!HIBYTE(v8))
  {
    uint64_t v61 = (uint64_t)a3;
    uint64_t v67 = v7;
    char v68 = v8;
    uint64_t v17 = *(void *)(v6 + 24);
    if (v17 == 11) {
      char v18 = 1;
    }
    else {
      char v18 = 2;
    }
    if (v17 == 1 || v17 == 4 || v17 == 10) {
      char v21 = 0;
    }
    else {
      char v21 = v18;
    }
    *(unsigned char *)(v3 + 16) = sub_100184C34(v21, &v67, *(_DWORD *)(v9 + 48)) == 0;
    uint64_t v22 = v67;
    sub_1000AE91C();
    uint64_t v24 = v23;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    Swift::String v27 = (uint64_t (*)(void))v26(ObjectType, v24);
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    swift_unknownObjectRelease();
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v34 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(256, v27, v29, v31, v33);
    int v35 = *(_DWORD *)(v34 + 16);
    uint64_t v62 = v34;
    uint64_t v63 = 0;
    int v64 = v35;
    __int16 v65 = 0;
    char v66 = 0;
    swift_bridgeObjectRetain();
    uint64_t v36 = swift_retain();
    sub_100185680(v36);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v39 = *(void *)(v22 + 16);
    if (v39)
    {
      swift_bridgeObjectRetain();
      Swift::UInt32 v40 = HIDWORD(v63);
      Swift::String v41 = (void **)(v22 + 56);
      while (1)
      {
        uint64_t v42 = (uint64_t)*(v41 - 3);
        uint64_t v43 = *(v41 - 2);
        uint64_t v45 = (uint64_t)*(v41 - 1);
        uint64_t v44 = *v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = sub_10008CF60(v42, (unint64_t)v43, (uint64_t)&v62, v40);
        if (v47)
        {
          v48._countAndFlagsBits = v42;
          v48._object = v43;
          uint64_t result = ByteBuffer._setStringSlowpath(_:at:)(v48, v40);
        }
        Swift::UInt32 v49 = HIDWORD(v63) + result;
        if (__CFADD__(HIDWORD(v63), result)) {
          break;
        }
        HIDWORD(v63) += result;
        uint64_t result = ByteBuffer._setBytes(_:at:)((uint64_t)": ", (uint64_t)"", v49);
        Swift::Int v50 = (HIDWORD(v63) + result);
        if (__CFADD__(HIDWORD(v63), result)) {
          goto LABEL_37;
        }
        HIDWORD(v63) += result;
        swift_bridgeObjectRetain();
        int v51 = sub_10008CF60(v45, (unint64_t)v44, (uint64_t)&v62, v50);
        char v53 = v52;
        swift_bridgeObjectRelease();
        if (v53)
        {
          v54._countAndFlagsBits = v45;
          v54._object = v44;
          int v51 = ByteBuffer._setStringSlowpath(_:at:)(v54, v50);
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        Swift::UInt32 v55 = HIDWORD(v63) + v51;
        if (__CFADD__(HIDWORD(v63), v51)) {
          goto LABEL_38;
        }
        HIDWORD(v63) += v51;
        uint64_t result = ByteBuffer._setBytes(_:at:)((uint64_t)"\r\n", (uint64_t)"", v55);
        Swift::UInt32 v40 = HIDWORD(v63) + result;
        if (__CFADD__(HIDWORD(v63), result)) {
          goto LABEL_39;
        }
        v41 += 4;
        HIDWORD(v63) += result;
        if (!--v39)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
    }
    else
    {
      Swift::UInt32 v40 = HIDWORD(v63);
LABEL_33:
      uint64_t result = sub_100187834((uint64_t)"\r\n", v37, v38, v40);
      if (!__CFADD__(HIDWORD(v63), result))
      {
        uint64_t v69 = v62;
        unint64_t v70 = v63 | ((unint64_t)(HIDWORD(v63) + result) << 32);
        char v73 = v66;
        __int16 v72 = v65;
        int v71 = v64;
        char v74 = 0;
        swift_retain();
        ChannelHandlerContext.write(_:promise:)((uint64_t)&v69, v61);
        sub_10003908C((uint64_t)&v69);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
    return result;
  }
  if (HIBYTE(v8) != 1)
  {
    char v56 = *(unsigned char *)(v3 + 16);
    swift_retain();
    sub_100184784(a1, v56, v9, v10, a3);
    uint64_t v13 = v9;
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    char v16 = 2;
    return sub_100039008(v13, v14, v15, v16);
  }
  if (IOData.readableBytes.getter(v6, v7, v8 & 0xFFFFFFFFFFFFFFLL) >= 1)
  {
    char v12 = *(unsigned char *)(v3 + 16);
    swift_retain();
    sub_1001842AC(a1, v12, v9, v10, v11 & 0xFFFFFFFFFFFFFFLL, (uint64_t)a3);
    uint64_t v13 = sub_1001877F4();
    return sub_100039008(v13, v14, v15, v16);
  }
  uint64_t v69 = v9;
  unint64_t v70 = v10;
  int v71 = v11;
  char v73 = BYTE6(v11);
  __int16 v72 = WORD2(v11);
  char v74 = 0;
  sub_10003AFD0();
  ChannelHandlerContext.write(_:promise:)((uint64_t)&v69, (uint64_t)a3);
  uint64_t v57 = sub_1001877F4();
  sub_100039008(v57, v58, v59, v60);
  return sub_10003908C((uint64_t)&v69);
}

uint64_t sub_100185680(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(void **)(a1 + 24);
  sub_10006B3D4(v3, (unint64_t)v4);
  sub_100187014(v3, v4);
  sub_10006B3E8(v3, (unint64_t)v4);
  sub_100184074(32);
  uint64_t v6 = *(void *)(a1 + 32);
  unsigned int v5 = *(void **)(a1 + 40);
  Swift::Int v7 = *(unsigned int *)(v1 + 12);
  swift_bridgeObjectRetain();
  int v8 = sub_10008CF60(v6, (unint64_t)v5, v1, v7);
  if (v9)
  {
    v10._countAndFlagsBits = v6;
    v10._object = v5;
    int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
  }
  int v11 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  int v13 = *(_DWORD *)(v1 + 12);
  BOOL v14 = __CFADD__(v13, v11);
  int v15 = v13 + v11;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 12) = v15;
    sub_100184074(32);
    sub_100186E00(*(_DWORD *)(a1 + 48));
    uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"\r\n", 2, 2, *(_DWORD *)(v1 + 12));
    int v16 = *(_DWORD *)(v1 + 12);
    BOOL v14 = __CFADD__(v16, result);
    int v17 = v16 + result;
    if (!v14)
    {
      *(_DWORD *)(v1 + 12) = v17;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t HTTPResponseEncoder.write(context:data:promise:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  sub_100019524(&qword_10030A1F8);
  sub_100033424();
  int v11 = (const char *)v8;
  unint64_t v12 = v10;
  if (!HIBYTE(v10))
  {
    uint64_t v93 = (uint64_t)a3;
    unint64_t v94 = v9;
    char v95 = v10;
    unint64_t v17 = *(void *)(v8 + 32);
    if (v17 < 0x3C)
    {
      char v18 = byte_1002665B6[v17];
LABEL_25:
      *(unsigned char *)(v5 + 16) = sub_100184C34(v18, (uint64_t *)&v94, *((_DWORD *)v11 + 10)) == 0;
      unint64_t v12 = v94;
      sub_1000AE91C();
      uint64_t v47 = sub_100187808();
      Swift::String v48 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      Swift::UInt32 v49 = (uint64_t (*)(void))v48(v47, v3);
      uint64_t v51 = v50;
      a3 = v52;
      uint64_t v54 = v53;
      swift_unknownObjectRelease();
      type metadata accessor for ByteBuffer._Storage();
      static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(256, v49, v51, (uint64_t)a3, v54);
      sub_100187798();
      swift_bridgeObjectRetain();
      uint64_t v55 = swift_retain();
      sub_100185F28(v55);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v58 = *(void *)(v12 + 16);
      if (!v58)
      {
        Swift::UInt32 v59 = v97;
LABEL_41:
        int v77 = sub_100187834((uint64_t)"\r\n", v56, v57, v59);
        if (!__CFADD__(v97, v77))
        {
          sub_100187758();
          ChannelHandlerContext.write(_:promise:)((uint64_t)v98, v93);
          sub_10003908C((uint64_t)v98);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_57;
      }
      uint64_t v90 = v11;
      swift_bridgeObjectRetain();
      Swift::UInt32 v59 = v97;
      uint64_t v91 = v12;
      char v60 = (void **)(v12 + 56);
      int v11 = "\r\n";
      while (1)
      {
        uint64_t v61 = (uint64_t)*(v60 - 3);
        unint64_t v12 = (unint64_t)*(v60 - 2);
        a3 = *(v60 - 1);
        uint64_t v62 = *v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v63 = sub_10008CF60(v61, v12, (uint64_t)v96, v59);
        if (v64)
        {
          v65._countAndFlagsBits = v61;
          v65._object = (void *)v12;
          int v63 = ByteBuffer._setStringSlowpath(_:at:)(v65, v59);
        }
        Swift::UInt32 v66 = v97 + v63;
        if (__CFADD__(v97, v63)) {
          break;
        }
        v97 += v63;
        int v67 = ByteBuffer._setBytes(_:at:)((uint64_t)": ", (uint64_t)"", v66);
        Swift::Int v68 = v97 + v67;
        if (__CFADD__(v97, v67)) {
          goto LABEL_50;
        }
        v97 += v67;
        swift_bridgeObjectRetain();
        int v69 = sub_10008CF60((uint64_t)a3, (unint64_t)v62, (uint64_t)v96, v68);
        char v71 = v70;
        swift_bridgeObjectRelease();
        if (v71)
        {
          v72._countAndFlagsBits = (uint64_t)a3;
          v72._object = v62;
          int v69 = ByteBuffer._setStringSlowpath(_:at:)(v72, v68);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::UInt32 v73 = v97 + v69;
        if (__CFADD__(v97, v69)) {
          goto LABEL_51;
        }
        v97 += v69;
        int v74 = ByteBuffer._setBytes(_:at:)((uint64_t)"\r\n", (uint64_t)"", v73);
        Swift::UInt32 v59 = v97 + v74;
        if (__CFADD__(v97, v74)) {
          goto LABEL_52;
        }
        v60 += 4;
        v97 += v74;
        if (!--v58)
        {
          unint64_t v12 = v91;
          swift_bridgeObjectRelease();
          int v11 = v90;
          goto LABEL_41;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
LABEL_24:
    char v18 = (unint64_t)(HTTPResponseStatus.code.getter(*((void *)v11 + 2), *((void *)v11 + 3), v17) - 100) < 0x64;
    goto LABEL_25;
  }
  if (HIBYTE(v10) == 1)
  {
    char v13 = *(unsigned char *)(v4 + 16);
    uint64_t v14 = v9;
    swift_retain();
    sub_1001842AC(a1, v13, (uint64_t)v11, v14, v12 & 0xFFFFFFFFFFFFFFLL, (uint64_t)a3);
    uint64_t v8 = (uint64_t)v11;
    uint64_t v9 = v14;
    uint64_t v15 = v12;
    char v16 = 1;
    return sub_100039008(v8, v9, v15, v16);
  }
  if ((*(unsigned char *)(v4 + 16) & 1) == 0)
  {
    if (!a3) {
      goto LABEL_46;
    }
    uint64_t v91 = v9;
    sub_1000AE91C();
    sub_100187808();
    unsigned __int8 v75 = *(void (**)(uint64_t))(v3 + 16);
    swift_retain();
    swift_retain();
    uint64_t v76 = sub_1001877E0();
    v75(v76);
    swift_unknownObjectRelease();
    if (qword_100308D08 == -1) {
      goto LABEL_39;
    }
    goto LABEL_59;
  }
  uint64_t v91 = v9;
  uint64_t v93 = (uint64_t)a3;
  if (v8)
  {
    sub_1000AE91C();
    uint64_t v19 = sub_100187808();
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
    uint64_t v92 = v4;
    swift_retain();
    char v21 = (uint64_t (*)(void))v20(v19, v3);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    a3 = v26;
    swift_unknownObjectRelease();
    type metadata accessor for ByteBuffer._Storage();
    static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(256, v21, v23, v25, (uint64_t)a3);
    sub_100187798();
    int v27 = ByteBuffer.setStaticString(_:at:)((uint64_t)"0\r\n", 3, 2, 0);
    uint64_t v3 = v97 + v27;
    if (__CFADD__(v97, v27))
    {
LABEL_58:
      __break(1u);
LABEL_59:
      swift_once();
LABEL_39:
      v98[0] = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      v98[1] = qword_10034C038;
      char v101 = byte_10034C046;
      __int16 v100 = word_10034C044;
      int v99 = dword_10034C040;
      char v102 = 0;
      swift_retain_n();
      swift_retain();
      ChannelHandlerContext.write(_:promise:)((uint64_t)v98, (uint64_t)a3);
      swift_release_n();
      swift_release();
      sub_10003908C((uint64_t)v98);
LABEL_45:
      swift_release();
      uint64_t v8 = (uint64_t)v11;
      uint64_t v9 = v91;
LABEL_46:
      uint64_t v15 = v12;
      char v16 = 2;
      return sub_100039008(v8, v9, v15, v16);
    }
    v97 += v27;
    uint64_t v30 = *((void *)v11 + 2);
    if (v30)
    {
      uint64_t v88 = v12;
      swift_bridgeObjectRetain();
      uint64_t v89 = (uint64_t)v11;
      v11 += 56;
      unint64_t v12 = (unint64_t)"\r\n";
      while (1)
      {
        uint64_t v32 = *((void *)v11 - 3);
        uint64_t v31 = (void *)*((void *)v11 - 2);
        uint64_t v33 = *((void *)v11 - 1);
        a3 = *(void **)v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v34 = sub_10008CF60(v32, (unint64_t)v31, (uint64_t)v96, v3);
        if (v35)
        {
          v36._countAndFlagsBits = v32;
          v36._object = v31;
          int v34 = ByteBuffer._setStringSlowpath(_:at:)(v36, v3);
        }
        Swift::UInt32 v37 = v97 + v34;
        if (__CFADD__(v97, v34)) {
          goto LABEL_53;
        }
        v97 += v34;
        int v38 = ByteBuffer._setBytes(_:at:)((uint64_t)": ", (uint64_t)"", v37);
        Swift::Int v39 = v97 + v38;
        if (__CFADD__(v97, v38)) {
          goto LABEL_54;
        }
        v97 += v38;
        swift_bridgeObjectRetain();
        int v40 = sub_10008CF60(v33, (unint64_t)a3, (uint64_t)v96, v39);
        char v42 = v41;
        swift_bridgeObjectRelease();
        if (v42)
        {
          v43._countAndFlagsBits = v33;
          v43._object = a3;
          int v40 = ByteBuffer._setStringSlowpath(_:at:)(v43, v39);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::UInt32 v44 = v97 + v40;
        if (__CFADD__(v97, v40)) {
          goto LABEL_55;
        }
        v97 += v40;
        int v45 = ByteBuffer._setBytes(_:at:)((uint64_t)"\r\n", (uint64_t)"", v44);
        uint64_t v3 = v97 + v45;
        if (__CFADD__(v97, v45)) {
          goto LABEL_56;
        }
        v11 += 32;
        v97 += v45;
        if (!--v30)
        {
          int v11 = (const char *)v89;
          unint64_t v12 = v88;
          sub_100039008(v89, v91, v88, 2);
          break;
        }
      }
    }
    int v46 = sub_100187834((uint64_t)"\r\n", v28, v29, v3);
    uint64_t v5 = v92;
    if (!__CFADD__(v97, v46))
    {
LABEL_44:
      sub_100187758();
      ChannelHandlerContext.write(_:promise:)((uint64_t)v98, v93);
      sub_10003908C((uint64_t)v98);
      swift_release();
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_24;
  }
  sub_1000AE91C();
  sub_100187808();
  __int16 v79 = *(uint64_t (**)(uint64_t))(v3 + 16);
  swift_retain();
  uint64_t v80 = sub_1001877E0();
  char v81 = (uint64_t (*)(void))v79(v80);
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  swift_unknownObjectRelease();
  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(8, v81, v83, v85, v87);
  sub_100187798();
  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"0\r\n\r\n", 5, 2, 0);
  if (!__CFADD__(v97, result)) {
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

void sub_100185F28(uint64_t a1)
{
  unsigned int v2 = HTTPResponseHead.version.getter(a1);
  uint64_t v3 = HTTPVersion.major.getter(v2);
  uint64_t v4 = HTTPResponseHead.version.getter(a1);
  unint64_t v5 = HTTPVersion.minor.getter(v4);
  uint64_t v6 = HTTPResponseHead.status.getter();
  unint64_t v9 = v8;
  switch(v8)
  {
    case 0uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 100 Continue\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 100 Continue\r\n";
      }
      goto LABEL_284;
    case 1uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 101 Switching Protocols\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 101 Switching Protocols\r\n";
      }
      goto LABEL_315;
    case 2uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 102 Processing\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 102 Processing\r\n";
      }
      goto LABEL_256;
    case 3uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 200 OK\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 200 OK\r\n";
      }
      uint64_t v11 = 17;
      goto LABEL_244;
    case 4uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 201 Created\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 201 Created\r\n";
      }
      goto LABEL_262;
    case 5uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 202 Accepted\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 202 Accepted\r\n";
      }
      goto LABEL_284;
    case 6uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 203 Non-Authoritative Information\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 203 Non-Authoritative Information\r\n";
      }
      goto LABEL_308;
    case 7uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 204 No Content\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 204 No Content\r\n";
      }
LABEL_256:
      uint64_t v11 = 25;
      goto LABEL_244;
    case 8uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 205 Reset Content\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 205 Reset Content\r\n";
      }
      goto LABEL_325;
    case 9uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 206 Partial Content\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 206 Partial Content\r\n";
      }
      goto LABEL_317;
    case 0xAuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 207 Multi-Status\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 207 Multi-Status\r\n";
      }
      goto LABEL_327;
    case 0xBuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 208 Already Reported\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 208 Already Reported\r\n";
      }
      goto LABEL_302;
    case 0xCuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 226 IM Used\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 226 IM Used\r\n";
      }
LABEL_262:
      uint64_t v11 = 22;
      goto LABEL_244;
    case 0xDuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 300 Multiple Choices\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 300 Multiple Choices\r\n";
      }
      goto LABEL_302;
    case 0xEuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 301 Moved Permanently\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 301 Moved Permanently\r\n";
      }
      goto LABEL_305;
    case 0xFuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 302 Found\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 302 Found\r\n";
      }
      uint64_t v11 = 20;
      goto LABEL_244;
    case 0x10uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 303 See Other\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 303 See Other\r\n";
      }
      goto LABEL_277;
    case 0x11uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 304 Not Modified\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 304 Not Modified\r\n";
      }
      goto LABEL_327;
    case 0x12uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 305 Use Proxy\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 305 Use Proxy\r\n";
      }
      goto LABEL_277;
    case 0x13uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 307 Tempory Redirect\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 307 Tempory Redirect\r\n";
      }
      goto LABEL_302;
    case 0x14uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 308 Permanent Redirect\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 308 Permanent Redirect\r\n";
      }
      goto LABEL_295;
    case 0x15uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 400 Bad Request\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 400 Bad Request\r\n";
      }
      goto LABEL_313;
    case 0x16uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 401 Unauthorized\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 401 Unauthorized\r\n";
      }
      goto LABEL_327;
    case 0x17uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 402 Payment Required\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 402 Payment Required\r\n";
      }
      goto LABEL_302;
    case 0x18uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 403 Forbidden\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 403 Forbidden\r\n";
      }
      goto LABEL_277;
    case 0x19uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 404 Not Found\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 404 Not Found\r\n";
      }
LABEL_277:
      uint64_t v11 = 24;
      goto LABEL_244;
    case 0x1AuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 405 Method Not Allowed\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 405 Method Not Allowed\r\n";
      }
      goto LABEL_295;
    case 0x1BuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 406 Not Acceptable\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 406 Not Acceptable\r\n";
      }
      uint64_t v11 = 29;
      goto LABEL_244;
    case 0x1CuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 407 Proxy Authentication Required\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 407 Proxy Authentication Required\r\n";
      }
      goto LABEL_308;
    case 0x1DuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 408 Request Timeout\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 408 Request Timeout\r\n";
      }
      goto LABEL_317;
    case 0x1EuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 409 Conflict\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 409 Conflict\r\n";
      }
LABEL_284:
      uint64_t v11 = 23;
      goto LABEL_244;
    case 0x1FuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 410 Gone\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 410 Gone\r\n";
      }
      uint64_t v11 = 19;
      goto LABEL_244;
    case 0x20uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 411 Length Required\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 411 Length Required\r\n";
      }
      goto LABEL_317;
    case 0x21uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 412 Precondition Failed\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 412 Precondition Failed\r\n";
      }
      goto LABEL_315;
    case 0x22uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 413 Payload Too Large\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 413 Payload Too Large\r\n";
      }
      goto LABEL_305;
    case 0x23uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 414 URI Too Long\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 414 URI Too Long\r\n";
      }
      goto LABEL_327;
    case 0x24uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 415 Unsupported Media Type\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 415 Unsupported Media Type\r\n";
      }
      uint64_t v11 = 37;
      goto LABEL_244;
    case 0x25uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 416 Request Range Not Satisified\r\n";
        uint64_t v11 = 43;
        goto LABEL_244;
      }
      if (v5) {
        goto LABEL_243;
      }
      unint64_t v10 = "HTTP/1.0 416 Range Not Satisfiable\r\n";
      goto LABEL_310;
    case 0x26uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 417 Expectation Failed\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 417 Expectation Failed\r\n";
      }
LABEL_295:
      uint64_t v11 = 33;
      goto LABEL_244;
    case 0x27uLL:
      goto LABEL_243;
    case 0x28uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 421 Misdirected Request\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 421 Misdirected Request\r\n";
      }
      goto LABEL_315;
    case 0x29uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 422 Unprocessable Entity\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 422 Unprocessable Entity\r\n";
      }
      goto LABEL_323;
    case 0x2AuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 423 Locked\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 423 Locked\r\n";
      }
      uint64_t v11 = 21;
      goto LABEL_244;
    case 0x2BuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 424 Failed Dependency\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 424 Failed Dependency\r\n";
      }
      goto LABEL_305;
    case 0x2CuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 426 Upgrade Required\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 426 Upgrade Required\r\n";
      }
LABEL_302:
      uint64_t v11 = 31;
      goto LABEL_244;
    case 0x2DuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 428 Precondition Required\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 428 Precondition Required\r\n";
      }
      goto LABEL_310;
    case 0x2EuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 429 Too Many Requests\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 429 Too Many Requests\r\n";
      }
LABEL_305:
      uint64_t v11 = 32;
      goto LABEL_244;
    case 0x2FuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 431 Range Not Satisfiable\r\n";
        goto LABEL_310;
      }
      if (v5) {
        goto LABEL_243;
      }
      unint64_t v10 = "HTTP/1.0 431 Request Header Fields Too Large\r\n";
LABEL_237:
      uint64_t v11 = 46;
      goto LABEL_244;
    case 0x30uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 451 Unavailable For Legal Reasons\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 451 Unavailable For Legal Reasons\r\n";
      }
LABEL_308:
      uint64_t v11 = 44;
      goto LABEL_244;
    case 0x31uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 500 Internal Server Error\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 500 Internal Server Error\r\n";
      }
LABEL_310:
      uint64_t v11 = 36;
      goto LABEL_244;
    case 0x32uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 501 Not Implemented\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 501 Not Implemented\r\n";
      }
      goto LABEL_317;
    case 0x33uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 502 Bad Gateway\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 502 Bad Gateway\r\n";
      }
LABEL_313:
      uint64_t v11 = 26;
      goto LABEL_244;
    case 0x34uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 503 Service Unavailable\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 503 Service Unavailable\r\n";
      }
LABEL_315:
      uint64_t v11 = 34;
      goto LABEL_244;
    case 0x35uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 504 Gateway Timeout\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 504 Gateway Timeout\r\n";
      }
LABEL_317:
      uint64_t v11 = 30;
      goto LABEL_244;
    case 0x36uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 505 HTTP Version Not Supported\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 505 HTTP Version Not Supported\r\n";
      }
      uint64_t v11 = 41;
      goto LABEL_244;
    case 0x37uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 506 Variant Also Negotiates\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 506 Variant Also Negotiates\r\n";
      }
      uint64_t v11 = 38;
      goto LABEL_244;
    case 0x38uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 507 Insufficient Storage\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 507 Insufficient Storage\r\n";
      }
LABEL_323:
      uint64_t v11 = 35;
      goto LABEL_244;
    case 0x39uLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 508 Loop Detected\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 508 Loop Detected\r\n";
      }
LABEL_325:
      uint64_t v11 = 28;
      goto LABEL_244;
    case 0x3AuLL:
      if (v3 != 1) {
        goto LABEL_243;
      }
      if (v5 == 1)
      {
        unint64_t v10 = "HTTP/1.1 510 Not Extended\r\n";
      }
      else
      {
        if (v5) {
          goto LABEL_243;
        }
        unint64_t v10 = "HTTP/1.0 510 Not Extended\r\n";
      }
LABEL_327:
      uint64_t v11 = 27;
      goto LABEL_244;
    case 0x3BuLL:
      if (v3 != 1 || v5 > 1) {
        goto LABEL_243;
      }
      unint64_t v10 = "HTTP/1.1 511 Network Authentication Required\r\n";
      goto LABEL_237;
    default:
      uint64_t v12 = v6;
      uint64_t v13 = v7;
      if (v3 != 1) {
        goto LABEL_242;
      }
      if (v5 == 1)
      {
        uint64_t v14 = "HTTP/1.1 ";
        goto LABEL_329;
      }
      if (!v5)
      {
        uint64_t v14 = "HTTP/1.0 ";
LABEL_329:
        ByteBuffer.writeStaticString(_:)((uint64_t)v14, 9, 2);
        uint64_t v21 = HTTPResponseHead.status.getter();
        uint64_t v23 = v22;
        unint64_t v25 = v24;
        sub_100186C74(v21, v22, v24);
        sub_100186FF0(v21, v23, v25);
        ByteBuffer.writeStaticString(_:)((uint64_t)"\r\n", 2, 2);
        sub_100186FF0(v12, v13, v9);
        return;
      }
LABEL_242:
      sub_100186FF0(v6, v7, v8);
LABEL_243:
      unsigned int v15 = HTTPResponseHead.version.getter(a1);
      sub_100186E00(v15);
      sub_100186DF4();
      uint64_t v16 = HTTPResponseHead.status.getter();
      uint64_t v18 = v17;
      unint64_t v20 = v19;
      sub_100186C74(v16, v17, v19);
      sub_100186FF0(v16, v18, v20);
      unint64_t v10 = "\r\n";
      uint64_t v11 = 2;
LABEL_244:
      ByteBuffer.writeStaticString(_:)((uint64_t)v10, v11, 2);
      return;
  }
}

uint64_t sub_100186C74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  HTTPResponseStatus.code.getter(a1, a2, a3);
  uint64_t v8 = sub_10024F9E0();
  unint64_t v10 = (void *)v9;
  Swift::Int v11 = *(unsigned int *)(v3 + 12);
  int v12 = sub_10008CF60(v8, v9, v4, *(_DWORD *)(v4 + 12));
  if (v13)
  {
    v14._countAndFlagsBits = v8;
    v14._object = v10;
    int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  int v15 = v12;
  uint64_t result = swift_bridgeObjectRelease();
  int v17 = *(_DWORD *)(v4 + 12);
  BOOL v18 = __CFADD__(v17, v15);
  int v19 = v17 + v15;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v4 + 12) = v19;
    sub_100184074(32);
    uint64_t v20 = HTTPResponseStatus.reasonPhrase.getter(a1, a2, a3);
    uint64_t v22 = (void *)v21;
    Swift::Int v23 = *(unsigned int *)(v4 + 12);
    int v24 = sub_10008CF60(v20, v21, v4, *(_DWORD *)(v4 + 12));
    if (v25)
    {
      v26._countAndFlagsBits = v20;
      v26._object = v22;
      int v24 = ByteBuffer._setStringSlowpath(_:at:)(v26, v23);
    }
    int v27 = v24;
    uint64_t result = swift_bridgeObjectRelease();
    int v28 = *(_DWORD *)(v4 + 12);
    BOOL v18 = __CFADD__(v28, v27);
    int v29 = v28 + v27;
    if (!v18)
    {
      *(_DWORD *)(v4 + 12) = v29;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HTTPRequestEncoder()
{
  return self;
}

uint64_t type metadata accessor for HTTPResponseEncoder()
{
  return self;
}

uint64_t sub_100186DF4()
{
  return sub_100184074(32);
}

uint64_t sub_100186E00(unsigned int a1)
{
  uint64_t v2 = v1;
  unsigned int v3 = HIWORD(a1);
  if ((unsigned __int16)a1 == 1)
  {
    if (v3 == 1) {
      goto LABEL_17;
    }
    if (!v3)
    {
      uint64_t v4 = (_DWORD *)(v1 + 12);
      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"HTTP/1.0", 8, 2, *(_DWORD *)(v1 + 12));
      int v6 = *(_DWORD *)(v1 + 12) + result;
      if (!__CFADD__(*(_DWORD *)(v1 + 12), result)) {
        goto LABEL_18;
      }
      __break(1u);
    }
  }
  uint64_t v4 = (_DWORD *)(v1 + 12);
  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"HTTP/", 5, 2, *(_DWORD *)(v1 + 12));
  Swift::Int v7 = (*(_DWORD *)(v1 + 12) + result);
  if (__CFADD__(*(_DWORD *)(v1 + 12), result))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_DWORD *)(v1 + 12) = v7;
  uint64_t v8 = sub_10024F9E0();
  unint64_t v10 = (void *)v9;
  int v11 = sub_10008CF60(v8, v9, v1, v7);
  if (v12)
  {
    v13._countAndFlagsBits = v8;
    v13._object = v10;
    int v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v7);
  }
  int v14 = v11;
  uint64_t result = swift_bridgeObjectRelease();
  Swift::UInt32 v15 = *v4 + v14;
  if (__CFADD__(*v4, v14)) {
    goto LABEL_20;
  }
  *(_DWORD *)(v2 + 12) = v15;
  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)".", 1, 2, v15);
  int v16 = *(_DWORD *)(v2 + 12);
  Swift::Int v17 = (v16 + result);
  if (__CFADD__(v16, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(_DWORD *)(v2 + 12) = v17;
  uint64_t v18 = sub_10024F9E0();
  uint64_t v20 = (void *)v19;
  int v21 = sub_10008CF60(v18, v19, v2, v17);
  if (v22)
  {
    v23._countAndFlagsBits = v18;
    v23._object = v20;
    int v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v17);
  }
  int v24 = v21;
  uint64_t result = swift_bridgeObjectRelease();
  int v6 = *v4 + v24;
  if (!__CFADD__(*v4, v24)) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_17:
  uint64_t v4 = (_DWORD *)(v2 + 12);
  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"HTTP/1.1", 8, 2, *(_DWORD *)(v2 + 12));
  int v6 = *(_DWORD *)(v2 + 12) + result;
  if (!__CFADD__(*(_DWORD *)(v2 + 12), result))
  {
LABEL_18:
    *uint64_t v4 = v6;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100186FF0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 0x3C) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100187004()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100187014(uint64_t result, void *a2)
{
  switch((unint64_t)a2)
  {
    case 0uLL:
      uint64_t v4 = (_DWORD *)(v2 + 12);
      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"GET", 3, 2, *(_DWORD *)(v2 + 12));
      int v5 = *(_DWORD *)(v2 + 12) + result;
      if (__CFADD__(*(_DWORD *)(v2 + 12), result))
      {
        __break(1u);
        goto LABEL_5;
      }
      goto LABEL_107;
    case 1uLL:
      goto LABEL_10;
    case 2uLL:
      goto LABEL_13;
    case 3uLL:
      goto LABEL_16;
    case 4uLL:
      goto LABEL_19;
    case 5uLL:
      goto LABEL_22;
    case 6uLL:
      goto LABEL_25;
    case 7uLL:
      goto LABEL_28;
    case 8uLL:
      goto LABEL_31;
    case 9uLL:
      goto LABEL_34;
    case 0xAuLL:
      goto LABEL_37;
    case 0xBuLL:
      goto LABEL_40;
    case 0xCuLL:
      goto LABEL_43;
    case 0xDuLL:
      goto LABEL_46;
    case 0xEuLL:
      goto LABEL_49;
    case 0xFuLL:
      goto LABEL_52;
    case 0x10uLL:
      goto LABEL_55;
    case 0x11uLL:
      goto LABEL_58;
    case 0x12uLL:
      goto LABEL_61;
    case 0x13uLL:
      goto LABEL_64;
    case 0x14uLL:
      goto LABEL_67;
    case 0x15uLL:
      goto LABEL_70;
    case 0x16uLL:
      goto LABEL_73;
    case 0x17uLL:
      goto LABEL_76;
    case 0x18uLL:
      goto LABEL_79;
    case 0x19uLL:
      goto LABEL_82;
    case 0x1AuLL:
      goto LABEL_85;
    case 0x1BuLL:
      goto LABEL_88;
    case 0x1CuLL:
      goto LABEL_91;
    case 0x1DuLL:
      goto LABEL_94;
    case 0x1EuLL:
      goto LABEL_97;
    case 0x1FuLL:
      goto LABEL_100;
    case 0x20uLL:
      goto LABEL_103;
    case 0x21uLL:
      goto LABEL_106;
    default:
LABEL_5:
      uint64_t v6 = result;
      uint64_t v4 = (_DWORD *)(v2 + 12);
      Swift::Int v7 = *(unsigned int *)(v2 + 12);
      swift_bridgeObjectRetain();
      int v8 = sub_10008CF60(v6, (unint64_t)a2, v2, v7);
      char v10 = v9;
      uint64_t result = sub_10006B3E8(v6, (unint64_t)a2);
      if (v10)
      {
        v11._countAndFlagsBits = v6;
        v11._object = a2;
        uint64_t result = ByteBuffer._setStringSlowpath(_:at:)(v11, v7);
        int v8 = result;
      }
      int v5 = *v4 + v8;
      if (!__CFADD__(*v4, v8)) {
        goto LABEL_107;
      }
      __break(1u);
LABEL_10:
      uint64_t v4 = (_DWORD *)(v2 + 12);
      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"PUT", 3, 2, *(_DWORD *)(v2 + 12));
      int v5 = *(_DWORD *)(v2 + 12) + result;
      if (!__CFADD__(*(_DWORD *)(v2 + 12), result)) {
        goto LABEL_107;
      }
      __break(1u);
LABEL_13:
      uint64_t v4 = (_DWORD *)(v2 + 12);
      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"ACL", 3, 2, *(_DWORD *)(v2 + 12));
      int v5 = *(_DWORD *)(v2 + 12) + result;
      if (__CFADD__(*(_DWORD *)(v2 + 12), result))
      {
        __break(1u);
LABEL_16:
        uint64_t v4 = (_DWORD *)(v2 + 12);
        uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"HEAD", 4, 2, *(_DWORD *)(v2 + 12));
        int v5 = *(_DWORD *)(v2 + 12) + result;
        if (__CFADD__(*(_DWORD *)(v2 + 12), result))
        {
          __break(1u);
LABEL_19:
          uint64_t v4 = (_DWORD *)(v2 + 12);
          uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"POST", 4, 2, *(_DWORD *)(v2 + 12));
          int v5 = *(_DWORD *)(v2 + 12) + result;
          if (__CFADD__(*(_DWORD *)(v2 + 12), result))
          {
            __break(1u);
LABEL_22:
            uint64_t v4 = (_DWORD *)(v2 + 12);
            uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"COPY", 4, 2, *(_DWORD *)(v2 + 12));
            int v5 = *(_DWORD *)(v2 + 12) + result;
            if (__CFADD__(*(_DWORD *)(v2 + 12), result))
            {
              __break(1u);
LABEL_25:
              uint64_t v4 = (_DWORD *)(v2 + 12);
              uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"LOCK", 4, 2, *(_DWORD *)(v2 + 12));
              int v5 = *(_DWORD *)(v2 + 12) + result;
              if (__CFADD__(*(_DWORD *)(v2 + 12), result))
              {
                __break(1u);
LABEL_28:
                uint64_t v4 = (_DWORD *)(v2 + 12);
                uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"MOVE", 4, 2, *(_DWORD *)(v2 + 12));
                int v5 = *(_DWORD *)(v2 + 12) + result;
                if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                {
                  __break(1u);
LABEL_31:
                  uint64_t v4 = (_DWORD *)(v2 + 12);
                  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"BIND", 4, 2, *(_DWORD *)(v2 + 12));
                  int v5 = *(_DWORD *)(v2 + 12) + result;
                  if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                  {
                    __break(1u);
LABEL_34:
                    uint64_t v4 = (_DWORD *)(v2 + 12);
                    uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"LINK", 4, 2, *(_DWORD *)(v2 + 12));
                    int v5 = *(_DWORD *)(v2 + 12) + result;
                    if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                    {
                      __break(1u);
LABEL_37:
                      uint64_t v4 = (_DWORD *)(v2 + 12);
                      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"PATCH", 5, 2, *(_DWORD *)(v2 + 12));
                      int v5 = *(_DWORD *)(v2 + 12) + result;
                      if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                      {
                        __break(1u);
LABEL_40:
                        uint64_t v4 = (_DWORD *)(v2 + 12);
                        uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"TRACE", 5, 2, *(_DWORD *)(v2 + 12));
                        int v5 = *(_DWORD *)(v2 + 12) + result;
                        if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                        {
                          __break(1u);
LABEL_43:
                          uint64_t v4 = (_DWORD *)(v2 + 12);
                          uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"MKCOL", 5, 2, *(_DWORD *)(v2 + 12));
                          int v5 = *(_DWORD *)(v2 + 12) + result;
                          if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                          {
                            __break(1u);
LABEL_46:
                            uint64_t v4 = (_DWORD *)(v2 + 12);
                            uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"MERGE", 5, 2, *(_DWORD *)(v2 + 12));
                            int v5 = *(_DWORD *)(v2 + 12) + result;
                            if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                            {
                              __break(1u);
LABEL_49:
                              uint64_t v4 = (_DWORD *)(v2 + 12);
                              uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"PURGE", 5, 2, *(_DWORD *)(v2 + 12));
                              int v5 = *(_DWORD *)(v2 + 12) + result;
                              if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                              {
                                __break(1u);
LABEL_52:
                                uint64_t v4 = (_DWORD *)(v2 + 12);
                                uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"NOTIFY", 6, 2, *(_DWORD *)(v2 + 12));
                                int v5 = *(_DWORD *)(v2 + 12) + result;
                                if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                {
                                  __break(1u);
LABEL_55:
                                  uint64_t v4 = (_DWORD *)(v2 + 12);
                                  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"SEARCH", 6, 2, *(_DWORD *)(v2 + 12));
                                  int v5 = *(_DWORD *)(v2 + 12) + result;
                                  if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                  {
                                    __break(1u);
LABEL_58:
                                    uint64_t v4 = (_DWORD *)(v2 + 12);
                                    uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"UNLOCK", 6, 2, *(_DWORD *)(v2 + 12));
                                    int v5 = *(_DWORD *)(v2 + 12) + result;
                                    if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                    {
                                      __break(1u);
LABEL_61:
                                      uint64_t v4 = (_DWORD *)(v2 + 12);
                                      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"REBIND", 6, 2, *(_DWORD *)(v2 + 12));
                                      int v5 = *(_DWORD *)(v2 + 12) + result;
                                      if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                      {
                                        __break(1u);
LABEL_64:
                                        uint64_t v4 = (_DWORD *)(v2 + 12);
                                        uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"UNBIND", 6, 2, *(_DWORD *)(v2 + 12));
                                        int v5 = *(_DWORD *)(v2 + 12) + result;
                                        if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                        {
                                          __break(1u);
LABEL_67:
                                          uint64_t v4 = (_DWORD *)(v2 + 12);
                                          uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"REPORT", 6, 2, *(_DWORD *)(v2 + 12));
                                          int v5 = *(_DWORD *)(v2 + 12) + result;
                                          if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                          {
                                            __break(1u);
LABEL_70:
                                            uint64_t v4 = (_DWORD *)(v2 + 12);
                                            uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"DELETE", 6, 2, *(_DWORD *)(v2 + 12));
                                            int v5 = *(_DWORD *)(v2 + 12) + result;
                                            if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                            {
                                              __break(1u);
LABEL_73:
                                              uint64_t v4 = (_DWORD *)(v2 + 12);
                                              uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"UNLINK", 6, 2, *(_DWORD *)(v2 + 12));
                                              int v5 = *(_DWORD *)(v2 + 12) + result;
                                              if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                              {
                                                __break(1u);
LABEL_76:
                                                uint64_t v4 = (_DWORD *)(v2 + 12);
                                                uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"CONNECT", 7, 2, *(_DWORD *)(v2 + 12));
                                                int v5 = *(_DWORD *)(v2 + 12) + result;
                                                if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                {
                                                  __break(1u);
LABEL_79:
                                                  uint64_t v4 = (_DWORD *)(v2 + 12);
                                                  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"MSEARCH", 7, 2, *(_DWORD *)(v2 + 12));
                                                  int v5 = *(_DWORD *)(v2 + 12) + result;
                                                  if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                  {
                                                    __break(1u);
LABEL_82:
                                                    uint64_t v4 = (_DWORD *)(v2 + 12);
                                                    uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"OPTIONS", 7, 2, *(_DWORD *)(v2 + 12));
                                                    int v5 = *(_DWORD *)(v2 + 12) + result;
                                                    if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                    {
                                                      __break(1u);
LABEL_85:
                                                      uint64_t v4 = (_DWORD *)(v2 + 12);
                                                      uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"PROPFIND", 8, 2, *(_DWORD *)(v2 + 12));
                                                      int v5 = *(_DWORD *)(v2 + 12) + result;
                                                      if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                      {
                                                        __break(1u);
LABEL_88:
                                                        uint64_t v4 = (_DWORD *)(v2 + 12);
                                                        uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"CHECKOUT", 8, 2, *(_DWORD *)(v2 + 12));
                                                        int v5 = *(_DWORD *)(v2 + 12) + result;
                                                        if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                        {
                                                          __break(1u);
LABEL_91:
                                                          uint64_t v4 = (_DWORD *)(v2 + 12);
                                                          uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"PROPPATCH", 9, 2, *(_DWORD *)(v2 + 12));
                                                          int v5 = *(_DWORD *)(v2 + 12) + result;
                                                          if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                          {
                                                            __break(1u);
LABEL_94:
                                                            uint64_t v4 = (_DWORD *)(v2 + 12);
                                                            uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"SUBSCRIBE", 9, 2, *(_DWORD *)(v2 + 12));
                                                            int v5 = *(_DWORD *)(v2 + 12) + result;
                                                            if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                            {
                                                              __break(1u);
LABEL_97:
                                                              uint64_t v4 = (_DWORD *)(v2 + 12);
                                                              uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"MKCALENDAR", 10, 2, *(_DWORD *)(v2 + 12));
                                                              int v5 = *(_DWORD *)(v2 + 12) + result;
                                                              if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                              {
                                                                __break(1u);
LABEL_100:
                                                                uint64_t v4 = (_DWORD *)(v2 + 12);
                                                                uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"MKACTIVITY", 10, 2, *(_DWORD *)(v2 + 12));
                                                                int v5 = *(_DWORD *)(v2 + 12) + result;
                                                                if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                                {
                                                                  __break(1u);
LABEL_103:
                                                                  uint64_t v4 = (_DWORD *)(v2 + 12);
                                                                  uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"UNSUBSCRIBE", 11, 2, *(_DWORD *)(v2 + 12));
                                                                  int v5 = *(_DWORD *)(v2 + 12) + result;
                                                                  if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                                  {
                                                                    __break(1u);
LABEL_106:
                                                                    uint64_t v4 = (_DWORD *)(v2 + 12);
                                                                    uint64_t result = ByteBuffer.setStaticString(_:at:)((uint64_t)"SOURCE", 6, 2, *(_DWORD *)(v2 + 12));
                                                                    int v5 = *(_DWORD *)(v2 + 12) + result;
                                                                    if (__CFADD__(*(_DWORD *)(v2 + 12), result))
                                                                    {
                                                                      __break(1u);
                                                                      JUMPOUT(0x1001876C4);
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_107:
      *uint64_t v4 = v5;
      return result;
  }
}

uint64_t sub_100187758()
{
  return swift_retain();
}

uint64_t sub_1001877B0()
{
  return EventLoop.makePromise<A>(of:file:line:)(v2, v0, 113, 2, 21, v1, v2, v3);
}

uint64_t sub_1001877E0()
{
  return v0;
}

uint64_t sub_1001877F4()
{
  return v0;
}

uint64_t sub_100187808()
{
  return swift_getObjectType();
}

uint64_t sub_100187834(uint64_t a1, uint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  return ByteBuffer.setStaticString(_:at:)(a1, 2, 2, a4);
}

ValueMetadata *type metadata accessor for InAppRegrantPurchaseHistoryRequest()
{
  return &type metadata for InAppRegrantPurchaseHistoryRequest;
}

uint64_t sub_100187870(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D90D8;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001878C0(char a1)
{
  uint64_t result = 6580578;
  switch(a1)
  {
    case 1:
      uint64_t result = 1936881250;
      break;
    case 2:
      uint64_t result = 1684632935;
      break;
    case 3:
      uint64_t result = 0x6E4F707041534F69;
      break;
    case 4:
      uint64_t result = 6580598;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100187950(char a1)
{
  uint64_t result = 6580578;
  switch(a1)
  {
    case 1:
      uint64_t result = 1936881250;
      break;
    case 2:
      uint64_t result = 1684632935;
      break;
    case 3:
      uint64_t result = 0x6E4F707041534F69;
      break;
    case 4:
      uint64_t result = 6580598;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001879E0(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100315F90);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  char v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_10018807C();
  sub_10024FD40();
  v11[15] = 0;
  sub_10024F940();
  if (!v1)
  {
    v11[14] = 1;
    sub_10024F940();
    v11[13] = 2;
    sub_100052BD4();
    v11[12] = 3;
    sub_100052BD4();
    v11[11] = 4;
    sub_100052BD4();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100187B6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100019524(&qword_100315F80);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_10001C2A8(a1, a1[3]);
  sub_10018807C();
  sub_10024FD20();
  if (v2) {
    return sub_10001C2EC((uint64_t)a1);
  }
  uint64_t v7 = sub_10024F830();
  uint64_t v9 = v8;
  uint64_t v27 = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10024F830();
  uint64_t v28 = v11;
  uint64_t v24 = v10;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_10024F7C0();
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v25 = v13;
  uint64_t v22 = sub_10024F7C0();
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10024F7C0();
  uint64_t v18 = v17;
  uint64_t v26 = v16;
  uint64_t v19 = sub_1001882BC();
  v20(v19);
  swift_bridgeObjectRetain();
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v9;
  a2[2] = v24;
  a2[3] = v28;
  a2[4] = v23;
  a2[5] = v25;
  a2[6] = v22;
  a2[7] = v15;
  a2[8] = v26;
  a2[9] = v18;
  return result;
}

uint64_t sub_100187EF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F8B70(*a1, *a2);
}

Swift::Int sub_100187EFC()
{
  return sub_1001D3938(*v0);
}

uint64_t sub_100187F04(uint64_t a1)
{
  return sub_1000D094C(a1, *v1);
}

Swift::Int sub_100187F0C(uint64_t a1)
{
  return sub_1000D2B34(a1, *v1);
}

uint64_t sub_100187F14@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100187870(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100187F44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001878C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100187F70()
{
  return sub_100187950(*v0);
}

uint64_t sub_100187F78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001878BC();
  *a1 = result;
  return result;
}

uint64_t sub_100187FA0(uint64_t a1)
{
  unint64_t v2 = sub_10018807C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100187FDC(uint64_t a1)
{
  unint64_t v2 = sub_10018807C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100188018@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_100187B6C(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x50uLL);
  }
  return result;
}

uint64_t sub_100188064(void *a1)
{
  return sub_1001879E0(a1);
}

unint64_t sub_10018807C()
{
  unint64_t result = qword_100315F88;
  if (!qword_100315F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315F88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InAppRegrantPurchaseHistoryRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100188194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppRegrantPurchaseHistoryRequest.CodingKeys()
{
  return &type metadata for InAppRegrantPurchaseHistoryRequest.CodingKeys;
}