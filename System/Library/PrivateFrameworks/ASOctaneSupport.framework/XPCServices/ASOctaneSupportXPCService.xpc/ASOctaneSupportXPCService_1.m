ValueMetadata *type metadata accessor for LegacyCreateAppReceiptResponse.CodingKeys()
{
  return &type metadata for LegacyCreateAppReceiptResponse.CodingKeys;
}

unint64_t sub_100086808()
{
  unint64_t result = qword_10030D338;
  if (!qword_10030D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D338);
  }
  return result;
}

unint64_t sub_100086858()
{
  unint64_t result = qword_10030D340;
  if (!qword_10030D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D340);
  }
  return result;
}

unint64_t sub_1000868A8()
{
  unint64_t result = qword_10030D348;
  if (!qword_10030D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D348);
  }
  return result;
}

unint64_t sub_1000868F8()
{
  unint64_t result = qword_10030D350;
  if (!qword_10030D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D350);
  }
  return result;
}

unint64_t sub_100086948()
{
  unint64_t result = qword_10030D358;
  if (!qword_10030D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D358);
  }
  return result;
}

unint64_t sub_100086998()
{
  unint64_t result = qword_10030D360;
  if (!qword_10030D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D360);
  }
  return result;
}

uint64_t sub_100086A0C()
{
  return v0 - 80;
}

void *initializeWithCopy for DatagramVectorReadManager(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t getEnumTagSinglePayload for DatagramVectorReadManager(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DatagramVectorReadManager(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DatagramVectorReadManager()
{
  return &type metadata for DatagramVectorReadManager;
}

uint64_t sub_100086A94(int a1, uint64_t a2, char a3)
{
  type metadata accessor for BaseSocket();
  uint64_t v7 = sub_1000F0FD4(a1, a2, a3);
  if (!v3) {
    return sub_1000F1214(v7);
  }
  type metadata accessor for Socket();
  return swift_deallocPartialClassInstance();
}

uint64_t sub_100086B34(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000F1214(a1);
  if (!v2 && (a2 & 1) != 0)
  {
    if (sub_1000F152C())
    {
      sub_1001B7130();
    }
    else
    {
      sub_100028EB4();
      sub_1000290D0();
      sub_1000878A4();
      sub_100062570(v5, v6);
      swift_release();
    }
  }
  return v4;
}

uint64_t sub_100086BC4(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      swift_retain();
      char v1 = sub_100086D4C();
    }
    else
    {
      memcpy(__dst, (const void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
      swift_retain();
      char v1 = sub_100086DB8(__dst);
    }
    char v2 = v1;
  }
  else
  {
    swift_retain();
    char v2 = sub_100086CB0();
  }
  swift_release();
  return v2 & 1;
}

uint64_t sub_100086CB0()
{
  return sub_100190D28((void (*)(uint64_t *__return_ptr, void))sub_100087850) & 1;
}

uint64_t sub_100086D4C()
{
  return sub_100190D28((void (*)(uint64_t *__return_ptr, void))sub_10008786C) & 1;
}

uint64_t sub_100086DB8(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  return sub_100190D28((void (*)(uint64_t *__return_ptr, void))sub_100087888) & 1;
}

uint64_t sub_100086E1C(uint64_t a1, const void *a2)
{
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1001B6718(a1, (uint64_t)__dst, 0x6Au) & 1;
}

uint64_t sub_100086E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6[0] = a2;
  v6[2] = a4;
  v6[1] = a3;
  int v7 = a5;
  return sub_1001B6718(a1, (uint64_t)v6, 0x1Cu) & 1;
}

uint64_t sub_100086F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_1001B6718(a1, (uint64_t)v4, 0x10u) & 1;
}

uint64_t sub_100086FC8()
{
  if (!sub_1000F152C())
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    *(void *)uint64_t v4 = v7;
    unint64_t v6 = 0x800000010027B110;
    int v3 = 9;
    goto LABEL_6;
  }
  uint64_t result = sub_100192770(*(unsigned int *)(v0 + 16), 0xFFFFLL, 4103);
  if (!v1)
  {
    int v3 = result;
    if (result)
    {
      sub_100028EB4();
      sub_1000290D0();
      sub_1000878A4();
      *(void *)uint64_t v4 = v5 + 8;
      unint64_t v6 = 0x800000010027C140;
LABEL_6:
      *(void *)(v4 + 8) = v6;
      *(_DWORD *)(v4 + 16) = v3;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_10008708C(uint64_t a1)
{
  if (sub_1000F152C())
  {
    if (a1)
    {
      sub_1000878B4();
      sub_1001B6190();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v2, v3);
  }
}

void sub_10008710C(uint64_t a1, uint64_t a2)
{
  if (sub_1000F152C())
  {
    sub_1001B5FF4(*(unsigned int *)(v2 + 16), a1, a2);
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v5, v6);
  }
}

void sub_100087190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a1) {
    __break(1u);
  }
  v7[0] = a1;
  v7[1] = a2 - a1;
  sub_1000F126C(v6, (uint64_t)v7, a3, a4, a5, a6);
}

void sub_100087204(uint64_t a1)
{
  if (sub_1000F152C())
  {
    if (a1)
    {
      sub_1000878B4();
      sub_1001B60D4();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v2, v3);
  }
}

void sub_100087284(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (!a1) {
    uint64_t v5 = 0;
  }
  v7[0] = a1;
  v7[1] = v5;
  sub_100087320(a3, a4, (uint64_t)v7, a5, (uint64_t)&v6);
}

void sub_100087320(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  unsigned int v9 = *a2;
  uint64_t v10 = *a4;
  if (*a4)
  {
    uint64_t v11 = a4[1] - v10;
    if (v11 < (uint64_t)&_mh_execute_header) {
      goto LABEL_5;
    }
    a1 = sub_10024F660();
    __break(1u);
  }
  LODWORD(v11) = 0;
LABEL_5:
  uint64_t v15 = a1;
  unsigned int v16 = v9;
  uint64_t v17 = a3;
  *(void *)&long long v18 = v10;
  *((void *)&v18 + 1) = v11;
  if (!sub_1000F152C())
  {
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000001FLL;
    *(void *)(v14 + 8) = 0x800000010027B110;
    *(_DWORD *)(v14 + 16) = 9;
    swift_willThrow();
    goto LABEL_11;
  }
  sub_1001B6B38();
  if (v5)
  {
LABEL_11:
    *a2 = v16;
    return;
  }
  if (v13)
  {
    a4[2] = v15;
    a4[3] = v16;
    a4[4] = v17;
    a4[5] = 1;
    *((_OWORD *)a4 + 3) = v18;
    *((unsigned char *)a4 + 64) = 0;
  }
  *(void *)a5 = v12;
  *(unsigned char *)(a5 + 8) = v13 & 1;
  *a2 = v16;
}

off_t sub_1000874D4(int a1, off_t a2, off_t a3)
{
  if (sub_1000F152C()) {
    return sub_1001B6F90(*(_DWORD *)(v3 + 16), a1, a2, a3);
  }
  sub_100028EB4();
  sub_1000290D0();
  sub_1000878A4();
  return sub_100062570(v8, v9);
}

uint64_t sub_100087560(unsigned __int8 a1)
{
  if (sub_1000F152C()) {
    return sub_1001B6D78(*(_DWORD *)(v1 + 16), a1);
  }
  sub_100028EB4();
  sub_1000290D0();
  sub_1000878A4();
  return sub_100062570(v4, v5);
}

uint64_t sub_1000875CC()
{
  return _swift_deallocClassInstance(v0, 20, 7);
}

uint64_t type metadata accessor for Socket()
{
  return self;
}

uint64_t sub_100087600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100087684(a1, a2, a3, a4, (uint64_t (*)(void))sub_10008708C);
}

uint64_t sub_10008762C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100087684(a1, a2, a3, a4, (uint64_t (*)(void))sub_10008710C);
}

uint64_t sub_100087658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100087684(a1, a2, a3, a4, (uint64_t (*)(void))sub_100087204);
}

uint64_t sub_100087684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5();
  if (v5) {
    return v7;
  }
  return result;
}

off_t sub_1000876B8(int a1, off_t a2, off_t a3)
{
  off_t result = sub_1000874D4(a1, a2, a3);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1000876E8(unsigned __int8 a1)
{
  return sub_100087560(a1);
}

unint64_t sub_10008770C(uint64_t a1)
{
  unint64_t result = sub_100087734();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100087734()
{
  unint64_t result = qword_10030D4D8;
  if (!qword_10030D4D8)
  {
    type metadata accessor for Socket();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D4D8);
  }
  return result;
}

uint64_t sub_100087780@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, unsigned char *a3@<X8>)
{
  memcpy(__dst, a2, sizeof(__dst));
  uint64_t result = sub_100086E1C(a1, __dst);
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

uint64_t sub_1000877E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100086E98(a1, *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(_DWORD *)(a2 + 24));
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

uint64_t sub_10008781C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100086F18(a1, *a2, a2[1]);
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

uint64_t sub_100087850@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10008781C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_10008786C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000877E0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100087888@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100087780(a1, *(const void **)(v2 + 16), a2);
}

uint64_t sub_1000878B4()
{
  return *(unsigned int *)(v0 + 16);
}

void *sub_1000878C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain_n();
  unint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_1000F072C(v10);
  swift_bridgeObjectRelease();
  char v57 = a3;
  if (v11)
  {
    uint64_t v12 = v11[3];
    unint64_t v13 = v11[5];
    uint64_t v53 = v11[2];
    uint64_t v54 = v11[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    unint64_t v13 = 0;
    uint64_t v12 = 0;
  }
  char v52 = *(unsigned char *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100087E08(v14, v15);
  if (v17) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v16;
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = a2;
  uint64_t v19 = sub_10005148C();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_100019524(&qword_10030D570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100255FB0;
  uint64_t v23 = *(void *)(a1 + 72);
  *(void *)(inited + 32) = *(void *)(a1 + 64);
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 48) = v18;
  *(unsigned char *)(inited + 56) = 0;
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = v21;
  *(void *)(inited + 80) = 0;
  *(unsigned char *)(inited + 88) = 1;
  *(void *)(inited + 96) = 0;
  *(_WORD *)(inited + 104) = 1;
  *(unsigned char *)(inited + 106) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_10024E510();
  type metadata accessor for OctaneSubscription();
  uint64_t v25 = swift_dynamicCastClass();
  __dst = a4;
  uint64_t v55 = v24;
  if (!v25)
  {
    swift_bridgeObjectRetain();
    v33 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v26 = a1;
    goto LABEL_29;
  }
  uint64_t v26 = v25;
  uint64_t v47 = v12;
  uint64_t v27 = *(void *)(v25 + 176);
  char v28 = *(unsigned char *)(v25 + 184);
  swift_bridgeObjectRetain();
  uint64_t v46 = a1;
  swift_retain();
  uint64_t v29 = sub_100213730(v27, v28);
  uint64_t v50 = v30;
  uint64_t v51 = v29;
  uint64_t v48 = *(void *)(v26 + 200);
  uint64_t v49 = *(void *)(v26 + 192);
  unint64_t v31 = *(void *)(v26 + 144);
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10024F6F0();
    if (v12) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    v33 = _swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  uint64_t v12 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_21;
  }
LABEL_10:
  *(void *)&v59[0] = _swiftEmptyArrayStorage;
  sub_1000391A8(0, v12 & ~(v12 >> 63), 0);
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v32 = 0;
  v33 = *(void **)&v59[0];
  do
  {
    if ((v31 & 0xC000000000000001) != 0) {
      uint64_t v34 = sub_10024F380();
    }
    else {
      uint64_t v34 = swift_retain();
    }
    sub_1000F7018(v34, (uint64_t)__src);
    *(void *)&v59[0] = v33;
    unint64_t v36 = v33[2];
    unint64_t v35 = v33[3];
    if (v36 >= v35 >> 1)
    {
      sub_1000391A8((char *)(v35 > 1), v36 + 1, 1);
      v33 = *(void **)&v59[0];
    }
    ++v32;
    v33[2] = v36 + 1;
    memcpy(&v33[14 * v36 + 4], __src, 0x69uLL);
  }
  while (v12 != v32);
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v12 = v47;
  if (*(void *)(v26 + 136))
  {
    uint64_t v37 = swift_retain_n();
    sub_1000F7018(v37, (uint64_t)v61);
    uint64_t v26 = v46;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_24:
      unint64_t v38 = v33[2];
      if (v38 >= v33[3] >> 1)
      {
        sub_100035AEC();
        v33 = v45;
      }
      v33[2] = v38 + 1;
      memcpy(&v33[14 * v38 + 4], v61, 0x69uLL);
      swift_release();
      goto LABEL_28;
    }
LABEL_34:
    sub_100035AEC();
    v33 = v44;
    goto LABEL_24;
  }
  uint64_t v26 = v46;
LABEL_28:
  swift_release();
LABEL_29:
  uint64_t v39 = sub_1000F0A58(v56);
  uint64_t v41 = v40;
  swift_release();
  swift_release();
  sub_10001DB0C(v56);
  if (v57) {
    char v42 = *(unsigned char *)(v26 + 112);
  }
  else {
    char v42 = 4;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)&v59[0] = 0;
  BYTE8(v59[0]) = 1;
  memset(&v59[1], 0, 48);
  *(void *)&v59[4] = v55;
  *((void *)&v59[4] + 1) = 0xD000000000000013;
  *(void *)&v59[5] = 0x800000010027C170;
  *((void *)&v59[5] + 1) = v9;
  *(void *)&v59[6] = v8;
  *((void *)&v59[6] + 1) = v53;
  *(void *)&v59[7] = v12;
  *((void *)&v59[7] + 1) = v54;
  *(void *)&v59[9] = 0;
  v59[8] = v13;
  BYTE8(v59[9]) = 0;
  BYTE9(v59[9]) = v52;
  *(void *)&v59[10] = v39;
  *((void *)&v59[10] + 1) = v41;
  *(void *)&v59[11] = v49;
  *((void *)&v59[11] + 1) = v48;
  *(void *)&v59[12] = v51;
  *((void *)&v59[12] + 1) = v50;
  *(void *)&v59[13] = v33;
  BYTE8(v59[13]) = v42;
  sub_100089610((uint64_t)v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100089444((uint64_t)v59);
  return memcpy(__dst, v59, 0xD9uLL);
}

uint64_t sub_100087E08(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_10024F320();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    __chkstk_darwin(a1, a2);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_10024F3E0();
      }
      char v6 = sub_100089930(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1000899AC);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

uint64_t sub_100087F98()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

uint64_t sub_100087FF0()
{
  return 17;
}

unint64_t sub_100087FF8(char a1)
{
  unint64_t result = 0x64692D6D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 7107189;
      break;
    case 2:
      unint64_t result = 0x32656C746974;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x666F2D65726F7473;
      break;
    case 5:
      unint64_t result = 1701869940;
      break;
    case 6:
      unint64_t result = 0x6D614E726566666FLL;
      break;
    case 7:
      unint64_t result = 0x7470697263736564;
      break;
    case 8:
      unint64_t result = 0x656C746974;
      break;
    case 9:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 10:
      unint64_t result = 0x6574736F682D7369;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x61636F6C2D756369;
      break;
    case 13:
      unint64_t result = 0xD000000000000014;
      break;
    case 14:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 15:
      unint64_t result = 0x746E756F63736964;
      break;
    case 16:
      unint64_t result = 1684957547;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100088210(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_10030D528);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000893F8();
  sub_10024FD40();
  v15[0] = 0;
  sub_10008A3A8();
  sub_10024F930();
  if (!v2)
  {
    sub_10008A21C(1);
    sub_10008A21C(2);
    sub_10008A21C(3);
    sub_1000458B4(v3 + 64, (uint64_t)v18, &qword_10030D530);
    sub_1000458B4((uint64_t)v18, (uint64_t)v15, &qword_10030D530);
    char v14 = 4;
    sub_100019524(&qword_10030D4F0);
    sub_1000896F4(&qword_10030D538, (void (*)(void))sub_100089770);
    sub_10008A33C();
    v15[0] = 5;
    sub_10008A3A8();
    sub_10024F940();
    sub_10008A21C(6);
    sub_10008A21C(7);
    sub_10008A21C(8);
    sub_10008A21C(9);
    sub_10008A384(10);
    sub_10008A384(11);
    sub_10008A21C(12);
    sub_10008A21C(13);
    sub_10008A21C(14);
    sub_1000458B4(v3 + 208, (uint64_t)v17, &qword_10030D548);
    sub_1000458B4((uint64_t)v17, (uint64_t)v15, &qword_10030D548);
    char v14 = 15;
    sub_100019524(&qword_10030D508);
    sub_1000897BC(&qword_10030D550, (void (*)(void))sub_10008982C);
    sub_10008A33C();
    sub_1000458B4(v3 + 216, (uint64_t)&v16, &qword_10030D560);
    sub_1000458B4((uint64_t)&v16, (uint64_t)v15, &qword_10030D560);
    char v14 = 16;
    sub_100089878();
    sub_10024F910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v5);
}

void *sub_10008858C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v79 = sub_100019524(&qword_10030D4E0);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v127 = 1;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_10001C2A8(a1, v12);
  sub_1000893F8();
  sub_10024FD20();
  v82 = a1;
  if (v2)
  {
    uint64_t v94 = v2;
    sub_10008A258();
    uint64_t v14 = 0;
LABEL_4:
    sub_10001C2EC((uint64_t)v82);
    uint64_t v101 = v14;
    char v102 = v127;
    *(_DWORD *)v103 = *(_DWORD *)v126;
    *(_DWORD *)&v103[3] = *(_DWORD *)&v126[3];
    uint64_t v104 = v12;
    uint64_t v105 = v128;
    uint64_t v106 = v13;
    uint64_t v107 = v97;
    uint64_t v108 = v7;
    uint64_t v109 = v96;
    uint64_t v110 = v81;
    unint64_t v111 = 0xD000000000000013;
    unint64_t v112 = 0x800000010027C170;
    uint64_t v113 = v3;
    uint64_t v114 = v95;
    v115 = v11;
    uint64_t v116 = v93;
    v117 = a1;
    uint64_t v118 = v91;
    uint64_t v119 = v92;
    uint64_t v120 = v80;
    sub_10008A3D0();
    int v121 = v125;
    sub_10008A2B8();
    uint64_t v122 = v86;
    uint64_t v123 = v83;
    char v124 = 4;
    return (void *)sub_100089444((uint64_t)&v101);
  }
  v78 = a2;
  LOBYTE(v101) = 0;
  uint64_t v77 = sub_10024F820();
  char v127 = v16 & 1;
  LOBYTE(v101) = 1;
  int v17 = v16;
  uint64_t v18 = sub_10024F7C0();
  uint64_t v20 = v19;
  LODWORD(v75) = v17;
  uint64_t v76 = v18;
  LOBYTE(v101) = 2;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10008A2EC();
  uint64_t v128 = v20;
  uint64_t v74 = v21;
  LOBYTE(v101) = 3;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_10008A2EC();
  uint64_t v97 = v23;
  uint64_t v73 = v24;
  uint64_t v26 = v25;
  sub_100019524(&qword_10030D4F0);
  v98[0] = 4;
  sub_1000896F4(&qword_10030D4F8, (void (*)(void))sub_10008952C);
  uint64_t v96 = v26;
  swift_bridgeObjectRetain();
  sub_10024F800();
  uint64_t v27 = v101;
  LOBYTE(v101) = 6;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_10008A2EC();
  uint64_t v81 = v27;
  uint64_t v29 = v27;
  uint64_t v72 = v28;
  LOBYTE(v101) = 7;
  uint64_t v31 = v30;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_10008A2EC();
  uint64_t v95 = v31;
  v71 = (char *)v32;
  LOBYTE(v101) = 8;
  uint64_t v34 = v33;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_10008A2EC();
  uint64_t v93 = v34;
  v70 = (void *)v35;
  LOBYTE(v101) = 9;
  uint64_t v37 = v36;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_10008A2EC();
  uint64_t v91 = v37;
  uint64_t v92 = v38;
  uint64_t v94 = 0;
  uint64_t v40 = v29;
  uint64_t v41 = v93;
  LOBYTE(v101) = 10;
  uint64_t v42 = v39;
  swift_bridgeObjectRetain();
  uint64_t v43 = v94;
  char v44 = sub_10024F840();
  uint64_t v94 = v43;
  uint64_t v80 = v42;
  if (v43)
  {
    uint64_t v45 = sub_10008A240();
    v46(v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    uint64_t v89 = 0;
    uint64_t v90 = 0;
    uint64_t v86 = 0;
LABEL_8:
    uint64_t v83 = 0;
LABEL_9:
    uint64_t v12 = v76;
    uint64_t v14 = v77;
    uint64_t v7 = v73;
    uint64_t v13 = v74;
    uint64_t v11 = v71;
    uint64_t v3 = v72;
    a1 = v70;
    goto LABEL_4;
  }
  HIDWORD(v84) = v44 & 1;
  LOBYTE(v101) = 11;
  char v47 = sub_10024F840();
  uint64_t v94 = 0;
  LODWORD(v84) = v47 & 1;
  LOBYTE(v101) = 12;
  uint64_t v89 = sub_10008A31C();
  uint64_t v90 = v48;
  uint64_t v94 = 0;
  LOBYTE(v101) = 13;
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_10008A31C();
  uint64_t v88 = v49;
  uint64_t v94 = 0;
  LOBYTE(v101) = 14;
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_10008A31C();
  uint64_t v86 = v50;
  uint64_t v94 = 0;
  sub_100019524(&qword_10030D508);
  v98[0] = 15;
  sub_1000897BC(&qword_10030D510, (void (*)(void))sub_100089578);
  swift_bridgeObjectRetain();
  uint64_t v51 = v94;
  sub_10024F800();
  uint64_t v94 = v51;
  if (v51)
  {
    uint64_t v52 = sub_10008A240();
    v53(v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v54 = v101;
  char v99 = 16;
  sub_1000895C4();
  uint64_t v83 = v54;
  swift_bridgeObjectRetain();
  uint64_t v55 = v94;
  sub_10024F800();
  uint64_t v94 = v55;
  if (v55)
  {
    uint64_t v56 = sub_10008A240();
    v57(v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v58 = sub_10008A240();
  v59(v58);
  LODWORD(v79) = v100;
  *(void *)v98 = v77;
  v98[8] = v75 & 1;
  *(void *)&v98[16] = v76;
  *(void *)&v98[24] = v128;
  uint64_t v60 = v96;
  *(void *)&v98[32] = v74;
  *(void *)&v98[40] = v97;
  *(void *)&v98[48] = v73;
  *(void *)&v98[56] = v96;
  *(void *)&v98[64] = v40;
  *(void *)&v98[72] = 0xD000000000000013;
  unint64_t v75 = 0x800000010027C170;
  *(void *)&v98[80] = 0x800000010027C170;
  *(void *)&v98[88] = v72;
  uint64_t v61 = v95;
  *(void *)&v98[96] = v95;
  *(void *)&v98[104] = v71;
  *(void *)&v98[112] = v41;
  *(void *)&v98[120] = v70;
  uint64_t v62 = v91;
  *(void *)&v98[128] = v91;
  *(void *)&v98[136] = v92;
  *(void *)&v98[144] = v42;
  v98[152] = BYTE4(v84);
  v98[153] = v84;
  *(void *)&v98[160] = v89;
  *(void *)&v98[168] = v90;
  *(void *)&v98[176] = v87;
  *(void *)&v98[184] = v88;
  *(void *)&v98[192] = v85;
  *(void *)&v98[200] = v86;
  *(void *)&v98[208] = v83;
  v98[216] = v100;
  sub_100089610((uint64_t)v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = v60;
  swift_bridgeObjectRelease();
  uint64_t v64 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = v93;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = v86;
  swift_bridgeObjectRelease();
  uint64_t v67 = v83;
  swift_bridgeObjectRelease();
  sub_10001C2EC((uint64_t)v82);
  uint64_t v101 = v77;
  char v102 = v127;
  *(_DWORD *)v103 = *(_DWORD *)v126;
  *(_DWORD *)&v103[3] = *(_DWORD *)&v126[3];
  uint64_t v104 = v76;
  uint64_t v105 = v128;
  uint64_t v106 = v74;
  uint64_t v107 = v97;
  uint64_t v108 = v73;
  uint64_t v109 = v63;
  uint64_t v110 = v64;
  unint64_t v111 = 0xD000000000000013;
  unint64_t v112 = v75;
  uint64_t v113 = v72;
  uint64_t v114 = v61;
  v115 = v71;
  uint64_t v116 = v65;
  v117 = v70;
  uint64_t v118 = v62;
  uint64_t v119 = v92;
  uint64_t v120 = v42;
  sub_10008A3D0();
  *(_DWORD *)(v68 + 154) = *(_DWORD *)(v68 + 218);
  sub_10008A2B8();
  uint64_t v122 = v66;
  uint64_t v123 = v67;
  char v124 = v79;
  sub_100089444((uint64_t)&v101);
  return memcpy(v78, v98, 0xD9uLL);
}

uint64_t sub_100089208(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F88EC(*a1, *a2);
}

Swift::Int sub_100089214()
{
  return sub_1001D34C8(*v0);
}

uint64_t sub_10008921C(uint64_t a1)
{
  return sub_1000D0798(a1, *v1);
}

Swift::Int sub_100089224(uint64_t a1)
{
  return sub_1000D2A98(a1, *v1);
}

uint64_t sub_10008922C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100087F98();
  *a1 = result;
  return result;
}

unint64_t sub_10008925C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100087FF8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100089288()
{
  return sub_10008820C(*v0);
}

uint64_t sub_100089290@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100087FEC();
  *a1 = result;
  return result;
}

uint64_t sub_1000892B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100087FF0();
  *a1 = result;
  return result;
}

uint64_t sub_1000892E0(uint64_t a1)
{
  unint64_t v2 = sub_1000893F8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008931C(uint64_t a1)
{
  unint64_t v2 = sub_1000893F8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100089358@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10008858C(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0xD9uLL);
  }
  return result;
}

uint64_t sub_1000893A4(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100088210(a1);
}

unint64_t sub_1000893F8()
{
  unint64_t result = qword_10030D4E8;
  if (!qword_10030D4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D4E8);
  }
  return result;
}

uint64_t sub_100089444(uint64_t a1)
{
  return a1;
}

unint64_t sub_10008952C()
{
  unint64_t result = qword_10030D500;
  if (!qword_10030D500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D500);
  }
  return result;
}

unint64_t sub_100089578()
{
  unint64_t result = qword_10030D518;
  if (!qword_10030D518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D518);
  }
  return result;
}

unint64_t sub_1000895C4()
{
  unint64_t result = qword_10030D520;
  if (!qword_10030D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D520);
  }
  return result;
}

uint64_t sub_100089610(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000896F4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_10030D4F0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100089770()
{
  unint64_t result = qword_10030D540;
  if (!qword_10030D540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D540);
  }
  return result;
}

uint64_t sub_1000897BC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_10030D508);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008982C()
{
  unint64_t result = qword_10030D558;
  if (!qword_10030D558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D558);
  }
  return result;
}

unint64_t sub_100089878()
{
  unint64_t result = qword_10030D568;
  if (!qword_10030D568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D568);
  }
  return result;
}

unsigned char *sub_1000898C4@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (unint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_100089930(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_100089990@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1000898C4(a1, a2);
}

void *sub_1000899AC@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Product.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v5 = v6 - 17;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Product.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100089B44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Product.CodingKeys()
{
  return &type metadata for Product.CodingKeys;
}

uint64_t destroy for Product()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Product(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Product(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(unsigned char *)(a1 + 153) = *((unsigned char *)a2 + 153);
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = a2[24];
  *(void *)(a1 + 200) = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
  return a1;
}

void *initializeWithTake for Product(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD9uLL);
}

uint64_t assignWithTake for Product(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for Product(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 217))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 80);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Product(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 216) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 217) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 217) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Product()
{
  return &type metadata for Product;
}

unint64_t sub_10008A130()
{
  unint64_t result = qword_10030D578;
  if (!qword_10030D578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D578);
  }
  return result;
}

unint64_t sub_10008A180()
{
  unint64_t result = qword_10030D580;
  if (!qword_10030D580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D580);
  }
  return result;
}

unint64_t sub_10008A1D0()
{
  unint64_t result = qword_10030D588;
  if (!qword_10030D588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D588);
  }
  return result;
}

uint64_t sub_10008A21C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_10024F8D0();
}

uint64_t sub_10008A240()
{
  return v0;
}

void sub_10008A258()
{
  v0[15] = 0;
  v0[16] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[11] = 0;
  v0[12] = 0;
  v0[22] = 0;
  v0[23] = 0;
  v0[24] = 0;
  v0[26] = 0;
  v0[27] = 0;
  v0[17] = 0;
  v0[14] = 0;
  v0[28] = 0;
  *(void *)(v1 - 72) = 0;
}

uint64_t sub_10008A2A0()
{
  return v0;
}

void sub_10008A2B8()
{
  *(_WORD *)(v0 + 614) = *(_WORD *)(v1 - 106);
  *(void *)(v0 + 616) = *(void *)(v0 + 160);
  *(void *)(v0 + 624) = *(void *)(v0 + 168);
  *(void *)(v0 + 632) = *(void *)(v0 + 144);
  *(void *)(v0 + 640) = *(void *)(v0 + 152);
  *(void *)(v0 + 648) = *(void *)(v0 + 128);
}

uint64_t sub_10008A2EC()
{
  return sub_10024F7C0();
}

void sub_10008A308()
{
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 112) = 0;
}

uint64_t sub_10008A31C()
{
  return sub_10024F7C0();
}

uint64_t sub_10008A33C()
{
  return sub_10024F910();
}

void sub_10008A368()
{
  v0[15] = 0;
  v0[16] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[11] = 0;
  v0[22] = 0;
  v0[23] = 0;
}

uint64_t sub_10008A384@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_10024F950();
}

void sub_10008A3BC()
{
  v0[15] = 0;
  v0[16] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[11] = 0;
}

void sub_10008A3D0()
{
  *(unsigned char *)(v0 + 608) = *(_DWORD *)(v0 + 124);
  *(unsigned char *)(v0 + 609) = *(_DWORD *)(v0 + 120);
}

uint64_t sub_10008A3E4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1[3] + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v8 = v1[11];
  uint64_t v9 = v1[13];
  uint64_t v13 = v1[12];
  uint64_t v14 = v1[10];
  uint64_t v10 = v1[15];
  uint64_t v12 = v1[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v3);
  uint64_t result = swift_release();
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  a1[4] = v14;
  a1[5] = v8;
  a1[6] = v13;
  a1[7] = v9;
  a1[8] = v12;
  a1[9] = v10;
  return result;
}

uint64_t sub_10008A4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_10008A5FC(a1, a2);
  if (*(void *)(v2 + 24))
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0x656D614E20707041;
  }
  swift_release();
  return v3;
}

uint64_t sub_10008A520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10008C918();
  uint64_t v5 = sub_10008C960();
  sub_10020C220(v5, v6, v7, v8, v9, v10, v11, v12, v16, v17);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_10008C918();
  sub_10020C40C(a2, a3);
  swift_endAccess();
  swift_release();
  sub_10008C918();
  uint64_t v13 = sub_10008C960();
  sub_10020C3EC(v13, v14);
  swift_endAccess();
  return swift_release();
}

BOOL sub_10008A5D8()
{
  sub_10008C90C();
  uint64_t v7 = sub_10008A698(0, v0, v1, v2, v3, v4, v5, v6);
  return EmbeddedChannel.LeftOverState.hasLeftOvers.getter(v7);
}

uint64_t sub_10008A5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BB28(a1, a2);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10008C960();
  sub_1000CAD6C(v5, v6, v2, a1);
  return v4;
}

BOOL sub_10008A674()
{
  sub_10008C90C();
  uint64_t v7 = sub_10008A698(2, v0, v1, v2, v3, v4, v5, v6);
  return EmbeddedChannel.LeftOverState.hasLeftOvers.getter(v7);
}

uint64_t sub_10008A698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == 10)
  {
    if (qword_100308D48 != -1) {
      swift_once();
    }
    return sub_1001445F4(a2, a3, a3, a4, a5, a6, a7, a8) & 1;
  }
  else
  {
    uint64_t v15 = sub_10008AA94(a1, a2, a3);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10008C960();
    sub_1000CADF0(v12, v13, v14, v8);
    return v15;
  }
}

uint64_t sub_10008A770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[0] = sub_10008B180(a1, a2, a3);
  v10[1] = v7;
  uint64_t v8 = *(void *)(v3 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000CAF10(v8, v3, a2, a3, a1, v10);
  return v10[0];
}

uint64_t sub_10008A7F0()
{
  sub_10008C90C();
  sub_10008A770(4, v0, v1);
  type metadata accessor for OctaneLocale();
  uint64_t v2 = sub_1000EFD68();
  swift_bridgeObjectRelease();
  if (v2) {
    return v2;
  }
  return swift_initStaticObject();
}

BOOL sub_10008A880()
{
  sub_10008C90C();
  uint64_t v7 = sub_10008A698(1, v0, v1, v2, v3, v4, v5, v6);
  return EmbeddedChannel.LeftOverState.hasLeftOvers.getter(v7);
}

uint64_t sub_10008A8A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v12 = a2 & 1;
  if (a3 == 10)
  {
    if (qword_100308D48 != -1) {
      swift_once();
    }
    if (v12) {
      BOOL v13 = 0;
    }
    else {
      BOOL v13 = a1 == 1;
    }
    uint64_t v14 = v13;
    return sub_10014499C(a4, a5, v14, a4, a5, a6, a7, a8);
  }
  else
  {
    uint64_t v17 = *(void *)(v8 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_1000CB018(v17, a3, v8, a1, v12, a4, a5);
  }
}

uint64_t sub_10008A988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 == 8)
  {
    sub_100057824();
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = 2;
  }
  else
  {
    uint64_t v11 = v5[3];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10008C938();
    uint64_t v6 = sub_1000CAB60(v12, v13, v14, v15, v16, v17, a3);
    if ((a3 | 2) == 6)
    {
      uint64_t v18 = sub_10008A5FC(a4, a5);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000CAD6C(v11, v18, v5, a4);
      swift_release();
    }
  }
  return v6;
}

uint64_t sub_10008AA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10008A5FC(a2, a3);
  switch(a1)
  {
    case 0:
      sub_10008C828();
      swift_release();
      char v7 = sub_10009310C();
      goto LABEL_16;
    case 1:
      sub_10008C828();
      swift_release();
      char v7 = sub_100093114();
      goto LABEL_16;
    case 2:
      sub_10008C828();
      swift_release();
      char v7 = sub_10009312C();
      goto LABEL_16;
    case 3:
    case 16:
      sub_10008C828();
      uint64_t v6 = 1;
      goto LABEL_44;
    case 5:
      sub_10008C8F4();
      sub_100093788(1);
      sub_10008C840();
      if (v3) {
        goto LABEL_48;
      }
      unsigned __int8 v8 = sub_1002043F0(a1);
      swift_release();
      if (v8 == 5) {
        return 0;
      }
      else {
        return v8;
      }
    case 7:
      sub_10008C828();
      swift_release();
      uint64_t v10 = sub_1000939D0();
      swift_release();
      return v10;
    case 11:
      sub_10008C828();
      swift_release();
      char v7 = sub_10009311C();
      goto LABEL_16;
    case 12:
      sub_10008C828();
      swift_release();
      char v7 = sub_100093124();
LABEL_16:
      char v12 = v7;
      swift_release();
      return v12 & 1;
    case 13:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(0);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 0;
      goto LABEL_41;
    case 14:
      sub_10008C828();
      uint64_t v6 = 0;
      goto LABEL_44;
    case 15:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(1);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 1;
      goto LABEL_41;
    case 17:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(2);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 2;
      goto LABEL_41;
    case 18:
      sub_10008C828();
      uint64_t v6 = 2;
      goto LABEL_44;
    case 19:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(3);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 3;
      goto LABEL_41;
    case 20:
      sub_10008C828();
      uint64_t v6 = 3;
      goto LABEL_44;
    case 21:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(4);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 4;
      goto LABEL_41;
    case 22:
      sub_10008C828();
      uint64_t v6 = 4;
      goto LABEL_44;
    case 23:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(5);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 5;
      goto LABEL_41;
    case 24:
      sub_10008C828();
      uint64_t v6 = 5;
      goto LABEL_44;
    case 25:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(6);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 6;
      goto LABEL_41;
    case 26:
      sub_10008C828();
      uint64_t v6 = 6;
      goto LABEL_44;
    case 27:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(7);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 7;
      goto LABEL_41;
    case 28:
      sub_10008C828();
      uint64_t v6 = 7;
      goto LABEL_44;
    case 29:
      sub_10008C8F4();
      uint64_t v5 = a1;
      sub_100093788(8);
      sub_10008C840();
      if ((v3 & 1) == 0) {
        goto LABEL_3;
      }
      sub_10008C828();
      uint64_t v13 = 8;
LABEL_41:
      uint64_t v14 = sub_10009388C(v13);
      swift_release();
      swift_release();
      return v14;
    case 30:
      sub_10008C828();
      uint64_t v6 = 8;
LABEL_44:
      sub_1000931C0(v6, (uint64_t)v16);
      sub_10008C6C8((uint64_t)v16, (uint64_t)v17);
      if (v18)
      {
        char v15 = v19;
        sub_10008C730(v16);
        swift_release();
        swift_release();
        if (v15) {
          return 1;
        }
      }
      else
      {
        swift_release();
LABEL_48:
        swift_release();
      }
      return 0;
    case 32:
      goto LABEL_48;
    default:
      uint64_t v5 = sub_10024D950();
LABEL_3:
      swift_release();
      return v5;
  }
}

uint64_t sub_10008AEB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 >= 9)
  {
    type metadata accessor for ASOctaneSimulatedErrorCategory(0);
    uint64_t result = sub_10024FB20();
    __break(1u);
  }
  else
  {
    uint64_t result = sub_10008A698(2 * a1 + 14, a2, a3, a4, a5, a6, a7, a8);
    if (result)
    {
      uint64_t v12 = sub_10014AE54(a1);
      return sub_10008A698(v12, a2, a3, v13, v14, v15, v16, v17);
    }
  }
  return result;
}

uint64_t sub_10008AF50(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10014AE04(a3);
  if (a2)
  {
    uint64_t v14 = 0;
  }
  else
  {
    sub_10008A8A4(1, 0, v10, a4, a5, v11, v12, v13);
    uint64_t v10 = sub_10014AE54(a3);
    uint64_t v14 = a1;
  }
  return sub_10008A8A4(v14, 0, v10, a4, a5, v11, v12, v13);
}

uint64_t sub_10008AFE8()
{
  sub_10008C90C();
  unsigned __int8 v8 = v7;
  uint64_t v11 = sub_10008A770(6, v9, v10);
  uint64_t v13 = v12;
  uint64_t v23 = v12;
  if (qword_100308D78 != -1)
  {
    uint64_t v19 = v11;
    swift_once();
    uint64_t v11 = v19;
    uint64_t v13 = v23;
  }
  uint64_t v14 = 4281173;
  uint64_t v15 = *(void *)(qword_10034C0A0 + 16);
  if (v15)
  {
    uint64_t v20 = v8;
    uint64_t v16 = (uint64_t *)(qword_10034C0A0 + 56);
    while (1)
    {
      uint64_t v14 = *(v16 - 3);
      uint64_t v4 = *(v16 - 2);
      uint64_t v2 = *v16;
      uint64_t v24 = *(v16 - 1);
      uint64_t v6 = v16[2];
      uint64_t v5 = v16[4];
      uint64_t v21 = v16[3];
      uint64_t v22 = v16[1];
      uint64_t v1 = v16[5];
      uint64_t v0 = v16[6];
      if (v14 == v11 && v4 == v13) {
        break;
      }
      uint64_t v3 = v11;
      if (sub_10024FA60()) {
        goto LABEL_14;
      }
      v16 += 10;
      --v15;
      uint64_t v13 = v23;
      uint64_t v11 = v3;
      if (!v15)
      {
        uint64_t v14 = 4281173;
        sub_10008C8A8();
        unsigned __int8 v8 = v20;
        goto LABEL_15;
      }
    }
    uint64_t v14 = v11;
    uint64_t v4 = v13;
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v6;
    uint64_t v6 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = v0;
    swift_bridgeObjectRetain();
    unsigned __int8 v8 = v20;
    uint64_t v3 = v21;
    uint64_t v0 = v22;
  }
  else
  {
    sub_10008C8A8();
  }
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease();
  *unsigned __int8 v8 = v14;
  v8[1] = v4;
  v8[2] = v24;
  v8[3] = v6;
  v8[4] = v0;
  v8[5] = v15;
  v8[6] = v3;
  v8[7] = v5;
  v8[8] = v1;
  v8[9] = v2;
  return result;
}

uint64_t sub_10008B180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10008A5FC(a2, a3);
  switch(a1)
  {
    case 4:
      sub_100093134();
      type metadata accessor for OctaneLocale();
      uint64_t v6 = sub_1000EFD68();
      swift_bridgeObjectRelease();
      swift_release();
      if (v6)
      {
        uint64_t v4 = *(void *)(v6 + 16);
        swift_bridgeObjectRetain();
        swift_release();
      }
      else
      {
        uint64_t v4 = *(void *)aEnUs;
        swift_bridgeObjectRetain();
      }
      break;
    case 6:
      uint64_t v7 = sub_10009317C();
      uint64_t v9 = v8;
      uint64_t v15 = v8;
      if (qword_100308D78 != -1)
      {
        swift_once();
        uint64_t v9 = v15;
      }
      uint64_t v10 = *(void *)(qword_10034C0A0 + 16);
      if (v10)
      {
        uint64_t v11 = qword_10034C0A0 + 56;
        while (1)
        {
          uint64_t v4 = *(void *)(v11 - 24);
          if (v4 == v7 && *(void *)(v11 - 16) == v9) {
            break;
          }
          if (sub_10024FA60()) {
            goto LABEL_24;
          }
          v11 += 80;
          --v10;
          uint64_t v9 = v15;
          if (!v10) {
            goto LABEL_16;
          }
        }
        uint64_t v4 = v7;
LABEL_24:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_16:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v4 = 4281173;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 8:
      if (qword_100308D80 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_10018B5F0();
      uint64_t v14 = v13;
      swift_release();
      if (!v14) {
        uint64_t v4 = 0;
      }
      break;
    default:
      swift_release();
      uint64_t v4 = 0;
      break;
  }
  return v4;
}

uint64_t sub_10008B4BC()
{
  sub_10008C90C();
  unint64_t v7 = sub_10008A698(7, v0, v1, v2, v3, v4, v5, v6);
  LODWORD(result) = sub_1001EFA5C(v7);
  if (result <= 0xF7u) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t sub_10008B4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10008C938();
  sub_1000CB190(v8, v9, v10, v11, v12, v13, v14);
  uint64_t v15 = sub_10008A5FC(a3, a4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000CAD6C(v7, v15, v4, a3);
  swift_release();
  return 0;
}

uint64_t sub_10008B5AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unsigned char *a6)
{
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10008C960();
  sub_100161540(v12, v13, v11);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v26 = a6;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10024E1F0();
    sub_10001B0E8(v16, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_10024E1D0();
    os_log_type_t v18 = sub_10024EE30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136380931;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1000F3F3C(a4, a5, v28);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1000F3F3C(a2, a3, v28);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Updated configuration file at %{private}s for \"%s\"", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    *uint64_t v26 = 1;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10024E1F0();
    sub_10001B0E8(v20, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_10024E1D0();
    os_log_type_t v22 = sub_10024EE30();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t type = v22;
      uint64_t v23 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315395;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1000F3F3C(a2, a3, v28);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1000F3F3C(a4, a5, v28);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, type, "\"%s\" is using StoreKit Testing in Xcode.\nConfiguration at: %{private}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10020C758(a4, a5, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10020C40C(a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10008BA8C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  uint64_t v2 = *(void *)(v0 + 136);
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

BOOL sub_10008BAE0()
{
  sub_10008C90C();
  uint64_t v7 = sub_10008A698(12, v0, v1, v2, v3, v4, v5, v6);
  return EmbeddedChannel.LeftOverState.hasLeftOvers.getter(v7);
}

BOOL sub_10008BB04()
{
  sub_10008C90C();
  uint64_t v7 = sub_10008A698(11, v0, v1, v2, v3, v4, v5, v6);
  return EmbeddedChannel.LeftOverState.hasLeftOvers.getter(v7);
}

uint64_t sub_10008BB28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000CA934(v5, v2);
  if (v6)
  {
    uint64_t v7 = v6;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10024E1F0();
    sub_10001B0E8(v8, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_10024E1D0();
    os_log_type_t v10 = sub_10024EE00();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (_DWORD *)swift_slowAlloc();
      swift_slowAlloc();
      *uint64_t v11 = 136315138;
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_10008C96C(v12, v13, v14, v15, v16, v17);
      sub_10008C9C8();
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      sub_10008C988((void *)&_mh_execute_header, v18, v19, "Using cached configuration for %s");
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_10008C0D8();
    if (v20)
    {
      type metadata accessor for OctaneConfiguration();
      uint64_t v7 = sub_1000FCB98();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000CACB4(v5, v2, a1, a2);
    }
    else
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_10024E1F0();
      sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
      swift_bridgeObjectRetain_n();
      os_log_type_t v22 = sub_10024E1D0();
      os_log_type_t v23 = sub_10024EE10();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (_DWORD *)swift_slowAlloc();
        swift_slowAlloc();
        *uint64_t v24 = 136315138;
        uint64_t v25 = swift_bridgeObjectRetain();
        sub_10008C96C(v25, v26, v27, v28, v29, v30);
        sub_10008C9C8();
        sub_10024F100();
        swift_bridgeObjectRelease_n();
        sub_10008C988((void *)&_mh_execute_header, v31, v32, "Tried to get configuration file for \"%s\" but the app is not using StoreKit Testing in Xcode.");
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      type metadata accessor for OctaneConfiguration();
      swift_allocObject();
      return sub_1000FCDDC();
    }
  }
  return v7;
}

uint64_t sub_10008C0D8()
{
  return sub_1000CAA04();
}

uint64_t sub_10008C150(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v40 = sub_10009317C();
  uint64_t v41 = v8;
  uint64_t v9 = sub_100093134();
  uint64_t v11 = v10;
  swift_beginAccess();
  uint64_t v12 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100161610(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_beginAccess();
    uint64_t v14 = sub_1001617B8(6, *(void *)(v13 + 24));
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = v15;
      swift_bridgeObjectRelease();
      uint64_t v40 = v16;
      uint64_t v41 = v17;
    }
    uint64_t v12 = sub_1001617B8(4, *(void *)(v13 + 24));
    uint64_t v19 = v18;
    swift_release();
    if (v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v12;
      uint64_t v11 = v19;
    }
  }
  if (v40 != a2[6] || v41 != a2[7])
  {
    char v21 = sub_10024FA60();
    uint64_t v22 = v40;
    uint64_t v23 = v41;
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v24 = a2[16];
  BOOL v25 = v9 == *(void *)(v24 + 16) && v11 == *(void *)(v24 + 24);
  if (v25 || (v26 = sub_10024FA60(), v22 = v40, uint64_t v23 = v41, (v26 & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_17:
    uint64_t v36 = a2;
    if (qword_100308D78 != -1)
    {
      swift_once();
      uint64_t v22 = v40;
      uint64_t v23 = v41;
    }
    uint64_t v27 = *(void *)(qword_10034C0A0 + 16);
    if (v27)
    {
      uint64_t v3 = (void *)(qword_10034C0A0 + 56);
      while (1)
      {
        uint64_t v28 = *(v3 - 3);
        uint64_t v11 = *(v3 - 2);
        uint64_t v5 = (void *)*v3;
        uint64_t v13 = v3[2];
        uint64_t v38 = (void *)v3[1];
        uint64_t v39 = *(v3 - 1);
        uint64_t v29 = v3[4];
        uint64_t v37 = v3[3];
        uint64_t v4 = v3[5];
        uint64_t v12 = v3[6];
        if (v28 == v22 && v11 == v23) {
          break;
        }
        uint64_t v23 = v41;
        if (sub_10024FA60()) {
          goto LABEL_30;
        }
        v3 += 10;
        --v27;
        uint64_t v22 = v40;
        if (!v27)
        {
          uint64_t v31 = 4281173;
          sub_10008C85C();
          goto LABEL_31;
        }
      }
      uint64_t v28 = v22;
      uint64_t v11 = v23;
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v3 = v5;
      swift_bridgeObjectRetain();
      uint64_t v34 = v13;
      swift_bridgeObjectRetain();
      uint64_t v35 = v29;
      swift_bridgeObjectRetain();
      uint64_t v13 = v12;
      swift_bridgeObjectRetain();
      uint64_t v31 = v28;
      uint64_t v12 = v37;
      uint64_t v5 = v38;
    }
    else
    {
      sub_10008C85C();
      uint64_t v31 = 4281173;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    v36[6] = v31;
    v36[7] = v11;
    v36[8] = v39;
    v36[9] = v3;
    v36[10] = v5;
    v36[11] = v34;
    v36[12] = v12;
    v36[13] = v35;
    v36[14] = v4;
    v36[15] = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for OctaneLocale();
    uint64_t inited = sub_1000EFD68();
    if (!inited) {
      uint64_t inited = swift_initStaticObject();
    }
    v36[16] = inited;
    swift_release();
    if (qword_100308D48 != -1) {
      swift_once();
    }
    sub_100142B3C();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008C504()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_10008C594()
{
  sub_10008C504();
  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t type metadata accessor for OctaneConfigurationManager()
{
  return self;
}

uint64_t sub_10008C5EC()
{
  *(void *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  type metadata accessor for UnfairLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = 0;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 40) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 48) = 4281173;
  *(void *)(v0 + 56) = 0xE300000000000000;
  *(void *)(v0 + 64) = 4477781;
  *(void *)(v0 + 72) = 0xE300000000000000;
  *(void *)(v0 + 80) = 0x313434333431;
  *(void *)(v0 + 88) = 0xE600000000000000;
  *(void *)(v0 + 96) = 21333;
  *(void *)(v0 + 104) = 0xE200000000000000;
  strcpy((char *)(v0 + 112), "United States");
  *(_WORD *)(v0 + 126) = -4864;
  type metadata accessor for OctaneLocale();
  *(void *)(v0 + 128) = swift_initStaticObject();
  *(void *)(v0 + 136) = 0;
  return v0;
}

uint64_t sub_10008C6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030D7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10008C730(uint64_t *a1)
{
  return a1;
}

void sub_10008C76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008C7E4(a4, a5);
  }
}

uint64_t sub_10008C7E4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10008C828()
{
  return swift_retain();
}

uint64_t sub_10008C840()
{
  return swift_release();
}

uint64_t sub_10008C8F4()
{
  return swift_retain();
}

uint64_t sub_10008C918()
{
  return swift_beginAccess();
}

uint64_t sub_10008C938()
{
  return v0;
}

BOOL EmbeddedChannel.LeftOverState.hasLeftOvers.getter(uint64_t a1)
{
  return a1 != 0;
}

uint64_t sub_10008C960()
{
  return v0;
}

uint64_t sub_10008C96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1000F3F3C(v7, v6, (uint64_t *)va);
}

void sub_10008C988(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10008C9A8()
{
  return sub_10024F100();
}

void ByteBuffer.writeBuffer(_:)()
{
  sub_10008EFBC();
  uint64_t v2 = v1;
  uint64_t v3 = *(unsigned int *)(v1 + 8);
  unsigned int v4 = *(_DWORD *)(v1 + 12);
  uint64_t v5 = *(unsigned __int16 *)(v1 + 20);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 22);
  Swift::UInt32 v7 = *(_DWORD *)(v0 + 12);
  uint64_t v8 = (void *)(*(void *)v1 + 24);
  sub_10006FF20();
  if (v4 < v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v9 = *v8 + (v6 | (v5 << 8)) + v3;
  ByteBuffer._setBytes(_:at:)(v9, v9 + v4 - v3, v7);
  sub_10008F0E8();
  if (v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 12) = v11;
  if (!__CFADD__(v3, v10))
  {
    *(_DWORD *)(v2 + 8) = v3 + v10;
    sub_10002FD30();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t ByteBuffer.init()()
{
  if (qword_100308D08 != -1) {
    swift_once();
  }
  return swift_retain();
}

void ByteBuffer.writeBytes<A>(_:)(uint64_t a1, uint64_t a2)
{
  ByteBuffer.setBytes<A>(_:at:)(a1, *(_DWORD *)(v2 + 12), a2);
  sub_10008F0E8();
  if (v4) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v2 + 12) = v3;
  }
}

Swift::OpaquePointer_optional __swiftcall ByteBuffer.getBytes(at:length:)(Swift::Int at, Swift::Int length)
{
  sub_10008F144();
  int64_t v5 = (int64_t)v2 - v4;
  if (__OFSUB__(v2, v4))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v2 = 0;
  if (v5 < 0 || v3 < 0) {
    goto LABEL_9;
  }
  if (HIDWORD(v4) < v4) {
    goto LABEL_11;
  }
  if ((HIDWORD(v4) - v4) - v3 >= v5)
  {
    if (!__OFADD__(v5, v3))
    {
      if (v5 + v3 >= v5)
      {
        sub_10006FF20();
        uint64_t v6 = sub_10008F05C();
        sub_100019688(v6, v7);
        goto LABEL_9;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  sub_10008F0D4();
LABEL_14:
  result.is_nil = v3;
  result.value._rawValue = v2;
  return result;
}

Swift::OpaquePointer_optional __swiftcall ByteBuffer.readBytes(length:)(Swift::Int length)
{
  int v2 = length;
  unsigned int v3 = *(_DWORD *)(v1 + 8);
  Swift::OpaquePointer_optional result = ByteBuffer.getBytes(at:length:)(v3, length);
  if (result.value._rawValue)
  {
    if (__CFADD__(v3, v2)) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 8) = v3 + v2;
    }
  }
  return result;
}

void ByteBuffer.writeStaticString(_:)(uint64_t a1, uint64_t a2, char a3)
{
  ByteBuffer.setStaticString(_:at:)(a1, a2, a3, *(_DWORD *)(v3 + 12));
  sub_10008F0E8();
  if (v5) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v3 + 12) = v4;
  }
}

uint64_t ByteBuffer.setStaticString(_:at:)(uint64_t result, uint64_t a2, char a3, Swift::UInt32 a4)
{
  if (a3)
  {
    __break(1u);
  }
  else if (result)
  {
    return ByteBuffer._setBytes(_:at:)(result, result + a2, a4);
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall ByteBuffer.writeString(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  Swift::Int v4 = *(unsigned int *)(v1 + 12);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10008F270();
  int v7 = sub_10008CF78(v5, v6, v1, v4);
  char v9 = v8;
  Swift::Int result = swift_bridgeObjectRelease();
  if (v9)
  {
    v11._uint64_t countAndFlagsBits = countAndFlagsBits;
    v11._object = object;
    Swift::Int result = ByteBuffer._setStringSlowpath(_:at:)(v11, v4);
    int v7 = result;
  }
  int v12 = *(_DWORD *)(v1 + 12);
  BOOL v13 = __CFADD__(v12, v7);
  int v14 = v12 + v7;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 12) = v14;
    sub_10008F248();
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer.setString(_:at:)(Swift::String _, Swift::Int at)
{
  Swift::UInt32 v3 = at;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  swift_bridgeObjectRetain();
  sub_10008CF78(countAndFlagsBits, (unint64_t)object, v2, v3);
  char v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_10008F248();
    return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v9, v11);
  }
  else
  {
    sub_10008F248();
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer._setStringSlowpath(_:at:)(Swift::String _, Swift::Int at)
{
  Swift::UInt32 v3 = at;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  swift_bridgeObjectRetain();
  Swift::Int v6 = sub_10008CF78(countAndFlagsBits, (unint64_t)object, v2, v3);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10008CE94(countAndFlagsBits, (unint64_t)object, v2, v3);
    if ((v9 & 0x100000000) != 0) {
      sub_10006D554(countAndFlagsBits, (unint64_t)object, v3);
    }
    unsigned int v10 = v9;
    swift_bridgeObjectRelease();
    return v10;
  }
  return v6;
}

uint64_t sub_10008CE94(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = 0;
    return v11 | (((a2 >> 60) & 1) << 32);
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v12[0] = a1;
    v12[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = ByteBuffer._setBytes(_:at:)((uint64_t)v12, (uint64_t)v12 + (HIBYTE(a2) & 0xF), a4);
    return v11 | (((a2 >> 60) & 1) << 32);
  }
  if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v8 = sub_10024F3E0();
  }
  uint64_t result = sub_10006E0E0(v8, v9, a4, &v13);
  if (!v4)
  {
    unsigned int v11 = v13;
    return v11 | (((a2 >> 60) & 1) << 32);
  }
  return result;
}

uint64_t sub_10008CF60(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  return sub_10008CF78(a1, a2, a3, a4);
}

uint64_t sub_10008CF78(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  if ((a2 & 0x1000000000000000) != 0) {
    return 0;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v11[0] = a1;
    v11[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    LODWORD(result) = ByteBuffer._setBytes(_:at:)((uint64_t)v11, (uint64_t)v11 + (HIBYTE(a2) & 0xF), a4);
    return result;
  }
  if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = sub_10024F3E0();
  }
  if (v7) {
    uint64_t v9 = v7 + v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t result = ByteBuffer._setBytes(_:at:)(v7, v9, a4);
  if (!v4) {
    return result;
  }
  return result;
}

Swift::String_optional __swiftcall ByteBuffer.getString(at:length:)(Swift::Int at, Swift::Int length)
{
  sub_10008F144();
  int64_t v5 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v2 = 0;
  if (v5 < 0 || v3 < 0) {
    goto LABEL_11;
  }
  if (HIDWORD(v4) < v4) {
    goto LABEL_13;
  }
  if ((HIDWORD(v4) - v4) - v3 < v5) {
    goto LABEL_11;
  }
  if (__OFADD__(v5, v3)) {
    goto LABEL_14;
  }
  if (v5 + v3 < v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10006FF20();
  sub_10008F05C();
  sub_10024E760();
LABEL_11:
  sub_10008F0D4();
LABEL_16:
  result.value._object = (void *)v3;
  result.value._uint64_t countAndFlagsBits = v2;
  return result;
}

Swift::String_optional __swiftcall ByteBuffer.readString(length:)(Swift::Int length)
{
  sub_10008F144();
  if ((v2 & 0x8000000000000000) == 0)
  {
    unsigned int v5 = *(_DWORD *)(v1 + 8);
    unsigned int v4 = *(_DWORD *)(v1 + 12);
    BOOL v6 = v4 >= v5;
    unint64_t v7 = v4 - v5;
    if (!v6)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
    int v8 = v2;
    if (v7 >= v2)
    {
      sub_10006FF20();
      swift_retain();
      sub_10024E760();
      unint64_t v2 = swift_release();
      if (__CFADD__(v5, v8)) {
        goto LABEL_9;
      }
      *(_DWORD *)(v1 + 8) = v5 + v8;
    }
  }
  sub_10008F0D4();
LABEL_10:
  result.value._object = v3;
  result.value._uint64_t countAndFlagsBits = v2;
  return result;
}

void ByteBuffer.writeSubstring(_:)()
{
  Swift::Int v1 = *(unsigned int *)(v0 + 12);
  uint64_t v2 = sub_10024E740();
  unsigned int v4 = (void *)v3;
  int v5 = sub_10008CF78(v2, v3, v0, v1);
  if (v6)
  {
    v7._uint64_t countAndFlagsBits = v2;
    v7._object = v4;
    int v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v1);
  }
  int v8 = v5;
  swift_bridgeObjectRelease();
  int v9 = *(_DWORD *)(v0 + 12);
  BOOL v10 = __CFADD__(v9, v8);
  int v11 = v9 + v8;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 12) = v11;
    sub_10008F248();
  }
}

void ByteBuffer.setSubstring(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5)
{
  uint64_t v7 = sub_10024E740();
  int v9 = (void *)v8;
  sub_10008CF78(v7, v8, v5, a5);
  if (v10)
  {
    v11._uint64_t countAndFlagsBits = v7;
    v11._object = v9;
    ByteBuffer._setStringSlowpath(_:at:)(v11, a5);
  }
  swift_bridgeObjectRelease();
  sub_10008F248();
}

void ByteBuffer.writeDispatchData(_:)()
{
  ByteBuffer.setDispatchData(_:at:)();
  sub_10008F0E8();
  if (v2) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v0 + 12) = v1;
  }
}

void ByteBuffer.setDispatchData(_:at:)()
{
  sub_10008EFBC();
  unint64_t v2 = v1;
  uint64_t v3 = sub_10024E2F0();
  unint64_t v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_13;
  }
  ByteBuffer.reserveCapacity(_:)(v2 + v3);
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  unsigned int v5 = *(_DWORD *)(v0 + 16);
  int v6 = *(unsigned __int16 *)(v0 + 20);
  int v7 = *(unsigned __int8 *)(v0 + 22);
  sub_10006FF20();
  unsigned int v8 = v7 | (v6 << 8);
  unint64_t v9 = v5 - v8;
  if (v5 < v8)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((uint64_t)v4 < (uint64_t)v2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  BOOL v10 = __OFSUB__(v4, v2);
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
  if (v9 < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v4 > v9)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!v10)
  {
    sub_10024E300();
    sub_10002FD30();
    return;
  }
LABEL_18:
  __break(1u);
}

void ByteBuffer.getDispatchData(at:length:)()
{
  sub_10008F144();
  int64_t v4 = v3 - v1;
  if (__OFSUB__(v3, v1))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = v2;
  if ((v4 & 0x8000000000000000) == 0 && (v0 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v1) >= v1)
    {
      if ((HIDWORD(v1) - v1) - v0 < v4) {
        goto LABEL_6;
      }
      if (!__OFADD__(v4, v0))
      {
        if (v4 + v0 >= v4)
        {
          sub_10006FF20();
          sub_10024E2E0();
          uint64_t v11 = sub_10024E310();
          sub_1000195B4(v5, 0, 1, v11);
          sub_10008F0D4();
          return;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      return;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_6:
  sub_10024E310();
  sub_10008F0D4();
  sub_1000195B4(v6, v7, v8, v9);
}

uint64_t ByteBuffer.readDispatchData(length:)@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_10030D7E8);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  sub_10008F20C();
  int v13 = *(_DWORD *)(v2 + 8);
  swift_retain();
  ByteBuffer.getDispatchData(at:length:)();
  swift_release();
  sub_10008EE88((uint64_t)v12, (uint64_t)v9);
  uint64_t v14 = sub_10024E310();
  if (sub_10001FA0C((uint64_t)v9, 1, v14) == 1)
  {
    uint64_t v15 = a2;
    uint64_t v16 = 1;
LABEL_5:
    sub_1000195B4(v15, v16, 1, v14);
    return sub_10008EEF0((uint64_t)v12);
  }
  sub_10007A8C4();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v9, v14);
  if (!__CFADD__(v13, a1))
  {
    *(_DWORD *)(v2 + 8) = v13 + a1;
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.readWithUnsafeReadableBytes(_:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v4 = *(unsigned int *)(v1 + 8);
  unsigned int v5 = *(_DWORD *)(v1 + 12);
  uint64_t v6 = *(unsigned __int16 *)(v1 + 20);
  uint64_t v7 = *(unsigned __int8 *)(v1 + 22);
  uint64_t v8 = (void *)(*(void *)v1 + 24);
  uint64_t result = swift_beginAccess();
  if (v5 < v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = *v8 + (v7 | (v6 << 8)) + v4;
  uint64_t result = a1(v10, v10 + v5 - v4);
  if (v2) {
    return result;
  }
  if (__CFADD__(v4, result))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_DWORD *)(v1 + 8) = v4 + result;
  return result;
}

void ByteBuffer.readWithUnsafeReadableBytes<A>(_:)()
{
  sub_10008F234();
  swift_getTupleTypeMetadata2();
  sub_10007A8C4();
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (int *)&v15[-v7];
  uint64_t v16 = v0;
  uint64_t v17 = v4;
  uint64_t v18 = v3;
  ByteBuffer.withUnsafeReadableBytes<A>(_:)();
  if (!v2)
  {
    int v9 = *v8;
    sub_10007A8C4();
    uint64_t v10 = sub_10008F25C();
    v11(v10);
    int v12 = *(_DWORD *)(v1 + 8);
    BOOL v13 = __CFADD__(v12, v9);
    int v14 = v12 + v9;
    if (v13) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 8) = v14;
    }
  }
}

void ByteBuffer.readWithUnsafeMutableReadableBytes(_:)()
{
  sub_10006E2DC();
  if (!v1)
  {
    int v3 = *(_DWORD *)(v0 + 8);
    BOOL v4 = __CFADD__(v3, v2);
    int v5 = v3 + v2;
    if (v4) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v0 + 8) = v5;
    }
  }
}

uint64_t ByteBuffer.readWithUnsafeMutableReadableBytes<A>(_:)()
{
  sub_10008F234();
  swift_getTupleTypeMetadata2();
  sub_10007A8C4();
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (int *)&v16[-v7];
  uint64_t v17 = v0;
  uint64_t v18 = v4;
  uint64_t v19 = v3;
  uint64_t result = ByteBuffer.withUnsafeMutableReadableBytes<A>(_:)();
  if (!v2)
  {
    int v10 = *v8;
    sub_10007A8C4();
    uint64_t v11 = sub_10008F25C();
    uint64_t result = v12(v11);
    int v13 = *(_DWORD *)(v1 + 8);
    BOOL v14 = __CFADD__(v13, v10);
    int v15 = v13 + v10;
    if (v14) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 8) = v15;
    }
  }
  return result;
}

uint64_t sub_10008D994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a3((char *)a4 + *(int *)(TupleTypeMetadata2 + 48), a1, a2);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void ByteBuffer.set(buffer:at:)()
{
  sub_10008F144();
  unsigned int v1 = v0;
  unint64_t v2 = HIDWORD(v0);
  sub_10008EFD4();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    sub_10008F02C(v2 - v1);
    sub_10008F0D4();
  }
}

void ByteBuffer.writeBytes(_:)(uint64_t a1, uint64_t a2)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v2 + 12));
  sub_10008F0E8();
  if (v4) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v2 + 12) = v3;
  }
}

Swift::Int __swiftcall ByteBuffer.writeRepeatingByte(_:count:)(Swift::UInt8 _, Swift::Int count)
{
  Swift::Int result = ByteBuffer.setRepeatingByte(_:count:at:)(_, count, *(unsigned int *)(v2 + 12));
  int v5 = *(_DWORD *)(v2 + 12);
  BOOL v6 = __CFADD__(v5, count);
  int v7 = v5 + count;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 12) = v7;
    return count;
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer.setRepeatingByte(_:count:at:)(Swift::UInt8 _, Swift::Int count, Swift::Int at)
{
  sub_10008EFBC();
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  uint64_t v8 = v6 + v5;
  if (__OFADD__(v6, v5))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  int v9 = result;
  ByteBuffer.reserveCapacity(_:)(v6 + v5);
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  uint64_t v10 = *(unsigned __int16 *)(v3 + 20);
  uint64_t v11 = *(unsigned __int8 *)(v3 + 22);
  int v12 = (void *)(*(void *)v3 + 24);
  Swift::Int result = sub_10006FF20();
  if (v8 < v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 - v7 < 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (v8 != v7) {
    memset((void *)(*v12 + (v11 | (v10 << 8)) + v7), v9, v8 - v7);
  }
  sub_10002FD30();
  return result;
}

unsigned char *sub_10008DB90(unsigned char *__c, unsigned char *__b, unsigned char *a3)
{
  if (!__b) {
    return __b;
  }
  if (a3 - __b >= 0)
  {
    if (a3 != __b) {
      memset(__b, (int)__c, a3 - __b);
    }
    return __b;
  }
  __break(1u);
  return __c;
}

uint64_t ByteBuffer.slice()(uint64_t result, unint64_t a2, uint64_t a3)
{
  BOOL v4 = HIDWORD(a2) >= a2;
  uint64_t v5 = (HIDWORD(a2) - a2);
  if (v4)
  {
    Swift::Int result = ByteBuffer.getSlice(at:length:)(a2, v5, result, a2, a3 & 0xFFFFFFFFFFFFFFLL);
    if (result) {
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.readSlice(length:)(uint64_t a1)
{
  sub_10008F20C();
  uint64_t v4 = *(unsigned int *)(v1 + 8);
  unint64_t v6 = v4 | (v5 << 32);
  uint64_t v10 = v7 | (v8 << 32) | (v9 << 48);
  swift_retain();
  uint64_t v11 = ByteBuffer.getSlice(at:length:)(v4, a1, v2, v6, v10);
  uint64_t result = swift_release();
  if (!v11) {
    return v11;
  }
  if (!__CFADD__(v4, a1))
  {
    *(_DWORD *)(v1 + 8) = v4 + a1;
    return v11;
  }
  __break(1u);
  return result;
}

void ByteBuffer.writeImmutableBuffer(_:)()
{
  sub_10008F144();
  unint64_t v3 = v2;
  unsigned int v5 = v4;
  unint64_t v6 = HIDWORD(v4);
  Swift::UInt32 v7 = *(_DWORD *)(v0 + 12);
  sub_10008EFD4();
  if (v6 < v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = *v1 + ((v3 >> 24) & 0xFFFF00 | BYTE6(v3)) + v5;
    ByteBuffer._setBytes(_:at:)(v8, v8 + v6 - v5, v7);
    sub_10008F0E8();
    if (!v10)
    {
      *(_DWORD *)(v0 + 12) = v9;
      sub_10008F0D4();
      return;
    }
  }
  __break(1u);
}

uint64_t ByteBuffer.init(string:)()
{
  ByteBufferAllocator.buffer(string:)();
  sub_10008F1EC();
  return v0;
}

#error "10008DEF8: call analysis failed (funcsize=86)"

uint64_t ByteBuffer.init(substring:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  ByteBufferAllocator.buffer(substring:)(a1, a2, a3, a4, (uint64_t (*)(void))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free);
  sub_10008F1EC();
  return v4;
}

uint64_t ByteBufferAllocator.buffer(substring:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7)
{
  uint64_t v10 = sub_10006C998(a1, a2, a3, a4);
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  int v11 = v10;
  if (!v10)
  {
    if (qword_100308D08 != -1) {
      goto LABEL_12;
    }
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v12 = sub_10008F110(v11, a5, a6, a7);
  int v13 = 0;
  Swift::UInt32 v14 = 0;
  __int16 v15 = 0;
  char v16 = 0;
  int v17 = *(_DWORD *)(v12 + 16);
  while (1)
  {
    uint64_t v34 = v12;
    int v35 = v13;
    Swift::UInt32 v36 = v14;
    int v37 = v17;
    __int16 v38 = v15;
    char v39 = v16;
    uint64_t v18 = sub_10024E740();
    int v20 = sub_10008CF78(v18, v19, (uint64_t)&v34, v14);
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = sub_10008F270();
      int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v14);
    }
    int v23 = v20;
    uint64_t v24 = swift_bridgeObjectRelease();
    if (!__CFADD__(v36, v23)) {
      break;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    swift_once();
LABEL_5:
    int v13 = qword_10034C038;
    Swift::UInt32 v14 = HIDWORD(qword_10034C038);
    int v17 = dword_10034C040;
    __int16 v15 = word_10034C044;
    char v16 = byte_10034C046;
    uint64_t v12 = swift_retain();
  }
  return sub_10008EF98(v24, v25, v26, v27, v28, v29, v30, v31, v33, v34);
}

uint64_t ByteBuffer.init(staticString:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ByteBufferAllocator.buffer(staticString:)(a1, a2, a3, j_j__malloc, j_j__realloc, j_j__free, sub_10006C3B4);
}

#error "10008E264: call analysis failed (funcsize=70)"

uint64_t ByteBuffer.init<A>(bytes:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = ByteBufferAllocator.buffer<A>(bytes:)(a1, (uint64_t (*)(void))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_10006C3B4, a2);
  sub_10007A8C4();
  uint64_t v3 = sub_10008F27C();
  v4(v3);
  return v2;
}

uint64_t ByteBufferAllocator.buffer<A>(bytes:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_10024E940();
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v14 = v12;
  if (!v12)
  {
    if (qword_100308D08 == -1)
    {
LABEL_5:
      *(void *)&long long v13 = qword_10034C038;
      long long v25 = v13;
      uint64_t v15 = swift_retain();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v15 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v14, a2, a3, a4, a5);
LABEL_6:
  uint64_t v27 = v15;
  ByteBuffer.writeBytes<A>(_:)(a1, a6);
  return sub_10008F0F4(v16, v17, v18, v19, v20, v21, v22, v23, v25, *((uint64_t *)&v25 + 1), v26, v27);
}

void ByteBuffer.init<A>(integer:endianness:as:)(uint64_t a1)
{
  ByteBufferAllocator.buffer<A>(integer:endianness:as:)(a1);
  sub_10007A8C4();
  uint64_t v1 = sub_10008F27C();
  v2(v1);
  sub_10008F248();
}

#error "10008E64C: call analysis failed (funcsize=73)"

#error "10008E734: call analysis failed (funcsize=56)"

#error "10008E80C: call analysis failed (funcsize=51)"

#error "10008E95C: call analysis failed (funcsize=73)"

#error "10008EA6C: call analysis failed (funcsize=65)"

void ByteBuffer.init(dispatchData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  sub_10008EFBC();
  uint64_t v13 = v12;
  uint64_t v14 = sub_10024E2F0();
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v15 = v14;
  if (!v14)
  {
    if (qword_100308D08 != -1) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v15, (uint64_t (*)(void))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_10006C3B4);
  sub_10008F158();
  while (1)
  {
    sub_10008F080();
    if (!__CFADD__(a12, v16)) {
      break;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    swift_once();
LABEL_5:
    sub_10008F1B0();
  }
  sub_10024E310();
  sub_10007A8C4();
  (*(void (**)(uint64_t))(v17 + 8))(v13);
  sub_10002FD30();
}

#error "10008EC98: call analysis failed (funcsize=52)"

void Optional<A>.setOrWriteImmutableBuffer(_:)()
{
  sub_10008EFBC();
  unsigned __int8 v5 = BYTE6(v4);
  unsigned int v6 = v3;
  unint64_t v7 = HIDWORD(v3);
  unint64_t v8 = HIDWORD(v4);
  if (*(void *)v0)
  {
    Swift::UInt32 v9 = *(_DWORD *)(v0 + 12);
    sub_10008EFD4();
    if (v7 < v6)
    {
      __break(1u);
    }
    else
    {
      uint64_t v10 = *v1 + (v5 | ((unint64_t)(unsigned __int16)v8 << 8)) + v6;
      ByteBuffer._setBytes(_:at:)(v10, v10 + v7 - v6, v9);
      sub_10008F0E8();
      if (!v12)
      {
        *(_DWORD *)(v0 + 12) = v11;
LABEL_7:
        sub_10002FD30();
        return;
      }
    }
    __break(1u);
  }
  else if (HIDWORD(v3) >= v3)
  {
    *(void *)uint64_t v0 = v2;
    *(void *)(v0 + 8) = v3;
    *(_DWORD *)(v0 + 16) = v4;
    *(unsigned char *)(v0 + 22) = BYTE6(v4);
    *(_WORD *)(v0 + 20) = WORD2(v4);
    swift_retain();
    goto LABEL_7;
  }
  __break(1u);
}

void Optional<A>.setOrWriteBuffer(_:)(uint64_t a1)
{
  if (*(void *)v1)
  {
    ByteBuffer.writeBuffer(_:)();
  }
  else
  {
    uint64_t v3 = *(unsigned int *)(a1 + 8);
    uint64_t v2 = *(unsigned int *)(a1 + 12);
    if (v2 < v3)
    {
      __break(1u);
    }
    else
    {
      int v4 = *(_DWORD *)(a1 + 16);
      __int16 v5 = *(_WORD *)(a1 + 20);
      char v6 = *(unsigned char *)(a1 + 22);
      *(void *)uint64_t v1 = *(void *)a1;
      *(void *)(v1 + 8) = v3 | (v2 << 32);
      *(unsigned char *)(v1 + 22) = v6;
      *(_WORD *)(v1 + 20) = v5;
      *(_DWORD *)(v1 + 16) = v4;
      *(_DWORD *)(a1 + 8) = v2;
      swift_retain();
    }
  }
}

void *sub_10008EE14(void *__c, size_t __len, void *__b)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if (__len) {
      memset(__b, (int)__c, __len);
    }
    return __b;
  }
  return __c;
}

uint64_t sub_10008EE54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 - a3;
  if (!a3) {
    uint64_t v4 = 0;
  }
  if (result < 0 || v4 < result)
  {
    __break(1u);
  }
  else if ((a2 & 0x8000000000000000) == 0 && v4 >= a2)
  {
    return a2 - result;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008EE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030D7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008EEF0(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030D7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008EF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_10008D994(a1, a2, *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 24), a3);
}

uint64_t sub_10008EF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_10008D994(a1, a2, *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 24), a3);
}

uint64_t sub_10008EF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_10008EFD4()
{
  return swift_beginAccess();
}

Swift::Int sub_10008EFF8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, __int16 a14, char a15)
{
  return ByteBuffer.setRepeatingByte(_:count:at:)(v17, v15, v16);
}

uint64_t sub_10008F02C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v6 = *v4 + ((v3 >> 24) & 0xFFFF00 | BYTE6(v3)) + v2;
  return ByteBuffer._setBytes(_:at:)(v6, v6 + a1, v1);
}

uint64_t sub_10008F05C()
{
  return *(void *)(v1 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v3 + v2;
}

void sub_10008F080()
{
  ByteBuffer.setDispatchData(_:at:)();
}

uint64_t sub_10008F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t sub_10008F0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t sub_10008F110(int a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  return static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(a1, a2, a3, a4, v4);
}

uint64_t sub_10008F170()
{
  return swift_retain();
}

uint64_t sub_10008F18C()
{
  return swift_retain();
}

uint64_t sub_10008F1B0()
{
  return swift_retain();
}

uint64_t sub_10008F1EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008F25C()
{
  return v0;
}

uint64_t sub_10008F270()
{
  return v0;
}

uint64_t sub_10008F27C()
{
  return v0;
}

uint64_t AddressedEnvelope.init(remoteAddress:data:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v14 = type metadata accessor for AddressedEnvelope();
  Swift::Int v15 = &a7[*(int *)(v14 + 32)];
  *(void *)a7 = a1;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[*(int *)(v14 + 28)], a2, a6);
  *(void *)Swift::Int v15 = a3;
  *((void *)v15 + 1) = a4;
  *((void *)v15 + 2) = a5;
  return result;
}

uint64_t type metadata accessor for AddressedEnvelope()
{
  return sub_10002F7A4();
}

uint64_t AddressedEnvelope.remoteAddress.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t AddressedEnvelope.remoteAddress.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t AddressedEnvelope.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t AddressedEnvelope.data.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*AddressedEnvelope.data.modify())(void)
{
  return debugOnly(_:);
}

uint64_t AddressedEnvelope.metadata.getter(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1 + 32));
  uint64_t v3 = *v2;
  sub_10003BD08(*v2, v2[1]);
  return v3;
}

uint64_t AddressedEnvelope.metadata.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (uint64_t *)(v4 + *(int *)(a4 + 32));
  uint64_t result = sub_10003B918(*v8, v8[1]);
  *unint64_t v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  return result;
}

uint64_t (*AddressedEnvelope.metadata.modify())(void)
{
  return debugOnly(_:);
}

uint64_t AddressedEnvelope.init(remoteAddress:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AddressedEnvelope();
  Swift::UInt32 v9 = (void *)((char *)a4 + *(int *)(v8 + 32));
  v9[1] = 0;
  v9[2] = 0;
  *Swift::UInt32 v9 = 4;
  *a4 = a1;
  uint64_t v10 = (char *)a4 + *(int *)(v8 + 28);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v11(v10, a2, a3);
}

uint64_t AddressedEnvelope.Metadata.ecnState.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t AddressedEnvelope.Metadata.packetInfo.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AddressedEnvelope.Metadata.packetInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10002F2A0(*(void *)(v2 + 8));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void AddressedEnvelope.Metadata.hash(into:)(uint64_t a1, unsigned __int8 a2, unint64_t a3, Swift::UInt a4)
{
  sub_10024FC20(a2);
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_10024FC30(1u);
    swift_retain();
    SocketAddress.hash(into:)(a1, a3);
    sub_10024FC20(a4);
    sub_10002F2A0(a3);
  }
  else
  {
    sub_10024FC30(0);
  }
}

BOOL static AddressedEnvelope.Metadata.__derived_struct_equals(_:_:)(char a1, unint64_t a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6)
{
  if (a1 != a4) {
    return 0;
  }
  unint64_t v8 = a5 & 0xF000000000000007;
  if ((~a2 & 0xF000000000000007) != 0)
  {
    if (v8 != 0xF000000000000007)
    {
      sub_10002F288(a5);
      sub_10002F288(a2);
      BOOL v12 = static SocketAddress.== infix(_:_:)(a2, a5);
      sub_10002F2A0(a5);
      sub_10002F2A0(a2);
      if (v12 && a3 == a6) {
        return 1;
      }
    }
    return 0;
  }
  return v8 == 0xF000000000000007;
}

Swift::Int AddressedEnvelope.Metadata.hashValue.getter(unsigned __int8 a1, unint64_t a2, Swift::UInt a3)
{
  sub_10024FC00();
  AddressedEnvelope.Metadata.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_10024FC70();
}

Swift::Int sub_10008F7EC()
{
  return AddressedEnvelope.Metadata.hashValue.getter(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

void sub_10008F7F8(uint64_t a1)
{
  AddressedEnvelope.Metadata.hash(into:)(a1, *(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

Swift::Int sub_10008F804()
{
  sub_10024FC00();
  AddressedEnvelope.Metadata.hash(into:)((uint64_t)v2, *(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
  return sub_10024FC70();
}

BOOL sub_10008F848(uint64_t a1, uint64_t a2)
{
  return static AddressedEnvelope.Metadata.__derived_struct_equals(_:_:)(*(unsigned char *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t AddressedEnvelope.description.getter()
{
  sub_10024F330(49);
  v3._object = (void *)0x800000010027C2B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000023;
  sub_10024E800(v3);
  unint64_t v1 = *v0;
  swift_retain();
  v4._uint64_t countAndFlagsBits = SocketAddress.description.getter(v1);
  sub_10024E800(v4);
  swift_release();
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x203A61746164202CLL;
  v5._object = (void *)0xE800000000000000;
  sub_10024E800(v5);
  sub_10024FA20();
  v6._uint64_t countAndFlagsBits = 32032;
  v6._object = (void *)0xE200000000000000;
  sub_10024E800(v6);
  return 0;
}

uint64_t SingleConnectionFailure.target.getter(uint64_t a1)
{
  return a1;
}

uint64_t CircularBuffer.headBackingIndex.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

void NIOPacketInfo.hash(into:)(uint64_t a1, unint64_t a2, Swift::UInt a3)
{
}

uint64_t static NIOPacketInfo.__derived_struct_equals(_:_:)(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return static SocketAddress.== infix(_:_:)(a1, a3) & (a2 == a4);
}

Swift::Int NIOPacketInfo.hashValue.getter(unint64_t a1, Swift::UInt a2)
{
  sub_10024FC00();
  swift_retain();
  SocketAddress.hash(into:)((uint64_t)v5, a1);
  swift_release();
  sub_10024FC20(a2);
  return sub_10024FC70();
}

Swift::Int sub_10008FA90()
{
  return NIOPacketInfo.hashValue.getter(*v0, v0[1]);
}

void sub_10008FA98(uint64_t a1)
{
  NIOPacketInfo.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_10008FAA0()
{
  unint64_t v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_10024FC00();
  swift_retain();
  SocketAddress.hash(into:)((uint64_t)v4, v1);
  swift_release();
  sub_10024FC20(v2);
  return sub_10024FC70();
}

uint64_t sub_10008FB0C(uint64_t a1, uint64_t a2)
{
  return static NIOPacketInfo.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_10008FB20()
{
  return swift_getWitnessTable();
}

unint64_t sub_10008FB40()
{
  unint64_t result = qword_10030D7F0;
  if (!qword_10030D7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D7F0);
  }
  return result;
}

unint64_t sub_10008FB90()
{
  unint64_t result = qword_10030D7F8[0];
  if (!qword_10030D7F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10030D7F8);
  }
  return result;
}

uint64_t sub_10008FBDC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10008FC80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  Swift::String v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((v7 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v10 = *a2;
    *Swift::String v3 = *a2;
    Swift::String v3 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
LABEL_15:
    swift_retain();
    return v3;
  }
  *a1 = *a2;
  uint64_t v11 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v12 = ((unint64_t)a2 + v6 + 8) & ~v6;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v13(v11, v12, v4);
  unint64_t v14 = (v7 + v11) & 0xFFFFFFFFFFFFFFF8;
  Swift::Int v15 = (unsigned __int8 *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v16 = *v15;
  if (v16 > 3)
  {
    long long v18 = *(_OWORD *)v15;
    *(void *)(v14 + 16) = *((void *)v15 + 2);
    *(_OWORD *)unint64_t v14 = v18;
    return v3;
  }
  *(unsigned char *)unint64_t v14 = v16;
  uint64_t v17 = *((void *)v15 + 1);
  if ((~v17 & 0xF000000000000007) != 0)
  {
    *(void *)(v14 + 8) = v17;
    *(void *)(v14 + 16) = *((void *)v15 + 2);
    goto LABEL_15;
  }
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  return v3;
}

uint64_t sub_10008FE0C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t))(v4 + 8))(v6);
  unint64_t v8 = (unsigned __int8 *)((*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 <= 3u && (~*((void *)v8 + 1) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

void *sub_10008FED4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(void *)(v4 - 8) + 16;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  swift_retain();
  v5(v8, v9, v4);
  uint64_t v10 = *(void *)(v6 + 48) + 7;
  unint64_t v11 = (v10 + v8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = (unsigned __int8 *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v13 = *v12;
  if (v13 > 3)
  {
    long long v15 = *(_OWORD *)v12;
    *(void *)(v11 + 16) = *((void *)v12 + 2);
    *(_OWORD *)unint64_t v11 = v15;
  }
  else
  {
    *(unsigned char *)unint64_t v11 = v13;
    uint64_t v14 = *((void *)v12 + 1);
    if ((~v14 & 0xF000000000000007) != 0)
    {
      *(void *)(v11 + 8) = v14;
      *(void *)(v11 + 16) = *((void *)v12 + 2);
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
    }
  }
  return a1;
}

void *sub_10008FFDC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  uint64_t v12 = (unsigned __int8 *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v13 = (unsigned __int8 *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v14 = *v13;
  if (*v12 <= 3u)
  {
    if (v14 <= 3)
    {
      *uint64_t v12 = v14;
      uint64_t v15 = *((void *)v13 + 1);
      unint64_t v16 = v15 & 0xF000000000000007;
      if ((~*((void *)v12 + 1) & 0xF000000000000007) != 0)
      {
        if (v16 != 0xF000000000000007)
        {
          *((void *)v12 + 1) = v15;
          swift_retain();
          swift_release();
          *((void *)v12 + 2) = *((void *)v13 + 2);
          return a1;
        }
        sub_100090194((uint64_t)(v12 + 8));
        goto LABEL_15;
      }
      if (v16 == 0xF000000000000007)
      {
LABEL_15:
        *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
        return a1;
      }
      goto LABEL_12;
    }
    if ((~*((void *)v12 + 1) & 0xF000000000000007) != 0) {
      swift_release();
    }
    goto LABEL_11;
  }
  if (v14 > 3)
  {
LABEL_11:
    long long v17 = *(_OWORD *)v13;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *(_OWORD *)uint64_t v12 = v17;
    return a1;
  }
  *uint64_t v12 = v14;
  uint64_t v15 = *((void *)v13 + 1);
  if ((~v15 & 0xF000000000000007) != 0)
  {
LABEL_12:
    *((void *)v12 + 1) = v15;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    swift_retain();
    return a1;
  }
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
  return a1;
}

uint64_t sub_100090194(uint64_t a1)
{
  return a1;
}

void *sub_1000901C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v11 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  *(void *)(v10 + 16) = v12;
  return a1;
}

void *sub_10009026C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  uint64_t v12 = (unsigned __int8 *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v13 = (unsigned __int8 *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  if (*v12 > 3u)
  {
LABEL_9:
    long long v17 = *(_OWORD *)v13;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *(_OWORD *)uint64_t v12 = v17;
    return a1;
  }
  unsigned int v14 = *v13;
  if (v14 > 3)
  {
    if ((~*((void *)v12 + 1) & 0xF000000000000007) != 0) {
      swift_release();
    }
    goto LABEL_9;
  }
  uint64_t v15 = *((void *)v12 + 1);
  *uint64_t v12 = v14;
  uint64_t v16 = *((void *)v13 + 1);
  if ((~v15 & 0xF000000000000007) != 0)
  {
    if ((~v16 & 0xF000000000000007) != 0)
    {
      *((void *)v12 + 1) = v16;
      swift_release();
      *((void *)v12 + 2) = *((void *)v13 + 2);
      return a1;
    }
    sub_100090194((uint64_t)(v12 + 8));
  }
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
  return a1;
}

uint64_t sub_1000903B4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0xFB) {
    unsigned int v8 = 251;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v9 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v8 < a2)
  {
    unint64_t v10 = ((v9 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 24;
    unsigned int v11 = a2 - v8;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *((unsigned __int8 *)a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10009050CLL);
      case 4:
        int v16 = *(_DWORD *)((char *)a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *a1;
        }
        return v8 + (v12 | v18) + 1;
      default:
        break;
    }
  }
  uint64_t v19 = ((unint64_t)a1 + v7 + 8) & ~v7;
  if (v6 >= 0xFB) {
    return sub_10001FA0C(v19, v6, v4);
  }
  unsigned int v20 = *(unsigned __int8 *)((v9 + v19) & 0xFFFFFFFFFFFFFFF8);
  BOOL v21 = v20 >= 4;
  unsigned int v22 = v20 - 4;
  if (!v21) {
    unsigned int v22 = -1;
  }
  if (v22 + 1 >= 2) {
    return v22;
  }
  else {
    return 0;
  }
}

void sub_100090520(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0xFB) {
    unsigned int v9 = 251;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  unint64_t v12 = ((v11 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = a3 - v9;
    if (((v11 + ((v10 + 8) & ~v10)) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((v11 + ((v10 + 8) & ~v10)) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      int v17 = a2 - v9;
    }
    else {
      int v17 = 1;
    }
    if (((v11 + ((v10 + 8) & ~v10)) & 0xFFFFFFF8) != 0xFFFFFFE8)
    {
      int v18 = ~v9 + a2;
      bzero(a1, ((v11 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 24);
      *(_DWORD *)a1 = v18;
    }
    switch(v16)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x100090718);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        unint64_t v19 = (unint64_t)&a1[v10 + 8] & ~v10;
        if (v8 < 0xFB)
        {
          unsigned int v20 = (void *)((v11 + v19) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0xFB)
          {
            *unsigned int v20 = 0;
            v20[1] = 0;
            v20[2] = 0;
            *(_DWORD *)unsigned int v20 = a2 - 252;
          }
          else
          {
            *(unsigned char *)unsigned int v20 = a2 + 4;
          }
        }
        else
        {
          sub_1000195B4(v19, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t sub_100090744(uint64_t result)
{
  if ((~*(void *)(result + 8) & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100090760(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  return a1;
}

uint64_t sub_1000907C0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v7 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 8) & 0xF000000000000007) != 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *(void *)(a1 + 8) = v5;
      swift_retain();
      swift_release();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      return a1;
    }
    sub_100090194(a1 + 8);
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
LABEL_6:
    *uint64_t v4 = *v6;
    return a1;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_100090874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 8);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if ((~v5 & 0xF000000000000007) != 0)
    {
      *(void *)(a1 + 8) = v5;
      swift_release();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      return a1;
    }
    sub_100090194(a1 + 8);
  }
  *uint64_t v4 = *v6;
  return a1;
}

uint64_t sub_1000908F8(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && a1[24])
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 4;
      int v2 = v3 - 4;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100090934(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t type metadata accessor for AddressedEnvelope.Metadata()
{
  return sub_10002F7A4();
}

unsigned char *storeEnumTagSinglePayload for NIOExplicitCongestionNotificationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100090A5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOExplicitCongestionNotificationState()
{
  return &type metadata for NIOExplicitCongestionNotificationState;
}

_OWORD *initializeBufferWithCopyOfBuffer for NIOPacketInfo(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for SocketAddress()
{
  return swift_release();
}

void *assignWithCopy for NIOPacketInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_OWORD *assignWithTake for NIOPacketInfo(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for NIOPacketInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for NIOPacketInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOPacketInfo()
{
  return &type metadata for NIOPacketInfo;
}

void *sub_100090C24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10024F450();
    uint64_t v3 = a1 + 40;
    do
    {
      swift_unknownObjectRetain();
      ChannelPipeline.removeHandler(_:)();
      swift_unknownObjectRelease();
      sub_10024F400();
      sub_10024F490();
      sub_10024F4A0();
      sub_10024F420();
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  swift_release();
  return _swiftEmptyArrayStorage;
}

uint64_t NIOHTTPClientUpgradeHandler.__allocating_init(upgraders:httpHandlers:upgradeCompletionHandler:)()
{
  sub_10003C9AC();
  uint64_t v0 = swift_allocObject();
  NIOHTTPClientUpgradeHandler.init(upgraders:httpHandlers:upgradeCompletionHandler:)();
  return v0;
}

void *NIOHTTPClientUpgradeError.responseProtocolNotFound.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.responseProtocolNotFound;
}

void *NIOHTTPClientUpgradeError.invalidHTTPOrdering.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.invalidHTTPOrdering;
}

void *NIOHTTPClientUpgradeError.upgraderDeniedUpgrade.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.upgraderDeniedUpgrade;
}

void *NIOHTTPClientUpgradeError.writingToHandlerDuringUpgrade.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.writingToHandlerDuringUpgrade;
}

void *NIOHTTPClientUpgradeError.writingToHandlerAfterUpgradeCompleted.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.writingToHandlerAfterUpgradeCompleted;
}

void *NIOHTTPClientUpgradeError.writingToHandlerAfterUpgradeFailed.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.writingToHandlerAfterUpgradeFailed;
}

void *NIOHTTPClientUpgradeError.receivedResponseBeforeRequestSent.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.receivedResponseBeforeRequestSent;
}

void *NIOHTTPClientUpgradeError.receivedResponseAfterUpgradeCompleted.unsafeMutableAddressor()
{
  return &static NIOHTTPClientUpgradeError.receivedResponseAfterUpgradeCompleted;
}

uint64_t NIOHTTPClientUpgradeError.description.getter()
{
  return sub_10024E700();
}

uint64_t sub_100090E00()
{
  return NIOHTTPClientUpgradeError.description.getter();
}

void NIOHTTPClientUpgradeHandler.init(upgraders:httpHandlers:upgradeCompletionHandler:)()
{
  sub_10003C9AC();
  *(unsigned char *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  sub_100030788(0x10uLL);
  *(void *)(v1 + 72) = v5;
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = v7;
  if (*(void *)(v4 + 16))
  {
    *(void *)(v1 + 16) = v4;
    *(void *)(v1 + 24) = v3;
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t NIOHTTPClientUpgradeHandler.write(context:data:promise:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(*(void *)(v3 + 56))
  {
    case 0:
      sub_100091064(a2, (uint64_t)&v22);
      ChannelHandlerContext.write(_:promise:)((uint64_t)&v22, a3);
      uint64_t result = sub_10003908C((uint64_t)&v22);
      break;
    case 1:
    case 3:
      uint64_t result = ChannelHandlerContext.write(_:promise:)(a2, a3);
      break;
    case 4:
    case 5:
      if (a3)
      {
        sub_100091018();
        uint64_t v6 = sub_1000290D0();
        *uint64_t v7 = 4;
        swift_errorRetain();
        sub_1000B44D0(v6, 1, a3, v8, v9, v10, v11, v12, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
          v33,
          vars0,
          vars8);
        swift_errorRelease();
        swift_errorRelease();
      }
      sub_100091018();
      sub_1000290D0();
      char v14 = 4;
      goto LABEL_11;
    default:
      if (a3)
      {
        sub_100091018();
        uint64_t v15 = sub_1000290D0();
        *int v16 = 3;
        swift_errorRetain();
        sub_1000B44D0(v15, 1, a3, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
          v33,
          vars0,
          vars8);
        swift_errorRelease();
        swift_errorRelease();
      }
      sub_100091018();
      sub_1000290D0();
      char v14 = 3;
LABEL_11:
      *unsigned int v13 = v14;
      ChannelHandlerContext.fireErrorCaught(_:)();
      uint64_t result = swift_errorRelease();
      break;
  }
  return result;
}

unint64_t sub_100091018()
{
  unint64_t result = qword_10030D900;
  if (!qword_10030D900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D900);
  }
  return result;
}

uint64_t sub_100091064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100019524(&qword_10030A510);
  sub_100033200();
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  if (HIBYTE(v9))
  {
    sub_100039008(v7, v8, v9, SHIBYTE(v9));
    return sub_100030CE8(a1, a2);
  }
  else
  {
    *(void *)&long long v16 = v7;
    *((void *)&v16 + 1) = v8;
    unsigned __int8 v17 = v9;
    unint64_t v14 = *(void *)(v3 + 56);
    *(_OWORD *)(v3 + 56) = xmmword_10025C2E0;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100092894(v14);
    sub_10009119C((uint64_t)&v16);
    sub_100091490((uint64_t)&v16);
    int v15 = v17;
    *(void *)(a2 + 24) = v6;
    *(_OWORD *)a2 = v16;
    *(_DWORD *)(a2 + 16) = v15;
    *(_DWORD *)(a2 + 20) = 0;
    *(unsigned char *)(a2 + 56) = 2;
    return sub_100039008(v10, v11, v12, 0);
  }
}

uint64_t sub_10009119C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_100027788(v5, (uint64_t)v27);
      uint64_t v7 = v28;
      uint64_t v8 = v29;
      sub_10001C2A8(v27, v28);
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
      sub_10001C2EC((uint64_t)v27);
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = v6[2];
      if (__OFADD__(v11, v10)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v11 + v10 > v6[3] >> 1)
      {
        sub_100034BF0();
        uint64_t v6 = v12;
      }
      if (*(void *)(v9 + 16))
      {
        uint64_t v13 = v6[2];
        if ((v6[3] >> 1) - v13 < v10) {
          goto LABEL_26;
        }
        unint64_t v14 = (unint64_t)&v6[2 * v13 + 4];
        if (v9 + 32 < v14 + 16 * v10 && v14 < v9 + 32 + 16 * v10) {
          goto LABEL_29;
        }
        swift_arrayInitWithCopy();
        if (v10)
        {
          uint64_t v16 = v6[2];
          BOOL v17 = __OFADD__(v16, v10);
          uint64_t v18 = v16 + v10;
          if (v17) {
            goto LABEL_27;
          }
          v6[2] = v18;
        }
      }
      else if (v10)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_20:
    v27[0] = &off_1002D6958;
    sub_1001D6F04();
    sub_100019524(&qword_100309410);
    sub_10003F8AC();
    uint64_t v19 = sub_10024E5C0();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if ((sub_1000304DC(0x697463656E6E6F43uLL, 0xEA00000000006E6FLL) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_10003461C();
      uint64_t v22 = *(void *)(*(void *)(a1 + 8) + 16);
      sub_100034934();
      uint64_t v23 = *(void *)(a1 + 8);
      *(void *)(v23 + 16) = v22 + 1;
      uint64_t v24 = (void *)(v23 + 32 * v22);
      v24[4] = 0x697463656E6E6F43;
      v24[5] = 0xEA00000000006E6FLL;
      v24[6] = v19;
      v24[7] = v21;
      *(void *)(a1 + 8) = v23;
      char v25 = sub_100032B9C();
      uint64_t result = swift_bridgeObjectRelease();
      if (v25) {
        *(unsigned char *)(a1 + 16) = 2;
      }
      return result;
    }
  }
  __break(1u);
LABEL_29:
  uint64_t result = sub_10024F730();
  __break(1u);
  return result;
}

uint64_t sub_100091490(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v33 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000389BC();
    uint64_t v7 = v4 + 32;
    uint64_t v8 = a1;
    do
    {
      sub_100027788(v7, (uint64_t)v30);
      uint64_t v9 = v31;
      uint64_t v10 = v32;
      sub_10001C2A8(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      uint64_t v11 = sub_10024E710();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      sub_10001C2EC((uint64_t)v30);
      uint64_t v6 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000389BC();
        uint64_t v6 = v33;
      }
      unint64_t v14 = v6[2];
      if (v14 >= v6[3] >> 1)
      {
        sub_1000389BC();
        uint64_t v6 = v33;
      }
      v6[2] = v14 + 1;
      int v15 = &v6[2 * v14];
      v15[4] = v11;
      v15[5] = v13;
      v7 += 40;
      --v5;
    }
    while (v5);
    a1 = v8;
    swift_bridgeObjectRelease();
    uint64_t v2 = v1;
  }
  v30[0] = v6;
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  uint64_t v16 = sub_10024E5C0();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1000304DC(0x65646172677055uLL, 0xE700000000000000);
  if (result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = a1 + 8;
    swift_bridgeObjectRetain();
    sub_10003461C();
    uint64_t v21 = *(void *)(*(void *)(a1 + 8) + 16);
    sub_100034934();
    uint64_t v22 = *(void *)(a1 + 8);
    *(void *)(v22 + 16) = v21 + 1;
    uint64_t v23 = (void *)(v22 + 32 * v21);
    v23[4] = 0x65646172677055;
    v23[5] = 0xE700000000000000;
    v23[6] = v16;
    v23[7] = v18;
    *(void *)(a1 + 8) = v22;
    char v24 = sub_100032B9C();
    uint64_t result = swift_bridgeObjectRelease();
    if (v24) {
      *(unsigned char *)(a1 + 16) = 2;
    }
    uint64_t v25 = *(void *)(v2 + 16);
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v27 = v25 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_100027788(v27, (uint64_t)v30);
        uint64_t v28 = v31;
        uint64_t v29 = v32;
        sub_10001C2A8(v30, v31);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))(v20, v28, v29);
        sub_10001C2EC((uint64_t)v30);
        v27 += 40;
        --v26;
      }
      while (v26);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void NIOHTTPClientUpgradeHandler.channelRead(context:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((*(unsigned char *)(v3 + 48) & 1) == 0)
  {
    sub_100019524(&qword_10030A520);
    sub_100033418();
    unint64_t v9 = HIBYTE(v8);
    uint64_t v10 = *(void (**)(uint64_t))(v3 + 56);
    switch((unint64_t)v10)
    {
      case 0uLL:
        sub_100091018();
        sub_1000290D0();
        char v12 = 6;
        goto LABEL_18;
      case 1uLL:
        sub_100091988(a1, v6, v7, v8);
        goto LABEL_14;
      case 2uLL:
      case 3uLL:
        if (v9 != 2) {
          goto LABEL_14;
        }
        sub_100093070();
        *(unsigned char *)(v3 + 48) = 1;
        goto LABEL_3;
      case 4uLL:
        sub_100091018();
        sub_1000290D0();
        char v12 = 7;
LABEL_18:
        *uint64_t v11 = v12;
        ChannelHandlerContext.fireErrorCaught(_:)();
        uint64_t v21 = sub_100093090();
        sub_10003C488(v21, v22, v23, v24);
        sub_10002FD30();
        swift_errorRelease();
        return;
      case 5uLL:
        ChannelHandlerContext.fireChannelRead(_:)();
        goto LABEL_14;
      default:
        if (v9 == 2)
        {
          *(unsigned char *)(v3 + 48) = 1;
          uint64_t v13 = swift_retain();
          v10(v13);
          sub_100093070();
          sub_10002FD30();
          sub_100092894(v14);
        }
        else
        {
LABEL_14:
          sub_100093090();
          sub_10002FD30();
          sub_10003C488(v16, v17, v18, v19);
        }
        return;
    }
  }
  swift_beginAccess();
  sub_1000310B4(a2);
  swift_endAccess();
LABEL_3:
  sub_10002FD30();
}

uint64_t sub_100091988(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (HIBYTE(a4))
  {
    return sub_100091B34(a1, a2, a3, a4, 1u);
  }
  else
  {
    if (*(void *)(a2 + 32) == 1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_100091C48(a1, a2, a3, a4);
      sub_100091D84((uint64_t (*)(uint64_t))v8, v10);
      swift_release();
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_100091B34(a1, a2, a3, a4, 8u);
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_100091B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v11 = a5;
  unint64_t v12 = *(void *)(v5 + 56);
  *(_OWORD *)(v5 + 56) = xmmword_10025C2F0;
  sub_100092894(v12);
  if (v11 != 8)
  {
    sub_100091018();
    swift_allocError();
    *uint64_t v13 = a5;
    ChannelHandlerContext.fireErrorCaught(_:)();
    swift_errorRelease();
  }
  v15[3] = sub_100019524(&qword_10030A520);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  char v16 = 2;
  sub_100093004(a2, a3, a4, SHIBYTE(a4));
  ChannelHandlerContext.fireChannelRead(_:)();
  sub_10003908C((uint64_t)v15);
  return ChannelPipeline.removeHandler(context:promise:)(a1, 0);
}

uint64_t (*sub_100091C48(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4))()
{
  HTTPHeaders.subscript.getter();
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_10024F060();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_100091DDC(a1, v11, v13, a2, a3, a4);
    if (!v5) {
      uint64_t v4 = v14;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100091018();
    swift_allocError();
    *uint64_t v15 = 0;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_100091D84(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  unint64_t v4 = *(void *)(v2 + 56);
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  sub_100092894(v4);
  int v5 = *(unsigned __int8 *)(v2 + 48);
  uint64_t result = swift_retain();
  if (v5 == 1) {
    return a1(result);
  }
  return result;
}

uint64_t (*sub_100091DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6))()
{
  uint64_t v38 = a4;
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v12 = v8 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_100027788(v12, (uint64_t)&v33);
      uint64_t v13 = v34;
      uint64_t v14 = v35;
      sub_10001C2A8(&v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
      uint64_t v15 = sub_10024E710();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == a2 && v17 == a3) {
        break;
      }
      char v19 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_13;
      }
      sub_10001C2EC((uint64_t)&v33);
      v12 += 40;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    sub_10002F754(&v33, (uint64_t)v36);
    swift_bridgeObjectRelease();
    uint64_t v20 = v38;
    uint64_t v21 = a6;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v20 = v38;
    uint64_t v21 = a6;
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
    swift_bridgeObjectRelease();
  }
  sub_100092F38((uint64_t)v36, (uint64_t)&v31, &qword_10030DA58);
  if (v32)
  {
    sub_10002F754(&v31, (uint64_t)&v33);
    uint64_t v22 = v34;
    uint64_t v23 = v35;
    sub_10001C2A8(&v33, v34);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, a5, v21, v22, v23))
    {
      sub_100092D68((uint64_t)v36);
      sub_100027788((uint64_t)&v33, (uint64_t)&v31);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v29;
      *(void *)(v24 + 24) = a1;
      sub_10002F754(&v31, v24 + 32);
      *(void *)(v24 + 72) = v20;
      *(void *)(v24 + 80) = a5;
      *(unsigned char *)(v24 + 88) = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10001C2EC((uint64_t)&v33);
      return sub_100092E20;
    }
    else
    {
      sub_100091018();
      swift_allocError();
      *uint64_t v27 = 2;
      swift_willThrow();
      sub_100092D68((uint64_t)v36);
      return (uint64_t (*)())sub_10001C2EC((uint64_t)&v33);
    }
  }
  else
  {
    sub_100092D68((uint64_t)&v31);
    sub_100091018();
    swift_allocError();
    *uint64_t v26 = 0;
    swift_willThrow();
    return (uint64_t (*)())sub_100092D68((uint64_t)v36);
  }
}

uint64_t sub_1000920E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v12 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 56) = xmmword_10025C300;
  sub_100092894(v12);
  sub_100092388(a2);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100092E38;
  *(void *)(v14 + 24) = v13;
  swift_retain();
  swift_retain();
  sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NIOHTTPClientUpgradeHandler.swift", 129, 2, 303, (uint64_t)sub_100092E78, v14);
  swift_release();
  swift_release();
  sub_100027788(a3, (uint64_t)v19);
  uint64_t v15 = swift_allocObject();
  sub_10002F754(v19, v15 + 16);
  *(void *)(v15 + 56) = a2;
  *(void *)(v15 + 64) = a4;
  *(void *)(v15 + 72) = a5;
  *(unsigned char *)(v15 + 80) = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100120A9C();
  swift_release();
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100092F28;
  *(void *)(v17 + 24) = v16;
  swift_retain();
  swift_retain();
  sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NIOHTTPClientUpgradeHandler.swift", 129, 2, 311, (uint64_t)sub_10009306C, v17);
  swift_release();
  swift_release();
  swift_retain_n();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_release();
}

uint64_t sub_100092388(uint64_t a1)
{
  if (*(void *)(*(void *)(v1 + 24) + 16))
  {
    swift_retain();
    uint64_t v3 = swift_bridgeObjectRetain();
    unint64_t v4 = sub_100090C24(v3);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 56);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 1084, ObjectType, (uint64_t)&type metadata for ()[8], v5);
    swift_unknownObjectRetain();
    sub_10011EBE0((uint64_t)v4, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v7 = v8;
  }
  swift_unknownObjectRelease();
  return v7;
}

unint64_t sub_1000924AC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t))(a1 + 32))(a2);
  unint64_t v3 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 56) = xmmword_10025C310;
  return sub_100092894(v3);
}

uint64_t sub_1000924FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10001C2A8(a1, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 40))(a2, a3, a4, a5, v9, v10);
}

unint64_t sub_100092578(void *a1)
{
  uint64_t v2 = a1 + 9;
  swift_beginAccess();
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = v4 - v3;
  if (v4 < v3) {
    v5 += *(void *)(*v2 + 16);
  }
  while (1)
  {
    BOOL v6 = __OFSUB__(v4, v3);
    uint64_t v7 = v4 - v3;
    if (v7 < 0 != v6) {
      v7 += *(void *)(*v2 + 16);
    }
    if (v7 < 1) {
      break;
    }
    swift_beginAccess();
    unint64_t v8 = a1[10];
    uint64_t v9 = a1[11];
    if (v9 == v8)
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      unint64_t result = sub_10024F660();
      __break(1u);
      return result;
    }
    if ((v8 & 0x8000000000000000) != 0 || HIDWORD(v8)) {
      goto LABEL_27;
    }
    uint64_t v10 = a1[9];
    if (v8 >= *(void *)(v10 + 16)) {
      goto LABEL_23;
    }
    sub_100092F38(v10 + (v8 << 6) + 32, (uint64_t)&v16, &qword_10030A508);
    if (v18[24] == 255) {
      goto LABEL_26;
    }
    v19[0] = v16;
    v19[1] = v17;
    v20[0] = *(_OWORD *)v18;
    *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v18[9];
    uint64_t v11 = v9 - v8;
    if (v9 < (uint64_t)v8) {
      v11 += *(void *)(v10 + 16);
    }
    if (v11 < 1) {
      goto LABEL_24;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10011FD0C();
      uint64_t v10 = v13;
    }
    long long v17 = 0u;
    memset(v18, 0, 24);
    long long v16 = 0u;
    v18[24] = -1;
    *uint64_t v2 = v10;
    if (v8 >= *(void *)(v10 + 16)) {
      goto LABEL_25;
    }
    sub_100092F9C((uint64_t)&v16, v10 + (v8 << 6) + 32);
    a1[10] = (*(void *)(a1[9] + 16) - 1) & (v8 + 1);
    swift_endAccess();
    ChannelHandlerContext.fireChannelRead(_:)();
    sub_10003908C((uint64_t)v19);
    uint64_t v3 = a1[10];
    uint64_t v4 = a1[11];
  }
  if (v5 >= 1) {
    ChannelHandlerContext.fireChannelReadComplete()();
  }
  unint64_t v14 = a1[7];
  *(_OWORD *)(a1 + 7) = xmmword_10025C320;
  return sub_100092894(v14);
}

uint64_t sub_1000927EC(uint64_t a1, uint64_t a2)
{
  return ChannelPipeline.removeHandler(context:promise:)(a2, 0);
}

uint64_t NIOHTTPClientUpgradeHandler.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100092894(*(void *)(v0 + 56));
  swift_release();
  return v0;
}

uint64_t NIOHTTPClientUpgradeHandler.__deallocating_deinit()
{
  NIOHTTPClientUpgradeHandler.deinit();
  return _swift_deallocClassInstance(v0, 96, 7);
}

unint64_t sub_100092894(unint64_t result)
{
  if (result >= 6) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1000928AC()
{
  unint64_t result = qword_10030D908;
  if (!qword_10030D908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030D908);
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOHTTPClientUpgradeError()
{
  return &type metadata for NIOHTTPClientUpgradeError;
}

uint64_t type metadata accessor for NIOHTTPClientUpgradeHandler()
{
  return self;
}

void *destroy for NIOHTTPClientUpgradeHandler.UpgradeState(void *result)
{
  if (*result >= 0xFFFFFFFFuLL) {
    return (void *)swift_release();
  }
  return result;
}

uint64_t _s25ASOctaneSupportXPCService27NIOHTTPClientUpgradeHandlerC12UpgradeStateOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for NIOHTTPClientUpgradeHandler.UpgradeState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for NIOHTTPClientUpgradeHandler.UpgradeState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NIOHTTPClientUpgradeHandler.UpgradeState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NIOHTTPClientUpgradeHandler.UpgradeState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 5;
    }
  }
  return result;
}

void *sub_100092B5C(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for NIOHTTPClientUpgradeHandler.UpgradeState()
{
  return &type metadata for NIOHTTPClientUpgradeHandler.UpgradeState;
}

uint64_t getEnumTagSinglePayload for InAppBuyRouteError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s25ASOctaneSupportXPCService25NIOHTTPClientUpgradeErrorV4CodeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100092CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOHTTPClientUpgradeError.Code()
{
  return &type metadata for NIOHTTPClientUpgradeError.Code;
}

unint64_t sub_100092D1C()
{
  unint64_t result = qword_10030DA50;
  if (!qword_10030DA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DA50);
  }
  return result;
}

uint64_t sub_100092D68(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030DA58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100092DC8()
{
  swift_release();
  swift_release();
  sub_10001C2EC(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_100092E20()
{
  return sub_1000920E0(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
}

unint64_t sub_100092E38()
{
  return sub_1000924AC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100092E40()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100092E78(uint64_t a1)
{
  return sub_1001385D4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100092E80()
{
  sub_10001C2EC(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_100092ED0()
{
  return sub_1000924FC((void *)(v0 + 16), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_100092EE8()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100092F28()
{
  return sub_100092578(*(void **)(v0 + 16));
}

uint64_t sub_100092F30(uint64_t a1)
{
  return sub_1000927EC(a1, v1);
}

uint64_t sub_100092F38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100019524(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100092F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030A508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100093004(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2)
  {
LABEL_5:
    return swift_bridgeObjectRetain();
  }
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_retain();
    goto LABEL_5;
  }
  return swift_retain();
}

uint64_t sub_100093070()
{
  return sub_10003C488(v2, v1, v0, 2);
}

uint64_t sub_100093090()
{
  return v0;
}

uint64_t sub_1000930A4()
{
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  *(_DWORD *)(v0 + 16) = 33686018;
  *(unsigned char *)(v0 + 20) = 2;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 40) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  return v0;
}

uint64_t sub_10009310C()
{
  return sub_100094CA8(*(unsigned char *)(v0 + 16));
}

uint64_t sub_100093114()
{
  return sub_100094CA8(*(unsigned char *)(v0 + 17));
}

uint64_t sub_10009311C()
{
  return sub_100094CA8(*(unsigned char *)(v0 + 18));
}

uint64_t sub_100093124()
{
  return sub_100094CA8(*(unsigned char *)(v0 + 19));
}

uint64_t sub_10009312C()
{
  return sub_100094CA8(*(unsigned char *)(v0 + 20));
}

uint64_t sub_100093134()
{
  return sub_100094D44();
}

uint64_t sub_10009317C()
{
  return sub_100094D44();
}

void sub_1000931C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 40);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v20 = a2;
    swift_bridgeObjectRetain_n();
    uint64_t v13 = 0;
    uint64_t v21 = v11;
    while (1)
    {
      uint64_t v23 = v12;
      uint64_t v6 = *(void *)(v11 + v13 + 32);
      uint64_t v12 = *(void *)(v11 + v13 + 40);
      uint64_t v8 = *(void *)(v11 + v13 + 48);
      uint64_t v3 = *(void *)(v11 + v13 + 56);
      uint64_t v4 = *(void *)(v11 + v13 + 64);
      uint64_t v5 = *(void *)(v11 + v13 + 72);
      uint64_t v7 = *(void *)(v11 + v13 + 80);
      sub_100094D50();
      switch(a1)
      {
        case 0:
          break;
        case 1:
          sub_100094D30();
          break;
        case 2:
          sub_100094D08();
          break;
        case 3:
          sub_100094CF4();
          break;
        case 4:
          unint64_t v16 = 0x800000010027C4D0;
          unint64_t v14 = 0xD000000000000013;
          break;
        case 5:
          sub_100094CE0();
          break;
        case 6:
          unint64_t v14 = 0xD00000000000001ALL;
          long long v17 = "Refund Request Sheet";
          goto LABEL_13;
        case 7:
          unint64_t v14 = 0xD000000000000014;
          long long v17 = "Offer Code Redeem Sheet";
          goto LABEL_13;
        case 8:
          unint64_t v14 = 0xD000000000000017;
          long long v17 = "7OctaneConfigurationSettings";
LABEL_13:
          unint64_t v16 = (unint64_t)v17 | 0x8000000000000000;
          break;
        default:
          unint64_t v14 = 0;
          unint64_t v16 = 0xE000000000000000;
          break;
      }
      char v22 = v15;
      if (v6 == v14 && v12 == v16)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100094D64();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      char v24 = sub_10024FA60();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100094D64();
      swift_bridgeObjectRelease();
      if (v24) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10008C7E4(v3, v4);
      v13 += 64;
      uint64_t v12 = v23 - 1;
      uint64_t v11 = v21;
      if (v23 == 1)
      {
        swift_bridgeObjectRelease_n();
        sub_100094C74();
        a2 = v20;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_24:
    a2 = v20;
    char v19 = v22;
  }
  else
  {
    sub_100094C74();
  }
LABEL_25:
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v7;
  *(unsigned char *)(a2 + 56) = v19;
}

uint64_t sub_1000934A4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  for (i = (uint64_t *)(v3 + 40); ; i += 8)
  {
    uint64_t v7 = *i;
    unint64_t v8 = 0xED00007374637564;
    sub_100094D50();
    switch(a1)
    {
      case 0:
        break;
      case 1:
        unint64_t v8 = 0xE800000000000000;
        sub_100094D30();
        break;
      case 2:
        unint64_t v8 = 0xEC0000006E6F6974;
        sub_100094D08();
        break;
      case 3:
        unint64_t v8 = 0xEE00636E79532065;
        sub_100094CF4();
        break;
      case 4:
        unint64_t v8 = 0x800000010027C4D0;
        unint64_t v10 = 0xD000000000000013;
        break;
      case 5:
        unint64_t v8 = 0xEF6E6F6974636173;
        sub_100094CE0();
        break;
      case 6:
        unint64_t v10 = 0xD00000000000001ALL;
        unint64_t v8 = 0x800000010027C4B0;
        break;
      case 7:
        unint64_t v10 = 0xD000000000000014;
        unint64_t v8 = 0x800000010027C490;
        break;
      case 8:
        unint64_t v10 = 0xD000000000000017;
        unint64_t v8 = 0x800000010027C470;
        break;
      default:
        unint64_t v10 = 0;
        unint64_t v8 = 0xE000000000000000;
        break;
    }
    if (v9 == v10 && v7 == v8) {
      break;
    }
    char v12 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_22;
    }
    if (v4 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
LABEL_22:
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1000936D4(char a1, uint64_t a2)
{
  uint64_t v4 = sub_1000934A4(a2);
  if ((v5 & 1) == 0)
  {
    unint64_t v6 = v4;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v2 + 40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 40) = v7;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v6 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1001A8C28();
      uint64_t v7 = v9;
      *(void *)(v2 + 40) = v9;
      if ((v6 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v6 < *(void *)(v7 + 16))
        {
          *(unsigned char *)(v7 + (v6 << 6) + 88) = a1 & 1;
          swift_endAccess();
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_100093788(uint64_t a1)
{
  sub_1000931C0(a1, (uint64_t)v5);
  sub_1000948C0((uint64_t)v5, (uint64_t)v6, &qword_10030D7E0);
  if (!*((void *)&v6[0] + 1)) {
    return 0;
  }
  void v7[2] = v6[0];
  long long v8 = v6[1];
  v9[0] = v7[0];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v7 + 9);
  sub_1000948C0((uint64_t)&v8 + 8, (uint64_t)v10, &qword_10030DD80);
  uint64_t result = sub_1000948C0((uint64_t)v10, (uint64_t)v11, &qword_10030DD80);
  if (!v12)
  {
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v14 < *(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_100094D44();
    uint64_t v4 = sub_10014B420(v2, v3);
LABEL_8:
    sub_10008C730(v5);
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009388C(uint64_t a1)
{
  sub_1000931C0(a1, (uint64_t)v5);
  sub_1000948C0((uint64_t)v5, (uint64_t)v6, &qword_10030D7E0);
  if (!*((void *)&v6[0] + 1)) {
    return 1;
  }
  void v7[2] = v6[0];
  _OWORD v7[3] = v6[1];
  v8[0] = v7[0];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v7 + 9);
  uint64_t v1 = sub_100201EFC();
  char v3 = v2;
  sub_10008C730(v5);
  if (v3) {
    return 1;
  }
  return v1;
}

void sub_100093910(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1000934A4(a3);
  if ((v7 & 1) == 0)
  {
    unint64_t v8 = v6;
    swift_beginAccess();
    uint64_t v9 = *(void *)(v3 + 40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v3 + 40) = v9;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v8 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1001A8C28();
      uint64_t v9 = v11;
      *(void *)(v3 + 40) = v11;
      if ((v8 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v8 < *(void *)(v9 + 16))
        {
          sub_100201FE4(a1, a2 & 1);
          swift_endAccess();
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_1000939D0()
{
  if (*(unsigned char *)(v0 + 72)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 64);
  }
}

uint64_t sub_1000939E4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D71C0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xB) {
    return 11;
  }
  else {
    return v4;
  }
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_loop.getter()
{
  return 11;
}

unint64_t sub_100093A3C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0x656C62617369645FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x656C61636F6C5FLL;
      break;
    case 7:
    case 8:
      unint64_t result = 0x694B65726F74735FLL;
      break;
    case 9:
      unint64_t result = 0x726665726F74735FLL;
      break;
    case 10:
      unint64_t result = 0x746152656D69745FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100093BA0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0x656C62617369645FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x656C61636F6C5FLL;
      break;
    case 7:
    case 8:
      unint64_t result = 0x694B65726F74735FLL;
      break;
    case 9:
      unint64_t result = 0x726665726F74735FLL;
      break;
    case 10:
      unint64_t result = 0x746152656D69745FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100093D04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F8B74(*a1, *a2);
}

Swift::Int sub_100093D10()
{
  return sub_1001D34E0(*v0);
}

uint64_t sub_100093D18(uint64_t a1)
{
  return sub_1000D0950(a1, *v1);
}

Swift::Int sub_100093D20(uint64_t a1)
{
  return sub_1000D2B4C(a1, *v1);
}

uint64_t sub_100093D28@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000939E4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_100093D58@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100093A3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100093D84()
{
  return sub_100093BA0(*v0);
}

uint64_t sub_100093D8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100093A30();
  *a1 = result;
  return result;
}

uint64_t sub_100093DB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOBSDSocket.Option.ipv6_multicast_loop.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100093DDC(uint64_t a1)
{
  unint64_t v2 = sub_1000946D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100093E18(uint64_t a1)
{
  unint64_t v2 = sub_1000946D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100093E54(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_100093EA4(a1);
  return v2;
}

uint64_t sub_100093EA4(void *a1)
{
  uint64_t v4 = v1;
  sub_100019524(&qword_10030DD48);
  sub_100094C34();
  uint64_t v20 = v6;
  __chkstk_darwin(v7, v8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 16) = 33686018;
  *(unsigned char *)(v1 + 20) = 2;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 72) = 1;
  sub_10001C2A8(a1, a1[3]);
  sub_1000946D0();
  sub_10024FD20();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for OctaneConfigurationSettings();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v20;
    LOBYTE(v21) = 0;
    sub_100094C94();
    *(unsigned char *)(v1 + 16) = sub_10024F840() & 1;
    *(unsigned char *)(v1 + 17) = sub_100094C54(1) & 1;
    *(unsigned char *)(v1 + 18) = sub_100094C54(2) & 1;
    *(unsigned char *)(v1 + 19) = sub_100094C54(3) & 1;
    *(unsigned char *)(v1 + 20) = sub_100094C54(4) & 1;
    LOBYTE(v21) = 6;
    *(void *)(v1 + 24) = sub_10024F830();
    *(void *)(v1 + 32) = v12;
    swift_bridgeObjectRelease();
    sub_100019524(&qword_10030DD50);
    char v23 = 8;
    sub_100094768(&qword_10030DD58, &qword_10030DD50, (void (*)(void))sub_1000947D4);
    sub_100094BE0();
    uint64_t v13 = v21;
    if (!v21)
    {
      if (qword_100308E08 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_10034C108;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(v4 + 40) = v13;
    LOBYTE(v21) = 9;
    sub_100094C94();
    *(void *)(v4 + 48) = sub_10024F830();
    *(void *)(v4 + 56) = v14;
    swift_bridgeObjectRelease();
    LOBYTE(v21) = 10;
    sub_100094C94();
    *(void *)(v4 + 64) = sub_10024F850();
    *(unsigned char *)(v4 + 72) = 0;
    sub_100093788(1);
    if (v15)
    {
      sub_100019524(&qword_10030C9E0);
      char v23 = 5;
      sub_10009485C(&qword_10030DD70, &qword_10030C9E0);
      sub_100094BE0();
      if (v21)
      {
        sub_100019524(&qword_10030C9F0);
        char v23 = 7;
        sub_10009485C(&qword_10030DD78, &qword_10030C9F0);
        sub_100094BE0();
        if ((v22 & 1) == 0)
        {
          sub_1000936D4(1, 1);
          unint64_t v17 = sub_10020205C();
          sub_100093910(v17, v18 & 1, 1);
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v3);
  }
  sub_10001C2EC((uint64_t)a1);
  return v4;
}

uint64_t sub_10009431C(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  sub_100019524(&qword_10030DD20);
  sub_100094C34();
  __chkstk_darwin(v6, v7);
  sub_10001C2A8(a1, a1[3]);
  sub_1000946D0();
  sub_10024FD40();
  if (*(unsigned char *)(v4 + 16) == 2 || (sub_10024F950(), !v2))
  {
    if (*(unsigned char *)(v4 + 17) == 2 || (sub_100094C10(1), (uint64_t v3 = v2) == 0))
    {
      if (*(unsigned char *)(v4 + 18) == 2 || (sub_100094C10(2), (uint64_t v3 = v2) == 0))
      {
        if (*(unsigned char *)(v4 + 19) == 2 || (sub_100094C10(3), (uint64_t v3 = v2) == 0))
        {
          if (*(unsigned char *)(v4 + 20) == 2 || (sub_100094C10(4), (uint64_t v3 = v2) == 0))
          {
            if (*(void *)(v4 + 32))
            {
              uint64_t v8 = *(void *)(v4 + 24);
              swift_bridgeObjectRetain();
              sub_100094CBC();
              uint64_t v3 = v8;
              if (v8)
              {
LABEL_13:
                uint64_t v9 = sub_100094D1C();
                v10(v9);
                return swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
            }
            swift_beginAccess();
            sub_100019524(&qword_10030DD30);
            sub_100094768(&qword_10030DD38, &qword_10030DD30, (void (*)(void))sub_10009471C);
            sub_10024F980();
            if (!v3)
            {
              if (*(void *)(v4 + 56))
              {
                uint64_t v14 = *(void *)(v4 + 48);
                swift_bridgeObjectRetain();
                sub_100094CBC();
                if (v14) {
                  goto LABEL_13;
                }
                swift_bridgeObjectRelease();
              }
              if (*(unsigned char *)(v4 + 72) != 1) {
                sub_10024F960();
              }
            }
          }
        }
      }
    }
  }
  uint64_t v12 = sub_100094D1C();
  return v13(v12);
}

uint64_t sub_1000945F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100094628()
{
  sub_1000945F8();
  return _swift_deallocClassInstance(v0, 73, 7);
}

uint64_t type metadata accessor for OctaneConfigurationSettings()
{
  return self;
}

uint64_t sub_100094680@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100093E54(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000946AC(void *a1)
{
  return sub_10009431C(a1);
}

unint64_t sub_1000946D0()
{
  unint64_t result = qword_10030DD28;
  if (!qword_10030DD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DD28);
  }
  return result;
}

unint64_t sub_10009471C()
{
  unint64_t result = qword_10030DD40;
  if (!qword_10030DD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DD40);
  }
  return result;
}

uint64_t sub_100094768(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000947D4()
{
  return sub_100094768(&qword_10030DD60, &qword_10030DD30, (void (*)(void))sub_100094810);
}

unint64_t sub_100094810()
{
  unint64_t result = qword_10030DD68;
  if (!qword_10030DD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DD68);
  }
  return result;
}

uint64_t sub_10009485C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000948C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  uint64_t v4 = sub_100094D44();
  v5(v4);
  return a2;
}

uint64_t sub_100094920(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OctaneConfigurationSettings.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for OctaneConfigurationSettings.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100094AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneConfigurationSettings.CodingKeys()
{
  return &type metadata for OctaneConfigurationSettings.CodingKeys;
}

unint64_t sub_100094AF4()
{
  unint64_t result = qword_10030DD88;
  if (!qword_10030DD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DD88);
  }
  return result;
}

unint64_t sub_100094B44()
{
  unint64_t result = qword_10030DD90;
  if (!qword_10030DD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DD90);
  }
  return result;
}

unint64_t sub_100094B94()
{
  unint64_t result = qword_10030DD98;
  if (!qword_10030DD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030DD98);
  }
  return result;
}

uint64_t sub_100094BE0()
{
  return sub_10024F870();
}

uint64_t sub_100094C10@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_10024F950();
}

uint64_t sub_100094C54@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_10024F840();
}

uint64_t sub_100094C94()
{
  return v0 - 96;
}

uint64_t sub_100094CA8@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

uint64_t sub_100094CBC()
{
  return sub_10024F940();
}

uint64_t sub_100094D1C()
{
  return v0;
}

uint64_t sub_100094D44()
{
  return v0;
}

uint64_t sub_100094D64()
{
  return sub_100094920(v0, v1);
}

uint64_t sub_100094D84()
{
  swift_bridgeObjectRelease();
  sub_10006B3E8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001C2EC(v0 + 48);
  return v0;
}

__n128 sub_100094DB4@<Q0>(uint64_t a1@<X8>)
{
  sub_1000CB5C8(0x6D656C706D696E55, 0xED00006465746E65, 6, (uint64_t)&v13);
  __n128 v12 = v13;
  uint64_t v2 = v14;
  uint64_t v3 = v15;
  int v4 = v16;
  __int16 v5 = v17;
  char v6 = v18;
  unsigned int v7 = HTTPVersion.init(major:minor:)(1, 1);
  Swift::UInt16 v8 = v7;
  unsigned int v9 = HIWORD(v7);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 25;
  *(_WORD *)(v10 + 40) = v8;
  *(_WORD *)(v10 + 42) = v9;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 16) = 2;
  __n128 result = v12;
  *(__n128 *)(a1 + 24) = v12;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 62) = v6;
  *(_WORD *)(a1 + 60) = v5;
  *(_DWORD *)(a1 + 56) = v4;
  return result;
}

uint64_t sub_100094EA0()
{
  sub_100094D84();
  return _swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for ConfigurationBasedRoute()
{
  return self;
}

double sub_100094EF8@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(**(void **)v1 + 112))(v5);
  long long v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  a1[2] = v6[0];
  double result = *(double *)((char *)v6 + 15);
  *(_OWORD *)((char *)a1 + 47) = *(_OWORD *)((char *)v6 + 15);
  return result;
}

uint64_t sub_100094F64()
{
  return sub_10001C2EC(v0 + 88);
}

uint64_t sub_100094F6C()
{
  sub_100094D84();
  sub_10001C2EC(v0 + 88);
  return _swift_deallocClassInstance(v0, 128, 7);
}

uint64_t type metadata accessor for TransactionBasedRoute()
{
  return self;
}

uint64_t UnsafeEmbeddedAtomic.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100097664(a1, a2);
  char v6 = (uint64_t (*)(uint64_t))v5(v4);
  uint64_t v7 = v6(a1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v7;
}

uint64_t UnsafeEmbeddedAtomic.compareAndExchange(expected:desired:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  uint64_t v7 = sub_10009768C();
  char v9 = v8(v7, a1, a2);
  swift_release();
  return v9 & 1;
}

uint64_t UnsafeEmbeddedAtomic.add(_:)()
{
  sub_100097678();
  uint64_t v3 = sub_100097650(v0, v1, v2);
  v4(v3);
  uint64_t v5 = sub_100097634();
  v6(v5);
  return swift_release();
}

uint64_t UnsafeEmbeddedAtomic.sub(_:)()
{
  sub_100097678();
  uint64_t v3 = sub_100097650(v0, v1, v2);
  v4(v3);
  uint64_t v5 = sub_100097634();
  v6(v5);
  return swift_release();
}

uint64_t UnsafeEmbeddedAtomic.exchange(with:)()
{
  sub_100097678();
  uint64_t v3 = sub_100097650(v0, v1, v2);
  v4(v3);
  uint64_t v5 = sub_100097634();
  v6(v5);
  return swift_release();
}

uint64_t UnsafeEmbeddedAtomic.load()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100097664(a1, a2);
  uint64_t v5 = (void (*)(uint64_t))v4(v3);
  v5(a1);
  return swift_release();
}

uint64_t UnsafeEmbeddedAtomic.store(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100097650(a1, a2, a3);
  v5(v4);
  uint64_t v6 = sub_10009768C();
  v7(v6, a1);
  return swift_release();
}

Swift::Void __swiftcall UnsafeEmbeddedAtomic.destroy()()
{
  uint64_t v2 = sub_100097664(v0, v1);
  v3(v2);
  uint64_t v4 = sub_10009768C();
  v5(v4);
  swift_release();
}

uint64_t Atomic.embedded.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Atomic.__allocating_init(value:)()
{
  uint64_t v1 = sub_10009769C();
  Atomic.init(value:)(v0, v2);
  return v1;
}

void *Atomic.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - v6, a1, v4);
  uint64_t v8 = UnsafeEmbeddedAtomic.init(value:)((uint64_t)v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v2[2] = v8;
  return v2;
}

uint64_t Atomic.compareAndExchange(expected:desired:)(uint64_t a1, uint64_t a2)
{
  return UnsafeEmbeddedAtomic.compareAndExchange(expected:desired:)(a1, a2, v2[2], *(void *)(*v2 + 80), *(void *)(*v2 + 88));
}

uint64_t Atomic.add(_:)(uint64_t a1)
{
  return sub_1000954C0(a1, (uint64_t (*)(uint64_t, void, void, void))UnsafeEmbeddedAtomic.add(_:));
}

uint64_t Atomic.sub(_:)(uint64_t a1)
{
  return sub_1000954C0(a1, (uint64_t (*)(uint64_t, void, void, void))UnsafeEmbeddedAtomic.sub(_:));
}

uint64_t Atomic.exchange(with:)(uint64_t a1)
{
  return sub_1000954C0(a1, (uint64_t (*)(uint64_t, void, void, void))UnsafeEmbeddedAtomic.exchange(with:));
}

uint64_t sub_1000954C0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  return a2(a1, v2[2], *(void *)(*v2 + 80), *(void *)(*v2 + 88));
}

uint64_t Atomic.load()()
{
  return UnsafeEmbeddedAtomic.load()(v0[2], *(void *)(*v0 + 80));
}

uint64_t Atomic.store(_:)(uint64_t a1)
{
  return UnsafeEmbeddedAtomic.store(_:)(a1, v1[2], *(void *)(*v1 + 80));
}

uint64_t Atomic.deinit()
{
  UnsafeEmbeddedAtomic.destroy()();
  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  Atomic.deinit();
  return _swift_deallocClassInstance(v0, 24, 7);
}

unsigned char *sub_1000955E4(char a1)
{
  return sub_1000075C4(a1 & 1);
}

uint64_t (**Bool.atomic_create.unsafeMutableAddressor())()
{
  return &static Bool.atomic_create;
}

void static Bool.atomic_create.getter()
{
}

void (__cdecl **Bool.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static Bool.atomic_destroy;
}

void static UInt64.atomic_destroy.getter()
{
}

BOOL sub_100095638(atomic_uchar *a1, char a2, char a3)
{
  return sub_100007604(a1, a2 & 1, a3 & 1);
}

uint64_t (**Bool.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Bool.atomic_compare_and_exchange;
}

void static Bool.atomic_compare_and_exchange.getter()
{
}

uint64_t sub_10009567C(atomic_uchar *a1, char a2)
{
  return sub_100007618(a1, a2 & 1);
}

uint64_t (**Bool.atomic_add.unsafeMutableAddressor())()
{
  return &static Bool.atomic_add;
}

void static Bool.atomic_add.getter()
{
}

uint64_t sub_1000956BC(atomic_uchar *a1, char a2)
{
  return sub_100007624(a1, a2 & 1);
}

uint64_t (**Bool.atomic_sub.unsafeMutableAddressor())()
{
  return &static Bool.atomic_sub;
}

void static Bool.atomic_sub.getter()
{
}

uint64_t sub_1000956FC@<X0>(unsigned int *a1@<X0>, unsigned int a2@<W8>)
{
  return sub_100007634(a1, a2);
}

uint64_t (**Bool.atomic_exchange.unsafeMutableAddressor())()
{
  return &static Bool.atomic_exchange;
}

void static Bool.atomic_exchange.getter()
{
}

uint64_t sub_10009573C(unsigned char *a1)
{
  return sub_100007640(a1);
}

uint64_t (**Bool.atomic_load.unsafeMutableAddressor())()
{
  return &static Bool.atomic_load;
}

void static Bool.atomic_load.getter()
{
}

unsigned char *sub_100095778(unsigned char *a1, char a2)
{
  return sub_10000764C(a1, a2 & 1);
}

uint64_t (**Bool.atomic_store.unsafeMutableAddressor())()
{
  return &static Bool.atomic_store;
}

void static Bool.atomic_store.getter()
{
}

unsigned char *(*sub_1000957A4())(char *a1)
{
  return sub_1000957C0;
}

unsigned char *sub_1000957C0(char *a1)
{
  return sub_1000955E4(*a1);
}

void (__cdecl *sub_1000957C8())(void *)
{
  return j_j__free_0;
}

BOOL (*sub_1000957E4())(atomic_uchar *a1, char *a2, char *a3)
{
  return sub_100095800;
}

BOOL sub_100095800(atomic_uchar *a1, char *a2, char *a3)
{
  return sub_100095638(a1, *a2, *a3);
}

uint64_t (*sub_10009580C())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095828;
}

uint64_t sub_100095828@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10009567C(a1, *a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100095858@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000956BC(a1, *a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100095888@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000956FC(a1, a2);
  *a2 = result & 1;
  return result;
}

uint64_t (*sub_1000958B8())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095858;
}

uint64_t (*sub_1000958D4())@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095888;
}

uint64_t (*sub_1000958F0())@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10009590C;
}

uint64_t sub_10009590C@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10009573C(a1);
  *a2 = result & 1;
  return result;
}

unsigned char *(*sub_100095938())(unsigned char *a1, char *a2)
{
  return sub_100095954;
}

unsigned char *sub_100095954(unsigned char *a1, char *a2)
{
  return sub_100095778(a1, *a2);
}

unsigned char *sub_10009595C(char a1)
{
  return sub_1000075C4(a1);
}

uint64_t (**Int8.atomic_create.unsafeMutableAddressor())()
{
  return &static Int8.atomic_create;
}

void static Int8.atomic_create.getter()
{
}

void (__cdecl **Int8.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static Int8.atomic_destroy;
}

BOOL sub_100095994(atomic_uchar *a1, char a2, unsigned __int8 a3)
{
  return sub_100007654(a1, a2, a3);
}

uint64_t (**Int8.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int8.atomic_compare_and_exchange;
}

void static Int8.atomic_compare_and_exchange.getter()
{
}

uint64_t sub_1000959D8(atomic_uchar *a1, unsigned __int8 a2)
{
  return sub_100007668(a1, a2);
}

uint64_t (**Int8.atomic_add.unsafeMutableAddressor())()
{
  return &static Int8.atomic_add;
}

void static Int8.atomic_add.getter()
{
}

uint64_t sub_100095A18(atomic_uchar *a1, char a2)
{
  return sub_100007674(a1, a2);
}

uint64_t (**Int8.atomic_sub.unsafeMutableAddressor())()
{
  return &static Int8.atomic_sub;
}

void static Int8.atomic_sub.getter()
{
}

uint64_t sub_100095A58@<X0>(unsigned int *a1@<X0>, unsigned int a2@<W8>)
{
  return sub_100007684(a1, a2);
}

uint64_t (**Int8.atomic_exchange.unsafeMutableAddressor())()
{
  return &static Int8.atomic_exchange;
}

void static Int8.atomic_exchange.getter()
{
}

uint64_t sub_100095A98(char *a1)
{
  return sub_100007690(a1);
}

uint64_t (**Int8.atomic_load.unsafeMutableAddressor())()
{
  return &static Int8.atomic_load;
}

void static Int8.atomic_load.getter()
{
}

unsigned char *sub_100095AD4(unsigned char *a1, char a2)
{
  return sub_10000764C(a1, a2);
}

uint64_t (**Int8.atomic_store.unsafeMutableAddressor())()
{
  return &static Int8.atomic_store;
}

void static Int8.atomic_store.getter()
{
}

unsigned char *(*sub_100095B00())(char *a1)
{
  return sub_100095B1C;
}

unsigned char *sub_100095B1C(char *a1)
{
  return sub_10009595C(*a1);
}

BOOL (*sub_100095B24())(atomic_uchar *a1, char *a2, unsigned __int8 *a3)
{
  return sub_100095B40;
}

BOOL sub_100095B40(atomic_uchar *a1, char *a2, unsigned __int8 *a3)
{
  return sub_100095994(a1, *a2, *a3);
}

uint64_t (*sub_100095B4C())@<X0>(atomic_uchar *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095B68;
}

uint64_t sub_100095B68@<X0>(atomic_uchar *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000959D8(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_100095B94@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100095A18(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_100095BC0@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100095A58(a1, a2);
  *a2 = result;
  return result;
}

uint64_t (*sub_100095BEC())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095B94;
}

uint64_t (*sub_100095C08())@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095BC0;
}

uint64_t (*sub_100095C24())@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095C40;
}

uint64_t sub_100095C40@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100095A98(a1);
  *a2 = result;
  return result;
}

unsigned char *(*sub_100095C68())(unsigned char *a1, char *a2)
{
  return sub_100095C84;
}

unsigned char *sub_100095C84(unsigned char *a1, char *a2)
{
  return sub_100095AD4(a1, *a2);
}

unsigned char *sub_100095C8C(char a1)
{
  return sub_1000075C4(a1);
}

uint64_t (**UInt8.atomic_create.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_create;
}

void static UInt8.atomic_create.getter()
{
}

void (__cdecl **UInt8.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static UInt8.atomic_destroy;
}

BOOL sub_100095CC4(atomic_uchar *a1, unsigned __int8 a2, unsigned __int8 a3)
{
  return sub_100007604(a1, a2, a3);
}

uint64_t (**UInt8.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_compare_and_exchange;
}

void static UInt8.atomic_compare_and_exchange.getter()
{
}

uint64_t sub_100095D08(atomic_uchar *a1, unsigned __int8 a2)
{
  return sub_100007820(a1, a2);
}

uint64_t (**UInt8.atomic_add.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_add;
}

void static UInt8.atomic_add.getter()
{
}

uint64_t sub_100095D48(atomic_uchar *a1, char a2)
{
  return sub_100007828(a1, a2);
}

uint64_t (**UInt8.atomic_sub.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_sub;
}

void static UInt8.atomic_sub.getter()
{
}

unsigned int *sub_100095D88(unsigned int *a1)
{
  return sub_100007834(a1);
}

uint64_t (**UInt8.atomic_exchange.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_exchange;
}

void static UInt8.atomic_exchange.getter()
{
}

uint64_t sub_100095DC8(unsigned __int8 *a1)
{
  return sub_10000783C(a1);
}

uint64_t (**UInt8.atomic_load.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_load;
}

void static UInt8.atomic_load.getter()
{
}

unsigned char *sub_100095E04(unsigned char *a1, char a2)
{
  return sub_10000764C(a1, a2);
}

uint64_t (**UInt8.atomic_store.unsafeMutableAddressor())()
{
  return &static UInt8.atomic_store;
}

void static UInt8.atomic_store.getter()
{
}

unsigned char *(*sub_100095E30())(char *a1)
{
  return sub_100095E4C;
}

unsigned char *sub_100095E4C(char *a1)
{
  return sub_100095C8C(*a1);
}

BOOL (*sub_100095E54())(atomic_uchar *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return sub_100095E70;
}

BOOL sub_100095E70(atomic_uchar *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return sub_100095CC4(a1, *a2, *a3);
}

uint64_t (*sub_100095E7C())@<X0>(atomic_uchar *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095E98;
}

uint64_t sub_100095E98@<X0>(atomic_uchar *a1@<X0>, unsigned __int8 *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100095D08(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_100095EC4@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100095D48(a1, *a2);
  *a3 = result;
  return result;
}

unsigned int *sub_100095EF0@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100095D88(a1);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t (*sub_100095F1C())@<X0>(atomic_uchar *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_100095EC4;
}

unsigned int *(*sub_100095F38())@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095EF0;
}

uint64_t (*sub_100095F54())@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100095F70;
}

uint64_t sub_100095F70@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100095DC8(a1);
  *a2 = result;
  return result;
}

unsigned char *(*sub_100095F98())(unsigned char *a1, char *a2)
{
  return sub_100095FB4;
}

unsigned char *sub_100095FB4(unsigned char *a1, char *a2)
{
  return sub_100095E04(a1, *a2);
}

_WORD *sub_100095FBC(__int16 a1)
{
  return sub_10000769C(a1);
}

uint64_t (**Int16.atomic_create.unsafeMutableAddressor())()
{
  return &static Int16.atomic_create;
}

void static Int16.atomic_create.getter()
{
}

void (__cdecl **Int16.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static Int16.atomic_destroy;
}

BOOL sub_100095FF4(atomic_ushort *a1, __int16 a2, unsigned __int16 a3)
{
  return sub_1000076D8(a1, a2, a3);
}

uint64_t (**Int16.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int16.atomic_compare_and_exchange;
}

void static Int16.atomic_compare_and_exchange.getter()
{
}

uint64_t sub_100096038(atomic_ushort *a1, unsigned __int16 a2)
{
  return sub_1000076EC(a1, a2);
}

uint64_t (**Int16.atomic_add.unsafeMutableAddressor())()
{
  return &static Int16.atomic_add;
}

void static Int16.atomic_add.getter()
{
}

uint64_t sub_100096078(atomic_ushort *a1, __int16 a2)
{
  return sub_1000076F8(a1, a2);
}

uint64_t (**Int16.atomic_sub.unsafeMutableAddressor())()
{
  return &static Int16.atomic_sub;
}

void static Int16.atomic_sub.getter()
{
}

uint64_t sub_1000960B8@<X0>(unsigned int *a1@<X0>, unsigned int a2@<W8>)
{
  return sub_100007708(a1, a2);
}

uint64_t (**Int16.atomic_exchange.unsafeMutableAddressor())()
{
  return &static Int16.atomic_exchange;
}

void static Int16.atomic_exchange.getter()
{
}

uint64_t sub_1000960F8(__int16 *a1)
{
  return sub_100007714(a1);
}

uint64_t (**Int16.atomic_load.unsafeMutableAddressor())()
{
  return &static Int16.atomic_load;
}

void static Int16.atomic_load.getter()
{
}

_WORD *sub_100096134(_WORD *a1, __int16 a2)
{
  return sub_100007720(a1, a2);
}

uint64_t (**Int16.atomic_store.unsafeMutableAddressor())()
{
  return &static Int16.atomic_store;
}

void static Int16.atomic_store.getter()
{
}

_WORD *(*sub_100096160())(__int16 *a1)
{
  return sub_10009617C;
}

_WORD *sub_10009617C(__int16 *a1)
{
  return sub_100095FBC(*a1);
}

BOOL (*sub_100096184())(atomic_ushort *a1, __int16 *a2, unsigned __int16 *a3)
{
  return sub_1000961A0;
}

BOOL sub_1000961A0(atomic_ushort *a1, __int16 *a2, unsigned __int16 *a3)
{
  return sub_100095FF4(a1, *a2, *a3);
}

uint64_t (*sub_1000961AC())@<X0>(atomic_ushort *a1@<X0>, unsigned __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_1000961C8;
}

uint64_t sub_1000961C8@<X0>(atomic_ushort *a1@<X0>, unsigned __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t result = sub_100096038(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000961F4@<X0>(atomic_ushort *a1@<X0>, __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t result = sub_100096078(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_100096220@<X0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_1000960B8(a1, a2);
  *a2 = result;
  return result;
}

uint64_t (*sub_10009624C())@<X0>(atomic_ushort *a1@<X0>, __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_1000961F4;
}

uint64_t (*sub_100096268())@<X0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_100096220;
}

uint64_t (*sub_100096284())@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_1000962A0;
}

uint64_t sub_1000962A0@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_1000960F8(a1);
  *a2 = result;
  return result;
}

_WORD *(*sub_1000962C8())(_WORD *a1, __int16 *a2)
{
  return sub_1000962E4;
}

_WORD *sub_1000962E4(_WORD *a1, __int16 *a2)
{
  return sub_100096134(a1, *a2);
}

_WORD *sub_1000962EC(__int16 a1)
{
  return sub_10000769C(a1);
}

uint64_t (**UInt16.atomic_create.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_create;
}

void static UInt16.atomic_create.getter()
{
}

void (__cdecl **UInt16.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static UInt16.atomic_destroy;
}

BOOL sub_100096324(atomic_ushort *a1, unsigned __int16 a2, unsigned __int16 a3)
{
  return sub_100007844(a1, a2, a3);
}

uint64_t (**UInt16.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_compare_and_exchange;
}

void static UInt16.atomic_compare_and_exchange.getter()
{
}

uint64_t sub_100096368(atomic_ushort *a1, unsigned __int16 a2)
{
  return sub_100007858(a1, a2);
}

uint64_t (**UInt16.atomic_add.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_add;
}

void static UInt16.atomic_add.getter()
{
}

uint64_t sub_1000963A8(atomic_ushort *a1, __int16 a2)
{
  return sub_100007860(a1, a2);
}

uint64_t (**UInt16.atomic_sub.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_sub;
}

void static UInt16.atomic_sub.getter()
{
}

unsigned int *sub_1000963E8(unsigned int *a1)
{
  return sub_10000786C(a1);
}

uint64_t (**UInt16.atomic_exchange.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_exchange;
}

void static UInt16.atomic_exchange.getter()
{
}

uint64_t sub_100096428(unsigned __int16 *a1)
{
  return sub_100007874(a1);
}

uint64_t (**UInt16.atomic_load.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_load;
}

void static UInt16.atomic_load.getter()
{
}

_WORD *sub_100096464(_WORD *a1, __int16 a2)
{
  return sub_100007720(a1, a2);
}

uint64_t (**UInt16.atomic_store.unsafeMutableAddressor())()
{
  return &static UInt16.atomic_store;
}

void static UInt16.atomic_store.getter()
{
}

_WORD *(*sub_100096490())(__int16 *a1)
{
  return sub_1000964AC;
}

_WORD *sub_1000964AC(__int16 *a1)
{
  return sub_1000962EC(*a1);
}

BOOL (*sub_1000964B4())(atomic_ushort *a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  return sub_1000964D0;
}

BOOL sub_1000964D0(atomic_ushort *a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  return sub_100096324(a1, *a2, *a3);
}

uint64_t (*sub_1000964DC())@<X0>(atomic_ushort *a1@<X0>, unsigned __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_1000964F8;
}

uint64_t sub_1000964F8@<X0>(atomic_ushort *a1@<X0>, unsigned __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t result = sub_100096368(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_100096524@<X0>(atomic_ushort *a1@<X0>, __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t result = sub_1000963A8(a1, *a2);
  *a3 = result;
  return result;
}

unsigned int *sub_100096550@<X0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_1000963E8(a1);
  *a2 = (_WORD)result;
  return result;
}

uint64_t (*sub_10009657C())@<X0>(atomic_ushort *a1@<X0>, __int16 *a2@<X1>, _WORD *a3@<X8>)
{
  return sub_100096524;
}

unsigned int *(*sub_100096598())@<X0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_100096550;
}

uint64_t (*sub_1000965B4())@<X0>(unsigned __int16 *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_1000965D0;
}

uint64_t sub_1000965D0@<X0>(unsigned __int16 *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_100096428(a1);
  *a2 = result;
  return result;
}

_WORD *(*sub_1000965F8())(_WORD *a1, __int16 *a2)
{
  return sub_100096614;
}

_WORD *sub_100096614(_WORD *a1, __int16 *a2)
{
  return sub_100096464(a1, *a2);
}

uint64_t (**Int32.atomic_create.unsafeMutableAddressor())()
{
  return &static Int32.atomic_create;
}

void static Int32.atomic_create.getter()
{
}

void (__cdecl **Int32.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static Int32.atomic_destroy;
}

BOOL sub_100096650(atomic_uint *a1, int a2, unsigned int a3)
{
  return sub_100007764(a1, a2, a3);
}

uint64_t (**Int32.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int32.atomic_compare_and_exchange;
}

void static Int32.atomic_compare_and_exchange.getter()
{
}

uint64_t (**Int32.atomic_add.unsafeMutableAddressor())(atomic_uint *, unsigned int)
{
  return &static Int32.atomic_add;
}

void static Int32.atomic_add.getter()
{
}

uint64_t (**Int32.atomic_sub.unsafeMutableAddressor())(atomic_uint *, int)
{
  return &static Int32.atomic_sub;
}

void static Int32.atomic_sub.getter()
{
}

unsigned int *(**Int32.atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static Int32.atomic_exchange;
}

void static Int32.atomic_exchange.getter()
{
}

uint64_t (**Int32.atomic_load.unsafeMutableAddressor())(unsigned int *)
{
  return &static Int32.atomic_load;
}

void static Int32.atomic_load.getter()
{
}

_DWORD *(**Int32.atomic_store.unsafeMutableAddressor())(_DWORD *result, int)
{
  return &static Int32.atomic_store;
}

void static Int32.atomic_store.getter()
{
}

uint64_t (*sub_100096754())(unsigned int *a1)
{
  return sub_100096770;
}

uint64_t sub_100096770(unsigned int *a1)
{
  return sub_10009661C(*a1);
}

BOOL (*sub_100096778())(atomic_uint *a1, int *a2, unsigned int *a3)
{
  return sub_100096794;
}

BOOL sub_100096794(atomic_uint *a1, int *a2, unsigned int *a3)
{
  return sub_100096650(a1, *a2, *a3);
}

uint64_t (*sub_1000967A0())@<X0>(atomic_uint *a1@<X0>, unsigned int *a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_1000967BC;
}

uint64_t sub_1000967BC@<X0>(atomic_uint *a1@<X0>, unsigned int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = sub_10009668C(a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000967E8@<X0>(atomic_uint *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = sub_1000966B4(a1, *a2);
  *a3 = result;
  return result;
}

unsigned int *sub_100096814@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000966DC(a1);
  *a2 = result;
  return result;
}

uint64_t (*sub_100096840())@<X0>(atomic_uint *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_1000967E8;
}

unsigned int *(*sub_10009685C())@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100096814;
}

uint64_t (*sub_100096878())@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100096894;
}

uint64_t sub_100096894@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_100096704(a1);
  *a2 = result;
  return result;
}

_DWORD *(*sub_1000968BC())(_DWORD *a1, int *a2)
{
  return sub_1000968D8;
}

_DWORD *sub_1000968D8(_DWORD *a1, int *a2)
{
  return sub_10009672C(a1, *a2);
}

uint64_t (**UInt32.atomic_create.unsafeMutableAddressor())()
{
  return &static UInt32.atomic_create;
}

void static UInt32.atomic_create.getter()
{
}

void (__cdecl **UInt32.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static UInt32.atomic_destroy;
}

uint64_t (**UInt32.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt32.atomic_compare_and_exchange;
}

void static UInt32.atomic_compare_and_exchange.getter()
{
}

uint64_t (**UInt32.atomic_add.unsafeMutableAddressor())(atomic_uint *, unsigned int)
{
  return &static UInt32.atomic_add;
}

void static UInt32.atomic_add.getter()
{
}

uint64_t (**UInt32.atomic_sub.unsafeMutableAddressor())(atomic_uint *, int)
{
  return &static UInt32.atomic_sub;
}

void static UInt32.atomic_sub.getter()
{
}

unsigned int *(**UInt32.atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static UInt32.atomic_exchange;
}

void static UInt32.atomic_exchange.getter()
{
}

uint64_t (**UInt32.atomic_load.unsafeMutableAddressor())(unsigned int *)
{
  return &static UInt32.atomic_load;
}

void static UInt32.atomic_load.getter()
{
}

_DWORD *(**UInt32.atomic_store.unsafeMutableAddressor())(_DWORD *result, int)
{
  return &static UInt32.atomic_store;
}

void static UInt32.atomic_store.getter()
{
}

uint64_t (**Int64.atomic_create.unsafeMutableAddressor())()
{
  return &static Int64.atomic_create;
}

void static Int64.atomic_create.getter()
{
}

void (__cdecl **Int64.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static Int64.atomic_destroy;
}

BOOL sub_100096A1C(atomic_ullong *a1, uint64_t a2, unint64_t a3)
{
  return sub_1000077E0(a1, a2, a3);
}

uint64_t (**Int64.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int64.atomic_compare_and_exchange;
}

void static Int64.atomic_compare_and_exchange.getter()
{
}

unint64_t (**Int64.atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static Int64.atomic_add;
}

void static Int64.atomic_add.getter()
{
}

unint64_t (**Int64.atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static Int64.atomic_sub;
}

void static Int64.atomic_sub.getter()
{
}

unsigned int *(**Int64.atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static Int64.atomic_exchange;
}

void static Int64.atomic_exchange.getter()
{
}

uint64_t (**Int64.atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static Int64.atomic_load;
}

void static Int64.atomic_load.getter()
{
}

void *(**Int64.atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static Int64.atomic_store;
}

void static Int64.atomic_store.getter()
{
}

uint64_t (*sub_100096B20())(void *a1)
{
  return sub_100096B3C;
}

uint64_t sub_100096B3C(void *a1)
{
  return sub_1000969E8(*a1);
}

BOOL (*sub_100096B44())(atomic_ullong *a1, uint64_t *a2, unint64_t *a3)
{
  return sub_100096B60;
}

BOOL sub_100096B60(atomic_ullong *a1, uint64_t *a2, unint64_t *a3)
{
  return sub_100096A1C(a1, *a2, *a3);
}

unint64_t (*sub_100096B6C())@<X0>(atomic_ullong *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_100096B88;
}

unint64_t sub_100096B88@<X0>(atomic_ullong *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_100096A58(a1, *a2);
  *a3 = result;
  return result;
}

unint64_t sub_100096BB4@<X0>(atomic_ullong *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_100096A80(a1, *a2);
  *a3 = result;
  return result;
}

unsigned int *sub_100096BE0@<X0>(unsigned int *a1@<X0>, unsigned int **a2@<X8>)
{
  unint64_t result = sub_100096AA8(a1);
  *a2 = result;
  return result;
}

unint64_t (*sub_100096C0C())@<X0>(atomic_ullong *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_100096BB4;
}

unsigned int *(*sub_100096C28())@<X0>(unsigned int *a1@<X0>, unsigned int **a2@<X8>)
{
  return sub_100096BE0;
}

uint64_t (*sub_100096C44())@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100096C60;
}

uint64_t sub_100096C60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100096AD0(a1);
  *a2 = result;
  return result;
}

void *(*sub_100096C88())(void *a1, uint64_t *a2)
{
  return sub_100096CA4;
}

void *sub_100096CA4(void *a1, uint64_t *a2)
{
  return sub_100096AF8(a1, *a2);
}

uint64_t (**UInt64.atomic_create.unsafeMutableAddressor())()
{
  return &static UInt64.atomic_create;
}

void static UInt64.atomic_create.getter()
{
}

void (__cdecl **UInt64.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static UInt64.atomic_destroy;
}

uint64_t (**UInt64.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt64.atomic_compare_and_exchange;
}

void static UInt64.atomic_compare_and_exchange.getter()
{
}

unint64_t (**UInt64.atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static UInt64.atomic_add;
}

void static UInt64.atomic_add.getter()
{
}

unint64_t (**UInt64.atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static UInt64.atomic_sub;
}

void static UInt64.atomic_sub.getter()
{
}

unsigned int *(**UInt64.atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static UInt64.atomic_exchange;
}

void static UInt64.atomic_exchange.getter()
{
}

uint64_t (**UInt64.atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static UInt64.atomic_load;
}

void static UInt64.atomic_load.getter()
{
}

void *(**UInt64.atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static UInt64.atomic_store;
}

void static UInt64.atomic_store.getter()
{
}

uint64_t (**Int.atomic_create.unsafeMutableAddressor())()
{
  return &static Int.atomic_create;
}

void static Int.atomic_create.getter()
{
}

void (__cdecl **Int.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static Int.atomic_destroy;
}

uint64_t (**Int.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static Int.atomic_compare_and_exchange;
}

void static Int.atomic_compare_and_exchange.getter()
{
}

unint64_t (**Int.atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static Int.atomic_add;
}

void static Int.atomic_add.getter()
{
}

unint64_t (**Int.atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static Int.atomic_sub;
}

void static Int.atomic_sub.getter()
{
}

unsigned int *(**Int.atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static Int.atomic_exchange;
}

void static Int.atomic_exchange.getter()
{
}

uint64_t (**Int.atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static Int.atomic_load;
}

void static Int.atomic_load.getter()
{
}

void *(**Int.atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static Int.atomic_store;
}

void static Int.atomic_store.getter()
{
}

uint64_t (**UInt.atomic_create.unsafeMutableAddressor())()
{
  return &static UInt.atomic_create;
}

void static UInt.atomic_create.getter()
{
}

void (__cdecl **UInt.atomic_destroy.unsafeMutableAddressor())(void *)
{
  return &static UInt.atomic_destroy;
}

uint64_t (**UInt.atomic_compare_and_exchange.unsafeMutableAddressor())()
{
  return &static UInt.atomic_compare_and_exchange;
}

void static UInt.atomic_compare_and_exchange.getter()
{
}

unint64_t (**UInt.atomic_add.unsafeMutableAddressor())(atomic_ullong *, unint64_t)
{
  return &static UInt.atomic_add;
}

void static UInt.atomic_add.getter()
{
}

unint64_t (**UInt.atomic_sub.unsafeMutableAddressor())(atomic_ullong *, uint64_t)
{
  return &static UInt.atomic_sub;
}

void static UInt.atomic_sub.getter()
{
}

unsigned int *(**UInt.atomic_exchange.unsafeMutableAddressor())(unsigned int *result)
{
  return &static UInt.atomic_exchange;
}

void static UInt.atomic_exchange.getter()
{
}

uint64_t (**UInt.atomic_load.unsafeMutableAddressor())(uint64_t)
{
  return &static UInt.atomic_load;
}

void static UInt.atomic_load.getter()
{
}

void *(**UInt.atomic_store.unsafeMutableAddressor())(void *result, uint64_t)
{
  return &static UInt.atomic_store;
}

void static UInt.atomic_store.getter()
{
}

uint64_t AtomicBox.__allocating_init(value:)()
{
  uint64_t v1 = sub_10009769C();
  AtomicBox.init(value:)(v0);
  return v1;
}

uint64_t AtomicBox.init(value:)(uint64_t a1)
{
  sub_100019524(qword_10030DF30);
  swift_unknownObjectRetain();
  uint64_t v3 = swift_bufferAllocate();
  sub_100007818((void *)(v3 + 16), a1);
  swift_unknownObjectRelease();
  *(void *)(v1 + 16) = swift_dynamicCastClassUnconditional();
  return v1;
}

uint64_t AtomicBox.deinit()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  uint64_t v2 = sub_100007808((unsigned int *)(v1 + 16));
  uint64_t result = swift_release();
  if (v2)
  {
    swift_unknownObjectRelease();
    swift_release();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t AtomicBox.__deallocating_deinit()
{
  AtomicBox.deinit();
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t AtomicBox.compareAndExchange(expected:desired:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *v8;
  uint64_t v12 = a2;
  void v11[2] = a1;
  v11[3] = a2;
  sub_100097274((uint64_t)&v12, (uint64_t)sub_1000974C0, (uint64_t)v11, *(void *)(v9 + 80), (uint64_t)&type metadata for Never, (uint64_t)&type metadata for Bool, (uint64_t)&protocol witness table for Never, a8);
  return v13;
}

uint64_t sub_1000971A4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 + 16);
  while (1)
  {
    swift_retain();
    BOOL v8 = sub_1000077E0((atomic_ullong *)(v7 + 16), a1, a2);
    uint64_t result = swift_release();
    if (v8) {
      break;
    }
    swift_retain();
    uint64_t v10 = sub_100007810(v7 + 16);
    uint64_t result = swift_release();
    if (v10 && v10 != a1)
    {
      char v11 = 0;
      goto LABEL_10;
    }
    pthread_yield_np();
  }
  if (a2 != a1)
  {
    swift_unknownObjectRetain();
    uint64_t result = swift_unknownObjectRelease();
  }
  char v11 = 1;
LABEL_10:
  *a4 = v11;
  return result;
}

uint64_t sub_100097274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  __chkstk_darwin();
  unsigned __int8 v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v14(v13);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v13, a5);
  }
  return result;
}

uint64_t AtomicBox.exchange(with:)(unint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_unknownObjectRetain();
  do
  {
    while (1)
    {
      swift_retain();
      uint64_t v4 = sub_100007810(v3 + 16);
      swift_release();
      if (v4) {
        break;
      }
      pthread_yield_np();
    }
    swift_retain();
    BOOL v5 = sub_1000077E0((atomic_ullong *)(v3 + 16), v4, a1);
    swift_release();
  }
  while (!v5);
  return v4;
}

uint64_t AtomicBox.load()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  do
  {
    while (1)
    {
      swift_retain();
      uint64_t v2 = sub_100007810(v1 + 16);
      swift_release();
      if (v2) {
        break;
      }
      pthread_yield_np();
    }
    swift_retain();
    BOOL v3 = sub_1000077E0((atomic_ullong *)(v1 + 16), v2, 0);
    swift_release();
  }
  while (!v3);
  swift_retain();
  swift_unknownObjectRetain();
  BOOL v4 = sub_1000077E0((atomic_ullong *)(v1 + 16), 0, v2);
  uint64_t result = swift_release();
  if (v4) {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t AtomicBox.store(_:)(unint64_t a1)
{
  AtomicBox.exchange(with:)(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000974C0@<X0>(char *a1@<X8>)
{
  return sub_1000971A4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1000974E4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 == 1 || !*(unsigned char *)(a1 + 8))
    {
      if (*(void *)a1) {
        int v2 = -1;
      }
      else {
        int v2 = 0;
      }
    }
    else
    {
      int v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100097520(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnsafeEmbeddedAtomic()
{
  return sub_10002F7A4();
}

uint64_t sub_100097574()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Atomic()
{
  return sub_10002F7A4();
}

uint64_t sub_1000975D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AtomicBox()
{
  return sub_10002F7A4();
}

uint64_t sub_100097634()
{
  return v0;
}

uint64_t sub_100097650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_100097664(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009768C()
{
  return v0;
}

uint64_t sub_10009769C()
{
  return swift_allocObject();
}

uint64_t sub_1000976BC()
{
  sub_10002F0C8();
  uint64_t v0 = swift_allocError();
  sub_100097DA4(v0, v1);
  return swift_willThrow();
}

#error "100097744: call analysis failed (funcsize=26)"

#error "1000977B0: call analysis failed (funcsize=26)"

#error "100097838: call analysis failed (funcsize=35)"

#error "1000978C4: call analysis failed (funcsize=34)"

void sub_1000978FC()
{
}

void sub_100097978()
{
}

uint64_t NIOCloseOnErrorHandler.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for DeadChannelCore()
{
  return self;
}

uint64_t sub_100097A28()
{
  return sub_1000976BC();
}

uint64_t sub_100097A40()
{
  return sub_100097708();
}

uint64_t sub_100097A58()
{
  return sub_100097774();
}

void sub_100097A80()
{
}

uint64_t sub_100097AD8(uint64_t a1)
{
  type metadata accessor for DeadChannelCore();
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(_WORD *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = swift_allocObject();
  *(void *)(v1 + 72) = &off_1002E15E8;
  *(void *)(v1 + 32) = a1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(a1 + 48);
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_100097B38()
{
  swift_getObjectType();
  sub_10002F0C8();
  uint64_t v0 = sub_1000290D0();
  sub_100097DA4(v0, v1);
  uint64_t v2 = EventLoop.makeFailedFuture<A>(_:file:line:)();
  swift_errorRelease();
  return v2;
}

uint64_t sub_100097BC8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  sub_10002F0C8();
  uint64_t v3 = sub_1000290D0();
  sub_100097DA4(v3, v4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = EventLoop.makeFailedFuture<A>(_:file:line:)(v3, "/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/DeadChannel.swift", 113, 2, 111, ObjectType, AssociatedTypeWitness, v1);
  swift_errorRelease();
  return v6;
}

uint64_t sub_100097C84()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100097CBC()
{
  sub_100097C84();
  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for DeadChannel()
{
  return self;
}

uint64_t ChannelHandlerContext.pipeline.getter()
{
  return swift_retain();
}

uint64_t sub_100097D20()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100097D50()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100097D78()
{
  return swift_unknownObjectRetain();
}

void sub_100097DA4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 2;
  *(unsigned char *)(a2 + 8) = 3;
}

uint64_t sub_100097DB8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 2;
  *(unsigned char *)(a2 + 8) = 3;
  return swift_errorRetain();
}

uint64_t sub_100097DDC()
{
  uint64_t v3 = v0;
  uint64_t v4 = sub_100019524(&qword_10030B090);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + 88);
  sub_10020F78C();
  sub_10009867C();
  if (v9) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = *(void *)(v0 + 304);
  }
  if (v10 <= 1) {
    Swift::Int v11 = 1;
  }
  else {
    Swift::Int v11 = v10;
  }
  sub_10024EFF0((NSDecimal *)v10, v11);
  sub_100098618();
  sub_1000986B4();
  memcpy(__dst, v12, sizeof(__dst));
  uint64_t v13 = sub_1000512DC();
  v25[4] = 0;
  v25[5] = 0xE000000000000000;
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
  }
  v25[0] = v13;
  v25[1] = v14;
  v25[2] = 0;
  v25[3] = v15;
  sub_10024E840();
  if (v16)
  {
    sub_1000986A8();
    do
    {
      if ((sub_10024E5A0() & 1) == 0)
      {
        v27._uint64_t countAndFlagsBits = v2;
        v27._object = v1;
        sub_10024E7F0(v27);
      }
      swift_bridgeObjectRelease();
      sub_10024E840();
      sub_1000986A8();
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_10024E0F0();
  sub_1000195B4((uint64_t)v7, 1, 1, v18);
  uint64_t v19 = sub_10024EFC0();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_100097FE4((uint64_t)v7);
  if ((v21 & 0x100000000) != 0)
  {
    sub_10020F78C();
    if (*(unsigned char *)(v8 + 112) == 3) {
      uint64_t v22 = 1;
    }
    else {
      uint64_t v22 = *(void *)(v3 + 304);
    }
    if (v22 <= 1) {
      Swift::Int v23 = 1;
    }
    else {
      Swift::Int v23 = v22;
    }
    sub_10024EFF0((NSDecimal *)v22, v23);
    sub_100098694();
    return sub_10024EFB0();
  }
  return v19;
}

uint64_t sub_100097FE4(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030B090);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100098044()
{
  uint64_t v2 = v0;
  uint64_t v3 = (void *)v0[24];
  if (!v3)
  {
    uint64_t v15 = v0[11];
    type metadata accessor for OctaneSubscription();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = v16;
      __dst[0] = 0;
      __dst[1] = 0xE000000000000000;
      swift_retain();
      sub_10024F330(78);
      unint64_t v45 = 0;
      v47._uint64_t countAndFlagsBits = 0x6269726373627553;
      v47._object = (void *)0xAE00A0C26F742065;
      sub_10024E800(v47);
      uint64_t v18 = *(void **)(v15 + 56);
      unint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = sub_1000F072C(v19);
      swift_bridgeObjectRelease();
      if (v20)
      {
        sub_100098640();
        if (v21)
        {
          swift_bridgeObjectRetain();
          swift_release();
LABEL_13:
          v48._uint64_t countAndFlagsBits = v1;
          v48._object = v18;
          sub_10024E800(v48);
          swift_bridgeObjectRelease();
          v49._object = (void *)0x800000010027C7F0;
          v49._uint64_t countAndFlagsBits = 0x1000000000000034;
          sub_10024E800(v49);
          v50._uint64_t countAndFlagsBits = sub_100213DA0(*(unsigned char *)(v17 + 184));
          sub_10024E800(v50);
          swift_bridgeObjectRelease();
          sub_100098658();
          sub_10020F78C();
          sub_10009867C();
          if (v29) {
            uint64_t v30 = 1;
          }
          else {
            uint64_t v30 = v2[38];
          }
          if (v30 <= 1) {
            Swift::Int v31 = 1;
          }
          else {
            Swift::Int v31 = v30;
          }
          sub_10024EFF0((NSDecimal *)v30, v31);
          sub_100098618();
          sub_1000986B4();
          memcpy(__dst, v32, 0x50uLL);
          v51._uint64_t countAndFlagsBits = sub_1000512DC();
          sub_10024E800(v51);
          swift_bridgeObjectRelease();
          v52._uint64_t countAndFlagsBits = 46;
          v52._object = (void *)0xE100000000000000;
          sub_10024E800(v52);
          swift_release();
LABEL_33:
          uint64_t v14 = v45;
          goto LABEL_34;
        }
        swift_release();
      }
      sub_10020F734();
      sub_1000986A8();
      goto LABEL_13;
    }
    if (qword_100308D68 != -1) {
      swift_once();
    }
    uint64_t v22 = (void *)qword_10034C090;
    uint64_t v23 = v2[38];
    id v24 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v23];
    id v25 = [v22 stringFromNumber:v24];

    if (v25)
    {
      uint64_t v26 = sub_10024E6B0();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v28 = (void *)0xE300000000000000;
      uint64_t v26 = 6647407;
    }
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_10024F330(32);
    swift_bridgeObjectRelease();
    unint64_t v45 = 0xD000000000000013;
    v53._uint64_t countAndFlagsBits = v26;
    v53._object = v28;
    sub_10024E800(v53);
    swift_bridgeObjectRelease();
    v54._uint64_t countAndFlagsBits = 32;
    v54._object = (void *)0xE100000000000000;
    sub_10024E800(v54);
    long long v33 = *(void **)(v15 + 56);
    unint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000F072C(v34);
    swift_bridgeObjectRelease();
    if (v35)
    {
      sub_100098640();
      if (v36)
      {
        swift_bridgeObjectRetain();
        swift_release();
LABEL_26:
        v55._uint64_t countAndFlagsBits = v1;
        v55._object = v33;
        sub_10024E800(v55);
        swift_bridgeObjectRelease();
        sub_100098658();
        sub_10020F78C();
        uint64_t v37 = (NSDecimal *)*(unsigned __int8 *)(v15 + 112);
        if (v23 <= 1) {
          uint64_t v38 = 1;
        }
        else {
          uint64_t v38 = v23;
        }
        if (v37 == 3) {
          Swift::Int v39 = 1;
        }
        else {
          Swift::Int v39 = v38;
        }
        sub_10024EFF0(v37, v39);
        sub_100098694();
        sub_10024EFB0();
        memcpy(__dst, v2 + 14, 0x50uLL);
        v56._uint64_t countAndFlagsBits = sub_1000512DC();
        sub_10024E800(v56);
        swift_bridgeObjectRelease();
        v57._uint64_t countAndFlagsBits = 63;
        v57._object = (void *)0xE100000000000000;
        sub_10024E800(v57);
        goto LABEL_33;
      }
      swift_release();
    }
    sub_10020F734();
    sub_1000986A8();
    goto LABEL_26;
  }
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[35];
  uint64_t v41 = v0[36];
  uint64_t v42 = v0[34];
  uint64_t v6 = v0[32];
  uint64_t v7 = v0[33];
  uint64_t v8 = v0[31];
  uint64_t v44 = v2[30];
  uint64_t v9 = v2[29];
  uint64_t v43 = v2[28];
  uint64_t v11 = v2[26];
  uint64_t v10 = v2[27];
  uint64_t v12 = v2[25];
  __dst[0] = v3;
  __dst[1] = v12;
  __dst[2] = v11;
  __dst[3] = v10;
  __dst[4] = v43;
  __dst[5] = v9;
  __dst[6] = v44;
  __dst[7] = v8;
  __dst[8] = v6;
  __dst[9] = v7;
  __dst[10] = v42;
  __dst[11] = v5;
  __dst[12] = v41;
  __dst[13] = v4;
  id v13 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001AC7B0();
  sub_10009856C(v3);
LABEL_34:
  sub_10024F330(24);
  swift_bridgeObjectRelease();
  v58._uint64_t countAndFlagsBits = 0xD000000000000016;
  v58._object = (void *)0x800000010027C7D0;
  sub_10024E800(v58);
  return v14;
}

void *sub_10009856C(void *result)
{
  if (result)
  {

    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100098618()
{
  return sub_10024EFB0();
}

void sub_100098658()
{
  v1._uint64_t countAndFlagsBits = 0x20726F6620;
  v1._object = (void *)0xE500000000000000;
  sub_10024E800(v1);
}

uint64_t sub_100098694()
{
  return v0;
}

uint64_t sub_1000986C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for BagResponse();
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (void *)((char *)&v29[-1] - v10);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = *(void *)(v1 + 104);
    uint64_t v14 = *(void **)(v1 + 112);
    uint64_t v15 = *(os_unfair_lock_s **)(*(void *)(Strong + 48) + 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v15);
    os_unfair_lock_unlock(v15);
    swift_unknownObjectRelease();
    sub_10001C2A8((void *)(v2 + 48), *(void *)(v2 + 72));
    sub_10008A3E4(v29);
    uint64_t v16 = *(os_unfair_lock_s **)(*(void *)(*sub_10001C2A8((void *)(v2 + 48), *(void *)(v2 + 72)) + 24) + 16);
    swift_retain();
    os_unfair_lock_lock(v16);
    swift_retain();
    os_unfair_lock_unlock(v16);
    swift_release();
    sub_10001CDB4(v13, v14, v29, v11);
    sub_10001FD4C((uint64_t)v11, (uint64_t)v8);
    sub_1002185A8();
    uint64_t v17 = v33;
    uint64_t v18 = v34;
    uint64_t v19 = v35;
    uint64_t v20 = v36;
    uint64_t v21 = v37;
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    swift_unknownObjectRelease();
    unint64_t v24 = v21 | (v22 << 32) | (v23 << 48);
    sub_10001FDB0((uint64_t)v11);
    ASOctaneSupportXPCService::HTTPVersion v25 = HTTPVersion.init(major:minor:)(1, 1);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t result = swift_allocObject();
    uint64_t v27 = 3;
  }
  else
  {
    sub_1000CB5C8(0xD000000000000017, 0x800000010027C860, 6, (uint64_t)v29);
    uint64_t v17 = v29[0];
    uint64_t v18 = v29[1];
    uint64_t v19 = v29[2];
    uint64_t v20 = v29[3];
    unint64_t v24 = v30 | ((unint64_t)v31 << 32) | ((unint64_t)v32 << 48);
    ASOctaneSupportXPCService::HTTPVersion v25 = HTTPVersion.init(major:minor:)(1, 1);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t result = swift_allocObject();
    uint64_t v27 = 49;
  }
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = v27;
  *(ASOctaneSupportXPCService::HTTPVersion *)(result + 40) = v25;
  *(void *)a1 = result;
  *(void *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 16) = 2;
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v18;
  *(void *)(a1 + 40) = v19;
  *(void *)(a1 + 48) = v20;
  *(unsigned char *)(a1 + 62) = BYTE6(v24);
  *(_WORD *)(a1 + 60) = WORD2(v24);
  *(_DWORD *)(a1 + 56) = v24;
  return result;
}

uint64_t sub_100098954()
{
  sub_100098A10(v0 + 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100098984()
{
  uint64_t v0 = sub_100094D84();
  sub_100098A10(v0 + 88);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000989BC()
{
  uint64_t v0 = sub_100098984();
  return _swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for BagRoute()
{
  return self;
}

uint64_t sub_100098A10(uint64_t a1)
{
  return a1;
}

unsigned char *sub_100098A38@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  if (a4 != a2) {
    goto LABEL_8;
  }
  if ((a4 & 0x8000000000000000) == 0)
  {
    if (!a4)
    {
LABEL_9:
      char v11 = 1;
      goto LABEL_10;
    }
    if (((*result ^ *a3) & 0xDF) == 0)
    {
      uint64_t v5 = a3 + 1;
      uint64_t v6 = result + 1;
      uint64_t v7 = a4 - 1;
      while (v7)
      {
        int v9 = *v5++;
        int v8 = v9;
        int v10 = *v6++;
        --v7;
        if (((v10 ^ v8) & 0xDF) != 0) {
          goto LABEL_8;
        }
      }
      goto LABEL_9;
    }
LABEL_8:
    char v11 = 0;
LABEL_10:
    *a5 = v11;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100098AA0(unint64_t a1)
{
  if (a1 - 1 < 0xE) {
    return byte_10025CCA6[a1 - 1];
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10024E1F0();
  sub_10001B0E8(v3, (uint64_t)qword_10034C0E0);
  uint64_t v4 = sub_10024E1D0();
  os_log_type_t v5 = sub_10024EE10();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    unint64_t v7 = sub_10014AEA4(a1);
    sub_1000F3F3C(v7, v8, &v9);
    sub_10024F100();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received unsupported ASOctaneSimulatedError \"%s\" for FailureType", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0;
}

unint64_t sub_100098C3C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
    case 12:
    case 19:
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x206B726F7774654ELL;
      break;
    case 9:
      unint64_t result = 0x65206D6574737953;
      break;
    case 10:
      unint64_t result = 0xD000000000000027;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    case 14:
      unint64_t result = 0xD000000000000016;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 20:
      unint64_t result = 0x6E776F6E6B6E55;
      break;
    default:
      unint64_t result = 1701736270;
      break;
  }
  return result;
}

uint64_t sub_100098E5C()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

uint64_t sub_100098EB0(uint64_t result)
{
  unint64_t result = result;
  switch((char)result)
  {
    case 1:
      unint64_t result = 808529970;
      break;
    case 2:
      unint64_t result = 942878771;
      break;
    case 3:
      unint64_t result = 858862899;
      break;
    case 4:
      unint64_t result = 842216755;
      break;
    case 5:
      unint64_t result = 892352307;
      break;
    case 6:
      unint64_t result = 808597299;
      break;
    case 7:
      unint64_t result = 3616825;
      break;
    case 8:
      unint64_t result = 3223861;
      break;
    case 9:
      unint64_t result = 3617589;
      break;
    case 10:
      unint64_t result = 875900977;
      break;
    case 11:
      unint64_t result = 3485749;
      break;
    case 12:
      unint64_t result = 3289397;
      break;
    case 13:
      unint64_t result = 808792113;
      break;
    case 14:
      unint64_t result = 875575603;
      break;
    case 15:
      unint64_t result = 808466739;
      break;
    case 16:
      unint64_t result = 825243955;
      break;
    case 17:
      unint64_t result = 842021171;
      break;
    case 18:
      unint64_t result = 858798387;
      break;
    case 19:
      unint64_t result = 892416309;
      break;
    case 20:
      unint64_t result = 960051513;
      break;
    case 21:
      unint64_t result = 0x3039393939;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10009908C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FBC44(*a1, *a2);
}

Swift::Int sub_100099098()
{
  return sub_1001D34F8(*v0);
}

uint64_t sub_1000990A0(uint64_t a1)
{
  return sub_1000D277C(a1, *v1);
}

Swift::Int sub_1000990A8(uint64_t a1)
{
  return sub_1000D3C38(a1, *v1);
}

uint64_t sub_1000990B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100098E5C();
  *a1 = result;
  return result;
}

uint64_t sub_1000990E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100098EB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10009910C()
{
  return sub_10024EA50();
}

uint64_t sub_10009916C()
{
  return sub_10024EA00();
}

uint64_t *sub_1000991BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_10024DDC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100099308(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_10024DDC0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100099384(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10024DDC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10009948C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000995A4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10024DDC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000995A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OctaneError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for OctaneError()
{
  uint64_t result = qword_10030E378;
  if (!qword_10030E378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100099648(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10024DDC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100099750(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000995A4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10024DDC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100099874()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100099884()
{
  uint64_t result = sub_10024DDC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FailureType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEB)
  {
    if (a2 + 21 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 21) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 22;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v5 = v6 - 22;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for FailureType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100099A60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FailureType()
{
  return &type metadata for FailureType;
}

unint64_t sub_100099A9C()
{
  unint64_t result = qword_10030E3B0;
  if (!qword_10030E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030E3B0);
  }
  return result;
}

unint64_t sub_100099AE8()
{
  unint64_t result = qword_10030E3B8;
  if (!qword_10030E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030E3B8);
  }
  return result;
}

BOOL static FileRegion.== infix(_:_:)(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result != a4 || ((a6 ^ a3) & 0xFFFFFFFFFFFFFFLL) != 0) {
    return 0;
  }
  if (((a5 | a2) & 0x8000000000000000) == 0) {
    return a2 == a5;
  }
  __break(1u);
  return result;
}

uint64_t FileRegion.readableBytes.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return a2 - (a3 & 0xFFFFFFFFFFFFFFLL);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall FileRegion.moveReaderIndex(forwardBy:)(Swift::Int forwardBy)
{
  unint64_t v2 = ((unint64_t)*(unsigned __int8 *)(v1 + 22) << 48) | ((unint64_t)*(unsigned __int16 *)(v1 + 20) << 32) | *(unsigned int *)(v1 + 16);
  BOOL v3 = __OFADD__(v2, forwardBy);
  uint64_t v4 = v2 + forwardBy;
  if (v3)
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = static IntegerBitPacking.unpackUInt32UInt16UInt8(_:)(v4);
    ByteBuffer._slice.setter(v5);
    return;
  }
  sub_10009A12C();
  sub_10009A108();
  __break(1u);
}

uint64_t sub_100099BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = FileRegion.readerIndex.getter(a1, a2, *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48));
  *a3 = result;
  return result;
}

uint64_t sub_100099C28(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_10009A12C();
    uint64_t result = sub_10009A108();
    __break(1u);
  }
  else
  {
    uint64_t v1 = static IntegerBitPacking.unpackUInt32UInt16UInt8(_:)(a1);
    return ByteBuffer._slice.setter(v1);
  }
  return result;
}

uint64_t FileRegion.endIndex.getter(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t FileRegion.init(fileHandle:readerIndex:endIndex:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < a2)
  {
    __break(1u);
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    static IntegerBitPacking.unpackUInt32UInt16UInt8(_:)(a2);
    return a1;
  }
  sub_10009A12C();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

uint64_t FileRegion.init(fileHandle:)(uint64_t a1)
{
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    int v3 = *(_DWORD *)(a1 + 20);
    off_t v4 = sub_100028F00(v3, 0, 2);
    if (!v1)
    {
      uint64_t v5 = v4;
      sub_100028F00(v3, 0, 0);
      return FileRegion.init(fileHandle:readerIndex:endIndex:)(a1, 0, v5);
    }
  }
  else
  {
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v7 = 0xD00000000000001FLL;
    *(void *)(v7 + 8) = 0x800000010027B110;
    *(_DWORD *)(v7 + 16) = 9;
    swift_willThrow();
  }
  return swift_release();
}

BOOL sub_100099DFC(uint64_t a1, uint64_t a2)
{
  return static FileRegion.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

void FileRegion.description.getter(uint64_t a1, uint64_t a2)
{
  sub_10024F330(56);
  v3._object = (void *)0x800000010027CAE0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_10024E800(v3);
  swift_retain();
  v4._uint64_t countAndFlagsBits = NIOFileHandle.description.getter();
  sub_10024E800(v4);
  swift_release();
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x726564616572202CLL;
  v5._object = (void *)0xEF203A7865646E49;
  sub_10024E800(v5);
  v6._uint64_t countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x646E49646E65202CLL;
  v7._object = (void *)0xEC000000203A7865;
  sub_10024E800(v7);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v8._uint64_t countAndFlagsBits = sub_10024F9E0();
    sub_10024E800(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 32032;
    v9._object = (void *)0xE200000000000000;
    sub_10024E800(v9);
  }
}

void sub_100099FAC()
{
  FileRegion.description.getter(*v0, v0[1]);
}

uint64_t sub_100099FCC(uint64_t *a1)
{
  return sub_100099C28(*a1);
}

uint64_t sub_100099FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FileRegion(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  return a1;
}

uint64_t assignWithTake for FileRegion(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  return a1;
}

ValueMetadata *type metadata accessor for FileRegion()
{
  return &type metadata for FileRegion;
}

uint64_t sub_10009A108()
{
  return sub_10024F660();
}

uint64_t sub_10009A148(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_10024E8F0();
  }
  else {
    return 0;
  }
}

uint64_t sub_10009A190@<X0>(_OWORD *a1@<X8>)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  char v2 = sub_10024FD50();
  swift_unknownObjectRelease();
  if (v2)
  {
    uint64_t result = swift_unknownObjectRelease();
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  else
  {
    sub_10024F620();
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_10009A24C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_10009C6B8(a1 + 32, (uint64_t)a2);
  }
  else
  {
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_10009A270(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

void sub_10009A29C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (v1 != v2)
  {
    if (v1 < v2)
    {
      if ((sub_10007274C(*(void *)(v0 + 24), 0, *(void *)v0, *(void *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48)) & 0x100) == 0)return; {
    }
      }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10009A320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for IAPTransaction();
  uint64_t v6 = v5;
  if (v4)
  {
    sub_10009C654(a1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), a2);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  return sub_1000195B4(a2, v7, 1, v6);
}

_OWORD *NIOAny.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_10002F9C8();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  char v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, a1, a2);
  NIOAny._NIOAny.init<A>(_:)((uint64_t)v11, a2, (uint64_t)v14);
  sub_10003C99C();
  v12();
  return sub_10009AA80(v14, a3);
}

uint64_t NIOAny.forceAs<A>(type:)@<X0>(ValueMetadata *a1@<X1>, uint64_t a2@<X8>)
{
  if (a1 == &type metadata for ByteBuffer)
  {
    uint64_t v17 = NIOAny.forceAsByteBuffer()();
    uint64_t v18 = v5;
    int v19 = v6;
    __int16 v20 = v7;
    char v21 = v8;
    return swift_dynamicCast();
  }
  if (a1 == &type metadata for FileRegion)
  {
    uint64_t v17 = NIOAny.forceAsFileRegion()();
    uint64_t v18 = v9;
    int v19 = v10;
    __int16 v20 = v11;
    char v21 = v12;
    return swift_dynamicCast();
  }
  if (a1 == &type metadata for IOData)
  {
    uint64_t v17 = NIOAny.forceAsIOData()();
    uint64_t v18 = v13;
    int v19 = v14;
    char v21 = v15;
    __int16 v20 = v16;
    return swift_dynamicCast();
  }
  if ((ValueMetadata *)sub_100019524(&qword_10030A530) == a1)
  {
    NIOAny.forceAsByteEnvelope()((uint64_t)&v17);
    return swift_dynamicCast();
  }
  return NIOAny.forceAsOther<A>(type:)((uint64_t)a1, a2);
}

uint64_t NIOAny.tryAs<A>(type:)@<X0>(ValueMetadata *a1@<X1>, uint64_t a2@<X8>)
{
  if (a1 == &type metadata for ByteBuffer)
  {
    uint64_t v6 = sub_10003B8AC(v2, (uint64_t)&v28);
    if (v32)
    {
      sub_10009B7F0((uint64_t)&v28);
    }
    else
    {
      uint64_t v25 = sub_10009C720(v6, v7, v8, v9, v10, v11, v12, v13, v28);
      if ((v25 & 0x8000000000000000) == 0)
      {
        v37[0] = v25;
        v37[1] = v26;
        int v38 = v27;
        __int16 v39 = WORD2(v27);
        char v40 = BYTE6(v27);
        __int16 v20 = &type metadata for ByteBuffer;
        goto LABEL_24;
      }
      sub_10001B070();
    }
    int v14 = &type metadata for ByteBuffer;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
    return sub_1000195B4(v15, v16, 1, (uint64_t)v14);
  }
  if (a1 == &type metadata for FileRegion)
  {
    uint64_t v17 = NIOAny.tryAsFileRegion()();
    if (!v17)
    {
      unint64_t v24 = &type metadata for FileRegion;
      goto LABEL_20;
    }
    *(void *)&long long v28 = v17;
    *((void *)&v28 + 1) = v18;
    LODWORD(v29) = v19;
    WORD2(v29) = WORD2(v19);
    BYTE6(v29) = BYTE6(v19);
    __int16 v20 = &type metadata for FileRegion;
LABEL_24:
    swift_dynamicCast();
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    int v14 = v20;
    return sub_1000195B4(v15, v16, 1, (uint64_t)v14);
  }
  if (a1 != &type metadata for IOData)
  {
    if ((ValueMetadata *)sub_100019524(&qword_10030A530) != a1)
    {
      return NIOAny.tryAsOther<A>(type:)((uint64_t)a1, a2);
    }
    NIOAny.tryAsByteEnvelope()((uint64_t)v37);
    sub_10009B788((uint64_t)v37, (uint64_t)&v28);
    if (*((void *)&v28 + 1))
    {
      long long v33 = v28;
      long long v34 = v29;
      long long v35 = v30;
      uint64_t v36 = v31;
      swift_dynamicCast();
      uint64_t v15 = a2;
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v15 = a2;
      uint64_t v16 = 1;
    }
    int v14 = a1;
    return sub_1000195B4(v15, v16, 1, (uint64_t)v14);
  }
  uint64_t v21 = NIOAny.tryAsIOData()();
  if ((~v21 & 0xF000000000000007) != 0)
  {
    *(void *)&long long v28 = v21;
    *((void *)&v28 + 1) = v22;
    LODWORD(v29) = v23;
    BYTE6(v29) = BYTE6(v23);
    WORD2(v29) = WORD2(v23);
    __int16 v20 = &type metadata for IOData;
    goto LABEL_24;
  }
  unint64_t v24 = &type metadata for IOData;
LABEL_20:
  return sub_1000195B4(a2, 1, 1, (uint64_t)v24);
}

uint64_t NIOAny._storage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10003B8AC(v1, a1);
}

uint64_t NIOAny._NIOAny.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10002F9C8();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, a1, a2);
  if (sub_10009C758())
  {
    uint64_t v12 = *(void (**)(void))(v7 + 8);
    sub_10003C99C();
    v12();
    sub_10009C850();
LABEL_5:
    *(void *)a3 = v13;
    *(void *)(a3 + 8) = v14;
    *(unsigned char *)(a3 + 22) = v17;
    *(_WORD *)(a3 + 20) = v16;
    *(_DWORD *)(a3 + 16) = v15;
    goto LABEL_6;
  }
  if (sub_10009C758())
  {
    uint64_t v12 = *(void (**)(void))(v7 + 8);
    sub_10003C99C();
    v12();
    sub_10009C850();
    unint64_t v13 = v18 | 0x8000000000000000;
    goto LABEL_5;
  }
  if (sub_10009C758())
  {
    uint64_t v12 = *(void (**)(void))(v7 + 8);
    sub_10003C99C();
    v12();
    __int16 v20 = WORD2(v30);
    int v21 = v30;
    *(_OWORD *)a3 = v29;
    *(_WORD *)(a3 + 20) = v20;
    *(_DWORD *)(a3 + 16) = v21;
    *(unsigned char *)(a3 + 22) = BYTE6(v30);
LABEL_6:
    *(unsigned char *)(a3 + 56) = 0;
    return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
  }
  sub_100019524(&qword_10030A530);
  if (sub_10009C758())
  {
    uint64_t v22 = *(void (**)(void))(v7 + 8);
    sub_10003C99C();
    v22();
    uint64_t v23 = *((void *)&v29 + 1);
    int v24 = v31;
    __int16 v25 = v32;
    char v26 = v33;
    uint64_t v27 = v35;
    *(void *)a3 = v29;
    *(void *)(a3 + 8) = v23;
    *(void *)(a3 + 16) = v30;
    *(_DWORD *)(a3 + 24) = v24;
    *(_WORD *)(a3 + 28) = v25;
    *(unsigned char *)(a3 + 30) = v26;
    *(_OWORD *)(a3 + 32) = v34;
    *(void *)(a3 + 48) = v27;
    *(unsigned char *)(a3 + 56) = 1;
    return ((uint64_t (*)(char *, uint64_t))v22)(v11, a2);
  }
  else
  {
    *(void *)(a3 + 24) = a2;
    long long v28 = sub_1000709B8((uint64_t *)a3);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v28, a1, a2);
    *(unsigned char *)(a3 + 56) = 2;
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, a2);
  }
}

_OWORD *sub_10009AA80(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(long long *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

uint64_t NIOAny.tryAsByteBuffer()()
{
  uint64_t v1 = sub_10003B8AC(v0, (uint64_t)v10);
  if (v11)
  {
    sub_10009B7F0((uint64_t)v10);
    return 0;
  }
  uint64_t result = sub_10009C720(v1, v2, v3, v4, v5, v6, v7, v8, v10[0]);
  if (result < 0)
  {
    sub_10001B070();
    return 0;
  }
  return result;
}

uint64_t NIOAny.forceAsByteBuffer()()
{
  sub_10024FCD0();
  sub_10002F9C8();
  uint64_t v2 = v1;
  __chkstk_darwin(v3, v4);
  sub_10003C744();
  __chkstk_darwin(v5, v6);
  sub_10009C778();
  if (v11[56])
  {
    sub_10009B7F0((uint64_t)v11);
    goto LABEL_6;
  }
  uint64_t result = sub_10009C73C();
  if (result < 0)
  {
    sub_10001B070();
LABEL_6:
    sub_100030CE8(v0, (uint64_t)v11);
    sub_10003CC24();
    sub_10009C82C();
    sub_10003CB28((uint64_t)"tried to decode as type ");
    v12._uint64_t countAndFlagsBits = 0x6666754265747942;
    v12._object = (void *)0xEA00000000007265;
    sub_10024E800(v12);
    sub_10003C6AC();
    uint64_t v8 = sub_10003CC0C();
    sub_10009C7B8(v8);
    sub_10009C7FC();
    sub_10024FCC0();
    uint64_t v9 = *(void (**)(void))(v2 + 8);
    sub_10003C99C();
    v9();
    sub_10009C79C();
    swift_release();
    if (!v10) {
      __break(1u);
    }
    swift_bridgeObjectRelease();
    sub_10009C7E4();
    sub_10024FC90();
    sub_10003C99C();
    v9();
    v13._uint64_t countAndFlagsBits = sub_10003CC6C();
    sub_10009C814(v13);
    swift_bridgeObjectRelease();
    sub_10003C638();
    sub_10009C838();
    sub_10009C7D4();
    sub_10003C868();
    sub_10003CBCC();
  }
  return result;
}

uint64_t NIOAny.tryAsIOData()()
{
  uint64_t v1 = sub_10003B8AC(v0, (uint64_t)v10);
  if (!v11) {
    return sub_10009C720(v1, v2, v3, v4, v5, v6, v7, v8, v10[0]);
  }
  sub_10009B7F0((uint64_t)v10);
  return 0xF000000000000007;
}

uint64_t NIOAny.forceAsIOData()()
{
  sub_10024FCD0();
  sub_10002F9C8();
  uint64_t v2 = v1;
  __chkstk_darwin(v3, v4);
  sub_10003C744();
  __chkstk_darwin(v5, v6);
  sub_10009C778();
  if (v11[56])
  {
    sub_10009B7F0((uint64_t)v11);
    sub_100030CE8(v0, (uint64_t)v11);
    sub_10003CC24();
    sub_10009C82C();
    sub_10003CB28((uint64_t)"tried to decode as type ");
    v12._uint64_t countAndFlagsBits = 0x617461444F49;
    v12._object = (void *)0xE600000000000000;
    sub_10024E800(v12);
    sub_10003C6AC();
    uint64_t v8 = sub_10003CC0C();
    sub_10009C7B8(v8);
    sub_10009C7FC();
    sub_10024FCC0();
    uint64_t v9 = *(void (**)(void))(v2 + 8);
    sub_10003C99C();
    v9();
    sub_10009C79C();
    swift_release();
    if (!v10) {
      __break(1u);
    }
    swift_bridgeObjectRelease();
    sub_10009C7E4();
    sub_10024FC90();
    sub_10003C99C();
    v9();
    v13._uint64_t countAndFlagsBits = sub_10003CC6C();
    sub_10009C814(v13);
    swift_bridgeObjectRelease();
    sub_10003C638();
    sub_10009C838();
    sub_10009C7D4();
    sub_10003C868();
    sub_10003CBCC();
  }
  return sub_10009C73C();
}

uint64_t NIOAny.tryAsFileRegion()()
{
  uint64_t v1 = sub_10003B8AC(v0, (uint64_t)v11);
  if (v12)
  {
    sub_10009B7F0((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = sub_10009C720(v1, v2, v3, v4, v5, v6, v7, v8, v11[0]);
    if (v9 < 0) {
      return v9 & 0x7FFFFFFFFFFFFFFFLL;
    }
    sub_10001B070();
  }
  return 0;
}

uint64_t NIOAny.forceAsFileRegion()()
{
  sub_10024FCD0();
  sub_10002F9C8();
  uint64_t v2 = v1;
  __chkstk_darwin(v3, v4);
  sub_10003C744();
  __chkstk_darwin(v5, v6);
  sub_10009C778();
  if (v12[56])
  {
    sub_10009B7F0((uint64_t)v12);
    goto LABEL_6;
  }
  uint64_t v7 = sub_10009C73C();
  if ((v7 & 0x8000000000000000) == 0)
  {
    sub_10001B070();
LABEL_6:
    sub_100030CE8(v0, (uint64_t)v12);
    sub_10003CC24();
    sub_10009C82C();
    sub_10003CB28((uint64_t)"tried to decode as type ");
    v13._uint64_t countAndFlagsBits = 0x69676552656C6946;
    v13._object = (void *)0xEA00000000006E6FLL;
    sub_10024E800(v13);
    sub_10003C6AC();
    uint64_t v9 = sub_10003CC0C();
    sub_10009C7B8(v9);
    sub_10009C7FC();
    sub_10024FCC0();
    uint64_t v10 = *(void (**)(void))(v2 + 8);
    sub_10003C99C();
    v10();
    sub_10009C79C();
    swift_release();
    if (!v11) {
      __break(1u);
    }
    swift_bridgeObjectRelease();
    sub_10009C7E4();
    sub_10024FC90();
    sub_10003C99C();
    v10();
    v14._uint64_t countAndFlagsBits = sub_10003CC6C();
    sub_10009C814(v14);
    swift_bridgeObjectRelease();
    sub_10003C638();
    sub_10009C838();
    sub_10009C7D4();
    sub_10003C868();
    sub_10003CBCC();
  }
  return v7 & 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t NIOAny.tryAsByteEnvelope()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10003B8AC(v1, (uint64_t)v10);
  if (v16 == 1)
  {
    uint64_t v4 = v10[0];
    uint64_t v5 = v10[1];
    uint64_t v6 = v10[2];
    long long v7 = v14;
    uint64_t v8 = v15;
    unint64_t v9 = v11 | ((unint64_t)v12 << 32) | ((unint64_t)v13 << 48);
  }
  else
  {
    uint64_t result = sub_10009B7F0((uint64_t)v10);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v9 = 0;
    uint64_t v8 = 0;
    long long v7 = 0uLL;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v9;
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = v8;
  return result;
}

double NIOAny.forceAsByteEnvelope()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10024FCD0();
  sub_10002F9C8();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10003C744();
  __chkstk_darwin(v10, v11);
  unsigned __int8 v13 = (char *)v23 - v12;
  sub_10003B8AC(v3, (uint64_t)v24);
  if (v30 != 1)
  {
    sub_10009B7F0((uint64_t)v24);
    sub_100030CE8(v3, (uint64_t)v24);
    sub_10003CC24();
    sub_10009C82C();
    v31._object = (void *)0x800000010027A660;
    v31._uint64_t countAndFlagsBits = 0xD000000000000018;
    sub_10024E800(v31);
    v32._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v32._object = (void *)0x800000010027CB00;
    sub_10024E800(v32);
    sub_10003C6AC();
    v23[3] = &type metadata for NIOAny._NIOAny;
    uint64_t v21 = sub_10003CC0C();
    sub_10009C7B8(v21);
    sub_10009C7FC();
    sub_10024FCC0();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v22(v2, v5);
    sub_10009C79C();
    swift_release();
    if (!v23[5]) {
      __break(1u);
    }
    swift_bridgeObjectRelease();
    sub_10009C7E4();
    sub_10024FC90();
    v22((uint64_t)v13, v5);
    v33._uint64_t countAndFlagsBits = sub_10003CC6C();
    sub_10009C814(v33);
    swift_bridgeObjectRelease();
    sub_10003C638();
    sub_10009C838();
    sub_10009C7D4();
    v23[0] = 173;
    sub_10003C868();
    sub_10003CBCC();
  }
  uint64_t v14 = v24[1];
  int v15 = v25;
  __int16 v16 = v26;
  char v17 = v27;
  uint64_t v18 = v29;
  double result = *(double *)&v24[2];
  long long v20 = v28;
  *(void *)a1 = v24[0];
  *(void *)(a1 + 8) = v14;
  *(double *)(a1 + 16) = result;
  *(_DWORD *)(a1 + 24) = v15;
  *(_WORD *)(a1 + 28) = v16;
  *(unsigned char *)(a1 + 30) = v17;
  *(_OWORD *)(a1 + 32) = v20;
  *(void *)(a1 + 48) = v18;
  return result;
}

uint64_t NIOAny.tryAsOther<A>(type:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_10003B8AC(v3, (uint64_t)&v15);
  if (v22)
  {
    if (v22 == 1)
    {
      long long v8 = v15;
      uint64_t v9 = v16;
      int v10 = v17;
      __int16 v11 = v18;
      char v12 = v19;
      long long v13 = v20;
      uint64_t v14 = v21;
      sub_100019524(&qword_10030A530);
    }
    else
    {
      sub_10003B908(&v15, &v8);
    }
  }
  else
  {
    long long v8 = v15;
    BYTE6(v9) = BYTE6(v16);
    WORD2(v9) = WORD2(v16);
    LODWORD(v9) = v16;
  }
  int v6 = swift_dynamicCast();
  return sub_1000195B4(a2, v6 ^ 1u, 1, a1);
}

uint64_t NIOAny.forceAsOther<A>(type:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_10024FCD0();
  sub_10002F9C8();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  sub_10003C744();
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v17 = v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v24 - v20;
  NIOAny.tryAsOther<A>(type:)(a1, (uint64_t)&v24 - v20);
  if (sub_10001FA0C((uint64_t)v21, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v15);
    sub_100030CE8(v2, (uint64_t)v28);
    *(void *)&long long v24 = 0;
    *((void *)&v24 + 1) = 0xE000000000000000;
    sub_10024F330(56);
    long long v27 = v24;
    v29._object = (void *)0x800000010027A660;
    v29._uint64_t countAndFlagsBits = 0xD000000000000018;
    sub_10024E800(v29);
    v30._uint64_t countAndFlagsBits = sub_10024FDC0();
    sub_10024E800(v30);
    swift_bridgeObjectRelease();
    sub_10003C6AC();
    int v25 = &type metadata for NIOAny._NIOAny;
    *(void *)&long long v24 = sub_10003CC0C();
    sub_10003B8AC((uint64_t)v28, v24 + 16);
    sub_10024FC80();
    sub_10024FCC0();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v23(v3, v6);
    sub_10009A190(&v24);
    swift_release();
    if (!v26) {
      __break(1u);
    }
    swift_bridgeObjectRelease();
    sub_10009C7E4();
    sub_10024FC90();
    v23((uint64_t)v14, v6);
    v31._uint64_t countAndFlagsBits = sub_10003CC6C();
    sub_10024E800(v31);
    swift_bridgeObjectRelease();
    sub_10003C638();
    sub_10024F5C0();
    sub_10003C868();
    sub_10003CBCC();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a1 - 8) + 32))(a2, v21, a1);
}

uint64_t sub_10009B788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030E3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009B7F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B820()
{
  int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 == 2)
  {
    sub_10001C2EC(v0 + 16);
  }
  else if (v1 == 1)
  {
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 48) != 4 && (~*(void *)(v0 + 56) & 0xF000000000000007) != 0) {
      swift_release();
    }
  }
  else if (!*(unsigned char *)(v0 + 72))
  {
    sub_10001B070();
  }
  return _swift_deallocObject(v0, 73, 7);
}

_OWORD *NIOAny.asAny()@<X0>(uint64_t a1@<X8>)
{
  double result = (_OWORD *)sub_10003B8AC(v1, (uint64_t)&v12);
  if (v19)
  {
    if (v19 == 1)
    {
      long long v4 = v12;
      int v5 = v14;
      __int16 v6 = v15;
      char v7 = v16;
      long long v11 = v17;
      uint64_t v8 = v18;
      *(void *)(a1 + 24) = sub_100019524(&qword_10030A530);
      double result = (_OWORD *)swift_allocObject();
      *(void *)a1 = result;
      result[1] = v4;
      *((void *)result + 4) = v13;
      *((_DWORD *)result + 10) = v5;
      *((_WORD *)result + 22) = v6;
      *((unsigned char *)result + 46) = v7;
      result[3] = v11;
      *((void *)result + 8) = v8;
    }
    else
    {
      return sub_10003B908(&v12, (_OWORD *)a1);
    }
  }
  else
  {
    long long v9 = v12;
    unint64_t v10 = v13 | ((unint64_t)(WORD2(v13) | (BYTE6(v13) << 16)) << 32);
    if ((v12 & 0x8000000000000000) != 0)
    {
      *(void *)(a1 + 24) = &type metadata for FileRegion;
      *(void *)a1 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      *(void *)(a1 + 24) = &type metadata for ByteBuffer;
      *(void *)a1 = v9;
    }
    *(void *)(a1 + 8) = *((void *)&v9 + 1);
    *(_DWORD *)(a1 + 16) = v10;
    *(_WORD *)(a1 + 20) = WORD2(v10);
    *(unsigned char *)(a1 + 22) = BYTE6(v10);
  }
  return result;
}

uint64_t sub_10009BA18()
{
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 48) != 4 && (~*(void *)(v0 + 56) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t NIOAny.description.getter()
{
  uint64_t v2 = 0;
  unint64_t v3 = 0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0x7B20796E414F494ELL;
  v4._object = (void *)0xE900000000000020;
  sub_10024E800(v4);
  NIOAny.asAny()((uint64_t)v1);
  sub_10024F5C0();
  sub_10001C2EC((uint64_t)v1);
  v5._uint64_t countAndFlagsBits = 32032;
  v5._object = (void *)0xE200000000000000;
  sub_10024E800(v5);
  return v2;
}

uint64_t destroy for NIOAny(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(unsigned __int8 *)(result + 56);
  if (v2 == 2)
  {
    return sub_10001C2EC(result);
  }
  else if (v2 == 1)
  {
    swift_release();
    double result = swift_release();
    if (*(unsigned char *)(v1 + 32) != 4 && (~*(void *)(v1 + 40) & 0xF000000000000007) != 0)
    {
      return swift_release();
    }
  }
  else if (!*(unsigned char *)(result + 56))
  {
    return sub_10001B070();
  }
  return result;
}

uint64_t initializeWithCopy for NIOAny(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 == 2)
  {
    uint64_t v8 = a2[3];
    *(void *)(a1 + 24) = v8;
    (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
  }
  else if (v4 == 1)
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(_DWORD *)(a1 + 27) = *(_DWORD *)((char *)a2 + 27);
    __int16 v6 = a2 + 4;
    uint64_t v7 = *((unsigned __int8 *)a2 + 32);
    swift_retain();
    swift_retain();
    if (v7 == 4)
    {
      *(_OWORD *)(a1 + 32) = *v6;
      *(void *)(a1 + 48) = a2[6];
    }
    else
    {
      *(unsigned char *)(a1 + 32) = v7;
      uint64_t v14 = a2[5];
      if ((~v14 & 0xF000000000000007) != 0)
      {
        uint64_t v15 = a2[6];
        *(void *)(a1 + 40) = v14;
        *(void *)(a1 + 48) = v15;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      }
    }
  }
  else
  {
    uint64_t v9 = *a2;
    uint64_t v10 = a2[1];
    int v11 = *((_DWORD *)a2 + 4);
    char v12 = *((unsigned char *)a2 + 22);
    __int16 v13 = *((_WORD *)a2 + 10);
    sub_10003AFD0();
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v10;
    *(unsigned char *)(a1 + 22) = v12;
    *(_WORD *)(a1 + 20) = v13;
    *(_DWORD *)(a1 + 16) = v11;
  }
  *(unsigned char *)(a1 + 56) = v4;
  return a1;
}

uint64_t assignWithCopy for NIOAny(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_10009B7F0(a1);
    int v4 = *((unsigned __int8 *)a2 + 56);
    if (v4 == 2)
    {
      uint64_t v9 = a2[3];
      *(void *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
    }
    else if (v4 == 1)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
      int v5 = *((_DWORD *)a2 + 6);
      *(_DWORD *)(a1 + 27) = *(_DWORD *)((char *)a2 + 27);
      *(_DWORD *)(a1 + 24) = v5;
      uint64_t v6 = *((unsigned __int8 *)a2 + 32);
      swift_retain();
      swift_retain();
      if (v6 == 4)
      {
        uint64_t v7 = (_OWORD *)(a1 + 32);
        long long v8 = *((_OWORD *)a2 + 2);
        *(void *)(a1 + 48) = a2[6];
      }
      else
      {
        *(unsigned char *)(a1 + 32) = v6;
        uint64_t v15 = a2[5];
        if ((~v15 & 0xF000000000000007) != 0)
        {
          *(void *)(a1 + 40) = v15;
          *(void *)(a1 + 48) = a2[6];
          swift_retain();
          goto LABEL_12;
        }
        uint64_t v7 = (_OWORD *)(a1 + 40);
        long long v8 = *(_OWORD *)(a2 + 5);
      }
      *uint64_t v7 = v8;
    }
    else
    {
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      int v14 = *((_DWORD *)a2 + 4);
      char v12 = a2 + 2;
      int v13 = v14;
      LOWORD(v14) = *((_WORD *)v12 + 2);
      LOBYTE(v12) = *((unsigned char *)v12 + 6);
      sub_10003AFD0();
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 22) = (_BYTE)v12;
      *(_WORD *)(a1 + 20) = v14;
      *(_DWORD *)(a1 + 16) = v13;
    }
LABEL_12:
    *(unsigned char *)(a1 + 56) = v4;
  }
  return a1;
}

__n128 initializeWithTake for NIOAny._NIOAny(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for NIOAny(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_10009B7F0((uint64_t)a1);
    long long v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = a2[2];
    *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NIOAny(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 57))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NIOAny(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOAny()
{
  return &type metadata for NIOAny;
}

uint64_t destroy for NIOAny._NIOAny(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  if (v2 == 2)
  {
    return sub_10001C2EC(a1);
  }
  else if (v2 == 1)
  {
    swift_release();
    uint64_t result = swift_release();
    if (*(unsigned char *)(a1 + 32) != 4 && (~*(void *)(a1 + 40) & 0xF000000000000007) != 0)
    {
      return swift_release();
    }
  }
  else
  {
    return sub_10001B070();
  }
  return result;
}

uint64_t initializeWithCopy for NIOAny._NIOAny(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v8 = a2[3];
    *(void *)(a1 + 24) = v8;
    (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
    char v9 = 2;
  }
  else if (v4 == 1)
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(_DWORD *)(a1 + 27) = *(_DWORD *)((char *)a2 + 27);
    uint64_t v6 = a2 + 4;
    uint64_t v7 = *((unsigned __int8 *)a2 + 32);
    swift_retain();
    swift_retain();
    if (v7 == 4)
    {
      *(_OWORD *)(a1 + 32) = *v6;
      *(void *)(a1 + 48) = a2[6];
    }
    else
    {
      *(unsigned char *)(a1 + 32) = v7;
      uint64_t v15 = a2[5];
      if ((~v15 & 0xF000000000000007) != 0)
      {
        uint64_t v16 = a2[6];
        *(void *)(a1 + 40) = v15;
        *(void *)(a1 + 48) = v16;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      }
    }
    char v9 = 1;
  }
  else
  {
    uint64_t v10 = *a2;
    uint64_t v11 = a2[1];
    int v12 = *((_DWORD *)a2 + 4);
    char v13 = *((unsigned char *)a2 + 22);
    __int16 v14 = *((_WORD *)a2 + 10);
    sub_10003AFD0();
    char v9 = 0;
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    *(unsigned char *)(a1 + 22) = v13;
    *(_WORD *)(a1 + 20) = v14;
    *(_DWORD *)(a1 + 16) = v12;
  }
  *(unsigned char *)(a1 + 56) = v9;
  return a1;
}

uint64_t assignWithCopy for NIOAny._NIOAny(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      sub_10001C2EC(a1);
    }
    else if (v4 == 1)
    {
      swift_release();
      swift_release();
      if (*(unsigned char *)(a1 + 32) != 4 && (~*(void *)(a1 + 40) & 0xF000000000000007) != 0) {
        swift_release();
      }
    }
    else
    {
      sub_10001B070();
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 56);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 24) = v10;
      (**(void (***)(uint64_t, uint64_t *))(v10 - 8))(a1, a2);
      char v11 = 2;
    }
    else
    {
      if (v5 == 1)
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
        *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
        int v6 = *((_DWORD *)a2 + 6);
        *(_DWORD *)(a1 + 27) = *(_DWORD *)((char *)a2 + 27);
        *(_DWORD *)(a1 + 24) = v6;
        uint64_t v7 = *((unsigned __int8 *)a2 + 32);
        swift_retain();
        swift_retain();
        if (v7 == 4)
        {
          uint64_t v8 = (_OWORD *)(a1 + 32);
          long long v9 = *((_OWORD *)a2 + 2);
          *(void *)(a1 + 48) = a2[6];
        }
        else
        {
          *(unsigned char *)(a1 + 32) = v7;
          uint64_t v17 = a2[5];
          if ((~v17 & 0xF000000000000007) != 0)
          {
            *(void *)(a1 + 40) = v17;
            *(void *)(a1 + 48) = a2[6];
            swift_retain();
            goto LABEL_23;
          }
          uint64_t v8 = (_OWORD *)(a1 + 40);
          long long v9 = *(_OWORD *)(a2 + 5);
        }
        *uint64_t v8 = v9;
LABEL_23:
        char v11 = 1;
        goto LABEL_24;
      }
      uint64_t v12 = *a2;
      uint64_t v13 = a2[1];
      int v16 = *((_DWORD *)a2 + 4);
      __int16 v14 = a2 + 2;
      int v15 = v16;
      LOWORD(v16) = *((_WORD *)v14 + 2);
      LOBYTE(v14) = *((unsigned char *)v14 + 6);
      sub_10003AFD0();
      char v11 = 0;
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      *(unsigned char *)(a1 + 22) = (_BYTE)v14;
      *(_WORD *)(a1 + 20) = v16;
      *(_DWORD *)(a1 + 16) = v15;
    }
LABEL_24:
    *(unsigned char *)(a1 + 56) = v11;
  }
  return a1;
}

uint64_t assignWithTake for NIOAny._NIOAny(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      sub_10001C2EC(a1);
    }
    else if (v4 == 1)
    {
      swift_release();
      swift_release();
      if (*(unsigned char *)(a1 + 32) != 4 && (~*(void *)(a1 + 40) & 0xF000000000000007) != 0) {
        swift_release();
      }
    }
    else
    {
      sub_10001B070();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      LOBYTE(v5) = 1;
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 15) = *(void *)(a2 + 15);
    }
    *(unsigned char *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NIOAny._NIOAny(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NIOAny._NIOAny(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10009C5FC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_10009C618(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NIOAny._NIOAny()
{
  return &type metadata for NIOAny._NIOAny;
}

uint64_t sub_10009C654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IAPTransaction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030A450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009C720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t sub_10009C73C()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_10009C758()
{
  return swift_dynamicCast();
}

uint64_t sub_10009C778()
{
  return sub_10003B8AC(v0, v1 - 112);
}

uint64_t sub_10009C79C()
{
  return sub_10009A190((_OWORD *)(v0 - 176));
}

uint64_t sub_10009C7B8(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return sub_10003B8AC(v1 - 112, a1 + 16);
}

uint64_t sub_10009C7E4()
{
  return sub_10024FC80();
}

uint64_t sub_10009C7FC()
{
  return sub_10024FC80();
}

void sub_10009C814(Swift::String a1)
{
  sub_10024E800(a1);
}

void sub_10009C82C()
{
  uint64_t v1 = *(void *)(v0 - 168);
  *(void *)(v0 - 128) = *(void *)(v0 - 176);
  *(void *)(v0 - 120) = v1;
}

uint64_t sub_10009C838()
{
  return sub_10024F5C0();
}

uint64_t sub_10009C864(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_10024F6F0())
  {
    uint64_t v17 = v3;
    unint64_t v18 = v2;
    unint64_t v19 = v2 & 0xC000000000000001;
    uint64_t v4 = 4;
    while (1)
    {
      if (v19)
      {
        unsigned int v5 = (void *)sub_10024F380();
      }
      else
      {
        unsigned int v5 = *(void **)(v2 + 8 * v4);
        swift_retain();
      }
      uint64_t v6 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v7 = v5[2];
      uint64_t v8 = v5[3];
      uint64_t v21 = v5[4];
      id v9 = a2;
      uint64_t v10 = sub_1000D5AE4();
      uint64_t v11 = sub_1000D428C();
      uint64_t v13 = v12;

      if (v7 == v10)
      {
        BOOL v14 = v8 == v11 && v21 == v13;
        unint64_t v2 = v18;
        if (v14)
        {

          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v3 = 1;
          goto LABEL_22;
        }
        char v15 = sub_10024FA60();
        swift_release();
        swift_bridgeObjectRelease();
        if (v15)
        {

          uint64_t v3 = 1;
          goto LABEL_22;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v2 = v18;
      }
      ++v4;
      if (v6 == v17)
      {

        uint64_t v3 = 0;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }

LABEL_22:
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_10009CA30(void *a1, Swift::Int a2, unint64_t a3)
{
  unint64_t v20 = (unint64_t)a1;
  uint64_t v4 = a1;
  _OWORD v19[2] = a2;
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_10024F6F0())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)sub_10024F380() : *(id *)(a3 + 8 * v6);
      uint64_t v4 = v7;
      uint64_t v8 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v9 = v5;
      sub_1000A4DD0();
      char v11 = v10;
      id v13 = v12;
      sub_10024EA70();
      if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10024EAD0();
      }
      sub_10024EB10();
      sub_10024EAC0();
      if (v11)
      {
        id v14 = v13;
        Swift::Int v15 = sub_1000D428C();
        Swift::Int v17 = v16;

        sub_1001F1AF0(v19, v15, v17);
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      ++v6;
      uint64_t v5 = v9;
      if (v8 == v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = (void *)v20;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_18:
  swift_release();
  return v4;
}

uint64_t sub_10009CC0C(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    uint64_t v17 = v3;
    uint64_t v4 = 0;
    uint64_t v18 = v2;
    unint64_t v19 = v2 & 0xC000000000000001;
    while (1)
    {
      if (v19)
      {
        uint64_t v5 = (void *)sub_10024F380();
      }
      else
      {
        uint64_t v5 = *(void **)(v2 + 8 * v4 + 32);
        swift_retain();
      }
      uint64_t v7 = v5[2];
      uint64_t v6 = v5[3];
      uint64_t v8 = v5[4];
      id v9 = a2;
      uint64_t v10 = sub_1000D5AE4();
      uint64_t v2 = sub_1000D428C();
      uint64_t v12 = v11;

      if (v7 == v10)
      {
        if (v6 == v2 && v8 == v12)
        {

          swift_release();
          swift_bridgeObjectRelease();
          return v4;
        }
        char v14 = sub_10024FA60();
        swift_release();
        swift_bridgeObjectRelease();
        if (v14)
        {

          return v4;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v15 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      ++v4;
      uint64_t v2 = v18;
      if (v15 == v17)
      {

        return 0;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }

  return 0;
}

uint64_t sub_10009CDC4(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = (void *)sub_10024F380();
      }
      else
      {
        uint64_t v6 = *(void **)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      if (v6[2] == a2[2])
      {
        if (v6[3] == a2[3] && v6[4] == a2[4])
        {
          swift_release();
LABEL_19:
          swift_release();
          return v5;
        }
        char v8 = sub_10024FA60();
        swift_release();
        if (v8) {
          goto LABEL_19;
        }
      }
      else
      {
        swift_release();
      }
      uint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      ++v5;
      if (v9 == v4) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
LABEL_17:
  swift_release();
  return 0;
}

uint64_t sub_10009CF10(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = 0;
  if (v2)
  {
    while (1)
    {
      uint64_t v4 = (a1 & 0xC000000000000001) != 0 ? sub_10024F380() : swift_retain();
      char v5 = *(unsigned char *)(v4
                    + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_isComplete);
      swift_release();
      if (v5) {
        break;
      }
      uint64_t v6 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_13;
      }
      ++v3;
      if (v6 == v2) {
        return 0;
      }
    }
  }
  return v3;
}

uint64_t sub_10009CFF8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009D028()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009D058()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  unint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = v2;
  if (v3 >> 60 == 11)
  {
    swift_unownedRetain();
    uint64_t v4 = sub_10009D0F8();
    unint64_t v6 = v5;
    swift_unownedRelease();
    uint64_t v7 = *(void *)(v1 + 152);
    unint64_t v8 = *(void *)(v1 + 160);
    *(void *)(v1 + 152) = v4;
    *(void *)(v1 + 160) = v6;
    sub_100047398(v4, v6);
    sub_1000AC6A8(v7, v8);
  }
  sub_1000AC6BC(v2, v3);
  return v4;
}

uint64_t sub_10009D0F8()
{
  uint64_t v0 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v0 - 8, v1);
  unint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10024DDC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = [self bundleForClass:ObjCClassFromMetadata];
  id v15 = sub_1000ABE9C(0xD000000000000010, 0x800000010027CED0, 3289456, 0xE300000000000000, v14);

  if (!v15)
  {
    sub_1000195B4((uint64_t)v3, 1, 1, v4);
    goto LABEL_5;
  }
  sub_10024DD70();

  Swift::Int v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v16(v3, v9, v4);
  sub_1000195B4((uint64_t)v3, 0, 1, v4);
  if (sub_10001FA0C((uint64_t)v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1000AC6D0((uint64_t)v3, &qword_100309778);
    return 0;
  }
  v16(v12, v3, v4);
  uint64_t v17 = sub_10024DE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  return v17;
}

uint64_t sub_10009D51C(void *a1, uint64_t a2)
{
  sub_1000AD160(a1, a1[3]);
  uint64_t v3 = sub_1000E0A6C();
  uint64_t v5 = v4;
  swift_beginAccess();
  *(void *)(a2 + 96) = v3;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(a2 + 104) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10009D5A0()
{
  sub_1000ACEAC();
  unsigned __int8 v11 = 0;
  sub_1000AC84C();
  sub_1002068C0();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10024E1F0();
  sub_10001B0E8(v3, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_10024E1D0();
  os_log_type_t v5 = sub_10024EE00();
  if (sub_1000ACE08(v5))
  {
    uint64_t v6 = sub_1000AC834();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000F3F3C(v1, v0, v10);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    sub_10006FF20();
    if (v11) {
      uint64_t v7 = 7561576;
    }
    else {
      uint64_t v7 = 0x2074276E73656F64;
    }
    if (v11) {
      unint64_t v8 = 0xE300000000000000;
    }
    else {
      unint64_t v8 = 0xEC00000065766168;
    }
    sub_1000F3F3C(v7, v8, v10);
    sub_10024F100();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v2, "%s %s transaction(s) in billing error", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006FF20();
  return v11;
}

void sub_10009D7DC(void *a1, BOOL *a2)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v3 = (void *)sub_1000E1418();
  uint64_t v4 = v3;
  if (v3) {

  }
  *a2 = v4 != 0;
}

uint64_t sub_10009D83C()
{
  uint64_t v1 = v0;
  sub_10001C2A8((void *)(v1 + 56), *(void *)(v1 + 80));
  sub_1002068C0();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10024E1F0();
  sub_10001B0E8(v2, (uint64_t)qword_10034C0E0);
  uint64_t v3 = sub_10024E1D0();
  LOBYTE(v4) = sub_10024EE30();
  if (!os_log_type_enabled(v3, (os_log_type_t)v4)) {
    goto LABEL_6;
  }
  *(_DWORD *)sub_10003FD90() = 134217984;
  sub_10006FF20();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_25;
  }
  while (1)
  {
    sub_10024F100();
    sub_1000ACC04((void *)&_mh_execute_header, v3, (os_log_type_t)v4, "Resolving %ld transactions in billing error");
    sub_10003FBCC();
LABEL_6:

    sub_10006FF20();
    uint64_t v4 = _swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_10024F6F0();
      if (!v5) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_21;
      }
    }
    if (v5 >= 1) {
      break;
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = 0;
  unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
  do
  {
    if (v7) {
      id v8 = (id)sub_10024F380();
    }
    else {
      id v8 = (id)_swiftEmptyArrayStorage[v6 + 4];
    }
    uint64_t v9 = v8;
    sub_1000A0DBC((uint64_t)v8);
    sub_1000ACC78();
    if (v10)
    {
    }
    else
    {
      id v11 = v9;
      uint64_t v12 = sub_10024E1D0();
      os_log_type_t v13 = sub_10024EE10();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v15 = v5;
        uint64_t v16 = v1;
        uint64_t v17 = sub_1000AC834();
        swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v18 = sub_1000D427C();
        *(void *)(v17 + 4) = sub_1000ACBC8(v18, v19);
        swift_bridgeObjectRelease();

        *(_WORD *)(v17 + 12) = 2080;
        sub_10006918C();
        uint64_t v20 = sub_10024FB80();
        *(void *)(v17 + 14) = sub_1000ACBC8(v20, v21);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to resolve billing error for %s: %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        sub_10003FBCC();
        uint64_t v1 = v16;
        uint64_t v5 = v15;
        sub_10003FBCC();
      }
      else
      {
      }
      unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
    }
    ++v6;
  }
  while (v5 != v6);
LABEL_21:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10009DBE4(void *a1, void *a2)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000E14B0();
  *a2 = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10009DC4C()
{
  sub_10001C2A8((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_1002068C0();
  return 0;
}

void sub_10009DCEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000DEE3C();
  v13[2] = a8;
  id v11 = sub_1001BECDC((uint64_t (*)(id *))sub_1000AC720, (uint64_t)v13, v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = *a9;
  *a9 = v11;
}

void sub_10009DDC0()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10024E030();
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_1000ACE78();
  sub_10001C2A8(v4, v4[3]);
  sub_10024DFA0();
  sub_1000E0220();
  id v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v5);
  uint64_t v12 = *v2;
  *uint64_t v2 = v11;

  sub_10003C8C8();
}

void *sub_10009DEA4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1000D428C();
  sub_1000ACDCC();
  sub_10009EA18();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  sub_1000D5DB0();
  uint64_t v6 = sub_1000D946C(8);
  if (v7) {
    uint64_t v6 = sub_1000D5AE4();
  }
  sub_1000D5E48(v6, 0);
  double v8 = COERCE_DOUBLE(sub_1000D9478(12));
  if (v9) {
    double v8 = sub_1000D453C();
  }
  sub_1000D5E58(*(uint64_t *)&v8, 0);
  sub_1000A1278(v5, 0);
  sub_1000D5EC8(1);
  sub_1000A1278(a3, 1);
  return v5;
}

void sub_10009DF90()
{
  sub_1000AC794();
  HIDWORD(v84) = v2;
  uint64_t v4 = v3;
  uint64_t v85 = v5;
  uint64_t v7 = v6;
  uint64_t v87 = v8;
  uint64_t v89 = v9;
  uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v11 = sub_100026018(v10);
  __chkstk_darwin(v11, v12);
  sub_1000869F4();
  uint64_t v13 = sub_10024E030();
  sub_10001B550();
  uint64_t v15 = v14;
  __chkstk_darwin(v16, v17);
  sub_1000AC748();
  uint64_t v79 = v18;
  sub_1000AC774();
  __chkstk_darwin(v19, v20);
  char v22 = (char *)&v77 - v21;
  uint64_t v83 = v0[16];
  uint64_t v23 = *(os_unfair_lock_s **)(v83 + 16);
  swift_retain();
  os_unfair_lock_lock(v23);
  swift_getKeyPath();
  uint64_t v86 = sub_1000A7A3C();
  swift_release();
  os_unfair_lock_unlock(v23);
  uint64_t v88 = v0;
  swift_release();
  sub_1000AC460(v4, v1, (uint64_t *)&unk_10030FD70);
  uint64_t v24 = sub_1000ACDFC();
  if (sub_10001FA0C(v24, v25, v13) == 1)
  {
    sub_10024E010();
    sub_1000AC6D0(v1, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v22, v1, v13);
  }
  sub_10024DF70();
  uint64_t v27 = v26;
  long long v28 = *(void (**)(void, void))(v15 + 8);
  uint64_t v80 = v15 + 8;
  uint64_t v81 = v13;
  v78 = v28;
  v28(v22, v13);
  sub_100019524(&qword_10030E958);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100257700;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 64) = &type metadata for String;
  *(void *)(inited + 40) = 7959874;
  *(void *)(inited + 48) = 0xE300000000000000;
  *(unsigned char *)(inited + 72) = 2;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 80) = v87;
  *(void *)(inited + 88) = v7;
  *(unsigned char *)(inited + 112) = 7;
  *(void *)(inited + 144) = &type metadata for UInt;
  *(void *)(inited + 120) = v86;
  *(unsigned char *)(inited + 152) = 9;
  uint64_t v30 = v89;
  uint64_t v31 = *(void *)(v89 + 80);
  uint64_t v32 = *(void *)(v89 + 88);
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 160) = v31;
  *(void *)(inited + 168) = v32;
  *(unsigned char *)(inited + 192) = 11;
  *(void *)(inited + 224) = &type metadata for Double;
  *(void *)(inited + 200) = v27;
  *(unsigned char *)(inited + 232) = 13;
  *(void *)(inited + 264) = &type metadata for Int;
  *(void *)(inited + 240) = v85;
  *(unsigned char *)(inited + 272) = 16;
  unint64_t v33 = 0xEA0000000000656CLL;
  uint64_t v34 = *(unsigned __int8 *)(v30 + 112);
  uint64_t v35 = inited;
  unint64_t v36 = 0x62616D75736E6F43;
  switch(v34)
  {
    case 1:
      sub_1000AD1D0();
      sub_1000AD1BC();
      break;
    case 2:
      unint64_t v36 = 0xD000000000000017;
      unint64_t v33 = 0x8000000100278110;
      break;
    case 3:
      sub_1000AD190();
      break;
    default:
      break;
  }
  *(void *)(v35 + 304) = &type metadata for String;
  *(void *)(v35 + 280) = v36;
  *(void *)(v35 + 288) = v33;
  *(unsigned char *)(v35 + 312) = 20;
  sub_1000AD160(v88 + 2, v88[5]);
  uint64_t v85 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10008A3E4(v94);
  uint64_t v38 = v94[0];
  uint64_t v37 = v94[1];
  swift_bridgeObjectRetain();
  sub_10001DB0C((uint64_t)v94);
  *(void *)(v35 + 344) = &type metadata for String;
  *(void *)(v35 + 320) = v38;
  *(void *)(v35 + 328) = v37;
  *(unsigned char *)(v35 + 352) = 21;
  unint64_t v39 = sub_10020F78C();
  LODWORD(v37) = v39;
  LOWORD(v38) = v40;
  __int16 v42 = v41;
  unint64_t v43 = HIDWORD(v39);
  unint64_t v44 = HIWORD(v39);
  unint64_t v45 = v40 >> 16;
  unint64_t v46 = HIDWORD(v40);
  unint64_t v47 = HIWORD(v40);
  HIDWORD(v82) = HIWORD(v41);
  type metadata accessor for Decimal(0);
  *(void *)(v35 + 384) = v48;
  *(_DWORD *)(v35 + 360) = v37;
  *(_WORD *)(v35 + 364) = v43;
  *(_WORD *)(v35 + 366) = v44;
  *(_WORD *)(v35 + 368) = v38;
  *(_WORD *)(v35 + 370) = v45;
  *(_WORD *)(v35 + 372) = v46;
  *(_WORD *)(v35 + 374) = v47;
  *(_WORD *)(v35 + 376) = v42;
  *(_WORD *)(v35 + 378) = WORD2(v82);
  sub_1000AC21C();
  uint64_t v93 = sub_10024E510();
  Swift::String v49 = *(os_unfair_lock_s **)(v83 + 16);
  Swift::String v50 = v88;
  swift_retain();
  os_unfair_lock_lock(v49);
  uint64_t v51 = 3157553;
  if (*((unsigned char *)v50 + 112)) {
    uint64_t v51 = 3157554;
  }
  uint64_t v92 = &type metadata for String;
  uint64_t v90 = v51;
  unint64_t v91 = 0xE300000000000000;
  uint64_t v52 = sub_1000AD11C();
  sub_1002055E0(v52, 26);
  os_unfair_lock_unlock(v49);
  swift_release();
  switch(*(unsigned char *)(v89 + 112))
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v53 = v85;
      uint64_t v54 = v87;
      goto LABEL_13;
    default:
      char v55 = sub_10024FA60();
      swift_bridgeObjectRelease();
      uint64_t v53 = v85;
      uint64_t v54 = v87;
      if (v55)
      {
LABEL_13:
        uint64_t v92 = &type metadata for UInt;
        uint64_t v90 = v86;
        sub_1002055E0((uint64_t)&v90, 8);
        uint64_t v92 = &type metadata for Double;
        uint64_t v90 = v27;
        sub_1002055E0((uint64_t)&v90, 12);
      }
      else
      {
        switch(*(unsigned char *)(v89 + 112))
        {
          case 1:
          case 2:
          case 3:
            char v66 = sub_10024FA60();
            swift_bridgeObjectRelease();
            if ((v66 & 1) == 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v67 = (void *)sub_10009FF58();
              swift_bridgeObjectRelease();
              if (v67)
              {
                uint64_t v68 = sub_1000D5AE4();
                uint64_t v92 = &type metadata for UInt;
                uint64_t v90 = v68;
                sub_1002055E0((uint64_t)&v90, 8);
                *(double *)&uint64_t v69 = sub_1000D453C();
                uint64_t v92 = &type metadata for Double;
                uint64_t v90 = v69;
                uint64_t v70 = sub_1000AD11C();
                sub_1002055E0(v70, 12);
                sub_10024E010();
                char v71 = sub_1000D5964();
                sub_1000ACADC();
                v72();
                if (v71)
                {
                  uint64_t v92 = &type metadata for String;
                  uint64_t v90 = 0x6F6C6E776F646552;
                  unint64_t v91 = 0xEA00000000006461;
                  uint64_t v73 = sub_1000AD11C();
                  sub_1002055E0(v73, 0);
                }
                uint64_t v74 = sub_1000ACCF8();
                if (v75)
                {
                  uint64_t v92 = &type metadata for String;
                  uint64_t v90 = v74;
                  unint64_t v91 = v75;
                  uint64_t v76 = sub_1000AD11C();
                  sub_1002055E0(v76, 15);
                }
              }
            }
            break;
          default:
            swift_bridgeObjectRelease();
            break;
        }
      }
      uint64_t v90 = 0;
      Swift::String v56 = sub_10001C2A8(v88 + 7, v88[10]);
      __chkstk_darwin(v56, v57);
      sub_1000ACD1C();
      *(void *)(v58 - 16) = &v90;
      *(void *)(v58 - 8) = &v93;
      sub_100206AB8();
      if ((v84 & 0x100000000) != 0)
      {
        if (qword_100308D48 != -1) {
          swift_once();
        }
        sub_100019524(&qword_1003090E8);
        uint64_t v59 = sub_1000AC8E4();
        int v60 = v59;
        *(_OWORD *)(v59 + 16) = xmmword_100255FB0;
        *(void *)(v59 + 32) = v54;
        *(void *)(v59 + 40) = v53;
        swift_bridgeObjectRetain();
        sub_10010C1E0(0, v60, 72, 0x27CE80, v61, v62, v63, v64, v77, (uint64_t)v78, v79, v80, v81, v82, v83, v84, v85, v86, v87,
          (uint64_t)v88);
        swift_bridgeObjectRelease();
      }
      if (qword_100308D48 != -1) {
        swift_once();
      }
      if (!v90)
      {
        __break(1u);
        JUMPOUT(0x10009E7FCLL);
      }
      id v65 = (id)v90;
      sub_100143968();

      swift_bridgeObjectRelease();
      sub_1000AC7B0();
      return;
  }
}

#error "10009E96C: call analysis failed (funcsize=113)"

void sub_10009EA18()
{
  sub_1000AC794();
  int v2 = v0;
  int v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v14 = sub_100026018(v13);
  __chkstk_darwin(v14, v15);
  sub_1000AC748();
  uint64_t v133 = v16;
  sub_1000AC774();
  __chkstk_darwin(v17, v18);
  sub_1000ACA68();
  v131[1] = v19;
  sub_1000AC774();
  __chkstk_darwin(v20, v21);
  sub_1000ACA68();
  uint64_t v134 = v22;
  sub_1000AC774();
  __chkstk_darwin(v23, v24);
  sub_1000ACD10();
  v131[0] = v25;
  sub_10024E030();
  sub_10001B550();
  uint64_t v137 = v27;
  uint64_t v138 = v26;
  __chkstk_darwin(v26, v28);
  sub_1000AC748();
  v131[3] = v29;
  sub_1000AC774();
  __chkstk_darwin(v30, v31);
  sub_1000ACA68();
  v131[2] = v32;
  sub_1000AC774();
  __chkstk_darwin(v33, v34);
  sub_1000ACB8C();
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)v131 - v37;
  sub_10009DF90();
  unint64_t v40 = v39;
  id v149 = 0;
  sub_1000AC84C();
  v144 = &v149;
  uint64_t v145 = v12;
  uint64_t v141 = v10;
  uint64_t v142 = v8;
  uint64_t v146 = v10;
  uint64_t v147 = v8;
  uint64_t v132 = v6;
  uint64_t v148 = v6;
  sub_1002068C0();
  sub_1000D453C();
  v139 = v38;
  sub_10024DF60();
  int v136 = v4;
  if (v149)
  {
    id v41 = v149;
    *(double *)&uint64_t v42 = COERCE_DOUBLE(sub_1000AD148());
    char v44 = v43;

    double v45 = *(double *)&v42;
    if (v44) {
      double v45 = 0.0;
    }
  }
  else
  {
    double v45 = 0.0;
  }
  uint64_t v47 = v137;
  uint64_t v46 = v138;
  uint64_t v48 = OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___purchaseDate;
  double v49 = *(double *)&v40[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___purchaseDate] - v45;
  sub_10024DF60();
  Swift::String v50 = v0 + 2;
  sub_1000AD160(v0 + 2, v0[5]);
  unsigned __int8 v51 = sub_10008B4BC();
  double v52 = sub_1000A1614(v1, v51);
  v140 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8);
  uint64_t v143 = v47 + 8;
  sub_10003FDC8();
  v57(v53, v54, v55, v56);
  uint64_t v135 = v48;
  if (v49 >= v52)
  {
    sub_1000AD178();
    sub_1000ACAD0();
    v65(v61, v62, v63, v64);
  }
  else
  {
    if (v149)
    {
      id v58 = v149;
      uint64_t v59 = v134;
      sub_1000D5B40(v134);

      uint64_t v60 = v59;
      Swift::String v50 = v2 + 2;
      uint64_t v46 = v138;
    }
    else
    {
      uint64_t v60 = v134;
      uint64_t v66 = sub_1000AD0A8();
      sub_1000195B4(v66, v67, 1, v46);
    }
    sub_1000ACAD0();
    v72(v68, v69, v70, v71);
    uint64_t v73 = sub_1000AD0A8();
    if (sub_10001FA0C(v73, v74, v46) == 1)
    {
      sub_1000AD178();
      sub_1000AD044();
      v79(v75, v76, v77, v78);
      sub_1000AC6D0(v60, (uint64_t *)&unk_10030FD70);
    }
    else
    {
      sub_10003FDC8();
      v84(v80, v81, v82, v83);
      uint64_t v85 = sub_1000AD178();
      v86(v85);
    }
  }
  sub_1000ACDB4();
  sub_1000195B4(v87, v88, v89, v46);
  sub_1000D5FB0();
  sub_1000D60E0(0, 0);
  uint64_t v90 = *(os_unfair_lock_s **)(v2[16] + 16);
  swift_retain();
  os_unfair_lock_lock(v90);
  swift_getKeyPath();
  uint64_t v91 = sub_1000A7A3C();
  swift_release();
  os_unfair_lock_unlock(v90);
  swift_release();
  sub_1000D6204(v91, 0);
  uint64_t v92 = *(void *)(v12 + 80);
  swift_bridgeObjectRetain();
  sub_1000D5B48(v92);
  swift_bridgeObjectRelease();
  sub_10001C2A8(v50, v2[5]);
  sub_1000D428C();
  int v93 = sub_10008B4BC();
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void *)(v12 + 176);
  int v95 = *(unsigned __int8 *)(v12 + 184);
  if (*(void *)(v12 + 136))
  {
    swift_retain();
    if (sub_10009FBA0())
    {
      LODWORD(v134) = v95;
    }
    else
    {
      uint64_t v94 = sub_100175300();
      LODWORD(v134) = v96;
    }
    swift_release();
  }
  else
  {
    LODWORD(v134) = *(unsigned __int8 *)(v12 + 184);
  }
  swift_bridgeObjectRetain();
  sub_10024E010();
  uint64_t v97 = (void *)sub_10009DC4C();
  swift_bridgeObjectRelease();
  v98 = v140;
  sub_1000ACADC();
  v98(v99, v100, v101, v102);
  if (v97)
  {
    LODWORD(v142) = v93;
    uint64_t v103 = v94;
    double v104 = sub_1000D453C();
    uint64_t v105 = v133;
    sub_1000AC460(v132, v133, (uint64_t *)&unk_10030FD70);
    if (sub_10001FA0C(v105, 1, v46) == 1)
    {
      sub_10024E010();
      sub_1000AC6D0(v105, (uint64_t *)&unk_10030FD70);
    }
    else
    {
      uint64_t v106 = sub_1000AD178();
      v107(v106, v105, v46);
    }
    sub_10024DF70();
    double v109 = v108;
    sub_1000ACADC();
    v98(v110, v111, v112, v113);
    if (v104 < v109)
    {
      uint64_t v114 = sub_1000D9478(4);
      char v116 = v115;

      char v117 = v116 & 1;
      goto LABEL_28;
    }
    uint64_t v94 = v103;

    int v93 = v142;
  }
  sub_10024DF60();
  double v118 = sub_100051580(v94, v134, v1, v93);
  sub_1000ACADC();
  v98(v119, v120, v121, v122);
  char v117 = 0;
  uint64_t v114 = *(void *)&v118;
LABEL_28:
  sub_1000D6214(v114, v117);
  uint64_t v123 = *(void *)(v12 + 192);
  uint64_t v124 = *(void *)(v12 + 200);
  swift_bridgeObjectRetain();
  sub_1000D621C(v123, v124);
  sub_1000A1278(v40, v136 & 1);
  switch(sub_1000D627C())
  {
    case 2u:
      swift_bridgeObjectRelease();
      break;
    default:
      char v125 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v125 & 1) == 0) {
        sub_1000A801C(v40);
      }
      break;
  }
  sub_10003FDC8();
  v130(v126, v127, v128, v129);

  sub_1000AC7B0();
}

void sub_10009F19C(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v21[0] = a4;
  v21[1] = a5;
  uint64_t v9 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10024E030();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000AC460(a6, (uint64_t)v12, (uint64_t *)&unk_10030FD70);
  if (sub_10001FA0C((uint64_t)v12, 1, v13) == 1)
  {
    swift_bridgeObjectRetain();
    sub_10024E010();
    sub_1000AC6D0((uint64_t)v12, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    swift_bridgeObjectRetain();
  }
  sub_1000E0220();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v20 = *a2;
  *a2 = v19;
}

uint64_t sub_10009F388(uint64_t a1, char a2)
{
  if (sub_1000D62B4()) {
    return 0;
  }
  if (a2) {
    unsigned __int8 v4 = 2;
  }
  else {
    unsigned __int8 v4 = 1;
  }
  sub_1000D62F0(v4);
  if (a2) {
    sub_1000D63A4(1u);
  }
  uint64_t v5 = (void *)sub_1000AD0A8();
  return sub_1000A1278(v5, v6);
}

uint64_t sub_10009F408()
{
  uint64_t v1 = v0;
  unsigned __int8 v17 = 4;
  v16[1] = (uint64_t)&_swiftEmptySetSingleton;
  sub_1000AC84C();
  sub_100206AB8();
  uint64_t v2 = sub_1000D5AE4();
  sub_1001F1F50(v16, v2);
  if (qword_100308D48 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100019260();
  swift_bridgeObjectRelease();
  sub_1000D428C();
  uint64_t v3 = sub_1000ACDCC();
  sub_100144254(v3);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100143830();
  uint64_t v4 = sub_1000ACCF8();
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    sub_100019524(&qword_1003090E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100255FB0;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v7;
    sub_1000D428C();
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v9 = (unint64_t)sub_1000FFCF4(inited, v1);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_10020BB20();
    if (v9 >> 62)
    {
      sub_1000ACAE8();
      uint64_t v13 = sub_10024F6F0();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_6;
      }
    }
    else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      sub_1000AD070();
      uint64_t v10 = (void *)sub_10024F380();
      swift_bridgeObjectRelease();
      double v11 = sub_1000D453C();
      if (v11 < sub_1000D453C())
      {
        uint64_t v12 = variable initialization expression of ClientOverride.requestBundleVersion();
        sub_1000D5B48(v12);
        sub_1000ACF50();
      }

      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t v14 = v17;
  swift_bridgeObjectRelease();
  return v14;
}

BOOL sub_10009F66C(void *a1, char *a2, void *a3, uint64_t *a4)
{
  sub_10001C2A8(a1, a1[3]);
  char v8 = sub_1001F0BD0(a3);
  *a2 = v8;
  if (v8 == 4)
  {
    sub_10001C2A8(a1, a1[3]);
    uint64_t v9 = sub_1000D428C();
    uint64_t v11 = v10;
    uint64_t v12 = sub_1000D5AE4();
    uint64_t v13 = sub_1001F0844(v9, v11, v12);
    swift_bridgeObjectRelease();
    *a4 = v13;
    swift_bridgeObjectRelease();
    char v8 = *a2;
  }
  return v8 == 4;
}

void sub_10009F734()
{
  sub_10003C984();
  sub_1000ACEAC();
  unint64_t v3 = sub_1000A118C();
  unint64_t v4 = v3;
  unint64_t v5 = v3 >> 62;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v30 = v1;
  uint64_t v29 = v0;
  if (v6)
  {
    sub_100039254();
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_34;
    }
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_10024F380();
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_1000D5AE4();

      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000ACFF8(v11);
        sub_100039254();
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10024F6F0();
    if (v13)
    {
LABEL_14:
      if (v13 >= 1)
      {
        uint64_t v14 = 0;
        uint64_t v15 = _swiftEmptyArrayStorage;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v16 = (id)sub_10024F380();
          }
          else {
            id v16 = *(id *)(v4 + 8 * v14 + 32);
          }
          unsigned __int8 v17 = v16;
          uint64_t v18 = sub_1000D946C(25);
          char v20 = v19;

          if ((v20 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100035C84();
              uint64_t v15 = v23;
            }
            unint64_t v22 = v15[2];
            unint64_t v21 = v15[3];
            if (v22 >= v21 >> 1)
            {
              sub_1000ACFF8(v21);
              sub_100035C84();
              uint64_t v15 = v24;
            }
            v15[2] = v22 + 1;
            v15[v22 + 4] = v18;
          }
          ++v14;
        }
        while (v13 != v14);
        goto LABEL_29;
      }
LABEL_34:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_14;
    }
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_29:
  swift_bridgeObjectRelease_n();
  uint64_t v25 = sub_10001C2A8(v29 + 7, v29[10]);
  __chkstk_darwin(v25, v26);
  sub_1000ACD1C();
  *(void *)(v27 - 16) = v2;
  *(void *)(v27 - 8) = v30;
  sub_100206AB8();
  uint64_t v28 = v29[16];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000CB234(v28, (uint64_t)v29, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v15);
  swift_bridgeObjectRelease();
  if (qword_100308D48 != -1) {
    swift_once();
  }
  sub_100144254((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  sub_10003C8C8();
}

unint64_t sub_10009FA68(void *a1, uint64_t *a2, unint64_t a3)
{
  return (unint64_t)sub_1001F03E4(a2, a3) & 1;
}

uint64_t sub_10009FAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10008C918();
  if (*(void *)(*(void *)(a1 + 96) + 16))
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v6; ++i)
      {
        uint64_t v8 = *(void *)(a2 + 8 * i + 32);
        sub_100144F3C(v8);
      }
      swift_bridgeObjectRelease();
    }
  }
  swift_endAccess();
  sub_10008C918();
  if (*(void *)(*(void *)(a1 + 104) + 16))
  {
    uint64_t v9 = *(void *)(a3 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      for (uint64_t j = 0; j != v9; ++j)
      {
        uint64_t v11 = *(void *)(a3 + 8 * j + 32);
        sub_100144F3C(v11);
      }
      swift_bridgeObjectRelease();
    }
  }
  return swift_endAccess();
}

uint64_t sub_10009FBA0()
{
  return 0;
}

void sub_10009FC0C(void *a1, unsigned char *a2)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000DDB8C();
  *a2 = v3 & 1;
}

uint64_t sub_10009FC6C(uint64_t a1)
{
  sub_10024E030();
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1000869F4();
  sub_100019524(&qword_1003090E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100255FB0;
  uint64_t v6 = *(void *)(a1 + 192);
  uint64_t v7 = *(void *)(a1 + 200);
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_1000FFCF4(inited, v1);
  swift_setDeallocating();
  sub_10020BB20();
  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1000ACAE8();
  uint64_t v13 = sub_10024F6F0();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1000AD070();
  uint64_t v9 = (void *)sub_10024F380();
  swift_bridgeObjectRelease();
  sub_10024E010();
  char v10 = sub_1000D5964();

  sub_1000AC864();
  v11();
  if (v10) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_10009FE0C()
{
  return 0;
}

void sub_10009FE8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1000DEA20(v12, v11, a3, a4, a5);
  swift_bridgeObjectRelease();
  uint64_t v16[2] = a5;
  uint64_t v14 = sub_1001BECDC((uint64_t (*)(id *))sub_1000AC5F4, (uint64_t)v16, v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = *a6;
  *a6 = v14;
}

uint64_t sub_10009FF58()
{
  sub_1000ACEB8();
  uint64_t v10 = 0;
  sub_1000AD160(v1 + 2, v1[5]);
  sub_10008A5FC(v2, v0);
  uint64_t v3 = sub_10008C960();
  uint64_t v5 = sub_1000FE9DC(v3, v4);
  swift_release();
  uint64_t v6 = sub_10001C2A8(v1 + 7, v1[10]);
  __chkstk_darwin(v6, v7);
  if (v5)
  {
    sub_1000ACD2C();
    *(void *)(v8 - 32) = &v10;
    *(void *)(v8 - 24) = v2;
    *(void *)(v8 - 16) = v0;
    *(void *)(v8 - 8) = v5;
    sub_1002068C0();
    swift_release();
  }
  else
  {
    sub_1002068C0();
  }
  return v10;
}

void sub_1000A0098(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v10 = *(void *)(a5 + 192);
  uint64_t v9 = *(void *)(a5 + 200);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000DDE90(a3, a4, v10, v9, 1);
  swift_bridgeObjectRelease();
  uint64_t v12 = *a2;
  *a2 = (void *)v11;
}

uint64_t sub_1000A0128(void *a1, void *a2)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000DE078();
  *a2 = v3;
  return _objc_release_x1();
}

uint64_t sub_1000A01A0()
{
  return sub_1000A11A4();
}

uint64_t sub_1000A01B8(void *a1, void *a2)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000DE274();
  *a2 = v3;
  return swift_bridgeObjectRelease();
}

void sub_1000A021C()
{
  sub_1000AC794();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v91 = v10;
  uint64_t v12 = v11;
  uint64_t v13 = sub_10009D058();
  if (v14 >> 60 != 15)
  {
    uint64_t v21 = v13;
    unint64_t v22 = v14;
    uint64_t v90 = v12;
    uint64_t v23 = sub_1000A7B04();
    if (!v23)
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_10024E1F0();
      id v16 = (void *)sub_1000ACE40(v67, (uint64_t)qword_10034C0E0);
      os_log_type_t v68 = sub_10024EE10();
      if (sub_1000AC818(v68))
      {
        uint64_t v69 = (_WORD *)sub_10003FD28();
        sub_1000ACC6C(v69);
        sub_1000AC8C4((void *)&_mh_execute_header, v70, v71, "Unable to find a signing identity for the provided data");
        sub_10003FBCC();
      }
      uint64_t v72 = sub_1000AD184();
      sub_10003F7F4(v72, v73);
      goto LABEL_43;
    }
    uint64_t v24 = v23;
    uint64_t v88 = v9;
    uint64_t v89 = v7;
    unint64_t v96 = 0;
    uint64_t v25 = sub_1000AC84C();
    __chkstk_darwin(v25, v26);
    sub_1000ACD2C();
    *(void *)(v27 - 32) = &v96;
    *(void *)(v27 - 24) = v90;
    *(void *)(v27 - 16) = v91;
    id v29 = *v28;
    sub_1002068C0();
    uint64_t v30 = v96;
    if (!v96)
    {
      __break(1u);
      JUMPOUT(0x1000A0B74);
    }
    uint64_t v84 = v21;
    uint64_t v87 = v3;
    uint64_t v86 = v5;
    if (v96 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10024F6F0();
    }
    else
    {
      uint64_t v31 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v85 = v22;
    if (v31)
    {
      if (v31 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }
      uint64_t v32 = 0;
      unint64_t v33 = v30 & 0xC000000000000001;
      uint64_t v34 = _swiftEmptyArrayStorage;
      do
      {
        if (v33) {
          id v35 = (id)sub_10024F380();
        }
        else {
          id v35 = *(id *)(v30 + 8 * v32 + 32);
        }
        uint64_t v36 = v35;
        if (sub_1000D642C())
        {
          sub_10024E6B0();
          sub_1000ACF40();
          uint64_t v37 = sub_1000D64FC();
          int v95 = &type metadata for Int;
          uint64_t v93 = v37;
          sub_1000ACB1C();
          sub_10024E6B0();
          sub_1000ACF40();
          uint64_t v38 = sub_1000D427C();
          int v95 = &type metadata for String;
          uint64_t v93 = v38;
          uint64_t v94 = v39;
          sub_1000ACB1C();
          sub_10024E6B0();
          sub_1000ACF40();
          uint64_t v93 = sub_1000D5AE4();
          uint64_t v40 = sub_10024F9E0();
          int v95 = &type metadata for String;
          uint64_t v93 = v40;
          uint64_t v94 = v41;
          sub_1000ACB1C();
          uint64_t v42 = sub_10024E6B0();
          uint64_t v44 = v43;
          sub_1000D453C();
          int v95 = (void *)sub_10024E030();
          sub_1000709B8(&v93);
          sub_1000AD090();
          sub_10020554C((uint64_t)&v93, v42, v44);
          uint64_t v45 = sub_1000D946C(8);
          if ((v46 & 1) == 0)
          {
            uint64_t v47 = v45;
            sub_1000D9478(12);
            if ((v48 & 1) == 0)
            {
              uint64_t v49 = sub_10024E6B0();
              uint64_t v51 = v50;
              uint64_t v93 = v47;
              uint64_t v52 = sub_10024F9E0();
              int v95 = &type metadata for String;
              uint64_t v93 = v52;
              uint64_t v94 = v53;
              sub_10020554C((uint64_t)&v93, v49, v51);
              sub_10024E6B0();
              sub_1000ACA90();
              sub_1000AD090();
              uint64_t v54 = v51;
              unint64_t v33 = v30 & 0xC000000000000001;
              sub_10020554C((uint64_t)&v93, v47, v54);
            }
          }
          sub_1000D6528();
          sub_1000ACA20();
          switch(v55)
          {
            case 1:
              sub_1000ACA44();
              goto LABEL_22;
            case 3:
              swift_bridgeObjectRelease();
              goto LABEL_25;
            default:
LABEL_22:
              char v56 = sub_10024FA60();
              swift_bridgeObjectRelease();
              if ((v56 & 1) == 0) {
                goto LABEL_28;
              }
LABEL_25:
              uint64_t v57 = sub_1000D9478(4);
              if ((v58 & 1) == 0)
              {
                sub_10024E6B0();
                sub_1000ACA90();
                sub_1000AD090();
                uint64_t v57 = sub_1000ACD3C();
              }
              BOOL v59 = sub_1000D6564(v57);
              uint64_t v60 = sub_10024E6B0();
              int v95 = &type metadata for Int;
              uint64_t v93 = v59;
              sub_10020554C((uint64_t)&v93, v60, v61);
LABEL_28:
              sub_1000D9478(3);
              if (v62 & 1) == 0 && (sub_1000D4218())
              {
                sub_10024E6B0();
                sub_1000ACA90();
                sub_1000AD090();
                sub_1000ACD3C();
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_100035300();
                uint64_t v34 = v65;
              }
              unint64_t v64 = v34[2];
              unint64_t v63 = v34[3];
              if (v64 >= v63 >> 1)
              {
                sub_1000ACFF8(v63);
                sub_100035300();
                uint64_t v34 = v66;
              }
              v34[2] = v64 + 1;
              v34[v64 + 4] = _swiftEmptyDictionarySingleton;
              break;
          }
        }

        ++v32;
      }
      while (v31 != v32);
    }
    else
    {
      uint64_t v34 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007C75C((uint64_t)v34);
    swift_bridgeObjectRelease();
    id v74 = objc_allocWithZone((Class)ASOctaneReceiptEncoder);
    id v1 = sub_1000AB0FC();
    uint64_t v93 = 0;
    id v75 = objc_msgSend(v1, "encodeAndSignWithIdentity:error:", v24, &v93, v84, v85, v86, v87, v88, v89);
    uint64_t v30 = v93;
    id v0 = (id)v93;
    sub_10024DF10();

    if (!v0)
    {

      sub_1000ACB50();
LABEL_51:

      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    uint64_t v76 = qword_100308DE0;
    id v29 = v0;
    if (v76 == -1)
    {
LABEL_47:
      uint64_t v77 = sub_10024E1F0();
      sub_10001B0E8(v77, (uint64_t)qword_10034C0E0);
      id v78 = v29;
      uint64_t v79 = sub_10024E1D0();
      os_log_type_t v80 = sub_10024EE10();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = (uint8_t *)sub_10003FD90();
        id v92 = v0;
        uint64_t v82 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v81 = 138412290;
        uint64_t v93 = (uint64_t)v78;
        id v83 = v78;
        sub_10024F100();
        void *v82 = v30;

        _os_log_impl((void *)&_mh_execute_header, v79, v80, "Error encoding and signing receipt: %@", v81, 0xCu);
        sub_100019524(&qword_1003170F0);
        swift_arrayDestroy();
        id v0 = v92;
        sub_10003FBCC();
        sub_10003FBCC();

        sub_1000ACB50();
      }
      else
      {

        sub_1000ACB50();
      }
      goto LABEL_51;
    }
LABEL_55:
    swift_once();
    goto LABEL_47;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10024E1F0();
  id v16 = (void *)sub_1000ACE40(v15, (uint64_t)qword_10034C0E0);
  os_log_type_t v17 = sub_10024EE10();
  if (sub_1000AC818(v17))
  {
    uint64_t v18 = (_WORD *)sub_10003FD28();
    sub_1000ACC6C(v18);
    sub_1000AC8C4((void *)&_mh_execute_header, v19, v20, "Failed to find bundled signing key data");
    sub_10003FBCC();
  }
LABEL_43:

LABEL_52:
  sub_1000ACF34();
  sub_1000AC7B0();
}

uint64_t sub_1000A0B84(void *a1, void *a2)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000DFAD0();
  *a2 = v3;
  return swift_bridgeObjectRelease();
}

void sub_1000A0BEC(uint64_t a1, char a2, char a3)
{
  char v4 = a3 & 1;
  uint64_t v5 = sub_10024E030();
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10002059C();
  uint64_t v12 = v11 - v10;
  sub_10024E020();
  sub_10024DF70();
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v5);
  sub_1000D65F0(v4);
  sub_1000D6650(v14, 0);
  sub_1000D66B8(1);
  uint64_t v15 = (void *)sub_1000ACDFC();
  sub_1000A1278(v15, v16);
  sub_1000ACC78();
  if (v18)
  {
    if (a2)
    {
      if (qword_100308D48 != -1) {
        swift_once();
      }
      sub_100019524(&qword_1003090E8);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_100255FB0;
      *(void *)(v19 + 32) = sub_1000D427C();
      *(void *)(v19 + 40) = v20;
      uint64_t v21 = sub_1000D428C();
      sub_1001432FC(v19, v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v23 = v17;
    sub_10006918C();
    swift_allocError();
    *uint64_t v24 = v23;
    swift_willThrow();
  }
}

uint64_t sub_1000A0DBC(uint64_t a1)
{
  if (sub_1000D6704())
  {
    uint64_t v2 = sub_1000A7820(a1);
  }
  else if (sub_1000D5828())
  {
    sub_1000A759C(a1);
    uint64_t v2 = 4;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_10024E1F0();
    char v4 = sub_1000ACE40(v3, (uint64_t)qword_10034C0E0);
    os_log_type_t v5 = sub_10024EE10();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)sub_10003FD28();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Trying to resolve billing issue for transaction with no issues", v6, 2u);
      sub_10003FBCC();
    }

    uint64_t v2 = 0;
  }
  if (qword_100308D48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000D428C();
  sub_100142C1C(v7, v8);
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1000A0F20()
{
  sub_1000ACEB8();
  sub_10001C2A8((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_1002068C0();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000A0F98(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_10001C2A8(a1, a1[3]);
  *a2 = sub_1000DF2A8(a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A0FFC()
{
  return 0;
}

uint64_t sub_1000A1058(void *a1, unint64_t *a2, uint64_t a3)
{
  sub_10001C2A8(a1, a1[3]);
  *a2 = sub_1000DFA44(a3);
  return _objc_release_x1();
}

uint64_t sub_1000A10B0()
{
  return 0;
}

uint64_t sub_1000A111C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10001C2A8(a1, a1[3]);
  *a2 = sub_1000DF898(a3, a4, a5);
  return _objc_release_x1();
}

uint64_t sub_1000A118C()
{
  return sub_1000A11A4();
}

uint64_t sub_1000A11A4()
{
  sub_1000ACEAC();
  sub_10001C2A8((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_1002068C0();
  uint64_t result = 0;
  __break(1u);
  return result;
}

uint64_t sub_1000A1210(void *a1, void *a2)
{
  sub_10001C2A8(a1, a1[3]);
  sub_1000DFAD0();
  *a2 = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A1278(void *a1, char a2)
{
  HIBYTE(v23) = 4;
  sub_1000AC84C();
  uint64_t v20 = (char *)&v23 + 7;
  uint64_t v21 = (uint64_t)a1;
  sub_100206AB8();
  uint64_t v4 = OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels;
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels))
  {
    if (qword_100308D48 != -1) {
      swift_once();
    }
    sub_100019524(&qword_1003090E8);
    os_log_type_t v5 = (__n128 *)sub_1000AC8E4();
    v5[2].n128_u64[0] = sub_1000ACBEC(v5, (__n128)xmmword_100255FB0);
    v5[2].n128_u64[1] = v6;
    sub_10010C1E0(1, (int)v5, 33, 0x27CE20, v7, v8, v9, v10, v18, v19, (uint64_t)&v23 + 7, (uint64_t)a1, v22, v23, v24, v25, v26, v27, v28,
      v29);
    swift_bridgeObjectRelease();
    sub_1000A801C(a1);
  }
  if (a2 & 1) != 0 && (*((unsigned char *)a1 + v4) & 2) != 0 && (sub_1000D685C())
  {
    if (qword_100308D48 != -1) {
      swift_once();
    }
    sub_100019524(&qword_1003090E8);
    uint64_t v11 = (__n128 *)sub_1000AC8E4();
    v11[2].n128_u64[0] = sub_1000ACBEC(v11, (__n128)xmmword_100255FB0);
    v11[2].n128_u64[1] = v12;
    sub_10010C1E0(0, (int)v11, 33, 0x27CE20, v13, v14, v15, v16, v18, v19, (uint64_t)v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29);
    swift_bridgeObjectRelease();
  }
  if (qword_100308D48 != -1) {
    swift_once();
  }
  sub_100143968();
  return HIBYTE(v23);
}

BOOL sub_1000A147C(void *a1, unsigned char *a2, void *a3)
{
  sub_10001C2A8(a1, a1[3]);
  char v5 = sub_1001F0CDC(a3);
  *a2 = v5;
  return v5 == 4;
}

void *sub_1000A14CC()
{
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000A157C(void *a1, uint64_t *a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v15 = sub_1000DFCA0(a4, a5, a6, a7, a8);
  LOBYTE(a7) = v16;
  *a2 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = a7 & 1;
  return result;
}

double sub_1000A1614(uint64_t a1, unsigned __int8 a2)
{
  unsigned int v3 = a2;
  uint64_t v4 = sub_10024E030();
  sub_10001B550();
  uint64_t v6 = v5;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  int v14 = (char *)&v26 - v13;
  int v15 = a2 >> 6;
  if (v3 > 0x3F)
  {
    if (v15 != 2)
    {
      sub_1000ACAD0();
      v23();
      double v24 = sub_1001EFB40(5, a2 & 0x3F);
      double v18 = v24 + v24;
      goto LABEL_9;
    }
  }
  else if (a2)
  {
    sub_1000ACAD0();
    v16();
    double v17 = (double)sub_1002140FC((uint64_t)v11, 2, 5);
    double v18 = sub_1001EFAF0(a2) * v17;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v4);
    return v18;
  }
  uint64_t v19 = sub_10008C960();
  v20(v19);
  double v21 = sub_1001EF934(60, 3, a2, (uint64_t)v14);
  double v22 = 1.0;
  if (v15 == 2) {
    double v22 = 2.0;
  }
  return v22 * v21;
}

void sub_1000A17B8()
{
  sub_1000AC794();
  uint64_t v113 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v6 = sub_100026018(v5);
  __chkstk_darwin(v6, v7);
  sub_1000AC748();
  uint64_t v111 = v8;
  sub_1000AC774();
  __chkstk_darwin(v9, v10);
  sub_1000ACD10();
  uint64_t v114 = v11;
  uint64_t v12 = sub_10024E030();
  sub_10001B550();
  uint64_t v14 = v13;
  __chkstk_darwin(v15, v16);
  sub_1000ACC50();
  __chkstk_darwin(v17, v18);
  sub_1000ACB8C();
  __chkstk_darwin(v19, v20);
  sub_1000ACA68();
  uint64_t v109 = v21;
  sub_1000AC774();
  __chkstk_darwin(v22, v23);
  sub_1000ACA68();
  uint64_t v110 = v24;
  sub_1000AC774();
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)v106 - v27;
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_10024E1F0();
  uint64_t v30 = sub_10001B0E8(v29, (uint64_t)qword_10034C0E0);
  id v31 = v4;
  uint64_t v32 = sub_10024E1D0();
  os_log_type_t v33 = sub_10024EE00();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v107 = v2;
  uint64_t v108 = v1;
  if (v34)
  {
    id v35 = (uint8_t *)sub_10003FD90();
    *(_DWORD *)id v35 = 134217984;
    uint64_t v112 = v30;
    uint64_t v36 = sub_1000D5AE4();
    sub_1000AD030(v36);
    uint64_t v30 = v112;
    sub_10024F100();

    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Beginning billing retry for transaction: %lu", v35, 0xCu);
    sub_10003FBCC();
  }
  else
  {
  }
  sub_1000D9478(4);
  if (v37)
  {
    uint64_t v38 = v114;
    sub_1000195B4(v114, 1, 1, v12);
  }
  else
  {
    uint64_t v38 = v114;
    sub_10024DF60();
    sub_1000195B4(v38, 0, 1, v12);
    if (sub_10001FA0C(v38, 1, v12) != 1)
    {
      uint64_t v112 = v30;
      sub_1000AD044();
      v39();
      uint64_t v40 = v113 + 16;
      sub_10001C2A8((void *)v113 + 2, *((void *)v113 + 5));
      uint64_t v41 = sub_1000D427C();
      uint64_t v42 = v12;
      uint64_t v44 = v43;
      uint64_t v45 = sub_1000D428C();
      sub_10008A5FC(v45, v46);
      uint64_t v47 = sub_1000FE9DC(v41, v44);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v114 = v47;
      if (v47)
      {
        char v48 = v113;
        sub_10001C2A8(v40, *((void *)v113 + 5));
        sub_1000D428C();
        unsigned __int8 v49 = sub_10008B4BC();
        swift_bridgeObjectRelease();
        sub_10001C2A8(v40, *((void *)v48 + 5));
        sub_1000D428C();
        BOOL v50 = sub_10008BAE0();
        swift_bridgeObjectRelease();
        uint64_t v51 = *(void *)(v114 + 176);
        int v52 = *(unsigned __int8 *)(v114 + 184);
        uint64_t v53 = v110;
        sub_10024E010();
        uint64_t v54 = sub_1002140FC(v53, v51, v52);
        v106[1] = *(void *)(v14 + 8);
        sub_1000AC864();
        v55();
        sub_1000A1614((uint64_t)v28, v49);
        uint64_t v56 = v111;
        sub_10024DFE0();
        sub_1000ACDB4();
        sub_1000195B4(v57, v58, v59, v42);
        sub_1000D6A14(v56);
        uint64_t v60 = v42;
        if (v50)
        {
          if (!v49 || (int v61 = v49 >> 6, v61 == 2))
          {
            if (v54 <= 7) {
              uint64_t v75 = 6;
            }
            else {
              uint64_t v75 = 16;
            }
            uint64_t v76 = *(void (**)(void))(v14 + 16);
            uint64_t v77 = v110;
            sub_1000ACB08();
            v76();
            sub_1001EF934(v75, 3, v49, v77);
            uint64_t v54 = v109;
            sub_10024DFE0();
            uint64_t v78 = sub_1000ACF34();
            ((void (*)(uint64_t))v76)(v78);
            sub_1000ACEF8();
            sub_1000AC780();
            v79();
          }
          else
          {
            if (v54 <= 7)
            {
              uint64_t v80 = v107;
              sub_1000ACB08();
              v81();
              if (v49 >> 6)
              {
                if (v61 == 1) {
                  sub_1001EFB40(4, v49 & 0x3F);
                }
              }
              else
              {
                sub_1002140FC(v80, 1, 4);
                sub_1001EFAF0(v49);
              }
            }
            else
            {
              uint64_t v62 = v108;
              sub_1000ACB08();
              v63();
              if (v49 >> 6)
              {
                if (v61 == 1) {
                  sub_1001EFB40(5, v49 & 0x3F);
                }
              }
              else
              {
                sub_1002140FC(v62, 1, 5);
                sub_1001EFAF0(v49);
              }
            }
            sub_1000AC780();
            v82();
            sub_10024DFE0();
            sub_1000ACEF8();
          }
        }
        sub_1000A1278(v31, 0);
        uint64_t v83 = sub_1000ACCF8();
        if (v84)
        {
          uint64_t v85 = v83;
          uint64_t v86 = v31;
          uint64_t v87 = v84;
          uint64_t v113 = v28;
          uint64_t v88 = v86;
          uint64_t v89 = sub_10024E1D0();
          os_log_type_t v90 = sub_10024EE30();
          if (os_log_type_enabled(v89, v90))
          {
            uint64_t v91 = (uint8_t *)sub_10003FD90();
            uint64_t v112 = v60;
            id v92 = v91;
            *(_DWORD *)uint64_t v91 = 134217984;
            uint64_t v93 = sub_1000D5AE4();
            sub_1000AD030(v93);
            sub_10024F100();

            _os_log_impl((void *)&_mh_execute_header, v89, v90, "Asking to show billing error sheet for transaction %lu", v92, 0xCu);
            sub_10003FBCC();
          }
          else
          {

            uint64_t v89 = v88;
          }

          type metadata accessor for BillingErrorHelperRoute();
          uint64_t v97 = sub_1000D428C();
          uint64_t v99 = v98;
          v117._uint64_t countAndFlagsBits = v85;
          v117._object = v87;
          unint64_t v100 = sub_10001C19C(v117, v97, v99);
          uint64_t v102 = v101;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_100308D48 != -1) {
            swift_once();
          }
          uint64_t v103 = sub_1000D428C();
          sub_1001446E0(v100, v102, 769, v103, v104);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v94 = sub_10024E1D0();
          os_log_type_t v95 = sub_10024EE10();
          if (os_log_type_enabled(v94, v95))
          {
            unint64_t v96 = (_WORD *)sub_10003FD28();
            sub_1000ACC6C(v96);
            _os_log_impl((void *)&_mh_execute_header, v94, v95, "Group ID is missing for transaction in billing error state.", (uint8_t *)v54, 2u);
            sub_10003FBCC();
          }
        }
        swift_release();
        sub_1000AC780();
        v105();
      }
      else
      {
        uint64_t v113 = v28;
        id v69 = v31;
        uint64_t v70 = sub_10024E1D0();
        os_log_type_t v71 = sub_10024EE10();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = (uint8_t *)sub_10003FD90();
          uint64_t v116 = sub_10003FD78();
          *(_DWORD *)uint64_t v72 = 136315138;
          uint64_t v73 = sub_1000D427C();
          uint64_t v115 = sub_1000F3F3C(v73, v74, &v116);
          sub_10024F100();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v70, v71, "Can't start billing retry because %s is unavailable", v72, 0xCu);
          swift_arrayDestroy();
          sub_10003FBCC();
          sub_10003FBCC();
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v113, v42);
      }
      goto LABEL_20;
    }
  }
  sub_1000AC6D0(v38, (uint64_t *)&unk_10030FD70);
  unint64_t v64 = (void *)sub_10024E1D0();
  os_log_type_t v65 = sub_10024EE10();
  if (sub_1000AC818(v65))
  {
    uint64_t v66 = (_WORD *)sub_10003FD28();
    sub_1000ACC6C(v66);
    sub_1000AC8C4((void *)&_mh_execute_header, v67, v68, "Can't start billing retry on transaction without expiration date");
    sub_10003FBCC();
  }

LABEL_20:
  sub_1000AC7B0();
}

void sub_1000A2120(void *a1, char a2)
{
  if (a2) {
    unsigned __int8 v5 = 0;
  }
  else {
    unsigned __int8 v5 = 3;
  }
  unsigned __int8 v6 = sub_1000D55F8();
  p_ivars = &OctaneXPCServiceDelegate.ivars;
  if (((1 << v6) & 0x36) != 0) {
    goto LABEL_5;
  }
  if (v6) {
    uint64_t v31 = 10;
  }
  else {
    uint64_t v31 = v6;
  }
  uint64_t v32 = 10;
  if (a2) {
    uint64_t v32 = 0;
  }
  if (v31 != v32)
  {
LABEL_5:
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10024E1F0();
    sub_10001B0E8(v8, (uint64_t)qword_10034C0E0);
    id v9 = a1;
    uint64_t v10 = sub_10024E1D0();
    os_log_type_t v11 = sub_10024EE30();
    if (sub_1000ACFB8(v11))
    {
      uint64_t v12 = sub_1000AC834();
      uint64_t v50 = sub_10003FD78();
      sub_1000ACE90(3.8521e-34);
      sub_1000AD108();
      sub_10024F100();

      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v13 = sub_10024E700();
      sub_1000F3F3C(v13, v14, &v50);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v2, "putting transaction %lu into price increase %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      p_ivars = (__objc2_ivar_list **)(&OctaneXPCServiceDelegate + 48);
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {
    }
    sub_1000D5C00(v5);
    sub_1000A1278(v9, 1);
  }
  uint64_t v15 = sub_1000D939C(15);
  if (v16)
  {
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    sub_1000D55F8();
    sub_1000ACBE0();
    if (!v20)
    {
      char v21 = sub_1000C82C0(v19);
      if (v21 != 2)
      {
        char v22 = v21;
        sub_1000D55F8();
        sub_1000ACBE0();
        if (!v20)
        {
          sub_1000C83D8(v23);
          sub_1000ACC78();
          if (!v20)
          {
            int v49 = v24;
            if (p_ivars[444] != (__objc2_ivar_list *)-1) {
              swift_once();
            }
            uint64_t v33 = sub_10024E1F0();
            sub_10001B0E8(v33, (uint64_t)qword_10034C0E0);
            id v34 = a1;
            id v35 = sub_10024E1D0();
            os_log_type_t v36 = sub_10024EE30();
            if (os_log_type_enabled(v35, v36))
            {
              char v48 = v34;
              uint64_t v37 = sub_1000AC834();
              uint64_t v50 = sub_10003FD78();
              *(_DWORD *)uint64_t v37 = 134218242;
              sub_1000D5AE4();
              sub_1000AD108();
              sub_10024F100();

              *(_WORD *)(v37 + 12) = 2080;
              uint64_t v38 = sub_10024E700();
              sub_1000F3F3C(v38, v39, &v50);
              sub_10024F100();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "asking to show price increase sheet for %lu %s", (uint8_t *)v37, 0x16u);
              swift_arrayDestroy();
              sub_10003FBCC();
              sub_10003FBCC();
            }
            else
            {
            }
            type metadata accessor for PriceIncreaseUIRoute();
            uint64_t v40 = sub_1000D428C();
            uint64_t v42 = v41;
            v51._uint64_t countAndFlagsBits = v17;
            v51._object = v18;
            unint64_t v43 = sub_1000584B8(v51, v40, v42);
            uint64_t v45 = v44;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_100308D48 != -1) {
              swift_once();
            }
            uint64_t v46 = sub_1000D428C();
            sub_1001446E0(v43, v45, v22 & 1 | (v49 << 8), v46, v47);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (p_ivars[444] != (__objc2_ivar_list *)-1) {
    swift_once();
  }
  uint64_t v25 = sub_10024E1F0();
  uint64_t v26 = (void *)sub_1000ACE40(v25, (uint64_t)qword_10034C0E0);
  os_log_type_t v27 = sub_10024EE10();
  if (sub_1000AC818(v27))
  {
    uint64_t v28 = (_WORD *)sub_10003FD28();
    sub_1000ACC6C(v28);
    sub_1000AC8C4((void *)&_mh_execute_header, v29, v30, "Unable to parse message info for price increase");
    sub_10003FBCC();
  }
}

uint64_t sub_1000A2634(void *a1, char a2)
{
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10024E1F0();
  sub_10001B0E8(v4, (uint64_t)qword_10034C0E0);
  id v5 = a1;
  unsigned __int8 v6 = sub_10024E1D0();
  os_log_type_t v7 = sub_10024EE30();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134218240;
    sub_1000D5AE4();
    sub_10024F100();

    *(_WORD *)(v8 + 12) = 1024;
    sub_10024F100();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "resolving price increase for %lu with response: %{BOOL}d", (uint8_t *)v8, 0x12u);
    swift_slowDealloc();
  }
  else
  {
  }
  int v9 = sub_1000D55F8();
  if (!v9)
  {
    if ((a2 & 1) == 0)
    {
      sub_1000D5C00(2u);
      uint64_t v15 = variable initialization expression of ClientOverride.requestBundleVersion();
      sub_1000D5B48(v15);
      return sub_1000A1278(v5, 1);
    }
    unsigned __int8 v10 = 1;
LABEL_11:
    sub_1000D5C00(v10);
    return sub_1000A1278(v5, 1);
  }
  if (v9 == 3)
  {
    unsigned __int8 v10 = 4;
    goto LABEL_11;
  }
  os_log_type_t v11 = v5;
  uint64_t v12 = sub_10024E1D0();
  os_log_type_t v13 = sub_10024EE10();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v14 = 134217984;
    sub_1000D5AE4();
    sub_10024F100();

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "cannot resolve price increase on transaction %lu which does not need consent or notice", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v12 = v11;
  }

  sub_10006918C();
  swift_allocError();
  *uint64_t v17 = 0;
  return swift_willThrow();
}

uint64_t sub_1000A2914()
{
  sub_1000ACEB8();
  char v46 = 1;
  uint64_t v1 = (void *)sub_1000A2EB4(v0);
  if (v1)
  {
    id v2 = v1;
    sub_1000ACCF8();
    if (!v3)
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_10024E1F0();
      sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
      id v13 = v2;
      sub_1000AC92C();
      id v14 = v13;
      uint64_t v15 = sub_10024E1D0();
      os_log_type_t v16 = sub_10024EE10();
      if (sub_1000AC978(v16))
      {
        sub_1000AC834();
        uint64_t v45 = sub_10003FD78();
        sub_1000AC95C(3.8521e-34);

        sub_1000AC7CC();
        uint64_t v17 = sub_1000AC7F8();
        sub_1000AC944(v17, v18, &v45);
        sub_1000AC88C();
        sub_1000AC914();
        sub_1000ACAB0((void *)&_mh_execute_header, v19, v20, "transaction %lu for %s has a pending message but has no subscription group ID");
LABEL_32:
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();

        return sub_1000AD184();
      }
      goto LABEL_33;
    }
    if (v46 == 3)
    {
      type metadata accessor for BillingErrorHelperRoute();
      v47._uint64_t countAndFlagsBits = sub_1000ACC34();
      sub_10001C19C(v47, v4, v5);
      swift_bridgeObjectRelease();

      return sub_1000AD184();
    }
    type metadata accessor for PriceIncreaseUIRoute();
    v48._uint64_t countAndFlagsBits = sub_1000ACC34();
    char v23 = (uint8_t *)sub_1000584B8(v48, v21, v22);
    swift_bridgeObjectRelease();
    sub_1000D55F8();
    sub_1000ACBE0();
    if (v25) {
      os_log_type_t v26 = 4;
    }
    else {
      os_log_type_t v26 = sub_1000C83D8(v24);
    }
    sub_1000D55F8();
    sub_1000ACBE0();
    if (v25)
    {
      if (v26 == 4) {
        goto LABEL_22;
      }
    }
    else
    {
      char v28 = sub_1000C82C0(v27);
      if (v26 == 4)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        if (qword_100308DE0 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_10024E1F0();
        sub_10001B0E8(v29, (uint64_t)qword_10034C0E0);
        id v30 = v2;
        sub_1000AC92C();
        id v14 = v30;
        uint64_t v15 = sub_10024E1D0();
        os_log_type_t v31 = sub_10024EE10();
        if (sub_1000AC978(v31))
        {
          sub_10003FD78();
          uint64_t v45 = sub_1000ACB70();
          sub_1000AC95C(3.8522e-34);

          sub_1000AC7CC();
          uint64_t v32 = sub_1000AC7F8();
          sub_1000AC944(v32, v33, &v45);
          sub_1000AC88C();
          sub_1000AC914();
          sub_1000AD0D4();
          uint64_t v34 = sub_10024E700();
          sub_1000F3F3C(v34, v35, &v45);
          sub_1000ACCB4();
          swift_bridgeObjectRelease();
          os_log_type_t v36 = "transaction %lu for %s has a pending message incompatible type for message %s";
LABEL_31:
          _os_log_impl((void *)&_mh_execute_header, v15, v26, v36, v23, 0x20u);
          goto LABEL_32;
        }
        goto LABEL_33;
      }
      if (v28 != 2)
      {

        return sub_1000AD184();
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_10024E1F0();
    sub_10001B0E8(v37, (uint64_t)qword_10034C0E0);
    id v38 = v2;
    sub_1000AC92C();
    id v14 = v38;
    uint64_t v15 = sub_10024E1D0();
    os_log_type_t v39 = sub_10024EE10();
    if (sub_1000AC978(v39))
    {
      sub_10003FD78();
      uint64_t v45 = sub_1000ACB70();
      sub_1000AC95C(3.8522e-34);

      sub_1000AC7CC();
      uint64_t v40 = sub_1000AC7F8();
      sub_1000AC944(v40, v41, &v45);
      sub_1000AC88C();
      sub_1000AC914();
      sub_1000AD0D4();
      uint64_t v42 = sub_10024E700();
      sub_1000F3F3C(v42, v43, &v45);
      sub_1000ACCB4();
      swift_bridgeObjectRelease();
      os_log_type_t v36 = "transaction %lu for %s has a pending message (%s incompatible type for message control";
      goto LABEL_31;
    }
LABEL_33:

    sub_1000ACBA0();
    return sub_1000AD184();
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10024E1F0();
  sub_10001B0E8(v6, (uint64_t)qword_10034C0E0);
  sub_1000AC92C();
  os_log_type_t v7 = sub_10024E1D0();
  os_log_type_t v8 = sub_10024EE30();
  if (sub_1000ACE24(v8))
  {
    sub_10003FD90();
    uint64_t v45 = sub_10003FD78();
    uint64_t v9 = sub_1000AD050(4.8149e-34);
    sub_1000AC944(v9, v10, &v45);
    sub_1000AD1A4();
    sub_1000AC914();
    sub_1000ACD98((void *)&_mh_execute_header, v7, v11, "no transactions for %s have pending messages");
    sub_1000AC870();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    sub_1000ACBA0();
  }
  return sub_1000AD184();
}

uint64_t sub_1000A2EB4(uint64_t a1)
{
  return 0;
}

void sub_1000A2F30(void *a1, void **a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v10 = sub_1000E1088(&off_1002D7560, a3, a4);
  uint64_t v11 = *a2;
  *a2 = (void *)v10;

  *a5 = 1;
  if (!*a2)
  {
    sub_10001C2A8(a1, a1[3]);
    unint64_t v12 = sub_1000E1418();
    if (v12)
    {
      id v13 = *a2;
      *a2 = (void *)v12;

      *a5 = 3;
    }
  }
}

unint64_t sub_1000A2FE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)sub_1000A35C8(v3);
  if (!v6)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10024E1F0();
    sub_10001B0E8(v24, (uint64_t)qword_10034C0E0);
    sub_1000AC92C();
    char v25 = sub_10024E1D0();
    os_log_type_t v26 = sub_10024EE30();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = sub_1000AC834();
      sub_10003FD78();
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v28 = swift_bridgeObjectRetain();
      sub_1000AC8A8(v28);
      sub_10024F100();
      sub_1000AC914();
      *(_WORD *)(v27 + 12) = 2048;
      sub_10024F100();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "no transactions for %s in state %ld have pending messages", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1000ACBA0();
    }
    return 0;
  }
  id v7 = v6;
  uint64_t v8 = sub_1000D939C(15);
  if (v9)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    type metadata accessor for PriceIncreaseUIRoute();
    v48._uint64_t countAndFlagsBits = v10;
    v48._object = v11;
    unint64_t v12 = sub_1000584B8(v48, a2, a3);
    swift_bridgeObjectRelease();
    sub_1000D55F8();
    sub_1000ACBE0();
    if (v37 || (sub_1000C83D8(v13), sub_1000ACC78(), v37))
    {
      swift_bridgeObjectRelease();
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_10024E1F0();
      sub_10001B0E8(v15, (uint64_t)qword_10034C0E0);
      id v16 = v7;
      sub_1000AC92C();
      id v17 = v16;
      uint64_t v18 = sub_10024E1D0();
      os_log_type_t v19 = sub_10024EE10();
      if (sub_1000ACFB8(v19))
      {
        uint64_t v20 = (uint8_t *)sub_10003FD78();
        uint64_t v45 = sub_10003FD78();
        uint64_t v21 = sub_1000ACE90(3.8522e-34);

        sub_1000ACA74();
        uint64_t v22 = sub_1000AD0B4();
        sub_1000AC8A8(v22, v21, v45);
        sub_1000ACA74();
        sub_1000AC914();
        sub_1000AD1E4();
        sub_1000ACFD4();
        char v23 = "transaction %lu for %s in %ld has a pending message incompatible type for message";
LABEL_26:
        _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v11, v23, v20, 0x20u);
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();

        return 0;
      }
    }
    else
    {
      LOBYTE(v11) = v14;
      sub_1000D55F8();
      sub_1000ACBE0();
      if (!v37 && sub_1000C82C0(v38) != 2)
      {

        return v12;
      }
      swift_bridgeObjectRelease();
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_10024E1F0();
      sub_10001B0E8(v39, (uint64_t)qword_10034C0E0);
      id v40 = v7;
      sub_1000AC92C();
      id v17 = v40;
      uint64_t v18 = sub_10024E1D0();
      os_log_type_t v41 = sub_10024EE10();
      if (sub_1000ACFB8(v41))
      {
        uint64_t v20 = (uint8_t *)sub_10003FD78();
        uint64_t v47 = sub_10003FD78();
        uint64_t v42 = sub_1000ACE90(3.8522e-34);

        sub_1000ACA74();
        uint64_t v43 = sub_1000AD0B4();
        sub_1000AC8A8(v43, v42, v47);
        sub_1000ACA74();
        sub_1000AC914();
        sub_1000AD1E4();
        sub_1000ACFD4();
        char v23 = "transaction %lu for %s in %ld has a pending message incompatible type for message control";
        goto LABEL_26;
      }
    }

    sub_1000ACBA0();
LABEL_28:

    return 0;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_10024E1F0();
  sub_10001B0E8(v29, (uint64_t)qword_10034C0E0);
  id v30 = v7;
  sub_1000AC92C();
  id v31 = v30;
  id v17 = (id)sub_10024E1D0();
  os_log_type_t v32 = sub_10024EE10();
  if (sub_1000AC978(v32))
  {
    sub_1000AC834();
    uint64_t v46 = sub_10003FD78();
    uint64_t v33 = sub_1000AC95C(3.8521e-34);

    sub_1000AC8FC();
    uint64_t v34 = sub_1000AC7F8();
    sub_1000AC8A8(v34, v33, v46);
    sub_1000AC8FC();
    sub_1000AC914();
    sub_1000ACAB0((void *)&_mh_execute_header, v35, v36, "transaction %lu for %s has a pending message but has no subscription group ID");
    sub_1000AC9B0();
    sub_10003FBCC();
    sub_10003FBCC();

    goto LABEL_28;
  }

  sub_1000ACBA0();
  return 0;
}

uint64_t sub_1000A35C8(uint64_t a1)
{
  return 0;
}

void sub_1000A3648(void *a1, void **a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_10001C2A8(a1, a1[3]);
  sub_100019524(&qword_10030E978);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100255FB0;
  *(unsigned char *)(inited + 32) = a3;
  uint64_t v10 = sub_1000E1088(inited, a4, a5);
  swift_setDeallocating();
  uint64_t v11 = *a2;
  *a2 = (void *)v10;
}

unint64_t sub_1000A36F0()
{
  sub_1000ACEB8();
  uint64_t v3 = (void *)sub_1000A39CC(v1);
  if (!v3)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10024E1F0();
    sub_10001B0E8(v10, (uint64_t)qword_10034C0E0);
    sub_1000AC92C();
    uint64_t v11 = sub_10024E1D0();
    os_log_type_t v12 = sub_10024EE30();
    if (sub_1000ACE24(v12))
    {
      sub_10003FD90();
      sub_10003FD78();
      uint64_t v13 = sub_1000AD050(4.8149e-34);
      sub_1000AC8A8(v13);
      sub_1000AD1A4();
      sub_1000AC914();
      sub_1000ACD98((void *)&_mh_execute_header, v11, v14, "No transactions for %s are in billing error state");
      sub_1000AC870();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1000ACBA0();
    }
    return 0;
  }
  id v4 = v3;
  uint64_t v5 = sub_1000ACCF8();
  if (!v6)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10024E1F0();
    sub_10001B0E8(v15, (uint64_t)qword_10034C0E0);
    id v16 = v4;
    sub_1000AC92C();
    id v17 = v16;
    uint64_t v18 = (void *)sub_10024E1D0();
    os_log_type_t v19 = sub_10024EE10();
    if (sub_1000AC978(v19))
    {
      sub_1000AC834();
      uint64_t v25 = sub_10003FD78();
      uint64_t v20 = sub_1000AC95C(3.8521e-34);

      sub_1000AC8FC();
      uint64_t v21 = sub_1000AC7F8();
      sub_1000AC8A8(v21, v20, v25);
      sub_1000AC8FC();
      sub_1000AC914();
      sub_1000ACAB0((void *)&_mh_execute_header, v22, v23, "Transaction %lu for %s has a pending billing error message but has no subscription group ID");
      sub_1000AC9B0();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1000ACBA0();
    }
    return 0;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  type metadata accessor for BillingErrorHelperRoute();
  v26._uint64_t countAndFlagsBits = v7;
  v26._object = v8;
  unint64_t v9 = sub_10001C19C(v26, v2, v0);
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_1000A39CC(uint64_t a1)
{
  return 0;
}

uint64_t sub_1000A3A3C(void *a1, unint64_t *a2)
{
  sub_10001C2A8(a1, a1[3]);
  *a2 = sub_1000E1418();
  return _objc_release_x1();
}

unint64_t sub_1000A3A9C(char a1, uint64_t a2, void *a3)
{
  switch(a1)
  {
    case 1:
      uint64_t v8 = 3;
      goto LABEL_9;
    case 2:
      uint64_t v8 = 0;
LABEL_9:
      unint64_t result = sub_1000A2FE0(v8, a2, a3);
      break;
    case 3:
      unint64_t result = sub_1000A36F0();
      break;
    default:
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_10024E1F0();
      uint64_t v5 = sub_1000ACE40(v4, (uint64_t)qword_10034C0E0);
      os_log_type_t v6 = sub_10024EE10();
      if (sub_1000AC818(v6))
      {
        *(_DWORD *)sub_10003FD90() = 134217984;
        sub_10024F100();
        sub_1000ACC04((void *)&_mh_execute_header, v5, v3, "Message info not handled: %ld");
        sub_10003FBCC();
      }

      unint64_t result = variable initialization expression of ClientOverride.requestBundleVersion();
      break;
  }
  return result;
}

uint64_t sub_1000A3BDC(uint64_t *a1, int64_t a2)
{
  unint64_t v80 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v81 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1000AC84C();
  uint64_t v63 = (uint64_t)a1;
  uint64_t v65 = a2;
  sub_1002068C0();
  if (qword_100308DE0 == -1) {
    goto LABEL_2;
  }
LABEL_59:
  swift_once();
LABEL_2:
  uint64_t v4 = sub_10024E1F0();
  unint64_t v5 = sub_10001B0E8(v4, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  os_log_type_t v6 = sub_10024E1D0();
  os_log_type_t v7 = sub_10024EDF0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = sub_10003FD78();
    v77[0] = sub_10003FD78();
    *(_DWORD *)uint64_t v8 = 134218498;
    sub_10006FF20();
    if (v81 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v79 = v9;
    sub_10024F100();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1000F3F3C((uint64_t)a1, a2, v77);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2048;
    sub_10006FF20();
    if (v80 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = (uint64_t *)sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      a1 = *(uint64_t **)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v79 = (uint64_t)a1;
    sub_10024F100();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Will start renewing %ld active subscriptions for %s. %ld subscriptions expired and need to be caught up.", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_10006FF20();
  unint64_t v10 = v81;
  if (v81 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10024F6F0();
    if (!v11) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_17;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_65;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v13 = (id)sub_10024F380();
    }
    else {
      id v13 = *(id *)(v10 + 8 * i + 32);
    }
    uint64_t v14 = v13;
    sub_1000A801C(v13);
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_10006FF20();
  if (v80 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_10024F6F0();
    swift_bridgeObjectRelease();
    if (!v54) {
      goto LABEL_56;
    }
  }
  else if (!*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_56;
  }
  uint64_t v15 = sub_10024E1D0();
  os_log_type_t v16 = sub_10024EE30();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (_DWORD *)sub_10003FD90();
    v77[0] = sub_10003FD78();
    *id v17 = 136315138;
    type metadata accessor for Transaction();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10024EAB0();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_1000F3F3C(v18, v20, v77);
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_1000ACC04((void *)&_mh_execute_header, v15, v16, "Catching up %s subscriptions");
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }

  unint64_t v21 = v80;
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_10009CA30(_swiftEmptyArrayStorage, (Swift::Int)&_swiftEmptySetSingleton, v21);
  a1 = v22;
  swift_bridgeObjectRelease();
  unint64_t v23 = sub_100019524(&qword_1003090D8);
  v77[3] = v23;
  v77[4] = sub_1000AC4C8();
  v77[0] = v5;
  sub_1000AD160(v77, v23);
  if (!(v23 >> 62))
  {
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
LABEL_65:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10024F6F0();
  swift_bridgeObjectRelease();
LABEL_23:
  uint64_t v78 = sub_10024EC40();
  sub_10001C2EC((uint64_t)v77);
  if (v5 >> 62)
  {
    sub_1000ACAE8();
    uint64_t result = sub_10024F6F0();
    uint64_t v24 = result;
    if (result) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v24)
    {
LABEL_25:
      if (v24 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v26 = 0;
      do
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v27 = (id)sub_10024F380();
        }
        else {
          id v27 = *(id *)(v5 + 8 * v26 + 32);
        }
        uint64_t v28 = v27;
        ++v26;
        Swift::Int v29 = sub_1000D428C();
        sub_1001F1AF0(v77, v29, v30);
        swift_bridgeObjectRelease();
      }
      while (v24 != v26);
    }
  }
  uint64_t v57 = (uint64_t)a1;
  swift_bridgeObjectRelease_n();
  uint64_t v31 = v78;
  uint64_t v32 = v78 + 56;
  uint64_t v33 = 1 << *(unsigned char *)(v78 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & *(void *)(v78 + 56);
  int64_t v36 = (unint64_t)(v33 + 63) >> 6;
  swift_bridgeObjectRetain();
  a2 = 0;
  a1 = &qword_10034C000;
  if (v35)
  {
LABEL_34:
    unint64_t v37 = __clz(__rbit64(v35));
    v35 &= v35 - 1;
    unint64_t v38 = v37 | (a2 << 6);
    goto LABEL_49;
  }
  while (1)
  {
    int64_t v39 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    if (v39 >= v36) {
      goto LABEL_53;
    }
    unint64_t v40 = *(void *)(v32 + 8 * v39);
    ++a2;
    if (!v40)
    {
      a2 = v39 + 1;
      if (v39 + 1 >= v36) {
        goto LABEL_53;
      }
      unint64_t v40 = *(void *)(v32 + 8 * a2);
      if (!v40)
      {
        a2 = v39 + 2;
        if (v39 + 2 >= v36) {
          goto LABEL_53;
        }
        unint64_t v40 = *(void *)(v32 + 8 * a2);
        if (!v40) {
          break;
        }
      }
    }
LABEL_48:
    unint64_t v35 = (v40 - 1) & v40;
    unint64_t v38 = __clz(__rbit64(v40)) + (a2 << 6);
LABEL_49:
    uint64_t v42 = (uint64_t *)(*(void *)(v31 + 48) + 16 * v38);
    uint64_t v44 = *v42;
    uint64_t v43 = v42[1];
    uint64_t v45 = qword_100308D48;
    swift_bridgeObjectRetain();
    if (v45 != -1) {
      swift_once();
    }
    sub_100142C1C(v44, v43);
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_34;
    }
  }
  int64_t v41 = v39 + 3;
  if (v41 < v36)
  {
    unint64_t v40 = *(void *)(v32 + 8 * v41);
    if (!v40)
    {
      while (1)
      {
        a2 = v41 + 1;
        if (__OFADD__(v41, 1)) {
          goto LABEL_58;
        }
        if (a2 >= v36) {
          goto LABEL_53;
        }
        unint64_t v40 = *(void *)(v32 + 8 * a2);
        ++v41;
        if (v40) {
          goto LABEL_48;
        }
      }
    }
    a2 = v41;
    goto LABEL_48;
  }
LABEL_53:
  swift_release();
  if (qword_100308D48 != -1) {
    swift_once();
  }
  sub_10010C414(0, v31, 32, 0x27CDF0, v46, v47, v48, v49, v55, v57, v59, v61, v63, v65, (uint64_t)&v81, (uint64_t)&v80, v69, v71, v73,
    v75);
  swift_bridgeObjectRelease();
  sub_10010C414(1, v58, 32, 0x27CDF0, v50, v51, v52, v53, v56, v58, v60, v62, v64, v66, v67, v68, v70, v72, v74, v76);
  swift_bridgeObjectRelease();
LABEL_56:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1000A441C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v24 = sub_10024E030();
  uint64_t v8 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000DE454();
  unint64_t v13 = v12;
  if (v12 >> 62)
  {
    uint64_t v14 = sub_10024F6F0();
    if (v14) {
      goto LABEL_3;
    }
LABEL_20:
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14) {
    goto LABEL_20;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v22 = a5;
    unint64_t v23 = v13 & 0xC000000000000001;
    os_log_type_t v16 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      if (v23) {
        id v17 = (id)sub_10024F380();
      }
      else {
        id v17 = *(id *)(v13 + 8 * v15 + 32);
      }
      uint64_t v18 = v17;
      sub_10024E010();
      char v19 = sub_1000D5964();
      (*v16)(v11, v24);
      if (v19 & 1) != 0 || (sub_1000D5828())
      {
        v18;
        sub_10024EA70();
        if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10024EAD0();
        }
      }
      else
      {
        if ((sub_1000D6C10() & 1) == 0) {
          goto LABEL_13;
        }
        v18;
        unint64_t v20 = v22;
        sub_10024EA70();
        if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10024EAD0();
        }
      }
      sub_10024EB10();
      sub_10024EAC0();
LABEL_13:
      ++v15;

      if (v14 == v15) {
        goto LABEL_14;
      }
    }
  }
  __break(1u);
}

uint64_t sub_1000A46B4()
{
  return 0;
}

void sub_1000A4748(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v20[0] = a8;
  v20[1] = a7;
  uint64_t v9 = sub_10024E030();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000E0630();
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1000D453C();
    sub_10024DF60();
    char v16 = sub_1000A48FC((uint64_t)v13);
    id v17 = *(void (**)(char *, uint64_t))(v10 + 8);
    v17(v13, v9);
    if (v16)
    {

LABEL_6:
      *(unsigned char *)v20[0] = 1;
      return;
    }
    sub_1000D9478(4);
    if ((v18 & 1) == 0)
    {
      sub_10024DF60();
      char v19 = sub_1000A48FC((uint64_t)v13);

      v17(v13, v9);
      if ((v19 & 1) == 0) {
        return;
      }
      goto LABEL_6;
    }
  }
}

uint64_t sub_1000A48FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100019524(&qword_10030E950);
  __chkstk_darwin(v4, v5);
  os_log_type_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10024E030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AC374((unint64_t *)&qword_10030E968, (void (*)(uint64_t))&type metadata accessor for Date);
  char v13 = sub_10024E5E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  sub_1000AC460(v2, (uint64_t)v7, &qword_10030E950);
  if (v13) {
    char v14 = sub_10024E5F0();
  }
  else {
    char v14 = 0;
  }
  sub_1000AC6D0((uint64_t)v7, &qword_10030E950);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v14 & 1;
}

void sub_1000A4AE4()
{
  sub_10003C984();
  sub_10001C2A8((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_1002068C0();

  sub_10003C8C8();
}

uint64_t sub_1000A4C20(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10001C2A8(a1, a1[3]);
  *a2 = sub_1000DDE90(a3, a4, a5, a6, 0);
  return _objc_release_x1();
}

unint64_t sub_1000A4C9C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_10024E030();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  char v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  uint64_t v15 = sub_1000D5AE4();
  sub_1000D453C();
  sub_10024DF60();
  LOBYTE(a5) = sub_1001F0F50(a2, a3, a4, a5, v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return a5 & 1;
}

void sub_1000A4DD0()
{
  sub_1000AC794();
  os_log_type_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v7 = sub_100026018(v6);
  __chkstk_darwin(v7, v8);
  sub_1000ACC50();
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = &v103[-v12];
  __chkstk_darwin(v11, v14);
  uint64_t v16 = &v103[-v15];
  uint64_t v17 = sub_10024E030();
  sub_10001B550();
  uint64_t v19 = v18;
  uint64_t v22 = __chkstk_darwin(v20, v21);
  __chkstk_darwin(v22, v23);
  sub_1000ACB8C();
  __chkstk_darwin(v24, v25);
  id v27 = &v103[-v26];
  sub_1000D9478(4);
  if (v28)
  {
    sub_1000ACD7C((uint64_t)v16);
    goto LABEL_8;
  }
  sub_10024DF60();
  sub_1000ACDB4();
  sub_1000195B4(v29, v30, v31, v17);
  if (sub_10001FA0C((uint64_t)v16, 1, v17) == 1)
  {
LABEL_8:
    sub_1000AC6D0((uint64_t)v16, (uint64_t *)&unk_10030FD70);
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_10024E1F0();
    sub_10001B0E8(v45, (uint64_t)qword_10034C0E0);
    id v46 = v5;
    int v47 = sub_10024E1D0();
    os_log_type_t v48 = sub_10024EE20();
    if (os_log_type_enabled(v47, v48))
    {
      int v49 = (_DWORD *)sub_10003FD90();
      uint64_t v114 = sub_10003FD78();
      *int v49 = 136315138;
      uint64_t v50 = sub_1000D427C();
      uint64_t v52 = sub_1000ACBC8(v50, v51);
      sub_1000ACB3C(v52);
      sub_1000AD1A4();
      swift_bridgeObjectRelease();

      sub_1000ACD98((void *)&_mh_execute_header, v47, v53, "Can't catch up transaction for %s because it has no expiration date.");
      sub_1000AC870();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {
    }
    v46;
    goto LABEL_36;
  }
  uint64_t v106 = v1;
  sub_1000AD044();
  v32();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_10024E1F0();
  uint64_t v34 = sub_10001B0E8(v33, (uint64_t)qword_10034C0E0);
  uint64_t v112 = v27;
  sub_1000ACAD0();
  v35();
  id v36 = v5;
  uint64_t v105 = v34;
  unint64_t v37 = sub_10024E1D0();
  os_log_type_t v38 = sub_10024EDF0();
  int v39 = v38;
  BOOL v40 = os_log_type_enabled(v37, v38);
  uint64_t v110 = v13;
  uint64_t v107 = v19;
  if (v40)
  {
    sub_1000AC834();
    uint64_t v109 = v3;
    uint64_t v108 = sub_1000ACB70();
    uint64_t v114 = v108;
    *(_DWORD *)os_log_type_t v3 = 136315394;
    int v104 = v39;
    uint64_t v41 = sub_1000D427C();
    uint64_t v113 = sub_1000ACBC8(v41, v42);
    sub_10024F100();
    swift_bridgeObjectRelease();

    *((_WORD *)v3 + 6) = 2080;
    sub_1000AC374(&qword_10030E970, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v43 = sub_10024F9E0();
    uint64_t v113 = sub_1000ACBC8(v43, v44);
    uint64_t v13 = v110;
    sub_10024F100();
    swift_bridgeObjectRelease();
    uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v111(v2, v17);
    _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v104, "Catching up %s, latest transaction expired: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    sub_10003FBCC();
    os_log_type_t v3 = v109;
    sub_10003FBCC();
  }
  else
  {

    uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v111(v2, v17);
  }

  sub_1000ACD7C((uint64_t)v13);
  uint64_t v54 = sub_10001C2A8(v3 + 7, v3[10]);
  __chkstk_darwin(v54, v55);
  sub_1000ACD2C();
  os_log_t v56 = v112;
  *(void *)(v57 - 32) = v36;
  *(void *)(v57 - 24) = v56;
  *(void *)(v57 - 16) = v13;
  uint64_t v59 = *v58;
  sub_1002068C0();
  id v115 = v36;
  id v60 = v36;
  double v61 = COERCE_DOUBLE(sub_1000AD148());
  char v63 = v62;

  int v64 = 0;
  if ((v63 & 1) == 0)
  {
    uint64_t v108 = v107 + 8;
    uint64_t v109 = v3 + 2;
    do
    {
      sub_10024DF80();
      if (v65 <= v61) {
        break;
      }
      id v66 = v59;
      unsigned __int8 v67 = sub_1000D6C10();

      if ((v67 & 1) == 0) {
        break;
      }
      sub_10001C2A8(v109, v3[5]);
      id v68 = v66;
      sub_1000D428C();
      uint64_t v69 = v3;

      BOOL v70 = sub_10008BB04();
      swift_bridgeObjectRelease();
      id v71 = v68;
      if (v70)
      {
        sub_1000A17B8();

        sub_10008C960();
        sub_10003FDC8();
        v79();
        sub_1000AC6D0((uint64_t)v110, (uint64_t *)&unk_10030FD70);
        goto LABEL_36;
      }
      sub_10024DF60();
      uint64_t v13 = v110;
      sub_1000A58A0();
      uint64_t v59 = v72;
      int v74 = v73;

      sub_10003FDC8();
      v75();
      if (!v59)
      {
        uint64_t v80 = v106;
        sub_1000AC460((uint64_t)v13, v106, (uint64_t *)&unk_10030FD70);
        uint64_t v81 = sub_1000AD0A8();
        int v83 = sub_10001FA0C(v81, v82, v17);
        sub_1000AC6D0(v80, (uint64_t *)&unk_10030FD70);
        id v84 = v115;
        uint64_t v85 = sub_10024E1D0();
        if (v83 == 1)
        {
          os_log_type_t v86 = sub_10024EE20();
          if (os_log_type_enabled(v85, v86))
          {
            uint64_t v87 = sub_10003FD90();
            uint64_t v114 = sub_10003FD78();
            *(_DWORD *)uint64_t v87 = 136315138;
            uint64_t v109 = (void *)(v87 + 4);
            uint64_t v88 = sub_1000D427C();
            uint64_t v90 = sub_1000ACBC8(v88, v89);
            sub_1000ACB3C(v90);
            sub_10024F100();
            swift_bridgeObjectRelease();

            sub_1000ACC04((void *)&_mh_execute_header, v85, v86, "Failed to create renewal transaction when catching up %s");
            sub_1000AC9B0();
            sub_10003FBCC();
            sub_10003FBCC();
          }
          else
          {
          }
          uint64_t v13 = v110;
        }
        else
        {
          os_log_type_t v91 = sub_10024EE00();
          if (os_log_type_enabled(v85, v91))
          {
            id v92 = (_DWORD *)sub_10003FD90();
            uint64_t v114 = sub_10003FD78();
            *id v92 = 136315138;
            uint64_t v93 = sub_1000D427C();
            uint64_t v95 = sub_1000ACBC8(v93, v94);
            sub_1000ACB3C(v95);
            sub_10024F100();
            swift_bridgeObjectRelease();

            sub_1000ACC04((void *)&_mh_execute_header, v85, v91, "Auto-cancelling latest transaction for %s because it would overlap an existing transaction.");
            sub_1000AC9B0();
            sub_10003FBCC();
            sub_10003FBCC();
          }
          else
          {
          }
          sub_10006FF20();
          id v96 = v115;
          uint64_t v97 = variable initialization expression of ClientOverride.requestBundleVersion();
          sub_1000D5B48(v97);

          id v98 = v96;
          sub_1000A1278(v98, 0);

          uint64_t v13 = v110;
        }
        break;
      }

      id v115 = v59;
      v64 |= v74;
      id v76 = v59;
      double v61 = COERCE_DOUBLE(sub_1000AD148());
      char v78 = v77;

      os_log_type_t v3 = v69;
    }
    while ((v78 & 1) == 0);
  }
  sub_10006FF20();
  id v99 = v115;
  unsigned __int8 v100 = sub_1000D6C10();

  if (v100)
  {
    id v101 = v99;
    sub_1000A801C(v101);
  }
  sub_10008C960();
  sub_1000ACADC();
  v102();
  sub_1000AC6D0((uint64_t)v13, (uint64_t *)&unk_10030FD70);
LABEL_36:
  sub_1000AC7B0();
}

uint64_t sub_1000A5724(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000D939C(15);
  if (v11)
  {
    sub_10001C2A8(a1, a1[3]);
    sub_1000D428C();
    sub_1000D5AE4();
    sub_1000E0630();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
      id v14 = v13;
      sub_1000D453C();

      sub_10024DF60();
      uint64_t v15 = sub_10024E030();
      sub_1000195B4((uint64_t)v9, 0, 1, v15);
    }
    else
    {
      uint64_t v16 = sub_10024E030();
      sub_1000195B4((uint64_t)v9, 1, 1, v16);
    }
    return sub_1000AC3BC((uint64_t)v9, a4);
  }
  return result;
}

void sub_1000A58A0()
{
  sub_1000AC794();
  uint64_t v303 = v1;
  uint64_t v3 = v2;
  int v298 = v4;
  LODWORD(v314) = v5;
  uint64_t v7 = v6;
  uint64_t v294 = *v0;
  uint64_t v299 = sub_100019524(&qword_10030E948);
  sub_100025FBC();
  __chkstk_darwin(v8, v9);
  sub_1000AC748();
  uint64_t v292 = v10;
  sub_1000AC774();
  __chkstk_darwin(v11, v12);
  sub_1000ACD10();
  uint64_t v289 = v13;
  uint64_t v290 = sub_100019524(&qword_10030E950);
  sub_100025FBC();
  __chkstk_darwin(v14, v15);
  sub_1000AC748();
  uint64_t v291 = v16;
  sub_1000AC774();
  __chkstk_darwin(v17, v18);
  sub_1000ACD10();
  uint64_t v293 = v19;
  uint64_t v20 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v21 = sub_100026018(v20);
  __chkstk_darwin(v21, v22);
  sub_1000AC748();
  uint64_t v307 = v23;
  sub_1000AC774();
  __chkstk_darwin(v24, v25);
  sub_1000ACD10();
  uint64_t v305 = v26;
  id v310 = (id)sub_10024E0A0();
  sub_10001B550();
  uint64_t v296 = v27;
  __chkstk_darwin(v28, v29);
  sub_1000589AC();
  uint64_t v295 = v30;
  uint64_t v31 = sub_100019524(&qword_10030C100);
  uint64_t v32 = sub_100026018(v31);
  __chkstk_darwin(v32, v33);
  sub_1000589AC();
  uint64_t v304 = v34;
  uint64_t v313 = sub_10024E030();
  sub_10001B550();
  uint64_t v309 = v35;
  __chkstk_darwin(v36, v37);
  sub_1000AC748();
  uint64_t v301 = v38;
  sub_1000AC774();
  __chkstk_darwin(v39, v40);
  sub_1000ACA68();
  uint64_t v300 = v41;
  sub_1000AC774();
  __chkstk_darwin(v42, v43);
  sub_1000ACA68();
  uint64_t v308 = v44;
  sub_1000AC774();
  __chkstk_darwin(v45, v46);
  sub_1000ACA68();
  uint64_t v302 = v47;
  sub_1000AC774();
  __chkstk_darwin(v48, v49);
  unint64_t v51 = (char *)&v285 - v50;
  swift_getKeyPath();
  uint64_t v52 = sub_1000A7A3C();
  swift_release();
  uint64_t v53 = sub_1000D428C();
  uint64_t v55 = v54;
  v312 = v0;
  sub_1000AD160(v312 + 2, v312[5]);
  v315 = (void *)sub_10008A5FC(v53, v55);
  v311 = v51;
  sub_1000D6CFC(v3, (uint64_t)v51);
  sub_100019524(&qword_10030E958);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_10025CE00;
  *(unsigned char *)(v56 + 32) = 0;
  *(void *)(v56 + 64) = &type metadata for String;
  *(void *)(v56 + 40) = 0x77656E6552;
  *(void *)(v56 + 48) = 0xE500000000000000;
  *(unsigned char *)(v56 + 72) = 2;
  *(void *)(v56 + 104) = &type metadata for String;
  uint64_t v297 = v53;
  *(void *)(v56 + 80) = v53;
  *(void *)(v56 + 88) = v55;
  *(unsigned char *)(v56 + 112) = 7;
  *(void *)(v56 + 144) = &type metadata for UInt;
  *(void *)(v56 + 120) = v52;
  *(unsigned char *)(v56 + 152) = 8;
  uint64_t v306 = v55;
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1000D946C(8);
  *(void *)(v56 + 184) = &type metadata for UInt;
  if (v58) {
    uint64_t v57 = sub_1000D5AE4();
  }
  *(void *)(v56 + 160) = v57;
  *(unsigned char *)(v56 + 192) = 11;
  sub_10024DF70();
  *(void *)(v56 + 224) = &type metadata for Double;
  *(void *)(v56 + 200) = v59;
  *(unsigned char *)(v56 + 232) = 9;
  uint64_t v60 = sub_1000D427C();
  *(void *)(v56 + 264) = &type metadata for String;
  *(void *)(v56 + 240) = v60;
  *(void *)(v56 + 248) = v61;
  *(unsigned char *)(v56 + 272) = 12;
  double v62 = COERCE_DOUBLE(sub_1000D9478(12));
  *(void *)(v56 + 304) = &type metadata for Double;
  if (v63) {
    double v62 = sub_1000D453C();
  }
  *(double *)(v56 + 280) = v62;
  *(unsigned char *)(v56 + 312) = 13;
  uint64_t v64 = sub_1000D64FC();
  *(void *)(v56 + 344) = &type metadata for Int;
  *(void *)(v56 + 320) = v64;
  *(unsigned char *)(v56 + 352) = 14;
  uint64_t v65 = 3;
  if ((v314 & 1) == 0) {
    uint64_t v65 = 1;
  }
  *(void *)(v56 + 384) = &type metadata for Int;
  *(void *)(v56 + 360) = v65;
  *(unsigned char *)(v56 + 392) = 16;
  char v66 = sub_1000D6528();
  unint64_t v67 = 0xEA0000000000656CLL;
  unint64_t v68 = 0x62616D75736E6F43;
  uint64_t v69 = v312;
  switch(v66)
  {
    case 1:
      sub_1000AD1BC();
      sub_1000AD1D0();
      break;
    case 2:
      unint64_t v68 = 0xD000000000000017;
      unint64_t v67 = 0x8000000100278110;
      break;
    case 3:
      sub_1000AD190();
      break;
    default:
      break;
  }
  *(void *)(v56 + 424) = &type metadata for String;
  *(void *)(v56 + 400) = v68;
  *(void *)(v56 + 408) = v67;
  *(unsigned char *)(v56 + 432) = 17;
  *(void *)(v56 + 464) = &type metadata for Bool;
  *(unsigned char *)(v56 + 440) = 0;
  *(unsigned char *)(v56 + 472) = 20;
  sub_1000AD160(v0 + 2, v69[5]);
  sub_10008A3E4(v320);
  uint64_t v71 = v320[0];
  uint64_t v70 = v320[1];
  swift_bridgeObjectRetain();
  sub_10001DB0C((uint64_t)v320);
  *(void *)(v56 + 504) = &type metadata for String;
  *(void *)(v56 + 480) = v71;
  *(void *)(v56 + 488) = v70;
  *(unsigned char *)(v56 + 512) = 26;
  char v72 = sub_1000D6DB0();
  uint64_t v73 = 3157553;
  if (v72) {
    uint64_t v73 = 3157554;
  }
  *(void *)(v56 + 544) = &type metadata for String;
  *(void *)(v56 + 520) = v73;
  *(void *)(v56 + 528) = 0xE300000000000000;
  sub_1000AC21C();
  uint64_t v319 = sub_10024E510();
  if (v314)
  {
    uint64_t v74 = sub_1000D946C(25);
    id v75 = v310;
    if (v76)
    {
      uint64_t v74 = 0;
      *((void *)&v322 + 1) = 0;
      long long v323 = 0uLL;
    }
    else
    {
      *((void *)&v323 + 1) = &type metadata for UInt;
    }
    uint64_t v78 = v304;
    *(void *)&long long v322 = v74;
    sub_1002055E0((uint64_t)&v322, 25);
  }
  else
  {
    swift_getKeyPath();
    uint64_t v77 = sub_1000A7A3C();
    swift_release();
    *((void *)&v323 + 1) = &type metadata for UInt;
    *(void *)&long long v322 = v77;
    sub_1002055E0((uint64_t)&v322, 25);
    id v75 = v310;
    uint64_t v78 = v304;
  }
  sub_1000D6DE0(v78);
  uint64_t v79 = sub_1000ACDFC();
  if (sub_10001FA0C(v79, v80, (uint64_t)v75))
  {
    sub_1000AC6D0(v78, &qword_10030C100);
  }
  else
  {
    uint64_t v82 = v295;
    uint64_t v81 = v296;
    sub_1000ACAD0();
    v83();
    sub_1000AC6D0(v78, &qword_10030C100);
    uint64_t v84 = sub_10024E050();
    uint64_t v86 = v85;
    (*(void (**)(uint64_t, id))(v81 + 8))(v82, v75);
    *((void *)&v323 + 1) = &type metadata for String;
    *(void *)&long long v322 = v84;
    *((void *)&v322 + 1) = v86;
    uint64_t v87 = sub_1000ACDC0();
    sub_1002055E0(v87, 22);
  }
  uint64_t v88 = sub_1000D427C();
  uint64_t v90 = sub_1000FE9DC(v88, v89);
  swift_bridgeObjectRelease();
  id v310 = v7;
  if (v90)
  {
    swift_retain();
    uint64_t v91 = sub_10020F78C();
    uint64_t v93 = v92;
    unsigned int v95 = v94;
    swift_release();
    LODWORD(v304) = HIWORD(v95);
    type metadata accessor for Decimal(0);
    *((void *)&v323 + 1) = v96;
    *(void *)&long long v322 = v91;
    *((void *)&v322 + 1) = v93;
    LOWORD(v323) = v95;
    WORD1(v323) = v304;
    uint64_t v97 = sub_1000ACDC0();
    sub_1002055E0(v97, 21);
    swift_release();
  }
  uint64_t v98 = v305;
  sub_1000D5B40(v305);
  uint64_t v99 = sub_1000ACDFC();
  uint64_t v100 = v313;
  if (sub_10001FA0C(v99, v101, v313))
  {
    sub_1000AC6D0(v98, (uint64_t *)&unk_10030FD70);
    long long v323 = 0uLL;
    uint64_t v102 = 0;
    *((void *)&v322 + 1) = 0;
  }
  else
  {
    sub_1000ACAD0();
    v103();
    sub_1000AC6D0(v98, (uint64_t *)&unk_10030FD70);
    sub_10024DF70();
    uint64_t v102 = v104;
    sub_1000ACADC();
    v105();
    *((void *)&v323 + 1) = &type metadata for Double;
  }
  uint64_t v106 = v308;
  *(void *)&long long v322 = v102;
  uint64_t v107 = sub_1000ACDC0();
  sub_1002055E0(v107, 33);
  uint64_t v108 = sub_1000D6E60();
  if (v108)
  {
    uint64_t v109 = v108;
    uint64_t v110 = v108[2];
    if (v110)
    {
      v321[0] = _swiftEmptyArrayStorage;
      sub_1000389BC();
      uint64_t v111 = (unsigned __int8 *)(v109 + 8);
      uint64_t v112 = (void *)v321[0];
      do
      {
        uint64_t v114 = *((void *)v111 - 4);
        uint64_t v113 = *((void *)v111 - 3);
        uint64_t v116 = *((void *)v111 - 2);
        id v115 = (void *)*((void *)v111 - 1);
        int v117 = *v111;
        v111 += 40;
        switch(v117)
        {
          case 1:
            *(void *)&long long v322 = 0x3A636F686461;
            uint64_t v131 = sub_1000AC75C(0xE600000000000000);
            sub_1000AC290(v131, v132, v133, v134, 1u);
            sub_1000AC994();
            sub_1000ACC1C();
            v331._uint64_t countAndFlagsBits = v116;
            v331._object = v115;
            sub_10024E800(v331);
            uint64_t v122 = v114;
            uint64_t v123 = v113;
            uint64_t v124 = v116;
            uint64_t v125 = (uint64_t)v115;
            unsigned __int8 v126 = 1;
            break;
          case 2:
            *(void *)&long long v322 = 0x3A65646F63;
            uint64_t v135 = sub_1000AC75C(0xE500000000000000);
            sub_1000AC290(v135, v136, v137, v138, 2u);
            sub_1000AC994();
            sub_1000ACC1C();
            v332._uint64_t countAndFlagsBits = v116;
            v332._object = v115;
            sub_10024E800(v332);
            uint64_t v122 = v114;
            uint64_t v123 = v113;
            uint64_t v124 = v116;
            uint64_t v125 = (uint64_t)v115;
            unsigned __int8 v126 = 2;
            break;
          case 3:
            sub_1000AD01C();
            *(void *)&long long v322 = v139;
            uint64_t v140 = sub_1000AC75C(0xE800000000000000);
            sub_1000AC290(v140, v141, v142, v143, 3u);
            sub_1000AC994();
            sub_1000ACC1C();
            v333._uint64_t countAndFlagsBits = v116;
            v333._object = v115;
            sub_10024E800(v333);
            uint64_t v122 = v114;
            uint64_t v123 = v113;
            uint64_t v124 = v116;
            uint64_t v125 = (uint64_t)v115;
            unsigned __int8 v126 = 3;
            break;
          case 4:
            *(void *)&long long v322 = 979661939;
            uint64_t v127 = sub_1000AC75C(0xE400000000000000);
            sub_1000AC290(v127, v128, v129, v130, 4u);
            sub_1000AC994();
            uint64_t v122 = v114;
            uint64_t v123 = v113;
            uint64_t v124 = v116;
            uint64_t v125 = (uint64_t)v115;
            unsigned __int8 v126 = 4;
            break;
          default:
            *(void *)&long long v322 = 0x3A6F72746E69;
            uint64_t v118 = sub_1000AC75C(0xE600000000000000);
            sub_1000AC290(v118, v119, v120, v121, 0);
            sub_1000AC994();
            uint64_t v122 = v114;
            uint64_t v123 = v113;
            uint64_t v124 = v116;
            uint64_t v125 = (uint64_t)v115;
            unsigned __int8 v126 = 0;
            break;
        }
        sub_1000AC2FC(v122, v123, v124, v125, v126);
        long long v144 = v322;
        v321[0] = v112;
        unint64_t v146 = v112[2];
        unint64_t v145 = v112[3];
        if (v146 >= v145 >> 1)
        {
          sub_1000ACFF8(v145);
          sub_1000389BC();
          uint64_t v112 = (void *)v321[0];
        }
        v112[2] = v146 + 1;
        *(_OWORD *)&v112[2 * v146 + 4] = v144;
        --v110;
      }
      while (v110);
      swift_bridgeObjectRelease();
      uint64_t v100 = v313;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v112 = _swiftEmptyArrayStorage;
    }
    *((void *)&v323 + 1) = sub_100019524(&qword_100309410);
    *(void *)&long long v322 = v112;
    uint64_t v147 = v310;
    uint64_t v148 = v307;
    uint64_t v106 = v308;
  }
  else
  {
    long long v322 = 0u;
    long long v323 = 0u;
    uint64_t v147 = v310;
    uint64_t v148 = v307;
  }
  uint64_t v149 = sub_1000ACDC0();
  sub_1002055E0(v149, 19);
  uint64_t v150 = sub_1000D939C(15);
  if (v151)
  {
    *((void *)&v323 + 1) = &type metadata for String;
    *(void *)&long long v322 = v150;
    *((void *)&v322 + 1) = v151;
  }
  else
  {
    long long v322 = 0u;
    long long v323 = 0u;
  }
  uint64_t v152 = sub_1000ACDC0();
  sub_1002055E0(v152, 15);
  if (v314) {
    goto LABEL_47;
  }
  sub_1000D7038((uint64_t)v315, (uint64_t)v321);
  sub_10005CF84((uint64_t)v321, (uint64_t)&v322, &qword_10030E960);
  uint64_t v159 = v326;
  if (!v326)
  {
    if ((v298 & 1) == 0)
    {
LABEL_64:
      int v158 = 0;
      uint64_t v156 = 0;
      uint64_t v157 = 7;
      goto LABEL_87;
    }
LABEL_47:
    uint64_t v153 = sub_1000D427C();
    uint64_t v155 = sub_1000FE9DC(v153, v154);
    swift_bridgeObjectRelease();
    if (v155)
    {
      uint64_t v156 = *(void *)(v155 + 176);
      uint64_t v157 = *(unsigned __int8 *)(v155 + 184);
      swift_release();
LABEL_49:
      int v158 = 0;
      goto LABEL_87;
    }
    goto LABEL_64;
  }
  uint64_t v295 = v327;
  long long v286 = v322;
  long long v328 = v322;
  long long v287 = v323;
  long long v329 = v323;
  int v288 = v324;
  unsigned __int8 v330 = v324;
  uint64_t v304 = v325;
  uint64_t v294 = sub_1000A7460(v326, v325);
  LODWORD(v305) = v160;
  uint64_t v162 = *(void *)(v159 + 80);
  uint64_t v161 = *(void *)(v159 + 88);
  *((void *)&v318 + 1) = &type metadata for String;
  *(void *)&long long v317 = v162;
  *((void *)&v317 + 1) = v161;
  swift_bridgeObjectRetain();
  uint64_t v163 = sub_1000ACF6C();
  sub_1002055E0(v163, 9);
  swift_retain();
  uint64_t v164 = sub_10020F78C();
  uint64_t v166 = v165;
  int v168 = v167;
  uint64_t v296 = v159;
  swift_release();
  type metadata accessor for Decimal(0);
  uint64_t v285 = v169;
  *((void *)&v318 + 1) = v169;
  *(void *)&long long v317 = v164;
  uint64_t v170 = v295;
  *((void *)&v317 + 1) = v166;
  LODWORD(v318) = v168;
  sub_1000ACF78();
  uint64_t v171 = *(void *)(v170 + 16);
  if (v171)
  {
    uint64_t v316 = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000389BC();
    v172 = (unsigned __int8 *)(v170 + 64);
    v173 = (void *)v316;
    do
    {
      uint64_t v174 = *((void *)v172 - 4);
      uint64_t v175 = *((void *)v172 - 3);
      uint64_t v177 = *((void *)v172 - 2);
      uint64_t v176 = *((void *)v172 - 1);
      int v178 = *v172;
      v172 += 40;
      switch(v178)
      {
        case 1:
          uint64_t v188 = sub_1000ACEE0(0x3A636F686461);
          sub_1000AC290(v188, v189, v190, v191, 1u);
          sub_1000AC9F4();
          sub_1000ACC1C();
          sub_1000ACEC4();
          uint64_t v183 = v174;
          uint64_t v184 = v175;
          uint64_t v185 = v177;
          uint64_t v186 = v176;
          unsigned __int8 v187 = 1;
          break;
        case 2:
          *(void *)&long long v317 = 0x3A65646F63;
          uint64_t v192 = sub_1000AC9DC(0xE500000000000000);
          sub_1000AC290(v192, v193, v194, v195, 2u);
          sub_1000AC9F4();
          sub_1000ACC1C();
          sub_1000ACEC4();
          uint64_t v183 = v174;
          uint64_t v184 = v175;
          uint64_t v185 = v177;
          uint64_t v186 = v176;
          unsigned __int8 v187 = 2;
          break;
        case 3:
          sub_1000AD01C();
          *(void *)&long long v317 = v196;
          uint64_t v197 = sub_1000AC9DC(0xE800000000000000);
          sub_1000AC290(v197, v198, v199, v200, 3u);
          sub_1000AC9F4();
          sub_1000ACC1C();
          sub_1000ACEC4();
          uint64_t v183 = v174;
          uint64_t v184 = v175;
          uint64_t v185 = v177;
          uint64_t v186 = v176;
          unsigned __int8 v187 = 3;
          break;
        case 4:
          *(void *)&long long v317 = 979661939;
          uint64_t v201 = sub_1000AC9DC(0xE400000000000000);
          sub_1000AC290(v201, v202, v203, v204, 4u);
          sub_1000AC9F4();
          uint64_t v183 = v174;
          uint64_t v184 = v175;
          uint64_t v185 = v177;
          uint64_t v186 = v176;
          unsigned __int8 v187 = 4;
          break;
        default:
          uint64_t v179 = sub_1000ACEE0(0x3A6F72746E69);
          sub_1000AC290(v179, v180, v181, v182, 0);
          sub_1000AC9F4();
          uint64_t v183 = v174;
          uint64_t v184 = v175;
          uint64_t v185 = v177;
          uint64_t v186 = v176;
          unsigned __int8 v187 = 0;
          break;
      }
      sub_1000AC2FC(v183, v184, v185, v186, v187);
      long long v205 = v317;
      uint64_t v316 = (uint64_t)v173;
      unint64_t v207 = v173[2];
      unint64_t v206 = v173[3];
      if (v207 >= v206 >> 1)
      {
        sub_1000ACFF8(v206);
        sub_1000389BC();
        v173 = (void *)v316;
      }
      v173[2] = v207 + 1;
      *(_OWORD *)&v173[2 * v207 + 4] = v205;
      --v171;
    }
    while (v171);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v173 = _swiftEmptyArrayStorage;
  }
  *((void *)&v318 + 1) = sub_100019524(&qword_100309410);
  *(void *)&long long v317 = v173;
  sub_1002055E0((uint64_t)&v317, 19);
  uint64_t v147 = v310;
  uint64_t v100 = v313;
  uint64_t v148 = v307;
  uint64_t v208 = v294;
  uint64_t v157 = v305;
  uint64_t v209 = v296;
  uint64_t v210 = v304;
  if (v304)
  {
    swift_retain();
    uint64_t v211 = sub_1000D9C38();
    uint64_t v213 = v212;
    sub_1000AC2FC(v286, *((uint64_t *)&v286 + 1), v287, *((uint64_t *)&v287 + 1), v288);
    *((void *)&v318 + 1) = &type metadata for String;
    *(void *)&long long v317 = v211;
    *((void *)&v317 + 1) = v213;
    uint64_t v214 = sub_1000ACF6C();
    sub_1002055E0(v214, 18);
    uint64_t v215 = *(unsigned __int8 *)(v210 + 57);
    unint64_t v216 = 0xE400000000000000;
    uint64_t v217 = 1701736302;
    uint64_t v106 = v308;
    uint64_t v156 = v208;
    switch(v215)
    {
      case 1:
        uint64_t v217 = 1701147238;
        break;
      case 2:
        uint64_t v217 = 0x756F597341796170;
        unint64_t v216 = 0xEA00000000006F47;
        break;
      case 3:
        uint64_t v217 = 0x6F72467055796170;
        unint64_t v216 = 0xEA0000000000746ELL;
        break;
      default:
        break;
    }
    *((void *)&v318 + 1) = &type metadata for String;
    *(void *)&long long v317 = v217;
    *((void *)&v317 + 1) = v216;
    uint64_t v224 = sub_1000ACF6C();
    sub_1002055E0(v224, 35);
    switch(*(unsigned char *)(v304 + 57))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_80;
      default:
        sub_1000AD0FC();
        char v225 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v225)
        {
LABEL_80:
          *((void *)&v318 + 1) = &type metadata for Int;
          *(void *)&long long v317 = 0;
          sub_1000ACF78();
          uint64_t v226 = v304;
        }
        else
        {
          uint64_t v226 = v304;
          uint64_t v227 = sub_1001751F8();
          if ((v229 & 0x100000000) == 0)
          {
            *((void *)&v318 + 1) = v285;
            *(void *)&long long v317 = v227;
            *((void *)&v317 + 1) = v228;
            LODWORD(v318) = v229;
            sub_1000ACF78();
          }
        }
        swift_release();
        if (*(__objc2_class **)v226 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription9CodeOffer)
        {
          uint64_t v230 = *(void *)(v226 + 80);
          uint64_t v231 = *(void *)(v226 + 88);
          *((void *)&v318 + 1) = &type metadata for String;
          *(void *)&long long v317 = v230;
          *((void *)&v317 + 1) = v231;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v232 = sub_1000ACF6C();
          sub_1002055E0(v232, 28);
          swift_release();
          swift_release_n();
        }
        else
        {
          swift_release();
          swift_release();
        }
        int v158 = 1;
        break;
    }
  }
  else
  {
    sub_1000AC2FC(v286, *((uint64_t *)&v286 + 1), v287, *((uint64_t *)&v287 + 1), v288);
    uint64_t v219 = *(void *)(v209 + 80);
    uint64_t v218 = *(void *)(v209 + 88);
    swift_bridgeObjectRetain();
    if (v219 == sub_1000D427C() && v218 == v220)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v106 = v308;
      uint64_t v156 = v208;
      goto LABEL_49;
    }
    sub_10008C960();
    int v222 = sub_10024FA60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    int v223 = v222 ^ 1;
    uint64_t v106 = v308;
    uint64_t v156 = v208;
    int v158 = v223;
  }
LABEL_87:
  uint64_t v233 = sub_1000D76BC();
  if (v234)
  {
    sub_1000ACF94(1);
    goto LABEL_97;
  }
  uint64_t v235 = v233;
  if (__OFADD__(v233, 1))
  {
    __break(1u);
    goto LABEL_130;
  }
  sub_1000ACF94(v233 + 1);
  if (v235 < 99)
  {
LABEL_97:
    if (v314) {
      goto LABEL_102;
    }
    goto LABEL_101;
  }
  LODWORD(v305) = v157;
  uint64_t v157 = v306;
  if (qword_100308DE0 != -1) {
    goto LABEL_131;
  }
  while (1)
  {
    uint64_t v236 = sub_10024E1F0();
    sub_10001B0E8(v236, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    v237 = v147;
    v238 = sub_10024E1D0();
    os_log_type_t v239 = sub_10024EE00();
    int v240 = v239;
    if (os_log_type_enabled(v238, v239))
    {
      sub_10003FD78();
      *(void *)&long long v317 = sub_1000ACB70();
      *(_DWORD *)uint64_t v148 = 136315650;
      LODWORD(v304) = v240;
      uint64_t v241 = sub_1000D939C(15);
      if (v242)
      {
        unint64_t v243 = v242;
      }
      else
      {
        uint64_t v241 = 0x6E776F6E6B6E753CLL;
        unint64_t v243 = 0xE90000000000003ELL;
      }
      uint64_t v316 = sub_1000F3F3C(v241, v243, (uint64_t *)&v317);
      sub_10024F100();
      swift_bridgeObjectRelease();

      *(_WORD *)(v148 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v316 = sub_1000F3F3C(v297, v157, (uint64_t *)&v317);
      uint64_t v106 = v308;
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v148 + 22) = 2048;
      uint64_t v316 = 99;
      sub_10024F100();
      _os_log_impl((void *)&_mh_execute_header, v238, (os_log_type_t)v304, "Automatically canceling subscription with group ID %s for bundle ID %s because we’ve already renewed it at least %ld times", (uint8_t *)v148, 0x20u);
      swift_arrayDestroy();
      uint64_t v100 = v313;
      sub_10003FBCC();
      uint64_t v148 = v307;
      uint64_t v147 = v310;
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    *((void *)&v318 + 1) = sub_100019524(&qword_100309410);
    *(void *)&long long v317 = _swiftEmptyArrayStorage;
    sub_1002055E0((uint64_t)&v317, 19);
    int v158 = 1;
    LODWORD(v157) = v305;
    if ((v314 & 1) == 0)
    {
LABEL_101:
      if (v157 != 7)
      {
        sub_1000A74FC((uint64_t)v147, (uint64_t)v311, v156, v157);
        sub_10024DF70();
        double v248 = v247;
        sub_1000ACADC();
        v249();
        double v244 = v248;
        goto LABEL_105;
      }
    }
LABEL_102:
    double v244 = COERCE_DOUBLE(sub_1000D9478(4));
    if (v245)
    {
      long long v317 = 0u;
      long long v318 = 0u;
      char v246 = 1;
      goto LABEL_106;
    }
LABEL_105:
    char v246 = 0;
    *((void *)&v318 + 1) = &type metadata for Double;
    *(double *)&long long v317 = v244;
LABEL_106:
    uint64_t v250 = sub_1000ACF6C();
    sub_1002055E0(v250, 4);
    sub_1000AC460(v303, v148, (uint64_t *)&unk_10030FD70);
    if (sub_10001FA0C(v148, 1, v100) == 1)
    {
      sub_1000AC6D0(v148, (uint64_t *)&unk_10030FD70);
    }
    else
    {
      uint64_t v251 = v309;
      sub_1000AD044();
      v252();
      if (v246 & 1) != 0 || (v298)
      {
        (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v106, v100);
      }
      else
      {
        sub_10024DF70();
        double v283 = v282;
        v284 = *(void (**)(uint64_t, uint64_t))(v251 + 8);
        v284(v106, v100);
        if (v283 < v244)
        {
          v284((uint64_t)v311, v100);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_128;
        }
      }
    }
    *(void *)&long long v317 = 0;
    v253 = sub_10001C2A8(v312 + 7, v312[10]);
    __chkstk_darwin(v253, v254);
    sub_1000ACD1C();
    *(void *)(v255 - 16) = &v317;
    *(void *)(v255 - 8) = &v319;
    sub_100206AB8();
    if (!(void)v317)
    {
      __break(1u);
      goto LABEL_133;
    }
    id v256 = (id)v317;
    uint64_t v257 = sub_1000D427C();
    v258 = v315;
    uint64_t v147 = (void *)sub_1000FE9DC(v257, v259);
    swift_bridgeObjectRelease();

    if (!v147)
    {
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
    id v260 = v256;
    sub_1000AD148();
    char v262 = v261;

    if (v262)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_122;
    }
    id v263 = v258;
    sub_1000D453C();

    sub_10024DF60();
    uint64_t v156 = v301;
    sub_10024DF60();
    uint64_t v157 = v147[24];
    uint64_t v148 = v147[25];
    uint64_t v106 = sub_1000AC374((unint64_t *)&qword_10030E968, (void (*)(uint64_t))&type metadata accessor for Date);
    swift_bridgeObjectRetain();
    if (sub_10024E5F0()) {
      break;
    }
LABEL_130:
    __break(1u);
LABEL_131:
    swift_once();
  }
  uint64_t v304 = (uint64_t)v147;
  uint64_t v305 = v157;
  uint64_t v307 = v148;
  LODWORD(v308) = v158;
  uint64_t v264 = v299;
  uint64_t v265 = v289 + *(int *)(v299 + 48);
  uint64_t v266 = v309;
  v267 = *(void (**)(void))(v309 + 16);
  sub_1000ACBB8();
  v267();
  uint64_t v314 = v265;
  sub_1000ACBB8();
  v267();
  uint64_t v268 = v292;
  uint64_t v269 = v292 + *(int *)(v264 + 48);
  sub_1000AD0FC();
  sub_1000ACBB8();
  v267();
  sub_1000AD184();
  sub_1000ACBB8();
  v267();
  v270 = *(void (**)(void))(v266 + 32);
  uint64_t v271 = v291;
  sub_1000ACCD8();
  v270();
  v272 = *(void (**)(void))(v266 + 8);
  ((void (*)(uint64_t, uint64_t))v272)(v269, v313);
  v273 = v272;
  uint64_t v274 = v268 + *(int *)(v299 + 48);
  sub_1000AD0FC();
  sub_1000ACCD8();
  v270();
  ((void (*)(uint64_t, uint64_t, uint64_t))v270)(v274, v314, v313);
  sub_1000ACCD8();
  v270();
  uint64_t v275 = v313;
  sub_1000ACA10();
  v272();
  uint64_t v276 = v293;
  sub_10005CF84(v271, v293, &qword_10030E950);
  if (!(void)v317)
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  id v277 = (id)v317;
  sub_1000D5AE4();

  LOBYTE(v277) = sub_1000A46B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000AC6D0(v276, &qword_10030E950);
  if ((v277 & 1) == 0)
  {
    swift_release();
    sub_1000ACA10();
    v273();
    ((void (*)(uint64_t, uint64_t))v273)(v300, v275);
LABEL_122:
    if (qword_100308D48 != -1) {
      swift_once();
    }
    if ((void)v317)
    {
      id v280 = (id)v317;
      sub_100143968();
      swift_release();

      sub_10003FDC8();
      v281();
      swift_bridgeObjectRelease();
      goto LABEL_128;
    }
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  if (!(void)v317)
  {
LABEL_135:
    __break(1u);
    JUMPOUT(0x1000A72B0);
  }
  id v278 = (id)v317;
  sub_10009F408();
  swift_release();

  swift_release();
  sub_1000ACA10();
  v273();
  sub_1000ACA10();
  v273();
  sub_1000ACA10();
  v273();

  swift_bridgeObjectRelease();
  id v279 = v310;
LABEL_128:
  sub_1000AC7B0();
}

uint64_t sub_1000A7308@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A7354(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 96) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A73B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A7400(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A7460(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return sub_100175300();
  }
  else {
    return *(void *)(a1 + 176);
  }
}

uint64_t sub_1000A7498(void *a1, void **a2)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v3 = swift_bridgeObjectRetain();
  id v4 = sub_1001F0304(v3);
  swift_bridgeObjectRelease();
  int v5 = *a2;
  *a2 = v4;

  return 1;
}

uint64_t sub_1000A74FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  sub_10001C2A8((void *)(v4 + 16), *(void *)(v4 + 40));
  sub_1000D428C();
  int v8 = sub_10008B4BC();
  swift_bridgeObjectRelease();
  sub_100051580(a3, a4, a2, v8);
  return sub_10024DF60();
}

#error "1000A7754: call analysis failed (funcsize=151)"

uint64_t sub_1000A7820(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v6 = sub_100026018(v5);
  __chkstk_darwin(v6, v7);
  sub_100062164();
  sub_1000D777C(0);
  uint64_t v8 = sub_1000ACF50();
  sub_1000ACC78();
  if (v9)
  {
    sub_10001C2A8((void *)(v3 + 16), *(void *)(v3 + 40));
    uint64_t v10 = sub_1000D427C();
    uint64_t v12 = v11;
    uint64_t v13 = sub_1000D428C();
    sub_10008A5FC(v13, v14);
    uint64_t v15 = sub_1000FE198(v10, v12);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v15) {
      return 2;
    }
    type metadata accessor for OctaneSubscription();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      sub_1000D946C(8);
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = (void *)sub_10009E82C(a1, 0);
        swift_release();
        if (!v17)
        {
          swift_release();
          return 2;
        }
LABEL_12:
        sub_1000D63A4(1u);
        uint64_t v8 = sub_1000ACF50();

        swift_release();
        return v8;
      }
      sub_1000D428C();
      uint64_t v20 = sub_10024E030();
      sub_1000AD128(v20);
      sub_10009EA18();
      uint64_t v17 = v21;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      sub_1000D428C();
      uint64_t v18 = sub_10024E030();
      sub_1000AD128(v18);
      sub_1000AD0FC();
      sub_10009DF90();
      uint64_t v17 = v19;
      swift_bridgeObjectRelease();
    }
    sub_1000AC6D0(v2, (uint64_t *)&unk_10030FD70);
    goto LABEL_12;
  }
  return v8;
}

uint64_t sub_1000A7A3C()
{
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  sub_1000518C4(v7);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0;
  swift_retain();
  uint64_t v3 = (void (*)(void *, void))swift_modifyAtReferenceWritableKeyPath();
  sub_1001F1F50(&v7, v2);
  v3(v5, 0);
  swift_release();
  return v2;
}

void *sub_1000A7B04()
{
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = v1;
  if (!v1)
  {
    sub_1000ACEB8();
    id v39 = 0;
    sub_100019524(&qword_10030E938);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100256170;
    *(void *)(inited + 32) = kSecImportExportPassphrase;
    *(void *)(inited + 40) = 0x74694B65726F7453;
    *(void *)(inited + 48) = 0xE800000000000000;
    *(void *)(inited + 64) = &type metadata for String;
    *(void *)(inited + 72) = kSecAttrAccessible;
    type metadata accessor for CFString(0);
    os_log_type_t v5 = v4;
    *(void *)(inited + 104) = v4;
    *(void *)(inited + 80) = kSecAttrAccessibleAlways;
    sub_1000AC374((unint64_t *)&qword_1003091C0, type metadata accessor for CFString);
    CFStringRef v6 = (id)kSecImportExportPassphrase;
    CFStringRef v7 = (id)kSecAttrAccessible;
    CFStringRef v8 = (id)kSecAttrAccessibleAlways;
    sub_1000AD0E8();
    sub_10024E510();
    Class isa = sub_10024DEF0().super.isa;
    sub_1000AD0E8();
    v10.super.Class isa = sub_10024E4E0().super.isa;
    swift_bridgeObjectRelease();
    CFDataRef v11 = (const __CFData *)sub_1000ACF34();
    OSStatus v14 = SecPKCS12Import(v11, v12, v13);

    if (v14)
    {
      CFStringRef v15 = SecCopyErrorMessageString(v14, 0);
      if (v15)
      {
        char v16 = (__CFString *)v15;
        if (qword_100308DE0 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_10024E1F0();
        sub_10001B0E8(v17, (uint64_t)qword_10034C0E0);
        uint64_t v18 = v16;
        uint64_t v19 = sub_10024E1D0();
        os_log_type_t v20 = sub_10024EE10();
        if (sub_1000ACE08(v20))
        {
          uint64_t v21 = (uint8_t *)sub_10003FD90();
          uint64_t v22 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 138412290;
          uint64_t v38 = v18;
          uint64_t v23 = v18;
          sub_1000AD1A4();
          *uint64_t v22 = v16;

          _os_log_impl((void *)&_mh_execute_header, v19, v5, "Error importing .p12 data: %@", v21, 0xCu);
          sub_100019524(&qword_1003170F0);
          swift_arrayDestroy();
          sub_10003FBCC();
          sub_10003FBCC();
        }
        else
        {

          uint64_t v19 = v18;
        }
        goto LABEL_20;
      }
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_10024E1F0();
      uint64_t v19 = sub_1000ACE40(v25, (uint64_t)qword_10034C0E0);
      os_log_type_t v26 = sub_10024EE10();
      if (!sub_1000AC818(v26)) {
        goto LABEL_20;
      }
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 67109120;
      LODWORD(v38) = v14;
      sub_10024F100();
      uint64_t v28 = "Error importing .p12 data: %d";
      uint64_t v29 = v19;
      os_log_type_t v30 = v0;
      uint64_t v31 = v27;
      uint32_t v32 = 8;
    }
    else
    {
      if (v39)
      {
        uint64_t v38 = 0;
        id v24 = v39;
        sub_100019524(&qword_10030E940);
        sub_10024EA90();
      }
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_10024E1F0();
      uint64_t v19 = sub_1000ACE40(v33, (uint64_t)qword_10034C0E0);
      os_log_type_t v34 = sub_10024EE10();
      if (!sub_1000AC818(v34)) {
        goto LABEL_20;
      }
      uint64_t v35 = (_WORD *)sub_10003FD28();
      sub_1000ACC6C(v35);
      uint64_t v28 = "No identities found after import";
      uint64_t v29 = v19;
      os_log_type_t v30 = v0;
      uint64_t v31 = (uint8_t *)v10.super.isa;
      uint32_t v32 = 2;
    }
    _os_log_impl((void *)&_mh_execute_header, v29, v30, v28, v31, v32);
    sub_10003FBCC();
LABEL_20:

    uint64_t v2 = 0;
  }
  id v36 = v1;
  return v2;
}

uint64_t sub_1000A801C(void *a1)
{
  uint64_t v4 = sub_100019524(&qword_10030A768);
  uint64_t v5 = sub_100026018(v4);
  __chkstk_darwin(v5, v6);
  sub_100062164();
  sub_10024EBB0();
  sub_10024EBD0();
  sub_1000ACDB4();
  sub_1000195B4(v7, v8, v9, v10);
  CFDataRef v11 = (void *)sub_1000AC8E4();
  void v11[2] = 0;
  v11[3] = 0;
  void v11[4] = v1;
  v11[5] = a1;
  swift_retain();
  id v12 = a1;
  sub_100198B48(v2, (uint64_t)&unk_10030E8F8, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1000A80E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1000A8104, 0, 0);
}

uint64_t sub_1000A8104()
{
  sub_100043A98();
  uint64_t v1 = (void *)v0[2];
  v0[4] = sub_10001C2A8(v1 + 2, v1[5]);
  uint64_t v2 = v1[15];
  v0[5] = v2;
  swift_retain();
  return _swift_task_switch(sub_1000A8188, v2, 0);
}

uint64_t sub_1000A8188()
{
  sub_100043A98();
  sub_1000A82A8(*(id *)(v0 + 24), **(void **)(v0 + 32), *(void *)(v0 + 16));
  swift_release();
  sub_100043B28();
  return v1();
}

uint64_t sub_1000A81F0()
{
  sub_10001C2EC(v0 + 16);
  sub_10001C2EC(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_1000AC6A8(*(void *)(v0 + 152), *(void *)(v0 + 160));
  return v0;
}

uint64_t sub_1000A8250()
{
  sub_1000A81F0();
  return _swift_deallocClassInstance(v0, 176, 7);
}

uint64_t type metadata accessor for OctaneTransactionManager()
{
  return self;
}

void sub_1000A82A8(id a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = v3;
  uint64_t v8 = sub_10024F570();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v14);
  char v16 = &v46[-v15];
  if (sub_1000D6C10())
  {
    unint64_t v51 = v13;
    uint64_t v52 = v9;
    uint64_t v53 = v8;
    uint64_t v17 = (uint64_t *)(v3 + 112);
    swift_beginAccess();
    int64_t v18 = sub_1000AB620((uint64_t *)(v3 + 112));
    unint64_t v19 = *(void *)(v4 + 112);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v20 < v18)
    {
      __break(1u);
    }
    else
    {
      uint64_t v54 = v16;
      sub_10003BF1C();
      swift_endAccess();
      uint64_t v21 = sub_1000D5AE4();
      uint64_t v22 = sub_1000D428C();
      unint64_t v19 = v23;
      uint64_t v24 = swift_allocObject();
      swift_weakInit();
      uint64_t v25 = (void *)swift_allocObject();
      v25[2] = v24;
      v25[3] = v21;
      uint64_t v49 = v21;
      uint64_t v50 = v22;
      v25[4] = v22;
      v25[5] = v19;
      void v25[6] = a2;
      v25[7] = a3;
      type metadata accessor for SubscriptionRenewalCoordinator.RenewalTask();
      swift_allocObject();
      swift_retain();
      a1 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      os_log_type_t v26 = sub_1000A9DF0(a1, (uint64_t)&unk_10030E908, (uint64_t)v25);
      if (!v26)
      {
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v27 = v26;
      swift_beginAccess();
      swift_retain_n();
      int64_t v4 = sub_1000AB920(v17, v27);
      if (!((unint64_t)*v17 >> 62))
      {
        uint64_t v28 = *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10024F6F0();
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v29 = v54;
    if (v28 < v4)
    {
      __break(1u);
    }
    else
    {
      sub_10003BF1C();
      swift_retain();
      sub_10024EA70();
      sub_1000348E0(*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10));
      sub_10024EB10();
      sub_10024EAC0();
      swift_endAccess();
      if (qword_100308DE0 == -1) {
        goto LABEL_10;
      }
    }
    swift_once();
LABEL_10:
    uint64_t v30 = sub_10024E1F0();
    sub_10001B0E8(v30, (uint64_t)qword_10034C0E0);
    id v31 = a1;
    swift_retain_n();
    id v32 = v31;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_10024E1D0();
    os_log_type_t v34 = sub_10024EE00();
    int v35 = v34;
    uint64_t v54 = v33;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v56[0] = v48;
      *(_DWORD *)uint64_t v36 = 136315906;
      int v47 = v35;
      uint64_t v37 = sub_1000D427C();
      uint64_t v55 = sub_1000F3F3C(v37, v38, v56);
      sub_10024F100();
      swift_bridgeObjectRelease();

      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1000F3F3C(v50, v19, v56);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 22) = 2048;
      uint64_t v55 = v49;
      sub_10024F100();
      *(_WORD *)(v36 + 32) = 2080;
      sub_1000A8AF4();
      id v39 = v51;
      sub_10024F540();
      sub_10024F560();
      uint64_t v40 = *(void (**)(NSObject *, uint64_t))(v52 + 8);
      uint64_t v41 = v39;
      uint64_t v42 = v53;
      v40(v41, v53);
      v40(v29, v42);
      uint64_t v43 = sub_10024FD60();
      uint64_t v55 = sub_1000F3F3C(v43, v44, v56);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v45 = v54;
      _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v47, "Scheduled subscription renewal of %s for %s (transactionID: %lu). The renewal will occur in %s.", (uint8_t *)v36, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release_n();
    }
    else
    {
      swift_release_n();

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  sub_1000A8BF8(a1);
}

uint64_t sub_1000A88C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return _swift_task_switch(sub_1000A88F0, 0, 0);
}

uint64_t sub_1000A88F0()
{
  sub_100043A98();
  sub_10006FF20();
  uint64_t Strong = swift_weakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000A89DC;
    uint64_t v3 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[7];
    uint64_t v6 = v0[8];
    uint64_t v7 = v0[6];
    return sub_1000A8ECC(v7, v5, v6, v3, v4);
  }
  else
  {
    sub_100043B28();
    return v9();
  }
}

uint64_t sub_1000A89DC()
{
  sub_100043A98();
  sub_100043A74();
  uint64_t v1 = *v0;
  sub_1000AC9CC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  sub_100043B28();
  return v3();
}

uint64_t sub_1000A8AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 != a4) {
    return 0;
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }
  else {
    return sub_10024FA60();
  }
}

uint64_t sub_1000A8AF4()
{
  uint64_t v0 = sub_10024F570();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024DF70();
  sub_10024DF80();
  sub_10024F540();
  sub_10024FD80();
  sub_10024F550();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_1000A8BF8(void *a1)
{
  swift_beginAccess();
  id v3 = a1;
  uint64_t v4 = sub_1000AB214((uint64_t *)(v1 + 112), v3);
  unint64_t v5 = *(void *)(v1 + 112);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_10003BF1C();
    swift_endAccess();
    if (qword_100308DE0 == -1) {
      goto LABEL_5;
    }
  }
  swift_once();
LABEL_5:
  uint64_t v7 = sub_10024E1F0();
  sub_10001B0E8(v7, (uint64_t)qword_10034C0E0);
  id v8 = v3;
  uint64_t v9 = sub_10024E1D0();
  os_log_type_t v10 = sub_10024EE00();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v12 = sub_1000D427C();
    sub_1000F3F3C(v12, v13, v16);
    sub_10024F100();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v14 = sub_1000D428C();
    sub_1000F3F3C(v14, v15, v16);
    sub_10024F100();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2048;
    sub_1000D5AE4();

    sub_10024F100();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Cancelled subscription renewal of %s for %s (transactionID: %lu)", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1000A8ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[24] = a5;
  v6[25] = v5;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  uint64_t v7 = sub_10024E030();
  v6[26] = v7;
  v6[27] = *(void *)(v7 - 8);
  v6[28] = swift_task_alloc();
  sub_100019524((uint64_t *)&unk_10030FD70);
  v6[29] = swift_task_alloc();
  return _swift_task_switch(sub_1000A8FC4, v5, 0);
}

uint64_t sub_1000A8FC4()
{
  uint64_t v121 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 20;
  id v3 = v2 - 5;
  uint64_t v117 = (uint64_t)(v2 - 6);
  uint64_t v4 = sub_1000A10B0();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v108 = (uint64_t)(v2 - 12);
    uint64_t v110 = v2 - 9;
    uint64_t v112 = v2 - 8;
    uint64_t v115 = (uint64_t)(v2 - 7);
    uint64_t v6 = v2 - 4;
    uint64_t v106 = (uint64_t)(v2 - 3);
    LOBYTE(v7) = 73;
    sub_1000D6528();
    sub_1000ACA20();
    switch(v8)
    {
      case 1:
        sub_1000ACA44();
        goto LABEL_4;
      case 3:
        swift_bridgeObjectRelease();
        goto LABEL_12;
      default:
LABEL_4:
        char v9 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {

          goto LABEL_6;
        }
LABEL_12:
        uint64_t v18 = sub_1000D939C(15);
        if (!v19) {
          goto LABEL_21;
        }
        uint64_t v7 = v18;
        uint64_t v20 = v19;
        uint64_t v102 = (uint64_t)v5;
        uint64_t v104 = (uint64_t)(v2 - 4);
        uint64_t v100 = (uint64_t)(v2 - 5);
        uint64_t v21 = v1[24];
        sub_100019524(&qword_1003090E8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100255FB0;
        *(void *)(inited + 32) = v7;
        *(void *)(inited + 40) = v20;
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v23 = (unint64_t)sub_1000FFCF4(inited, v21);
        swift_setDeallocating();
        sub_10020BB20();
        if (v23 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_10024F6F0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v6 = v2 - 4;
        if (v24)
        {
          sub_10014ED88(0, (v23 & 0xC000000000000001) == 0, v23);
          if ((v23 & 0xC000000000000001) != 0) {
            id v25 = (id)sub_10024F380();
          }
          else {
            id v25 = *(id *)(v23 + 32);
          }
          os_log_type_t v26 = v25;
          swift_bridgeObjectRelease();
          uint64_t v7 = sub_1000D5AE4();
          if (v7 != sub_1000D5AE4())
          {
            sub_10006FF20();
            uint64_t v48 = v26;
            unint64_t v49 = swift_bridgeObjectRetain();
            char v50 = sub_10009C864(v49, v48);
            swift_bridgeObjectRelease();
            if ((v50 & 1) == 0) {
              sub_1000A82A8(v48, v1[23], v1[24]);
            }
            goto LABEL_38;
          }

          id v3 = v2 - 5;
        }
        else
        {
          swift_bridgeObjectRelease();
          id v3 = v2 - 5;
        }
LABEL_21:
        *(double *)&uint64_t v27 = COERCE_DOUBLE(sub_1000D9478(4));
        if (v28)
        {
          if (qword_100308DE0 != -1) {
            swift_once();
          }
          uint64_t v33 = sub_10024E1F0();
          sub_10001B0E8(v33, (uint64_t)qword_10034C0E0);
          uint64_t v5 = v5;
          os_log_type_t v34 = sub_10024E1D0();
          os_log_type_t v35 = sub_10024EE10();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = *v2;
            uint64_t v37 = sub_1000AC834();
            v120[0] = sub_10003FD78();
            sub_1000ACCE8(3.9123e-34);
            *uint64_t v110 = v36;
            sub_10024F100();
            *(_WORD *)(v37 + 12) = 2082;
            uint64_t v38 = sub_1000D427C();
            *uint64_t v112 = sub_1000F3F3C(v38, v39, v120);
            sub_10024F100();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing expiration date in transaction %{public}lu for subscription %{public}s", (uint8_t *)v37, 0x16u);
            sub_1000AC870();
            sub_10003FBCC();
            sub_10003FBCC();

            break;
          }

          goto LABEL_69;
        }
        double v29 = *(double *)&v27;
        sub_10024DF80();
        double v31 = v30;
        if (sub_1000D7784()) {
          goto LABEL_23;
        }
        if (v31 <= v29)
        {
          if (qword_100308DE0 != -1) {
            swift_once();
          }
          uint64_t v51 = sub_10024E1F0();
          sub_10001B0E8(v51, (uint64_t)qword_10034C0E0);
          swift_bridgeObjectRetain_n();
          uint64_t v52 = sub_10024E1D0();
          os_log_type_t v53 = sub_10024EE10();
          BOOL v54 = sub_1000ACE24(v53);
          unint64_t v55 = v1[22];
          if (v54)
          {
            uint64_t v56 = v1[21];
            uint64_t v113 = v1[20];
            uint64_t v57 = sub_1000AC834();
            v120[0] = sub_10003FD78();
            *(_DWORD *)uint64_t v57 = 136315394;
            swift_bridgeObjectRetain();
            v1[13] = sub_1000F3F3C(v56, v55, v120);
            sub_10024F100();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v57 + 12) = 2048;
            v1[19] = v113;
            sub_10024F100();
            _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v7, "Will not renew %s transaction with id %lu as it is neither expired nor cancelled. Re-scheduling renewal task instead.", (uint8_t *)v57, 0x16u);
            sub_1000AC870();
            sub_10003FBCC();
            sub_10003FBCC();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_1000A82A8(v5, v1[23], v1[24]);
          goto LABEL_69;
        }
        if ((sub_1000D6C10() & 1) == 0)
        {
          char v58 = sub_1000D778C();
          char v59 = sub_1000D7794();
          uint64_t v60 = sub_1000D78F4();
          if (v61)
          {
            char v63 = 1;
          }
          else
          {
            uint64_t v62 = 3;
            if ((v58 & 1) == 0) {
              uint64_t v62 = 1;
            }
            if (v59) {
              v62 |= 4uLL;
            }
            v60 |= v62;
            char v63 = 0;
          }
          sub_1000D7920(v60, v63);
          sub_1000A1278(v5, 0);
          goto LABEL_59;
        }
        if (sub_10008BB04())
        {
          if (qword_100308DE0 != -1) {
            swift_once();
          }
          uint64_t v40 = sub_10024E1F0();
          sub_10001B0E8(v40, (uint64_t)qword_10034C0E0);
          swift_bridgeObjectRetain_n();
          uint64_t v41 = sub_10024E1D0();
          os_log_type_t v42 = sub_10024EE30();
          if (os_log_type_enabled(v41, v42))
          {
            uint64_t v43 = v1[20];
            uint64_t v44 = sub_1000AC834();
            v120[0] = sub_10003FD78();
            sub_1000ACCE8(3.8521e-34);
            v1[16] = v43;
            sub_10024F100();
            *(_WORD *)(v44 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v45 = sub_1000AD184();
            v1[17] = sub_1000F3F3C(v45, v46, v47);
            sub_10024F100();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "Transaction %lu for %s is entering billing retry", (uint8_t *)v44, 0x16u);
            sub_1000AC9B0();
            sub_10003FBCC();
            sub_10003FBCC();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_1000A17B8();
LABEL_59:
          int v32 = 0;
          goto LABEL_60;
        }
        uint64_t v104 = (uint64_t)v6;
        if (qword_100308CF8 != -1) {
          swift_once();
        }
        uint64_t v64 = v1[29];
        uint64_t v65 = v1[26];
        sub_100054BEC(v5);
        sub_1000ACD60(v64);
        sub_10024E010();
        sub_1000A58A0();
        unint64_t v67 = v66;
        sub_1000AC864();
        v68();
        sub_1000AC6D0(v64, (uint64_t *)&unk_10030FD70);
        if (v67)
        {
          uint64_t v69 = v1[24];
          uint64_t v70 = v1[23];
          id v71 = v67;
          sub_1000A82A8(v71, v70, v69);

LABEL_23:
          int v32 = 1;
LABEL_60:
          if ((sub_1000D5828() & 1) == 0)
          {
            char v72 = sub_1000D6E60();
            if (v72)
            {
              uint64_t v73 = v72[2];
              swift_bridgeObjectRelease();
              if (v73)
              {
                uint64_t v74 = variable initialization expression of ClientOverride.requestBundleVersion();
                sub_1000D5B48(v74);
              }
            }
            int v32 = 1;
          }
          if (qword_100308D48 != -1) {
            swift_once();
          }
          uint64_t v76 = v1[21];
          uint64_t v75 = v1[22];
          sub_100019524(&qword_1003090E8);
          uint64_t v77 = sub_1000AC8E4();
          int v78 = v77;
          *(_OWORD *)(v77 + 16) = xmmword_100255FB0;
          *(void *)(v77 + 32) = v76;
          *(void *)(v77 + 40) = v75;
          swift_bridgeObjectRetain();
          sub_10010C1E0(1, v78, 73, 0x27CD70, v79, v80, v81, v82, v98, v100, v102, v104, v106, v108, (uint64_t)v110, (uint64_t)v112, v115, v117, 1,
            2);
          swift_bridgeObjectRelease();
          if (v32)
          {
            uint64_t v84 = v1[21];
            uint64_t v83 = v1[22];
            sub_100142C1C(v84, v83);
            uint64_t v85 = sub_1000AC8E4();
            int v86 = v85;
            *(_OWORD *)(v85 + 16) = *(_OWORD *)v119;
            *(void *)(v85 + 32) = v84;
            *(void *)(v85 + 40) = v83;
            swift_bridgeObjectRetain();
            sub_10010C1E0(0, v86, 73, 0x27CD70, v87, v88, v89, v90, v99, v101, v103, v105, v107, v109, v111, v114, v116, v118, v119[0],
              v119[1]);
            swift_bridgeObjectRelease();
          }
          goto LABEL_69;
        }
        if (qword_100308DE0 != -1) {
          swift_once();
        }
        uint64_t v93 = sub_10024E1F0();
        sub_10001B0E8(v93, (uint64_t)qword_10034C0E0);
        uint64_t v48 = v5;
        uint64_t v5 = sub_10024E1D0();
        os_log_type_t v94 = sub_10024EE10();
        if (sub_1000ACE08(v94))
        {
          unsigned int v95 = (_DWORD *)sub_10003FD90();
          v120[0] = sub_10003FD78();
          *unsigned int v95 = 136446210;
          uint64_t v96 = sub_1000D427C();
          *id v3 = sub_1000F3F3C(v96, v97, v120);
          sub_10024F100();

          swift_bridgeObjectRelease();
          sub_1000ACC04((void *)&_mh_execute_header, v5, (os_log_type_t)v65, "No renewal transaction created for %{public}s");
          sub_1000AC870();
          sub_10003FBCC();
          sub_10003FBCC();
LABEL_38:

LABEL_69:
          break;
        }

        break;
    }
  }
  else
  {
LABEL_6:
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10024E1F0();
    sub_10001B0E8(v10, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_10024E1D0();
    os_log_type_t v12 = sub_10024EE10();
    BOOL v13 = os_log_type_enabled(v11, v12);
    unint64_t v14 = v1[22];
    if (v13)
    {
      uint64_t v16 = v1[20];
      uint64_t v15 = v1[21];
      uint64_t v17 = sub_1000AC834();
      v120[0] = sub_10003FD78();
      sub_1000ACCE8(3.9123e-34);
      v1[14] = v16;
      sub_10024F100();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      v1[18] = sub_1000F3F3C(v15, v14, v120);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "No auto-renewable transaction found with id %{public}lu for %{public}s, cannot process renewal.", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v91 = (uint64_t (*)(void))v1[1];
  return v91();
}

uint64_t type metadata accessor for SubscriptionRenewalCoordinator()
{
  return self;
}

uint64_t sub_1000A9C6C(uint64_t a1, Swift::UInt a2)
{
  sub_10024FC20(a2);
  swift_bridgeObjectRetain();
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A9CD0(Swift::UInt a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1000A9D4C()
{
  return sub_1000A9CD0(*v0);
}

uint64_t sub_1000A9D58(uint64_t a1)
{
  return sub_1000A9C6C(a1, *v1);
}

Swift::Int sub_1000A9D64()
{
  Swift::UInt v1 = *v0;
  sub_10024FC00();
  sub_10024FC20(v1);
  swift_bridgeObjectRetain();
  sub_10024E780();
  swift_bridgeObjectRelease();
  return sub_10024FC70();
}

uint64_t sub_1000A9DD4(uint64_t *a1, uint64_t *a2)
{
  return sub_1000A8AB8(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void *sub_1000A9DF0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v62 = a2;
  uint64_t v63 = *v4;
  uint64_t v64 = a3;
  uint64_t v6 = sub_100019524(&qword_10030A768);
  __chkstk_darwin(v6 - 8, v7);
  char v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  BOOL v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = sub_10024E030();
  uint64_t v60 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17, v18);
  char v59 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v24 = (char *)&v59 - v23;
  __chkstk_darwin(v22, v25);
  uint64_t v27 = (char *)&v59 - v26;
  *((unsigned char *)v4
  + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_isComplete) = 0;
  *(void *)((char *)v4
            + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_task) = 0;
  id v28 = a1;
  uint64_t v29 = sub_1000D5AE4();
  uint64_t v30 = sub_1000D428C();
  uint64_t v32 = v31;

  void v4[2] = v29;
  v4[3] = v30;
  v4[4] = v32;
  sub_1000D9478(4);
  if (v33)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_10024E1F0();
    sub_10001B0E8(v35, (uint64_t)qword_10034C0E0);
    uint64_t v36 = (char *)v28;
    uint64_t v37 = sub_10024E1D0();
    os_log_type_t v38 = sub_10024EE20();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136446722;
      uint64_t v40 = sub_1000D427C();
      uint64_t v65 = sub_1000F3F3C(v40, v41, &v66);
      sub_10024F100();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2050;
      uint64_t v42 = *(void *)&v36[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___id];

      uint64_t v65 = v42;
      sub_10024F100();

      *(_WORD *)(v39 + 22) = 2082;
      uint64_t v43 = sub_1000D428C();
      uint64_t v65 = sub_1000F3F3C(v43, v44, &v66);
      sub_10024F100();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "No expiration date for %{public}s transaction %{public}lu in %{public}s. Cannot schedule renewal!", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
    }
    else
    {

      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    sub_10024DF60();
    sub_1000D7974((uint64_t)v16);
    if (sub_10001FA0C((uint64_t)v16, 1, v17) == 1)
    {
      sub_1000AC6D0((uint64_t)v16, (uint64_t *)&unk_10030FD70);
      uint64_t v34 = v60;
    }
    else
    {
      uint64_t v34 = v60;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
      v45(v24, v16, v17);
      char v46 = sub_10024DFD0();
      int v47 = *(void (**)(char *, uint64_t))(v34 + 8);
      if (v46)
      {
        v47(v27, v17);
        v45(v27, v24, v17);
      }
      else
      {
        v47(v24, v17);
      }
    }
    sub_1000D79EC((uint64_t)v13);
    int v48 = sub_10001FA0C((uint64_t)v13, 1, v17);
    unint64_t v49 = v59;
    if (v48 == 1)
    {
      sub_1000AC6D0((uint64_t)v13, (uint64_t *)&unk_10030FD70);
    }
    else
    {
      char v50 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      v50(v59, v13, v17);
      char v51 = sub_10024DFD0();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v34 + 8);
      if (v51)
      {
        v52(v27, v17);
        v50(v27, v49, v17);
      }
      else
      {
        v52(v49, v17);
      }
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))((uint64_t)v4+ OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_expirationDate, v27, v17);
    uint64_t v53 = (uint64_t)v61;
    sub_10024EBB0();
    uint64_t v54 = sub_10024EBD0();
    sub_1000195B4(v53, 0, 1, v54);
    unint64_t v55 = (void *)swift_allocObject();
    v55[2] = 0;
    v55[3] = 0;
    uint64_t v56 = v62;
    v55[4] = v4;
    v55[5] = v56;
    v55[6] = v64;
    swift_retain();
    uint64_t v57 = sub_1000AAB88(v53, (uint64_t)&unk_10030E918, (uint64_t)v55);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v17);
    *(void *)((char *)v4
              + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_task) = v57;
    swift_release();
  }
  return v4;
}

uint64_t sub_1000AA4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_10024F590();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v8 = sub_10024F570();
  v6[11] = v8;
  v6[12] = *(void *)(v8 - 8);
  v6[13] = swift_task_alloc();
  return _swift_task_switch(sub_1000AA608, 0, 0);
}

uint64_t sub_1000AA608()
{
  sub_100043A98();
  sub_1000A8AF4();
  *(void *)(v0 + 16) = sub_10024FD70();
  *(void *)(v0 + 24) = v1;
  *(unsigned char *)(v0 + 32) = 0;
  sub_10024F580();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  uint64_t v3 = sub_1000AC374(&qword_10030E920, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  *uint64_t v2 = v0;
  v2[1] = sub_1000AA70C;
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 64);
  return static Task<>.sleep<A>(until:tolerance:clock:)(v4, v0 + 16, v5, v6, v3);
}

uint64_t sub_1000AA70C()
{
  sub_100043A74();
  uint64_t v2 = *v1;
  sub_1000AC9CC();
  *uint64_t v3 = v2;
  *(void *)(v4 + 120) = v0;
  swift_task_dealloc();
  sub_1000AC864();
  v5();
  uint64_t v6 = sub_1000ACF34();
  v7(v6);
  if (v0) {
    uint64_t v8 = sub_1000AAB14;
  }
  else {
    uint64_t v8 = sub_1000AA8AC;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1000AA8AC()
{
  sub_100043A98();
  if (sub_10024EBF0())
  {
    sub_1000ACE68();
    *(unsigned char *)(v1
             + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_isComplete) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))(v0[6] + *(int *)v0[6]);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1000AA9D0;
    return v5();
  }
}

uint64_t sub_1000AA9D0()
{
  sub_100043A98();
  sub_100043A74();
  uint64_t v1 = *v0;
  sub_1000AC9CC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000AAA9C, 0, 0);
}

uint64_t sub_1000AAA9C()
{
  sub_100043A98();
  sub_1000ACE68();
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_isComplete) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000AAB14()
{
  sub_100043A98();
  sub_1000ACE68();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_isComplete) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100043B28();
  return v1();
}

uint64_t sub_1000AAB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10024EBD0();
  if (sub_10001FA0C(a1, 1, v5) == 1)
  {
    sub_1000AC6D0(a1, &qword_10030A768);
  }
  else
  {
    sub_10024EBC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10024EB80();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1000AACD0()
{
  if (*(void *)(v0
                 + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_task))
  {
    swift_retain();
    sub_100019524(&qword_100309768);
    sub_10024EBE0();
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_expirationDate;
  uint64_t v2 = sub_10024E030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1000AAD98()
{
  uint64_t v0 = sub_1000AACD0();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000AADEC()
{
  return type metadata accessor for SubscriptionRenewalCoordinator.RenewalTask();
}

uint64_t type metadata accessor for SubscriptionRenewalCoordinator.RenewalTask()
{
  uint64_t result = qword_10030E840;
  if (!qword_10030E840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AAE3C()
{
  uint64_t result = sub_10024E030();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SubscriptionRenewalCoordinator.RenewalTask.ID(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SubscriptionRenewalCoordinator.RenewalTask.ID()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SubscriptionRenewalCoordinator.RenewalTask.ID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubscriptionRenewalCoordinator.RenewalTask.ID(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionRenewalCoordinator.RenewalTask.ID(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionRenewalCoordinator.RenewalTask.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionRenewalCoordinator.RenewalTask.ID()
{
  return &type metadata for SubscriptionRenewalCoordinator.RenewalTask.ID;
}

unint64_t sub_1000AB048()
{
  unint64_t result = qword_10030E8E0;
  if (!qword_10030E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030E8E0);
  }
  return result;
}

unint64_t sub_1000AB098()
{
  unint64_t result = qword_10030E8E8;
  if (!qword_10030E8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10030E8E8);
  }
  return result;
}

uint64_t sub_1000AB0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(*(void *)v1 + 16);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

id sub_1000AB0FC()
{
  NSString v1 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  NSString v3 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  sub_100019524(&qword_10030CA00);
  Class isa = sub_10024EA80().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v0 initWithBundleID:v1 bundleVersion:v2 deviceID:v3 transactions:isa];

  return v5;
}

uint64_t sub_1000AB1E4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1000AB214(uint64_t *a1, void *a2)
{
  id v5 = a2;
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10009CC0C(v6, v5);
  if (v2)
  {

    swift_bridgeObjectRelease();
    return v3;
  }
  uint64_t v3 = v7;
  char v9 = v8;
  uint64_t v39 = a1;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_69;
    }
    if ((unint64_t)*v39 >> 62)
    {
LABEL_70:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v10 != v11)
    {
      uint64_t v12 = v3 + 5;
      BOOL v13 = v39;
      id v38 = v5;
      while (1)
      {
        unint64_t v14 = v12 - 4;
        uint64_t v15 = *v13;
        unint64_t v41 = v3;
        unint64_t v40 = v12 - 4;
        if ((*v13 & 0xC000000000000001) != 0)
        {
          uint64_t v34 = (void *)sub_10024F380();
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          if (v14 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_60;
          }
          uint64_t v34 = *(void **)(v15 + 8 * v12);
          swift_retain();
        }
        uint64_t v17 = v34[2];
        uint64_t v16 = v34[3];
        uint64_t v18 = v34[4];
        id v19 = v5;
        uint64_t v20 = sub_1000D5AE4();
        uint64_t v21 = sub_1000D428C();
        uint64_t v23 = v22;
        uint64_t v37 = v19;

        if (v17 == v20)
        {
          if (v16 == v21 && v18 == v23)
          {
            swift_release();
            swift_bridgeObjectRelease();
            id v5 = v38;
            BOOL v13 = v39;
LABEL_46:
            uint64_t v3 = v41;
            uint64_t v10 = v12 - 4;
            goto LABEL_47;
          }
          char v25 = sub_10024FA60();
          swift_release();
          swift_bridgeObjectRelease();
          id v5 = v38;
          BOOL v13 = v39;
          if (v25) {
            goto LABEL_46;
          }
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          id v5 = v38;
          BOOL v13 = v39;
        }
        uint64_t v3 = v41;
        uint64_t v10 = v12 - 4;
        if (v40 != v41)
        {
          uint64_t v26 = *v13;
          if ((*v13 & 0xC000000000000001) != 0)
          {
            uint64_t v27 = sub_10024F380();
            uint64_t v26 = *v13;
          }
          else
          {
            if ((v41 & 0x8000000000000000) != 0) {
              goto LABEL_63;
            }
            if (v41 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_64;
            }
            uint64_t v27 = *(void *)(v26 + 8 * v41 + 32);
            swift_retain();
          }
          if ((v26 & 0xC000000000000001) != 0)
          {
            uint64_t v28 = sub_10024F380();
            uint64_t v26 = *v13;
          }
          else
          {
            if ((v40 & 0x8000000000000000) != 0) {
              goto LABEL_65;
            }
            if (v40 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_66;
            }
            uint64_t v28 = *(void *)(v26 + 8 * v12);
            swift_retain();
          }
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *BOOL v13 = v26;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v26 < 0 || (v26 & 0x4000000000000000) != 0)
          {
            uint64_t v26 = sub_1001A8C3C(v26);
            *BOOL v13 = v26;
          }
          *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 8 * v41 + 0x20) = v28;
          swift_release();
          sub_10024EAC0();
          uint64_t v30 = *v13;
          int v31 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *BOOL v13 = v30;
          if (!v31 || v30 < 0 || (v30 & 0x4000000000000000) != 0)
          {
            uint64_t v30 = sub_1001A8C3C(v30);
            *BOOL v13 = v30;
          }
          if ((v40 & 0x8000000000000000) != 0) {
            goto LABEL_67;
          }
          if (v40 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_68;
          }
          *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v27;
          swift_release();
          sub_10024EAC0();
        }
        uint64_t v3 = v41 + 1;
        if (__OFADD__(v41, 1)) {
          goto LABEL_62;
        }
LABEL_47:
        if (__OFADD__(v10++, 1)) {
          goto LABEL_61;
        }
        if ((unint64_t)*v13 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_10024F6F0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v12;
        if (v10 == v33)
        {

          return v3;
        }
      }
    }
LABEL_57:

    return v3;
  }
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v3 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_57;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_10024F6F0();

  swift_bridgeObjectRelease();
  return v36;
}

unint64_t sub_1000AB620(uint64_t *a1)
{
  unint64_t v3 = swift_bridgeObjectRetain();
  unint64_t v4 = sub_10009CF10(v3);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (!v1)
  {
    if (v6)
    {
      unint64_t v19 = *a1;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v4 = sub_10024F6F0();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_56;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_57:
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_10024F6F0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v7 != v8)
      {
        unint64_t v9 = v4 + 5;
        do
        {
          unint64_t v10 = v9 - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v11 = sub_10024F380();
          }
          else
          {
            if ((v10 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
            if (v10 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_47;
            }
            uint64_t v11 = swift_retain();
          }
          char v12 = *(unsigned char *)(v11
                         + OBJC_IVAR____TtCC25ASOctaneSupportXPCServiceP33_4168D9B03AF8124BE3111952AAE62D6930SubscriptionRenewalCoordinator11RenewalTask_isComplete);
          swift_release();
          if ((v12 & 1) == 0)
          {
            if (v10 != v4)
            {
              uint64_t v7 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                uint64_t v13 = sub_10024F380();
                uint64_t v7 = *a1;
              }
              else
              {
                if ((v4 & 0x8000000000000000) != 0) {
                  goto LABEL_50;
                }
                if (v4 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_51;
                }
                uint64_t v13 = *(void *)(v7 + 8 * v4 + 32);
                swift_retain();
              }
              if ((v7 & 0xC000000000000001) != 0)
              {
                uint64_t v14 = sub_10024F380();
                uint64_t v7 = *a1;
              }
              else
              {
                if ((v10 & 0x8000000000000000) != 0) {
                  goto LABEL_52;
                }
                if (v10 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_53;
                }
                uint64_t v14 = *(void *)(v7 + 8 * v9);
                swift_retain();
              }
              int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v7;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v7 < 0 || (v7 & 0x4000000000000000) != 0)
              {
                uint64_t v7 = sub_1001A8C3C(v7);
                *a1 = v7;
              }
              *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v14;
              swift_release();
              sub_10024EAC0();
              uint64_t v7 = *a1;
              int v16 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v7;
              if (!v16 || v7 < 0 || (v7 & 0x4000000000000000) != 0)
              {
                uint64_t v7 = sub_1001A8C3C(v7);
                *a1 = v7;
              }
              if ((v10 & 0x8000000000000000) != 0) {
                goto LABEL_54;
              }
              if (v10 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_55;
              }
              *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 8 * v9) = v13;
              swift_release();
              sub_10024EAC0();
            }
            if (__OFADD__(v4++, 1)) {
              goto LABEL_49;
            }
          }
          uint64_t v7 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_48;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v18 = sub_10024F6F0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v18 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v9;
        }
        while (v7 != v18);
      }
    }
  }
  return v4;
}

unint64_t sub_1000AB920(uint64_t *a1, void *a2)
{
  swift_retain();
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10009CDC4(v6, a2);
  if (!v2)
  {
    unint64_t v3 = v7;
    char v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      unint64_t v23 = *a1;
      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v3 = sub_10024F6F0();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      unint64_t v3 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      uint64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_68;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_69:
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_10024F6F0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        unint64_t v12 = v3 + 5;
        while (1)
        {
          unint64_t v13 = v12 - 4;
          uint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = (void *)sub_10024F380();
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
            if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            uint64_t v15 = *(void **)(v14 + 8 * v12);
            swift_retain();
          }
          if (v15[2] != a2[2]) {
            break;
          }
          if (v15[3] == a2[3] && v15[4] == a2[4])
          {
            swift_release();
            goto LABEL_45;
          }
          uint64_t v10 = sub_10024FA60();
          swift_release();
          if ((v10 & 1) == 0) {
            goto LABEL_21;
          }
LABEL_45:
          uint64_t v10 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_60;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_10024F6F0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v22 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
          if (v10 == v22) {
            goto LABEL_56;
          }
        }
        swift_release();
LABEL_21:
        if (v13 != v3)
        {
          uint64_t v10 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v17 = sub_10024F380();
            uint64_t v10 = *a1;
          }
          else
          {
            if ((v3 & 0x8000000000000000) != 0) {
              goto LABEL_62;
            }
            if (v3 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_63;
            }
            uint64_t v17 = *(void *)(v10 + 8 * v3 + 32);
            swift_retain();
          }
          if ((v10 & 0xC000000000000001) != 0)
          {
            uint64_t v18 = sub_10024F380();
            uint64_t v10 = *a1;
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0) {
              goto LABEL_64;
            }
            if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_65;
            }
            uint64_t v18 = *(void *)(v10 + 8 * v12);
            swift_retain();
          }
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v10;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
          {
            uint64_t v10 = sub_1001A8C3C(v10);
            *a1 = v10;
          }
          *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v18;
          swift_release();
          sub_10024EAC0();
          uint64_t v10 = *a1;
          int v20 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v10;
          if (!v20 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
          {
            uint64_t v10 = sub_1001A8C3C(v10);
            *a1 = v10;
          }
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_66;
          }
          if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_67;
          }
          *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v17;
          swift_release();
          sub_10024EAC0();
        }
        if (__OFADD__(v3++, 1)) {
          goto LABEL_61;
        }
        goto LABEL_45;
      }
    }
LABEL_56:
    swift_release();
    return v3;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1000ABC9C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000ABCE4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  char v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *char v8 = v2;
  v8[1] = sub_1000ABDA4;
  return sub_1000A80E4(a1, v4, v5, v7, v6);
}

uint64_t sub_1000ABDA4()
{
  sub_100043A98();
  sub_100043A74();
  uint64_t v1 = *v0;
  sub_1000AC9CC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100043B28();
  return v3();
}

uint64_t sub_1000ABE64()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000ABE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  NSString v7 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v8 = [a5 URLForResource:v6 withExtension:v7];

  return v8;
}

uint64_t sub_1000ABF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12 = *a5;
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *unint64_t v13 = v6;
  v13[1] = sub_1000AC744;
  return sub_1000A88C8(a1, a2, a3, a4, v12, a6);
}

uint64_t sub_1000ABFFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000AC04C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000AC744;
  sub_1000ACDE4();
  return v2();
}

uint64_t sub_1000AC114()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000AC15C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000ABDA4;
  sub_1000ACDE4();
  return sub_1000AA4E8(v2, v3, v4, v5, v6, v7);
}

unint64_t sub_1000AC21C()
{
  unint64_t result = qword_100319610;
  if (!qword_100319610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319610);
  }
  return result;
}

uint64_t sub_1000AC270(void *a1)
{
  return sub_1000A7498(a1, *(void ***)(v1 + 16)) & 1;
}

uint64_t sub_1000AC290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result = a2;
  if (a5 - 1 < 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (!a5 || a5 == 4)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000AC2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result = a2;
  if (a5 - 1 < 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a5 || a5 == 4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000AC368(void *a1)
{
  return sub_1000A5724(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000AC374(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000AC3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AC424(uint64_t a1)
{
  return sub_1000AC5C0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1000A4C20);
}

unint64_t sub_1000AC43C(void *a1)
{
  return sub_1000A4C9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1000AC44C(void *a1)
{
  sub_1000A4748(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1000AC460(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_100025FBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_1000AC4BC(void *a1)
{
  sub_1000A441C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

unint64_t sub_1000AC4C8()
{
  unint64_t result = qword_1003090E0;
  if (!qword_1003090E0)
  {
    sub_10001B028(&qword_1003090D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003090E0);
  }
  return result;
}

uint64_t sub_1000AC51C(void *a1)
{
  return sub_1000A3A3C(a1, *(unint64_t **)(v1 + 16));
}

void sub_1000AC528(void *a1)
{
  sub_1000A3648(a1, *(void ***)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1000AC538(void *a1)
{
  sub_1000A2F30(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char **)(v1 + 40));
}

uint64_t sub_1000AC544(void *a1)
{
  return sub_1000A157C(a1, *(uint64_t **)(v1 + 16), *(unsigned char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 64), *(double *)(v1 + 56));
}

BOOL sub_1000AC55C(void *a1)
{
  return sub_1000A147C(a1, *(unsigned char **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000AC564(void *a1)
{
  return sub_1000A1210(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000AC570(void *a1)
{
  return sub_1000A111C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000AC57C(void *a1)
{
  return sub_1000A1058(a1, *(unint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000AC584(void *a1)
{
  return sub_1000A0F98(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000AC590(void *a1)
{
  return sub_1000A0B84(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000AC59C(void *a1)
{
  return sub_1000A01B8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000AC5A8(uint64_t a1)
{
  return sub_1000AC5C0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1000A0128);
}

uint64_t sub_1000AC5C0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void sub_1000AC5D8(void *a1)
{
  sub_1000A0098(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1000AC5E4(void *a1)
{
  sub_10009FE8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void ***)(v1 + 48));
}

uint64_t sub_1000AC5F4()
{
  return sub_1000D5964() & 1;
}

void sub_1000AC62C(void *a1)
{
  sub_10009FC0C(a1, *(unsigned char **)(v1 + 16));
}

unint64_t sub_1000AC638(void *a1)
{
  return sub_10009FA68(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

BOOL sub_1000AC640(void *a1)
{
  return sub_10009F66C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(uint64_t **)(v1 + 32));
}

void sub_1000AC64C(void *a1)
{
  sub_10009F19C(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

void sub_1000AC65C(void *a1)
{
  sub_10009DCEC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void ***)(v1 + 72));
}

uint64_t sub_1000AC690(void *a1)
{
  return sub_10009DBE4(a1, *(void **)(v1 + 16));
}

void sub_1000AC69C(void *a1)
{
  sub_10009D7DC(a1, *(BOOL **)(v1 + 16));
}

uint64_t sub_1000AC6A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_10003F7F4(a1, a2);
  }
  return a1;
}

uint64_t sub_1000AC6BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100047398(a1, a2);
  }
  return a1;
}

uint64_t sub_1000AC6D0(uint64_t a1, uint64_t *a2)
{
  sub_100019524(a2);
  sub_100025FBC();
  sub_10003FDC8();
  v3();
  return a1;
}

uint64_t sub_1000AC720()
{
  return sub_1000AC5F4() & 1;
}

uint64_t sub_1000AC75C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 216) = a1;
  return v1;
}

uint64_t sub_1000AC7CC()
{
  return sub_10024F100();
}

uint64_t sub_1000AC7F8()
{
  *(_WORD *)(v0 + 12) = 2080;
  return swift_bridgeObjectRetain();
}

BOOL sub_1000AC818(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1000AC834()
{
  return swift_slowAlloc();
}

void *sub_1000AC84C()
{
  uint64_t v2 = *(void *)(v0 + 80);
  return sub_10001C2A8((void *)(v0 + 56), v2);
}

uint64_t sub_1000AC870()
{
  return swift_arrayDestroy();
}

uint64_t sub_1000AC88C()
{
  return sub_10024F100();
}

uint64_t sub_1000AC8A8(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_1000F3F3C(v2, v1, (uint64_t *)va);
}

void sub_1000AC8C4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1000AC8E4()
{
  return swift_allocObject();
}

uint64_t sub_1000AC8FC()
{
  return sub_10024F100();
}

uint64_t sub_1000AC914()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000AC92C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1000AC944(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1000F3F3C(v4, v3, a3);
}

uint64_t sub_1000AC95C(float a1)
{
  *unint64_t v1 = a1;
  return sub_1000D5AE4();
}

BOOL sub_1000AC978(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_1000AC994()
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1000AC9B0()
{
  return swift_arrayDestroy();
}

uint64_t sub_1000AC9DC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 280) = a1;
  return v2;
}

void sub_1000AC9F4()
{
  v3._uint64_t countAndFlagsBits = v0;
  v3._object = v1;
  sub_10024E800(v3);
}

uint64_t sub_1000ACA20()
{
  return 0x62616D75736E6F43;
}

uint64_t sub_1000ACA44()
{
  return 0x75736E6F436E6F4ELL;
}

uint64_t sub_1000ACA74()
{
  return sub_10024F100();
}

uint64_t *sub_1000ACA90()
{
  *(void *)(v1 - 128) = v0;
  return sub_1000709B8((uint64_t *)(v1 - 152));
}

void sub_1000ACAB0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_1000ACAE8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000ACB1C()
{
  return sub_10020554C(v2 - 152, v0, v1);
}

uint64_t sub_1000ACB3C(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return v1 - 152;
}

uint64_t sub_1000ACB50()
{
  uint64_t v2 = *(void *)(v0 - 336);
  unint64_t v3 = *(void *)(v0 - 328);
  return sub_10003F7F4(v2, v3);
}

uint64_t sub_1000ACB70()
{
  return swift_slowAlloc();
}

uint64_t sub_1000ACBA0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000ACBC8(uint64_t a1, unint64_t a2)
{
  return sub_1000F3F3C(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_1000ACBEC(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1000D428C();
}

void sub_1000ACC04(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void sub_1000ACC1C()
{
  v1._uint64_t countAndFlagsBits = 58;
  v1._object = (void *)0xE100000000000000;
  sub_10024E800(v1);
}

uint64_t sub_1000ACC34()
{
  return v0;
}

_WORD *sub_1000ACC6C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t sub_1000ACC84(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return 0;
}

uint64_t sub_1000ACC9C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return 1;
}

uint64_t sub_1000ACCB4()
{
  return sub_10024F100();
}

void sub_1000ACCE8(float a1)
{
  *Swift::String v1 = a1;
}

uint64_t sub_1000ACCF8()
{
  return sub_1000D939C(15);
}

uint64_t sub_1000ACD3C()
{
  return sub_10020554C(v2 - 152, v0, v1);
}

uint64_t sub_1000ACD60(uint64_t a1)
{
  return sub_1000195B4(a1, 1, 1, v1);
}

uint64_t sub_1000ACD7C(uint64_t a1)
{
  return sub_1000195B4(a1, 1, 1, v1);
}

void sub_1000ACD98(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t sub_1000ACDC0()
{
  return v0 - 224;
}

uint64_t sub_1000ACDCC()
{
  return v0;
}

uint64_t sub_1000ACDFC()
{
  return v0;
}

BOOL sub_1000ACE08(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

BOOL sub_1000ACE24(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1000ACE40(uint64_t a1, uint64_t a2)
{
  sub_10001B0E8(a1, a2);
  return sub_10024E1D0();
}

uint64_t sub_1000ACE68()
{
  return *(void *)(v0 + 104);
}

uint64_t sub_1000ACE90(float a1)
{
  *uint64_t v1 = a1;
  return sub_1000D5AE4();
}

void sub_1000ACEC4()
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1000ACEE0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 272) = a1;
  *(void *)(v1 + 280) = v3;
  return v2;
}

uint64_t sub_1000ACEF8()
{
  sub_1000195B4(v0, 0, 1, v1);
  return sub_1000D6A1C(v0);
}

uint64_t sub_1000ACF34()
{
  return v0;
}

uint64_t sub_1000ACF50()
{
  return sub_1000A1278(v0, 1);
}

uint64_t sub_1000ACF6C()
{
  return v0 + 272;
}

uint64_t sub_1000ACF78()
{
  return sub_1002055E0(v0 + 272, 21);
}

uint64_t sub_1000ACF94@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 296) = v1;
  *(void *)(v2 + 272) = a1;
  return sub_1002055E0(v2 + 272, 34);
}

BOOL sub_1000ACFB8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1000ACFD4()
{
  return sub_10024F100();
}

BOOL sub_1000ACFF8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1000AD004(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, NSObject *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_10010C1E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1000AD030(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_1000AD050(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000AD070()
{
  return sub_10014ED88(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t sub_1000AD090()
{
  return sub_10024DF60();
}

uint64_t sub_1000AD0A8()
{
  return v0;
}

uint64_t sub_1000AD0B4()
{
  *(_WORD *)(v0 + 12) = 2080;
  return swift_bridgeObjectRetain();
}

void sub_1000AD0D4()
{
  *(_WORD *)(v0 + 22) = 2080;
}

uint64_t sub_1000AD0E8()
{
  return v0;
}

uint64_t sub_1000AD0FC()
{
  return v0;
}

uint64_t sub_1000AD11C()
{
  return v0 + 104;
}

uint64_t sub_1000AD128(uint64_t a1)
{
  return sub_1000195B4(v1, 1, 1, a1);
}

uint64_t sub_1000AD148()
{
  return sub_1000D9478(4);
}

void *sub_1000AD160(void *a1, uint64_t a2)
{
  return sub_10001C2A8(a1, a2);
}

uint64_t sub_1000AD178()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_1000AD184()
{
  return v0;
}

uint64_t sub_1000AD1A4()
{
  return sub_10024F100();
}

void sub_1000AD1E4()
{
  *(_WORD *)(v0 + 22) = 2048;
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.fireChannelRegistered()()
{
  sub_1000B25BC(v0, 1125, (uint64_t (*)(uint64_t))sub_1000B05F8, (void (*)(void))sub_1000B1044);
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.fireChannelActive()()
{
  sub_1000B25BC(v0, 1149, (uint64_t (*)(uint64_t))sub_1000B05F8, (void (*)(void))sub_1000B12CC);
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.fireChannelInactive()()
{
  sub_1000B25BC(v0, 1141, (uint64_t (*)(uint64_t))sub_1000B05F8, (void (*)(void))sub_1000B11F4);
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.fireChannelUnregistered()()
{
  sub_1000B25BC(v0, 1133, (uint64_t (*)(uint64_t))sub_1000B05F8, (void (*)(void))sub_1000B111C);
}

uint64_t ChannelPipeline.__allocating_init(channel:)()
{
  swift_getObjectType();
  uint64_t v0 = sub_1000B7D7C();
  return sub_1000B5558(v0, v1, v2, v3);
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.fireChannelWritabilityChanged()()
{
  sub_1000B25BC(v0, 1173, (uint64_t (*)(uint64_t))sub_1000B05F8, (void (*)(void))sub_1000B1558);
}

Swift::Void __swiftcall ChannelPipeline.fireChannelReadComplete()()
{
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.read()()
{
  sub_1000B25BC(v0, 1213, (uint64_t (*)(uint64_t))sub_1000B05CC, (void (*)(void))sub_1000B0854);
}

uint64_t ChannelPipeline.SynchronousOperations.fireErrorCaught(_:)()
{
  sub_1000B7924();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v1, v2, v3, 1189, v4, v0);
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    sub_1000B1750();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.fireChannelReadComplete()()
{
  sub_1000B25BC(v0, 1165, (uint64_t (*)(uint64_t))sub_1000B05F8, (void (*)(void))sub_1000B148C);
}

#error "1000AD4D0: call analysis failed (funcsize=48)"

uint64_t ChannelHandlerContext.fireChannelRead(_:)()
{
  if (*(void *)(v0 + 16))
  {
    sub_1000B7B94();
    sub_1000B13A4();
    return swift_release();
  }
  return result;
}

uint64_t ChannelHandlerContext.fireErrorCaught(_:)()
{
  if (*(void *)(v0 + 16))
  {
    sub_1000B7B94();
    sub_1000B1750();
    return swift_release();
  }
  return result;
}

uint64_t ChannelHandlerContext.fireUserInboundEventTriggered(_:)()
{
  if (*(void *)(v1 + 16))
  {
    sub_1000B7B94();
    sub_1000B1630(v0);
    return swift_release();
  }
  return result;
}

uint64_t ChannelHandlerContext.write(_:promise:)(uint64_t a1, uint64_t a2)
{
  return sub_1000AD678(a1, a2, sub_1000B0928);
}

Swift::Void __swiftcall ChannelHandlerContext.read()()
{
}

Swift::Void __swiftcall ChannelHandlerContext.fireChannelInactive()()
{
}

Swift::Void __swiftcall ChannelHandlerContext.fireChannelReadComplete()()
{
}

uint64_t ChannelHandlerContext.writeAndFlush(_:promise:)(uint64_t a1, uint64_t a2)
{
  return sub_1000AD678(a1, a2, sub_1000B0A54);
}

#error "1000AD6F4: call analysis failed (funcsize=46)"

uint64_t ChannelPipeline.addHandler(_:name:position:)()
{
  sub_10003C7F0();
  swift_getObjectType();
  sub_10003C780();
  return sub_1000B5894(v0, v1, v2, v3, v4, v5, v6, v7);
}

void ChannelPipeline.removeHandler(_:)()
{
}

void ChannelPipeline.removeHandler(name:)()
{
}

void sub_1000AD7E4()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v0 + 56);
  swift_getObjectType();
  sub_1000B7AA8();
  uint64_t v15 = EventLoop.makePromise<A>(of:file:line:)(v10, v11, v12, v13, v4, v14, v10, v9);
  swift_retain();
  v2(v8, v6, v15);
  swift_release();
  sub_10003C780();
}

void ChannelPipeline.context(handler:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for ChannelHandlerContext();
  sub_1000B7AA8();
  uint64_t v13 = EventLoop.makePromise<A>(of:file:line:)(v9, v10, v11, v12, 441, ObjectType, v9, v7);
  sub_1000B75F8();
  if (v14())
  {
    swift_getObjectType();
    sub_1000B57A0();
    sub_1000B7D44();
    sub_1000B4840(v15, v16, v17);
    sub_1000B7090(v6, v7, (uint64_t (*)(void))&_swift_release);
  }
  else
  {
    uint64_t v18 = (void *)sub_1000AC8E4();
    v18[2] = v13;
    v18[3] = v1;
    v18[4] = v5;
    v18[5] = v3;
    unint64_t v19 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v7 + 24);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    v19(sub_1000B5A6C, v18, ObjectType, v7);
    swift_release();
  }
  sub_10003C8C8();
}

void ChannelPipeline.context(name:)()
{
  sub_10003C984();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1000B7C08();
  type metadata accessor for ChannelHandlerContext();
  sub_1000B7AA8();
  uint64_t v11 = EventLoop.makePromise<A>(of:file:line:)(v7, v8, v9, v10, 470, v6, v7, v2);
  sub_1000B75F8();
  if (v12())
  {
    sub_1000B7B70((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftN"
                           "IO/ChannelPipeline.swift");
    uint64_t v13 = *(void *)(v0 + 16);
    if (v13)
    {
      uint64_t v14 = *(void **)(v13 + 16);
      swift_bridgeObjectRetain_n();
      swift_retain();
      if (v14)
      {
        while (1)
        {
          uint64_t v15 = *(void **)(v3 + 24);
          if (v15 && v14 == v15) {
            break;
          }
          BOOL v17 = v14[5] == v1 && v14[6] == v5;
          if (v17 || (sub_10024FA60() & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            char v21 = 0;
            goto LABEL_20;
          }
          uint64_t v18 = (void *)v14[2];
          swift_retain();
          swift_release();
          uint64_t v14 = v18;
          if (!v18) {
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_14:
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1000B5AB0();
    uint64_t v14 = (void *)sub_1000290D0();
    char v21 = 1;
    *uint64_t v22 = 1;
    swift_bridgeObjectRelease();
LABEL_20:
    sub_1000B4840((uint64_t)v14, v21, v11);
    sub_1000B7090((uint64_t)v14, v21, (uint64_t (*)(void))&_swift_release);
  }
  else
  {
    unint64_t v19 = (void *)sub_1000AC8E4();
    _OWORD v19[2] = v11;
    Swift::Int v19[3] = v0;
    v19[4] = v1;
    v19[5] = v5;
    uint64_t v20 = *(void (**)(void))(v2 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000B7A0C();
    v20();
    swift_release();
  }
  sub_10003C8C8();
}

void ChannelPipeline.context<A>(handlerType:)()
{
  sub_10003C984();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_1000B7CC8();
  type metadata accessor for ChannelHandlerContext();
  sub_1000B7AA8();
  uint64_t v12 = EventLoop.makePromise<A>(of:file:line:)(v8, v9, v10, v11, 503, v7, v8, v1);
  sub_1000B75F8();
  if (v13())
  {
    ChannelPipeline._contextSync<A>(handlerType:)();
    sub_1000B7D44();
    sub_1000B49AC(v14, v15, v16);
    sub_1000B7090(v0, v1, (uint64_t (*)(void))&_swift_release);
  }
  else
  {
    BOOL v17 = (void *)swift_allocObject();
    v17[2] = v6;
    v17[3] = v4;
    v17[4] = v12;
    v17[5] = v0;
    v17[6] = v2;
    uint64_t v18 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v1 + 24);
    swift_retain();
    swift_retain();
    v18(sub_1000B5B34, v17, v7, v1);
    swift_release();
  }
  sub_10003C8C8();
}

#error "1000ADE20: call analysis failed (funcsize=82)"

void ChannelPipeline.bind(to:promise:)()
{
}

void ChannelPipeline.connect(to:promise:)()
{
}

void sub_1000ADF44()
{
  sub_10003C984();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_1000B7CC8();
  sub_1000B758C();
  if (v10())
  {
    sub_1000B0370(v2, v8, v6);
    sub_10003C8C8();
  }
  else
  {
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v0;
    v11[3] = v2;
    void v11[4] = v8;
    uint64_t v12 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v1 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    v12(v4, v11, v9, v1);
    sub_10003C8C8();
    swift_release();
  }
}

void ChannelPipeline.write(_:promise:)(uint64_t a1, uint64_t a2)
{
}

Swift::Void __swiftcall ChannelPipeline.flush()()
{
}

void ChannelPipeline.writeAndFlush(_:promise:)(uint64_t a1, uint64_t a2)
{
}

void sub_1000AE0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(v5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B75F8();
  if (v12())
  {
    sub_1000B02B4(a1, a2, a3);
  }
  else
  {
    sub_100030CE8(a1, (uint64_t)v23);
    uint64_t v13 = swift_allocObject();
    sub_1000B7828(v13, v14, v15, v16, v17, v18, v19, v20, v23[0], v23[1], v24, v25, v26, v27);
    *(void *)(v21 + 88) = a2;
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24);
    swift_retain();
    swift_retain();
    v22(a5, v13, ObjectType, v10);
    swift_release();
  }
  sub_1000B7AD8();
}

Swift::Void __swiftcall ChannelPipeline.read()()
{
}

uint64_t ChannelPipeline.close(mode:promise:)()
{
  sub_10003C7F0();
  uint64_t v3 = v2;
  char v5 = v4;
  sub_1000B77A8();
  sub_1000B75E0();
  if (v6())
  {
    sub_10003C780();
    return sub_1000B0180(v7, v8);
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v1;
    *(unsigned char *)(v11 + 24) = v5;
    *(void *)(v11 + 32) = v3;
    uint64_t v12 = *(void (**)(void))(v0 + 24);
    swift_retain();
    swift_retain();
    sub_1000B78A0();
    v12();
    sub_10003C780();
    return swift_release();
  }
}

uint64_t ChannelPipeline.register(promise:)()
{
  sub_10003C7F0();
  uint64_t v3 = v2;
  sub_1000B77A8();
  sub_1000B75E0();
  if (v4())
  {
    sub_10003C780();
    return sub_1000B042C(v5);
  }
  else
  {
    uint64_t v8 = sub_10004F2C8();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v3;
    uint64_t v9 = *(void (**)(void))(v0 + 24);
    swift_retain();
    swift_retain();
    sub_1000B78B4();
    v9();
    sub_10003C780();
    return swift_release();
  }
}

void ChannelPipeline.triggerUserOutboundEvent(_:promise:)(uint64_t a1, uint64_t a2)
{
  sub_1000B77A8();
  sub_1000B75E0();
  if (v6())
  {
    sub_10002FD30();
    sub_1000B04F0(v7, v8);
  }
  else
  {
    sub_1000318C8(a1, (uint64_t)v12);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v3;
    sub_10003B908(v12, (_OWORD *)(v10 + 24));
    *(void *)(v10 + 56) = a2;
    uint64_t v11 = *(void (**)(void))(v2 + 24);
    swift_retain();
    swift_retain();
    sub_1000B78B4();
    v11();
    swift_release();
    sub_10002FD30();
  }
}

uint64_t sub_1000AE4C0()
{
  sub_1000B7868();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v2, v3, v4, 597, v5, v1);
  uint64_t v6 = *(void *)(v0 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 16);
    swift_retain();
    if (v7)
    {
      do
      {
        uint64_t v8 = swift_retain();
        sub_1000AF9B0(v8, 0);
        uint64_t result = swift_release();
      }
      while (*(void *)(v6 + 16));
      if (!*(void *)(v0 + 16))
      {
        __break(1u);
        return result;
      }
    }
    uint64_t v10 = swift_retain();
    sub_1000AF9B0(v10, 0);
    swift_release();
    swift_release();
  }
  *(void *)(v0 + 16) = 0;
  swift_release();
  *(void *)(v0 + 24) = 0;
  swift_release();
  *(unsigned char *)(v0 + 40) = 1;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  return swift_unknownObjectRelease();
}

uint64_t ChannelHandlerContext.channel.getter()
{
  return sub_1000AE91C();
}

uint64_t ChannelHandlerContext.eventLoop.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ChannelHandlerContext.leavePipeline(removalToken:)(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  sub_10002FD7C();
  EventLoop.preconditionInEventLoop(file:line:)(v4, v5, v6, 1858, ObjectType);
  swift_unknownObjectRelease();
  return sub_1000AF9B0(v1, a1);
}

uint64_t ChannelPipeline.SynchronousOperations.eventLoop.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ChannelPipeline.SynchronousOperations.addHandlers(_:position:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000B1F5C(a1, a2, a3);
}

Swift::Void __swiftcall ChannelHandlerContext.flush()()
{
}

void sub_1000AE6EC()
{
  if (*(void *)(v1 + 24))
  {
    uint64_t v2 = sub_1000B7B94();
    v0(v2);
    swift_release();
  }
}

Swift::Void __swiftcall ChannelHandlerContext.fireChannelWritabilityChanged()()
{
}

Swift::Void __swiftcall ChannelHandlerContext.fireChannelActive()()
{
}

#error "1000AE82C: call analysis failed (funcsize=94)"

uint64_t ChannelPipeline.eventLoop.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1000AE91C()
{
  sub_1000B7868();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 158, v6, v2);
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    type metadata accessor for DeadChannel();
    swift_allocObject();
    uint64_t v7 = sub_1000B7D38();
    sub_100097AD8(v7);
    sub_1000B7D38();
    swift_retain();
  }
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_1000AE9AC()
{
  sub_1000B7804();
  swift_getObjectType();
  uint64_t result = sub_1000B6354(v4, v3, v2, v1, v0, v5);
  if (v7)
  {
    sub_100019524(&qword_100309768);
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_1000AEA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1000AEB1C()
{
  sub_1000B7944();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 303, v6, v1);
  uint64_t v7 = *(void *)(v2 + 16);
  *(void *)(v0 + 24) = v2;
  swift_retain();
  swift_release();
  *(void *)(v0 + 16) = v7;
  swift_retain();
  swift_retain();
  swift_release();
  *(void *)(v2 + 16) = v0;
  swift_release();
  if (v7)
  {
    *(void *)(v7 + 24) = v0;
    swift_retain_n();
    swift_release();
    return swift_release();
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_1000AEC04()
{
  return sub_1000AEC28();
}

uint64_t sub_1000AEC28()
{
  sub_1000B7944();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 322, v6, v1);
  uint64_t v7 = *(void *)(v2 + 24);
  *(void *)(v0 + 24) = v7;
  swift_retain_n();
  swift_release();
  *(void *)(v0 + 16) = v2;
  swift_release();
  *(void *)(v2 + 24) = v0;
  swift_retain();
  swift_release();
  if (v7)
  {
    *(void *)(v7 + 16) = v0;
    swift_retain_n();
    swift_release();
    return swift_release();
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_1000AED0C()
{
  return sub_1000AEB1C();
}

uint64_t ChannelHandlerContext.handler.getter()
{
  uint64_t result = *(void *)(v0 + 56);
  if (result)
  {
    uint64_t v2 = *(void *)(v0 + 56);
LABEL_5:
    swift_unknownObjectRetain();
    return v2;
  }
  uint64_t v2 = *(void *)(v0 + 72);
  if (v2)
  {
    swift_unknownObjectRetain();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AED90(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  swift_retain();
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = *(void *)(v1 + 24);
      if (v5 && v4 == v5) {
        break;
      }
      uint64_t v7 = swift_retain();
      char v8 = a1(v7);
      swift_release();
      if ((v8 & 1) == 0)
      {
        uint64_t v9 = *(void *)(v4 + 16);
        swift_retain();
        swift_release();
        uint64_t v4 = v9;
        if (v9) {
          continue;
        }
      }
      return v4;
    }
    swift_release();
    return 0;
  }
  return v4;
}

uint64_t sub_1000AEE40()
{
  sub_1000B7868();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v2, v3, v4, 585, v5, v1);
  v10._uint64_t countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v10);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v0 + 32);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = 0x72656C646E6168;
    *(void *)(v0 + 32) = v9;
  }
  return result;
}

uint64_t sub_1000AEEF0()
{
  sub_1000B7620();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v2, v3, v4, 1826, v5, v1);
  ChannelHandlerContext.handler.getter();
  uint64_t v6 = sub_1000B7D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 8))(v0, v6, v1);
  return swift_unknownObjectRelease();
}

uint64_t ChannelPipeline.removeHandler(_:promise:)()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 56);
  swift_getObjectType();
  sub_1000B75E0();
  if (v8())
  {
    sub_10003C8C8();
    return sub_1000AF24C(v9, v10, v11, v12);
  }
  else
  {
    uint64_t v15 = (void *)sub_1000AC8E4();
    v15[2] = v0;
    v15[3] = v6;
    v15[4] = v4;
    v15[5] = v2;
    uint64_t v16 = *(void (**)(void))(v7 + 24);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1000B78B4();
    v16();
    sub_10003C8C8();
    return swift_release();
  }
}

#error "1000AF220: call analysis failed (funcsize=115)"

#error "1000AF2A8: call analysis failed (funcsize=40)"

#error "1000AF460: call analysis failed (funcsize=102)"

#error "1000AF4EC: call analysis failed (funcsize=77)"

uint64_t sub_1000AF5CC(uint64_t a1)
{
  swift_getObjectType();
  sub_1000B57A0();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_1000B4840(v2, v4 & 1, a1);
  return sub_1000B7090(v3, v5, (uint64_t (*)(void))&_swift_release);
}

BOOL sub_1000AF650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = ChannelHandlerContext.handler.getter();
  swift_unknownObjectRelease();
  return v3 == a2;
}

void ChannelPipeline._contextSync(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 56);
  swift_getObjectType();
  sub_1000B7B60();
  EventLoop.assertInEventLoop(file:line:)(v4, v5, v6, v7, v8, v3);
  if (!sub_1000AED90(a1))
  {
    sub_1000B5AB0();
    uint64_t v9 = sub_1000290D0();
    sub_1000B7C5C(v9, v10);
  }
}

uint64_t sub_1000AF720(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a2[7];
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 531, ObjectType, v8);
  uint64_t v10 = a2[2];
  if (v10)
  {
    uint64_t v11 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (v11)
    {
      while (1)
      {
        uint64_t v12 = (void *)a2[3];
        if (v12 && v11 == v12) {
          break;
        }
        BOOL v14 = v11[5] == a3 && v11[6] == a4;
        if (v14 || (sub_10024FA60() & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          char v16 = 0;
          goto LABEL_18;
        }
        uint64_t v15 = (void *)v11[2];
        swift_retain();
        swift_release();
        uint64_t v11 = v15;
        if (!v15) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1000B5AB0();
  uint64_t v11 = (void *)swift_allocError();
  char v16 = 1;
  *uint64_t v17 = 1;
  swift_bridgeObjectRelease();
LABEL_18:
  sub_1000B4840((uint64_t)v11, v16, a1);
  return sub_1000B7090((uint64_t)v11, v16, (uint64_t (*)(void))&_swift_release);
}

void ChannelPipeline._contextSync<A>(handlerType:)()
{
}

uint64_t sub_1000AF8D8(uint64_t a1)
{
  ChannelPipeline._contextSync<A>(handlerType:)();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_1000B49AC(v2, v4 & 1, a1);
  return sub_1000B7090(v3, v5, (uint64_t (*)(void))&_swift_release);
}

uint64_t sub_1000AF944()
{
  ChannelHandlerContext.handler.getter();
  sub_100019524(&qword_10030CA10);
  uint64_t v0 = swift_dynamicCast();
  if (v0) {
    swift_unknownObjectRelease();
  }
  return v0;
}

#error "1000AFA4C: call analysis failed (funcsize=61)"

uint64_t sub_1000AFAA8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1832, ObjectType, v1);
  if ((*(unsigned char *)(v0 + 88) & 1) == 0)
  {
    *(unsigned char *)(v0 + 88) = 1;
    ChannelHandlerContext.handler.getter();
    uint64_t v5 = v4;
    uint64_t v6 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v6, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ChannelPipeline.fireChannelRegistered()()
{
}

Swift::Void __swiftcall ChannelPipeline.fireChannelUnregistered()()
{
}

Swift::Void __swiftcall ChannelPipeline.fireChannelInactive()()
{
}

Swift::Void __swiftcall ChannelPipeline.fireChannelActive()()
{
}

uint64_t ChannelPipeline.fireChannelRead(_:)(uint64_t a1)
{
  sub_1000B77A8();
  sub_1000B75E0();
  if (v3())
  {
    uint64_t result = sub_1000B05F8();
    if (result)
    {
      sub_1000B13A4();
      return swift_release();
    }
  }
  else
  {
    sub_100030CE8(a1, (uint64_t)v14);
    uint64_t v5 = swift_allocObject();
    sub_1000B7828(v5, v6, v7, v8, v9, v10, v11, v12, v14[0], v14[1], v15, v16, v17, v18);
    uint64_t v13 = *(void (**)(void))(v1 + 24);
    swift_retain();
    sub_1000B78A0();
    v13();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000AFD68()
{
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    sub_1000B13A4();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall ChannelPipeline.fireChannelWritabilityChanged()()
{
}

void sub_1000AFE00()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B75F8();
  if (v9())
  {
    if (!v6())
    {
      sub_10003C780();
      return;
    }
    v4();
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24);
    swift_retain();
    v10(v2, v0, ObjectType, v7);
  }
  sub_10003C780();
  swift_release();
}

void ChannelPipeline.fireUserInboundEventTriggered(_:)(uint64_t a1)
{
  sub_1000B77A8();
  sub_1000B75E0();
  if ((v4() & 1) == 0)
  {
    sub_1000318C8(a1, (uint64_t)v8);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v2;
    sub_10003B908(v8, (_OWORD *)(v6 + 24));
    uint64_t v7 = *(void (**)(void))(v1 + 24);
    swift_retain();
    sub_1000B78A0();
    v7();
    swift_release();
    goto LABEL_7;
  }
  if (!sub_1000B05F8())
  {
LABEL_7:
    sub_10002FD30();
    return;
  }
  sub_1000B1630(a1);
  sub_10002FD30();
  swift_release();
}

uint64_t sub_1000AFFDC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    sub_1000B1630(a2);
    return swift_release();
  }
  return result;
}

void ChannelPipeline.fireErrorCaught(_:)()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B758C();
  if (v5())
  {
    if (!sub_1000B05F8())
    {
      sub_10003C780();
      return;
    }
    sub_1000B1750();
  }
  else
  {
    uint64_t v6 = sub_10004F2C8();
    *(void *)(v6 + 16) = v0;
    *(void *)(v6 + 24) = v2;
    uint64_t v7 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v3 + 24);
    swift_retain();
    swift_errorRetain();
    v7(sub_1000B634C, v6, ObjectType, v3);
  }
  sub_10003C780();
  swift_release();
}

uint64_t sub_1000B0128()
{
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    sub_1000B1750();
    return swift_release();
  }
  return result;
}

#error "1000B0218: call analysis failed (funcsize=53)"

uint64_t sub_1000B0258(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void))
{
  uint64_t result = a2();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

#error "1000B0330: call analysis failed (funcsize=46)"

#error "1000B03EC: call analysis failed (funcsize=46)"

#error "1000B04B8: call analysis failed (funcsize=48)"

#error "1000B058C: call analysis failed (funcsize=54)"

uint64_t sub_1000B05CC()
{
  if (*(void *)(v0 + 24)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_1000B05F8()
{
  if (*(void *)(v0 + 16)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_1000B0624(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1806, ObjectType, v5);
  if (v2[9])
  {
    uint64_t v8 = v2[10];
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 64);
    swift_unknownObjectRetain();
    v10(v2, a1, a2, v9, v8);
    return swift_unknownObjectRelease();
  }
  else if (v2[3])
  {
    swift_retain();
    sub_1000B0624(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0750()
{
  uint64_t v1 = *(void *)(v0[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1775, ObjectType, v1);
  if (v0[9])
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = swift_getObjectType();
    uint64_t v6 = *(void (**)(void *, uint64_t, uint64_t))(v4 + 48);
    swift_unknownObjectRetain();
    v6(v0, v5, v4);
    return swift_unknownObjectRelease();
  }
  else if (v0[3])
  {
    uint64_t v7 = swift_retain();
    sub_1000B0750(v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0854()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1796, v6, v1);
  if (*(void *)(v0 + 72))
  {
    swift_getObjectType();
    sub_1000B7CE8();
    uint64_t v8 = sub_1000B767C();
    v2(v8);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 24))
  {
    uint64_t v9 = swift_retain();
    sub_1000B0854(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0928(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1765, ObjectType, v5);
  if (v2[9])
  {
    uint64_t v8 = v2[10];
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40);
    swift_unknownObjectRetain();
    v10(v2, a1, a2, v9, v8);
    return swift_unknownObjectRelease();
  }
  else if (v2[3])
  {
    swift_retain();
    sub_1000B0928(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0A54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1785, ObjectType, v5);
  if (v2[9])
  {
    uint64_t v8 = v2[10];
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40);
    swift_unknownObjectRetain();
    v10(v2, a1, a2, v9, v8);
    (*(void (**)(void *, uint64_t, uint64_t))(v8 + 48))(v2, v9, v8);
    return swift_unknownObjectRelease();
  }
  else if (v2[3])
  {
    swift_retain();
    sub_1000B0A54(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1745, ObjectType, v5);
  if (v2[9])
  {
    uint64_t v8 = v2[10];
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24);
    swift_unknownObjectRetain();
    v10(v2, a1, a2, v9, v8);
    return swift_unknownObjectRelease();
  }
  else if (v2[3])
  {
    swift_retain();
    sub_1000B0BA0(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1755, ObjectType, v5);
  if (v2[9])
  {
    uint64_t v8 = v2[10];
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32);
    swift_unknownObjectRetain();
    v10(v2, a1, a2, v9, v8);
    return swift_unknownObjectRelease();
  }
  else if (v2[3])
  {
    swift_retain();
    sub_1000B0CCC(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0DF8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1735, ObjectType, v3);
  if (v1[9])
  {
    uint64_t v6 = v1[10];
    uint64_t v7 = swift_getObjectType();
    uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_unknownObjectRetain();
    v8(v1, a1, v7, v6);
    return swift_unknownObjectRelease();
  }
  else if (v1[3])
  {
    swift_retain();
    sub_1000B0DF8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0F18(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1816, ObjectType, v5);
  if (v2[9])
  {
    uint64_t v8 = v2[10];
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 72);
    swift_unknownObjectRetain();
    v10(v2, a1, a2, v9, v8);
    return swift_unknownObjectRelease();
  }
  else if (v2[3])
  {
    swift_retain();
    sub_1000B0F18(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B1044()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1645, v6, v1);
  if (*(void *)(v0 + 56))
  {
    sub_1000B79A8();
    sub_1000B7AF4();
    uint64_t v8 = *(void (**)(uint64_t))(v2 + 16);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B767C();
    v8(v9);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 16))
  {
    uint64_t v10 = swift_retain();
    sub_1000B1044(v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B111C()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1655, v6, v1);
  if (*(void *)(v0 + 56))
  {
    sub_1000B79A8();
    sub_1000B7AF4();
    uint64_t v8 = *(void (**)(uint64_t))(v2 + 24);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B767C();
    v8(v9);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 16))
  {
    uint64_t v10 = swift_retain();
    sub_1000B111C(v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B11F4()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1675, v6, v1);
  if (*(void *)(v0 + 56))
  {
    sub_1000B79A8();
    sub_1000B7AF4();
    uint64_t v8 = *(void (**)(uint64_t))(v2 + 40);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B767C();
    v8(v9);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 16))
  {
    uint64_t v10 = swift_retain();
    sub_1000B11F4(v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B12CC()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1665, v6, v1);
  if (*(void *)(v0 + 56))
  {
    sub_1000B79A8();
    sub_1000B7AF4();
    uint64_t v8 = *(void (**)(uint64_t))(v2 + 32);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B767C();
    v8(v9);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 16))
  {
    uint64_t v10 = swift_retain();
    sub_1000B12CC(v10);
    return swift_release();
  }
  return result;
}

void sub_1000B13A4()
{
  sub_10003C7F0();
  sub_1000B77E0();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1685, v6, v2);
  if (v1[7])
  {
    uint64_t v7 = v1[8];
    swift_getObjectType();
    uint64_t v8 = *(void (**)(uint64_t))(v7 + 48);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B7BAC();
    v8(v9);
    sub_10003C780();
    swift_unknownObjectRelease();
  }
  else if (v1[2])
  {
    swift_retain();
    sub_1000B13A4(v0);
    sub_10003C780();
    swift_release();
  }
  else
  {
    sub_10003C780();
  }
}

uint64_t sub_1000B148C()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1695, v6, v1);
  if (*(void *)(v0 + 56))
  {
    sub_1000B79A8();
    sub_1000B7CE8();
    uint64_t v8 = sub_1000B767C();
    v2(v8);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 16))
  {
    uint64_t v9 = swift_retain();
    sub_1000B148C(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B1558()
{
  sub_1000B7620();
  sub_10002FD7C();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1705, v6, v1);
  if (*(void *)(v0 + 56))
  {
    sub_1000B79A8();
    sub_1000B7AF4();
    uint64_t v8 = *(void (**)(uint64_t))(v2 + 64);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B767C();
    v8(v9);
    return swift_unknownObjectRelease();
  }
  else if (*(void *)(v0 + 16))
  {
    uint64_t v10 = swift_retain();
    sub_1000B1558(v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B1630(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1[4] + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1725, ObjectType, v3);
  if (v1[7])
  {
    uint64_t v6 = v1[8];
    uint64_t v7 = swift_getObjectType();
    uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 72);
    swift_unknownObjectRetain();
    v8(v1, a1, v7, v6);
    return swift_unknownObjectRelease();
  }
  else if (v1[2])
  {
    swift_retain();
    sub_1000B1630(a1);
    return swift_release();
  }
  return result;
}

void sub_1000B1750()
{
  sub_10003C7F0();
  sub_1000B77E0();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v3, v4, v5, 1715, v6, v2);
  if (v1[7])
  {
    uint64_t v7 = v1[8];
    swift_getObjectType();
    uint64_t v8 = *(void (**)(uint64_t))(v7 + 80);
    swift_unknownObjectRetain();
    uint64_t v9 = sub_1000B7BAC();
    v8(v9);
    sub_10003C780();
    swift_unknownObjectRelease();
  }
  else if (v1[2])
  {
    swift_retain();
    sub_1000B1750(v0);
    sub_10003C780();
    swift_release();
  }
  else
  {
    sub_10003C780();
  }
}

uint64_t ChannelPipeline.init(channel:)()
{
  swift_getObjectType();
  uint64_t v0 = sub_1000B7D7C();
  return sub_1000B55FC(v0, v1, v2, v3);
}

uint64_t ChannelPipeline.deinit()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ChannelPipeline.__deallocating_deinit()
{
  ChannelPipeline.deinit();
  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1000B18E8()
{
  return ChannelPipeline.register(promise:)();
}

void sub_1000B190C()
{
}

void sub_1000B1930()
{
}

void sub_1000B1954(uint64_t a1, uint64_t a2)
{
}

void sub_1000B1978()
{
}

void sub_1000B199C(uint64_t a1, uint64_t a2)
{
}

void sub_1000B19C0()
{
}

uint64_t sub_1000B19E4()
{
  return ChannelPipeline.close(mode:promise:)();
}

void sub_1000B1A08(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1000B1A2C()
{
  return swift_unknownObjectRetain();
}

void sub_1000B1A58()
{
}

void sub_1000B1A7C()
{
}

void sub_1000B1AA0()
{
}

void sub_1000B1AC4()
{
}

uint64_t sub_1000B1AE8(uint64_t a1)
{
  return ChannelPipeline.fireChannelRead(_:)(a1);
}

void sub_1000B1B0C()
{
}

void sub_1000B1B30()
{
}

void sub_1000B1B54()
{
}

void sub_1000B1B78(uint64_t a1)
{
}

uint64_t sub_1000B1B9C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!(a3 >> 62) || a3 >> 62 != 1 && a2 | a3 ^ 0x8000000000000000) {
    return sub_1000B1DB4(a1, a2, a3);
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000B1CA4(v5, a2, a3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000B1C30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = sub_1000B1B9C(a2, a3, a4);
  if (v5)
  {
    sub_100019524(&qword_100309768);
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_1000B1CA4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 56);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1013, ObjectType, v8);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return 0;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = a1 + 16 * v10 + 24; ; i -= 16)
  {
    swift_getObjectType();
    uint64_t v12 = swift_unknownObjectRetain();
    uint64_t v13 = sub_1000B6354(v12, 0, 0, a2, a3, v4);
    char v15 = v14;
    swift_unknownObjectRelease();
    if (v15) {
      break;
    }
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1000B1DB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + 56);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1013, ObjectType, v8);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return 0;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = a1 + 40; ; i += 16)
  {
    swift_getObjectType();
    uint64_t v12 = swift_unknownObjectRetain();
    uint64_t v13 = sub_1000B6354(v12, 0, 0, a2, a3, v4);
    char v15 = v14;
    swift_unknownObjectRelease();
    if (v15) {
      break;
    }
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t ChannelPipeline.SynchronousOperations.addHandler(_:name:position:)()
{
  sub_1000B7804();
  swift_getObjectType();
  uint64_t result = sub_1000B6354(v5, v4, v3, v2, v1, v0);
  if (v7)
  {
    sub_100019524(&qword_100309768);
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_1000B1F5C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result = sub_1000B1B9C(a1, a2, a3);
  if (v4)
  {
    sub_100019524(&qword_100309768);
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t ChannelPipeline.SynchronousOperations.context(handler:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[6];
  uint64_t v6 = a3[7];
  swift_getObjectType();
  sub_1000B7B60();
  EventLoop.assertInEventLoop(file:line:)(v7, v8, v9, v10, v11, v6);
  uint64_t v12 = a3[2];
  if (!v12)
  {
    swift_unknownObjectRetain();
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(v12 + 16);
  swift_unknownObjectRetain_n();
  swift_retain();
  if (!v5)
  {
LABEL_9:
    swift_unknownObjectRelease();
LABEL_12:
    sub_1000B5AB0();
    uint64_t v17 = swift_allocError();
    sub_1000B7C5C(v17, v18);
    swift_unknownObjectRelease();
    sub_100019524(&qword_100309768);
    swift_willThrowTypedImpl();
    return v5;
  }
  while (1)
  {
    uint64_t v13 = a3[3];
    if (v13) {
      BOOL v14 = v5 == v13;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14)
    {
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_12;
    }
    uint64_t v15 = ChannelHandlerContext.handler.getter();
    swift_unknownObjectRelease();
    if (v15 == a1) {
      break;
    }
    uint64_t v16 = *(void *)(v5 + 16);
    swift_retain();
    swift_release();
    uint64_t v5 = v16;
    if (!v16) {
      goto LABEL_9;
    }
  }
  swift_unknownObjectRelease_n();
  return v5;
}

void *ChannelPipeline.SynchronousOperations.context(name:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)a3[6];
  uint64_t v7 = a3[7];
  swift_getObjectType();
  sub_1000B7B60();
  EventLoop.assertInEventLoop(file:line:)(v8, v9, v10, v11, v12, v7);
  uint64_t v13 = a3[2];
  if (v13)
  {
    uint64_t v6 = *(void **)(v13 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (v6)
    {
      while (1)
      {
        BOOL v14 = (void *)a3[3];
        if (v14 && v6 == v14) {
          break;
        }
        BOOL v16 = v6[5] == a1 && v6[6] == a2;
        if (v16 || (sub_10024FA60() & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          return v6;
        }
        uint64_t v17 = (void *)v6[2];
        swift_retain();
        swift_release();
        uint64_t v6 = v17;
        if (!v17) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1000B5AB0();
  uint64_t v18 = swift_allocError();
  sub_1000B7C5C(v18, v19);
  swift_bridgeObjectRelease();
  sub_100019524(&qword_100309768);
  swift_willThrowTypedImpl();
  return v6;
}

uint64_t ChannelPipeline.SynchronousOperations.context<A>(handlerType:)()
{
  ChannelPipeline._contextSync<A>(handlerType:)();
  uint64_t v1 = v0;
  if (v2)
  {
    sub_100019524(&qword_100309768);
    swift_willThrowTypedImpl();
  }
  return v1;
}

uint64_t ChannelPipeline.SynchronousOperations.handler<A>(type:)()
{
  v4[1] = ChannelPipeline._handlerSync<A>(type:)();
  char v5 = v1 & 1;
  sub_10001B028(&qword_100309768);
  uint64_t v2 = sub_10024FCF0();
  uint64_t result = sub_1000AEA4C(v2, (uint64_t)v4, (uint64_t)&v6);
  if (!v0) {
    return v6;
  }
  return result;
}

uint64_t ChannelPipeline._handlerSync<A>(type:)()
{
  sub_1000B7B30();
  ChannelPipeline._contextSync<A>(handlerType:)();
  uint64_t v11 = v2;
  LOBYTE(v12) = v3 & 1;
  uint64_t v4 = sub_100019524(&qword_10030E988);
  sub_1000B42F0((uint64_t)sub_1000B65A8, (uint64_t)v10, v4, v1, v5, v6, v7, v8, v10[0], v10[1], v1, v0, v11, v12, v13, v14, v15, v16, v17,
    v18);
  sub_1000B7090(v11, v12, (uint64_t (*)(void))&_swift_release);
  return v13;
}

uint64_t ChannelPipeline.SynchronousOperations.fireChannelRead(_:)()
{
  sub_1000B7924();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v1, v2, v3, 1157, v4, v0);
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    sub_1000B7D38();
    sub_1000B13A4();
    return swift_release();
  }
  return result;
}

uint64_t ChannelPipeline.SynchronousOperations.fireUserInboundEventTriggered(_:)()
{
  sub_1000B7924();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v1, v2, v3, 1181, v4, v0);
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    uint64_t v6 = sub_1000B7D38();
    sub_1000B1630(v6);
    return swift_release();
  }
  return result;
}

uint64_t ChannelPipeline.SynchronousOperations.close(mode:promise:)()
{
  sub_1000B7B30();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 56);
  swift_getObjectType();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v5, v6, v7, 1197, v8, v4);
  return sub_1000B0180(v2, v0);
}

Swift::Void __swiftcall ChannelPipeline.SynchronousOperations.flush()()
{
  sub_1000B25BC(v0, 1205, (uint64_t (*)(uint64_t))sub_1000B05CC, (void (*)(void))sub_1000B0750);
}

uint64_t sub_1000B25BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, a2, ObjectType, v7);
  uint64_t result = a3(v9);
  if (result)
  {
    a4();
    return swift_release();
  }
  return result;
}

void ChannelPipeline.SynchronousOperations.write(_:promise:)()
{
}

void ChannelPipeline.SynchronousOperations.writeAndFlush(_:promise:)()
{
}

void sub_1000B26A4()
{
  sub_10003C7F0();
  uint64_t v0 = sub_1000B78C8();
  sub_1000B7B3C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", v1, v2, v3, v0);
  uint64_t v4 = sub_1000B7C28();
  sub_1000B02B4(v4, v5, v6);
  sub_10003C780();
}

void ChannelPipeline.SynchronousOperations.bind(to:promise:)()
{
}

void ChannelPipeline.SynchronousOperations.connect(to:promise:)()
{
}

void sub_1000B2724()
{
  sub_10003C7F0();
  uint64_t v0 = sub_1000B78C8();
  sub_1000B7B3C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", v1, v2, v3, v0);
  uint64_t v4 = sub_1000B7C28();
  sub_1000B0370(v4, v5, v6);
  sub_10003C780();
}

uint64_t ChannelPipeline.SynchronousOperations.register(promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 56);
  swift_getObjectType();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v4, v5, v6, 1253, v7, v3);
  return sub_1000B042C(a1);
}

uint64_t ChannelPipeline.SynchronousOperations.triggerUserOutboundEvent(_:promise:)()
{
  sub_1000B7B30();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 56);
  swift_getObjectType();
  sub_10002FD7C();
  EventLoop.assertInEventLoop(file:line:)(v5, v6, v7, 1261, v8, v4);
  return sub_1000B04F0(v2, v0);
}

uint64_t sub_1000B2838()
{
  sub_1000AE91C();
  sub_1000B7D20();
  sub_1000B7738();
  v0();
  sub_1000B7BC4();
  swift_getObjectType();
  uint64_t v1 = sub_1000B78F4();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B28B8()
{
  sub_1000B7908();
  sub_1000B7B18();
  sub_1000B76AC();
  v0();
  sub_1000B77C4();
  swift_getObjectType();
  sub_1000B7D70();
  uint64_t v1 = sub_1000B7720();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2928()
{
  sub_1000B7908();
  sub_1000B7B18();
  sub_1000B76AC();
  v0();
  sub_1000B77C4();
  swift_getObjectType();
  sub_1000B7D70();
  uint64_t v1 = sub_1000B7720();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2998()
{
  sub_1000B7908();
  sub_1000B7B18();
  sub_1000B76AC();
  v0();
  sub_1000B77C4();
  swift_getObjectType();
  sub_1000B7D70();
  uint64_t v1 = sub_1000B7720();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2A08()
{
  sub_1000AE91C();
  swift_getObjectType();
  sub_1000B7738();
  v0();
  uint64_t v2 = v1;
  swift_unknownObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 64))(ObjectType, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2A9C()
{
  sub_10003C7F0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1000AE91C();
  sub_1000B7B18();
  sub_1000B76AC();
  v5();
  sub_1000B77C4();
  uint64_t v6 = qword_10025D3C0[(char)v4];
  uint64_t ObjectType = swift_getObjectType();
  sub_10002F0C8();
  uint64_t v8 = sub_1000290D0();
  *(void *)uint64_t v9 = v6;
  *(unsigned char *)(v9 + 8) = 3;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 80))(v8, v4, v2, ObjectType, v0);
  swift_errorRelease();
  sub_10003C780();
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2B6C()
{
  sub_1000AE91C();
  swift_getObjectType();
  sub_1000B7738();
  v0();
  uint64_t v2 = v1;
  swift_unknownObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 72))(ObjectType, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2C00()
{
  sub_1000B7908();
  sub_1000B7B18();
  sub_1000B76AC();
  v0();
  sub_1000B77C4();
  swift_getObjectType();
  sub_1000B7D70();
  uint64_t v1 = sub_1000B7720();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2C70()
{
  return sub_1000B2838();
}

uint64_t sub_1000B2C88()
{
  return sub_1000B28B8();
}

uint64_t sub_1000B2CA0()
{
  return sub_1000B2928();
}

uint64_t sub_1000B2CB8()
{
  return sub_1000B2998();
}

uint64_t sub_1000B2CD0()
{
  return sub_1000B2A08();
}

uint64_t sub_1000B2CE8()
{
  return sub_1000B2B6C();
}

uint64_t sub_1000B2D00()
{
  return sub_1000B2A9C();
}

uint64_t sub_1000B2D18()
{
  return sub_1000B2C00();
}

uint64_t sub_1000B2D30()
{
  sub_1000AE91C();
  sub_1000B7D20();
  sub_1000B7738();
  v0();
  sub_1000B7BC4();
  swift_getObjectType();
  uint64_t v1 = sub_1000B78F4();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2DB0()
{
  sub_1000AE91C();
  sub_1000B7D20();
  sub_1000B7738();
  v0();
  sub_1000B7BC4();
  swift_getObjectType();
  uint64_t v1 = sub_1000B78F4();
  v2(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B2E30()
{
  return sub_1000B2DB0();
}

uint64_t sub_1000B2E48()
{
  return sub_1000B2D30();
}

uint64_t ChannelHandlerContext.remoteAddress.getter()
{
  sub_1000AE91C();
  swift_getObjectType();
  sub_1000B7738();
  v0();
  uint64_t v2 = v1;
  swift_unknownObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  sub_1000B7D08();
  return v2;
}

uint64_t ChannelHandlerContext.localAddress.getter()
{
  sub_1000AE91C();
  swift_getObjectType();
  sub_1000B7738();
  v0();
  uint64_t v2 = v1;
  swift_unknownObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  sub_1000B7D08();
  return v2;
}

uint64_t ChannelHandlerContext.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Void __swiftcall ChannelHandlerContext.fireChannelRegistered()()
{
}

Swift::Void __swiftcall ChannelHandlerContext.fireChannelUnregistered()()
{
}

void sub_1000B3168()
{
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = sub_1000B7B94();
    v0(v2);
    swift_release();
  }
}

#error "1000B3220: call analysis failed (funcsize=39)"

uint64_t ChannelHandlerContext.bind(to:promise:)(uint64_t a1, uint64_t a2)
{
  return sub_1000B3288(a1, a2, sub_1000B0BA0);
}

uint64_t ChannelHandlerContext.connect(to:promise:)(uint64_t a1, uint64_t a2)
{
  return sub_1000B3288(a1, a2, sub_1000B0CCC);
}

#error "1000B3304: call analysis failed (funcsize=46)"

#error "1000B33B8: call analysis failed (funcsize=44)"

uint64_t ChannelHandlerContext.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ChannelHandlerContext.__deallocating_deinit()
{
  ChannelHandlerContext.deinit();
  return _swift_deallocClassInstance(v0, 90, 7);
}

uint64_t sub_1000B3474()
{
  return ChannelHandlerContext.register(promise:)();
}

uint64_t sub_1000B3498(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.bind(to:promise:)(a1, a2);
}

uint64_t sub_1000B34BC(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.connect(to:promise:)(a1, a2);
}

uint64_t sub_1000B34E0(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.write(_:promise:)(a1, a2);
}

void sub_1000B3504()
{
}

uint64_t sub_1000B3528(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.writeAndFlush(_:promise:)(a1, a2);
}

void sub_1000B354C()
{
}

uint64_t sub_1000B3570(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.close(mode:promise:)(a1, a2);
}

uint64_t sub_1000B3594()
{
  return ChannelHandlerContext.triggerUserOutboundEvent(_:promise:)();
}

uint64_t sub_1000B35B8()
{
  return ChannelHandlerContext.eventLoop.getter();
}

void sub_1000B35DC()
{
}

void sub_1000B3600()
{
}

void sub_1000B3624()
{
}

void sub_1000B3648()
{
}

uint64_t sub_1000B366C()
{
  return ChannelHandlerContext.fireChannelRead(_:)();
}

void sub_1000B3690()
{
}

void sub_1000B36B4()
{
}

uint64_t sub_1000B36D8()
{
  return ChannelHandlerContext.fireErrorCaught(_:)();
}

uint64_t sub_1000B36FC()
{
  return ChannelHandlerContext.fireUserInboundEventTriggered(_:)();
}

uint64_t ChannelPipeline.debugDescription.getter()
{
  sub_100019524(&qword_1003090E8);
  uint64_t v1 = sub_1000AC8E4();
  *(_OWORD *)(v1 + 16) = xmmword_100255FB0;
  sub_10024F330(20);
  v84._object = (void *)0x800000010027CEF0;
  v84._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_10024E800(v84);
  sub_10024F5C0();
  v85._uint64_t countAndFlagsBits = 14941;
  v85._object = (void *)0xE200000000000000;
  sub_10024E800(v85);
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  uint64_t v74 = v1;
  uint64_t v2 = sub_1000B406C();
  uint64_t v3 = (void *)v2[2];
  uint64_t v80 = (uint64_t)v3;
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 7;
    uint64_t v0 = v3;
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      long long v77 = *(_OWORD *)(v4 - 3);
      uint64_t v7 = *(v4 - 3);
      swift_getObjectType();
      if (sub_1000B5F3C(v7))
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B7A84();
        }
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1)
        {
          sub_1000B7A54(v8);
          sub_100039334();
        }
        _swiftEmptyArrayStorage[2] = v9 + 1;
        uint64_t v10 = &_swiftEmptyArrayStorage[4 * v9];
        *((_OWORD *)v10 + 2) = v77;
        v10[6] = v6;
        uint64_t v10[7] = v5;
      }
      v4 += 4;
      uint64_t v0 = (void *)((char *)v0 - 1);
    }
    while (v0);
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)v80;
  }
  uint64_t v11 = _swiftEmptyArrayStorage[2];
  if (v11)
  {
    sub_1000392E4();
    uint64_t v0 = &_swiftEmptyArrayStorage[7];
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_10024FDC0();
      uint64_t v12 = sub_10024E790();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000B7AB4();
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1)
      {
        sub_1000B7A54(v13);
        sub_1000392E4();
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      _swiftEmptyArrayStorage[v14 + 4] = v12;
      v0 += 4;
      --v11;
    }
    while (v11);
  }
  swift_release();
  uint64_t v15 = sub_1000B41A8(_swiftEmptyArrayStorage);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17) {
    Swift::Int v18 = 0;
  }
  else {
    Swift::Int v18 = v15;
  }
  Swift::Int v76 = v18;
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = v2 + 7;
    uint64_t v0 = v3;
    do
    {
      uint64_t v21 = *(v19 - 1);
      uint64_t v20 = *v19;
      long long v78 = *(_OWORD *)(v19 - 3);
      uint64_t v22 = *(v19 - 3);
      swift_getObjectType();
      if (sub_1000B5F3C(v22))
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B7A84();
        }
        unint64_t v24 = _swiftEmptyArrayStorage[2];
        unint64_t v23 = _swiftEmptyArrayStorage[3];
        unint64_t v17 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          sub_1000B7A6C(v23);
          sub_100039334();
        }
        _swiftEmptyArrayStorage[2] = v17;
        uint64_t v25 = &_swiftEmptyArrayStorage[4 * v24];
        *((_OWORD *)v25 + 2) = v78;
        void v25[6] = v21;
        v25[7] = v20;
      }
      v19 += 4;
      uint64_t v0 = (void *)((char *)v0 - 1);
    }
    while (v0);
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = (void **)_swiftEmptyArrayStorage[2];
  if (v26)
  {
    sub_1000392E4();
    uint64_t ObjectType = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v0 = &_swiftEmptyArrayStorage[7];
    uint64_t v28 = v80;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_10024FDC0();
      uint64_t v29 = sub_10024E790();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000B7AB4();
      }
      unint64_t v31 = _swiftEmptyArrayStorage[2];
      unint64_t v30 = _swiftEmptyArrayStorage[3];
      unint64_t v17 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_1000B7A6C(v30);
        sub_1000392E4();
      }
      _swiftEmptyArrayStorage[2] = v17;
      _swiftEmptyArrayStorage[v31 + 4] = v29;
      v0 += 4;
      uint64_t v26 = (void **)((char *)v26 - 1);
    }
    while (v26);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t ObjectType = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v28 = v80;
  }
  uint64_t v75 = sub_1000B41A8(_swiftEmptyArrayStorage);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (v33)
  {
    if (!v28)
    {
LABEL_76:
      swift_bridgeObjectRelease();
      uint64_t v66 = v74;
      unint64_t v67 = *(void *)(v74 + 16);
      if (v67 >= *(void *)(v74 + 24) >> 1)
      {
        sub_1000B7C3C();
        uint64_t v66 = v72;
      }
      *(void *)(v66 + 16) = v67 + 1;
      uint64_t v68 = v66 + 16 * v67;
      strcpy((char *)(v68 + 32), " <no handlers>");
      *(unsigned char *)(v68 + 47) = -18;
      goto LABEL_79;
    }
    uint64_t v75 = 0;
  }
  else if (!v28)
  {
    goto LABEL_76;
  }
  if (__OFSUB__(v76, 2))
  {
LABEL_82:
    __break(1u);
  }
  else
  {
    uint64_t v0 = (void *)0xE100000000000000;
    v86._uint64_t countAndFlagsBits = 32;
    v86._object = (void *)0xE100000000000000;
    uint64_t v82 = sub_10024E8D0(v86, v76 - 2);
    unint64_t v83 = v34;
    swift_bridgeObjectRetain();
    v87._uint64_t countAndFlagsBits = 0xE29386E2205D495BLL;
    v87._object = (void *)0xAE005D4F5B209186;
    sub_10024E800(v87);
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)v82;
    unint64_t v17 = v83;
    uint64_t v35 = v74;
    uint64_t v26 = *(void ***)(v74 + 16);
    uint64_t ObjectType = (uint64_t)v26 + 1;
    uint64_t v73 = v2;
    if ((unint64_t)v26 < *(void *)(v74 + 24) >> 1) {
      goto LABEL_47;
    }
  }
  sub_1000B7C3C();
  uint64_t v35 = v71;
LABEL_47:
  *(void *)(v35 + 16) = ObjectType;
  uint64_t v36 = v35;
  uint64_t v37 = v35 + 16 * (void)v26;
  *(void *)(v37 + 32) = v33;
  *(void *)(v37 + 40) = v17;
  uint64_t v26 = (void **)(v73 + 7);
  do
  {
    uint64_t v81 = v28;
    uint64_t v28 = (uint64_t)*(v26 - 3);
    uint64_t v33 = *v26;
    uint64_t v79 = (uint64_t)*(v26 - 1);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_100034BF0();
    uint64_t v39 = v38;
    unint64_t v17 = *(void *)(v38 + 16);
    uint64_t ObjectType = v17 + 1;
    if (v17 >= *(void *)(v38 + 24) >> 1)
    {
      sub_1000B76FC();
      uint64_t v39 = v57;
    }
    *(void *)(v39 + 16) = ObjectType;
    uint64_t v40 = v39 + 16 * v17;
    *(void *)(v40 + 32) = 32;
    *(void *)(v40 + 40) = v0;
    swift_getObjectType();
    if (sub_1000B5F3C(v28))
    {
      uint64_t ObjectType = swift_getObjectType();
      sub_10024FDC0();
      unint64_t v17 = v41;
      uint64_t v42 = sub_10024E790();
      swift_bridgeObjectRelease();
      if (__OFSUB__(v76, v42))
      {
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      v88._uint64_t countAndFlagsBits = 32;
      v88._object = (void *)0xE100000000000000;
      sub_10024E8D0(v88, v76 - v42);
      sub_1000B7A3C();
      if (v43)
      {
        sub_1000B76D8();
        uint64_t v39 = v64;
      }
      sub_1000B79E8();
    }
    else
    {
      v89._uint64_t countAndFlagsBits = 32;
      v89._object = (void *)0xE100000000000000;
      sub_10024E8D0(v89, v76);
    }
    sub_1000B7BE0();
    if (v43)
    {
      sub_1000B76FC();
      uint64_t v39 = v62;
    }
    sub_1000B7964();
    if (v43)
    {
      sub_1000B76D8();
      uint64_t v39 = v58;
    }
    *(void *)(v39 + 16) = v17;
    uint64_t v44 = v39 + 16 * ObjectType;
    *(void *)(v44 + 32) = 0x209186E29386E220;
    *(void *)(v44 + 40) = 0xA800000000000000;
    swift_getObjectType();
    if (sub_1000B5F3C(v28))
    {
      swift_getObjectType();
      sub_10024FDC0();
      sub_1000B7A3C();
      if (v43)
      {
        sub_1000B76D8();
        uint64_t v39 = v65;
      }
      sub_1000B79E8();
      uint64_t ObjectType = v45;
      unint64_t v17 = sub_10024E790();
      swift_bridgeObjectRelease();
      Swift::Int v46 = v75 - v17;
      if (__OFSUB__(v75, v17)) {
        goto LABEL_81;
      }
      v47._uint64_t countAndFlagsBits = 32;
      v47._object = (void *)0xE100000000000000;
    }
    else
    {
      v47._uint64_t countAndFlagsBits = 32;
      v47._object = (void *)0xE100000000000000;
      Swift::Int v46 = v75;
    }
    sub_10024E8D0(v47, v46);
    sub_1000B7BE0();
    if (v43)
    {
      sub_1000B76FC();
      uint64_t v39 = v63;
    }
    sub_1000B7964();
    uint64_t v0 = (void *)0xE100000000000000;
    if (v43)
    {
      sub_1000B76D8();
      uint64_t v39 = v59;
    }
    *(void *)(v39 + 16) = v17;
    uint64_t v48 = v39 + 16 * ObjectType;
    *(void *)(v48 + 32) = 32;
    *(void *)(v48 + 40) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v90._uint64_t countAndFlagsBits = v79;
    v90._object = v33;
    sub_10024E800(v90);
    swift_bridgeObjectRelease();
    v91._uint64_t countAndFlagsBits = 93;
    v91._object = (void *)0xE100000000000000;
    sub_10024E800(v91);
    unint64_t v49 = *(void *)(v39 + 16);
    if (v49 >= *(void *)(v39 + 24) >> 1)
    {
      sub_1000B76FC();
      uint64_t v39 = v60;
    }
    *(void *)(v39 + 16) = v49 + 1;
    uint64_t v50 = v39 + 16 * v49;
    *(void *)(v50 + 32) = 91;
    *(void *)(v50 + 40) = 0xE100000000000000;
    sub_100019524(&qword_100309410);
    sub_10003F8AC();
    uint64_t v51 = sub_10024E5C0();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    uint64_t v54 = v36;
    unint64_t v55 = *(void *)(v36 + 16);
    if (v55 >= *(void *)(v36 + 24) >> 1)
    {
      sub_100034BF0();
      uint64_t v54 = v61;
    }
    v26 += 4;
    *(void *)(v54 + 16) = v55 + 1;
    uint64_t v36 = v54;
    uint64_t v56 = v54 + 16 * v55;
    *(void *)(v56 + 32) = v51;
    *(void *)(v56 + 40) = v53;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v28 = v81 - 1;
  }
  while (v81 != 1);
  swift_bridgeObjectRelease();
LABEL_79:
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  uint64_t v69 = sub_10024E5C0();
  swift_bridgeObjectRelease();
  return v69;
}

void *sub_1000B406C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = v0;
  uint64_t v3 = *(void **)(v1 + 16);
  swift_retain();
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v5 = *(void **)(v2 + 24);
    if (v5 && v3 == v5) {
      break;
    }
    uint64_t v7 = ChannelHandlerContext.handler.getter();
    uint64_t v9 = v8;
    uint64_t v11 = v3[5];
    uint64_t v10 = v3[6];
    swift_retain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100035CB8();
      uint64_t v4 = v15;
    }
    unint64_t v12 = v4[2];
    if (v12 >= v4[3] >> 1)
    {
      sub_100035CB8();
      uint64_t v4 = v16;
    }
    void v4[2] = v12 + 1;
    unint64_t v13 = &v4[4 * v12];
    void v13[4] = v7;
    v13[5] = v9;
    v13[6] = v11;
    v13[7] = v10;
    swift_release();
    unint64_t v14 = (void *)v3[2];
    swift_retain();
    swift_release();
    uint64_t v3 = v14;
    if (!v14) {
      return v4;
    }
  }
  swift_release();
  return v4;
}

uint64_t sub_1000B41A8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0;
  }
  uint64_t result = a1[4];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v5 = a1 + 5;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if (result <= v7) {
        uint64_t result = v6;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t ChannelPipeline.handler<A>(type:)()
{
  sub_1000B7B30();
  ChannelPipeline.context<A>(handlerType:)();
  uint64_t v2 = sub_10004F2C8();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  sub_10002FD7C();
  uint64_t v7 = EventLoopFuture.map<A>(file:line:_:)(v3, v4, v5, 1932, v6, v2, v1);
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1000B427C@<X0>(void *a1@<X8>)
{
  ChannelHandlerContext.handler.getter();
  sub_100019524(&qword_10030CA10);
  uint64_t result = swift_dynamicCast();
  if (result) {
    *a1 = v3;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1000B42F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10003C984();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v22 + 16);
  sub_10002F9C8();
  uint64_t v30 = v29;
  __chkstk_darwin(v31, v32);
  unint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F9C8();
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v39 + 16))(v38, v40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, void))(*(void *)(*(void *)(v23 + 24) - 8) + 32))(v27, v38, *(void *)(v23 + 24));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v34, v38, v28);
    v25(v34);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v28);
  }
  sub_10024FCF0();
  swift_storeEnumTagMultiPayload();
  sub_10003C8C8();
}

uint64_t sub_1000B44AC()
{
  return ChannelPipeline.debugDescription.getter();
}

void sub_1000B44D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, BOOL a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v22;
  a22 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  int v29 = v28 & 1;
  uint64_t v30 = *(void *)(v24 + 40);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B75E0();
  if (v32())
  {
    sub_1001FB400(v27, v29);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    a9 = v27;
    a10 = v29 != 0;
    uint64_t v34 = sub_1000B7888();
    *(void *)(v34 + 16) = v25;
    sub_1000458B4((uint64_t)&a9, v34 + 24, qword_10030ECB8);
    uint64_t v35 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v30 + 24);
    swift_retain();
    sub_10004F084(v27, v29);
    v35(sub_1000B733C, v34, ObjectType, v30);
    swift_release();
    sub_1000B75A4();
  }
}

void sub_1000B45E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v23;
  a22 = v24;
  sub_1000B7658();
  sub_1000B758C();
  if (v25())
  {
    uint64_t v26 = sub_1000B7744();
    sub_1001FB400(v26, v27);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B76C4();
    uint64_t v29 = sub_1000B7888();
    sub_1000B7754(v29);
    sub_1000458B4((uint64_t)&a9, v30, qword_10030ECB8);
    sub_1000B7C68();
    sub_1000B7640();
    v22();
    swift_release();
    sub_1000B75A4();
  }
}

void sub_1000B46A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v23;
  a22 = v24;
  sub_1000B7658();
  sub_1000B758C();
  if (v25())
  {
    uint64_t v26 = sub_1000B7744();
    sub_1001FB534(v26, v27);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B76C4();
    uint64_t v29 = sub_1000B7888();
    sub_1000B7754(v29);
    sub_1000458B4((uint64_t)&a9, v30, &qword_10030EC70);
    sub_1000B7770();
    sub_1000B7640();
    v22();
    swift_release();
    sub_1000B75A4();
  }
}

void sub_1000B4768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_1000B784C();
  a23 = v25;
  a24 = v26;
  sub_1000B7980();
  sub_1000B758C();
  if (v27())
  {
    uint64_t v28 = sub_1000B7CB4();
    sub_1001FB560(v28, v29, v30);
    sub_1000B7604();
    sub_1000B75C0();
    sub_10002FD48();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B7CA0();
    uint64_t v32 = swift_allocObject();
    sub_1000B7764(v32);
    sub_1000458B4((uint64_t)&a10, v33, &qword_10030EC88);
    uint64_t v34 = sub_1000B7B00();
    sub_1000B706C(v34, v35, v36);
    swift_retain();
    sub_1000B7A24();
    v24();
    swift_release();
    sub_10002FD48();
  }
}

uint64_t sub_1000B4840(uint64_t a1, char a2, uint64_t a3)
{
  int v5 = a2 & 1;
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6))
  {
    uint64_t v8 = sub_1001FB5E4(a1, v5);
    CallbackList._run()();
    sub_10003C350(v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = a1;
    BOOL v13 = v5 != 0;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a3;
    sub_1000458B4((uint64_t)&v12, v10 + 24, &qword_10030E988);
    uint64_t v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 24);
    sub_1000B736C(a1, v5);
    swift_retain();
    v11(sub_1000B7360, v10, ObjectType, v6);
    return swift_release();
  }
}

uint64_t sub_1000B49AC(uint64_t a1, char a2, uint64_t a3)
{
  int v5 = a2 & 1;
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6))
  {
    uint64_t v8 = sub_1001FB5E4(a1, v5);
    CallbackList._run()();
    sub_10003C350(v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = a1;
    BOOL v13 = v5 != 0;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a3;
    sub_1000458B4((uint64_t)&v12, v10 + 24, &qword_10030E988);
    uint64_t v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 24);
    sub_1000B736C(a1, v5);
    swift_retain();
    v11(sub_1000B7360, v10, ObjectType, v6);
    return swift_release();
  }
}

void sub_1000B4B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v25;
  a22 = v26;
  sub_1000B7658();
  sub_1000B758C();
  if (v27())
  {
    uint64_t v28 = sub_1000B7744();
    sub_1001FB610(v28, v29);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B76C4();
    uint64_t v31 = sub_1000B7888();
    sub_1000B7754(v31);
    sub_1000458B4((uint64_t)&a9, v32, &qword_10030EC78);
    uint64_t v33 = *(void (**)(void))(v22 + 24);
    sub_1000B6B84(v24, v23);
    swift_retain();
    sub_1000B7640();
    v33();
    swift_release();
    sub_1000B75A4();
  }
}

void sub_1000B4BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_1000B784C();
  a23 = v25;
  a24 = v26;
  sub_1000B7980();
  sub_1000B758C();
  if (v27())
  {
    uint64_t v28 = sub_1000B7CB4();
    sub_1001FB63C(v28, v29, v30);
    sub_1000B7604();
    sub_1000B75C0();
    sub_10002FD48();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B7CA0();
    uint64_t v32 = swift_allocObject();
    sub_1000B7764(v32);
    sub_1000458B4((uint64_t)&a10, v33, &qword_10030EC68);
    uint64_t v34 = sub_1000B7B00();
    sub_1000B6AE4(v34, v35, v36);
    swift_retain();
    sub_1000B7A24();
    v24();
    swift_release();
    sub_10002FD48();
  }
}

uint64_t sub_1000B4CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 48);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B758C();
  if (v9())
  {
    sub_1001FB79C();
    sub_1000B7604();
    sub_1000B75C0();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14[0] = a1;
    v14[1] = a2;
    int v15 = a3;
    char v17 = BYTE6(a3);
    __int16 v16 = WORD2(a3);
    char v18 = HIBYTE(a3) & 1;
    uint64_t v11 = sub_1000AC8E4();
    sub_1000B7764(v11);
    sub_1000458B4((uint64_t)v14, v12, &qword_10030ECA8);
    BOOL v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v7 + 24);
    sub_1000B727C(a1, a2, a3, HIBYTE(a3) & 1);
    swift_retain();
    v13(sub_1000B7270, v11, ObjectType, v7);
    return swift_release();
  }
}

void sub_1000B4E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v23;
  a22 = v24;
  sub_1000B7658();
  sub_1000B758C();
  if (v25())
  {
    uint64_t v26 = sub_1000B7744();
    sub_1001FB58C(v26, v27);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B76C4();
    uint64_t v29 = sub_1000B7888();
    sub_1000B7754(v29);
    sub_1000458B4((uint64_t)&a9, v30, &qword_10030ECA0);
    sub_1000B7C68();
    sub_1000B7640();
    v22();
    swift_release();
    sub_1000B75A4();
  }
}

void sub_1000B4EF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000B75F8();
  if (v11())
  {
    sub_1001FB8AC(a1, a2, a3, a4 & 0xFFFFFFFFFFFFFFLL | ((HIBYTE(a4) & 1) << 56));
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B7AD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16[0] = a1;
    v16[1] = a2;
    uint64_t v16[2] = a3;
    int v17 = a4;
    char v19 = BYTE6(a4);
    __int16 v18 = WORD2(a4);
    char v20 = HIBYTE(a4) & 1;
    uint64_t v13 = swift_allocObject();
    sub_1000B7764(v13);
    sub_1000458B4((uint64_t)v16, v14, &qword_10030EC98);
    int v15 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 24);
    sub_1000B7158(a1, a2, a3, a4, HIBYTE(a4) & 1);
    swift_retain();
    v15(sub_1000B714C, v13, ObjectType, v9);
    swift_release();
    sub_1000B7AD8();
  }
}

void sub_1000B5068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v23;
  a22 = v24;
  sub_1000B7658();
  sub_1000B758C();
  if (v25())
  {
    uint64_t v26 = sub_1000B7744();
    sub_1001FB9CC(v26, v27);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B76C4();
    uint64_t v29 = sub_1000B7888();
    sub_1000B7754(v29);
    sub_1000458B4((uint64_t)&a9, v30, &qword_10030EC90);
    sub_1000B7770();
    sub_1000B7640();
    v22();
    swift_release();
    sub_1000B75A4();
  }
}

void sub_1000B5128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B7690();
  a21 = v23;
  a22 = v24;
  sub_1000B7658();
  sub_1000B758C();
  if (v25())
  {
    uint64_t v26 = sub_1000B7744();
    sub_1001FB9F8(v26, v27);
    sub_1000B7604();
    sub_1000B75C0();
    sub_1000B75A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B76C4();
    uint64_t v29 = sub_1000B7888();
    sub_1000B7754(v29);
    sub_1000458B4((uint64_t)&a9, v30, &qword_10030EC80);
    sub_1000B7770();
    sub_1000B7640();
    v22();
    swift_release();
    sub_1000B75A4();
  }
}

uint64_t sub_1000B51E8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000B5354(a1, a2, a3, (void (*)(uint64_t, void))sub_1001FB400);
}

uint64_t sub_1000B5200(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t, void))
{
  a5(a2, a3, a4 & 1);
  sub_1000B7604();
  sub_1000B75C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B5258()
{
  uint64_t v0 = sub_1001FB79C();
  CallbackList._run()();
  sub_10003C350(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B52D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = sub_1001FB8AC(a2, a3, a4, a5 & 0xFFFFFFFFFFFFFFLL | ((HIBYTE(a5) & 1) << 56));
  CallbackList._run()();
  sub_10003C350(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B5354(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, void))
{
  a4(a2, a3 & 1);
  sub_1000B7604();
  sub_1000B75C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B53A8(uint64_t a1, uint64_t a2)
{
  return sub_1000B5354(a1, *(void *)a2, *(unsigned char *)(a2 + 8), (void (*)(uint64_t, void))sub_1001FB534);
}

uint64_t sub_1000B53E0(uint64_t a1, uint64_t a2)
{
  return sub_1000B5200(a1, *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), (void (*)(uint64_t, uint64_t, void))sub_1001FB560);
}

uint64_t sub_1000B5418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  return sub_1000B5498(a1, a2, a3, a4, v8);
}

uint64_t sub_1000B5498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_WORD *)(a5 + 88) = 0;
  *(void *)(a5 + 40) = a1;
  *(void *)(a5 + 48) = a2;
  *(void *)(a5 + 32) = a4;
  swift_getObjectType();
  uint64_t v8 = sub_1000B5F3C(a3);
  if (v8)
  {
    uint64_t v9 = v7;
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)(a5 + 56) = v8;
  *(void *)(a5 + 64) = v9;
  swift_getObjectType();
  uint64_t result = sub_1000B5F3C(a3);
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = 0;
    uint64_t v11 = 0;
  }
  *(void *)(a5 + 72) = result;
  *(void *)(a5 + 80) = v11;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  if (*(void *)(a5 + 56) | result) {
    return a5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B5558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  return sub_1000B55FC(a1, v7, a3, a4);
}

uint64_t sub_1000B55B8()
{
  return sub_1000B0258(v0, sub_1000B05F8, (void (*)(void))sub_1000B148C);
}

uint64_t sub_1000B55FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 64) = a1;
  *(void *)(a2 + 72) = a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void *)(a4 + 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 80);
  swift_unknownObjectRetain();
  *(void *)(a2 + 48) = v8(ObjectType, v7);
  *(void *)(a2 + 56) = v9;
  type metadata accessor for HeadChannelHandler();
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  uint64_t inited = swift_initStaticObject();
  type metadata accessor for ChannelHandlerContext();
  uint64_t v11 = swift_allocObject();
  swift_retain();
  *(void *)(a2 + 16) = sub_100200CF0(1684104552, 0xE400000000000000, inited, a2, v11);
  swift_release();
  type metadata accessor for TailChannelHandler();
  uint64_t v12 = swift_initStaticObject();
  uint64_t v13 = swift_allocObject();
  swift_retain();
  uint64_t v14 = sub_100200CF0(1818845556, 0xE400000000000000, v12, a2, v13);
  swift_unknownObjectRelease();
  *(void *)(a2 + 24) = v14;
  swift_release();
  if (*(void *)(a2 + 16))
  {
    *(void *)(*(void *)(a2 + 16) + 16) = *(void *)(a2 + 24);
    swift_retain();
    swift_release();
  }
  uint64_t v15 = *(void *)(a2 + 24);
  if (v15)
  {
    *(void *)(v15 + 24) = *(void *)(a2 + 16);
    swift_retain();
    swift_release();
  }
  return a2;
}

void sub_1000B57A0()
{
}

uint64_t sub_1000B57EC(uint64_t a1, uint64_t a2)
{
  return sub_1000B5354(a1, *(void *)a2, *(unsigned char *)(a2 + 8), (void (*)(uint64_t, void))sub_1001FB5E4);
}

uint64_t sub_1000B5824(uint64_t a1, uint64_t a2)
{
  return sub_1000B5354(a1, *(void *)a2, *(unsigned char *)(a2 + 8), (void (*)(uint64_t, void))sub_1001FB610);
}

uint64_t sub_1000B585C(uint64_t a1, uint64_t a2)
{
  return sub_1000B5200(a1, *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), (void (*)(uint64_t, uint64_t, void))sub_1001FB63C);
}

#error "1000B5934: call analysis failed (funcsize=91)"

uint64_t type metadata accessor for ChannelHandlerContext()
{
  return self;
}

uint64_t sub_1000B5A2C()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000B5A6C()
{
  return sub_1000AF5CC(*(void *)(v0 + 16));
}

uint64_t sub_1000B5A78()
{
  return sub_1000B5FEC((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000B5AA4()
{
  return sub_1000AF720(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_1000B5AB0()
{
  unint64_t result = qword_10030E980;
  if (!qword_10030E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030E980);
  }
  return result;
}

uint64_t sub_1000B5AFC()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_1000B7BF8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000B5B34()
{
  return sub_1000AF8D8(*(void *)(v0 + 32));
}

uint64_t sub_1000B5B44()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10007D954(*(void *)(v0 + 32), *(void *)(v0 + 40));
  uint64_t v1 = sub_10004F264();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000B5B84()
{
  return sub_1000B1C30(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000B5BA8()
{
  return sub_1000B5C28((uint64_t)sub_1000B0BA0);
}

uint64_t sub_1000B5BC4()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B5C10()
{
  return sub_1000B5C28((uint64_t)sub_1000B0CCC);
}

uint64_t sub_1000B5C28(uint64_t a1)
{
  return sub_1000B0370(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1000B5C5C()
{
  return sub_1000B02B4(v0 + 24, *(void *)(v0 + 88), sub_1000B0928);
}

uint64_t sub_1000B5CA0()
{
  return sub_1000B0258(v0, sub_1000B05CC, (void (*)(void))sub_1000B0750);
}

uint64_t sub_1000B5CE8()
{
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 == 2)
  {
    sub_10001C2EC(v0 + 24);
  }
  else if (v1 == 1)
  {
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 56) != 4 && (~*(void *)(v0 + 64) & 0xF000000000000007) != 0) {
      swift_release();
    }
  }
  else if (!*(unsigned char *)(v0 + 80))
  {
    sub_1000B79C0();
  }
  swift_release();
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000B5D8C()
{
  return sub_1000B02B4(v0 + 24, *(void *)(v0 + 88), sub_1000B0A54);
}

uint64_t sub_1000B5DD0()
{
  return sub_1000B0258(v0, sub_1000B05CC, (void (*)(void))sub_1000B0854);
}

uint64_t sub_1000B5E14()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B5E54()
{
  return sub_1000B0180(*(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000B5E84()
{
  return sub_1000B6304();
}

uint64_t sub_1000B5E9C()
{
  return sub_1000B042C(*(void *)(v0 + 24));
}

uint64_t sub_1000B5EC4()
{
  swift_release();
  sub_10001C2EC(v0 + 24);
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000B5F0C()
{
  return sub_1000B04F0(v0 + 24, *(void *)(v0 + 56));
}

uint64_t sub_1000B5F3C(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000B5F80()
{
  return sub_1000B6304();
}

uint64_t sub_1000B5F98()
{
  return sub_1000AF48C(*(void *)(v0 + 24));
}

uint64_t sub_1000B5FC0()
{
  return sub_1000B5FEC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1000B5FEC(void (*a1)(void), void (*a2)(void))
{
  swift_release();
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 40));
  uint64_t v5 = sub_10004F264();
  return _swift_deallocObject(v5, v6, v7);
}

uint64_t sub_1000B604C()
{
  return sub_1000AF24C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1000B6058()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000B6098()
{
  return sub_1000AF2EC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1000B60A4()
{
  return sub_1000AF944();
}

uint64_t sub_1000B60AC()
{
  return sub_1000B0258(v0, sub_1000B05F8, (void (*)(void))sub_1000B1044);
}

uint64_t sub_1000B60F0()
{
  return sub_1000B0258(v0, sub_1000B05F8, (void (*)(void))sub_1000B111C);
}

uint64_t sub_1000B6134()
{
  return sub_1000B0258(v0, sub_1000B05F8, (void (*)(void))sub_1000B11F4);
}

uint64_t sub_1000B6178()
{
  return sub_1000B0258(v0, sub_1000B05F8, (void (*)(void))sub_1000B12CC);
}

uint64_t sub_1000B61BC()
{
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 == 2)
  {
    sub_10001C2EC(v0 + 24);
  }
  else if (v1 == 1)
  {
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 56) != 4 && (~*(void *)(v0 + 64) & 0xF000000000000007) != 0) {
      swift_release();
    }
  }
  else if (!*(unsigned char *)(v0 + 80))
  {
    sub_1000B79C0();
  }
  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_1000B6258()
{
  return sub_1000AFD68();
}

uint64_t sub_1000B6264()
{
  return sub_1000B0258(v0, sub_1000B05F8, (void (*)(void))sub_1000B1558);
}

uint64_t sub_1000B62A8()
{
  swift_release();
  sub_10001C2EC(v0 + 24);
  uint64_t v1 = sub_1000B7BF8();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000B62E0()
{
  return sub_1000AFFDC(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B62EC()
{
  return sub_1000B6304();
}

uint64_t sub_1000B6304()
{
  sub_1000B7D58();
  v0(*(void *)(v1 + 24));
  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1000B634C()
{
  return sub_1000B0128();
}

uint64_t sub_1000B6354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a6 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 198, ObjectType, v12);
  if (*(unsigned char *)(a6 + 40) == 1)
  {
    sub_10002F0C8();
    uint64_t v15 = swift_allocError();
    *(void *)uint64_t v16 = 2;
    *(unsigned char *)(v16 + 8) = 3;
    return v15;
  }
  if (!(a5 >> 62))
  {
    swift_retain();
    sub_10007D98C(a4, a5);
    int v17 = (void (*)(uint64_t, uint64_t))sub_1000B7578;
    uint64_t v18 = a2;
    uint64_t v19 = a3;
    uint64_t v20 = a1;
    uint64_t v21 = a4;
    uint64_t v22 = a5;
    goto LABEL_7;
  }
  if (a5 >> 62 == 1)
  {
    swift_retain();
    sub_10007D98C(a4, a5);
    int v17 = (void (*)(uint64_t, uint64_t))sub_1000B7288;
    uint64_t v18 = a2;
    uint64_t v19 = a3;
    uint64_t v20 = a1;
    uint64_t v21 = a4;
    uint64_t v22 = a5 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_7:
    uint64_t v15 = sub_1000B6B90(v18, v19, v20, v21, v22, v17, a6, a6);
    swift_release();
    sub_10007D954(a4, a5);
    return v15;
  }
  if (a4 | a5 ^ 0x8000000000000000)
  {
    uint64_t v23 = *(void *)(a6 + 24);
    if (v23)
    {
      swift_retain();
      swift_retain();
      uint64_t v24 = (void (*)(uint64_t, uint64_t))sub_1000B728C;
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v23 = *(void *)(a6 + 16);
    if (v23)
    {
      swift_retain();
      swift_retain();
      uint64_t v24 = (void (*)(uint64_t, uint64_t))sub_1000B757C;
LABEL_13:
      uint64_t v15 = sub_1000B6D5C(a2, a3, a1, v23, v24, a6, a6);
      swift_release();
      swift_release();
      return v15;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B65A8@<X0>(void *a1@<X8>)
{
  return sub_1000B427C(a1);
}

uint64_t sub_1000B65C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000B65D8()
{
  unint64_t result = qword_10030E990;
  if (!qword_10030E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030E990);
  }
  return result;
}

uint64_t type metadata accessor for ChannelPipeline()
{
  return self;
}

void type metadata accessor for ChannelPipeline.SynchronousOperations()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ChannelPipeline.Position(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_10007D98C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for ChannelPipeline.Position(uint64_t *a1)
{
  return sub_10007D954(*a1, a1[1]);
}

uint64_t *assignWithCopy for ChannelPipeline.Position(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_10007D98C(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_10007D954(v5, v6);
  return a1;
}

uint64_t *assignWithTake for ChannelPipeline.Position(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10007D954(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelPipeline.Position(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 57) >> 5) | (4
                                                              * ((*(void *)(a1 + 8) >> 57) & 0x18 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ChannelPipeline.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1000B67C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000B67E4(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_1000B67F4(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[1] = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *unint64_t result = (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

void type metadata accessor for ChannelPipeline.Position()
{
}

uint64_t type metadata accessor for HeadChannelHandler()
{
  return self;
}

uint64_t type metadata accessor for TailChannelHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ChannelPipelineError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B693CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ChannelPipelineError()
{
}

void *initializeBufferWithCopyOfBuffer for ChannelHandlerContext.RemovalToken(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *assignWithCopy for ChannelHandlerContext.RemovalToken(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ChannelHandlerContext.RemovalToken(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelHandlerContext.RemovalToken(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelHandlerContext.RemovalToken(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for ChannelHandlerContext.RemovalToken()
{
}

uint64_t sub_1000B6AC0()
{
  return sub_1000B7014();
}

uint64_t sub_1000B6AD8()
{
  return sub_1000B585C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B6AE4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000B6AF0()
{
  return sub_1000B6B2C();
}

uint64_t sub_1000B6B08()
{
  return sub_1000B53A8(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B6B14()
{
  return sub_1000B6B2C();
}

uint64_t sub_1000B6B2C()
{
  sub_1000B7D58();
  sub_1000B7090(*(void *)(v1 + 24), *(unsigned char *)(v1 + 32), v0);
  return _swift_deallocObject(v1, 33, 7);
}

uint64_t sub_1000B6B78()
{
  return sub_1000B5824(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B6B84(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000B6B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(a8 + 56);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 248, ObjectType, v15);
  if (*(unsigned char *)(a8 + 40) == 1)
  {
    sub_10002F0C8();
    uint64_t v17 = swift_allocError();
    *(void *)uint64_t v18 = 2;
    *(unsigned char *)(v18 + 8) = 3;
    return v17;
  }
  uint64_t v19 = *(void *)(a8 + 16);
  if (!v19)
  {
LABEL_13:
    sub_1000B5AB0();
    uint64_t v17 = swift_allocError();
    *uint64_t v25 = 1;
    return v17;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  swift_unknownObjectRetain();
  swift_retain();
  if (!v20)
  {
LABEL_11:
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v21 = *(void *)(a8 + 24);
    if (v21) {
      BOOL v22 = v20 == v21;
    }
    else {
      BOOL v22 = 0;
    }
    if (v22)
    {
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_13;
    }
    uint64_t v23 = ChannelHandlerContext.handler.getter();
    swift_unknownObjectRelease();
    if (v23 == a4) {
      break;
    }
    uint64_t v24 = *(void *)(v20 + 16);
    swift_retain();
    swift_release();
    uint64_t v20 = v24;
    if (!v24) {
      goto LABEL_11;
    }
  }
  swift_unknownObjectRelease();
  uint64_t v17 = sub_1000B6D5C(a1, a2, a3, v20, a6, a7, a8);
  swift_release();
  return v17;
}

uint64_t sub_1000B6D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a7 + 56);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 280, ObjectType, v13);
  if (*(unsigned char *)(a7 + 40) == 1)
  {
    sub_10002F0C8();
    uint64_t result = swift_allocError();
    *(void *)uint64_t v16 = 2;
    *(unsigned char *)(v16 + 8) = 3;
  }
  else
  {
    uint64_t v20 = a5;
    if (a2)
    {
      uint64_t v17 = a2;
    }
    else
    {
      a1 = sub_1000AEE40();
      uint64_t v17 = v18;
    }
    type metadata accessor for ChannelHandlerContext();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v19 = sub_1000B5418(a1, v17, a3, a7);
    v20(v19, a4);
    sub_1000AEEF0();
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_1000B6EBC()
{
  return sub_1000B5258();
}

uint64_t sub_1000B6EF4(uint64_t a1, uint64_t a2)
{
  return sub_1000B5354(a1, *(void *)a2, *(unsigned char *)(a2 + 8), (void (*)(uint64_t, void))sub_1001FB58C);
}

uint64_t sub_1000B6F2C(uint64_t a1, uint64_t a2)
{
  return sub_1000B52D4(a1, *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)(*(unsigned __int16 *)(a2 + 28) | (*(unsigned __int8 *)(a2 + 30) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 31) << 56));
}

uint64_t sub_1000B6F68(uint64_t a1, uint64_t a2)
{
  return sub_1000B5354(a1, *(void *)a2, *(unsigned char *)(a2 + 8), (void (*)(uint64_t, void))sub_1001FB9CC);
}

uint64_t sub_1000B6FA0(uint64_t a1, uint64_t a2)
{
  return sub_1000B5354(a1, *(void *)a2, *(unsigned char *)(a2 + 8), (void (*)(uint64_t, void))sub_1001FB9F8);
}

uint64_t sub_1000B6FD8()
{
  return sub_1000B6B2C();
}

uint64_t sub_1000B6FF0()
{
  return sub_1000B6FA0(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B6FFC()
{
  return sub_1000B7014();
}

uint64_t sub_1000B7014()
{
  sub_1000B7D58();
  v0(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return _swift_deallocObject(v1, 41, 7);
}

uint64_t sub_1000B7060()
{
  return sub_1000B53E0(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B706C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return sub_10003C360(a1);
  }
}

uint64_t sub_1000B7078()
{
  return sub_1000B6B2C();
}

uint64_t sub_1000B7090(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return a3();
  }
}

uint64_t sub_1000B70A0()
{
  return sub_1000B6F68(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B70AC()
{
  swift_release();
  sub_1000B7100(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned int *)(v0 + 48) | ((unint64_t)(*(unsigned __int16 *)(v0 + 52) | (*(unsigned __int8 *)(v0 + 54) << 16)) << 32), *(unsigned char *)(v0 + 55));
  uint64_t v1 = sub_1000B7BF8();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000B7100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1000B714C()
{
  return sub_1000B6F2C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B7158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_errorRetain();
  }
  else
  {
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_1000B71A4()
{
  return sub_1000B71BC();
}

uint64_t sub_1000B71BC()
{
  sub_1000B7D58();
  v0(*(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
  return _swift_deallocObject(v1, 33, 7);
}

uint64_t sub_1000B7208()
{
  return sub_1000B6EF4(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B7214()
{
  swift_release();
  sub_1000B7264(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned int *)(v0 + 40) | ((unint64_t)(*(unsigned __int16 *)(v0 + 44) | (*(unsigned __int8 *)(v0 + 46) << 16)) << 32), *(unsigned char *)(v0 + 47));
  uint64_t v1 = sub_10004F264();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000B7264(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_errorRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_1000B7270()
{
  return sub_1000B6EBC();
}

uint64_t sub_1000B727C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_errorRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_1000B7290(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    return a1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000B72D8()
{
  unint64_t result = qword_10030ECB0;
  if (!qword_10030ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030ECB0);
  }
  return result;
}

uint64_t sub_1000B7324()
{
  return sub_1000B71BC();
}

uint64_t sub_1000B733C()
{
  return sub_10013F3A8(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B7348()
{
  return sub_1000B6B2C();
}

uint64_t sub_1000B7360()
{
  return sub_1000B57EC(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1000B736C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_1000B7378()
{
  return sub_1000B6B2C();
}

BOOL sub_1000B7390(uint64_t a1)
{
  return sub_1000AF650(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000B7398()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10007D954(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000B73E8()
{
  return sub_1000AE9AC();
}

uint64_t sub_1000B7410()
{
  return sub_1000B71BC();
}

uint64_t destroy for ChannelPipeline.ChannelHandlerDebugInfo()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelPipeline.ChannelHandlerDebugInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChannelPipeline.ChannelHandlerDebugInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChannelPipeline.ChannelHandlerDebugInfo(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChannelPipeline.ChannelHandlerDebugInfo()
{
  return &type metadata for ChannelPipeline.ChannelHandlerDebugInfo;
}

uint64_t sub_1000B75C0()
{
  sub_10003C350(v0);
  return v1;
}

void sub_1000B7604()
{
  CallbackList._run()();
}

uint64_t sub_1000B7620()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7658()
{
  return swift_getObjectType();
}

uint64_t sub_1000B767C()
{
  return v0;
}

void sub_1000B76D8()
{
  sub_100034BF0();
}

void sub_1000B76FC()
{
  sub_100034BF0();
}

uint64_t sub_1000B7720()
{
  return v0;
}

uint64_t sub_1000B7744()
{
  return v0;
}

uint64_t sub_1000B7754(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1000B7764(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1000B7770()
{
  sub_1000B736C(v1, v0);
  return swift_retain();
}

uint64_t sub_1000B77A8()
{
  return swift_getObjectType();
}

uint64_t sub_1000B77C4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B77E0()
{
  return swift_getObjectType();
}

__n128 sub_1000B7828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  v16[24] = a14;
  *(void *)&unsigned char v16[16] = a13;
  *(void *)&uint64_t v16[8] = a12;
  *(void *)uint64_t v16 = a11;
  *(void *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 24) = a9;
  *(_OWORD *)(a1 + 40) = a10;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v16;
  __n128 result = *(__n128 *)&v16[9];
  *(_OWORD *)(a1 + 65) = *(_OWORD *)&v16[9];
  return result;
}

uint64_t sub_1000B7868()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7888()
{
  return swift_allocObject();
}

uint64_t sub_1000B78C8()
{
  return swift_getObjectType();
}

uint64_t sub_1000B78F4()
{
  return v0;
}

uint64_t sub_1000B7908()
{
  return sub_1000AE91C();
}

uint64_t sub_1000B7924()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7944()
{
  return swift_getObjectType();
}

void sub_1000B7964()
{
  *(void *)(v2 + 16) = v0;
  uint64_t v5 = v2 + 16 * v1;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v3;
}

uint64_t sub_1000B7980()
{
  return swift_getObjectType();
}

uint64_t sub_1000B79A8()
{
  return swift_getObjectType();
}

uint64_t sub_1000B79C0()
{
  return sub_10001B070();
}

uint64_t sub_1000B79E8()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v6 = v1 + 16 * v2;
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v4;
  return sub_10024FDC0();
}

BOOL sub_1000B7A54@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_1000B7A6C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_1000B7A84()
{
  sub_100039334();
}

void sub_1000B7AB4()
{
  sub_1000392E4();
}

uint64_t sub_1000B7B00()
{
  return v0;
}

uint64_t sub_1000B7B18()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, v5, a5, v6);
}

uint64_t sub_1000B7B70(uint64_t a1)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 531, v2, v1);
}

uint64_t sub_1000B7B94()
{
  return swift_retain();
}

uint64_t sub_1000B7BAC()
{
  return v0;
}

uint64_t sub_1000B7BC4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B7BF8()
{
  return v0;
}

uint64_t sub_1000B7C08()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7C28()
{
  return v0;
}

void sub_1000B7C3C()
{
  sub_100034BF0();
}

void sub_1000B7C5C(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
}

uint64_t sub_1000B7C68()
{
  sub_10004F084(v1, v0);
  return swift_retain();
}

uint64_t sub_1000B7CB4()
{
  return v0;
}

uint64_t sub_1000B7CC8()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7CE8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1000B7D08()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B7D20()
{
  return swift_getObjectType();
}

uint64_t sub_1000B7D38()
{
  return v0;
}

uint64_t sub_1000B7D58()
{
  return swift_release();
}

uint64_t sub_1000B7D7C()
{
  return v0;
}

uint64_t sub_1000B7D9C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000B7DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for InAppBuyRoute.AdditionalBuyOptions();
  uint64_t v11 = a5 + v10[11];
  uint64_t v12 = sub_10024E030();
  sub_1000195B4(v11, 1, 1, v12);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a4;
  *(void *)(a5 + 24) = a3;
  swift_retain();
  sub_1000AC6D0(v11, (uint64_t *)&unk_10030FD70);
  sub_1000195B4(v11, 1, 1, v12);
  type metadata accessor for OctaneSubscription();
  BOOL v13 = swift_dynamicCastClass() != 0;
  uint64_t result = swift_release();
  *(unsigned char *)(a5 + v10[12]) = v13;
  *(unsigned char *)(a5 + v10[13]) = 0;
  return result;
}

uint64_t sub_1000B7ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (__n128 *)__chkstk_darwin(a1, a2);
  uint64_t v4 = v3;
  sub_1000B9B48((uint64_t)v28);
  sub_10005CF84((uint64_t)v28, (uint64_t)v35, &qword_10030ED40);
  sub_10005CF84((uint64_t)v28, (uint64_t)__src, &qword_10030ED40);
  if (sub_1000BFAD4((uint64_t)__src) == 1)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10024E1F0();
    uint64_t v6 = (void *)sub_1000ACE40(v5, (uint64_t)qword_10034C0E0);
    os_log_type_t v7 = sub_10024EE10();
    if (sub_1000C200C(v7))
    {
      uint64_t v8 = (_WORD *)sub_10003FD28();
      sub_1000C2158(v8);
      sub_1000C20B0((void *)&_mh_execute_header, v9, v10, "Failed to decode in-app buy request");
      sub_1000C211C();
    }

    sub_1000CB5C8(0x7571657220646142, 0xEB00000000747365, 6, (uint64_t)__dst);
    uint64_t v11 = __dst[0];
    uint64_t v12 = __dst[1];
    uint64_t v13 = __dst[2];
    uint64_t v14 = __dst[3];
    unint64_t v15 = LODWORD(__dst[4]) | ((unint64_t)WORD2(__dst[4]) << 32) | ((unint64_t)BYTE6(__dst[4]) << 48);
    sub_100022D68();
    sub_100049038();
    uint64_t v16 = sub_100022D50();
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = 0;
    uint64_t result = sub_1000C2440(v16, 21);
  }
  else
  {
    memcpy(__dst, __src, 0x369uLL);
    sub_1000B8654(__dst, v25);
    sub_1000BFAEC((uint64_t)v28);
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    sub_10001C2A8(v25, v26);
    void v24[3] = v17;
    uint64_t v19 = *(void *)(v18 + 8);
    v24[4] = v19;
    sub_1000709B8(v24);
    (*(void (**)(void))(*(void *)(v17 - 8) + 16))();
    sub_100212A38(v2, v17, v19, (uint64_t)v29);
    uint64_t v11 = v29[0];
    uint64_t v12 = v29[1];
    uint64_t v13 = v29[2];
    uint64_t v14 = v29[3];
    uint64_t v20 = v30;
    uint64_t v21 = v31;
    uint64_t v22 = v32;
    sub_10001C2EC((uint64_t)v24);
    unint64_t v15 = v20 | (v21 << 32) | (v22 << 48);
    sub_100022D68();
    sub_100049038();
    uint64_t v16 = sub_100022D50();
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = 0;
    sub_1000C2440(v16, 3);
    uint64_t result = sub_10001C2EC((uint64_t)v25);
  }
  *(void *)uint64_t v4 = v16;
  *(void *)(v4 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v4 + 16) = 2;
  *(void *)(v4 + 24) = v11;
  *(void *)(v4 + 32) = v12;
  *(void *)(v4 + 40) = v13;
  *(void *)(v4 + 48) = v14;
  *(unsigned char *)(v4 + 62) = BYTE6(v15);
  *(_WORD *)(v4 + 60) = WORD2(v15);
  *(_DWORD *)(v4 + 56) = v15;
  return result;
}

uint64_t sub_1000B8654@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(*v2 + 144);
  uint64_t v126 = *(void *)(*v2 + 152);
  uint64_t v127 = v5;
  uint64_t v6 = type metadata accessor for InAppBuyRoute.AdditionalBuyOptions();
  sub_10001B550();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v110 - v11;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_1000C0494();
    sub_1000290D0();
    *char v43 = 0;
    return swift_willThrow();
  }
  uint64_t v14 = Strong;
  uint64_t v119 = v12;
  os_log_t v120 = v8;
  uint64_t v121 = v6;
  sub_10001C2A8(v2 + 6, v2[9]);
  uint64_t v16 = a1[8];
  uint64_t v15 = a1[9];
  BOOL v123 = sub_10008A674();
  uint64_t v124 = v2;
  sub_1000AD160(v2 + 6, v2[9]);
  uint64_t v122 = v16;
  uint64_t v125 = v15;
  uint64_t v17 = sub_10008A5FC(v16, v15);
  sub_10005CF84((uint64_t)(a1 + 66), (uint64_t)&v138, &qword_10030ED60);
  sub_10005CF84((uint64_t)&v138, (uint64_t)&v139, &qword_10030ED60);
  char v18 = v139;
  if (v139 != 2)
  {
    unint64_t v19 = a1[68];
    if (v19)
    {
      uint64_t v118 = v17;
      uint64_t v20 = a1[67];
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_10024E1F0();
      sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
      swift_bridgeObjectRetain();
      sub_1000C0148(a1);
      swift_bridgeObjectRetain();
      sub_1000C0148(a1);
      uint64_t v22 = sub_10024E1D0();
      os_log_type_t v23 = sub_10024EE30();
      uint64_t v24 = (uint8_t *)v23;
      if (os_log_type_enabled(v22, v23))
      {
        sub_1000AC834();
        LODWORD(v127) = v24;
        uint64_t v126 = sub_1000C232C();
        *(void *)&long long v131 = v126;
        sub_1000C2580(4.8151e-34);
        *(void *)&v130[0] = sub_1000F3F3C(v20, v19, (uint64_t *)&v131);
        uint64_t v116 = v14;
        sub_10024F100();
        swift_bridgeObjectRelease_n();
        sub_1000C22B8();
        os_log_t v120 = v22;
        uint64_t v25 = a1;
        unint64_t v26 = v125;
        swift_bridgeObjectRetain();
        uint64_t v121 = v20;
        uint64_t v27 = v122;
        *(void *)&v130[0] = sub_1000F3F3C(v122, v26, (uint64_t *)&v131);
        uint64_t v28 = (uint64_t *)v115;
        sub_10024F100();
        swift_bridgeObjectRelease();
        sub_1000C0BBC(v25);
        sub_1000C0BBC(v25);
        os_log_t v29 = v120;
        _os_log_impl((void *)&_mh_execute_header, v120, (os_log_type_t)v127, "Handling did consent to price increase for subscription group: \"%s\"; app: \"%s\".",
          v24,
          0x16u);
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();

        a2 = v28;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1000C0BBC(a1);
        sub_1000C0BBC(a1);

        unint64_t v26 = v125;
        uint64_t v27 = v122;
      }
      sub_1000BEA14(v18 & 1, v27, v26, v123, a2);
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  unint64_t v30 = a1[18];
  if (!v30) {
    goto LABEL_18;
  }
  uint64_t v31 = a1[17];
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1000C24C0();
  uint64_t v117 = sub_1000FE198(v32, v33);
  if (!v117)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1000C0494();
    sub_1000290D0();
    sub_1000C2220(v45, 1);
    swift_unknownObjectRelease();
    return swift_release();
  }
  sub_10005CF84((uint64_t)(a1 + 12), (uint64_t)&v137, &qword_10030ED60);
  sub_10005CF84((uint64_t)&v137, (uint64_t)&v140, &qword_10030ED60);
  uint64_t v118 = v17;
  if (v140 == 2 || (v140 & 1) == 0)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_10024E1F0();
    sub_10001B0E8(v34, (uint64_t)qword_10034C0E0);
    sub_1000C0148(a1);
    sub_1000C0148(a1);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_10024E1D0();
    os_log_type_t v36 = sub_10024EE30();
    if (sub_1000C23E8(v36))
    {
      sub_1000AC834();
      uint64_t v115 = sub_1000C232C();
      uint64_t v116 = v14;
      *(void *)&v130[0] = v115;
      LODWORD(OctaneXPCServiceDelegate.ivars) = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_1000F3F3C(v31, v30, (uint64_t *)v130);
      uint64_t v114 = v35;
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      sub_1000C22B8();
      uint64_t v37 = a1;
      unint64_t v38 = v125;
      swift_bridgeObjectRetain();
      uint64_t v39 = v122;
      uint64_t v129 = sub_1000F3F3C(v122, v38, (uint64_t *)v130);
      uint64_t v40 = v38;
      a1 = v37;
      sub_10024F100();
      swift_bridgeObjectRelease();
      sub_1000C0BBC(v37);
      sub_1000C0BBC(v37);
      unint64_t v41 = v114;
      sub_1000C23C0((void *)&_mh_execute_header, v114, v42, "Received confirmed in-app buy request of \"%s\" for \"%s\"");
      swift_arrayDestroy();
      uint64_t v14 = v116;
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1000C0BBC(a1);
      sub_1000C0BBC(a1);

      uint64_t v40 = v125;
      uint64_t v39 = v122;
    }
    swift_bridgeObjectRetain();
    uint64_t v46 = v117;
    swift_retain();
    LOBYTE(v47) = v123;
    uint64_t v48 = (uint64_t)v119;
    sub_1000B7DE0(v39, v40, v46, v123, (uint64_t)v119);
    swift_unknownObjectRetain();
    unint64_t v49 = v124;
    uint64_t v50 = sub_1000BAB88((uint64_t *)v130, a1, v48, v14);
    swift_unknownObjectRelease();

    ((void (*)(uint64_t, uint64_t))v120[1].isa)(v48, v121);
    goto LABEL_24;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_10024E1F0();
  uint64_t v61 = sub_10001B0E8(v60, (uint64_t)qword_10034C0E0);
  sub_1000C0148(a1);
  swift_bridgeObjectRetain();
  sub_1000C0148(a1);
  swift_bridgeObjectRetain();
  uint64_t v114 = v61;
  uint64_t v62 = sub_10024E1D0();
  os_log_type_t v63 = sub_10024EE30();
  BOOL v64 = sub_1000C23E8(v63);
  uint64_t v112 = v31;
  unint64_t v113 = v30;
  if (v64)
  {
    sub_1000AC834();
    uint64_t v111 = sub_1000C232C();
    *(void *)&v130[0] = v111;
    sub_1000C2580(4.8151e-34);
    uint64_t v65 = sub_1000C24C0();
    uint64_t v68 = sub_1000F3F3C(v65, v66, v67);
    sub_1000C21F0(v68);
    swift_bridgeObjectRelease_n();
    sub_1000C22B8();
    uint64_t v69 = a1;
    unint64_t v70 = v125;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1000F3F3C(v122, v70, (uint64_t *)v130);
    sub_1000C256C(v71);
    a1 = v69;
    a2 = (uint64_t *)v115;
    uint64_t v14 = v116;
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_1000C0BBC(v69);
    sub_1000C0BBC(v69);
    sub_1000C23C0((void *)&_mh_execute_header, v62, v72, "Received initial in-app buy request of \"%s\" for \"%s\"");
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1000C0BBC(a1);
    sub_1000C0BBC(a1);
  }

  uint64_t v73 = v128;
  unint64_t v47 = v123;
  unint64_t v49 = v124;
  sub_1000B9C44((uint64_t)a1, v14);
  if (!v73)
  {
    sub_10002F754(v130, (uint64_t)&v131);
    goto LABEL_54;
  }
  *(void *)&v130[0] = v73;
  swift_errorRetain();
  sub_100019524(&qword_100309768);
  if (!swift_dynamicCast())
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  if (v136 != 7)
  {
    if (v136 == 4)
    {
      swift_errorRelease();
      sub_1000C0148(a1);
      sub_1000C0148(a1);
      sub_1000C0148(a1);
      unint64_t v74 = v113;
      swift_bridgeObjectRetain();
      sub_1000C0148(a1);
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_10024E1D0();
      os_log_type_t v76 = sub_10024EE30();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v115 = (uint64_t)a2;
        uint64_t v116 = v14;
        long long v77 = (uint8_t *)sub_10003FD78();
        uint64_t v111 = swift_slowAlloc();
        uint64_t v129 = v111;
        uint64_t v78 = sub_1000C25F4(4.8152e-34);
        if (v78)
        {
          uint64_t v79 = a1[50];
          unint64_t v80 = v78;
        }
        else
        {
          unint64_t v80 = 0xE300000000000000;
          uint64_t v79 = 7104878;
        }
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_1000F3F3C(v79, v80, &v129);
        sub_1000C22E8(v86);
        swift_bridgeObjectRelease();
        sub_1000C0BBC(a1);
        sub_1000C0BBC(a1);
        sub_1000C25D4();
        uint64_t v87 = sub_1000F3F3C(v112, v47, &v129);
        sub_1000C2138(v87);
        swift_bridgeObjectRelease_n();
        sub_1000C25B4();
        uint64_t v88 = sub_1000F3F3C(v122, v74, &v129);
        sub_1000C2138(v88);
        swift_bridgeObjectRelease();
        sub_1000C0BBC(a1);
        sub_1000C0BBC(a1);
        os_log_type_t v89 = v128;
        Swift::String v90 = "Handling request for in-eligible ad-hoc offer \"%s\" for \"%s\" and app \"%s\".";
LABEL_52:
        _os_log_impl((void *)&_mh_execute_header, v75, v89, v90, v77, 0x20u);
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();

        a2 = (uint64_t *)v115;
        unint64_t v49 = v124;
        LOBYTE(v47) = v123;
        goto LABEL_53;
      }
      goto LABEL_47;
    }
    goto LABEL_42;
  }
  swift_errorRelease();
  sub_1000C0148(a1);
  sub_1000C0148(a1);
  sub_1000C0148(a1);
  unint64_t v81 = v113;
  swift_bridgeObjectRetain();
  sub_1000C0148(a1);
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_10024E1D0();
  os_log_type_t v82 = sub_10024EE30();
  if (os_log_type_enabled(v75, v82))
  {
    uint64_t v115 = (uint64_t)a2;
    uint64_t v116 = v14;
    long long v77 = (uint8_t *)sub_10003FD78();
    uint64_t v111 = swift_slowAlloc();
    uint64_t v129 = v111;
    uint64_t v83 = sub_1000C25F4(4.8152e-34);
    if (v83)
    {
      uint64_t v84 = a1[50];
      unint64_t v85 = v83;
    }
    else
    {
      unint64_t v85 = 0xE100000000000000;
      uint64_t v84 = 45;
    }
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_1000F3F3C(v84, v85, &v129);
    sub_1000C22E8(v91);
    swift_bridgeObjectRelease();
    sub_1000C0BBC(a1);
    sub_1000C0BBC(a1);
    sub_1000C25D4();
    uint64_t v92 = sub_1000F3F3C(v112, v47, &v129);
    sub_1000C2138(v92);
    swift_bridgeObjectRelease_n();
    sub_1000C25B4();
    uint64_t v93 = sub_1000F3F3C(v122, v81, &v129);
    sub_1000C2138(v93);
    swift_bridgeObjectRelease();
    sub_1000C0BBC(a1);
    sub_1000C0BBC(a1);
    os_log_type_t v89 = v128;
    Swift::String v90 = "Handling request for ineligible winback offer \"%s\" for \"%s\" and app \"%s.\"";
    goto LABEL_52;
  }
LABEL_47:
  sub_1000C0BBC(a1);
  sub_1000C0BBC(a1);
  swift_bridgeObjectRelease_n();
  sub_1000C0BBC(a1);
  sub_1000C0BBC(a1);

LABEL_53:
  sub_1000BE918(v47 & 1, &v131);
  swift_errorRelease();
LABEL_54:
  if ((v47 & 1) == 0 || (uint64_t v94 = *((unsigned __int8 *)sub_10001C2A8(&v131, v132) + 176), v94 == 22))
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v95 = 892416309;
  if (sub_100098EB0(v94) == 892416309 && v96 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v95 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if ((v95 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v49 = v124;
      goto LABEL_25;
    }
  }
  uint64_t v128 = 0;
  sub_1000C0148(a1);
  sub_1000C0148(a1);
  unint64_t v98 = v113;
  swift_bridgeObjectRetain();
  uint64_t v99 = sub_10024E1D0();
  os_log_type_t v100 = sub_10024EE30();
  if (sub_1000C23E8(v100))
  {
    sub_1000AC834();
    uint64_t v114 = sub_1000C232C();
    *(void *)&v130[0] = v114;
    *(_DWORD *)uint64_t v95 = 136315394;
    uint64_t v115 = (uint64_t)a2;
    swift_bridgeObjectRetain();
    uint64_t v101 = sub_1000F3F3C(v112, v98, (uint64_t *)v130);
    sub_1000C21F0(v101);
    swift_bridgeObjectRelease_n();
    sub_1000C22B8();
    swift_bridgeObjectRetain();
    uint64_t v102 = v99;
    uint64_t v103 = v122;
    uint64_t v104 = sub_1000F3F3C(v122, v125, (uint64_t *)v130);
    sub_1000C256C(v104);
    uint64_t v105 = v125;
    a2 = (uint64_t *)v115;
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_1000C0BBC(a1);
    sub_1000C0BBC(a1);
    sub_1000C23C0((void *)&_mh_execute_header, v102, v106, "Simulating confirmed in-app buy request of \"%s\" for \"%s\" because dialogs are disabled.");
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();

    LOBYTE(v47) = v123;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1000C0BBC(a1);
    sub_1000C0BBC(a1);

    LOBYTE(v47) = v123;
    uint64_t v103 = v122;
    uint64_t v105 = v125;
  }
  swift_bridgeObjectRetain();
  uint64_t v107 = v117;
  swift_retain();
  uint64_t v108 = (uint64_t)v119;
  sub_1000B7DE0(v103, v105, v107, 1, (uint64_t)v119);
  unint64_t v49 = v124;

  sub_10003FDC8();
  v109();
  sub_10001C2EC((uint64_t)&v131);
LABEL_24:
  sub_10002F754(v130, (uint64_t)&v131);
LABEL_25:
  sub_10005CF84((uint64_t)(a1 + 70), (uint64_t)v134, &qword_10030A860);
  sub_10005CF84((uint64_t)v134, (uint64_t)v135, &qword_10030A860);
  if (sub_1000C066C((uint64_t)v135) != 1)
  {
    uint64_t v51 = a2;
    char v52 = v135[312];
    sub_1000AD160(v49 + 11, v49[14]);
    uint64_t v53 = (os_unfair_lock_s *)*((void *)off_10030A8E0 + 2);
    swift_retain();
    os_unfair_lock_lock(v53);
    char v54 = v52 & 1;
    a2 = v51;
    LOBYTE(OBJC_CLASS____TtC25ASOctaneSupportXPCService29InAppPendingTransactionsRoute.info) = v54;
    os_unfair_lock_unlock(v53);
    swift_release();
  }
  if (v47)
  {
    unint64_t v55 = a2;
    uint64_t v56 = v132;
    uint64_t v57 = v133;
    sub_100051B64((uint64_t)&v131, v132);
    uint64_t v58 = *(void (**)(void, uint64_t, uint64_t))(v57 + 112);
    uint64_t v59 = v57;
    a2 = v55;
    v58(0, v56, v59);
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return sub_10002F754(&v131, (uint64_t)a2);
}

uint64_t sub_1000B95C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_10001C2A8(v7 + 6, v7[9]);
  uint64_t v64 = sub_10008A4B8(a4, a5);
  uint64_t v67 = v14;
  sub_10001C2A8(v7 + 6, v7[9]);
  uint64_t v68 = sub_10008A7F0();
  os_log_type_t v76 = v7;
  uint64_t v15 = a5;
  os_log_type_t v63 = v7 + 6;
  sub_1000AD160(v7 + 6, v7[9]);
  sub_10008AFE8();
  uint64_t v61 = v70[1];
  uint64_t v62 = v70[0];
  uint64_t v59 = v70[3];
  uint64_t v60 = v70[2];
  uint64_t v57 = v70[5];
  uint64_t v58 = v70[4];
  uint64_t v55 = v70[7];
  uint64_t v56 = v70[6];
  uint64_t v53 = v70[9];
  uint64_t v54 = v70[8];
  type metadata accessor for OctaneSubscription();
  uint64_t v16 = swift_dynamicCastClass();
  uint64_t v66 = a1;
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    sub_10005CF84(a1 + 400, (uint64_t)v72, &qword_10030AA30);
    sub_10005CF84((uint64_t)v72, (uint64_t)&v73, &qword_10030AA30);
    unint64_t v18 = v74;
    if (v74)
    {
      uint64_t v19 = v73;
      swift_retain();
      uint64_t v20 = a4;
      uint64_t v21 = v76;
      uint64_t v22 = sub_1000BEFBC(v19, v18, (uint64_t)v17);
      if (v8)
      {
        swift_bridgeObjectRelease();
LABEL_12:
        swift_release();
        sub_10001DB0C((uint64_t)v70);
        return swift_release();
      }
      if (v22)
      {
        uint64_t v51 = v22;
        unint64_t v18 = 0;
        uint64_t v25 = 0;
      }
      else
      {
        sub_1000C24E0();
        uint64_t v25 = 0;
        unint64_t v18 = sub_1000BF3D4(v33, v34, v35);
        uint64_t v51 = 0;
      }
    }
    else
    {
      swift_retain();
      uint64_t v51 = 0;
      uint64_t v25 = v8;
      uint64_t v20 = a4;
      uint64_t v21 = v76;
    }
    sub_10005CF84(v66 + 512, (uint64_t)v71, &qword_10030AA30);
    sub_10005CF84((uint64_t)v71, (uint64_t)v75, &qword_10030AA30);
    if (v75[1])
    {
      sub_1000C24E0();
      os_log_t v29 = sub_1000BF578(v26, v27, v28);
      if (v25)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      unint64_t v49 = v18;
      uint64_t v32 = v17[17];
      if (!v32)
      {
        os_log_type_t v76 = (uint64_t *)v29;
        goto LABEL_23;
      }
      if (v29)
      {
        os_log_type_t v76 = (uint64_t *)v29;
        if (LOBYTE(v29[13].isa) != 1) {
          goto LABEL_23;
        }
      }
      else
      {
        os_log_type_t v76 = 0;
      }
    }
    else
    {
      unint64_t v49 = v18;
      os_log_type_t v76 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = v17[17];
      if (!v32) {
        goto LABEL_24;
      }
    }
    sub_10001C2A8(v21 + 11, v21[14]);
    swift_retain();
    if (sub_10009FBA0())
    {
      swift_release();
LABEL_23:
      uint64_t v31 = 0;
      goto LABEL_24;
    }
    uint64_t v31 = v32;
LABEL_24:
    uint64_t v48 = v31;
    sub_100027788((uint64_t)(v21 + 11), (uint64_t)v69);
    os_log_type_t v36 = sub_10001C2A8(v69, v69[3]);
    sub_100019524(&qword_1003090E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100255FB0;
    uint64_t v38 = v17[25];
    *(void *)(inited + 32) = v17[24];
    *(void *)(inited + 40) = v38;
    uint64_t v39 = *v36;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v40 = (unint64_t)sub_1000FFCF4(inited, v39);
    swift_setDeallocating();
    sub_10020BB20();
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v24 = a2;
    if (v41)
    {
      sub_10014ED88(0, (v40 & 0xC000000000000001) == 0, v40);
      if ((v40 & 0xC000000000000001) != 0)
      {
        sub_10024F380();
        swift_unknownObjectRelease();
      }
    }
    uint64_t v50 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001C2EC((uint64_t)v69);
    os_log_type_t v23 = v76;
    BOOL v47 = v41 != 0;
    goto LABEL_30;
  }
  uint64_t v50 = a4;
  BOOL v47 = 0;
  uint64_t v51 = 0;
  uint64_t v48 = 0;
  unint64_t v49 = 0;
  os_log_type_t v23 = 0;
  uint64_t v21 = v76;
  uint64_t v24 = a2;
LABEL_30:
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v42 = sub_1001AF734();
  uint64_t v44 = v43;
  swift_retain();
  sub_1001AFBC8();
  os_log_type_t v76 = v45;
  sub_1000AD160(v63, v21[9]);
  char v46 = sub_10008B4BC();
  uint64_t result = swift_release();
  *(void *)a7 = v24;
  *(void *)(a7 + 8) = a3;
  *(void *)(a7 + 16) = v49;
  *(void *)(a7 + 24) = v23;
  *(void *)(a7 + 32) = v51;
  *(void *)(a7 + 40) = v64;
  *(void *)(a7 + 48) = v67;
  *(void *)(a7 + 56) = v50;
  *(void *)(a7 + 64) = v15;
  *(void *)(a7 + 72) = v42;
  *(void *)(a7 + 80) = v44;
  *(void *)(a7 + 88) = a6;
  *(void *)(a7 + 96) = v48;
  *(void *)(a7 + 104) = v68;
  *(void *)(a7 + 112) = v62;
  *(void *)(a7 + 120) = v61;
  *(void *)(a7 + 128) = v60;
  *(void *)(a7 + 136) = v59;
  *(void *)(a7 + 144) = v58;
  *(void *)(a7 + 152) = v57;
  *(void *)(a7 + 160) = v56;
  *(void *)(a7 + 168) = v55;
  *(void *)(a7 + 176) = v54;
  *(void *)(a7 + 184) = v53;
  *(_OWORD *)(a7 + 272) = 0u;
  *(_OWORD *)(a7 + 288) = 0u;
  *(_OWORD *)(a7 + 240) = 0u;
  *(_OWORD *)(a7 + 256) = 0u;
  *(_OWORD *)(a7 + 208) = 0u;
  *(_OWORD *)(a7 + 224) = 0u;
  *(_OWORD *)(a7 + 192) = 0u;
  *(void *)(a7 + 304) = v76;
  *(unsigned char *)(a7 + 312) = v46;
  *(unsigned char *)(a7 + 313) = v47;
  return result;
}

uint64_t sub_1000B9B48@<X0>(uint64_t a1@<X8>)
{
  sub_100216970();
  sub_10005CF84((uint64_t)v6, (uint64_t)v8, &qword_10030ED40);
  sub_10005CF84((uint64_t)v8, (uint64_t)v9, &qword_10030ED40);
  if (sub_1000BFAD4((uint64_t)v9) != 1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_1000F2780(v2, (uint64_t)v5);
    debugOnly(_:)(v5);
    sub_10005CF84((uint64_t)v7, (uint64_t)v4, &qword_10030A860);
    sub_1000C12F4(v4);
    sub_10005CF84((uint64_t)v5, (uint64_t)v7, &qword_10030A860);
  }
  sub_10005CF84((uint64_t)v6, (uint64_t)v4, &qword_10030ED40);
  return sub_10005CF84((uint64_t)v4, a1, &qword_10030ED40);
}

uint64_t sub_1000B9C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __chkstk_darwin(a1, a2);
  char v151 = v5;
  uint64_t v7 = v6;
  uint64_t v165 = v9;
  uint64_t v166 = v8;
  uint64_t v154 = v10;
  uint64_t v157 = v2;
  uint64_t v11 = v4;
  uint64_t v13 = v12;
  uint64_t v158 = *v2;
  uint64_t v14 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v15 = sub_100026018(v14);
  __chkstk_darwin(v15, v16);
  sub_10002059C();
  uint64_t v19 = v18 - v17;
  uint64_t v161 = sub_10024E030();
  sub_10001B550();
  uint64_t v21 = v20;
  __chkstk_darwin(v22, v23);
  sub_10002059C();
  uint64_t v26 = v25 - v24;
  uint64_t v164 = v11;
  sub_1001AFE20();
  if ((v27 & 1) == 0)
  {
    LOBYTE(v171[0]) = 0;
    v170[0] = 1;
    v13[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
    void v13[4] = sub_1000C0578();
    uint64_t v33 = (void *)swift_allocObject();
    *uint64_t v13 = (uint64_t)v33;
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = _swiftEmptyArrayStorage;
    uint64_t v34 = sub_1000C20D0((uint64_t)v33, v171[0]);
    uint64_t result = sub_1000C24CC(v34, v170[0]);
    *(void *)(result + 112) = 0;
    *(void *)(result + 120) = 1;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(unsigned char *)(result + 192) = 3;
    *(void *)(result + 200) = 0xD000000000000011;
    *(void *)(result + 208) = 0x800000010027D170;
    *(void *)(result + 216) = 0;
    *(unsigned char *)(result + 224) = 1;
    return result;
  }
  uint64_t v150 = v13;
  type metadata accessor for OctaneSubscription();
  uint64_t v28 = swift_dynamicCastClass();
  if (!v28) {
    goto LABEL_16;
  }
  uint64_t v147 = v28;
  uint64_t v141 = v2 + 11;
  sub_10001C2A8(v2 + 11, v2[14]);
  swift_retain();
  sub_10024E010();
  os_log_t v29 = (void *)sub_10009FE0C();
  unint64_t v30 = *(void (**)(void))(v21 + 8);
  ((void (*)(uint64_t, uint64_t))v30)(v26, v161);
  uint64_t v31 = v30;
  if (!v29)
  {
    swift_release();
    goto LABEL_10;
  }
  sub_1000D9478(4);
  if (v32) {
    goto LABEL_7;
  }
  sub_10005CF84(v164 + 400, (uint64_t)v280, &qword_10030AA30);
  sub_10005CF84((uint64_t)v280, (uint64_t)v282, &qword_10030AA30);
  if (v282[1]) {
    goto LABEL_7;
  }
  sub_10005CF84(v164 + 512, (uint64_t)v279, &qword_10030AA30);
  sub_10005CF84((uint64_t)v279, (uint64_t)v283, &qword_10030AA30);
  if (v283[1]) {
    goto LABEL_7;
  }
  uint64_t v73 = sub_1000D563C();
  if (!v74) {
    goto LABEL_7;
  }
  if (v73 == *(void **)(v147 + 80) && v74 == *(void *)(v147 + 88))
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  char v137 = sub_10024FA60();
  swift_bridgeObjectRelease();
  if ((v137 & 1) == 0)
  {
LABEL_7:
    swift_release();

LABEL_10:
    sub_10001C2A8(v141, v157[14]);
    swift_retain();
    sub_10024E010();
    sub_100100BAC();
    uint64_t v37 = v36;
    sub_1000ACADC();
    v30();
    if (v37)
    {
      sub_10001C2A8(v157 + 6, v157[9]);
      sub_1000D427C();
      sub_10008A5FC(v166, v165);
      uint64_t v38 = sub_1000C2634();
      uint64_t v40 = sub_1000FE9DC(v38, v39);
      swift_bridgeObjectRelease();
      swift_release();
      if (v40)
      {
        sub_1000B95C4(v164, v154, *(void *)(v158 + 152), v166, v165, v7, (uint64_t)v198);
        if (v3)
        {
          swift_release();

          return swift_release();
        }
        uint64_t v163 = v214;
        uint64_t v149 = v216;
        uint64_t v124 = v217;
        uint64_t v126 = v215;
        uint64_t v120 = v219;
        uint64_t v122 = v218;
        uint64_t v116 = v221;
        uint64_t v118 = v220;
        uint64_t v112 = v223;
        uint64_t v114 = v222;
        uint64_t v108 = v225;
        uint64_t v110 = v224;
        uint64_t v160 = v226;
        uint64_t v44 = v204;
        uint64_t v45 = v206;
        uint64_t v134 = v207;
        uint64_t v136 = v205;
        uint64_t v130 = v208;
        uint64_t v132 = v209;
        uint64_t v46 = v210;
        uint64_t v128 = v211;
        uint64_t v47 = v212;
        uint64_t v153 = v202;
        uint64_t v156 = v213;
        uint64_t v143 = v203;
        uint64_t v146 = v201;
        uint64_t v139 = v200;
        uint64_t v48 = swift_dynamicCastClass();
        if (v48)
        {
          uint64_t v105 = v48;
          swift_retain();
          swift_release();
          id v49 = v37;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10009856C(v156);
          uint64_t v156 = v37;
          uint64_t v163 = v40;
          uint64_t v146 = 0;
          uint64_t v149 = v105;
          uint64_t v50 = v143;
          uint64_t v51 = v44;
          uint64_t v53 = v134;
          uint64_t v52 = v136;
          uint64_t v54 = v136;
          uint64_t v55 = v45;
          uint64_t v56 = v134;
          uint64_t v57 = v130;
          uint64_t v58 = v132;
          uint64_t v59 = v132;
          uint64_t v60 = v46;
          uint64_t v61 = v128;
          uint64_t v62 = v128;
          uint64_t v160 = v47;
          uint64_t v63 = v130;
          uint64_t v64 = v153;
        }
        else
        {
          uint64_t v50 = v124;
          uint64_t v64 = v126;
          uint64_t v54 = v120;
          uint64_t v51 = v122;
          uint64_t v56 = v116;
          uint64_t v55 = v118;
          uint64_t v59 = v112;
          uint64_t v57 = v114;
          uint64_t v63 = v130;
          uint64_t v58 = v132;
          uint64_t v53 = v134;
          uint64_t v52 = v136;
          uint64_t v61 = v128;
          uint64_t v62 = v108;
          uint64_t v60 = v110;
        }
        v171[0] = v198[0];
        v171[1] = v198[1];
        v171[2] = v198[2];
        v171[3] = v198[3];
        v171[4] = v198[4];
        *(void *)&v171[5] = v199;
        *((void *)&v171[5] + 1) = v139;
        *(void *)&v171[6] = v146;
        *((void *)&v171[6] + 1) = v153;
        *(void *)&v171[7] = v143;
        *((void *)&v171[7] + 1) = v44;
        *(void *)&v171[8] = v52;
        *((void *)&v171[8] + 1) = v45;
        *(void *)&v171[9] = v53;
        *((void *)&v171[9] + 1) = v63;
        *(void *)&v171[10] = v58;
        *((void *)&v171[10] + 1) = v46;
        *(void *)&v171[11] = v61;
        *((void *)&v171[11] + 1) = v47;
        *(void *)&v171[12] = v156;
        *((void *)&v171[12] + 1) = v163;
        *(void *)&v171[13] = v64;
        *((void *)&v171[13] + 1) = v149;
        *(void *)&v171[14] = v50;
        *((void *)&v171[14] + 1) = v51;
        *(void *)&v171[15] = v54;
        *((void *)&v171[15] + 1) = v55;
        *(void *)&v171[16] = v56;
        *((void *)&v171[16] + 1) = v57;
        *(void *)&v171[17] = v59;
        *((void *)&v171[17] + 1) = v60;
        *(void *)&v171[18] = v62;
        *((void *)&v171[18] + 1) = v160;
        *(void *)&v171[19] = v227;
        WORD4(v171[19]) = v228;
        memcpy(v281, v171, 0x13AuLL);
        sub_1000C0F48((uint64_t)v171);
        sub_100062598(v281, (uint64_t)v229);
        swift_release();

        swift_release();
        sub_1000C1174((uint64_t)v171);
        char v159 = v251;
        uint64_t v152 = v248;
        uint64_t v155 = v250;
        uint64_t v148 = v249;
        char v145 = v247;
        uint64_t v138 = v238;
        uint64_t v142 = v237;
        uint64_t v133 = v240;
        uint64_t v135 = v239;
        uint64_t v129 = v242;
        uint64_t v131 = v241;
        uint64_t v125 = v244;
        uint64_t v127 = v243;
        uint64_t v121 = v246;
        uint64_t v123 = v245;
        unint64_t v162 = v235;
        uint64_t v117 = v232;
        uint64_t v119 = v236;
        uint64_t v115 = v233;
        char v113 = v231;
        char v42 = v230;
        uint64_t v109 = v229[1];
        uint64_t v111 = v229[0];
        uint64_t v43 = v234;
        uint64_t v107 = v229[2];
        uint64_t v41 = v164;
        goto LABEL_22;
      }
    }
    swift_release();
LABEL_16:
    uint64_t v41 = v164;
    uint64_t result = sub_1000B95C4(v164, v154, *(void *)(v158 + 152), v166, v165, v7, (uint64_t)v252);
    if (v3) {
      return result;
    }
    sub_100062598(v252, (uint64_t)v253);
    char v159 = v275;
    uint64_t v152 = v272;
    uint64_t v155 = v274;
    uint64_t v148 = v273;
    char v145 = v271;
    uint64_t v138 = v262;
    uint64_t v142 = v261;
    uint64_t v133 = v264;
    uint64_t v135 = v263;
    uint64_t v129 = v266;
    uint64_t v131 = v265;
    uint64_t v125 = v268;
    uint64_t v127 = v267;
    uint64_t v121 = v270;
    uint64_t v123 = v269;
    unint64_t v162 = v259;
    uint64_t v117 = v256;
    uint64_t v119 = v260;
    uint64_t v115 = v257;
    char v113 = v255;
    char v42 = v254;
    uint64_t v109 = v253[1];
    uint64_t v111 = v253[0];
    uint64_t v43 = v258;
    uint64_t v107 = v253[2];
    goto LABEL_22;
  }
LABEL_40:
  sub_10005CF84(v164 + 560, (uint64_t)v170, &qword_10030A860);
  sub_10005CF84((uint64_t)v170, (uint64_t)v171, &qword_10030A860);
  uint64_t v76 = v158;
  if (sub_1000C066C((uint64_t)v171) == 1) {
    goto LABEL_46;
  }
  if ((BYTE8(v171[19]) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  char v77 = sub_1000C219C();
  swift_bridgeObjectRelease();
  if (v77)
  {
LABEL_45:
    sub_10001C2A8(v141, v157[14]);
    sub_1000195B4(v19, 1, 1, v161);
    sub_10009EA18();
    uint64_t v79 = v78;
    sub_1000AC6D0(v19, (uint64_t *)&unk_10030FD70);
    sub_1000D63A4(3u);
    uint64_t v80 = sub_1000D946C(25);
    sub_1000D6204(v80, v81 & 1);
    sub_10005CF84((uint64_t)v170, (uint64_t)v168, &qword_10030A860);
    sub_1000D79F4(v169);
    uint64_t v76 = v158;
    sub_1000AD160(v141, v157[14]);
    sub_1000A1278(v79, 0);
  }
LABEL_46:
  sub_10024DF60();
  if (qword_100308CE8 != -1) {
    swift_once();
  }
  os_log_type_t v82 = (void *)qword_10030B088;
  Class isa = sub_10024DFB0().super.isa;
  id v84 = [v82 stringFromDate:isa];

  uint64_t v140 = sub_10024E6B0();
  uint64_t v144 = v85;

  sub_1000ACADC();
  v31();
  uint64_t v86 = *(void *)(v76 + 152);
  sub_1000B95C4(v164, v154, v86, v166, v165, v147, (uint64_t)v172);
  if (v3)
  {
    swift_release();

    return swift_bridgeObjectRelease();
  }
  uint64_t v106 = v29;
  uint64_t v87 = v172[11];
  sub_10020F78C();
  uint64_t v88 = (NSDecimal *)*(unsigned __int8 *)(v87 + 112);
  uint64_t v89 = v174;
  if (v174 <= 1) {
    uint64_t v89 = 1;
  }
  if (v88 == 3) {
    Swift::Int v90 = 1;
  }
  else {
    Swift::Int v90 = v89;
  }
  sub_10024EFF0(v88, v90);
  sub_1000C2634();
  sub_10024EFB0();
  memcpy(v278, v173, sizeof(v278));
  uint64_t v91 = sub_1000512DC();
  uint64_t v93 = v92;
  sub_1000C1174((uint64_t)v172);
  sub_10005CF84((uint64_t)v170, (uint64_t)v168, &qword_10030A860);
  BOOL v94 = sub_1000C066C((uint64_t)v168) != 1;
  char v95 = v94 & v169;
  uint64_t v96 = *(void *)(v158 + 144);
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006264C(v166, v165, v140, v144, v91, v93, v151 & 1, v175, v154, v95, v96, v86);
  char v97 = v197;
  uint64_t v98 = v196;
  uint64_t v99 = v194;
  uint64_t v148 = v195;
  char v145 = v193;
  uint64_t v100 = v183;
  uint64_t v135 = v185;
  uint64_t v138 = v184;
  uint64_t v131 = v187;
  uint64_t v133 = v186;
  uint64_t v127 = v189;
  uint64_t v129 = v188;
  uint64_t v123 = v191;
  uint64_t v125 = v190;
  uint64_t v119 = v182;
  uint64_t v121 = v192;
  unint64_t v162 = v181;
  uint64_t v115 = v179;
  uint64_t v117 = v178;
  char v113 = v177;
  char v42 = v176;
  uint64_t v109 = v175[1];
  uint64_t v111 = v175[0];
  uint64_t v43 = v180;
  uint64_t v107 = v175[2];
  sub_10005CF84((uint64_t)v170, (uint64_t)v167, &qword_10030A860);
  char v159 = v97;
  uint64_t v152 = v99;
  uint64_t v155 = v98;
  uint64_t v142 = v100;
  if (sub_1000C066C((uint64_t)v167) != 1)
  {
    if (v167[312])
    {
      char v101 = sub_1000C219C();
      swift_bridgeObjectRelease();
      uint64_t v41 = v164;
      if ((v101 & 1) == 0)
      {
        swift_release();

        goto LABEL_22;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = v164;
    }
    uint64_t v102 = sub_1000BE83C(v41);
    unint64_t v104 = v103;
    swift_release();

    sub_10003F7F4(v43, v162);
    uint64_t v43 = v102;
    unint64_t v162 = v104;
    goto LABEL_22;
  }
  swift_release();

  uint64_t v41 = v164;
LABEL_22:
  sub_10005CF84(v41 + 560, (uint64_t)v277, &qword_10030A860);
  sub_10005CF84((uint64_t)v277, (uint64_t)v284, &qword_10030A860);
  if (sub_1000C066C((uint64_t)v284) == 1) {
    goto LABEL_29;
  }
  if (v284[312])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000C21CC();
    char v65 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if ((v65 & 1) == 0) {
      goto LABEL_29;
    }
  }
  sub_10005CF84(v41 + 480, (uint64_t)v276, &qword_10030AA30);
  sub_10005CF84((uint64_t)v276, (uint64_t)&v285, &qword_10030AA30);
  if (!v286)
  {
LABEL_29:
    uint64_t v68 = 0;
    uint64_t v67 = 0;
    goto LABEL_30;
  }
  sub_1000BEDFC(v285, v286);
  uint64_t v67 = v66;
  uint64_t v68 = sub_1000C056C;
LABEL_30:
  uint64_t v69 = sub_1000BE7AC(v166, v165, (uint64_t)v68, v67);
  swift_bridgeObjectRelease();
  uint64_t v70 = v69[2];
  LOBYTE(v171[0]) = v42;
  v170[0] = 0;
  v150[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
  v150[4] = sub_1000C0578();
  uint64_t v71 = swift_allocObject();
  *uint64_t v150 = v71;
  uint64_t v72 = sub_1000C2634();
  uint64_t result = sub_10003C350(v72);
  *(void *)(v71 + 16) = v111;
  *(void *)(v71 + 24) = v109;
  *(void *)(v71 + 32) = v107;
  *(unsigned char *)(v71 + 40) = v171[0];
  *(unsigned char *)(v71 + 41) = v113;
  *(void *)(v71 + 48) = v117;
  *(void *)(v71 + 56) = v115;
  *(void *)(v71 + 64) = v70;
  *(unsigned char *)(v71 + 72) = v170[0];
  *(void *)(v71 + 80) = v69;
  *(void *)(v71 + 88) = v43;
  *(void *)(v71 + 96) = v162;
  *(void *)(v71 + 104) = v119;
  *(void *)(v71 + 112) = v142;
  *(void *)(v71 + 120) = v138;
  *(void *)(v71 + 128) = v135;
  *(void *)(v71 + 136) = v133;
  *(void *)(v71 + 144) = v131;
  *(void *)(v71 + 152) = v129;
  *(void *)(v71 + 160) = v127;
  *(void *)(v71 + 168) = v125;
  *(void *)(v71 + 176) = v123;
  *(void *)(v71 + 184) = v121;
  *(unsigned char *)(v71 + 192) = v145;
  *(void *)(v71 + 200) = v152;
  *(void *)(v71 + 208) = v148;
  *(void *)(v71 + 216) = v155;
  *(unsigned char *)(v71 + 224) = v159;
  return result;
}

void *sub_1000BAB88(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  char v5 = v4;
  *(void *)&long long v400 = a4;
  v420 = a2;
  v414 = a1;
  uint64_t v7 = *v4;
  uint64_t v8 = type metadata accessor for IAPTransaction();
  uint64_t v9 = sub_10003C680(v8);
  *(void *)&long long v394 = v10;
  __chkstk_darwin(v9, v11);
  sub_1000589AC();
  *(void *)&long long v395 = v12;
  *(void *)&long long v410 = sub_10024E0A0();
  sub_10001B550();
  *(void *)&long long v392 = v13;
  __chkstk_darwin(v14, v15);
  sub_1000589AC();
  *(void *)&long long v391 = v16;
  *(void *)&long long v397 = sub_100019524(&qword_10030E948);
  sub_100025FBC();
  __chkstk_darwin(v17, v18);
  sub_1000AC748();
  *(void *)&long long v389 = v19;
  sub_1000AC774();
  __chkstk_darwin(v20, v21);
  sub_1000ACD10();
  uint64_t v385 = v22;
  uint64_t v386 = sub_100019524(&qword_10030E950);
  sub_100025FBC();
  __chkstk_darwin(v23, v24);
  sub_1000AC748();
  uint64_t v387 = v25;
  sub_1000AC774();
  __chkstk_darwin(v26, v27);
  sub_1000ACD10();
  uint64_t v388 = v28;
  uint64_t v29 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v30 = sub_100026018(v29);
  __chkstk_darwin(v30, v31);
  sub_1000AC748();
  *(void *)&long long v407 = v32;
  sub_1000AC774();
  __chkstk_darwin(v33, v34);
  sub_1000ACA68();
  *(void *)&long long v402 = v35;
  sub_1000AC774();
  __chkstk_darwin(v36, v37);
  sub_1000ACA68();
  *(void *)&long long v393 = v38;
  sub_1000AC774();
  __chkstk_darwin(v39, v40);
  sub_1000ACD10();
  *(void *)&long long v406 = v41;
  uint64_t v42 = sub_100019524(&qword_10030C100);
  uint64_t v43 = sub_100026018(v42);
  __chkstk_darwin(v43, v44);
  sub_1000AC748();
  *(void *)&long long v390 = v45;
  sub_1000AC774();
  __chkstk_darwin(v46, v47);
  sub_1000ACA68();
  *(void *)&long long v401 = v48;
  sub_1000AC774();
  __chkstk_darwin(v49, v50);
  sub_1000ACD10();
  *(void *)&long long v412 = v51;
  *(void *)&long long v413 = sub_10024E030();
  sub_10001B550();
  *(void *)&long long v411 = v52;
  __chkstk_darwin(v53, v54);
  sub_1000AC748();
  *(void *)&long long v398 = v55;
  sub_1000AC774();
  uint64_t v58 = __chkstk_darwin(v56, v57);
  uint64_t v60 = (char *)&v369 - v59;
  __chkstk_darwin(v58, v61);
  sub_1000ACA68();
  *(void *)&long long v405 = v62;
  sub_1000AC774();
  __chkstk_darwin(v63, v64);
  sub_1000ACD10();
  *(void *)&long long v408 = v65;
  uint64_t v66 = *(void *)(v7 + 152);
  *(void *)&long long v416 = *(void *)(v7 + 144);
  *(void *)&long long v415 = v66;
  type metadata accessor for InAppBuyRoute.AdditionalBuyOptions();
  sub_10001B550();
  uint64_t v68 = v67;
  uint64_t v70 = *(void *)(v69 + 64);
  __chkstk_darwin(v71, v72);
  *(void *)&long long v404 = (char *)&v369 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C2528();
  __chkstk_darwin(v73, v74);
  sub_1000ACD10();
  *(void *)&long long v403 = v75;
  sub_1000C2528();
  __chkstk_darwin(v76, v77);
  sub_1000ACD10();
  uint64_t v384 = v78;
  sub_1000C2528();
  __chkstk_darwin(v79, v80);
  sub_1000ACD10();
  *(void *)&long long v409 = v81;
  sub_1000C2528();
  uint64_t v84 = __chkstk_darwin(v82, v83);
  uint64_t v86 = (char *)&v369 - v85;
  uint64_t v88 = __chkstk_darwin(v84, v87);
  uint64_t v424 = *(int *)(__chkstk_darwin(v88, v89) + 52);
  LOBYTE(v7) = *(unsigned char *)(a3 + v424);
  Swift::Int v90 = *(void (**)(void, void))(v68 + 16);
  uint64_t v425 = a3;
  uint64_t v421 = v92;
  v423 = (void *)(v68 + 16);
  v422 = v90;
  v90((char *)&v369 - v91, a3);
  v426 = v5;
  if (v7)
  {
    LODWORD(v417) = 0;
  }
  else
  {
    sub_10001C2A8(v5 + 6, v5[9]);
    LODWORD(v417) = sub_10008A5D8();
  }
  *(void *)&long long v399 = v60;
  uint64_t v93 = *(void *)(v68 + 8);
  uint64_t v94 = v421;
  *(void *)&long long v419 = v68 + 8;
  *(void *)&long long v418 = v93;
  sub_1000ACADC();
  v95();
  char v96 = *(unsigned char *)(v425 + v424);
  sub_1000C1FE4();
  v97();
  if (v96)
  {
    BOOL v98 = 0;
  }
  else
  {
    sub_10001C2A8(v426 + 6, v426[9]);
    BOOL v98 = sub_10008A880();
  }
  sub_1000C1FD0();
  v99();
  sub_1000C1FE4();
  v100();
  uint64_t v101 = v94;
  unint64_t v102 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v103 = v102 + v70;
  uint64_t v104 = swift_allocObject();
  uint64_t v105 = v415;
  *(void *)(v104 + 16) = v416;
  *(void *)(v104 + 24) = v105;
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v104 + v102, v86, v101);
  uint64_t v106 = (unsigned char *)(v104 + v103);
  *uint64_t v106 = v417 & 1;
  v106[1] = v98;
  uint64_t v107 = v420;
  memcpy((void *)(v104 + ((v103 + 9) & 0xFFFFFFFFFFFFFFF8)), v420, 0x369uLL);
  sub_1000C0148(v107);
  NSString v108 = sub_10024E6A0();
  uint64_t v109 = swift_allocObject();
  *(void *)(v109 + 16) = sub_1000C09B0;
  *(void *)(v109 + 24) = v104;
  v469[4] = sub_1000C0A80;
  v469[5] = v109;
  v469[0] = _NSConcreteStackBlock;
  v469[1] = 1107296256;
  v469[2] = sub_10015AFA8;
  v469[3] = &unk_1002E2648;
  uint64_t v110 = _Block_copy(v469);
  swift_retain();
  swift_release();
  sub_1000C2640();
  AnalyticsSendEventLazy();
  uint64_t v111 = v110;
  uint64_t v112 = v425;
  _Block_release(v111);
  swift_release();

  type metadata accessor for AllSetDialog();
  sub_1000C2314();
  uint64_t v113 = sub_100150F8C();
  char v466 = 0;
  char v463 = 1;
  unsigned __int8 v460 = 0;
  int v458 = v464;
  __int16 v459 = v465;
  char v457 = 1;
  v456[0] = *(_DWORD *)v462;
  *(_DWORD *)((char *)v456 + 3) = *(_DWORD *)&v462[3];
  *(_DWORD *)((char *)v455 + 3) = *(_DWORD *)&v461[3];
  v455[0] = *(_DWORD *)v461;
  BOOL v114 = v98;
  uint64_t v115 = v426;
  if (*(unsigned char *)(v112 + v424) == 1 && *(unsigned char *)(*(void *)(v112 + 24) + 112) == 1)
  {
    BOOL v383 = v98;
    sub_10001C2A8(v426 + 11, v426[14]);
    swift_retain();
    sub_10024E010();
    uint64_t v116 = (void *)sub_10009FE0C();
    sub_1000ACADC();
    v117();
    if (v116)
    {
      v427[0] = 0uLL;
      *(void *)&v427[1] = _swiftEmptyArrayStorage;
      WORD4(v427[1]) = 0;
      sub_1000C2514();
      *(void *)&v427[2] = v118;
      *((void *)&v427[2] + 1) = 0xEB00000000373231;
      *(void *)&v427[3] = 0;
      BYTE8(v427[3]) = 1;
      sub_1000C238C();
      *((void *)&v427[6] + 1) = 1;
      sub_1000C2028();
      LOBYTE(v427[11]) = 4;
      *(void *)&v427[12] = 0;
      *((void *)&v427[11] + 1) = 0;
      *((void *)&v427[12] + 1) = v113;
      LOBYTE(v427[13]) = 2;
      sub_1000636BC(v427);
      swift_release();
      uint64_t v119 = v414;
      v414[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v119[4] = sub_1000C0578();
      uint64_t v120 = sub_1000C2258();
      uint64_t v121 = (void *)(v120 + 16);
      *uint64_t v119 = v120;

      memcpy(v121, v427, 0xD1uLL);
      v469[1] = 0;
      v469[0] = 0;
      v469[2] = _swiftEmptyArrayStorage;
      LOWORD(v469[3]) = v460;
      sub_1000C2514();
      v469[4] = v122;
      v469[5] = 0xEB00000000373231;
      v469[6] = 0;
      LOBYTE(v469[7]) = v123;
      sub_1000C2450();
      v469[13] = 1;
      sub_1000C2100();
      LOBYTE(v469[22]) = 4;
      v469[23] = 0;
      v469[24] = 0;
      v469[25] = v113;
      LOBYTE(v469[26]) = 2;
LABEL_36:
      uint64_t v190 = v469;
      goto LABEL_37;
    }
    swift_release();
    uint64_t v115 = v426;
    BOOL v114 = v383;
  }
  if ((*(unsigned char *)(v112 + 16) & 1) == 0)
  {
    if (!v107[33]
      || (swift_bridgeObjectRetain(), v472._uint64_t countAndFlagsBits = sub_1000C23DC(), !sub_10024EB70(v472).value))
    {
      uint64_t v124 = v409;
      sub_1000C1FE4();
      v125();
      uint64_t v126 = *(void *)(v112 + 24);
      int v127 = *(unsigned __int8 *)(v126 + 112);
      if (v127 == 1)
      {
        if (sub_1000BDB74((uint64_t)v115, v124))
        {
          sub_1000C1FD0();
          v128();
          uint64_t v129 = v420;
          sub_10005CF84((uint64_t)(v420 + 70), (uint64_t)&v431, &qword_10030A860);
          LODWORD(v426) = *((unsigned __int8 *)v129 + 552);
          uint64_t v425 = v129[67];
          uint64_t v424 = v129[68];
          LODWORD(v423) = *((unsigned __int8 *)v129 + 528);
          v422 = (void (*)(void, void))v129[64];
          uint64_t v421 = v129[65];
          long long v130 = *((_OWORD *)v129 + 31);
          long long v418 = *((_OWORD *)v129 + 30);
          long long v419 = v130;
          long long v131 = *((_OWORD *)v129 + 29);
          long long v416 = *((_OWORD *)v129 + 28);
          long long v417 = v131;
          long long v415 = *((_OWORD *)v129 + 27);
          long long v132 = *((_OWORD *)v129 + 26);
          long long v412 = *((_OWORD *)v129 + 25);
          long long v413 = v132;
          long long v133 = *((_OWORD *)v129 + 24);
          long long v410 = *((_OWORD *)v129 + 23);
          long long v411 = v133;
          long long v134 = *((_OWORD *)v129 + 22);
          long long v408 = *((_OWORD *)v129 + 21);
          long long v409 = v134;
          long long v135 = *((_OWORD *)v129 + 20);
          long long v406 = *((_OWORD *)v129 + 19);
          long long v407 = v135;
          long long v136 = *((_OWORD *)v129 + 18);
          long long v404 = *((_OWORD *)v129 + 17);
          long long v405 = v136;
          *(void *)&long long v403 = v129[30];
          *(void *)&long long v402 = v129[31];
          long long v137 = *((_OWORD *)v129 + 14);
          long long v400 = *((_OWORD *)v129 + 13);
          long long v401 = v137;
          uint64_t v396 = v113;
          unsigned __int8 v138 = *((unsigned char *)v129 + 200);
          uint64_t v140 = v129[23];
          uint64_t v139 = v129[24];
          long long v141 = *(_OWORD *)(v129 + 21);
          long long v398 = *(_OWORD *)(v129 + 19);
          long long v399 = v141;
          long long v397 = *(_OWORD *)(v129 + 17);
          long long v142 = *(_OWORD *)(v129 + 15);
          long long v394 = *(_OWORD *)(v129 + 13);
          long long v395 = v142;
          unsigned __int8 v143 = *((unsigned char *)v129 + 96);
          uint64_t v145 = v129[10];
          uint64_t v144 = v129[11];
          long long v146 = *((_OWORD *)v129 + 4);
          long long v392 = *((_OWORD *)v129 + 3);
          long long v393 = v146;
          long long v147 = *((_OWORD *)v129 + 2);
          long long v390 = *((_OWORD *)v129 + 1);
          long long v391 = v147;
          long long v389 = *(_OWORD *)v129;
          sub_1000C0148(v129);
          swift_bridgeObjectRelease();
          v427[0] = v389;
          v427[1] = v390;
          v427[2] = v391;
          v427[3] = v392;
          v427[4] = v393;
          *(void *)&v427[5] = v145;
          *((void *)&v427[5] + 1) = v144;
          LOBYTE(v427[6]) = v143;
          *(_OWORD *)((char *)&v427[6] + 8) = v394;
          *(_OWORD *)((char *)&v427[7] + 8) = v395;
          *(_OWORD *)((char *)&v427[8] + 8) = v397;
          *(_OWORD *)((char *)&v427[9] + 8) = v398;
          *(_OWORD *)((char *)&v427[10] + 8) = v399;
          *((void *)&v427[11] + 1) = v140;
          *(void *)&v427[12] = v139;
          BYTE8(v427[12]) = v138;
          v427[13] = v400;
          v427[14] = v401;
          *(void *)&v427[15] = v403;
          *((void *)&v427[15] + 1) = v402;
          uint64_t v148 = sub_1000C1ED4((__n128)xmmword_10025D3E0);
          sub_10005CF84(v148, v149, &qword_10030A860);
          memcpy(v469, v427, 0x369uLL);
          swift_retain();
          sub_1001AF734();
          sub_1000C0BBC(v427);
          uint64_t v150 = sub_1000C25A0();
          sub_100062858(v150, v151, v152, v153);
LABEL_22:
          uint64_t v183 = v414;
          v414[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
          v183[4] = sub_1000C0578();
          uint64_t v184 = sub_1000C2258();
          *uint64_t v183 = v184;
          memcpy((void *)(v184 + 16), v429, 0xD1uLL);
          v428[0] = 0uLL;
          sub_1000C2404((uint64_t)_swiftEmptyArrayStorage);
          *(_DWORD *)((char *)&v428[1] + 10) = v185;
          sub_1000C2050();
          HIDWORD(v428[3]) = *(_DWORD *)((char *)v456 + 3);
          *(_DWORD *)(v187 + 57) = v186;
          *(double *)&long long v188 = sub_1000C2174();
          v428[7] = v188;
          v428[8] = v188;
          v428[9] = v188;
          v428[10] = v188;
          LOBYTE(v428[11]) = 22;
          *(_DWORD *)((char *)&v428[11] + 1) = v455[0];
          DWORD1(v428[11]) = *(_DWORD *)(v189 + 3);
          *((void *)&v428[11] + 1) = 0;
          *(void *)&v428[12] = 0;
          *((void *)&v428[12] + 1) = v396;
          LOBYTE(v428[13]) = 2;
          uint64_t v190 = (uint64_t *)v428;
LABEL_37:
          sub_10006382C(v190);
          return 0;
        }
        int v127 = *(unsigned __int8 *)(v126 + 112);
      }
      if (v127 == 2)
      {
        BOOL v154 = sub_1000BDB74((uint64_t)v115, v124);
        sub_1000C1FD0();
        v155();
        uint64_t v107 = v420;
        if (v154)
        {
          sub_10005CF84((uint64_t)(v420 + 70), (uint64_t)&v431, &qword_10030A860);
          LODWORD(v426) = *((unsigned __int8 *)v107 + 552);
          uint64_t v425 = v107[67];
          uint64_t v424 = v107[68];
          LODWORD(v423) = *((unsigned __int8 *)v107 + 528);
          v422 = (void (*)(void, void))v107[64];
          uint64_t v421 = v107[65];
          long long v156 = *((_OWORD *)v107 + 31);
          long long v418 = *((_OWORD *)v107 + 30);
          long long v419 = v156;
          long long v157 = *((_OWORD *)v107 + 29);
          long long v416 = *((_OWORD *)v107 + 28);
          long long v417 = v157;
          long long v415 = *((_OWORD *)v107 + 27);
          long long v158 = *((_OWORD *)v107 + 26);
          long long v412 = *((_OWORD *)v107 + 25);
          long long v413 = v158;
          long long v159 = *((_OWORD *)v107 + 24);
          long long v410 = *((_OWORD *)v107 + 23);
          long long v411 = v159;
          long long v160 = *((_OWORD *)v107 + 22);
          long long v408 = *((_OWORD *)v107 + 21);
          long long v409 = v160;
          long long v161 = *((_OWORD *)v107 + 20);
          long long v406 = *((_OWORD *)v107 + 19);
          long long v407 = v161;
          long long v162 = *((_OWORD *)v107 + 18);
          long long v404 = *((_OWORD *)v107 + 17);
          long long v405 = v162;
          uint64_t v163 = v107[30];
          *(void *)&long long v403 = v107[31];
          long long v164 = *((_OWORD *)v107 + 14);
          long long v401 = *((_OWORD *)v107 + 13);
          long long v402 = v164;
          unsigned __int8 v165 = *((unsigned char *)v107 + 200);
          uint64_t v396 = v113;
          uint64_t v166 = v107[23];
          uint64_t v167 = v107[24];
          long long v168 = *(_OWORD *)(v107 + 21);
          long long v399 = *(_OWORD *)(v107 + 19);
          long long v400 = v168;
          long long v169 = *(_OWORD *)(v107 + 17);
          long long v397 = *(_OWORD *)(v107 + 15);
          long long v398 = v169;
          long long v170 = *(_OWORD *)(v107 + 13);
          unsigned __int8 v171 = *((unsigned char *)v107 + 96);
          v172 = (unsigned __int8 *)v107;
          uint64_t v174 = v107[10];
          uint64_t v173 = v107[11];
          long long v394 = *((_OWORD *)v172 + 4);
          long long v395 = v170;
          long long v175 = *((_OWORD *)v172 + 3);
          long long v392 = *((_OWORD *)v172 + 2);
          long long v393 = v175;
          long long v176 = *((_OWORD *)v172 + 1);
          long long v390 = *(_OWORD *)v172;
          long long v391 = v176;
          sub_1000C0148(v172);
          swift_bridgeObjectRelease();
          v427[0] = v390;
          v427[1] = v391;
          v427[2] = v392;
          v427[3] = v393;
          v427[4] = v394;
          *(void *)&v427[5] = v174;
          *((void *)&v427[5] + 1) = v173;
          LOBYTE(v427[6]) = v171;
          *(_OWORD *)((char *)&v427[6] + 8) = v395;
          *(_OWORD *)((char *)&v427[7] + 8) = v397;
          *(_OWORD *)((char *)&v427[8] + 8) = v398;
          *(_OWORD *)((char *)&v427[9] + 8) = v399;
          *(_OWORD *)((char *)&v427[10] + 8) = v400;
          *((void *)&v427[11] + 1) = v166;
          *(void *)&v427[12] = v167;
          BYTE8(v427[12]) = v165;
          v427[13] = v401;
          v427[14] = v402;
          *(void *)&v427[15] = v163;
          *((void *)&v427[15] + 1) = v403;
          uint64_t v177 = sub_1000C1ED4((__n128)xmmword_10025D3E0);
          sub_10005CF84(v177, v178, &qword_10030A860);
          memcpy(v469, v427, 0x369uLL);
          swift_retain();
          sub_1001AF734();
          sub_1000C0BBC(v427);
          uint64_t v179 = sub_1000C25A0();
          sub_100062884(v179, v180, v181, v182);
          goto LABEL_22;
        }
      }
      else
      {
        sub_1000C1FD0();
        v191();
        uint64_t v107 = v420;
      }
    }
  }
  int v192 = *(unsigned __int8 *)(*(void *)(v112 + 24) + 112);
  sub_1001AFBC8();
  if (v192 == 3)
  {
    uint64_t v194 = v412;
    if (v193 >= 2)
    {
      type metadata accessor for MultipleQuantitiesNotAllowedDialog();
      sub_1000C2314();
      uint64_t v195 = sub_100151A54();
LABEL_29:
      uint64_t v196 = v195;
      swift_retain();
      swift_release();
      if (*(unsigned char *)(v112 + v424)) {
        char v197 = 3;
      }
      else {
        char v197 = 0;
      }
      v427[0] = 0uLL;
      *(void *)&v427[1] = _swiftEmptyArrayStorage;
      WORD4(v427[1]) = 1;
      *(void *)&v427[2] = 0x3233363232333731;
      *((void *)&v427[2] + 1) = 0xEB00000000373231;
      *(void *)&v427[3] = 0;
      BYTE8(v427[3]) = 1;
      sub_1000C238C();
      *((void *)&v427[6] + 1) = 1;
      sub_1000C2028();
      LOBYTE(v427[11]) = v197;
      *(void *)&v427[12] = 0;
      *((void *)&v427[11] + 1) = 0;
      *((void *)&v427[12] + 1) = v196;
      LOBYTE(v427[13]) = 1;
      sub_1000636BC(v427);
      swift_release();
      uint64_t v198 = v414;
      v414[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v198[4] = sub_1000C0578();
      uint64_t v199 = sub_1000C2258();
      sub_1000C241C(v199);
      v469[1] = 0;
      v469[0] = 0;
      v469[2] = _swiftEmptyArrayStorage;
      LOWORD(v469[3]) = 1;
      v469[4] = 0x3233363232333731;
      v469[5] = 0xEB00000000373231;
      v469[6] = 0;
      LOBYTE(v469[7]) = v457;
      sub_1000C2450();
      v469[13] = 1;
      sub_1000C2100();
      LOBYTE(v469[22]) = v197;
      v469[24] = 0;
      v469[23] = 0;
      v469[25] = v196;
      LOBYTE(v469[26]) = 1;
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v194 = v412;
    if (v193 >= 11)
    {
      type metadata accessor for InvalidQuantityDialog();
      sub_1000C2314();
      uint64_t v195 = sub_100151920();
      goto LABEL_29;
    }
  }
  uint64_t v201 = v107[62];
  uint64_t v200 = v107[63];
  if (v200)
  {
    sub_10024E040();
    if (sub_10001FA0C(v194, 1, v410) == 1)
    {
      sub_1000AC6D0(v194, &qword_10030C100);
      type metadata accessor for InvalidAppAccountTokenDialog();
      sub_1000C2314();
      uint64_t v202 = sub_100151AB0();
      swift_retain();
      swift_release();
      v427[0] = 0uLL;
      *(void *)&v427[1] = _swiftEmptyArrayStorage;
      WORD4(v427[1]) = 1;
      sub_1000C2348();
      *(void *)&v427[2] = v107;
      *((void *)&v427[2] + 1) = v200;
      *(void *)&v427[3] = 0;
      BYTE8(v427[3]) = 1;
      v427[4] = 0uLL;
      v427[5] = 0xF000000000000000;
      *(void *)&v427[6] = 0;
      *((void *)&v427[6] + 1) = 1;
      sub_1000C2028();
      LOBYTE(v427[11]) = 0;
      *(void *)&v427[12] = 0;
      *((void *)&v427[11] + 1) = 0;
      *((void *)&v427[12] + 1) = v202;
      LOBYTE(v427[13]) = 2;
      sub_1000636BC(v427);
      swift_release();
      uint64_t v203 = v414;
      v414[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v203[4] = sub_1000C0578();
      uint64_t v204 = sub_1000C2258();
      sub_1000C241C(v204);
      v469[1] = 0;
      v469[0] = 0;
      v469[2] = _swiftEmptyArrayStorage;
      LOWORD(v469[3]) = 1;
      v469[4] = v107;
      v469[5] = v200;
      v469[6] = 0;
      LOBYTE(v469[7]) = v457;
      v469[9] = 0;
      v469[8] = 0;
      v469[10] = 0xF000000000000000;
      v469[11] = 0;
      v469[12] = 0;
      v469[13] = 1;
      LOBYTE(v469[22]) = 0;
      sub_1000C2100();
      v469[24] = 0;
      v469[23] = 0;
      v469[25] = v202;
      LOBYTE(v469[26]) = 2;
      goto LABEL_36;
    }
    sub_1000AC6D0(v194, &qword_10030C100);
  }
  BOOL v383 = v114;
  uint64_t v206 = v426[9];
  v379 = v426 + 6;
  sub_10001C2A8(v426 + 6, v206);
  *(void *)&long long v409 = sub_10008A5FC(*(void *)v112, *(void *)(v112 + 8));
  sub_10005CF84((uint64_t)(v107 + 70), (uint64_t)v427, &qword_10030A860);
  sub_10005CF84((uint64_t)v427, (uint64_t)v469, &qword_10030A860);
  int v207 = sub_1000C066C((uint64_t)v469);
  uint64_t v377 = v201;
  if (v207 == 1) {
    goto LABEL_45;
  }
  if (LOBYTE(v469[39]) == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  sub_1000C21CC();
  char v208 = sub_10024FA60();
  swift_bridgeObjectRelease();
  if ((v208 & 1) == 0)
  {
LABEL_45:
    uint64_t v209 = v113;
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v209 = v113;
  sub_10005CF84((uint64_t)(v107 + 60), (uint64_t)v468, &qword_10030AA30);
  sub_10005CF84((uint64_t)v468, (uint64_t)&v470, &qword_10030AA30);
  if (v471)
  {
    sub_1000BEDFC(v470, v471);
    v381 = sub_1000C056C;
    uint64_t v382 = v210;
    goto LABEL_47;
  }
LABEL_46:
  v381 = 0;
  uint64_t v382 = 0;
LABEL_47:
  uint64_t v378 = v200;
  uint64_t v211 = *(void *)(v112 + 24);
  type metadata accessor for OctaneSubscription();
  *(void *)&long long v412 = swift_dynamicCastClass();
  if (!(void)v412)
  {
    sub_10001C2A8(v426 + 11, v426[14]);
    sub_1001AFBC8();
    sub_10009DF90();
    uint64_t v216 = v215;
    LODWORD(v408) = 0;
    *(void *)&long long v405 = 0;
    *(void *)&long long v418 = 0;
    sub_1000C1FF8();
    goto LABEL_124;
  }
  uint64_t v380 = v211;
  uint64_t v212 = v107[51];
  uint64_t v396 = v209;
  if (!v212)
  {
    swift_retain();
    uint64_t v214 = 0;
    LODWORD(v373) = 1;
    goto LABEL_53;
  }
  uint64_t v213 = v107[50];
  uint64_t v431 = v213;
  uint64_t v432 = v212;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000BDD94((uint64_t)&v431, v412, (uint64_t *)v429);
  swift_bridgeObjectRelease();
  if (*(void *)&v429[0])
  {
    uint64_t v214 = *(void *)&v429[0];
    LODWORD(v373) = 0;
    uint64_t v212 = 0;
LABEL_53:
    uint64_t v217 = v426;
    goto LABEL_54;
  }
  uint64_t v223 = (uint64_t *)v384;
  sub_1000C2640();
  sub_1000C1FE4();
  v224();
  if (*(unsigned char *)(v112 + v424) == 1)
  {
    sub_1000C2634();
    sub_1000C1FD0();
    v225();
    uint64_t v226 = v426;
    uint64_t v227 = (uint8_t *)v412;
  }
  else
  {
    uint64_t v226 = v426;
    uint64_t v266 = v223;
    uint64_t v227 = (uint8_t *)v412;
    int v267 = sub_1000BDDE4((uint64_t)v426, v213, v212, v266, v412, (uint64_t)v107);
    sub_1000C1FD0();
    v268();
    BOOL v269 = v267 == 22;
    uint64_t v107 = v420;
    if (!v269)
    {
      uint64_t v271 = v396;
      if ((*(unsigned char *)(v112 + 16) & 1) == 0)
      {
        type metadata accessor for UnableToPurchaseDialog();
        sub_1000C2314();
        uint64_t v272 = sub_100151870();
        swift_release();
        uint64_t v271 = v272;
      }
      v429[0] = 0uLL;
      *(void *)&v429[1] = _swiftEmptyArrayStorage;
      WORD4(v429[1]) = 0;
      sub_1000C2348();
      *(void *)&v429[2] = v107;
      *((void *)&v429[2] + 1) = v212;
      *(void *)&v429[3] = 0;
      BYTE8(v429[3]) = 1;
      v429[4] = 0uLL;
      v429[5] = 0xF000000000000000;
      *(void *)&v429[6] = 0;
      *((void *)&v429[6] + 1) = 1;
      memset(&v429[7], 0, 64);
      LOBYTE(v429[11]) = 18;
      *(void *)&v429[12] = 0;
      *((void *)&v429[11] + 1) = 0;
      *((void *)&v429[12] + 1) = v271;
      LOBYTE(v429[13]) = 1;
      uint64_t v273 = v414;
      v414[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v273[4] = sub_1000C0578();
      uint64_t v274 = sub_1000C2258();
      char v275 = (void *)(v274 + 16);
      *uint64_t v273 = v274;
      sub_1000636BC(v429);
      sub_10003C350((uint64_t)v381);
      swift_release();
      swift_release();
      memcpy(v275, v429, 0xD1uLL);
      uint64_t v432 = 0;
      uint64_t v431 = 0;
      v433 = _swiftEmptyArrayStorage;
      LOWORD(v434) = v460;
      v435 = (unsigned __int8 *)v107;
      uint64_t v436 = v212;
      uint64_t v437 = 0;
      char v438 = v457;
      uint64_t v440 = 0;
      uint64_t v439 = 0;
      unint64_t v441 = 0xF000000000000000;
      uint64_t v442 = 0;
      uint64_t v443 = 0;
      uint64_t v444 = 1;
      long long v448 = 0u;
      long long v447 = 0u;
      long long v446 = 0u;
      long long v445 = 0u;
      char v449 = 18;
      uint64_t v450 = 0;
      uint64_t v451 = 0;
      uint64_t v452 = v271;
      char v453 = 1;
      uint64_t v190 = &v431;
      goto LABEL_37;
    }
  }
  uint64_t v270 = sub_1000BF3D4(v213, v212, v227);
  uint64_t v217 = v226;
  uint64_t v212 = v270;
  uint64_t v214 = 0;
  LODWORD(v373) = 1;
LABEL_54:
  uint64_t v218 = v107[65];
  uint64_t v375 = v212;
  if (v218
    && (uint64_t v431 = v107[64],
        uint64_t v432 = v218,
        swift_bridgeObjectRetain(),
        sub_1000BDE18((uint64_t)&v431, v412, (NSObject **)v429),
        swift_bridgeObjectRelease(),
        (uint64_t v384 = *(void *)&v429[0]) != 0))
  {
    LODWORD(v408) = *(unsigned __int8 *)(v112 + v424) ^ 1;
    uint64_t v219 = v413;
    if (v212)
    {
      int v220 = 0;
      LODWORD(v374) = 1;
LABEL_59:
      int v372 = v220;
      sub_1000C2640();
      uint64_t v221 = v421;
      sub_1000C1FE4();
      v222();
      LODWORD(v376) = 0;
      goto LABEL_67;
    }
    int v228 = *(unsigned __int8 *)(v384 + 104);
    int v220 = 1;
    LODWORD(v374) = 1;
    if (v228 != 1) {
      goto LABEL_59;
    }
  }
  else
  {
    LODWORD(v374) = 0;
    uint64_t v384 = 0;
    LODWORD(v408) = 0;
    int v220 = 0;
    uint64_t v219 = v413;
    if (v212) {
      goto LABEL_59;
    }
  }
  sub_1000C2640();
  sub_1000C1FE4();
  v229();
  if (v373)
  {
    sub_10001C2A8(v217 + 11, v217[14]);
    LODWORD(v376) = sub_10009FBA0() ^ 1;
  }
  else
  {
    LODWORD(v376) = 0;
  }
  int v372 = 1;
  uint64_t v221 = v421;
LABEL_67:
  sub_1000C1FD0();
  v230();
  *(void *)&long long v403 = v217 + 11;
  sub_100027788((uint64_t)(v217 + 11), (uint64_t)&v431);
  sub_10001C2A8(&v431, v434);
  uint64_t v231 = v112 + *(int *)(v221 + 44);
  uint64_t v232 = v406;
  sub_1000C0AF4(v231, v406);
  if (sub_10001FA0C(v232, 1, v219) == 1)
  {
    uint64_t v233 = v405;
    sub_10024E010();
    sub_1000AC6D0(v232, (uint64_t *)&unk_10030FD70);
    uint64_t v234 = v411;
  }
  else
  {
    uint64_t v234 = v411;
    uint64_t v233 = v405;
    (*(void (**)(void, uint64_t, uint64_t))(v411 + 32))(v405, v232, v219);
  }
  sub_100100BAC();
  uint64_t v236 = v235;
  v370 = *(void (**)(void))(v234 + 8);
  uint64_t v371 = v234 + 8;
  ((void (*)(uint64_t, uint64_t))v370)(v233, v219);
  if (!v236)
  {
    sub_10001C2EC((uint64_t)&v431);
    uint64_t v112 = v425;
    uint64_t v240 = v404;
    uint64_t v241 = v214;
    goto LABEL_77;
  }
  sub_10001C2EC((uint64_t)&v431);
  uint64_t v237 = sub_1000D427C();
  uint64_t v239 = sub_1000FE9DC(v237, v238);
  swift_bridgeObjectRelease();
  uint64_t v240 = v404;
  uint64_t v241 = v214;
  if (!v239)
  {

    uint64_t v112 = v425;
LABEL_77:
    uint64_t v246 = v426;
    sub_10001C2A8((void *)v403, v426[14]);
    sub_10009EA18();
    uint64_t v244 = v247;
    int v248 = *(unsigned __int8 *)(v112 + v424);
    uint64_t v249 = v421;
    sub_1000C1FE4();
    v250();
    if (v248 == 1)
    {
      uint64_t v251 = v241;
      uint64_t v252 = v393;
      sub_1000C0AF4(v240 + *(int *)(v249 + 44), v393);
      sub_1000C1FD0();
      v253();
      int v245 = 1;
      int v254 = sub_10001FA0C(v252, 1, v413);
      sub_1000AC6D0(v252, (uint64_t *)&unk_10030FD70);
      if (v254 == 1)
      {
        *(void *)&long long v405 = 0;
        *(void *)&long long v418 = 0;
        sub_1000C1FF8();
LABEL_98:
        uint64_t v265 = v402;
        uint64_t v241 = v251;
LABEL_102:
        int v243 = (int)v374;
        goto LABEL_103;
      }
      uint64_t v256 = (void *)*sub_10001C2A8((void *)v403, v246[14]);
      swift_bridgeObjectRetain();
      sub_1000A4AE4();
      sub_1000C2628();
      swift_bridgeObjectRelease();
      if (!v256)
      {
        *(void *)&long long v405 = 0;
        *(void *)&long long v418 = 0;
        sub_1000C1FF8();
        uint64_t v112 = v425;
        goto LABEL_98;
      }
      id v257 = v256;
      uint64_t v258 = sub_1000D5AE4();
      uint64_t v259 = sub_1000D5AE4();

      uint64_t v241 = v251;
      if (v258 == v259)
      {

        *(void *)&long long v405 = 0;
        *(void *)&long long v418 = 0;
        int v245 = 1;
        sub_1000C1FF8();
        uint64_t v244 = v257;
      }
      else
      {

        *(void *)&long long v405 = 0;
        *(void *)&long long v418 = 0;
        int v245 = 1;
        sub_1000C1FF8();
      }
      uint64_t v112 = v425;
    }
    else
    {
      sub_1000C1FD0();
      v255();
      *(void *)&long long v405 = 0;
      *(void *)&long long v418 = 0;
      int v245 = 1;
      sub_1000C1FF8();
    }
    uint64_t v265 = v402;
    goto LABEL_102;
  }
  int v242 = sub_100027094(v412);
  int v243 = (int)v374;
  if (v242)
  {
    if (v242 == 2)
    {
      sub_1000C2368();
      uint64_t v244 = sub_10009DEA4(v239, v412, v236);
      swift_release();

      *(void *)&long long v405 = 0;
      *(void *)&long long v418 = 0;
      LODWORD(v376) = 0;
      int v245 = 1;
LABEL_89:
      sub_1000C1FF8();
      goto LABEL_90;
    }
LABEL_86:
    uint64_t v262 = *(void *)(v412 + 80);
    id v263 = v236;
    swift_bridgeObjectRetain();
    sub_1000D5B48(v262);
    swift_bridgeObjectRelease();
    sub_1000D5C00(5u);
    sub_1000D60E0(0, 0);
    if ((v243 | v372 & v373 ^ 1) == 1)
    {
      swift_retain();
      sub_1000D7A50();
      swift_release();
    }
    sub_1000C2368();
    sub_1000A1278(v263, v408 & 1);
    uint64_t v244 = v263;

    swift_release();
    uint64_t v264 = *(void *)(v412 + 88);
    *(void *)&long long v405 = *(void *)(v412 + 80);
    *(void *)&long long v418 = v264;
    swift_bridgeObjectRetain();
    LODWORD(v376) = 0;
    int v245 = 0;
    goto LABEL_89;
  }
  if (!v374) {
    goto LABEL_86;
  }
  id v260 = v236;
  sub_1000D63A4(2u);
  type metadata accessor for CannotRedeemOfferCodeDialog();
  sub_1000C2314();
  uint64_t v261 = sub_100151464();
  swift_release();
  swift_release();
  uint64_t v244 = v260;

  *(void *)&long long v405 = 0;
  *(void *)&long long v418 = 0;
  LODWORD(v376) = 0;
  int v245 = 0;
  LODWORD(v419) = 1;
  LODWORD(v422) = 15;
  uint64_t v396 = v261;
LABEL_90:
  uint64_t v112 = v425;
  uint64_t v265 = v402;
LABEL_103:
  *(void *)&long long v406 = swift_allocObject();
  *(unsigned char *)(v406 + 16) = -8;
  if (v245)
  {
    if (v243)
    {
      swift_retain();
      sub_1000C24A4();
      swift_release();
    }
    if ((v372 & 1) == 0)
    {
      swift_retain();
      sub_1000C24A4();
      swift_release();
    }
    if ((v373 & 1) == 0)
    {
      swift_retain();
      sub_1000C24A4();
      swift_release();
    }
    uint64_t v276 = v426;
    int v277 = sub_1000BDE68(v406, (uint64_t)v426);
    uint64_t v278 = sub_1000D808C(v409, v277);
    sub_1000C2534(v278, v276[14]);
  }
  if ((v376 & 1) != 0 && *(void *)(v412 + 136))
  {
    swift_retain();
    sub_1000D7A50();
    id v279 = v426;
    int v280 = sub_1000BDE68(v406, (uint64_t)v426);
    uint64_t v281 = sub_1000D808C(v409, v280);
    sub_1000C2534(v281, v279[14]);
    swift_release();
  }
  sub_1000C0AF4(v231, v265);
  int v282 = sub_10001FA0C(v265, 1, v413);
  uint64_t v107 = v420;
  if (v282 == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1000AC6D0(v265, (uint64_t *)&unk_10030FD70);
    swift_release();
    uint64_t v216 = v244;
LABEL_121:
    uint64_t v297 = v378;
    uint64_t v298 = (uint64_t)v379;
    uint64_t v209 = v396;
    goto LABEL_125;
  }
  sub_1000AC6D0(v265, (uint64_t *)&unk_10030FD70);
  uint64_t v216 = v244;
  sub_1000D9478(4);
  if (v283)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_121;
  }
  *(void *)&long long v404 = v241;
  sub_1000D453C();
  sub_10024DF60();
  sub_10024DF60();
  sub_100027788(v403, (uint64_t)&v431);
  v374 = sub_10001C2A8(&v431, v434);
  uint64_t v284 = *(void *)(v412 + 200);
  *(void *)&long long v402 = *(void *)(v412 + 192);
  *(void *)&long long v393 = *(void *)v112;
  uint64_t v376 = *(void *)(v112 + 8);
  sub_1000C0B6C();
  *(void *)&long long v412 = v284;
  swift_bridgeObjectRetain();
  v423 = v244;
  uint64_t v285 = v413;
  if ((sub_10024E5F0() & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x1000BD6E8);
  }
  uint64_t v286 = v397;
  uint64_t v287 = v385 + *(int *)(v397 + 48);
  uint64_t v288 = v411;
  uint64_t v289 = *(void (**)(void))(v411 + 16);
  sub_1000C22D8();
  v289();
  uint64_t v373 = v287;
  sub_1000C22D8();
  v289();
  uint64_t v290 = v389 + *(int *)(v286 + 48);
  sub_1000C22D8();
  v289();
  sub_1000C22D8();
  v289();
  uint64_t v291 = *(void (**)(void))(v288 + 32);
  uint64_t v292 = v387;
  sub_1000C22C8();
  v291();
  uint64_t v293 = v370;
  ((void (*)(uint64_t, uint64_t))v370)(v290, v285);
  sub_1000C22C8();
  v291();
  sub_1000C22C8();
  v291();
  sub_1000C22C8();
  v291();
  uint64_t v294 = v293;
  sub_1000C2164();
  v293();
  uint64_t v295 = v388;
  sub_10005CF84(v292, v388, &qword_10030E950);
  uint64_t v216 = v423;
  sub_1000D5AE4();
  char v296 = sub_1000A46B4();
  swift_bridgeObjectRelease();
  sub_1000AC6D0(v295, &qword_10030E950);
  sub_10001C2EC((uint64_t)&v431);
  if (v296)
  {
    sub_1000C2368();
    sub_10009F408();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1000C2164();
    v294();
    sub_1000C2164();
    v294();
    swift_release();
    LODWORD(v422) = 21;
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1000C2164();
    v294();
    sub_1000C2164();
    v294();
    swift_release();
  }
  uint64_t v112 = v425;
  uint64_t v209 = v396;
  uint64_t v107 = v420;
LABEL_124:
  uint64_t v297 = v378;
  uint64_t v298 = (uint64_t)v379;
LABEL_125:
  sub_10005CF84((uint64_t)v427, (uint64_t)&v431, &qword_10030A860);
  int v299 = sub_1000C066C((uint64_t)&v431);
  *(void *)&long long v402 = v299 != 1;
  uint64_t v300 = v426;
  if (v299 != 1)
  {
    sub_1000D79F4(v454);
    sub_10005CF84((uint64_t)v427, (uint64_t)v429, &qword_10030A860);
    if ((v430 & 1) == 0)
    {
      uint64_t v297 = v107[43];
      uint64_t v377 = v107[42];
    }
    uint64_t v301 = v401;
    if (v297)
    {
      sub_10024E040();
      uint64_t v302 = v410;
      if (sub_10001FA0C(v301, 1, v410) == 1)
      {
        sub_1000AC6D0(v301, &qword_10030C100);
      }
      else
      {
        uint64_t v303 = v392;
        uint64_t v304 = v391;
        uint64_t v305 = sub_1000C23DC();
        v306(v305);
        uint64_t v307 = v390;
        (*(void (**)(void, uint64_t, uint64_t))(v303 + 16))(v390, v304, v302);
        sub_1000195B4(v307, 0, 1, v302);
        sub_1000D834C();
        (*(void (**)(uint64_t, uint64_t))(v303 + 8))(v304, v302);
      }
    }
  }
  switch(sub_1000D6528())
  {
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_135;
    default:
      char v308 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v308 & 1) == 0) {
        goto LABEL_137;
      }
LABEL_135:
      uint64_t v309 = (void *)v420[33];
      if (v309
        && (uint64_t v310 = v420[32],
            swift_bridgeObjectRetain(),
            v473._uint64_t countAndFlagsBits = v310,
            v473._object = v309,
            v311.value = sub_10024EB70(v473).value,
            v311.value != 2))
      {
        if ((v417 & !v311.value) != 0) {
          goto LABEL_138;
        }
      }
      else
      {
LABEL_137:
        if (v417)
        {
LABEL_138:
          uint64_t v312 = v418 == 0;
          goto LABEL_141;
        }
      }
      uint64_t v312 = 0;
LABEL_141:
      sub_10001C2A8((void *)v298, v300[9]);
      uint64_t v314 = v420[8];
      uint64_t v313 = v420[9];
      uint64_t v320 = sub_10008A698(32, v314, v313, v315, v316, v317, v318, v319);
      v423 = v216;
      if (v383)
      {
        LODWORD(v422) = 2;
        sub_1000D63A4(2u);
        LODWORD(v419) = 1;
        sub_1000D777C(1);
        swift_release();
        sub_1000C2238();
        long long v415 = xmmword_10025C2E0;
        long long v412 = 0u;
        long long v410 = 0u;
        unint64_t v321 = 0xF000000000000000;
        long long v322 = _swiftEmptyArrayStorage;
        long long v405 = 0u;
        long long v406 = 0u;
        sub_1000C2090();
        int v323 = 1;
        long long v403 = v324;
        long long v404 = v324;
        goto LABEL_176;
      }
      if (v312)
      {
        sub_1000D62F0(0);
        sub_1000D63A4(4u);
        if ((*(unsigned char *)(v112 + 16) & 1) != 0 || !(void)v400)
        {
          swift_release();
          sub_1000C2238();
          *(double *)&long long v338 = sub_1000C23A8((__n128)xmmword_10025C2E0);
          long long v410 = v338;
          LODWORD(v422) = 5;
          long long v406 = v338;
          unint64_t v321 = 0xF000000000000000;
          long long v322 = _swiftEmptyArrayStorage;
          long long v405 = v338;
          sub_1000C2090();
        }
        else
        {
          sub_10001C2A8((void *)v298, v426[9]);
          swift_unknownObjectRetain();
          sub_10008A7F0();
          unint64_t v325 = swift_bridgeObjectRetain();
          uint64_t v326 = sub_1000F072C(v325);
          swift_bridgeObjectRelease();
          if (v326)
          {
            swift_bridgeObjectRetain();
            swift_release();
          }
          else
          {
            sub_10020F734();
          }
          type metadata accessor for AskToBuyDialog();
          sub_1000D5AE4();
          swift_bridgeObjectRetain();
          sub_1000C24C0();
          uint64_t v357 = sub_10014FC98();
          swift_release();
          swift_release();
          LODWORD(v424) = 0;
          *(void *)&long long v411 = 0;
          *(void *)&long long v417 = 0;
          uint64_t v312 = 0;
          *(void *)&long long v416 = 0;
          LOBYTE(v313) = 0;
          *(double *)&long long v339 = sub_1000C23A8((__n128)xmmword_10025C2E0);
          LODWORD(v422) = 5;
          long long v410 = v339;
          unint64_t v321 = 0xF000000000000000;
          long long v406 = v339;
          long long v322 = _swiftEmptyArrayStorage;
          uint64_t v298 = 0x3233363232333731;
          long long v405 = v339;
          uint64_t v216 = (void *)0xEB00000000373231;
          uint64_t v396 = v357;
        }
        long long v403 = v339;
        long long v404 = v339;
        int v323 = 1;
        goto LABEL_176;
      }
      if (v320 == 1)
      {
        if (*(unsigned char *)(v112 + v424)) {
          goto LABEL_157;
        }
        if ((*(unsigned char *)(v112 + 16) & 1) == 0)
        {
          sub_1000D63A4(4u);
          uint64_t v327 = sub_1000D427C();
          uint64_t v329 = v328;
          uint64_t v330 = sub_1001AF734();
          Swift::String v332 = v331;
          uint64_t v333 = v400;
          swift_unknownObjectRetain();
          sub_10006298C(v327, v329, v330, v332, v333, v416, v415, (uint64_t)v429);
          v428[0] = 0uLL;
          sub_1000C2404((uint64_t)_swiftEmptyArrayStorage);
          *(_DWORD *)((char *)&v428[1] + 10) = v334;
          sub_1000C2050();
          HIDWORD(v428[3]) = *(_DWORD *)((char *)v456 + 3);
          *(_DWORD *)((char *)&v428[3] + 9) = v335;
          *(double *)&long long v336 = sub_1000C2174();
          v428[7] = v336;
          v428[8] = v336;
          v428[9] = v336;
          v428[10] = v336;
          LOBYTE(v428[11]) = (_BYTE)v422;
          *(_DWORD *)((char *)&v428[11] + 1) = v455[0];
          DWORD1(v428[11]) = *(_DWORD *)((char *)v455 + 3);
          *((void *)&v428[11] + 1) = 0;
          *(void *)&v428[12] = 0;
          *((void *)&v428[12] + 1) = v209;
          LOBYTE(v428[13]) = v419;
          sub_10006382C(v428);
          sub_10005CF84((uint64_t)&v429[4], (uint64_t)&v467, &qword_10030BAE0);
          long long v412 = v429[0];
          long long v322 = *(void **)&v429[1];
          unsigned __int8 v460 = BYTE8(v429[1]);
          LODWORD(v424) = BYTE9(v429[1]);
          int v458 = *(_DWORD *)((char *)&v429[1] + 10);
          __int16 v459 = HIWORD(v429[1]);
          uint64_t v216 = (void *)*((void *)&v429[2] + 1);
          uint64_t v298 = *(void *)&v429[2];
          v456[0] = *(_DWORD *)((char *)&v429[3] + 9);
          *(_DWORD *)((char *)v456 + 3) = HIDWORD(v429[3]);
          uint64_t v312 = *((void *)&v429[4] + 1);
          unint64_t v321 = *(void *)&v429[5];
          long long v410 = *(_OWORD *)((char *)&v429[5] + 8);
          long long v415 = *(_OWORD *)((char *)&v429[6] + 8);
          long long v405 = *(_OWORD *)((char *)&v429[8] + 8);
          long long v406 = *(_OWORD *)((char *)&v429[7] + 8);
          *(void *)&long long v416 = *((void *)&v429[10] + 1);
          LODWORD(v422) = LOBYTE(v429[11]);
          v455[0] = *(_DWORD *)((char *)&v429[11] + 1);
          *(_DWORD *)((char *)v455 + 3) = DWORD1(v429[11]);
          long long v403 = *(_OWORD *)((char *)&v429[11] + 8);
          long long v404 = *(_OWORD *)((char *)&v429[9] + 8);
          uint64_t v396 = *((void *)&v429[12] + 1);
          LODWORD(v419) = LOBYTE(v429[13]);
          v337 = sub_1000BE7AC(v314, v313, (uint64_t)v381, v382);
          sub_10005D0C8((uint64_t)&v467);
          int v323 = 1;
          LOBYTE(v313) = 0;
          *(void *)&long long v417 = v337;
          *(void *)&long long v411 = v337[2];
          char v457 = 0;
          goto LABEL_176;
        }
      }
      else if (*(unsigned char *)(v112 + v424))
      {
        goto LABEL_157;
      }
      uint64_t v341 = *(void *)v112;
      uint64_t v340 = *(void *)(v112 + 8);
      sub_10001C2A8((void *)v298, v426[9]);
      uint64_t v347 = sub_10008AEB4(1uLL, v341, v340, v342, v343, v344, v345, v346);
      if ((v348 & 1) == 0)
      {
        unint64_t v349 = v347;
        sub_1000D63A4(2u);
        LODWORD(v422) = sub_100098AA0(v349);
        swift_release();
        uint64_t v209 = 0;
        char v350 = *(unsigned char *)(v112 + 16);
        LODWORD(v419) = 1;
        *(void *)&long long v402 = 1;
        uint64_t v313 = v395;
        uint64_t v351 = v418;
        if ((v350 & 1) == 0) {
          goto LABEL_162;
        }
        goto LABEL_158;
      }
LABEL_157:
      uint64_t v313 = v395;
      uint64_t v351 = v418;
      if (*(unsigned char *)(v112 + 16) != 1) {
        goto LABEL_162;
      }
LABEL_158:
      if (sub_1000D847C() != 2 && sub_1000D847C() != 1) {
        sub_1000C24F4();
      }
      swift_release();
      uint64_t v209 = 0;
LABEL_162:
      if (!sub_1000D847C()) {
        sub_1000C24F4();
      }
      sub_10005CF84((uint64_t)v427, (uint64_t)v429, &qword_10030A860);
      if (sub_1000C066C((uint64_t)v429) == 1)
      {
        LODWORD(v401) = 0;
      }
      else
      {
        if (v430 == 1) {
          LODWORD(v401) = sub_1000C219C();
        }
        else {
          LODWORD(v401) = 1;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v396 = v209;
      id v352 = v216;
      v353 = (void (*)(void *))v381;
      sub_10003C360((uint64_t)v381);
      sub_1001F99F0(v352, v353, v313);
      if (v351)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v313 + 88) = v405;
        *(void *)(v313 + 96) = v351;
      }
      sub_100019524(&qword_10030A3E8);
      unint64_t v354 = (*(unsigned __int8 *)(v394 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v394 + 80);
      uint64_t v355 = swift_allocObject();
      *(_OWORD *)(v355 + 16) = xmmword_100255FB0;
      sub_10009C654(v313, v355 + v354);
      swift_bridgeObjectRelease();
      *(void *)&long long v417 = v355;
      *(void *)&long long v411 = *(void *)(v355 + 16);
      char v457 = 0;
      sub_1000C0AA0(v313, (void (*)(void))type metadata accessor for IAPTransaction);
      LODWORD(v424) = 0;
      uint64_t v312 = 0;
      *(void *)&long long v416 = 0;
      long long v415 = xmmword_10025C2E0;
      long long v412 = 0u;
      unint64_t v321 = 0xF000000000000000;
      long long v322 = _swiftEmptyArrayStorage;
      sub_1000C2090();
      long long v410 = v356;
      long long v405 = v356;
      long long v406 = v356;
      long long v403 = v356;
      long long v404 = v356;
      int v323 = v402;
      LOBYTE(v313) = v401;
LABEL_176:
      if (*(unsigned char *)(*(void *)(v425 + 24) + 112) == 3 && (*(unsigned char *)(v425 + *(int *)(v421 + 48)) & 1) == 0)
      {
        sub_1000D5B48(0);
      }
      else if (!v323)
      {
        if ((v313 & 1) == 0) {
          goto LABEL_181;
        }
        goto LABEL_180;
      }
      sub_10001C2A8(v426 + 11, v426[14]);
      sub_1000A1278(v423, v408 & 1);
      if (v313)
      {
LABEL_180:
        uint64_t v358 = sub_1000BE83C((uint64_t)v420);
        unint64_t v360 = v359;
        sub_10003F7F4(v312, v321);
        uint64_t v312 = v358;
        unint64_t v321 = v360;
      }
LABEL_181:
      uint64_t v361 = v421;
      uint64_t v362 = v425;
      uint64_t v363 = v407;
      sub_1000C0AF4(v425 + *(int *)(v421 + 44), v407);
      int v364 = sub_10001FA0C(v363, 1, v413);
      sub_1000AC6D0(v363, (uint64_t *)&unk_10030FD70);
      if (v364 != 1 && *(unsigned char *)(v362 + *(int *)(v361 + 48)) == 1)
      {
        sub_10001C2A8(v426 + 11, v426[14]);
        sub_1000A4DD0();
      }
      v428[0] = v412;
      *(void *)&v428[1] = v322;
      BYTE8(v428[1]) = v460;
      BYTE9(v428[1]) = v424;
      *(_DWORD *)((char *)&v428[1] + 10) = v458;
      HIWORD(v428[1]) = v459;
      *(void *)&v428[2] = v298;
      *((void *)&v428[2] + 1) = v216;
      *(void *)&v428[3] = v411;
      BYTE8(v428[3]) = v457;
      *(_DWORD *)((char *)&v428[3] + 9) = v456[0];
      HIDWORD(v428[3]) = *(_DWORD *)((char *)v456 + 3);
      *(void *)&v428[4] = v417;
      *((void *)&v428[4] + 1) = v312;
      *(_OWORD *)((char *)&v428[5] + 8) = v410;
      *(_OWORD *)((char *)&v428[6] + 8) = v415;
      *(_OWORD *)((char *)&v428[7] + 8) = v406;
      *(_OWORD *)((char *)&v428[8] + 8) = v405;
      *(_OWORD *)((char *)&v428[9] + 8) = v404;
      *(void *)&v428[5] = v321;
      *((void *)&v428[10] + 1) = v416;
      LOBYTE(v428[11]) = (_BYTE)v422;
      *(_DWORD *)((char *)&v428[11] + 1) = v455[0];
      DWORD1(v428[11]) = *(_DWORD *)((char *)v455 + 3);
      *(_OWORD *)((char *)&v428[11] + 8) = v403;
      *((void *)&v428[12] + 1) = v396;
      LOBYTE(v428[13]) = v419;
      v366 = v414;
      v414[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v366[4] = sub_1000C0578();
      uint64_t v367 = sub_1000C2258();
      v368 = (void *)(v367 + 16);
      uint64_t *v366 = v367;
      sub_1000636BC(v428);
      sub_10003C350((uint64_t)v381);
      swift_release();
      swift_bridgeObjectRelease();
      sub_10006382C(v428);
      memcpy(v368, v428, 0xD1uLL);
      return v423;
  }
}

uint64_t sub_1000BD6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1001BCF7C();
  Class isa = sub_10024EB60().super.super.isa;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)isa, 0x7975426F546B7361, 0xEF64656C62616E45, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  Class v8 = sub_10024EB60().super.super.isa;
  uint64_t v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)v8, 0x4473676F6C616964, 0xEF64656C62617369, v9);
  swift_bridgeObjectRelease();
  Class v10 = sub_10024EB60().super.super.isa;
  uint64_t v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)v10, 0xD000000000000015, 0x800000010027D110, v11);
  swift_bridgeObjectRelease();
  Class v12 = sub_10024EB60().super.super.isa;
  uint64_t v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)v12, 0xD000000000000012, 0x800000010027D130, v13);
  swift_bridgeObjectRelease();
  sub_1001AFBC8();
  Class v14 = sub_10024EC50().super.super.isa;
  uint64_t v15 = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = v5;
  sub_10020D504((uint64_t)v14, 0x797469746E617571, 0xE800000000000000, v15);
  uint64_t v16 = v5;
  swift_bridgeObjectRelease();
  sub_10005CF84(a4 + 560, (uint64_t)v29, &qword_10030A860);
  sub_10005CF84((uint64_t)v29, (uint64_t)v30, &qword_10030A860);
  if (sub_1000C066C((uint64_t)v30) != 1)
  {
    if ((v31 & 1) == 0) {
      sub_10024FA60();
    }
    swift_bridgeObjectRelease();
    Class v17 = sub_10024EB60().super.super.isa;
    uint64_t v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = v5;
    sub_10020D504((uint64_t)v17, 0x4B65726F74537369, 0xEB00000000327469, v18);
    uint64_t v16 = v33;
    swift_bridgeObjectRelease();
  }
  type metadata accessor for OctaneSubscription();
  if (swift_dynamicCastClass())
  {
    sub_10005CF84(a4 + 448, (uint64_t)v28, &qword_10030AA30);
    sub_10005CF84((uint64_t)v28, (uint64_t)&v33, &qword_10030AA30);
    Class v19 = sub_10024EB60().super.super.isa;
    uint64_t v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v16;
    sub_10020D504((uint64_t)v19, 0x6F6D6F7250736168, 0xED0000726566664FLL, v20);
    uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    sub_10005CF84((uint64_t)v28, (uint64_t)&v32, &qword_10030AA30);
    Class v22 = sub_10024EB60().super.super.isa;
    uint64_t v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_10020D504((uint64_t)v22, 0x61626E6957736168, 0xEF726566664F6B63, v23);
    uint64_t v16 = v21;
    swift_bridgeObjectRelease();
  }
  sub_10005CF84(a4 + 552, (uint64_t)&v27, &qword_10030ED60);
  sub_10005CF84((uint64_t)&v27, (uint64_t)&v34, &qword_10030ED60);
  if (v34)
  {
    sub_1000C0F08();
    Class v24 = sub_10024EF30(1).super.super.isa;
    uint64_t v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_10020D504((uint64_t)v24, 0xD000000000000017, 0x800000010027D150, v25);
    swift_bridgeObjectRelease();
  }
  return v16;
}

BOOL sub_1000BDB74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 88;
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10024E030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  Class v12 = (char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027788(v3, (uint64_t)v17);
  sub_10001C2A8(v17, v17[3]);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v13 = type metadata accessor for InAppBuyRoute.AdditionalBuyOptions();
  sub_1000C0AF4(a2 + *(int *)(v13 + 44), (uint64_t)v7);
  if (sub_10001FA0C((uint64_t)v7, 1, v8) == 1)
  {
    sub_10024E010();
    sub_1000AC6D0((uint64_t)v7, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  }
  Class v14 = (void *)sub_10009FE0C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v14) {

  }
  sub_10001C2EC((uint64_t)v17);
  return v14 != 0;
}

uint64_t sub_1000BDD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1000BEFBC(*(void *)a1, *(void *)(a1 + 8), a2);
  if (v3)
  {
    swift_errorRelease();
    uint64_t result = 0;
  }
  *a3 = result;
  return result;
}

uint64_t sub_1000BDDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  return sub_1000BDEE4(a2, a3, *a4, a4[1], a5, a6);
}

NSObject *sub_1000BDE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, NSObject **a3@<X8>)
{
  uint64_t result = sub_1000BF578(*(void *)a1, *(void *)(a1 + 8), a2);
  if (v3)
  {
    swift_errorRelease();
    uint64_t result = 0;
  }
  *a3 = result;
  return result;
}

uint64_t sub_1000BDE68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)(a1 + 16);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 0xF8)
  {
    sub_10001C2A8((void *)(a2 + 48), *(void *)(a2 + 72));
    uint64_t v3 = sub_10008B4BC();
    swift_beginAccess();
    *uint64_t v2 = v3;
  }
  return v3;
}

uint64_t sub_1000BDEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_100019524(&qword_10030C100);
  uint64_t v11 = sub_100026018(v10);
  __chkstk_darwin(v11, v12);
  sub_1000589AC();
  uint64_t v89 = a5;
  uint64_t v90 = v13;
  unint64_t v14 = *(void *)(a5 + 144);
  if (v14 >> 62) {
    goto LABEL_77;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  for (; v15; uint64_t v15 = sub_10024F6F0())
  {
    uint64_t v16 = 4;
    while (1)
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = sub_10024F380();
      }
      else
      {
        uint64_t v17 = *(void *)(v14 + 8 * v16);
        swift_retain();
      }
      uint64_t v18 = v16 - 3;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      BOOL v19 = *(void *)(v17 + 96) == a1 && *(void *)(v17 + 104) == a2;
      if (v19 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        sub_10005CF84(a6 + 416, (uint64_t)v100, &qword_10030AA30);
        sub_10005CF84((uint64_t)v100, (uint64_t)&v107, &qword_10030AA30);
        uint64_t v27 = v108;
        if (v108)
        {
          uint64_t v28 = v107;
          sub_10005CF84(a6 + 448, (uint64_t)v99, &qword_10030AA30);
          sub_10005CF84((uint64_t)v99, (uint64_t)&v109, &qword_10030AA30);
          uint64_t v29 = v110;
          if (v110)
          {
            uint64_t v30 = v109;
            sub_10005CF84(a6 + 464, (uint64_t)v98, &qword_10030AA30);
            sub_10005CF84((uint64_t)v98, (uint64_t)&v111, &qword_10030AA30);
            uint64_t v31 = v112;
            if (v112)
            {
              uint64_t v88 = v111;
              sub_10005CF84(a6 + 432, (uint64_t)v97, &qword_10030AA30);
              sub_10005CF84((uint64_t)v97, (uint64_t)&v113, &qword_10030AA30);
              if (v114)
              {
                uint64_t v83 = v114;
                uint64_t v82 = v113;
                sub_10005CF84(a6 + 560, (uint64_t)v96, &qword_10030A860);
                sub_10005CF84((uint64_t)v96, (uint64_t)v115, &qword_10030A860);
                uint64_t v85 = v30;
                uint64_t v86 = v29;
                uint64_t v87 = v28;
                uint64_t v84 = v31;
                if (sub_1000C066C((uint64_t)v115) == 1) {
                  goto LABEL_48;
                }
                if ((v115[312] & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_46;
                }
                char v48 = sub_1000C219C();
                swift_bridgeObjectRelease();
                if ((v48 & 1) == 0)
                {
LABEL_48:
                  sub_10005CF84(a6 + 496, (uint64_t)v95, &qword_10030AA30);
                  sub_10005CF84((uint64_t)v95, (uint64_t)v116, &qword_10030AA30);
                  if (v116[1])
                  {
                    uint64_t v51 = v90;
                    sub_10024E040();
                    uint64_t v52 = sub_10024E0A0();
                    uint64_t v53 = v91;
                    if (sub_10001FA0C(v90, 1, v52) != 1)
                    {
                      uint64_t v54 = sub_10024E050();
                      uint64_t v56 = v55;
                      sub_10003FDC8();
                      v57();
                      uint64_t v101 = v54;
                      uint64_t v102 = v56;
                      sub_10001DAC0();
                      uint64_t v49 = sub_10024F150();
                      unint64_t v50 = v58;
                      swift_bridgeObjectRelease();
                      goto LABEL_55;
                    }
                  }
                  else
                  {
                    uint64_t v59 = sub_10024E0A0();
                    uint64_t v51 = v90;
                    sub_1000195B4(v90, 1, 1, v59);
                    uint64_t v53 = v91;
                  }
                  sub_1000AC6D0(v51, &qword_10030C100);
                  uint64_t v49 = 0;
                  unint64_t v50 = 0xE000000000000000;
                }
                else
                {
LABEL_46:
                  if (*(void *)(a6 + 344))
                  {
                    uint64_t v49 = *(void *)(a6 + 336);
                    unint64_t v50 = *(void *)(a6 + 344);
                  }
                  else
                  {
                    uint64_t v49 = 0;
                    unint64_t v50 = 0xE000000000000000;
                  }
                  uint64_t v53 = v91;
                  swift_bridgeObjectRetain();
                }
LABEL_55:
                sub_10001C2A8((void *)(v53 + 48), *(void *)(v53 + 72));
                uint64_t v60 = (void *)sub_10008A5FC(a3, a4);
                uint64_t v61 = v60;
                uint64_t v62 = v60[10];
                if (v62)
                {
                  uint64_t v92 = v50;
                  uint64_t v64 = v60[11];
                  uint64_t v63 = v60[12];
                  uint64_t v65 = v60[13];
                  uint64_t v66 = v60[14];
                  uint64_t v101 = v60[9];
                  uint64_t v102 = v62;
                  uint64_t v103 = v64;
                  uint64_t v104 = v63;
                  uint64_t v105 = v65;
                  uint64_t v106 = v66;
                  BOOL v67 = v101 == v87 && v62 == v27;
                  if (v67 || (sub_1000C23DC(), (sub_10024FA60() & 1) != 0))
                  {
                    uint64_t v69 = *(void *)(v89 + 80);
                    uint64_t v68 = *(void *)(v89 + 88);
                    uint64_t v70 = sub_1000C23DC();
                    sub_1000C0690(v70, v71);
                    swift_bridgeObjectRetain();
                    char v72 = sub_1001B99A4(v85, v86, a3, a4, v69, v68, a1, a2, v49, v92, v82, v83, v88, v84, &v101);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v72) {
                      return 22;
                    }
                    else {
                      return 18;
                    }
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                if (v61[10])
                {
                  if (qword_100308DE0 != -1) {
                    swift_once();
                  }
                  uint64_t v73 = sub_10024E1F0();
                  uint64_t v33 = (void *)sub_1000ACE40(v73, (uint64_t)qword_10034C0E0);
                  os_log_type_t v74 = sub_10024EE10();
                  if (sub_1000C200C(v74))
                  {
                    uint64_t v75 = (_WORD *)sub_10003FD28();
                    sub_1000C2158(v75);
                    uint64_t v78 = "Key ID doesn't match stored value";
                    goto LABEL_74;
                  }
LABEL_75:

                  swift_release();
                  return 17;
                }
                if (qword_100308DE0 != -1) {
                  swift_once();
                }
                uint64_t v79 = sub_10024E1F0();
                uint64_t v33 = (void *)sub_1000ACE40(v79, (uint64_t)qword_10034C0E0);
                os_log_type_t v80 = sub_10024EE10();
                if (!sub_1000C200C(v80)) {
                  goto LABEL_75;
                }
                uint64_t v81 = (_WORD *)sub_10003FD28();
                sub_1000C2158(v81);
                uint64_t v78 = "Missing key pair set";
LABEL_74:
                sub_1000C20B0((void *)&_mh_execute_header, v76, v77, v78);
                sub_1000C211C();
                swift_release();
LABEL_43:

                return 17;
              }
              if (qword_100308DE0 != -1) {
                swift_once();
              }
              uint64_t v45 = sub_10024E1F0();
              uint64_t v33 = (void *)sub_1000ACE40(v45, (uint64_t)qword_10034C0E0);
              os_log_type_t v46 = sub_10024EE10();
              if (!sub_1000C200C(v46)) {
                goto LABEL_43;
              }
              uint64_t v47 = (_WORD *)sub_10003FD28();
              sub_1000C2158(v47);
              uint64_t v38 = "Missing offer nonce";
            }
            else
            {
              if (qword_100308DE0 != -1) {
                swift_once();
              }
              uint64_t v42 = sub_10024E1F0();
              uint64_t v33 = (void *)sub_1000ACE40(v42, (uint64_t)qword_10034C0E0);
              os_log_type_t v43 = sub_10024EE10();
              if (!sub_1000C200C(v43)) {
                goto LABEL_43;
              }
              uint64_t v44 = (_WORD *)sub_10003FD28();
              sub_1000C2158(v44);
              uint64_t v38 = "Missing timestamp";
            }
          }
          else
          {
            if (qword_100308DE0 != -1) {
              swift_once();
            }
            uint64_t v39 = sub_10024E1F0();
            uint64_t v33 = (void *)sub_1000ACE40(v39, (uint64_t)qword_10034C0E0);
            os_log_type_t v40 = sub_10024EE10();
            if (!sub_1000C200C(v40)) {
              goto LABEL_43;
            }
            uint64_t v41 = (_WORD *)sub_10003FD28();
            sub_1000C2158(v41);
            uint64_t v38 = "Missing signature";
          }
        }
        else
        {
          if (qword_100308DE0 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_10024E1F0();
          uint64_t v33 = (void *)sub_1000ACE40(v32, (uint64_t)qword_10034C0E0);
          os_log_type_t v34 = sub_10024EE10();
          if (!sub_1000C200C(v34)) {
            goto LABEL_43;
          }
          uint64_t v35 = (_WORD *)sub_10003FD28();
          sub_1000C2158(v35);
          uint64_t v38 = "Missing offer key ID";
        }
        sub_1000C20B0((void *)&_mh_execute_header, v36, v37, v38);
        sub_1000C211C();
        goto LABEL_43;
      }
      swift_release();
      ++v16;
      if (v18 == v15) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_77:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10024E1F0();
  uint64_t v21 = (void *)sub_1000ACE40(v20, (uint64_t)qword_10034C0E0);
  os_log_type_t v22 = sub_10024EE10();
  if (sub_1000C200C(v22))
  {
    uint64_t v23 = (_WORD *)sub_10003FD28();
    sub_1000C2158(v23);
    sub_1000C20B0((void *)&_mh_execute_header, v24, v25, "Invalid offer ID");
    sub_1000C211C();
  }

  return 15;
}

void *sub_1000BE7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = *sub_10001C2A8((void *)(v4 + 88), *(void *)(v4 + 112));
  sub_1000A01A0();
  uint64_t v8 = sub_1000C2628();
  sub_10003C360(v8);
  uint64_t v9 = sub_1000FFE70(v7, a3, a4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1000BE83C(uint64_t a1)
{
  sub_10005CF84(a1 + 80, (uint64_t)v6, &qword_10030AA30);
  sub_10005CF84((uint64_t)v6, (uint64_t)v7, &qword_10030AA30);
  if (!v7[1] || !*(void *)(a1 + 392)) {
    return 0;
  }
  sub_10001C2A8((void *)(v1 + 88), *(void *)(v1 + 112));
  swift_bridgeObjectRetain();
  sub_1000A021C();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

double sub_1000BE918@<D0>(char a1@<W1>, void *a2@<X8>)
{
  type metadata accessor for AllSetDialog();
  swift_initStackObject();
  sub_100150F8C();
  if (a1)
  {
    swift_release();
    uint64_t v4 = 0;
  }
  else
  {
    type metadata accessor for IneligibleForOfferDialog();
    uint64_t v4 = sub_1000C2314();
    sub_1001518C8();
    sub_1000C2628();
    swift_release();
  }
  a2[3] = &type metadata for LegacyInAppBuyResponse;
  a2[4] = sub_1000C0578();
  uint64_t v5 = (void *)sub_1000C2258();
  *a2 = v5;
  _OWORD v5[2] = 0;
  v5[3] = 0;
  void v5[4] = _swiftEmptyArrayStorage;
  uint64_t v6 = sub_1000C20D0((uint64_t)v5, 0);
  uint64_t v7 = sub_1000C24CC(v6, 1);
  *(void *)(v7 + 112) = 0;
  *(void *)(v7 + 120) = 1;
  double result = 0.0;
  *(_OWORD *)(v7 + 160) = 0u;
  *(_OWORD *)(v7 + 176) = 0u;
  *(_OWORD *)(v7 + 128) = 0u;
  *(_OWORD *)(v7 + 144) = 0u;
  *(unsigned char *)(v7 + 192) = 14;
  *(void *)(v7 + 200) = 0;
  *(void *)(v7 + 208) = 0;
  *(void *)(v7 + 216) = v4;
  *(unsigned char *)(v7 + 224) = 1;
  return result;
}

void sub_1000BEA14(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X4>, char a4@<W5>, uint64_t *a5@<X8>)
{
  uint64_t v36 = sub_10024E030();
  sub_10001B550();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  sub_10002059C();
  uint64_t v13 = v12 - v11;
  sub_10001C2A8((void *)(v5 + 88), *(void *)(v5 + 112));
  sub_1001D255C();
  uint64_t v14 = a2;
  uint64_t v15 = (void *)sub_10009DC4C();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v36);
  if (v15)
  {
    sub_1000AD160((void *)(v5 + 88), *(void *)(v5 + 112));
    sub_1000A2634(v15, a1 & 1);
    if (v33)
    {
    }
    else
    {
      uint64_t v17 = v5;
      type metadata accessor for AllSetDialog();
      swift_initStackObject();
      sub_100150F8C();
      swift_release();
      uint64_t v18 = 0;
      if ((a1 & 1) != 0 && (a4 & 1) == 0)
      {
        BOOL v19 = sub_1000D563C();
        if (v20)
        {
          uint64_t v21 = (uint64_t)v19;
          uint64_t v22 = v20;
          sub_10001C2A8((void *)(v17 + 48), *(void *)(v17 + 72));
          sub_10008A5FC(v14, a3);
          uint64_t v23 = sub_1000FE9DC(v21, v22);
          swift_bridgeObjectRelease();
          swift_release();
          if (v23)
          {
            swift_bridgeObjectRetain();
            uint64_t v24 = (void *)(v17 + 48);
          }
          else
          {
            sub_1000D44D4();
            uint64_t v24 = (void *)(v17 + 48);
            if ((v25 & 0x100000000) == 0) {
              sub_10024EF70();
            }
          }
          sub_1000AD160(v24, *(void *)(v17 + 72));
          sub_10008AFE8();
          sub_10001C2A8(v24, *(void *)(v17 + 72));
          sub_10008A7F0();
          uint64_t v26 = sub_10005148C();
          uint64_t v28 = v27;
          sub_10001DB0C((uint64_t)v37);
          swift_release();
          swift_bridgeObjectRelease();
          sub_1000D9478(4);
          if (v29) {
            sub_10024DF80();
          }
          type metadata accessor for DidConsentToPriceIncreaseDialog();
          swift_allocObject();
          uint64_t v18 = sub_100151B98(v26, v28);
          swift_release();
        }
        else
        {
          uint64_t v18 = 0;
        }
      }
      a5[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      a5[4] = sub_1000C0578();
      uint64_t v30 = swift_allocObject();
      *a5 = v30;

      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      *(void *)(v30 + 32) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v30 + 40) = 0;
      *(unsigned char *)(v30 + 41) = 0;
      *(void *)(v30 + 48) = 0x3233363232333731;
      *(void *)(v30 + 56) = 0xEB00000000373231;
      *(void *)(v30 + 64) = 0;
      *(unsigned char *)(v30 + 72) = 1;
      *(void *)(v30 + 80) = 0;
      *(void *)(v30 + 88) = 0;
      *(void *)(v30 + 96) = 0xF000000000000000;
      *(void *)(v30 + 104) = 0;
      *(void *)(v30 + 112) = 0;
      *(void *)(v30 + 120) = 1;
      *(_OWORD *)(v30 + 160) = 0u;
      *(_OWORD *)(v30 + 176) = 0u;
      *(_OWORD *)(v30 + 128) = 0u;
      *(_OWORD *)(v30 + 144) = 0u;
      *(unsigned char *)(v30 + 192) = 22;
      *(void *)(v30 + 200) = 0;
      *(void *)(v30 + 208) = 0;
      *(void *)(v30 + 216) = v18;
      *(unsigned char *)(v30 + 224) = 2;
    }
  }
  else
  {
    sub_1000C0494();
    sub_1000290D0();
    sub_1000C2220(v16, 6);
  }
}

uint64_t (*sub_1000BEDFC(uint64_t a1, uint64_t a2))(void *a1)
{
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v2;
  v5[3] = a1;
  void v5[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1000C056C;
}

uint64_t sub_1000BEE74(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CheddarTransaction();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1000D428C();
  uint64_t v14 = v13;
  sub_10001C2A8(a2 + 6, a2[9]);
  uint64_t v20 = sub_10008AEB4(2uLL, v12, v14, v15, v16, v17, v18, v19);
  LOBYTE(v12) = v21;
  swift_bridgeObjectRelease();
  id v22 = a1;
  swift_bridgeObjectRetain();
  sub_100155BB8(v22, a3, a4, v20, v12 & 1, v11);
  sub_10001C2A8(a2 + 11, a2[14]);
  sub_1002186D8();
  return sub_1000C0AA0((uint64_t)v11, (void (*)(void))type metadata accessor for CheddarTransaction);
}

uint64_t sub_1000BEFBC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112));
  int v8 = sub_10009FC6C(a3);
  if (!v8)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1000C0494();
    sub_1000290D0();
    sub_1000C2220(v9, 7);
    return v4;
  }
  if (v8 == 1) {
    sub_1000C2270();
  }
  else {
    sub_1000C2284();
  }
  uint64_t v4 = sub_1000C2468();
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_100026F74(a1, a2);
  if (v11)
  {
    uint64_t v4 = v11;
    if ((*(unsigned char *)(v11 + 112) & 1) == 0)
    {
      sub_1000C0494();
      sub_1000290D0();
      sub_1000C2220(v26, 7);
      swift_release();
      return v4;
    }
    sub_100027788(v3 + 88, (uint64_t)v28);
    sub_10001C2A8(v28, v28[3]);
    sub_100019524(&qword_1003090E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100255FB0;
    uint64_t v13 = *(void *)(a3 + 200);
    *(void *)(inited + 32) = *(void *)(a3 + 192);
    *(void *)(inited + 40) = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1000C23DC();
    unint64_t v16 = (unint64_t)sub_1000FFCF4(v14, v15);
    swift_setDeallocating();
    sub_10020BB20();
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      id v17 = (id)sub_10024F6F0();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_13:
        sub_10014ED88(0, (v16 & 0xC000000000000001) == 0, v16);
        if ((v16 & 0xC000000000000001) != 0) {
          id v18 = (id)sub_10024F380();
        }
        else {
          id v18 = *(id *)(v16 + 32);
        }
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        sub_10001C2EC((uint64_t)v28);
        id v17 = v19;
        if (sub_1000D84BC())
        {
          sub_1000D563C();
          uint64_t v21 = v20;

          swift_bridgeObjectRelease();
          if (!v21)
          {

            return v4;
          }
        }
        else
        {
        }
LABEL_28:
        sub_1000C0494();
        sub_1000290D0();
        sub_1000C2220(v27, 7);
        swift_release();

        return v4;
      }
    }
    else
    {
      id v17 = *(id *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)v28);
    goto LABEL_28;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10024E1F0();
  sub_10001B0E8(v22, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_10024E1D0();
  os_log_type_t v24 = sub_10024EE10();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    v28[0] = sub_10003FD78();
    *(_DWORD *)uint64_t v25 = 136315138;
    swift_bridgeObjectRetain();
    v28[6] = sub_1000F3F3C(a1, a2, v28);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Requested offer for invalid winback offer identifier \"%s\". This may be a client error in the StoreKit framework.", v25, 0xCu);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_1000BF3D4(uint64_t a1, uint64_t a2, uint8_t *a3)
{
  sub_10001C2A8((void *)(v3 + 88), *(void *)(v3 + 112));
  int v7 = sub_10009FC6C((uint64_t)a3);
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char v9 = 4;
LABEL_8:
    sub_1000C0494();
    sub_1000290D0();
    *uint64_t v10 = v9;
    return swift_willThrow();
  }
  if (v7 == 1) {
    sub_1000C2270();
  }
  else {
    sub_1000C2284();
  }
  char v8 = sub_1000C2468();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_7;
  }
  uint64_t result = sub_100026CB8(a1, a2);
  if (!result)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10024E1F0();
    sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
    uint64_t v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (_WORD *)swift_slowAlloc();
      sub_1000C2158(v15);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Requested offer for invalid ad-hoc offer identifier. This may be a client error in the StoreKit framework.", a3, 2u);
      sub_10003FBCC();
    }

    char v9 = 3;
    goto LABEL_8;
  }
  return result;
}

NSObject *sub_1000BF578(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100026F0C(a1, a2);
  if (v7)
  {
    char v8 = v7;
    sub_1000AD160((void *)(v3 + 88), *(void *)(v3 + 112));
    char v9 = sub_10009FC6C(a3);
    uint64_t isa = (uint64_t)v8[12].isa;
    swift_bridgeObjectRetain();
    char v11 = sub_1000D3F74(v9, isa);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_10024E1F0();
      sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v13 = sub_10024E1D0();
      os_log_type_t v14 = sub_10024EE10();
      if (os_log_type_enabled(v13, v14))
      {
        os_log_type_t v29 = v14;
        uint64_t v15 = sub_10003FD78();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315650;
        swift_bridgeObjectRetain();
        sub_1000F3F3C(a1, a2, &v30);
        sub_1000C248C();
        sub_10024F100();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        sub_1000C04E0();
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_10024EC30();
        unint64_t v18 = v17;
        swift_bridgeObjectRelease();
        sub_1000F3F3C(v16, v18, &v30);
        sub_1000C2608();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        if (v9)
        {
          if (v9 == 1)
          {
            unint64_t v19 = 0xE800000000000000;
            uint64_t v20 = sub_1000C2270();
          }
          else
          {
            unint64_t v19 = 0xE700000000000000;
            uint64_t v20 = sub_1000C2284();
          }
        }
        else
        {
          unint64_t v19 = 0xE300000000000000;
          uint64_t v20 = 7824750;
        }
        sub_1000F3F3C(v20, v19, &v30);
        sub_10024F100();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v29, " Currently ineligible for offer code  %s: %s does not  contain %s", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1000C0494();
      sub_1000290D0();
      sub_1000C2220(v27, 5);
      swift_release();
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10024E1F0();
    sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    char v8 = sub_10024E1D0();
    os_log_type_t v22 = sub_10024EE10();
    if (os_log_type_enabled(v8, v22))
    {
      uint64_t v23 = sub_1000AC834();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a1, a2, &v30);
      sub_1000C248C();
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v24 = *(void *)(a3 + 80);
      unint64_t v25 = *(void *)(a3 + 88);
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v24, v25, &v30);
      sub_1000C2608();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v22, "Internal ID %s did not correspond to a configured offer for codes for %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1000C0494();
    sub_1000290D0();
    sub_1000C2220(v26, 2);
  }
  return v8;
}

uint64_t sub_1000BFA4C()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1000BFA54()
{
  uint64_t v0 = sub_100094D84();
  sub_10001C2EC(v0 + 88);
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_1000BFA8C()
{
  uint64_t v0 = sub_1000BFA54();
  return _swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for InAppBuyRoute()
{
  return sub_10002F7A4();
}

uint64_t sub_1000BFAD4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1000BFAEC(uint64_t a1)
{
  long long v18 = *(_OWORD *)(a1 + 480);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 240);
  sub_1000BFCE0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(a1 + 496));
  return a1;
}

uint64_t sub_1000BFCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t result = a10;
  if (a10)
  {
    uint64_t v74 = STACK[0x468];
    uint64_t v73 = STACK[0x460];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_100045DA0(a71, a72, v73, v74);
  }
  return result;
}

void *sub_1000C0148(void *a1)
{
  uint64_t v3 = a1[70];
  uint64_t v4 = a1[71];
  uint64_t v5 = a1[72];
  uint64_t v6 = a1[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100045AC0(v3, v4, v5, v6);
  return a1;
}

unint64_t sub_1000C0494()
{
  unint64_t result = qword_10030ED48;
  if (!qword_10030ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030ED48);
  }
  return result;
}

unint64_t sub_1000C04E0()
{
  unint64_t result = qword_10030ED50;
  if (!qword_10030ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030ED50);
  }
  return result;
}

uint64_t sub_1000C052C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C056C(void *a1)
{
  return sub_1000BEE74(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_1000C0578()
{
  unint64_t result = qword_10030ED58;
  if (!qword_10030ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030ED58);
  }
  return result;
}

uint64_t sub_1000C05C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[12];
  if (v1 >> 60 != 15) {
    sub_10003F808(v0[11], v1);
  }
  if (v0[15] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 225, 7);
}

uint64_t sub_1000C066C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000C0690(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for InAppBuyRoute.AdditionalBuyOptions()
{
  return sub_10002F7A4();
}

uint64_t sub_1000C06F8()
{
  unint64_t v1 = (int *)(type metadata accessor for InAppBuyRoute.AdditionalBuyOptions() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v5 + v1[13];
  uint64_t v7 = sub_10024E030();
  if (!sub_10001FA0C(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 584) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, v4 + 873, v2 | 7);
}

uint64_t sub_1000C09B0()
{
  uint64_t v1 = type metadata accessor for InAppBuyRoute.AdditionalBuyOptions();
  sub_10003C680(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v0 + v7);
  uint64_t v9 = *(unsigned __int8 *)(v0 + v7 + 1);
  return sub_1000BD6F8(v0 + v6, v8, v9, v0 + ((v7 + 9) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1000C0A48()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C0A80()
{
  return sub_1001BD334(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000C0A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C0A98()
{
  return swift_release();
}

uint64_t sub_1000C0AA0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100025FBC();
  sub_10003FDC8();
  v3();
  return a1;
}

uint64_t sub_1000C0AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C0B5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1000C0B6C()
{
  unint64_t result = qword_10030E968;
  if (!qword_10030E968)
  {
    sub_10024E030();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030E968);
  }
  return result;
}

void *sub_1000C0BBC(void *a1)
{
  uint64_t v3 = a1[70];
  uint64_t v4 = a1[71];
  uint64_t v5 = a1[72];
  uint64_t v6 = a1[73];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100045DA0(v3, v4, v5, v6);
  return a1;
}

unint64_t sub_1000C0F08()
{
  unint64_t result = qword_10030ED68[0];
  if (!qword_10030ED68[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_10030ED68);
  }
  return result;
}

uint64_t sub_1000C0F48(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 192);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000C10C8(v3);
  return a1;
}

void *sub_1000C10C8(void *result)
{
  if (result)
  {
    id v1 = result;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000C1174(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 192);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10009856C(v3);
  return a1;
}

uint64_t *sub_1000C12F4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1000C1388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_1000C1390()
{
  sub_1000C1D28();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1000C1444(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[11];
    uint64_t v9 = (void *)(a1 + v8);
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10024E030();
    swift_bridgeObjectRetain();
    swift_retain();
    if (sub_10001FA0C((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_1000195B4((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
  }
  return v4;
}

uint64_t sub_1000C15B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_10024E030();
  uint64_t result = sub_10001FA0C(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1000C165C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[11];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10024E030();
  swift_bridgeObjectRetain();
  swift_retain();
  if (sub_10001FA0C((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_1000195B4((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_1000C1780(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v6 = a3[11];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10024E030();
  int v10 = sub_10001FA0C((uint64_t)v7, 1, v9);
  int v11 = sub_10001FA0C((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  sub_1000195B4((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1000C1940(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[11];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10024E030();
  if (sub_10001FA0C((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    sub_1000195B4((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  return a1;
}

uint64_t sub_1000C1A4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = a3[11];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10024E030();
  int v11 = sub_10001FA0C((uint64_t)v8, 1, v10);
  int v12 = sub_10001FA0C((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1000195B4((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t sub_1000C1BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C1C04);
}

uint64_t sub_1000C1C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100019524((uint64_t *)&unk_10030FD70);
    uint64_t v9 = a1 + *(int *)(a3 + 44);
    return sub_10001FA0C(v9, a2, v8);
  }
}

uint64_t sub_1000C1C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C1CA4);
}

uint64_t sub_1000C1CA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100019524((uint64_t *)&unk_10030FD70);
    uint64_t v8 = v5 + *(int *)(a4 + 44);
    return sub_1000195B4(v8, a2, a2, v7);
  }
  return result;
}

void sub_1000C1D28()
{
  if (!qword_10030EDF0)
  {
    sub_10024E030();
    unint64_t v0 = sub_10024F030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10030EDF0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for InAppBuyRouteError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C1E4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppBuyRouteError()
{
  return &type metadata for InAppBuyRouteError;
}

unint64_t sub_1000C1E88()
{
  unint64_t result = qword_10030EDF8;
  if (!qword_10030EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EDF8);
  }
  return result;
}

uint64_t sub_1000C1ED4(__n128 a1)
{
  *(__n128 *)(v1 + 968) = a1;
  *(_OWORD *)(v1 + 984) = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(v1 + 1000) = *(_OWORD *)(v1 + 416);
  *(_OWORD *)(v1 + 1016) = *(_OWORD *)(v1 + 432);
  *(_OWORD *)(v1 + 1032) = *(_OWORD *)(v1 + 448);
  *(_OWORD *)(v1 + 1048) = *(_OWORD *)(v1 + 464);
  *(_OWORD *)(v1 + 1064) = *(_OWORD *)(v1 + 480);
  *(_OWORD *)(v1 + 1080) = *(_OWORD *)(v1 + 496);
  *(_OWORD *)(v1 + 1096) = *(_OWORD *)(v1 + 512);
  *(_OWORD *)(v1 + 1112) = *(_OWORD *)(v1 + 528);
  *(_OWORD *)(v1 + 1128) = *(_OWORD *)(v1 + 544);
  *(_OWORD *)(v1 + 1144) = *(_OWORD *)(v1 + 576);
  *(_OWORD *)(v1 + 1160) = *(_OWORD *)(v1 + 592);
  *(_OWORD *)(v1 + 1176) = *(_OWORD *)(v1 + 608);
  *(_OWORD *)(v1 + 1192) = *(_OWORD *)(v1 + 624);
  *(_OWORD *)(v1 + 1208) = *(_OWORD *)(v1 + 640);
  *(void *)(v1 + 1224) = *(void *)(v1 + 672);
  *(void *)(v1 + 1232) = *(void *)(v1 + 664);
  *(unsigned char *)(v1 + 1240) = *(_DWORD *)(v1 + 680);
  *(void *)(v1 + 1248) = *(void *)(v1 + 696);
  *(void *)(v1 + 1256) = *(void *)(v1 + 688);
  *(unsigned char *)(v1 + 1264) = *(_DWORD *)(v1 + 704);
  return v1 + 2152;
}

void sub_1000C1FF8()
{
  *(_DWORD *)(v0 + 640) = 2;
  *(_DWORD *)(v0 + 672) = 22;
}

BOOL sub_1000C200C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

double sub_1000C2028()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 824) = 0u;
  *(_OWORD *)(v0 + 840) = 0u;
  *(_OWORD *)(v0 + 856) = 0u;
  *(_OWORD *)(v0 + 872) = 0u;
  return result;
}

void sub_1000C2050()
{
  *(_WORD *)(v0 + 1630) = *(_WORD *)(v0 + 2500);
  *(void *)(v0 + 1632) = 0x3233363232333731;
  *(void *)(v0 + 1640) = 0xEB00000000373231;
  *(void *)(v0 + 1648) = 0;
  *(unsigned char *)(v0 + 1656) = *(unsigned char *)(v0 + 2488);
}

void sub_1000C20B0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1000C20D0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 40) = a2;
  *(unsigned char *)(result + 41) = 0;
  *(void *)(result + 48) = 0x3233363232333731;
  *(void *)(result + 56) = 0xEB00000000373231;
  *(void *)(result + 64) = 0;
  return result;
}

double sub_1000C2100()
{
  double result = 0.0;
  v0[170] = 0u;
  v0[169] = 0u;
  v0[168] = 0u;
  v0[167] = 0u;
  return result;
}

uint64_t sub_1000C211C()
{
  return swift_slowDealloc();
}

uint64_t sub_1000C2138(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return sub_10024F100();
}

_WORD *sub_1000C2158(_WORD *result)
{
  *double result = 0;
  return result;
}

double sub_1000C2174()
{
  v0[208] = 0;
  v0[209] = 0;
  v0[210] = 0xF000000000000000;
  v0[211] = 0;
  v0[212] = 0;
  v0[213] = 1;
  return 0.0;
}

uint64_t sub_1000C219C()
{
  return sub_10024FA60();
}

uint64_t sub_1000C21CC()
{
  return 3157553;
}

uint64_t sub_1000C21F0(uint64_t a1)
{
  *(void *)(v1 + 160) = a1;
  *(void *)(v1 + 48) = v2;
  return sub_10024F100();
}

uint64_t sub_1000C2220@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

void sub_1000C2238()
{
  *(_DWORD *)(v0 + 688) = 0;
  *(void *)(v0 + 512) = 0;
  *(void *)(v0 + 608) = 0;
  *(void *)(v0 + 592) = 0;
  *(void *)(v0 + 280) = 0;
}

uint64_t sub_1000C2258()
{
  return swift_allocObject();
}

uint64_t sub_1000C2270()
{
  return 0x676E697473697865;
}

uint64_t sub_1000C2284()
{
  return 0x64657269707865;
}

void sub_1000C22B8()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t sub_1000C22E8(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return sub_10024F100();
}

uint64_t sub_1000C2314()
{
  return swift_allocObject();
}

uint64_t sub_1000C232C()
{
  return swift_slowAlloc();
}

void *sub_1000C2368()
{
  return sub_10001C2A8(*(void **)(v0 + 384), *(void *)(*(void *)(v0 + 704) + 112));
}

void sub_1000C238C()
{
  v0[98] = 0;
  v0[97] = 0;
  v0[99] = 0xF000000000000000;
  v0[100] = 0;
  v0[101] = 0;
}

double sub_1000C23A8(__n128 a1)
{
  *(__n128 *)(v1 + 576) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 + 528) = 0u;
  *(_DWORD *)(v1 + 640) = 1;
  return result;
}

void sub_1000C23C0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

uint64_t sub_1000C23DC()
{
  return v0;
}

BOOL sub_1000C23E8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_1000C2404(uint64_t a1@<X8>)
{
  *(void *)(v1 + 1616) = a1;
  *(unsigned char *)(v1 + 1624) = *(unsigned char *)(v1 + 2504);
  *(unsigned char *)(v1 + 1625) = 0;
}

void *sub_1000C241C(uint64_t a1)
{
  *uint64_t v2 = a1;
  unsigned int v4 = (void *)(a1 + 16);
  return memcpy(v4, (const void *)(v1 + 712), 0xD1uLL);
}

uint64_t sub_1000C2440@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 32) = a2;
  *(_WORD *)(result + 40) = v2;
  *(_WORD *)(result + 42) = v3;
  return result;
}

void sub_1000C2450()
{
  v0[329] = 0;
  v0[328] = 0;
  v0[330] = v1;
  v0[331] = 0;
  v0[332] = 0;
}

uint64_t sub_1000C2468()
{
  return sub_10024FA60();
}

void sub_1000C24A4()
{
  sub_1000D7A50();
}

uint64_t sub_1000C24C0()
{
  return v0;
}

uint64_t sub_1000C24CC@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 72) = a2;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0xF000000000000000;
  *(void *)(result + 104) = 0;
  return result;
}

void sub_1000C24F4()
{
  *(void *)(v0 + 368) = 1;
  sub_1000D63A4(1u);
}

uint64_t sub_1000C2534(uint64_t a1, uint64_t a2)
{
  sub_10001C2A8(*(void **)(v2 + 384), a2);
  int v4 = *(_DWORD *)(v2 + 464) & 1;
  return sub_1000A1278(v3, v4);
}

uint64_t sub_1000C256C(uint64_t a1)
{
  *(void *)(v1 + 160) = a1;
  return v1 + 160;
}

uint64_t sub_1000C2580(float a1)
{
  *uint64_t v2 = a1;
  *(void *)(v1 + 40) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C25A0()
{
  return v0;
}

uint64_t sub_1000C25B4()
{
  *(_WORD *)(v0 + 22) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C25D4()
{
  *(_WORD *)(v0 + 12) = 2080;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C25F4(float a1)
{
  *uint64_t v2 = a1;
  uint64_t result = *(void *)(v4 + 408);
  *(_DWORD *)(v1 + 144) = v3;
  return result;
}

uint64_t sub_1000C2608()
{
  return sub_10024F100();
}

uint64_t sub_1000C2628()
{
  return v0;
}

uint64_t sub_1000C2634()
{
  return v0;
}

uint64_t sub_1000C2640()
{
  return v0;
}

void *initializeBufferWithCopyOfBuffer for EventLoopIterator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HTTPHeaders()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for EventLoopIterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for EventLoopIterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for Template()
{
}

void *sub_1000C2720(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10024DDC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v39 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  unint64_t v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17, v20);
  uint64_t v41 = (char *)&v39 - v21;
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v40 = a1;
  NSString v24 = sub_10024E6A0();
  if (a4)
  {
    NSString v25 = sub_10024E6A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v25 = 0;
  }
  id v26 = [v23 URLForResource:v24 withExtension:v25];

  if (v26)
  {
    sub_10024DD70();

    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v10, v19, v11);
    sub_1000195B4((uint64_t)v10, 0, 1, v11);
    if (sub_10001FA0C((uint64_t)v10, 1, v11) != 1)
    {
      swift_bridgeObjectRelease();
      v27(v41, v10, v11);
      uint64_t v28 = sub_10024E690();
      uint64_t v35 = sub_1000CD754(v28, v34);
      uint64_t v42 = 0;
      uint64_t v36 = sub_1000CE2D4((uint64_t)v35, &v42);
      swift_bridgeObjectRelease();
      sub_10024E730();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1000C4824();
      v37();
      return v36;
    }
  }
  else
  {
    sub_1000195B4((uint64_t)v10, 1, 1, v11);
  }
  sub_1000257D4((uint64_t)v10);
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_10024E1F0();
  sub_10001B0E8(v29, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10024E1D0();
  os_log_type_t v31 = sub_10024EE10();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000F3F3C(v40, a2, &v42);
    sub_1000C4834(v33);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "No url found for resource: %s", v32, 0xCu);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_1000C2DBC(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  sub_1000318C8(a1, (uint64_t)v10);
  uint64_t v5 = sub_1000644F8((uint64_t)v10);
  uint64_t v8 = v5;
  if (v7 != 3)
  {
    sub_100064DC4(v5, v6, v7);
    uint64_t v8 = sub_10024E510();
  }
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_10024E750(a3);
  sub_1000C317C(v8, a2, (uint64_t)v10);
  swift_bridgeObjectRelease();
  return v10[0];
}

uint64_t sub_1000C2E70(long long *a1, long long *a2)
{
  uint64_t v3 = sub_1000C47E4(a1, &v23);
  if (v26)
  {
    uint64_t v4 = v23;
    sub_1000C47E4(a2, v21);
    if (v22 == 1)
    {
      uint64_t v5 = *(void *)&v21[0];
      uint64_t v6 = v4;
LABEL_18:
      char v10 = sub_1001DA810(v6, v5);
      return v10 & 1;
    }
    goto LABEL_5;
  }
  uint64_t v7 = v24;
  uint64_t v8 = v25;
  sub_1000C4848((uint64_t)v3, v21);
  if (v9)
  {
LABEL_5:
    char v10 = 0;
    return v10 & 1;
  }
  sub_1000C4800();
  BOOL v16 = v16 && v7 == v13;
  BOOL v18 = v16 && v11 == v14 && v12 == v15;
  if (v18 || (v19 = sub_10024F9D0(), char v10 = 0, (v19 & 1) != 0))
  {
    uint64_t v6 = v8;
    uint64_t v5 = (uint64_t)a2;
    goto LABEL_18;
  }
  return v10 & 1;
}

uint64_t sub_1000C2F40(long long *a1, long long *a2)
{
  uint64_t v3 = sub_1000C47E4(a1, &v32);
  switch(v36)
  {
    case 1:
      unint64_t v5 = *((void *)&v32 + 1);
      unint64_t v4 = v32;
      uint64_t v6 = v33;
      uint64_t v7 = v34;
      sub_1000C47E4(a2, &v28);
      if (v31 != 1) {
        goto LABEL_31;
      }
      goto LABEL_5;
    case 2:
      uint64_t v13 = v32;
      sub_1000C4848((uint64_t)v3, &v28);
      if (v14 != 2) {
        goto LABEL_31;
      }
      char v12 = sub_1001DA5E0(v13, v28);
      break;
    case 3:
      uint64_t v15 = v34;
      uint64_t v16 = v35;
      sub_1000C4848((uint64_t)v3, &v28);
      if (v17 != 3) {
        goto LABEL_31;
      }
      sub_1000C4800();
      BOOL v25 = v9 && v15 == v20 && v18 == v21 && v19 == v22;
      if (v25 || (v26 = sub_10024F9D0(), char v12 = 0, (v26 & 1) != 0)) {
        char v12 = sub_1001DA810(v16, (uint64_t)a2);
      }
      break;
    default:
      unint64_t v5 = *((void *)&v32 + 1);
      unint64_t v4 = v32;
      uint64_t v6 = v33;
      uint64_t v7 = v34;
      sub_1000C4848((uint64_t)v3, &v28);
      if (v8)
      {
LABEL_31:
        char v12 = 0;
      }
      else
      {
LABEL_5:
        BOOL v9 = v6 == v29 && v7 == v30;
        if (v9 && v4 >> 16 == (unint64_t)v28 >> 16 && v5 >> 16 == *((void *)&v28 + 1) >> 16) {
          char v12 = 1;
        }
        else {
          char v12 = sub_10024F9D0();
        }
      }
      break;
  }
  return v12 & 1;
}

uint64_t sub_1000C30BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000C3114(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_1000C47E4, (uint64_t (*)(unsigned char *, unsigned char *))sub_1000C2E70);
}

uint64_t sub_1000C30E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000C3114(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_1000C47E4, (uint64_t (*)(unsigned char *, unsigned char *))sub_1000C2F40);
}

uint64_t sub_1000C3114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unsigned char *), uint64_t (*a6)(unsigned char *, unsigned char *))
{
  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

uint64_t sub_1000C317C(uint64_t result, uint64_t a2, uint64_t a3)
{
  void (*v146)(void *__return_ptr, void *);
  uint64_t v147;
  int64_t v148;
  uint64_t v149;
  char v150;
  void v151[4];
  char v152;
  void v153[4];
  char v154;
  void *v155;
  void v156[6];
  uint64_t vars8;
  Swift::String v158;
  Swift::String v159;

  uint64_t v138 = *(void *)(a2 + 16);
  if (!v138) {
    return result;
  }
  uint64_t v3 = (void *)result;
  uint64_t v135 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  long long v142 = v3;
  while (2)
  {
    uint64_t v5 = v135 + 48 * v4;
    uint64_t v141 = *(void *)v5;
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v6 = *(void *)(v5 + 24);
    uint64_t v8 = *(void *)(v5 + 32);
    ++v4;
    switch(*(unsigned char *)(v5 + 40))
    {
      case 1:
        uint64_t v95 = *(void *)(v5 + 8);
        swift_bridgeObjectRetain();
        sub_10024E740();
        if (v3[2] && (unint64_t v96 = sub_10011ED00(), (v97 & 1) != 0))
        {
          uint64_t v98 = v3[7] + 24 * v96;
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *(void **)(v98 + 8);
          uint64_t v101 = *(unsigned __int8 *)(v98 + 16);
          sub_100064DF0(*(void *)v98, (uint64_t)v99, *(unsigned char *)(v98 + 16));
          swift_bridgeObjectRelease();
          switch(v101)
          {
            case 1:
              BOOL v102 = (v100 & 1) == 0;
              if (v100) {
                uint64_t v100 = 1702195828;
              }
              else {
                uint64_t v100 = 0x65736C6166;
              }
              if (v102) {
                uint64_t v99 = (void *)0xE500000000000000;
              }
              else {
                uint64_t v99 = (void *)0xE400000000000000;
              }
              break;
            case 2:
              swift_bridgeObjectRetain();
              uint64_t v114 = sub_10024EAB0();
              uint64_t v116 = v115;
              sub_100064DC4(v100, (uint64_t)v99, 2);
              uint64_t v117 = v100;
              uint64_t v118 = (uint64_t)v99;
              char v119 = 2;
              goto LABEL_86;
            case 3:
              swift_bridgeObjectRetain();
              uint64_t v114 = sub_10024E500();
              uint64_t v116 = v120;
              sub_100064DC4(v100, (uint64_t)v99, 3);
              uint64_t v117 = v100;
              uint64_t v118 = (uint64_t)v99;
              char v119 = 3;
LABEL_86:
              sub_100064DC4(v117, v118, v119);
              uint64_t v100 = v114;
              uint64_t v99 = v116;
              break;
            default:
              break;
          }
          uint64_t v3 = v142;
          v159._uint64_t countAndFlagsBits = v100;
          v159._object = v99;
          sub_10024E800(v159);
          uint64_t v11 = v141;
          uint64_t v12 = v95;
          uint64_t v13 = v7;
          uint64_t v14 = v6;
          uint64_t v15 = v8;
          unsigned __int8 v16 = 1;
LABEL_88:
          sub_1000C3DB4(v11, v12, v13, v14, v15, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1000C3DB4(v141, v95, v7, v6, v8, 1u);
        }
        goto LABEL_93;
      case 2:
        uint64_t v17 = *(void *)(v141 + 16);
        if (!v17) {
          goto LABEL_93;
        }
        uint64_t v128 = *(void *)(v5 + 24);
        uint64_t v130 = v4;
        uint64_t v124 = *(void *)(v5 + 8);
        uint64_t v126 = *(void *)(v5 + 16);
        uint64_t v136 = *(void *)(v5 + 32);
        sub_1000C424C(v141, v124, v7, v6, v8, 2u);
        swift_bridgeObjectRetain();
        uint64_t v18 = v141 + 40;
        while (2)
        {
          uint64_t v20 = *(void *)(v18 - 8);
          uint64_t v19 = *(void *)v18;
          uint64_t v22 = *(void *)(v18 + 8);
          uint64_t v21 = *(void *)(v18 + 16);
          uint64_t v23 = *(void *)(v18 + 24);
          if (*(unsigned char *)(v18 + 32))
          {
            swift_bridgeObjectRetain();
            sub_1000C3DB4(v141, v124, v126, v128, v136, 2u);
            swift_bridgeObjectRetain();
            sub_1000C317C(v142, v20, a3);
            sub_1000C3DB4(v141, v124, v126, v128, v136, 2u);
            sub_1000C42CC(v20, v19, v22, v21, v23, 1);
            uint64_t v108 = v20;
            uint64_t v109 = v19;
            uint64_t v110 = v22;
            uint64_t v111 = v21;
            uint64_t v3 = v142;
            uint64_t v112 = v23;
            char v113 = 1;
          }
          else
          {
            sub_1000C430C(*(void *)(v18 - 8), *(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), 0);
            swift_bridgeObjectRetain();
            sub_10024E740();
            if (!v142[2] || (unint64_t v24 = sub_10011ED00(), (v25 & 1) == 0))
            {
              swift_bridgeObjectRelease();
LABEL_14:
              v18 += 48;
              swift_bridgeObjectRelease();
              sub_1000C42CC(v20, v19, v22, v21, v23, 0);
              if (!--v17)
              {
                sub_1000C3DB4(v141, v124, v126, v128, v136, 2u);
                sub_1000C3DB4(v141, v124, v126, v128, v136, 2u);
                uint64_t v3 = v142;
                goto LABEL_92;
              }
              continue;
            }
            uint64_t v26 = v142[7] + 24 * v24;
            uint64_t v27 = *(void *)v26;
            int v28 = *(unsigned __int8 *)(v26 + 16);
            uint64_t v149 = *(void *)(v26 + 8);
            sub_100064DF0(*(void *)v26, v149, *(unsigned char *)(v26 + 16));
            swift_bridgeObjectRelease();
            if (v28 == 1)
            {
              if ((v27 & 1) == 0) {
                goto LABEL_14;
              }
            }
            else
            {
              sub_100064DC4(v27, v149, v28);
            }
            sub_1000C3DB4(v141, v124, v126, v128, v136, 2u);
            sub_1000C317C(v142, v23, a3);
            sub_1000C3DB4(v141, v124, v126, v128, v136, 2u);
            swift_bridgeObjectRelease();
            uint64_t v108 = v20;
            uint64_t v109 = v19;
            uint64_t v110 = v22;
            uint64_t v111 = v21;
            uint64_t v3 = v142;
            uint64_t v112 = v23;
            char v113 = 0;
          }
          break;
        }
        sub_1000C42CC(v108, v109, v110, v111, v112, v113);
LABEL_92:
        uint64_t v4 = v130;
        goto LABEL_93;
      case 3:
        uint64_t v131 = v4;
        uint64_t v29 = *(void *)(v5 + 24);
        uint64_t v30 = *(void *)(v5 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10024E740();
        if (v3[2])
        {
          uint64_t v125 = v30;
          uint64_t v127 = v7;
          uint64_t v129 = v29;
          uint64_t v137 = v8;
          unint64_t v31 = sub_10011ED00();
          if (v32)
          {
            uint64_t v33 = v3[7] + 24 * v31;
            uint64_t v34 = *(void *)v33;
            uint64_t v35 = *(void *)(v33 + 8);
            int v36 = *(unsigned __int8 *)(v33 + 16);
            sub_100064DF0(*(void *)v33, v35, *(unsigned char *)(v33 + 16));
            swift_bridgeObjectRelease();
            if (v36 == 2)
            {
              uint64_t v123 = *(void *)(v34 + 16);
              if (!v123) {
                goto LABEL_65;
              }
              unint64_t v37 = 0;
              uint64_t v121 = v34;
              uint64_t v122 = v34 + 32;
              uint64_t v143 = v35;
              while (1)
              {
                if (v37 >= *(void *)(v34 + 16)) {
                  goto LABEL_101;
                }
                unint64_t v132 = v37;
                uint64_t v38 = v122 + 24 * v37;
                uint64_t v39 = *(void *)v38;
                uint64_t v40 = *(void *)(v38 + 8);
                int v41 = *(unsigned __int8 *)(v38 + 16);
                char v133 = *(unsigned char *)(v38 + 16);
                uint64_t v139 = *(void *)v38;
                uint64_t v140 = v40;
                if (v41 != 3)
                {
                  sub_100064DF0(v39, v40, v41);
                  swift_bridgeObjectRetain();
                  goto LABEL_56;
                }
                uint64_t v42 = *(void *)(v38 + 8);
                uint64_t v43 = *(void *)v38;
                sub_100064DF0(v39, v40, 3);
                sub_100064DF0(v43, v42, 3);
                swift_bridgeObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v155 = v3;
                sub_1000C4210(v43, (uint64_t)sub_1000C41C0, 0, v156);
                long long v147 = v156[0];
                uint64_t v148 = v156[3];
                unint64_t v45 = v156[4];
                long long v146 = (void (*)(void *__return_ptr, void *))v156[5];
                uint64_t v144 = v156[1];
                int64_t v145 = (unint64_t)(v156[2] + 64) >> 6;
                swift_bridgeObjectRetain();
                while (1)
                {
                  uint64_t v150 = isUniquelyReferenced_nonNull_native;
                  if (v45)
                  {
                    unint64_t v46 = __clz(__rbit64(v45));
                    v45 &= v45 - 1;
                    unint64_t v47 = v46 | (v148 << 6);
                    goto LABEL_44;
                  }
                  int64_t v48 = v148 + 1;
                  if (__OFADD__(v148, 1)) {
                    goto LABEL_100;
                  }
                  uint64_t v35 = v143;
                  if (v48 >= v145) {
                    break;
                  }
                  unint64_t v49 = *(void *)(v144 + 8 * v48);
                  int64_t v50 = v148 + 1;
                  if (!v49)
                  {
                    int64_t v50 = v148 + 2;
                    if (v148 + 2 >= v145) {
                      break;
                    }
                    unint64_t v49 = *(void *)(v144 + 8 * v50);
                    if (!v49)
                    {
                      int64_t v50 = v148 + 3;
                      if (v148 + 3 >= v145) {
                        break;
                      }
                      unint64_t v49 = *(void *)(v144 + 8 * v50);
                      if (!v49)
                      {
                        int64_t v50 = v148 + 4;
                        if (v148 + 4 >= v145) {
                          break;
                        }
                        unint64_t v49 = *(void *)(v144 + 8 * v50);
                        if (!v49)
                        {
                          int64_t v50 = v148 + 5;
                          if (v148 + 5 >= v145) {
                            break;
                          }
                          unint64_t v49 = *(void *)(v144 + 8 * v50);
                          if (!v49)
                          {
                            int64_t v50 = v148 + 6;
                            if (v148 + 6 >= v145) {
                              break;
                            }
                            unint64_t v49 = *(void *)(v144 + 8 * v50);
                            if (!v49)
                            {
                              int64_t v51 = v148 + 7;
                              do
                              {
                                if (v51 >= v145) {
                                  goto LABEL_55;
                                }
                                unint64_t v49 = *(void *)(v144 + 8 * v51++);
                              }
                              while (!v49);
                              int64_t v50 = v51 - 1;
                            }
                          }
                        }
                      }
                    }
                  }
                  unint64_t v45 = (v49 - 1) & v49;
                  unint64_t v47 = __clz(__rbit64(v49)) + (v50 << 6);
                  uint64_t v148 = v50;
LABEL_44:
                  uint64_t v52 = (uint64_t *)(*(void *)(v147 + 48) + 16 * v47);
                  uint64_t v53 = *v52;
                  uint64_t v54 = v52[1];
                  uint64_t v55 = *(void *)(v147 + 56) + 24 * v47;
                  uint64_t v56 = *(void *)v55;
                  uint64_t v57 = *(void *)(v55 + 8);
                  char v58 = *(unsigned char *)(v55 + 16);
                  v153[0] = v53;
                  v153[1] = v54;
                  v153[2] = v56;
                  v153[3] = v57;
                  BOOL v154 = v58;
                  swift_bridgeObjectRetain();
                  sub_100064DF0(v56, v57, v58);
                  v146(v151, v153);
                  swift_bridgeObjectRelease();
                  sub_100064DC4(v56, v57, v58);
                  uint64_t v59 = v151[0];
                  uint64_t v60 = v151[1];
                  uint64_t v61 = v151[2];
                  uint64_t v62 = v151[3];
                  char v63 = v152;
                  unint64_t v65 = sub_10011ED00();
                  uint64_t v66 = v3[2];
                  BOOL v67 = (v64 & 1) == 0;
                  uint64_t v68 = v66 + v67;
                  if (__OFADD__(v66, v67))
                  {
                    __break(1u);
LABEL_99:
                    __break(1u);
LABEL_100:
                    __break(1u);
LABEL_101:
                    __break(1u);
LABEL_102:
                    __break(1u);
LABEL_103:
                    __break(1u);
LABEL_104:
                    sub_10024FB70();
                    __break(1u);
                    JUMPOUT(0x1000C3D94);
                  }
                  char v69 = v64;
                  if (v3[3] >= v68)
                  {
                    if ((v150 & 1) == 0)
                    {
                      sub_100019524(&qword_10030BB60);
                      sub_10024F640();
                    }
                  }
                  else
                  {
                    sub_1000C3E34(v68, v150 & 1);
                    unint64_t v70 = sub_10011ED00();
                    if ((v69 & 1) != (v71 & 1)) {
                      goto LABEL_104;
                    }
                    unint64_t v65 = v70;
                  }
                  uint64_t v3 = v155;
                  if (v69)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v72 = v3[7] + 24 * v65;
                    sub_100064DC4(*(void *)v72, *(void *)(v72 + 8), *(unsigned char *)(v72 + 16));
                    *(void *)uint64_t v72 = v61;
                    *(void *)(v72 + 8) = v62;
                    char isUniquelyReferenced_nonNull_native = 1;
                    *(unsigned char *)(v72 + 16) = v63;
                  }
                  else
                  {
                    v155[(v65 >> 6) + 8] |= 1 << v65;
                    uint64_t v73 = (void *)(v3[6] + 16 * v65);
                    *uint64_t v73 = v59;
                    v73[1] = v60;
                    uint64_t v74 = v3[7] + 24 * v65;
                    *(void *)uint64_t v74 = v61;
                    *(void *)(v74 + 8) = v62;
                    *(unsigned char *)(v74 + 16) = v63;
                    uint64_t v75 = v3[2];
                    BOOL v76 = __OFADD__(v75, 1);
                    uint64_t v77 = v75 + 1;
                    if (v76) {
                      goto LABEL_99;
                    }
                    v3[2] = v77;
                    char isUniquelyReferenced_nonNull_native = 1;
                  }
                }
LABEL_55:
                sub_100064DC4(v139, v140, 3);
                sub_10001B070();
                swift_bridgeObjectRelease();
                swift_release();
LABEL_56:
                char v78 = swift_isUniquelyReferenced_nonNull_native();
                v153[0] = v3;
                unint64_t v79 = sub_10011ED00();
                uint64_t v81 = v3[2];
                BOOL v82 = (v80 & 1) == 0;
                Swift::Int v83 = v81 + v82;
                if (__OFADD__(v81, v82)) {
                  goto LABEL_102;
                }
                unint64_t v84 = v79;
                char v85 = v80;
                sub_100019524(&qword_10030BB60);
                BOOL v86 = sub_10024F630(v78, v83);
                uint64_t v3 = v142;
                if (!v86) {
                  goto LABEL_60;
                }
                unint64_t v87 = sub_10011ED00();
                if ((v85 & 1) != (v88 & 1)) {
                  goto LABEL_104;
                }
                unint64_t v84 = v87;
LABEL_60:
                uint64_t v89 = (void *)v153[0];
                if (v85)
                {
                  uint64_t v90 = *(void *)(v153[0] + 56) + 24 * v84;
                  sub_100064DC4(*(void *)v90, *(void *)(v90 + 8), *(unsigned char *)(v90 + 16));
                  *(void *)uint64_t v90 = v139;
                  *(void *)(v90 + 8) = v140;
                  *(unsigned char *)(v90 + 16) = v133;
                  goto LABEL_64;
                }
                *(void *)(v153[0] + 8 * (v84 >> 6) + 64) |= 1 << v84;
                uint64_t v91 = (void *)(v89[6] + 16 * v84);
                *uint64_t v91 = 12324;
                v91[1] = 0xE200000000000000;
                uint64_t v92 = v89[7] + 24 * v84;
                *(void *)uint64_t v92 = v139;
                *(void *)(v92 + 8) = v140;
                *(unsigned char *)(v92 + 16) = v133;
                uint64_t v93 = v89[2];
                BOOL v76 = __OFADD__(v93, 1);
                uint64_t v94 = v93 + 1;
                if (v76) {
                  goto LABEL_103;
                }
                v89[2] = v94;
LABEL_64:
                swift_bridgeObjectRelease();
                sub_1000C317C(v89, v137, a3);
                swift_bridgeObjectRelease();
                unint64_t v37 = v132 + 1;
                uint64_t v34 = v121;
                if (v132 + 1 == v123)
                {
LABEL_65:
                  sub_1000C3DB4(v141, v125, v127, v129, v137, 3u);
                  sub_100064DC4(v34, v35, 2);
                  goto LABEL_83;
                }
              }
            }
            sub_100064DC4(v34, v35, v36);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v103 = v141;
          uint64_t v104 = v30;
          uint64_t v105 = v7;
          uint64_t v106 = v129;
          uint64_t v107 = v137;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v103 = v141;
          uint64_t v104 = v30;
          uint64_t v105 = v7;
          uint64_t v106 = v29;
          uint64_t v107 = v8;
        }
        sub_1000C3DB4(v103, v104, v105, v106, v107, 3u);
LABEL_83:
        uint64_t v4 = v131;
LABEL_93:
        if (v4 != v138) {
          continue;
        }
        return swift_bridgeObjectRelease();
      default:
        uint64_t v9 = *(void *)(v5 + 8);
        uint64_t v10 = *(void *)(v5 + 32);
        swift_bridgeObjectRetain();
        v158._uint64_t countAndFlagsBits = sub_10024E740();
        sub_10024E800(v158);
        uint64_t v11 = v141;
        uint64_t v12 = v9;
        uint64_t v13 = v7;
        uint64_t v14 = v6;
        uint64_t v15 = v10;
        unsigned __int8 v16 = 0;
        goto LABEL_88;
    }
  }
}

uint64_t sub_1000C3DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 < 2u)
  {
  }
  else if (a6 == 3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a6 != 2) {
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C3E34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100019524(&qword_10030BB68);
  char v40 = a2;
  uint64_t v6 = sub_10024F710();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v39 = v5;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 24 * i;
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      char v25 = *(unsigned char *)(v22 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_100064DF0(v24, v23, v25);
      }
      sub_10024FC00();
      sub_10024E780();
      uint64_t result = sub_10024FC70();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t v34 = (void *)(*(void *)(v7 + 48) + 16 * v29);
      *uint64_t v34 = v20;
      v34[1] = v21;
      uint64_t v35 = *(void *)(v7 + 56) + 24 * v29;
      *(void *)uint64_t v35 = v24;
      *(void *)(v35 + 8) = v23;
      *(unsigned char *)(v35 + 16) = v25;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_39;
      }
      if (v16 >= v37) {
        goto LABEL_32;
      }
      unint64_t v17 = v38[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v37) {
          goto LABEL_32;
        }
        unint64_t v17 = v38[v13];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v37)
          {
LABEL_32:
            swift_release();
            uint64_t v3 = v2;
            if (v40)
            {
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                sub_1001F3F40(0, (unint64_t)(v36 + 63) >> 6, v38);
              }
              else {
                *uint64_t v38 = -1 << v36;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v38[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v13 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_40;
              }
              if (v13 >= v37) {
                goto LABEL_32;
              }
              unint64_t v17 = v38[v13];
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v18;
        }
      }
LABEL_18:
      unint64_t v10 = (v17 - 1) & v17;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000C4158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(unsigned char *)(a1 + 16) = a6;
  swift_bridgeObjectRetain();
  sub_100064DF0(a4, a5, a6);
  return a2;
}

__n128 sub_1000C41C0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = sub_1000C4158((uint64_t)&v7, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  unsigned __int8 v4 = v8;
  __n128 result = v7;
  a2->n128_u64[0] = v3;
  a2->n128_u64[1] = v6;
  a2[1] = result;
  a2[2].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1000C4210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_1000C424C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 < 2u)
  {
  }
  else if (a6 == 3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a6 != 2) {
      return result;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C42CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = vars8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C430C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = vars8;
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1000C434C()
{
  unint64_t result = qword_100319500;
  if (!qword_100319500)
  {
    sub_10024DDC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319500);
  }
  return result;
}

uint64_t sub_1000C439C(uint64_t a1)
{
  return sub_1000C42CC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_1000C43B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1000C430C(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_1000C442C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1000C430C(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  sub_1000C42CC(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 sub_1000C44B8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1000C44CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;
  sub_1000C42CC(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t sub_1000C4520(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000C4560(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000C45B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1000C45B8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2 & 1;
  return result;
}

void type metadata accessor for Template.Component.Condition()
{
}

uint64_t sub_1000C45D0(uint64_t a1)
{
  return sub_1000C3DB4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_1000C45E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1000C424C(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_1000C4660(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1000C424C(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1000C3DB4(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t sub_1000C46EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1000C3DB4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t sub_1000C4740(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000C4780(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000C47D0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2;
  return result;
}

void type metadata accessor for Template.Component()
{
}

_OWORD *sub_1000C47E4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1000C4834(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

_OWORD *sub_1000C4848(uint64_t a1, _OWORD *a2)
{
  return sub_1000C47E4(v2, a2);
}

uint64_t sub_1000C4864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AppReceiptResponse = type metadata accessor for CreateAppReceiptResponse();
  sub_100025FBC();
  uint64_t v8 = __chkstk_darwin(v6, v7);
  long long v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v76 - v12;
  uint64_t v14 = sub_100019524(&qword_10030D260);
  __chkstk_darwin(v14 - 8, v15);
  unint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AppTransaction();
  sub_100025FBC();
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (uint64_t *)((char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100047280(a1 + 56, (uint64_t)v112);
  sub_100047280((uint64_t)v112, (uint64_t)&v115);
  if (*(void *)&v116[0])
  {
    uint64_t v89 = AppReceiptResponse;
    uint64_t v90 = v10;
    uint64_t v91 = v13;
    uint64_t v92 = v2;
    long long v113 = v115;
    *(_OWORD *)uint64_t v114 = v116[0];
    *(void *)&v114[15] = *(void *)((char *)v116 + 15);
    uint64_t v23 = sub_1000CB7C4();
    unint64_t v25 = v24;
    sub_10024DC80();
    swift_allocObject();
    sub_10024DC70();
    sub_1000C5168();
    sub_10024DC60();
    uint64_t v87 = v23;
    unint64_t v88 = v25;
    swift_release();
    uint64_t v83 = v93;
    uint64_t v84 = v95;
    uint64_t v85 = v96;
    uint64_t v86 = v94;
    uint64_t v31 = v97;
    unint64_t v32 = v99;
    uint64_t v33 = v100;
    uint64_t v81 = *((void *)&v96 + 1);
    unint64_t v82 = v101;
    uint64_t v34 = v102;
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_1000F2780(v35, (uint64_t)&v93);
    if (v103)
    {
      char v36 = sub_10024FA60();
      swift_bridgeObjectRelease();
      sub_1000C51B4((uint64_t)&v93);
      if ((v36 & 1) == 0)
      {
        if (v31)
        {
          unint64_t v82 = v32;
          uint64_t v79 = v31;
          sub_10001C2A8(v92 + 6, v92[9]);
          uint64_t v80 = v33;
          swift_bridgeObjectRetain();
          uint64_t v37 = v83;
          unint64_t v27 = v86;
          uint64_t v43 = sub_10008AEB4(2uLL, v83, v86, v38, v39, v40, v41, v42);
          uint64_t v78 = v43;
          int v77 = v44 & 1;
          *uint64_t v22 = 0x65646F6358;
          v22[1] = 0xE500000000000000;
          v22[2] = v37;
          v22[3] = v27;
          uint64_t v45 = v84;
          uint64_t v46 = v85;
          v22[4] = v84;
          v22[5] = v46;
          v22[6] = v45;
          v22[7] = v46;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_10024E010();
          sub_10024E010();
          sub_10024DF90();
          uint64_t v81 = sub_10006B418(v81, v79, v43, v77);
          uint64_t v76 = v47;
          uint64_t v83 = v49;
          uint64_t v84 = v48;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v50 = (void *)((char *)v22 + *(int *)(v18 + 48));
          uint64_t v51 = v76;
          *int64_t v50 = v81;
          v50[1] = v51;
          uint64_t v52 = (void *)((char *)v22 + *(int *)(v18 + 44));
          uint64_t v53 = v83;
          *uint64_t v52 = v84;
          v52[1] = v53;
          sub_10001C2A8(v92 + 11, v92[14]);
          sub_100218740();
          uint64_t v54 = (uint64_t)v91;
          sub_1000C52D4((uint64_t)v17, (uint64_t)&v91[*(int *)(v89 + 24)]);
          *(void *)uint64_t v54 = 0;
          *(unsigned char *)(v54 + 8) = 0;
          uint64_t v34 = (uint64_t)v90;
          sub_1000C533C(v54, (uint64_t)v90);
          sub_1002181FC();
          sub_1000C5458();
          sub_1000C5400(v54, (void (*)(void))type metadata accessor for CreateAppReceiptResponse);
          sub_1000C53A0((uint64_t)v17);
          uint64_t v55 = (uint64_t)v22;
          char v30 = 2;
          sub_1000C5400(v55, (void (*)(void))type metadata accessor for AppTransaction);
LABEL_12:
          unsigned int v64 = HIWORD(*(unsigned int *)&HTTPVersion.init(major:minor:)(1, 1));
          type metadata accessor for HTTPResponseHead._Storage();
          uint64_t v65 = swift_allocObject();
          uint64_t result = sub_1000C5490(v65);
          *(_WORD *)(result + 42) = v64;
          unint64_t v29 = _swiftEmptyArrayStorage;
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_100308DE0 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_10024E1F0();
        sub_10001B0E8(v74, (uint64_t)qword_10034C0E0);
        BOOL v67 = sub_10024E1D0();
        os_log_type_t v68 = sub_10024EE10();
        BOOL v75 = os_log_type_enabled(v67, v68);
        uint64_t v71 = v87;
        unint64_t v70 = v88;
        if (v75)
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v72 = 0;
          uint64_t v73 = "Unable to create app receipt, no device verification provided";
          goto LABEL_21;
        }
        goto LABEL_22;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000C51B4((uint64_t)&v93);
    }
    if (v34)
    {
      uint64_t v56 = v92;
      unint64_t v27 = v32;
      uint64_t v57 = sub_10001C2A8(v92 + 11, v92[14]);
      uint64_t v58 = *v57;
      uint64_t v59 = *(os_unfair_lock_s **)(*(void *)(*v57 + 128) + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      os_unfair_lock_lock(v59);
      *(unsigned char *)(v58 + 112) = 0;
      os_unfair_lock_unlock(v59);
      swift_release();
      sub_10001C2A8(v56 + 11, v56[14]);
      uint64_t v18 = v85;
      sub_1000A021C();
      uint64_t v61 = v60;
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v30 = 2;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100047398(v61, v63);
      sub_100047398(v61, v63);
      sub_1001E6310(0, 0, v61, v63);
      sub_1000C5458();
      sub_10003F7F4(v61, v63);
      sub_10003F7F4(v61, v63);
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_10024E1F0();
    sub_10001B0E8(v66, (uint64_t)qword_10034C0E0);
    BOOL v67 = sub_10024E1D0();
    os_log_type_t v68 = sub_10024EE10();
    BOOL v69 = os_log_type_enabled(v67, v68);
    uint64_t v71 = v87;
    unint64_t v70 = v88;
    if (v69)
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v72 = 0;
      uint64_t v73 = "Unable to create app receipt, no device identifier provided";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v67, v68, v73, v72, 2u);
      swift_slowDealloc();
    }
LABEL_22:

    sub_1000C5078((uint64_t)v104);
    sub_10003F808(v71, v70);
    long long v26 = v106;
    uint64_t v34 = v107;
    uint64_t v18 = v108;
    unint64_t v27 = v109 | ((unint64_t)(v110 | (v111 << 16)) << 32);
    uint64_t result = v104[0];
    unint64_t v29 = (void *)v104[1];
    char v30 = v105;
    goto LABEL_4;
  }
  sub_1000C5078((uint64_t)&v93);
  long long v26 = v96;
  uint64_t v34 = v97;
  uint64_t v18 = v98;
  unint64_t v27 = v99 | ((unint64_t)(WORD2(v99) | (BYTE6(v99) << 16)) << 32);
  uint64_t result = v93;
  unint64_t v29 = (void *)v94;
  char v30 = v95;
LABEL_4:
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 16) = v30;
  *(_OWORD *)(a2 + 24) = v26;
  *(void *)(a2 + 40) = v34;
  *(void *)(a2 + 48) = v18;
  *(unsigned char *)(a2 + 62) = BYTE6(v27);
  *(_WORD *)(a2 + 60) = WORD2(v27);
  *(_DWORD *)(a2 + 56) = v27;
  return result;
}

__n128 sub_1000C5078@<Q0>(uint64_t a1@<X8>)
{
  sub_1001E6310(0, 0, 0, 0xF000000000000000);
  unsigned int v2 = HIWORD(*(unsigned int *)&HTTPVersion.init(major:minor:)(1, 1));
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = sub_1000C5490(v3);
  *(_WORD *)(v4 + 42) = v2;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 16) = 2;
  __n128 result = v6;
  *(__n128 *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 62) = v11;
  *(_WORD *)(a1 + 60) = v10;
  *(_DWORD *)(a1 + 56) = v9;
  return result;
}

uint64_t type metadata accessor for CreateAppReceiptRoute()
{
  return self;
}

unint64_t sub_1000C5168()
{
  unint64_t result = qword_10030EEE0;
  if (!qword_10030EEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EEE0);
  }
  return result;
}

uint64_t sub_1000C51B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C52D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030D260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C533C(uint64_t a1, uint64_t a2)
{
  uint64_t AppReceiptResponse = type metadata accessor for CreateAppReceiptResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AppReceiptResponse - 8) + 16))(a2, a1, AppReceiptResponse);
  return a2;
}

uint64_t sub_1000C53A0(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030D260);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C5400(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100025FBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1000C5458()
{
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 88);
  unint64_t v3 = *(void *)(v0 + 96);
  return sub_10003F808(v2, v3);
}

uint64_t sub_1000C5490(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 3;
  *(_WORD *)(result + 40) = v1;
  return result;
}

void *sub_1000C54A4(unint64_t a1, void (*a2)(id))
{
  unint64_t v28 = a2;
  uint64_t v4 = sub_100019524(&qword_10030B7F0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100019524(&qword_10030A380);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v8);
  uint64_t v26 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v23 = (uint64_t)&v22 - v12;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = sub_10024F6F0())
  {
    unint64_t v25 = a1 & 0xC000000000000001;
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v15 = 4;
    unint64_t v22 = a1;
    while (1)
    {
      id v16 = v25 ? (id)sub_10024F380() : *(id *)(a1 + 8 * v15);
      unint64_t v17 = v16;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      v28(v16);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v14;
      }

      if (sub_10001FA0C((uint64_t)v7, 1, v27) == 1)
      {
        sub_1000C6160((uint64_t)v7);
      }
      else
      {
        uint64_t v19 = v23;
        sub_1000458B4((uint64_t)v7, v23, &qword_10030A380);
        sub_1000458B4(v19, v26, &qword_10030A380);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = (void *)sub_1000357E4();
        }
        unint64_t v20 = v14[2];
        if (v20 >= v14[3] >> 1) {
          uint64_t v14 = (void *)sub_1000357E4();
        }
        void v14[2] = v20 + 1;
        sub_1000458B4(v26, (uint64_t)v14+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, &qword_10030A380);
        a1 = v22;
      }
      ++v15;
      if (v18 == v13)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_1000C57C0(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void (*a4)(id)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void **)(a1 + 24);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    sub_1000C60F4(a1);
    sub_1000C6870();
    goto LABEL_38;
  }
  uint64_t v49 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1001A40B4();
  uint64_t v48 = v12;
  char v46 = v13;
  if (a2 >> 62)
  {
    sub_1000C68B0();
    uint64_t v14 = sub_10024F6F0();
    if (v14)
    {
LABEL_4:
      BOOL v15 = __OFSUB__(v14, 1);
      uint64_t v16 = v14 - 1;
      if (v15)
      {
        __break(1u);
      }
      else
      {
        sub_10014ED88(v16, (a2 & 0xC000000000000001) == 0, a2);
        if ((a2 & 0xC000000000000001) == 0)
        {
          id v17 = *(id *)(a2 + 8 * v16 + 32);
LABEL_7:
          uint64_t v18 = v17;
          swift_bridgeObjectRelease();
          double v44 = sub_1000D8774();

          goto LABEL_13;
        }
      }
      id v17 = (id)sub_10024F380();
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  sub_1000458B4(a1 + 64, (uint64_t)v52, &qword_10030EEE8);
  sub_1000458B4((uint64_t)v52, (uint64_t)v53, &qword_10030EEE8);
  double v23 = v53[0];
  if (v54) {
    double v23 = 0.0;
  }
  double v44 = v23;
LABEL_13:
  swift_bridgeObjectRetain();
  sub_1001A42D0();
  uint64_t v45 = v24;
  char v26 = v25;
  sub_1000C60F4(a1);
  uint64_t v27 = sub_1000C54A4(a2, a4);
  char v43 = v26;
  if (a2 >> 62)
  {
    sub_1000C68B0();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10024F6F0();
  }
  else
  {
    uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v51 = v10;
  int64_t v50 = v27;
  if (!v28)
  {
    char v30 = _swiftEmptyArrayStorage;
LABEL_32:
    swift_bridgeObjectRelease();
    if (a2 >> 62)
    {
      sub_1000C68B0();
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v10 = v50;
    uint64_t v6 = v51;
    swift_bridgeObjectRelease();
    if (v5 == v50[2])
    {
      uint64_t v5 = v46 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      char v40 = a3 & 1;
      int64x2_t v41 = vdupq_n_s64(4uLL);
      *(double *)v41.i64 = v44;
      int64x2_t v42 = vdupq_n_s64(0x65646F6358uLL);
      v42.i64[0] = v43 & 1;
      unint64_t v19 = 0xE500000000000000;
      uint64_t v21 = v48;
      uint64_t v20 = v49;
      uint64_t v22 = v45;
LABEL_39:
      *(void *)a5 = v21;
      *(void *)(a5 + 8) = v5;
      *(int64x2_t *)(a5 + 16) = v41;
      *(void *)(a5 + 32) = v20;
      *(void *)(a5 + 40) = v6;
      *(void *)(a5 + 48) = v22;
      *(int64x2_t *)(a5 + 56) = v42;
      *(void *)(a5 + 72) = v19;
      *(void *)(a5 + 80) = v10;
      *(void *)(a5 + 88) = v30;
      *(unsigned char *)(a5 + 96) = v40;
      return;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1000C6870();
    uint64_t v10 = 0;
LABEL_38:
    char v30 = 0;
    char v40 = 0;
    int64x2_t v41 = 0uLL;
    int64x2_t v42 = 0uLL;
    goto LABEL_39;
  }
  if (v28 >= 1)
  {
    uint64_t v29 = 0;
    char v30 = _swiftEmptyArrayStorage;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v31 = (id)sub_10024F380();
      }
      else {
        id v31 = *(id *)(a2 + 8 * v29 + 32);
      }
      unint64_t v32 = v31;
      if (sub_1000D640C())
      {
      }
      else
      {
        sub_1000D5AE4();
        uint64_t v33 = sub_10024F9E0();
        uint64_t v35 = v34;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100034BF0();
          char v30 = v38;
        }
        unint64_t v36 = v30[2];
        if (v36 >= v30[3] >> 1)
        {
          sub_100034BF0();
          char v30 = v39;
        }
        v30[2] = v36 + 1;
        uint64_t v37 = &v30[2 * v36];
        v37[4] = v33;
        v37[5] = v35;
      }
      ++v29;
    }
    while (v28 != v29);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_1000C5BE0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D7600;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

uint64_t static NIOBSDSocket.Option.so_keepalive.getter()
{
  return 8;
}

void sub_1000C5C38(char a1)
{
  switch(a1)
  {
    case 1:
      sub_1000C6814();
      break;
    case 2:
      sub_100062138();
      break;
    case 3:
      sub_10006211C();
      break;
    case 4:
      sub_1000620FC();
      break;
    case 5:
      sub_1000C682C();
      break;
    case 6:
      sub_100020688();
      break;
    default:
      return;
  }
}

void sub_1000C5CD4(char a1)
{
  switch(a1)
  {
    case 1:
      sub_1000C6814();
      break;
    case 2:
      sub_100062138();
      break;
    case 3:
      sub_10006211C();
      break;
    case 4:
      sub_1000620FC();
      break;
    case 5:
      sub_1000C682C();
      break;
    case 6:
      sub_100020688();
      break;
    default:
      return;
  }
}

uint64_t sub_1000C5D70(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_10030EEF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000C64C0();
  sub_10024FD40();
  LOBYTE(v13) = 0;
  sub_1000C68CC();
  if (!v2)
  {
    long long v13 = *(_OWORD *)(v3 + 16);
    char v12 = 1;
    sub_1000C650C();
    sub_10024F980();
    sub_1000C688C(2);
    LOBYTE(v13) = 3;
    sub_1000C68CC();
    sub_1000C688C(4);
    LOBYTE(v13) = 5;
    sub_10024F950();
    *(void *)&long long v13 = *(void *)(v3 + 80);
    char v12 = 6;
    sub_100019524(&qword_10030EF08);
    sub_1000C6558();
    sub_1000C6844();
    *(void *)&long long v13 = *(void *)(v3 + 88);
    char v12 = 7;
    sub_100019524(&qword_100309410);
    sub_100063434();
    sub_1000C6844();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1000C5FA8()
{
  return sub_1000F8C8C();
}

Swift::Int sub_1000C5FB4()
{
  return sub_1001D3510(*v0);
}

uint64_t sub_1000C5FBC()
{
  return sub_1000D09DC();
}

Swift::Int sub_1000C5FC4(uint64_t a1)
{
  return sub_1000D2BDC(a1, *v1);
}

uint64_t sub_1000C5FCC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000C5BE0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000C5FFC(void *a1@<X8>)
{
  sub_1000C5C38(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void sub_1000C6028()
{
  sub_1000C5CD4(*v0);
}

uint64_t sub_1000C6030@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000C5C2C();
  *a1 = result;
  return result;
}

void sub_1000C6058(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1000C6064(uint64_t a1)
{
  unint64_t v2 = sub_1000C64C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C60A0(uint64_t a1)
{
  unint64_t v2 = sub_1000C64C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C60DC(void *a1)
{
  return sub_1000C5D70(a1);
}

uint64_t sub_1000C60F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C6160(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030B7F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for TransactionHistoryResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionHistoryResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionHistoryResponse(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  return a1;
}

uint64_t assignWithTake for TransactionHistoryResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionHistoryResponse(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionHistoryResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionHistoryResponse()
{
  return &type metadata for TransactionHistoryResponse;
}

unint64_t sub_1000C64C0()
{
  unint64_t result = qword_10030EEF8;
  if (!qword_10030EEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EEF8);
  }
  return result;
}

unint64_t sub_1000C650C()
{
  unint64_t result = qword_10030EF00;
  if (!qword_10030EF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EF00);
  }
  return result;
}

unint64_t sub_1000C6558()
{
  unint64_t result = qword_10030EF10;
  if (!qword_10030EF10)
  {
    sub_10001B028(&qword_10030EF08);
    sub_1000C65CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EF10);
  }
  return result;
}

unint64_t sub_1000C65CC()
{
  unint64_t result = qword_10030B908;
  if (!qword_10030B908)
  {
    sub_10001B028(&qword_10030A380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030B908);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TransactionHistoryResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C66ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionHistoryResponse.CodingKeys()
{
  return &type metadata for TransactionHistoryResponse.CodingKeys;
}

unint64_t sub_1000C6728()
{
  unint64_t result = qword_10030EF18;
  if (!qword_10030EF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EF18);
  }
  return result;
}

unint64_t sub_1000C6778()
{
  unint64_t result = qword_10030EF20;
  if (!qword_10030EF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EF20);
  }
  return result;
}

unint64_t sub_1000C67C8()
{
  unint64_t result = qword_10030EF28;
  if (!qword_10030EF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030EF28);
  }
  return result;
}

uint64_t sub_1000C6814()
{
  return 0x6E6F697369766572;
}

uint64_t sub_1000C682C()
{
  return 0x65726F4D736168;
}

uint64_t sub_1000C6844()
{
  return sub_10024F980();
}

uint64_t sub_1000C688C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_10024F940();
}

uint64_t sub_1000C68B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C68CC()
{
  return sub_10024F900();
}

uint64_t sub_1000C68EC@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  sub_10002F9C8();
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  __chkstk_darwin(v8, v9);
  sub_10002059C();
  uint64_t v12 = v11 - v10;
  uint64_t v14 = *(void *)(v13 + 16);
  sub_10002F9C8();
  uint64_t v16 = v15;
  __chkstk_darwin(v17, v18);
  sub_10002059C();
  uint64_t v21 = v20 - v19;
  sub_10002F9C8();
  __chkstk_darwin(v22, v23);
  sub_10002059C();
  uint64_t v26 = v25 - v24;
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v25 - v24, v28);
  uint64_t v29 = 1;
  if (sub_10001FA0C(v26, 1, v14) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v21, v26, v14);
    a1(v21, v12);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v14);
    if (v4) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(a3, v12, v32);
    }
    uint64_t v29 = 0;
  }
  return sub_1000195B4(a4, v29, 1, a2);
}

BOOL sub_1000C6ADC()
{
  uint64_t v1 = *(_opaque_pthread_t **)(v0 + 32);
  uint64_t v2 = pthread_self();
  return pthread_equal(v1, v2) != 0;
}

uint64_t ThreadSpecificVariable.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ThreadSpecificVariable.init()();
  return v0;
}

void *ThreadSpecificVariable.currentValue.getter()
{
  sub_10002F9E0();
  unint64_t result = sub_1000C71BC();
  if (result)
  {
    swift_unknownObjectRetain();
    swift_dynamicCast();
    return (void *)v1;
  }
  return result;
}

uint64_t ThreadSpecificVariable.currentValue.setter()
{
  sub_10002F9E0();
  if (sub_1000C71BC()) {
    swift_release();
  }
  sub_10024F030();
  sub_1000C68EC((void (*)(uint64_t, uint64_t))sub_1000C7338, (uint64_t)&type metadata for UnsafeMutableRawPointer, v0, (uint64_t)&v2);
  sub_100050FA0(v2);
  return swift_unknownObjectRelease();
}

BOOL sub_1000C6C74(uint64_t a1, uint64_t a2)
{
  return pthread_equal(*(pthread_t *)(a1 + 32), *(pthread_t *)(a2 + 32)) != 0;
}

uint64_t sub_1000C6C9C()
{
  uint64_t v1 = *(_opaque_pthread_t **)(v0 + 32);
  uint64_t v2 = sub_10024EB00();
  *(void *)(v2 + 16) = 64;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  if (pthread_getname_np(v1, (char *)(v2 + 32), 0x40uLL))
  {
    uint64_t v3 = 0;
  }
  else
  {
    if (*(unsigned char *)(v2 + 32))
    {
      for (uint64_t i = 0; i != 63; ++i)
      {
        if (!*(unsigned char *)(v2 + 33 + i)) {
          break;
        }
      }
    }
    uint64_t v3 = sub_10024E760();
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1000C6D6C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  pthread_t v14 = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  sub_100019524(&qword_10030F0D8);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = sub_1000C7558;
  v11[3] = v10;
  void v11[4] = a1;
  v11[5] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (pthread_create(&v14, 0, (void *(__cdecl *)(void *))sub_1001D0818, v11)) {
    __break(1u);
  }
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  uint64_t result = (uint64_t)v14;
  if (!v14)
  {
    __break(1u);
    return result;
  }
  int v13 = pthread_detach(v14);
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C6EA4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_1000C6EDC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v3 = sub_1000C6C9C();
  uint64_t v5 = v3;
  uint64_t v6 = v4;
  if (!v1)
  {
    if (!v4) {
      return 0x61657268544F494ELL;
    }
    sub_10024F330(26);
    swift_bridgeObjectRelease();
    unint64_t v9 = 0xD000000000000017;
    goto LABEL_15;
  }
  if (!v4)
  {
    swift_bridgeObjectRetain();
    sub_10024F330(27);
    swift_bridgeObjectRelease();
    unint64_t v9 = 0xD000000000000018;
    goto LABEL_12;
  }
  BOOL v7 = v2 == v3 && v1 == v4;
  if (!v7 && (sub_10024FA60() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_10024F330(44);
    swift_bridgeObjectRelease();
    unint64_t v9 = 0xD000000000000018;
    v11._uint64_t countAndFlagsBits = v2;
    v11._object = v1;
    sub_10024E800(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 0x6C6175746361202CLL;
    v12._object = (void *)0xEF203D20656D614ELL;
    sub_10024E800(v12);
LABEL_15:
    v13._uint64_t countAndFlagsBits = v5;
    v13._object = v6;
    sub_10024E800(v13);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10024F330(20);
  swift_bridgeObjectRelease();
  unint64_t v9 = 0xD000000000000011;
LABEL_12:
  v10._uint64_t countAndFlagsBits = v2;
  v10._object = v1;
  sub_10024E800(v10);
LABEL_16:
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 41;
  v14._object = (void *)0xE100000000000000;
  sub_10024E800(v14);
  return v9;
}

uint64_t sub_1000C70FC()
{
  return sub_1000C6EDC();
}

uint64_t sub_1000C7120(void (__cdecl *a1)(void *))
{
  uint64_t v2 = swift_allocObject();
  sub_100050F34(a1);
  return v2;
}

uint64_t sub_1000C7160()
{
  uint64_t result = pthread_key_delete(*(void *)(v0 + 16));
  if (!result) {
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C7188()
{
  sub_1000C7160();
  return _swift_deallocClassInstance(v0, 24, 7);
}

void *sub_1000C71BC()
{
  return pthread_getspecific(*(void *)(v0 + 16));
}

uint64_t ThreadSpecificVariable.init()()
{
  type metadata accessor for ThreadSpecificVariable.Key();
  *(void *)(v0 + 16) = sub_1000C7120((void (__cdecl *)(void *))j_j__swift_release);
  return v0;
}

uint64_t ThreadSpecificVariable.__allocating_init(value:)()
{
  uint64_t v0 = ThreadSpecificVariable.__allocating_init()();
  swift_retain();
  swift_unknownObjectRetain();
  ThreadSpecificVariable.currentValue.setter();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1000C7270@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getTupleTypeMetadata2();
  type metadata accessor for Box();
  v7[0] = a2;
  v7[1] = v5;
  *a3 = sub_1000824D0((uint64_t)v7);
  swift_retain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1000C7338@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000C7270(a1, v2, a2);
}

uint64_t type metadata accessor for ThreadSpecificVariable.Key()
{
  return sub_10002F7A4();
}

uint64_t (*ThreadSpecificVariable.currentValue.modify(void **a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = ThreadSpecificVariable.currentValue.getter();
  return sub_1000C73B8;
}

uint64_t sub_1000C73B8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return ThreadSpecificVariable.currentValue.setter();
  }
  swift_unknownObjectRetain();
  ThreadSpecificVariable.currentValue.setter();
  return swift_unknownObjectRelease();
}

uint64_t ThreadSpecificVariable.deinit()
{
  swift_release();
  return v0;
}

uint64_t ThreadSpecificVariable.__deallocating_deinit()
{
  ThreadSpecificVariable.deinit();
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for NIOThread()
{
  return self;
}

uint64_t sub_1000C7488()
{
  return sub_1000C74C0();
}

uint64_t type metadata accessor for ThreadSpecificVariable()
{
  return sub_10002F7A4();
}

uint64_t sub_1000C74B0()
{
  return sub_1000C74C0();
}

uint64_t sub_1000C74C0()
{
  return swift_initClassMetadata2();
}

BOOL sub_1000C74FC(uint64_t *a1, uint64_t *a2)
{
  return sub_1000C6C74(*a1, *a2);
}

uint64_t sub_1000C7520()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C7558(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_1000C7584(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_1000C7818();
  if (v3)
  {
    swift_release();
LABEL_3:
    swift_release();
  }
  else
  {
    sub_100019524((uint64_t *)&unk_10030FD80);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10025D960;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    uint64_t v12 = inited;
    sub_10024EAC0();
    swift_retain();
    swift_retain();
    char v7 = 0;
    unint64_t result = 0;
    while (1)
    {
      char v9 = v7;
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = sub_10024F380();
      }
      else
      {
        if (result >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        uint64_t v10 = *(void *)(v12 + 32 + 8 * result);
        swift_retain();
      }
      sub_10006FF20();
      if (*(unsigned char *)(v10 + 16) != 1) {
        break;
      }
      sub_1001B5F48();
      sub_1001B5F48();
      swift_release();
      char v7 = 1;
      unint64_t result = 1;
      if (v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    sub_100028EB4();
    sub_1000290D0();
    sub_100062570(v11, 0xD00000000000001FLL);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return v2;
}

uint64_t sub_1000C7818()
{
  sub_100019524(&qword_10030F1F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100256170;
  *(void *)(inited + 32) = *(void *)(v0 + 16);
  *(void *)(inited + 40) = *(void *)(v0 + 24);
  uint64_t v15 = inited;
  sub_10024EAC0();
  swift_retain();
  uint64_t result = swift_retain();
  char v4 = 0;
  for (unint64_t i = 0; ; unint64_t i = 1)
  {
    char v6 = v4;
    if (i >= *(void *)(v15 + 16)) {
      break;
    }
    uint64_t v7 = *(void *)(v15 + 32 + 8 * i);
    sub_10006FF20();
    sub_1000C82A0();
    if (!v8)
    {
      sub_100028EB4();
      sub_1000290D0();
      *(void *)uint64_t v10 = 0xD00000000000001FLL;
      *(void *)(v10 + 8) = 0x800000010027B110;
      *(_DWORD *)(v10 + 16) = 9;
      swift_retain();
      swift_willThrow();
LABEL_14:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    int v9 = *(_DWORD *)(v7 + 20);
    swift_retain();
    sub_1001B5F48();
    if (v1)
    {
      swift_errorRetain();
      sub_100019524(&qword_100309768);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        if (v14 == 22)
        {
          swift_bridgeObjectRelease();
          sub_1000C81E8();
          sub_1000290D0();
        }
        else
        {
          sub_100028D58(v9);
          sub_100028EB4();
          sub_1000290D0();
          *(void *)uint64_t v11 = v12;
          *(void *)(v11 + 8) = v13;
          *(_DWORD *)(v11 + 16) = v14;
        }
        swift_willThrow();
      }
      swift_errorRelease();
      goto LABEL_14;
    }
    uint64_t result = swift_release();
    char v4 = 1;
    if (v6) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C7A44()
{
  sub_10024F330(26);
  v1._uint64_t countAndFlagsBits = 0x7269615065706950;
  v1._object = (void *)0xEE003D6E69207B20;
  sub_10024E800(v1);
  sub_1000C827C();
  v2._uint64_t countAndFlagsBits = 0x3D74756F202CLL;
  v2._object = (void *)0xE600000000000000;
  sub_10024E800(v2);
  sub_1000C827C();
  v3._uint64_t countAndFlagsBits = 32032;
  v3._object = (void *)0xE200000000000000;
  sub_10024E800(v3);
  return 0;
}

void sub_1000C7B1C(uint64_t a1)
{
  sub_1000C825C();
  sub_1000C82A0();
  if (v2)
  {
    if (a1)
    {
      sub_1000C82AC();
      sub_1001B6190();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v3, v4);
  }
}

void sub_1000C7BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  sub_1000C825C();
  sub_1000C82A0();
  if (v6)
  {
    sub_1001B5FF4(*(unsigned int *)(v5 + 20), a1, a2);
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v7, v8);
  }
}

void sub_1000C7C40(uint64_t a1)
{
  sub_1000C825C();
  sub_1000C82A0();
  if (v2)
  {
    if (a1)
    {
      sub_1000C82AC();
      sub_1001B60D4();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v3, v4);
  }
}

uint64_t sub_1000C7CD0()
{
  sub_10002F0C8();
  uint64_t v0 = sub_1000290D0();
  return sub_1000C8234(v0, v1);
}

void sub_1000C7D08(unsigned __int8 a1)
{
  if (a1 > 1u) {
    sub_1000C7D4C();
  }
  else {
    NIOFileHandle.close()();
  }
}

uint64_t sub_1000C7D4C()
{
  uint64_t v2 = v1;
  uint64_t v3 = (unsigned char *)(*(void *)(v0 + 16) + 16);
  sub_10006FF20();
  if (*v3) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(v0 + 24);
  sub_10006FF20();
  if (*(unsigned char *)(v4 + 16) != 1)
  {
    sub_10002F0C8();
    sub_1000290D0();
    *(void *)uint64_t v12 = 3;
    *(unsigned char *)(v12 + 8) = 3;
    return swift_willThrow();
  }
  if (*v3 == 1)
  {
LABEL_4:
    swift_retain();
    NIOFileHandle.close()();
    BOOL v6 = v5 != 0;
    uint64_t v2 = 0;
  }
  else
  {
    swift_retain();
    BOOL v6 = 0;
  }
  swift_release();
  uint64_t v7 = *(void *)(v0 + 24);
  sub_1000C825C();
  int v8 = *(unsigned __int8 *)(v7 + 16);
  swift_retain();
  if (v8 != 1 || (NIOFileHandle.close()(), (uint64_t v2 = v9) == 0))
  {
    uint64_t result = swift_release();
    if (!v6) {
      return result;
    }
    char v10 = 0;
    goto LABEL_11;
  }
  swift_release();
  if (v6)
  {
    char v10 = 1;
LABEL_11:
    sub_100019524(&qword_100309768);
    swift_willThrowTypedImpl();
    return sub_10003C3F0(v2, v10);
  }
  sub_100019524(&qword_100309768);
  return swift_willThrowTypedImpl();
}

uint64_t sub_1000C7EEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16)) {
    return 1;
  }
  uint64_t v3 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned __int8 *)(v3 + 16);
}

uint64_t sub_1000C7F54()
{
  return sub_1000C7CD0();
}

uint64_t sub_1000C7F6C()
{
  sub_100050E14();
  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for PipePair()
{
  return self;
}

ValueMetadata *type metadata accessor for SelectableFileHandle()
{
  return &type metadata for SelectableFileHandle;
}

uint64_t sub_1000C7FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000C8058(a1, a2, a3, a4, (uint64_t (*)(void))sub_1000C7B1C);
}

uint64_t sub_1000C8000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000C8058(a1, a2, a3, a4, (uint64_t (*)(void))sub_1000C7BAC);
}

uint64_t sub_1000C802C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000C8058(a1, a2, a3, a4, (uint64_t (*)(void))sub_1000C7C40);
}

uint64_t sub_1000C8058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5();
  if (v5) {
    return v7;
  }
  return result;
}

uint64_t sub_1000C808C()
{
  return sub_1000C7CD0();
}

void sub_1000C80A8(unsigned __int8 a1)
{
}

uint64_t sub_1000C80CC()
{
  return sub_1000C7D4C();
}

uint64_t sub_1000C80F0()
{
  return sub_1000C7A44();
}

_UNKNOWN **sub_1000C8114()
{
  return &off_1002E2CA0;
}

uint64_t sub_1000C8120(uint64_t a1)
{
  uint64_t result = sub_1000C81A8(&qword_10030F1E0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000C8164(uint64_t a1)
{
  uint64_t result = sub_1000C81A8(&qword_10030F1E8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000C81A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PipePair();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C81E8()
{
  unint64_t result = qword_10030F1F0;
  if (!qword_10030F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F1F0);
  }
  return result;
}

uint64_t sub_1000C8234(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 1;
  *(unsigned char *)(a2 + 8) = 3;
  return swift_willThrow();
}

uint64_t sub_1000C825C()
{
  return swift_beginAccess();
}

uint64_t sub_1000C827C()
{
  return sub_10024F5C0();
}

uint64_t sub_1000C82AC()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_1000C82C0(char a1)
{
  if (a1 == 3) {
    return 0;
  }
  if (!a1) {
    return 1;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10024E1F0();
  sub_10001B0E8(v2, (uint64_t)qword_10034C0E0);
  uint64_t v3 = sub_10024E1D0();
  os_log_type_t v4 = sub_10024EE10();
  if (os_log_type_enabled(v3, v4))
  {
    *(_DWORD *)swift_slowAlloc() = 134217984;
    sub_1000C8D8C();
    sub_1000C8DB8((void *)&_mh_execute_header, v5, v6, "no developer control info for %ld");
    sub_10003FBCC();
  }

  return 2;
}

uint64_t sub_1000C83D8(char a1)
{
  if (a1 == 3) {
    return 2;
  }
  if (!a1) {
    return 1;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10024E1F0();
  sub_10001B0E8(v2, (uint64_t)qword_10034C0E0);
  uint64_t v3 = sub_10024E1D0();
  os_log_type_t v4 = sub_10024EE10();
  if (os_log_type_enabled(v3, v4))
  {
    *(_DWORD *)swift_slowAlloc() = 134217984;
    sub_1000C8D8C();
    sub_1000C8DB8((void *)&_mh_execute_header, v5, v6, "no message reason info for %ld");
    sub_10003FBCC();
  }

  return 4;
}

uint64_t MessageType.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t sub_1000C84FC(char a1)
{
  if (!a1) {
    return 7107189;
  }
  if (a1 == 1) {
    return 0xD00000000000001BLL;
  }
  return 0x526567617373656DLL;
}

uint64_t sub_1000C855C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, int a6)
{
  uint64_t v42 = a2;
  uint64_t v11 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v11 - 8, v12);
  int v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10024DDC0();
  uint64_t v41 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  char v40 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_10024F330(21);
  swift_bridgeObjectRelease();
  uint64_t v43 = 0xD000000000000011;
  unint64_t v44 = 0x800000010027D2C0;
  uint64_t v46 = a1;
  v47._uint64_t countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v48._uint64_t countAndFlagsBits = a4;
  v48._object = a5;
  sub_10024E800(v48);
  swift_bridgeObjectRelease();
  uint64_t v18 = v43;
  unint64_t v19 = v44;
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10024E1F0();
  uint64_t v21 = sub_10001B0E8(v20, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v38 = v21;
  uint64_t v22 = sub_10024E1D0();
  os_log_type_t v23 = sub_10024EE30();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v18;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    int v37 = a6;
    uint64_t v43 = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1000F3F3C(v42, a3, &v43);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1000F3F3C(v39, v19, &v43);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "message for %s at %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    LOWORD(a6) = v37;
    sub_10003FBCC();
    uint64_t v18 = v39;
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_10024DD90();
  if (sub_10001FA0C((uint64_t)v14, 1, v15) == 1)
  {
    sub_1000257D4((uint64_t)v14);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10024E1D0();
    os_log_type_t v28 = sub_10024EE10();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = v18;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1000F3F3C(v29, v19, &v43);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1000F3F3C(v42, a3, &v43);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s is not a URL, cannot send form message for %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = v40;
    uint64_t v31 = v41;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v41 + 32))(v40, v14, v15);
    uint64_t v33 = sub_10024E510();
    uint64_t v45 = (void *)v15;
    uint64_t v46 = v33;
    uint64_t v34 = sub_1000709B8(&v43);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v31 + 16))(v34, v32, v15);
    sub_10020554C((uint64_t)&v43, 7107189, 0xE300000000000000);
    uint64_t v45 = &type metadata for Bool;
    LOBYTE(v43) = a6 & 1;
    sub_10020554C((uint64_t)&v43, 0xD00000000000001BLL, 0x800000010027D2E0);
    uint64_t v45 = &type metadata for Int;
    uint64_t v43 = BYTE1(a6) + 1;
    sub_10020554C((uint64_t)&v43, 0x526567617373656DLL, 0xED00006E6F736165);
    (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v32, v15);
    return v46;
  }
}

uint64_t sub_1000C8BA4(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x302010004uLL >> (8 * a1));
  }
}

uint64_t sub_1000C8BC8()
{
  return sub_1001D3528(*v0);
}

uint64_t sub_1000C8BD0(uint64_t a1)
{
  return sub_1000DCF00(a1, *v1);
}

uint64_t sub_1000C8BD8(uint64_t a1)
{
  return sub_1000D32A8(a1, *v1);
}

uint64_t sub_1000C8BE0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000C8BA4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000C8C0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MessageType.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for MessageReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C8D04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageReason()
{
  return &type metadata for MessageReason;
}

unint64_t sub_1000C8D40()
{
  unint64_t result = qword_10030F200;
  if (!qword_10030F200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F200);
  }
  return result;
}

uint64_t sub_1000C8D8C()
{
  return sub_10024F100();
}

void sub_1000C8DB8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_1000C8DDC()
{
  uint64_t v1 = v0;
  swift_retain();
  BOOL v2 = sub_1000C6ADC();
  swift_release();
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 168);
    uint64_t v4 = *(void *)(v1 + 176);
    sub_10002F288(v3);
    sub_10002F288(v4);
  }
  else
  {
    swift_retain();
    Lock.lock()();
    uint64_t v3 = *(void *)(v1 + 168);
    uint64_t v5 = *(void *)(v1 + 176);
    sub_10002F288(v3);
    sub_10002F288(v5);
    Lock.unlock()();
    swift_release();
  }
  return v3;
}

void sub_1000C8E78(uint64_t a1)
{
  sub_10018E72C(a1);
  uint64_t v2 = sub_1000CA7B4();
  sub_1000CA794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", v3, v4, v5, v2);
  if (v1 > 4 || (sub_1000CA780(), v6))
  {
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v7 = sub_1000CA7E0();
    uint64_t v8 = sub_10018F10C(v7);
    while (1)
    {
      sub_10018E72C(v8);
      uint64_t v9 = sub_10002FEA0();
      sub_1000CA728(v9);
      swift_release();
      swift_unknownObjectRelease();
      sub_1000CA7D4();
      if (!v6) {
        break;
      }
      uint64_t v8 = sub_1000C908C();
      if ((v8 & 0xFE) == 2) {
        break;
      }
      if ((v8 & 1) == 0)
      {
        __break(1u);
        return;
      }
    }
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease();
  }
}

void sub_1000C8F64()
{
  ((void (*)(void))sub_10018E72C)();
  uint64_t v1 = sub_1000CA7B4();
  sub_1000CA794((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", v2, v3, v4, v1);
  if (v0 > 4 || (sub_1000CA780(), v5))
  {
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v6 = sub_1000CA7E0();
    uint64_t v7 = sub_10018F10C(v6);
    while (1)
    {
      sub_10018E72C(v7);
      uint64_t v8 = sub_10002FEA0();
      sub_1000CA728(v8);
      swift_release();
      swift_unknownObjectRelease();
      sub_1000CA7D4();
      if (!v5) {
        break;
      }
      uint64_t v7 = sub_1000C9538((void (*)(void))sub_10018E72C, (void (*)(void))sub_10018E878, (void (*)(void))sub_10018F290);
      if ((v7 & 0xFE) == 2) {
        break;
      }
      if ((v7 & 1) == 0)
      {
        __break(1u);
        return;
      }
    }
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1000C908C()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 624))();
  uint64_t v3 = v2 & 1;
  sub_10018E72C(v2);
  uint64_t v4 = sub_10002FEA0();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 161, v4, v1);
  swift_release();
  swift_unknownObjectRelease();
  sub_1000CA7D4();
  if (v6)
  {
    sub_10018E878(v5);
    uint64_t ObjectType = swift_getObjectType();
    sub_1000CA810((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", v8, v9, v10, ObjectType);
    if (sub_1000B05F8())
    {
      sub_1000B148C();
      swift_release();
    }
    swift_release();
  }
  sub_10002FA28();
  (*(void (**)(void))(v11 + 720))();
  sub_10002FA28();
  if (((*(uint64_t (**)(void))(v12 + 584))() & 1) != 0 && (v0[88] & 1) == 0) {
    sub_10018F290();
  }
  return v3;
}

uint64_t sub_1000C94F8()
{
  return sub_1000C9538((void (*)(void))sub_10018E72C, (void (*)(void))sub_10018E878, (void (*)(void))sub_10018F290);
}

uint64_t sub_1000C9538(void (*a1)(void), void (*a2)(void), void (*a3)(void))
{
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v3 + 624))() & 1;
  a1();
  __int16 v9 = v8;
  uint64_t ObjectType = swift_getObjectType();
  sub_1000CA850((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", v11, v12, v13, ObjectType);
  swift_release();
  swift_unknownObjectRelease();
  if ((v9 & 0xFF00) == 0x300)
  {
    sub_1000CA8C4();
    a2();
    uint64_t v14 = swift_getObjectType();
    sub_1000CA760((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", v15, v16, v17, v14);
    if (sub_1000B05F8())
    {
      sub_1000B148C();
      swift_release();
    }
    swift_release();
  }
  sub_1000CA8B8();
  uint64_t v19 = v18();
  if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 584))(v19) & 1) != 0 && (v3[88] & 1) == 0) {
    a3();
  }
  return v7;
}

uint64_t sub_1000C9A88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  type metadata accessor for PipePair();
  uint64_t v9 = swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v10 = sub_1000C7584(a2, a3);
  if (v4)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v5 + 312) = v10;
    swift_release();
    AdaptiveRecvByteBufferAllocator.init(minimum:initial:maximum:)(&v17, 64, 2048, 0x10000);
    void v16[3] = &type metadata for AdaptiveRecvByteBufferAllocator;
    void v16[4] = &protocol witness table for AdaptiveRecvByteBufferAllocator;
    uint64_t v11 = swift_allocObject();
    v16[0] = v11;
    long long v12 = *(_OWORD *)&v17.initial;
    *(_OWORD *)(v11 + 16) = *(_OWORD *)&v17.minimum;
    *(_OWORD *)(v11 + 32) = v12;
    *(unsigned char *)(v11 + 48) = v17.decreaseNow;
    uint64_t v13 = swift_retain();
    sub_100191DE0(v13, 0, 0, a1, (uint64_t)v16);
    uint64_t v9 = v14;
    swift_release();
    swift_release();
  }
  return v9;
}

uint64_t sub_1000C9C2C()
{
  sub_10002F0C8();
  swift_allocError();
  sub_1000CA830(v0, 1);
  return 0;
}

uint64_t sub_1000C9C78()
{
  sub_10002F0C8();
  swift_allocError();
  return sub_1000CA830(v0, 12);
}

uint64_t sub_1000C9CC0()
{
  uint64_t v2 = *(void *)(*(void *)(v0 + 312) + 16);
  swift_retain();
  swift_retain();
  sub_100191078(v2);
  swift_release();
  uint64_t result = swift_release();
  if (!v1)
  {
    __chkstk_darwin(result, v4);
    swift_retain();
    uint64_t v5 = swift_retain();
    sub_100191078(v5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C9E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_1000C9E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void sub_1000C9E90(uint64_t a1, unsigned __int8 a2)
{
  if (a2 - 1 >= 2)
  {
    if (a2) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 312) + 16);
  sub_10006FF20();
  if (*(unsigned char *)(v5 + 16) != 1 || (uint64_t v6 = swift_retain(), sub_1001917B0(v6), swift_release(), !v3))
  {
    if (a2 == 2)
    {
LABEL_7:
      uint64_t v7 = *(void *)(*(void *)(v2 + 312) + 24);
      sub_10006FF20();
      if (*(unsigned char *)(v7 + 16) == 1)
      {
        uint64_t v8 = swift_retain();
        sub_1001917B0(v8);
        swift_release();
      }
    }
  }
}

uint64_t sub_1000C9F78()
{
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v2 + 16);
  sub_10006FF20();
  if (*(unsigned char *)(v3 + 16) != 1 || (v4 = swift_retain(), sub_100191404(v4), uint64_t result = swift_release(), !v1))
  {
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t result = sub_10006FF20();
    if (*(unsigned char *)(v6 + 16) == 1)
    {
      uint64_t v7 = swift_retain();
      sub_100191404(v7);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000CA054()
{
  uint64_t v1 = swift_beginAccess();
  *(unsigned char *)(v0 + 248) = 1;
  sub_1000C8E78(v1);
  uint64_t v2 = *(void *)(*(void *)(v0 + 312) + 16);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    sub_10019034C(v0, 1u);
    swift_retain();
    NIOFileHandle.close()();
    uint64_t result = swift_release();
    if (v4)
    {
      sub_1000CA750();
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000CA12C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 312) + 24);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    sub_10019034C(v0, 0);
    swift_retain();
    NIOFileHandle.close()();
    uint64_t result = swift_release();
    if (v3)
    {
      sub_1000CA750();
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
  }
  return result;
}

void sub_1000CA1E4(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      sub_10019034C(v1, 1u);
      if (v2) {
        goto LABEL_7;
      }
    }
LABEL_6:
    sub_100191F08(a1);
    return;
  }
  sub_10019034C(v1, 0);
  if (!v2) {
    goto LABEL_6;
  }
LABEL_7:
  sub_1000CA750();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_1000CA280()
{
  return swift_release();
}

uint64_t sub_1000CA288()
{
  uint64_t v0 = sub_100191FD8();
  swift_release();
  return _swift_deallocClassInstance(v0, 320, 7);
}

uint64_t type metadata accessor for PipeChannel()
{
  uint64_t result = qword_10030F230;
  if (!qword_10030F230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000CA318()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000CA360()
{
  sub_10024F330(70);
  v19._uint64_t countAndFlagsBits = 0x6E61684365706950;
  v19._object = (void *)0xEE00207B206C656ELL;
  sub_10024E800(v19);
  uint64_t v1 = v0[9];
  uint64_t v2 = (void *)v0[10];
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = v1;
  v20._object = v2;
  sub_10024E800(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 0x657669746361202CLL;
  v21._object = (void *)0xEB00000000203D20;
  sub_10024E800(v21);
  uint64_t v3 = v0[8];
  swift_retain();
  int v4 = sub_100007640((unsigned char *)(v3 + 16));
  swift_release();
  if (v4) {
    v5._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v5._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v4) {
    uint64_t v6 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v6 = (void *)0xE500000000000000;
  }
  v5._object = v6;
  sub_10024E800(v5);
  swift_bridgeObjectRelease();
  v22._object = (void *)0x800000010027D340;
  v22._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_10024E800(v22);
  uint64_t v7 = sub_1000C8DDC();
  sub_10002F2A0(v8);
  sub_100019524(&qword_10030F668);
  uint64_t v9 = sub_10024F020();
  uint64_t v11 = v10;
  sub_10002F2A0(v7);
  v23._uint64_t countAndFlagsBits = v9;
  v23._object = v11;
  sub_10024E800(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 0xD000000000000012;
  v24._object = (void *)0x800000010027D360;
  sub_10024E800(v24);
  uint64_t v12 = sub_1000C8DDC();
  uint64_t v14 = v13;
  sub_10002F2A0(v12);
  uint64_t v15 = sub_10024F020();
  ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator v17 = v16;
  sub_10002F2A0(v14);
  v25._uint64_t countAndFlagsBits = v15;
  v25._object = v17;
  sub_10024E800(v25);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 32032;
  v26._object = (void *)0xE200000000000000;
  sub_10024E800(v26);
  return 0;
}

uint64_t sub_1000CA584()
{
  return sub_1000CA360();
}

uint64_t sub_1000CA5A8(uint64_t a1, uint64_t a2)
{
  return sub_1000C9E0C(a1, a2, v2);
}

uint64_t sub_1000CA5B0(uint64_t a1, uint64_t a2)
{
  return sub_100191ED8(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1000CA5B8(uint64_t a1, uint64_t a2)
{
  return sub_1000C9E4C(a1, a2, v2);
}

uint64_t sub_1000CA5C0()
{
  return _swift_deallocObject(v0, 56, 7);
}

unsigned char *storeEnumTagSinglePayload for PipeChannel.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CA69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PipeChannel.Direction()
{
  return &type metadata for PipeChannel.Direction;
}

unint64_t sub_1000CA6D8()
{
  unint64_t result = qword_10030F670;
  if (!qword_10030F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F670);
  }
  return result;
}

uint64_t sub_1000CA728(uint64_t a1)
{
  return EventLoop.assertInEventLoop(file:line:)(v1, 119, 2, 161, a1, v2);
}

uint64_t sub_1000CA750()
{
  return v0;
}

uint64_t sub_1000CA760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 1165, a5, v5);
}

uint64_t sub_1000CA794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 119, 2, 176, a5, v5);
}

uint64_t sub_1000CA7B4()
{
  return swift_getObjectType();
}

uint64_t sub_1000CA7E0()
{
  return *(unsigned char *)(v0 + 216) & 0xFD;
}

uint64_t sub_1000CA7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 1189, a5, v5);
}

uint64_t sub_1000CA810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 1165, a5, v5);
}

uint64_t sub_1000CA830@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 3;
  return swift_willThrow();
}

uint64_t sub_1000CA850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 119, 2, 161, a5, v5);
}

uint64_t sub_1000CA884()
{
  return swift_unexpectedError();
}

uint64_t sub_1000CA8A4()
{
  return v0;
}

uint64_t sub_1000CA8D0()
{
  swift_slowDealloc();
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

uint64_t sub_1000CA934(uint64_t a1, uint64_t a2)
{
  sub_1000CB348(a1);
  sub_10006FF20();
  uint64_t v4 = *(void *)(a2 + 40);
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_10011ED00();
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_retain();
    }
    else
    {
      uint64_t v7 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  os_unfair_lock_unlock(v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1000CAA04()
{
  sub_1000CB378();
  sub_1000CB360(v2);
  sub_10006FF20();
  if (!*(void *)(*(void *)(v0 + 16) + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10011ED00();
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v7 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v4 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  NSString v5 = sub_10024E6A0();
  id v6 = [v4 stringByAppendingPathComponent:v5];

  uint64_t v7 = sub_10024E6B0();
LABEL_6:
  os_unfair_lock_unlock(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1000CAB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1000CB360(a1);
  sub_10006FF20();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100161610(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v12)
  {
    type metadata accessor for OctaneConfigurationOverrides();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = _swiftEmptyDictionarySingleton;
    *(void *)(v13 + 24) = _swiftEmptyDictionarySingleton;
  }
  uint64_t v14 = sub_100057444(a5, a6, a7);
  sub_1000578C0();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_retain();
  sub_10020C950(v15, a3, a4);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1000CACB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CB360(a1);
  sub_1000578C0();
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  sub_10020C970(v7, a3, a4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000CAD6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1000CB360(a1);
  sub_10008C150(a2, a3, a4);
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1000CADF0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1000CB348(a1);
  if (a2 == 9) {
    *a3 = *(void *)(a4 + 136);
  }
  sub_10006FF20();
  uint64_t v8 = *(void *)(a4 + 32);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_10011ED00();
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10006FF20();
      uint64_t v12 = sub_100161774(a2, *(void *)(v11 + 16));
      char v14 = v13;
      swift_release();
      if ((v14 & 1) == 0) {
        *a3 = v12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000CAF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  sub_1000CB378();
  sub_1000CB348(v10);
  sub_10006FF20();
  uint64_t v11 = *(void *)(v6 + 32);
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_10011ED00();
    if ((v13 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10006FF20();
    uint64_t v15 = sub_1001617B8(v8, *(void *)(v14 + 24));
    uint64_t v17 = v16;
    swift_release();
    if (v17)
    {
      *a6 = v15;
      a6[1] = v17;
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  os_unfair_lock_unlock(v7);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000CB018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12 = *(os_unfair_lock_s **)(a1 + 16);
  int v13 = a5 & 1;
  os_unfair_lock_lock(v12);
  if (a2 == 9)
  {
    if (v13) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = a4;
    }
    *(void *)(a3 + 136) = v14;
  }
  else
  {
    sub_10006FF20();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100161610(a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v15)
    {
      type metadata accessor for OctaneConfigurationOverrides();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = _swiftEmptyDictionarySingleton;
      *(void *)(v16 + 24) = _swiftEmptyDictionarySingleton;
    }
    sub_10005733C(a4, v13, a2);
    sub_1000578C0();
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_retain();
    sub_10020C950(v17, a6, a7);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(v12);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000CB190(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, unsigned char *a7)
{
  int v13 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v13);
  sub_10008B5AC(a2, a3, a4, a5, a6, a7);
  os_unfair_lock_unlock(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000CB234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CB348(a1);
  sub_10009FAB0(a2, a3, a4);
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000CB2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CB348(a1);
  sub_1000578C0();
  sub_10020C3EC(a3, a4);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1000CB348(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v2);
}

void sub_1000CB360(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v2);
}

uint64_t destroy for HTTPBody()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for HTTPBody(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HTTPBody(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  return a1;
}

__n128 initializeWithTake for HTTPBody(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 31) = *(void *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HTTPBody(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPBody(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 39))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPBody(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 38) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 39) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 39) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPBody()
{
  return &type metadata for HTTPBody;
}

unint64_t sub_1000CB5C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v15 = sub_10024E850();
    if (v15 < 0) {
      __break(1u);
    }
    LODWORD(v8) = v15;
    if (v15) {
      goto LABEL_6;
    }
LABEL_10:
    if (qword_100308D08 != -1) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8) {
    goto LABEL_10;
  }
LABEL_6:
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v9 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v8, (uint64_t (*)(void))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_10006C3B4);
  int v10 = 0;
  Swift::UInt32 v11 = 0;
  __int16 v12 = 0;
  char v13 = 0;
  int v14 = *(_DWORD *)(v9 + 16);
  while (1)
  {
    uint64_t v29 = v9;
    int v30 = v10;
    Swift::UInt32 v31 = v11;
    int v32 = v14;
    __int16 v33 = v12;
    Swift::Int v16 = v11;
    char v34 = v13;
    swift_bridgeObjectRetain();
    int v17 = sub_10008CF60(a1, a2, (uint64_t)&v29, v11);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      v20._uint64_t countAndFlagsBits = a1;
      v20._object = (void *)a2;
      int v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v16);
    }
    swift_bridgeObjectRelease();
    Swift::UInt32 v21 = v31 + v17;
    if (!__CFADD__(v31, v17)) {
      break;
    }
    __break(1u);
LABEL_17:
    swift_once();
LABEL_11:
    int v10 = qword_10034C038;
    Swift::UInt32 v11 = HIDWORD(qword_10034C038);
    int v14 = dword_10034C040;
    __int16 v12 = word_10034C044;
    char v13 = byte_10034C046;
    uint64_t v9 = swift_retain();
  }
  unint64_t result = sub_1000CBEC4(a3);
  uint64_t v23 = v29;
  int v24 = v30;
  int v25 = v32;
  __int16 v26 = v33;
  char v27 = v34;
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v28;
  *(void *)(a4 + 16) = v23;
  *(_DWORD *)(a4 + 24) = v24;
  *(_DWORD *)(a4 + 28) = v21;
  *(_DWORD *)(a4 + 32) = v25;
  *(_WORD *)(a4 + 36) = v26;
  *(unsigned char *)(a4 + 38) = v27;
  return result;
}

uint64_t sub_1000CB7C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned int *)(v0 + 24);
  unsigned int v3 = *(_DWORD *)(v0 + 28);
  uint64_t v4 = *(unsigned __int16 *)(v0 + 36);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 38);
  uint64_t v6 = (void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  if (v3 >= v2) {
    return sub_1000CC088(*v6 + (v5 | (v4 << 8)) + v2, v3 - v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CB840(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7633012 && a2 == 0xE300000000000000;
  if (v2 || (sub_1000CC324() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    BOOL v6 = a1 == 0x7473696C70 && a2 == 0xE500000000000000;
    if (v6 || (sub_1000CC324() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 1852797802 && a2 == 0xE400000000000000;
      if (v7 || (sub_1000CC324() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 1734701162 && a2 == 0xE400000000000000;
        if (v8
          || (sub_1000CC324() & 1) != 0
          || (a1 == 6778986 ? (BOOL v9 = a2 == 0xE300000000000000) : (BOOL v9 = 0), v9 || (sub_1000CC324() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v10 = a1 == 1819112552 && a2 == 0xE400000000000000;
          if (v10 || (sub_1000CC324() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
          else
          {
            BOOL v11 = a1 == 7566179 && a2 == 0xE300000000000000;
            if (v11 || (sub_1000CC324() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 0;
            }
            else
            {
              BOOL v12 = a1 == 29546 && a2 == 0xE200000000000000;
              if (v12 || (sub_1000CC324() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 2;
              }
              else
              {
                BOOL v13 = a1 == 6778480 && a2 == 0xE300000000000000;
                if (v13 || (sub_1000CC324() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 6780531 && a2 == 0xE300000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  char v15 = sub_1000CC324();
                  swift_bridgeObjectRelease();
                  if (v15) {
                    return 8;
                  }
                  else {
                    return 9;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

double sub_1000CBAF8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a2 >> 60 == 15) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = a1;
  }
  if (a2 >> 60 == 15) {
    unint64_t v9 = 0xC000000000000000;
  }
  else {
    unint64_t v9 = a2;
  }
  *(void *)&long long v37 = a3;
  *((void *)&v37 + 1) = a4;
  sub_100047398(a1, a2);
  uint64_t v10 = sub_10024DF30();
  if (v10 < 0)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int v11 = v10;
  uint64_t v36 = a1;
  if (!v10)
  {
    if (qword_100308D08 == -1)
    {
LABEL_11:
      int v13 = qword_10034C038;
      int v14 = HIDWORD(qword_10034C038);
      int v17 = dword_10034C040;
      __int16 v15 = word_10034C044;
      char v16 = byte_10034C046;
      uint64_t v12 = swift_retain();
      goto LABEL_12;
    }
LABEL_26:
    swift_once();
    goto LABEL_11;
  }
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v12 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v11, (uint64_t (*)(void))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_10006C3B4);
  int v13 = 0;
  int v14 = 0;
  __int16 v15 = 0;
  char v16 = 0;
  int v17 = *(_DWORD *)(v12 + 16);
LABEL_12:
  uint64_t v38 = v12;
  int v39 = v13;
  int v40 = v14;
  int v41 = v17;
  __int16 v42 = v15;
  char v43 = v16;
  __chkstk_darwin(v12, &v34);
  switch(v9 >> 62)
  {
    case 1uLL:
      if (v8 >> 32 < (int)v8)
      {
        __break(1u);
        sub_10003F808(v8, v9);
        __break(1u);
        JUMPOUT(0x1000CBE68);
      }
      uint64_t v35 = v18;
      sub_1000473AC(v8, v9);
      unint64_t v24 = (unint64_t)sub_100083E60((int)v8, v8 >> 32, v9 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, void *, uint64_t))sub_100083E40);
      sub_10003F808(v8, v9);
      goto LABEL_22;
    case 2uLL:
      uint64_t v23 = *(void *)(v8 + 16);
      uint64_t v22 = *(void *)(v8 + 24);
      uint64_t v35 = v18;
      swift_retain();
      swift_retain();
      unint64_t v24 = (unint64_t)sub_100083E60(v23, v22, v9 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, void *, uint64_t))sub_100083E40);
      swift_release();
      swift_release();
LABEL_22:
      if ((v24 & 0x100000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    case 3uLL:
      uint64_t v21 = 0;
      uint64_t v20 = 0;
      uint64_t v19 = 0;
      goto LABEL_16;
    default:
      uint64_t v19 = BYTE6(v9);
      uint64_t v20 = v9 & 0xFFFFFFFFFFFFLL;
      uint64_t v21 = v8;
LABEL_16:
      unint64_t v25 = (unint64_t)sub_100083CF4(v21, v20, v19, (void *(*)(unsigned int *__return_ptr, uint64_t *, uint64_t))sub_100083E40);
      LODWORD(v24) = v25;
      if ((v25 & 0x100000000) != 0)
      {
LABEL_17:
        sub_10006D660();
        LODWORD(v24) = v26;
      }
LABEL_18:
      sub_10003F7F4(v36, a2);
      sub_10003F808(v8, v9);
      int v27 = v40 + v24;
      if (__CFADD__(v40, v24)) {
        goto LABEL_25;
      }
      uint64_t v28 = v38;
      int v29 = v39;
      int v30 = v41;
      __int16 v31 = v42;
      char v32 = v43;
      double result = *(double *)&v37;
      *(_OWORD *)a5 = v37;
      *(void *)(a5 + 16) = v28;
      *(_DWORD *)(a5 + 24) = v29;
      *(_DWORD *)(a5 + 28) = v27;
      *(_DWORD *)(a5 + 32) = v30;
      *(_WORD *)(a5 + 36) = v31;
      *(unsigned char *)(a5 + 38) = v32;
      return result;
  }
}

uint64_t sub_1000CBE78(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D76E0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000CBEC4(char a1)
{
  unint64_t result = 0x7373632F74786574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D74682F74786574;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x706A2F6567616D69;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x616C702F74786574;
      break;
    case 7:
      unint64_t result = 0x6E702F6567616D69;
      break;
    case 8:
      unint64_t result = 0x76732F6567616D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000CC008(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FB540(*a1, *a2);
}

Swift::Int sub_1000CC014()
{
  return sub_1001D352C(*v0);
}

uint64_t sub_1000CC01C(uint64_t a1)
{
  return sub_1000D22FC(a1, *v1);
}

Swift::Int sub_1000CC024(uint64_t a1)
{
  return sub_1000D391C(a1, *v1);
}

uint64_t sub_1000CC02C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000CBE78(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000CC05C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000CBEC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000CC088(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (a2)
    {
      if (a2 <= 14)
      {
        return sub_10024DDD0();
      }
      else
      {
        sub_10024DBB0();
        swift_allocObject();
        sub_10024DB70();
        if ((unint64_t)a2 >= 0x7FFFFFFF)
        {
          sub_10024DE70();
          unint64_t result = swift_allocObject();
          *(void *)(result + 16) = 0;
          *(void *)(result + 24) = a2;
        }
        else
        {
          return a2 << 32;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HTTPBodyType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HTTPBodyType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CC29CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPBodyType()
{
  return &type metadata for HTTPBodyType;
}

unint64_t sub_1000CC2D8()
{
  unint64_t result = qword_10030F738;
  if (!qword_10030F738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F738);
  }
  return result;
}

uint64_t sub_1000CC324()
{
  return sub_10024FA60();
}

uint64_t sub_1000CC340()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(v0 + 24) = 4;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 64) = 0xF000000000000000;
  return result;
}

uint64_t sub_1000CC378()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003F7F4(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000CC3B0(uint64_t a1, char a2)
{
  if (a2)
  {
    *(_OWORD *)(v2 + 72) = xmmword_10025DD20;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v2 + 72) = sub_10024F9E0();
    *(void *)(v2 + 80) = v3;
    return swift_bridgeObjectRelease();
  }
}

BOOL sub_1000CC438(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D77D8;
  v6._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_1000CC480()
{
  return 0x6375537070416E69;
}

uint64_t sub_1000CC4A0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D7810;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000CC4EC(char a1)
{
  unint64_t result = 0x7975427070416E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1000CC598@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1000CC438(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000CC5D0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1000CC5F4()
{
  return sub_10024EA50();
}

uint64_t sub_1000CC654()
{
  return sub_10024EA00();
}

uint64_t sub_1000CC6A4(unsigned __int8 *a1, char *a2)
{
  return sub_1000FB3E4(*a1, *a2);
}

Swift::Int sub_1000CC6B0()
{
  return sub_1001D3564(*v0);
}

uint64_t sub_1000CC6B8(uint64_t a1)
{
  return sub_1000D2238(a1, *v1);
}

Swift::Int sub_1000CC6C0(uint64_t a1)
{
  return sub_1000D3904(a1, *v1);
}

uint64_t sub_1000CC6C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000CC4A0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000CC6F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000CC4EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000CC724()
{
  return sub_10024EA50();
}

uint64_t sub_1000CC784()
{
  return sub_10024EA00();
}

uint64_t sub_1000CC7D4()
{
  sub_1000CC378();
  return _swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for GenericStoreKitResponse()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JingleAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CC8F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JingleAction()
{
  return &type metadata for JingleAction;
}

unsigned char *storeEnumTagSinglePayload for JingleDocType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000CC9CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JingleDocType()
{
  return &type metadata for JingleDocType;
}

unint64_t sub_1000CCA08()
{
  unint64_t result = qword_10030F8D0;
  if (!qword_10030F8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F8D0);
  }
  return result;
}

unint64_t sub_1000CCA58()
{
  unint64_t result = qword_10030F8D8;
  if (!qword_10030F8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F8D8);
  }
  return result;
}

uint64_t sub_1000CCAA4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D7890;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000CCAF4(char a1)
{
  unint64_t result = 0x73676E6970;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F44656C676E696ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x6341656C676E696ALL;
      break;
    case 4:
      unint64_t result = 1684632420;
      break;
    case 5:
      unint64_t result = 0x7473696C2D707061;
      break;
    case 6:
      unint64_t result = 0x2D74706965636572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000CCBF0(char a1)
{
  unint64_t result = 0x73676E6970;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F44656C676E696ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x6341656C676E696ALL;
      break;
    case 4:
      unint64_t result = 1684632420;
      break;
    case 5:
      unint64_t result = 0x7473696C2D707061;
      break;
    case 6:
      unint64_t result = 0x2D74706965636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000CCCEC(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_10030F8E0);
  __chkstk_darwin(v3, v4);
  sub_10001C2A8(a1, a1[3]);
  sub_1000CD0B8();
  sub_10024FD40();
  sub_100019524(&qword_100309410);
  sub_100063434();
  sub_1000CD3E0();
  sub_10024F980();
  if (!v1)
  {
    sub_1000634A0();
    sub_10024F980();
    sub_10024F900();
    sub_1000634EC();
    sub_1000CD400();
    swift_bridgeObjectRetain();
    sub_10024F8D0();
    swift_bridgeObjectRelease();
    sub_100019524(&qword_10030BAE8);
    sub_100063538();
    sub_1000CD3E0();
    sub_10024F910();
    sub_100056E3C();
    sub_1000CD400();
  }
  uint64_t v5 = sub_1000CD424();
  return v6(v5);
}

uint64_t sub_1000CCF6C(unsigned __int8 *a1, char *a2)
{
  return sub_1000F9474(*a1, *a2);
}

Swift::Int sub_1000CCF78()
{
  return sub_1001D357C(*v0);
}

uint64_t sub_1000CCF80(uint64_t a1)
{
  return sub_1000D0E50(a1, *v1);
}

Swift::Int sub_1000CCF88(uint64_t a1)
{
  return sub_1000D2D74(a1, *v1);
}

uint64_t sub_1000CCF90@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000CCAA4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000CCFC0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000CCAF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000CCFEC()
{
  return sub_1000CCBF0(*v0);
}

uint64_t sub_1000CCFF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000CCAF0();
  *a1 = result;
  return result;
}

uint64_t sub_1000CD01C(uint64_t a1)
{
  unint64_t v2 = sub_1000CD0B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CD058(uint64_t a1)
{
  unint64_t v2 = sub_1000CD0B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000CD094(void *a1)
{
  return sub_1000CCCEC(a1);
}

unint64_t sub_1000CD0B8()
{
  unint64_t result = qword_10030F8E8;
  if (!qword_10030F8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F8E8);
  }
  return result;
}

unint64_t sub_1000CD104()
{
  unint64_t result = qword_10030BAF8;
  if (!qword_10030BAF8)
  {
    type metadata accessor for IAPTransaction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030BAF8);
  }
  return result;
}

unint64_t sub_1000CD154()
{
  unint64_t result = qword_10030F8F0;
  if (!qword_10030F8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F8F0);
  }
  return result;
}

unint64_t sub_1000CD1A0()
{
  unint64_t result = qword_10030F8F8;
  if (!qword_10030F8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F8F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GenericStoreKitResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CD2B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericStoreKitResponse.CodingKeys()
{
  return &type metadata for GenericStoreKitResponse.CodingKeys;
}

unint64_t sub_1000CD2F4()
{
  unint64_t result = qword_10030F900;
  if (!qword_10030F900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F900);
  }
  return result;
}

unint64_t sub_1000CD344()
{
  unint64_t result = qword_10030F908;
  if (!qword_10030F908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F908);
  }
  return result;
}

unint64_t sub_1000CD394()
{
  unint64_t result = qword_10030F910;
  if (!qword_10030F910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030F910);
  }
  return result;
}

uint64_t sub_1000CD3E0()
{
  return v0 - 96;
}

uint64_t sub_1000CD400()
{
  return sub_10024F910();
}

uint64_t sub_1000CD424()
{
  return v0;
}

uint64_t sub_1000CD438(long long *a1, long long *a2)
{
  uint64_t v3 = sub_1000CE8A4(a1, (uint64_t)v25);
  switch(v27)
  {
    case 1:
      uint64_t v4 = v26;
      sub_1000CF030(v3, (uint64_t)&v22);
      if (v6 == 1) {
        goto LABEL_7;
      }
      goto LABEL_24;
    case 2:
      uint64_t v4 = v26;
      sub_1000CF030(v3, (uint64_t)&v22);
      if (v7 == 2) {
        goto LABEL_7;
      }
      goto LABEL_24;
    case 3:
      if (v25[2] | v26 | v25[0] | v25[1])
      {
        sub_1000CE8A4(a2, (uint64_t)&v22);
        if (v24 != 3 || (v22.i64[0] == 1 ? (BOOL v17 = (v23.i64[0] | v23.i64[1] | v22.i64[1]) == 0) : (BOOL v17 = 0), !v17))
        {
LABEL_24:
          char v16 = 0;
          return v16 & 1;
        }
      }
      else
      {
        sub_1000CE8A4(a2, (uint64_t)&v22);
        int8x16_t v18 = vorrq_s8(v22, v23);
        int8x8_t v19 = vorr_s8(*(int8x8_t *)v18.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL));
        if (v24 != 3 || *(void *)&v19 != 0) {
          goto LABEL_24;
        }
      }
LABEL_30:
      char v16 = 1;
      return v16 & 1;
    default:
      uint64_t v4 = v26;
      sub_1000CF030(v3, (uint64_t)&v22);
      if (v5) {
        goto LABEL_24;
      }
LABEL_7:
      sub_1000CEFA0();
      BOOL v13 = v13 && v4 == v10;
      if (v13 && v8 == v11 && v9 == v12) {
        goto LABEL_30;
      }
      char v16 = sub_10024F9D0();
      return v16 & 1;
  }
}

uint64_t sub_1000CD5B0(long long *a1)
{
  sub_1000CE8A4(a1, (uint64_t)v20);
  int v2 = v21 >> 6;
  if (!v2)
  {
    sub_1000CF058();
    if (v4 <= 0x3F) {
      goto LABEL_6;
    }
LABEL_19:
    char v13 = 0;
    return v13 & 1;
  }
  if (v2 != 1)
  {
    v21 &= 0x3Fu;
    uint64_t v14 = sub_1000CE8A4(v20, (uint64_t)&v22);
    sub_1000CF030(v14, (uint64_t)v17);
    if ((v15 & 0xC0) == 0x80)
    {
      char v18 = v15 & 0x3F;
      sub_1000CE8A4(v17, (uint64_t)v19);
      char v13 = sub_1000CD438(&v22, v19);
      return v13 & 1;
    }
    goto LABEL_19;
  }
  sub_1000CF058();
  if ((v3 & 0xC0) != 0x40) {
    goto LABEL_19;
  }
  char v23 = v3 & 0x3F;
LABEL_6:
  sub_1000CEFA0();
  BOOL v10 = v10 && v1 == v7;
  if (v10 && v5 == v8 && v6 == v9) {
    char v13 = 1;
  }
  else {
    char v13 = sub_10024F9D0();
  }
  return v13 & 1;
}

uint64_t sub_1000CD6BC(long long *a1, long long *a2)
{
  sub_1000CE8A4(a1, (uint64_t)v4);
  sub_1000CE8A4(a2, (uint64_t)v5);
  return sub_1000CD438(v4, v5) & 1;
}

uint64_t sub_1000CD708(long long *a1, long long *a2)
{
  sub_1000CE8A4(a1, (uint64_t)v4);
  sub_1000CE8A4(a2, (uint64_t)v5);
  return sub_1000CD5B0(v4) & 1;
}

void *sub_1000CD754(uint64_t a1, unint64_t a2)
{
  uint64_t v92 = 15;
  uint64_t v93 = _swiftEmptyArrayStorage;
  unint64_t v91 = 15;
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v89 = 0;
    unint64_t v90 = 4 * v4;
    int v88 = 5;
    unint64_t v7 = 15;
    unint64_t v8 = 15;
    char v9 = 1;
    do
    {
      uint64_t v10 = sub_1000CEE74();
      uint64_t v12 = v11;
      if ((sub_10024E590() & 1) != 0
        || (v10 == qword_10030F918 ? (BOOL v13 = v12 == unk_10030F920) : (BOOL v13 = 0),
            v13
         || (sub_1000CEFB8() & 1) != 0
         || (v10 == qword_10030F928 ? (BOOL v14 = v12 == unk_10030F930) : (BOOL v14 = 0),
             v14
          || (sub_1000CEFB8() & 1) != 0
          || (v10 == qword_10030F938 ? (BOOL v15 = v12 == unk_10030F940) : (BOOL v15 = 0), v15))))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v16 = sub_1000CEFB8();
        swift_bridgeObjectRelease();
        unint64_t v17 = v89;
        if ((v16 & 1) == 0) {
          unint64_t v17 = v8;
        }
        unint64_t v89 = v17;
        v9 &= v16;
      }
      unint64_t v18 = sub_1000CED50();
      unint64_t v19 = v18 >> 14;
      if ((_BYTE)v6)
      {
        unint64_t v20 = v89 >> 14;
        if (v6 != 1)
        {
          if (v9)
          {
            uint64_t v21 = sub_1000CED50();
            unint64_t v7 = v21;
            unint64_t v91 = v21;
            uint64_t v92 = v21;
            char v9 = 1;
            goto LABEL_37;
          }
          char v9 = v88;
          uint64_t v6 = sub_1000CEE74();
          uint64_t v36 = v35;
          if (v88 == 5)
          {
            if ((sub_10024E590() & 1) != 0
              || ((sub_1000CF04C(), v13) ? (BOOL v38 = v36 == v37) : (BOOL v38 = 0),
                  v38
               || (sub_1000CEDF8() & 1) != 0
               || ((sub_1000CF04C(), v13) ? (BOOL v40 = v36 == v39) : (BOOL v40 = 0),
                   v40 || (sub_1000CEDF8() & 1) != 0 || ((sub_1000CF04C(), v13) ? (BOOL v42 = v36 == v41) : (BOOL v42 = 0), v42))))
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v43 = sub_1000CEDF8();
              swift_bridgeObjectRelease();
              if ((v43 & 1) == 0)
              {
                if (v20 < v7 >> 14) {
                  goto LABEL_215;
                }
                swift_bridgeObjectRetain();
                sub_1000CED50();
                unint64_t v44 = sub_1000CEDC8();
                unint64_t v46 = v45;
                uint64_t v48 = v47;
                uint64_t v50 = v49;
                swift_bridgeObjectRelease();
                unint64_t v51 = v44 >> 16;
                unint64_t v52 = v46 >> 16;
                BOOL v53 = v48 == 26217 && v50 == 0xE200000000000000;
                if (v53 && !v51 && v52 == 2 || (sub_1000CEE10() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  int v69 = 0;
                }
                else
                {
                  BOOL v70 = v48 == 1718185061 && v50 == 0xE400000000000000;
                  if (v70 && !v51 && v52 == 4 || (sub_1000CEE10() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    int v69 = 1;
                  }
                  else
                  {
                    BOOL v71 = v48 == 1702063205 && v50 == 0xE400000000000000;
                    if (v71 && !v51 && v52 == 4 || (sub_1000CEE10() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      int v69 = 2;
                    }
                    else
                    {
                      BOOL v72 = v48 == 7499622 && v50 == 0xE300000000000000;
                      if (v72 && !v51 && v52 == 3 || (sub_1000CEE10() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        int v69 = 3;
                      }
                      else
                      {
                        char v75 = sub_1000CE770(6581861, 0xE300000000000000, v44, v46, v48, v50);
                        swift_bridgeObjectRelease();
                        if (v75) {
                          int v69 = 4;
                        }
                        else {
                          int v69 = 5;
                        }
                      }
                    }
                  }
                }
                uint64_t v76 = sub_1000CED50();
                unint64_t v8 = v76;
                unint64_t v91 = v76;
                if (v69 != 5)
                {
                  uint64_t v92 = v76;
                  int v88 = v69;
                  if (v69 == 2 || v69 == 4)
                  {
                    char v9 = 0;
                  }
                  else
                  {
                    unint64_t v89 = 0;
                    char v9 = 1;
                  }
                  uint64_t v6 = 2;
                  unint64_t v7 = v76;
                  goto LABEL_118;
                }
                char v9 = 0;
                goto LABEL_107;
              }
            }
            sub_1000CED50();
            sub_1000CEF0C();
LABEL_107:
            int v88 = 5;
LABEL_127:
            uint64_t v6 = 2;
            goto LABEL_118;
          }
          sub_1000CF04C();
          if (v13 && v36 == v58)
          {
            swift_bridgeObjectRelease();
            if (v90 <= v18 >> 14) {
              goto LABEL_126;
            }
          }
          else
          {
            sub_1000CEDF8();
            sub_1000CEE8C();
            if ((v6 & 1) == 0 || v19 >= v90)
            {
LABEL_126:
              sub_1000CED50();
              sub_1000CEF0C();
              goto LABEL_127;
            }
          }
          sub_1000CEE74();
          sub_1000CEEDC();
          if (v13 && v62 == v63)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1000CEDF8();
            sub_1000CEE8C();
            if ((v6 & 1) == 0) {
              goto LABEL_126;
            }
          }
          switch(v88)
          {
            case 1:
              if (v20 < v7 >> 14) {
                goto LABEL_213;
              }
              swift_bridgeObjectRetain();
              sub_1000CED50();
              sub_1000CEDC8();
              sub_1000CED80();
              sub_1000CECE8();
              if ((sub_1000CEEC4() & 1) == 0)
              {
                sub_1000CED2C();
                uint64_t v6 = v79;
              }
              sub_1000CEDE8();
              if (v57)
              {
                sub_1000CED08();
                uint64_t v6 = v80;
              }
              sub_1000CED68();
              char v61 = -127;
              goto LABEL_115;
            case 2:
              sub_1000CECE8();
              uint64_t v65 = v93;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1000CEFF8();
                uint64_t v65 = v81;
              }
              unint64_t v66 = v65[2];
              if (v66 >= v65[3] >> 1)
              {
                sub_1000CEF58();
                uint64_t v65 = v82;
              }
              v65[2] = v66 + 1;
              BOOL v67 = &v65[5 * v66];
              *((_OWORD *)v67 + 2) = 0u;
              *((_OWORD *)v67 + 3) = 0u;
              goto LABEL_167;
            case 3:
              if (v20 < v7 >> 14) {
                goto LABEL_214;
              }
              swift_bridgeObjectRetain();
              sub_1000CED50();
              sub_1000CEDC8();
              sub_1000CED80();
              sub_1000CECE8();
              if ((sub_1000CEEC4() & 1) == 0)
              {
                sub_1000CED2C();
                uint64_t v6 = v83;
              }
              sub_1000CEDE8();
              if (v57)
              {
                sub_1000CED08();
                uint64_t v6 = v84;
              }
              sub_1000CED68();
              char v61 = -126;
              goto LABEL_115;
            case 4:
              sub_1000CECE8();
              uint64_t v65 = v93;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1000CEFF8();
                uint64_t v65 = v85;
              }
              unint64_t v68 = v65[2];
              if (v68 >= v65[3] >> 1)
              {
                sub_1000CEF58();
                uint64_t v65 = v86;
              }
              v65[2] = v68 + 1;
              BOOL v67 = &v65[5 * v68];
              v67[4] = 1;
              v67[5] = 0;
              v67[6] = 0;
              v67[7] = 0;
LABEL_167:
              *((unsigned char *)v67 + 64) = -125;
              uint64_t v93 = v65;
              goto LABEL_116;
            default:
              if (v20 < v7 >> 14) {
                goto LABEL_212;
              }
              swift_bridgeObjectRetain();
              sub_1000CED50();
              sub_1000CEDC8();
              sub_1000CED80();
              sub_1000CECE8();
              if ((sub_1000CEEC4() & 1) == 0)
              {
                sub_1000CED2C();
                uint64_t v6 = v77;
              }
              sub_1000CEDE8();
              if (v57)
              {
                sub_1000CED08();
                uint64_t v6 = v78;
              }
              sub_1000CED68();
              char v61 = 0x80;
              break;
          }
          goto LABEL_115;
        }
        if (v9)
        {
          uint64_t v21 = sub_1000CED50();
          unint64_t v7 = v21;
          unint64_t v91 = v21;
          uint64_t v92 = v21;
          uint64_t v6 = 1;
LABEL_97:
          char v9 = 1;
          goto LABEL_117;
        }
        sub_1000CEE74();
        sub_1000CEEDC();
        if (v13 && v25 == v26)
        {
          swift_bridgeObjectRelease();
          if (v90 <= v18 >> 14)
          {
LABEL_87:
            sub_1000CED50();
            sub_1000CEF0C();
            uint64_t v6 = 1;
            goto LABEL_118;
          }
        }
        else
        {
          sub_1000CEDF8();
          sub_1000CEE8C();
          if ((v6 & 1) == 0 || v19 >= v90) {
            goto LABEL_87;
          }
        }
        sub_1000CEE74();
        sub_1000CEEDC();
        if (v13 && v54 == v55)
        {
          swift_bridgeObjectRelease();
LABEL_109:
          if (v20 < v7 >> 14) {
            goto LABEL_210;
          }
          swift_bridgeObjectRetain();
          sub_1000CED50();
          sub_1000CEDC8();
          sub_1000CED80();
          sub_1000CECE8();
          if ((sub_1000CEEC4() & 1) == 0)
          {
            sub_1000CED2C();
            uint64_t v6 = v73;
          }
          sub_1000CEDE8();
          if (v57)
          {
            sub_1000CED08();
            uint64_t v6 = v74;
          }
          sub_1000CED68();
          char v61 = 64;
LABEL_115:
          *(unsigned char *)(v60 + 64) = v61;
          uint64_t v93 = (void *)v6;
LABEL_116:
          swift_endAccess();
          unint64_t v7 = sub_1000CED50();
          uint64_t v6 = 0;
          uint64_t v21 = sub_1000CEF1C(v7);
          goto LABEL_117;
        }
        sub_1000CEDF8();
        sub_1000CEE8C();
        if (v6) {
          goto LABEL_109;
        }
        goto LABEL_87;
      }
      sub_1000CEE74();
      sub_1000CEEDC();
      if (v13 && v22 == v23)
      {
        swift_bridgeObjectRelease();
        if (v90 > v18 >> 14) {
          goto LABEL_46;
        }
      }
      else
      {
        sub_1000CEDF8();
        sub_1000CEE8C();
        if ((v6 & 1) != 0 && v19 < v90)
        {
LABEL_46:
          sub_1000CEE74();
          sub_1000CEEDC();
          BOOL v30 = v13 && v28 == v29;
          unint64_t v31 = v7 >> 14;
          if (v30)
          {
            swift_bridgeObjectRelease();
LABEL_89:
            if (v5 != v7 >> 14)
            {
              if (v5 < v31)
              {
                __break(1u);
LABEL_210:
                __break(1u);
LABEL_211:
                __break(1u);
LABEL_212:
                __break(1u);
LABEL_213:
                __break(1u);
LABEL_214:
                __break(1u);
LABEL_215:
                __break(1u);
                JUMPOUT(0x1000CE1C0);
              }
              sub_1000CF0A4();
              sub_1000CECE8();
              if ((sub_1000CEEC4() & 1) == 0) {
                sub_1000CED2C();
              }
              sub_1000CEDE8();
              if (v57) {
                sub_1000CED08();
              }
              sub_1000CEE44();
            }
            uint64_t v21 = sub_1000CED50();
            unint64_t v7 = v21;
            uint64_t v92 = v21;
            unint64_t v91 = v21;
            uint64_t v6 = 1;
            int v88 = 5;
            unint64_t v89 = 0;
            goto LABEL_97;
          }
          sub_1000CEDF8();
          sub_1000CEE8C();
          if (v6) {
            goto LABEL_89;
          }
          sub_1000CEE74();
          sub_1000CEEDC();
          if (v13 && v32 == v33)
          {
            swift_bridgeObjectRelease();
LABEL_129:
            if (v5 != v7 >> 14)
            {
              if (v5 < v31) {
                goto LABEL_211;
              }
              sub_1000CF0A4();
              sub_1000CECE8();
              if ((sub_1000CEEC4() & 1) == 0) {
                sub_1000CED2C();
              }
              sub_1000CEDE8();
              if (v57) {
                sub_1000CED08();
              }
              sub_1000CEE44();
            }
            unint64_t v7 = sub_1000CED50();
            uint64_t v21 = sub_1000CEF1C(v7);
LABEL_37:
            uint64_t v6 = 2;
LABEL_117:
            unint64_t v8 = v21;
            goto LABEL_118;
          }
          sub_1000CEDF8();
          sub_1000CEE8C();
          if (v6) {
            goto LABEL_129;
          }
        }
      }
      unint64_t v8 = sub_1000CED50();
      uint64_t v6 = 0;
      unint64_t v91 = v8;
LABEL_118:
      unint64_t v5 = v8 >> 14;
    }
    while (v8 >> 14 < v90);
  }
  sub_1000CE1D4(&v91, (unint64_t *)&v92, (uint64_t *)&v93);
  swift_beginAccess();
  return v93;
}

unint64_t sub_1000CE1D4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  swift_beginAccess();
  unint64_t v6 = *a1;
  swift_beginAccess();
  unint64_t result = *a2;
  if (v6 >> 14 != *a2 >> 14)
  {
    if (v6 >> 14 < result >> 14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = sub_10024E920();
      uint64_t v10 = v9;
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      swift_beginAccess();
      sub_1000345CC();
      uint64_t v15 = *(void *)(*a3 + 16);
      sub_1000348E4();
      uint64_t v16 = *a3;
      *(void *)(v16 + 16) = v15 + 1;
      uint64_t v17 = v16 + 40 * v15;
      *(void *)(v17 + 32) = v8;
      *(void *)(v17 + 40) = v10;
      *(void *)(v17 + 48) = v12;
      *(void *)(v17 + 56) = v14;
      *(unsigned char *)(v17 + 64) = 0;
      return swift_endAccess();
    }
  }
  return result;
}

void *sub_1000CE2D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int64_t v3 = *(void *)(a1 + 16);
  if (*a2 >= v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v95 = a1 + 32;
  long long v96 = _swiftEmptyArrayStorage;
  uint64_t v92 = a1;
  uint64_t v93 = (uint64_t)a2;
  uint64_t v94 = *(void *)(a1 + 16);
LABEL_3:
  if (v2 >= (unint64_t)v3) {
    goto LABEL_73;
  }
  uint64_t v6 = v95 + 40 * v2;
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t v9 = *(void *)(v6 + 24);
  unsigned int v11 = *(unsigned __int8 *)(v6 + 32);
  if (!(v11 >> 6))
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000CEDA4();
      long long v96 = v76;
    }
    sub_1000CF01C();
    if (v20)
    {
      sub_1000CEF7C();
      sub_1000CEEA4(v77, v78, v79, v80, v81, v82, v83, v84, v91, v92, v93, v94, v95, v77);
    }
    else
    {
      sub_1000CEEA4(v22, v23, v24, v25, v26, v27, v28, v29, v91, v92, v93, v94, v95, (uint64_t)v96);
    }
    *(unsigned char *)(v30 + 72) = 0;
    goto LABEL_62;
  }
  if (v11 >> 6 == 1)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000CEDA4();
      long long v96 = v67;
    }
    sub_1000CF01C();
    if (v20)
    {
      sub_1000CEF7C();
      sub_1000CEEA4(v68, v69, v70, v71, v72, v73, v74, v75, v91, v92, v93, v94, v95, v68);
    }
    else
    {
      sub_1000CEEA4(v12, v13, v14, v15, v16, v17, v18, v19, v91, v92, v93, v94, v95, (uint64_t)v96);
    }
    *(unsigned char *)(v21 + 72) = 1;
    goto LABEL_62;
  }
  int v31 = v11 & 0x3F;
  if (v31 != 3)
  {
    if (v31 == 1) {
      return v96;
    }
LABEL_24:
    uint64_t v33 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v2 >= v3) {
        goto LABEL_55;
      }
      if (v2 >= (unint64_t)v3)
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        JUMPOUT(0x1000CE760);
      }
      uint64_t v34 = v95 + 40 * v2;
      int v35 = *(char *)(v34 + 32);
      if (v35 < 0 && (v35 & 0x3Fu) >= 3)
      {
        if (*(void *)(v34 + 16) | *(void *)(v34 + 8) | *(void *)v34 | *(void *)(v34 + 24))
        {
          sub_1000CF084(1);
          goto LABEL_55;
        }
        sub_1000CF084(0);
        LOBYTE(v35) = *(unsigned char *)(v34 + 32);
      }
      if ((v35 & 0xC0) != 0x80) {
        goto LABEL_55;
      }
      uint64_t v37 = *(void *)v34;
      uint64_t v36 = *(void *)(v34 + 8);
      uint64_t v39 = *(void *)(v34 + 16);
      uint64_t v38 = *(void *)(v34 + 24);
      *uint64_t v4 = v2 + 1;
      uint64_t v40 = sub_1000CEE30();
      sub_1000CE88C(v40, v41, v42, v43, v44);
      uint64_t v45 = sub_1000CE2D4(v5, v4);
      switch(v35 & 0x3F)
      {
        case 1:
          uint64_t v46 = sub_1000CEE30();
          unsigned __int8 v50 = 1;
          goto LABEL_35;
        case 2:
          uint64_t v59 = sub_1000CEE30();
          sub_1000CE88C(v59, v60, v61, v62, 2u);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000CEDA4();
            long long v96 = v87;
          }
          unint64_t v63 = v96[2];
          if (v63 >= v96[3] >> 1)
          {
            sub_100034F04();
            long long v96 = v88;
          }
          v96[2] = v63 + 1;
          unsigned int v64 = &v96[6 * v63];
          v64[4] = v37;
          v64[5] = v36;
          v64[6] = v39;
          v64[7] = v38;
          v64[8] = v45;
          *((unsigned char *)v64 + 72) = 3;
          sub_1000CEFD4();
          goto LABEL_54;
        case 3:
          if (v39 | v36 | v37 | v38)
          {
            swift_bridgeObjectRelease();
LABEL_54:
            uint64_t v4 = (uint64_t *)v93;
            int64_t v3 = v94;
LABEL_55:
            if (v33[2])
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1000CEDA4();
                long long v96 = v85;
              }
              unint64_t v65 = v96[2];
              if (v65 >= v96[3] >> 1)
              {
                sub_100034F04();
                long long v96 = v86;
              }
              v96[2] = v65 + 1;
              unint64_t v66 = &v96[6 * v65];
              v66[4] = v33;
              *(_OWORD *)(v66 + 5) = 0u;
              *(_OWORD *)(v66 + 7) = 0u;
              *((unsigned char *)v66 + 72) = 2;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
LABEL_62:
            uint64_t v2 = *v4 + 1;
            if (__OFADD__(*v4, 1)) {
              goto LABEL_74;
            }
            *uint64_t v4 = v2;
            if (v2 >= v3) {
              return v96;
            }
            goto LABEL_3;
          }
          int64_t v3 = v94;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000CEEE8();
            uint64_t v33 = v57;
          }
          uint64_t v4 = (uint64_t *)v93;
          unint64_t v53 = v33[2];
          if (v53 >= v33[3] >> 1)
          {
            sub_1000CEF34();
            uint64_t v33 = v58;
          }
          v33[2] = v53 + 1;
          uint64_t v54 = &v33[6 * v53];
          v54[4] = v45;
          *(_OWORD *)(v54 + 5) = 0u;
          *(_OWORD *)(v54 + 7) = 0u;
          *((unsigned char *)v54 + 72) = 1;
LABEL_46:
          uint64_t v2 = *v4;
          break;
        default:
          uint64_t v46 = sub_1000CEE30();
          unsigned __int8 v50 = 0;
LABEL_35:
          sub_1000CE88C(v46, v47, v48, v49, v50);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000CEEE8();
            uint64_t v33 = v55;
          }
          unint64_t v51 = v33[2];
          if (v51 >= v33[3] >> 1)
          {
            sub_1000CEF34();
            uint64_t v33 = v56;
          }
          v33[2] = v51 + 1;
          unint64_t v52 = &v33[6 * v51];
          v52[4] = v37;
          v52[5] = v36;
          v52[6] = v39;
          v52[7] = v38;
          v52[8] = v45;
          *((unsigned char *)v52 + 72) = 0;
          sub_1000CEFD4();
          uint64_t v5 = v92;
          uint64_t v4 = (uint64_t *)v93;
          int64_t v3 = v94;
          goto LABEL_46;
      }
    }
  }
  if (!(v10 | v8 | v7 | v9))
  {
    uint64_t v90 = 0;
    goto LABEL_71;
  }
  if (v7 != 1 || (v10 | v8 | v9) != 0) {
    goto LABEL_24;
  }
  uint64_t v90 = 1;
LABEL_71:
  sub_1000CE88C(v90, 0, 0, 0, 3u);
  return v96;
}

uint64_t sub_1000CE770(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v8 = a1 == a5 && a2 == a6;
  if (v8 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return sub_10024F9D0() & 1;
  }
}

uint64_t sub_1000CE7D8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a3 && a2 == a4 && v5 == v6) {
    return 1;
  }
  else {
    return sub_10024F9D0() & 1;
  }
}

uint64_t sub_1000CE848(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  unsigned int v5 = a5 >> 6;
  if (v5 == 2) {
    return sub_1000CE874(result, a2, a3, a4, a5 & 0x3F);
  }
  if (v5 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000CE874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000CE88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000CE8A4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000CE8BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  unsigned int v5 = a5 >> 6;
  if (v5 == 2) {
    return sub_1000CE88C(result, a2, a3, a4, a5 & 0x3F);
  }
  if (v5 <= 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s6ParsedOwxx(uint64_t a1, uint64_t a2)
{
  return sub_1000CEA58(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1000CE848);
}

uint64_t _s6ParsedOwcp(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000CEA8C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE8BC);
}

uint64_t *_s6ParsedOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000CEB24(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE8BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE848);
}

uint64_t *_s6ParsedOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CEBC8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE848);
}

uint64_t _s6ParsedOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3E && *(unsigned char *)(a1 + 33))
    {
      unsigned int v2 = *(_DWORD *)a1 + 61;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 32) & 0x3C | (*(unsigned __int8 *)(a1 + 32) >> 6)) ^ 0x3F;
      if (v2 >= 0x3D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s6ParsedOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 62;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1000CEA00(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 6;
}

uint64_t sub_1000CEA0C(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_1000CEA1C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *_s6ParsedOMa()
{
  return &_s6ParsedON;
}

uint64_t _s6ParsedO7ControlOwxx(uint64_t a1, uint64_t a2)
{
  return sub_1000CEA58(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1000CE874);
}

uint64_t sub_1000CEA58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t _s6ParsedO7ControlOwcp(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000CEA8C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE88C);
}

uint64_t sub_1000CEA8C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return a1;
}

uint64_t *_s6ParsedO7ControlOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000CEB24(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE88C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE874);
}

uint64_t *sub_1000CEB24(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  uint64_t v16 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *_s6ParsedO7ControlOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CEBC8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000CE874);
}

uint64_t *sub_1000CEBC8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t _s6ParsedO7ControlOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ParsedO7ControlOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000CECA4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 2u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1000CECBC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *_s6ParsedO7ControlOMa()
{
  return &_s6ParsedO7ControlON;
}

uint64_t sub_1000CECE8()
{
  return swift_beginAccess();
}

void sub_1000CED08()
{
  sub_100034EDC();
}

void sub_1000CED2C()
{
  sub_100034EDC();
}

uint64_t sub_1000CED50()
{
  return sub_10024E7A0();
}

void sub_1000CED68()
{
  *(void *)(v5 + 16) = v6;
  uint64_t v7 = (void *)(v5 + 40 * v0);
  _OWORD v7[4] = v1;
  v7[5] = v2;
  v7[6] = v3;
  v7[7] = v4;
}

uint64_t sub_1000CED80()
{
  return swift_bridgeObjectRelease();
}

void sub_1000CEDA4()
{
  sub_100034F04();
}

uint64_t sub_1000CEDC8()
{
  return sub_10024E920();
}

uint64_t sub_1000CEDF8()
{
  return sub_10024FA60();
}

uint64_t sub_1000CEE10()
{
  return sub_10024F9D0();
}

uint64_t sub_1000CEE30()
{
  return v0;
}

uint64_t sub_1000CEE44()
{
  *(void *)(v5 + 16) = v6;
  uint64_t v9 = v5 + 40 * v0;
  *(void *)(v9 + 32) = v1;
  *(void *)(v9 + 40) = v2;
  *(void *)(v9 + 48) = v3;
  *(void *)(v9 + 56) = v4;
  *(unsigned char *)(v9 + 64) = 0;
  *(void *)(v7 - 88) = v5;
  return swift_endAccess();
}

uint64_t sub_1000CEE74()
{
  return sub_10024E8F0();
}

uint64_t sub_1000CEE8C()
{
  return swift_bridgeObjectRelease();
}

void sub_1000CEEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(a14 + 16) = v16;
  char v20 = (void *)(a14 + 48 * v14);
  v20[4] = v17;
  v20[5] = v18;
  v20[6] = v19;
  v20[7] = v15;
  v20[8] = 0;
}

uint64_t sub_1000CEEC4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1000CEEE8()
{
  sub_100034EF0();
}

uint64_t sub_1000CEF1C(uint64_t result)
{
  *(void *)(v1 - 96) = result;
  return result;
}

void sub_1000CEF34()
{
  sub_100034EF0();
}

void sub_1000CEF58()
{
  sub_100034EDC();
}

void sub_1000CEF7C()
{
  sub_100034F04();
}

uint64_t sub_1000CEFB8()
{
  return sub_10024FA60();
}

uint64_t sub_1000CEFD4()
{
  return sub_1000CE848(v4, v0, v3, v2, v1);
}

void sub_1000CEFF8()
{
  sub_100034EDC();
}

uint64_t sub_1000CF030(uint64_t a1, uint64_t a2)
{
  return sub_1000CE8A4(v2, a2);
}

uint64_t sub_1000CF058()
{
  return sub_1000CE8A4(v0, v1 - 88);
}

uint64_t sub_1000CF084(uint64_t a1)
{
  return sub_1000CE848(a1, 0, 0, 0, v1);
}

uint64_t sub_1000CF0A4()
{
  return sub_10024E920();
}

uint64_t sub_1000CF0C4(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D7958;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000CF11C()
{
  return &off_1002D79A8;
}

uint64_t sub_1000CF128(char a1)
{
  if (a1) {
    return 0x73656963696C6F70;
  }
  else {
    return 1634497893;
  }
}

uint64_t sub_1000CF158(char *a1, char *a2)
{
  return sub_1000FAC28(*a1, *a2);
}

Swift::Int sub_1000CF164()
{
  return sub_1001D3594();
}

uint64_t sub_1000CF16C()
{
  return sub_1000D1C14();
}

Swift::Int sub_1000CF174()
{
  return sub_1000D354C();
}

uint64_t sub_1000CF17C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000CF0C4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000CF1AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000CF128(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000CF1D8()
{
  return sub_1000CF128(*v0);
}

uint64_t sub_1000CF1E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000CF118();
  *a1 = result;
  return result;
}

_UNKNOWN **sub_1000CF208@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000CF11C();
  *a1 = result;
  return result;
}

uint64_t sub_1000CF230(uint64_t a1)
{
  unint64_t v2 = sub_1000CFEE4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CF26C(uint64_t a1)
{
  unint64_t v2 = sub_1000CFEE4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000CF2A8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1000CF2F8(a1);
  return v2;
}

void *sub_1000CF2F8(void *a1)
{
  sub_10002F9E0();
  sub_100019524(&qword_10030FAF0);
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_10001C2A8(a1, a1[3]);
  sub_1000CFEE4();
  sub_10024FD20();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v1[2] = sub_10024F830();
    v1[3] = v6;
    sub_100019524(&qword_10030FAB8);
    sub_1000CFF7C(&qword_10030FAF8, &qword_10030FB00);
    sub_10024F870();
    uint64_t v7 = sub_1000D04D0();
    v8(v7);
    v1[4] = v10;
  }
  sub_10001C2EC((uint64_t)a1);
  return v1;
}

uint64_t sub_1000CF4E0(void *a1)
{
  sub_100019524(&qword_10030FAA8);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_10001C2A8(a1, a1[3]);
  sub_1000CFEE4();
  sub_1000572C8();
  sub_1000D04B4();
  if (!v1)
  {
    sub_100019524(&qword_10030FAB8);
    sub_1000CFF7C(&qword_10030FAC0, &qword_10030FAC8);
    sub_10024F980();
  }
  uint64_t v5 = sub_10005728C();
  return v6(v5);
}

uint64_t sub_1000CF648()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000CF670()
{
  sub_1000CF648();
  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for OctaneAppPolicies()
{
  return self;
}

uint64_t sub_1000CF6C8(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D79D0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

_UNKNOWN **sub_1000CF718()
{
  return &off_1002D7A38;
}

uint64_t sub_1000CF724(char a1)
{
  if (!a1) {
    return 0x656C61636F6CLL;
  }
  if (a1 == 1) {
    return 0x52557963696C6F70;
  }
  return 0x65547963696C6F70;
}

uint64_t sub_1000CF780@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000CF2A8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000CF7AC(void *a1)
{
  return sub_1000CF4E0(a1);
}

uint64_t sub_1000CF7D0(unsigned __int8 *a1, char *a2)
{
  return sub_1000FAB24(*a1, *a2);
}

Swift::Int sub_1000CF7DC()
{
  return sub_1001D35A0();
}

uint64_t sub_1000CF7E4(uint64_t a1)
{
  return sub_1000D1B90(a1, *v1);
}

Swift::Int sub_1000CF7EC()
{
  return sub_1000D34C4();
}

uint64_t sub_1000CF7F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000CF6C8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000CF824@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000CF724(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000CF850()
{
  return sub_1000CF724(*v0);
}

uint64_t sub_1000CF858@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000CF714();
  *a1 = result;
  return result;
}

_UNKNOWN **sub_1000CF880@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000CF718();
  *a1 = result;
  return result;
}

uint64_t sub_1000CF8A8(uint64_t a1)
{
  unint64_t v2 = sub_1000CFF30();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CF8E4(uint64_t a1)
{
  unint64_t v2 = sub_1000CFF30();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000CF920(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1000CF970(a1);
  return v2;
}

void *sub_1000CF970(void *a1)
{
  Swift::OpaquePointer v3 = v1;
  sub_10002F9E0();
  uint64_t v5 = sub_100019524(&qword_10030FAE0);
  sub_10001B550();
  uint64_t v27 = v6;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000CFF30();
  sub_10024FD20();
  if (!v2)
  {
    LOBYTE(v28) = 0;
    uint64_t v15 = sub_10024F830();
    uint64_t v17 = v16;
    type metadata accessor for OctaneLocale();
    uint64_t v18 = sub_1000EFD68();
    if (v18)
    {
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      v3[2] = v19;
      LOBYTE(v28) = 1;
      swift_retain();
      v3[3] = sub_10024F830();
      v3[4] = v20;
      LOBYTE(v28) = 2;
      uint64_t v21 = a1;
      uint64_t v22 = sub_10024F830();
      uint64_t v23 = v10;
      uint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v5);
      swift_release();
      v3[5] = v22;
      v3[6] = v25;
      uint64_t v13 = (uint64_t)v21;
      goto LABEL_4;
    }
    char v30 = 0;
    unint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_10024F330(42);
    swift_bridgeObjectRelease();
    unint64_t v28 = 0xD000000000000014;
    unint64_t v29 = 0x800000010027D510;
    v31._uint64_t countAndFlagsBits = v15;
    v31._object = v17;
    sub_10024E800(v31);
    swift_bridgeObjectRelease();
    v32._object = (void *)0x800000010027D530;
    v32._uint64_t countAndFlagsBits = 0xD000000000000014;
    sub_10024E800(v32);
    sub_10024F3D0();
    swift_allocError();
    sub_10001B0A4(&qword_10030FAE8, &qword_10030FAE0);
    sub_10024F3A0();
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v11 = sub_1000D049C();
    v12(v11);
  }
  swift_deallocPartialClassInstance();
  uint64_t v13 = (uint64_t)a1;
LABEL_4:
  sub_10001C2EC(v13);
  return v3;
}

uint64_t sub_1000CFCB0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100019524(&qword_10030FAD0);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1000CFF30();
  sub_1000572C8();
  uint64_t v11 = *(void *)(*(void *)(v2 + 16) + 16);
  unsigned char v15[15] = 0;
  swift_bridgeObjectRetain();
  sub_1000D04B4();
  if (v11)
  {
    uint64_t v12 = sub_10005728C();
    v13(v12);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v15[14] = 1;
    sub_1000D04B4();
    v15[13] = 2;
    sub_1000D04B4();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v10, v4);
  }
}

uint64_t sub_1000CFE0C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000CFE3C()
{
  sub_1000CFE0C();
  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for OctaneAppPolicies.Policy()
{
  return self;
}

uint64_t sub_1000CFE94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000CF920(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000CFEC0(void *a1)
{
  return sub_1000CFCB0(a1);
}

unint64_t sub_1000CFEE4()
{
  unint64_t result = qword_10030FAB0;
  if (!qword_10030FAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FAB0);
  }
  return result;
}

unint64_t sub_1000CFF30()
{
  unint64_t result = qword_10030FAD8;
  if (!qword_10030FAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FAD8);
  }
  return result;
}

uint64_t sub_1000CFF7C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_10030FAB8);
    sub_1000CFFFC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CFFFC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for OctaneAppPolicies.Policy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OctaneAppPolicies.Policy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D0108);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneAppPolicies.Policy.CodingKeys()
{
  return &type metadata for OctaneAppPolicies.Policy.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OctaneAppPolicies.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D020CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneAppPolicies.CodingKeys()
{
  return &type metadata for OctaneAppPolicies.CodingKeys;
}

uint64_t sub_1000D0244()
{
  return sub_10001B0A4(&qword_10030FB08, &qword_10030FB10);
}

unint64_t sub_1000D0284()
{
  unint64_t result = qword_10030FB18;
  if (!qword_10030FB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FB18);
  }
  return result;
}

uint64_t sub_1000D02D0()
{
  return sub_10001B0A4(&qword_10030FB20, &qword_10030FB28);
}

unint64_t sub_1000D0310()
{
  unint64_t result = qword_10030FB30;
  if (!qword_10030FB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FB30);
  }
  return result;
}

unint64_t sub_1000D0360()
{
  unint64_t result = qword_10030FB38;
  if (!qword_10030FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FB38);
  }
  return result;
}

unint64_t sub_1000D03B0()
{
  unint64_t result = qword_10030FB40;
  if (!qword_10030FB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FB40);
  }
  return result;
}

unint64_t sub_1000D0400()
{
  unint64_t result = qword_10030FB48;
  if (!qword_10030FB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FB48);
  }
  return result;
}

unint64_t sub_1000D0450()
{
  unint64_t result = qword_10030FB50;
  if (!qword_10030FB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FB50);
  }
  return result;
}

uint64_t sub_1000D049C()
{
  return v0;
}

uint64_t sub_1000D04B4()
{
  return sub_10024F940();
}

uint64_t sub_1000D04D0()
{
  return v0;
}

void _NIOEventLoopFutureIdentifier.hash(into:)(uint64_t a1, Swift::UInt a2)
{
}

uint64_t sub_1000D0510()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D058C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 6:
      sub_1000DD790();
      break;
    case 7:
      sub_1000DD0E4();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D06E0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1000DD790();
      break;
    case 2:
      sub_1000DD454();
      break;
    case 3:
      sub_1000DD278();
      break;
    case 4:
      sub_1000DD744();
      break;
    case 5:
      sub_1000DD9C0();
      break;
    case 6:
      sub_1000DD414();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0798(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100087FF8);
}

uint64_t sub_1000D07B0()
{
  return sub_1000DD508();
}

uint64_t sub_1000D07C0(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1001B4784);
}

uint64_t sub_1000D07D8(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 4:
    case 5:
      sub_1000DD97C();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0908()
{
  return sub_1000DD110();
}

uint64_t sub_1000D0914(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1001503D4);
}

uint64_t sub_1000D092C()
{
  return sub_10024E780();
}

uint64_t sub_1000D0940()
{
  return sub_1000DD110();
}

uint64_t sub_1000D0950(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100093A3C);
}

uint64_t sub_1000D0968(uint64_t a1, char a2)
{
  if (a2) {
    sub_1000DD4D0();
  }
  else {
    sub_1000DD230();
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D09DC()
{
  sub_1000DD0CC();
  switch(v0)
  {
    case 1:
      sub_1000DD75C();
      break;
    case 2:
      sub_1000DD0B4();
      break;
    case 3:
      sub_1000DCFFC();
      break;
    case 4:
      sub_1000DD388();
      break;
    case 6:
    case 7:
      sub_1000DD064();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0AC0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1000DD368();
      break;
    case 3:
      sub_1000DD20C();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0B8C()
{
  sub_1000DD0CC();
  switch(v0)
  {
    case 1:
      sub_1000DD0B4();
      break;
    case 2:
      sub_1000DCFFC();
      break;
    case 3:
      sub_1000DD0E4();
      break;
    case 4:
      sub_1000DD75C();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0C38()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0C98()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0D84()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0DE8()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0E50(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1000DD064();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D0F7C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1000DD0E4();
      break;
    case 4:
      sub_1000DD488();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D105C(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100062AE8);
}

uint64_t sub_1000D1074(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 3:
      sub_1000DD488();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1120()
{
  return sub_10024E780();
}

uint64_t sub_1000D1130()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1198()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D11D8()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1240()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D12C4()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1324(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 4:
      sub_1000DD064();
      break;
    case 5:
      sub_1000DD0E4();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D145C()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D14D8()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1598()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D161C()
{
  return sub_1000DD518();
}

uint64_t sub_1000D163C()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D16AC()
{
  sub_1000DD368();
  switch(v0)
  {
    case 2:
      sub_1000DD20C();
      break;
    case 4:
    case 5:
    case 6:
      sub_1000DD064();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D17BC()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1834()
{
  sub_1000DD790();
  switch(v0)
  {
    case 1:
      sub_1000DD454();
      break;
    case 4:
      sub_1000DD9C0();
      break;
    case 5:
      sub_1000DD414();
      break;
    case 8:
      sub_1000DD744();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1958(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1000E5EBC);
}

uint64_t sub_1000D1970()
{
  return sub_10024E780();
}

uint64_t sub_1000D1988()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D19F4(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1000DD4EC();
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1A84()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1B00(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100156BF0);
}

uint64_t sub_1000D1B18(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100152BBC);
}

uint64_t sub_1000D1B30()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1B90(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1000DD8BC();
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1C14()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1C78()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

void sub_1000D1CE0()
{
}

uint64_t sub_1000D1D08(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1001CC5F8);
}

uint64_t sub_1000D1D20(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1000DD34C();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1DE0(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1001B0324);
}

uint64_t sub_1000D1DF8(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
      sub_1000DD9FC();
      break;
    case 3:
      sub_1000DD064();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1EAC()
{
  sub_1000DD904();
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1F14()
{
  sub_1000DD0CC();
  switch(v0)
  {
    case 1:
      sub_1000DCFFC();
      break;
    case 2:
      sub_1000DD0B4();
      break;
    case 3:
      sub_1000DD388();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

void sub_1000D1FA4()
{
  sub_1000DDA24();
  sub_10024FC20(v0 + 10);
}

void sub_1000D1FCC()
{
  sub_1000DDA24();
  sub_10024FC20(v0 + 1000);
}

uint64_t sub_1000D1FF4(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1001F9D3C);
}

uint64_t sub_1000D200C()
{
  return sub_1000DD110();
}

uint64_t sub_1000D2018(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_10017A79C);
}

uint64_t sub_1000D2030()
{
  sub_1000DD0CC();
  switch(v0)
  {
    case 1:
      sub_1000DCFFC();
      break;
    case 2:
      sub_1000DD0B4();
      break;
    case 3:
      sub_1000DD0E4();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D20B8(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1000DD064();
      break;
    case 3:
      sub_1000DD9FC();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D218C()
{
  return sub_10024E780();
}

uint64_t sub_1000D21AC(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1000DD34C();
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

void sub_1000D2218(uint64_t a1, Swift::UInt32 a2)
{
}

uint64_t sub_1000D2238(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1000DD9E8();
      break;
    case 2:
    case 3:
      sub_1000DD064();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D22FC(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_1000CBEC4);
}

uint64_t sub_1000D2314()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D240C()
{
  sub_1000DD34C();
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

void sub_1000D24C4(uint64_t a1, char a2)
{
}

void sub_1000D24F8()
{
  sub_1000DDA24();
  sub_10024FC20(v0 - 1);
}

void sub_1000D2520()
{
  sub_1000DDA24();
  sub_10024FC20(v0 + 1);
}

uint64_t sub_1000D2548(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100147644);
}

uint64_t sub_1000D2560()
{
  return sub_1000DD508();
}

uint64_t sub_1000D2570()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D25D0()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D2634(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1000DD9E8();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D26F8(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1000DD8A8();
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D277C(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_100098EB0);
}

uint64_t sub_1000D2794()
{
  return sub_10024E780();
}

uint64_t sub_1000D27B0()
{
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D2834(uint64_t a1, uint64_t a2)
{
  return sub_1000D284C(a1, a2, (void (*)(uint64_t))sub_10001D594);
}

uint64_t sub_1000D284C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_1000DD7D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D2890()
{
  sub_1000DD454();
  switch(v0)
  {
    case 1:
      sub_1000DD278();
      break;
    default:
      break;
  }
  sub_10024E780();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D293C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  HTTPMethod.rawValue.getter(a2, a3);
  sub_1000DD7D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D2980()
{
  return sub_1000DD518();
}

Swift::Int sub_1000D29A4(uint64_t a1, Swift::UInt a2)
{
  return sub_10024FC70();
}

Swift::Int sub_1000D29E8()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2A68(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_10020FD7C);
}

Swift::Int sub_1000D2A80(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000F73D4);
}

Swift::Int sub_1000D2A98(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100087FF8);
}

Swift::Int sub_1000D2AB0()
{
  return sub_1000DD510();
}

Swift::Int sub_1000D2AC0(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001B4784);
}

Swift::Int sub_1000D2AD8(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001B4AF4);
}

Swift::Int sub_1000D2AF0()
{
  return sub_1000DD118();
}

Swift::Int sub_1000D2AFC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001503D4);
}

Swift::Int sub_1000D2B14()
{
  return sub_1000D3E38();
}

Swift::Int sub_1000D2B28()
{
  return sub_1000DD118();
}

Swift::Int sub_1000D2B34(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001878C0);
}

Swift::Int sub_1000D2B4C(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100093A3C);
}

Swift::Int sub_1000D2B64()
{
  sub_1000DCF40();
  if (v0) {
    sub_1000DD4D0();
  }
  else {
    sub_1000DD230();
  }
  sub_1000DCF58();
  swift_bridgeObjectRelease();
  return sub_10024FC70();
}

Swift::Int sub_1000D2BDC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000C5C38);
}

Swift::Int sub_1000D2BF4(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_10016C4D8);
}

Swift::Int sub_1000D2C0C(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001A4744);
}

Swift::Int sub_1000D2C24()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2C88(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100213DA0);
}

Swift::Int sub_1000D2CA0()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2D08()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2D74(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000CCAF4);
}

Swift::Int sub_1000D2D8C(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100052014);
}

Swift::Int sub_1000D2DA4(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100062AE8);
}

Swift::Int sub_1000D2DBC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001EEF4C);
}

Swift::Int sub_1000D2DD4()
{
  return sub_1000D3E38();
}

Swift::Int sub_1000D2DE4()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2E50()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2EA4()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2F10()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2F98()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D2FFC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000FCEC8);
}

Swift::Int sub_1000D3018()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3098(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D14D8);
}

Swift::Int sub_1000D30B0()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3138()
{
  return sub_1000DD520();
}

Swift::Int sub_1000D3158()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D31CC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_10002628C);
}

Swift::Int sub_1000D31E4()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3260(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000E44E0);
}

Swift::Int sub_1000D3278(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000E5EBC);
}

Swift::Int sub_1000D3290()
{
  return sub_1000D3E38();
}

Swift::Int sub_1000D32AC()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D331C()
{
  sub_1000DCF40();
  if (!v0) {
    sub_1000DD4EC();
  }
  sub_1000DCF58();
  swift_bridgeObjectRelease();
  return sub_10024FC70();
}

Swift::Int sub_1000D33B0()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3430(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100156BF0);
}

Swift::Int sub_1000D3448(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100152BBC);
}

Swift::Int sub_1000D3460()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D34C4()
{
  sub_1000DCF40();
  if (!v0) {
    sub_1000DD8BC();
  }
  sub_1000DCF58();
  swift_bridgeObjectRelease();
  return sub_10024FC70();
}

Swift::Int sub_1000D354C()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D35B4()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3620()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3660(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001CC5F8);
}

Swift::Int sub_1000D3678(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D1D20);
}

Swift::Int sub_1000D3690(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001B0324);
}

Swift::Int sub_1000D36AC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D1DF8);
}

Swift::Int sub_1000D36C4()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3730(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_10005C8FC);
}

Swift::Int sub_1000D3748()
{
  sub_1000DCF40();
  sub_10024FC20(v0 + 10);
  return sub_10024FC70();
}

Swift::Int sub_1000D3788()
{
  sub_1000DCF40();
  sub_10024FC20(v0 + 1000);
  return sub_10024FC70();
}

Swift::Int sub_1000D37C8(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1001F9D3C);
}

Swift::Int sub_1000D37E0()
{
  return sub_1000DD118();
}

Swift::Int sub_1000D37EC(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_10017A79C);
}

Swift::Int sub_1000D3804(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D2030);
}

Swift::Int sub_1000D381C(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D20B8);
}

Swift::Int sub_1000D3834()
{
  return sub_1000D3E38();
}

Swift::Int sub_1000D3854()
{
  sub_1000DCF40();
  if (!v0) {
    sub_1000DD34C();
  }
  sub_1000DCF58();
  swift_bridgeObjectRelease();
  return sub_10024FC70();
}

Swift::Int sub_1000D38C8()
{
  sub_1000DCF40();
  sub_10024FC50(v0);
  return sub_10024FC70();
}

Swift::Int sub_1000D3904(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D2238);
}

Swift::Int sub_1000D391C(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_1000CBEC4);
}

Swift::Int sub_1000D3934(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100111C34);
}

Swift::Int sub_1000D394C(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D240C);
}

Swift::Int sub_1000D3964()
{
  sub_1000DCF40();
  sub_10024FC20(v0);
  return sub_10024FC70();
}

Swift::Int sub_1000D39A0()
{
  sub_1000DCF40();
  sub_10024FC20(qword_10025EE80[v0]);
  return sub_10024FC70();
}

Swift::Int sub_1000D39E8()
{
  sub_1000DCF40();
  sub_10024FC20(v0 - 1);
  return sub_10024FC70();
}

Swift::Int sub_1000D3A28()
{
  sub_1000DCF40();
  sub_10024FC20(v0 + 1);
  return sub_10024FC70();
}

Swift::Int sub_1000D3A68(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100147644);
}

Swift::Int sub_1000D3A80()
{
  sub_1000DCF40();
  sub_10024FC20(v0 & 1);
  return sub_10024FC70();
}

Swift::Int sub_1000D3ABC()
{
  return sub_1000DD510();
}

Swift::Int sub_1000D3ACC()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3B30()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3B98(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D2634);
}

Swift::Int sub_1000D3BB0()
{
  sub_1000DCF40();
  if (!v0) {
    sub_1000DD8A8();
  }
  sub_1000DCF58();
  swift_bridgeObjectRelease();
  return sub_10024FC70();
}

Swift::Int sub_1000D3C38(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_100098EB0);
}

Swift::Int sub_1000D3C50()
{
  return sub_1000D3E38();
}

Swift::Int sub_1000D3C6C()
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3CF4(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D0C(a1, a2, (void (*)(uint64_t))sub_10001D594);
}

Swift::Int sub_1000D3D0C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3D60(uint64_t a1, uint64_t a2)
{
  return sub_1000D3D78(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D2890);
}

Swift::Int sub_1000D3D78(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_10024FC00();
  a3(v6, a2);
  return sub_10024FC70();
}

Swift::Int sub_1000D3DC4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10024FC70();
}

Swift::Int sub_1000D3E18()
{
  return sub_1000DD520();
}

Swift::Int sub_1000D3E38()
{
  return sub_10024FC70();
}

BOOL sub_1000D3E84(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_10024FC00();
  sub_10024FC20(v3);
  Swift::Int v4 = sub_10024FC70();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1000D3F74(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (Swift::Int v4 = sub_1000D30B0(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(a2 + 48) + v6))
      {
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6) == 1)
        {
          unint64_t v8 = 0xE800000000000000;
          uint64_t v9 = 0x676E697473697865;
        }
        else
        {
          unint64_t v8 = 0xE700000000000000;
          uint64_t v9 = 0x64657269707865;
        }
      }
      else
      {
        unint64_t v8 = 0xE300000000000000;
        uint64_t v9 = 7824750;
      }
      if (a1)
      {
        uint64_t v10 = a1 == 1 ? 0x676E697473697865 : 0x64657269707865;
        unint64_t v11 = a1 == 1 ? 0xE800000000000000 : 0xE700000000000000;
      }
      else
      {
        unint64_t v11 = 0xE300000000000000;
        uint64_t v10 = 7824750;
      }
      if (v9 == v10 && v8 == v11) {
        break;
      }
      char v13 = sub_10024FA60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v13 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

void sub_1000D4104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_10024FC00();
    sub_10024E780();
    Swift::Int v6 = sub_10024FC70();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_1000DD3A8();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_10024FA60() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1000DD3A8();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_10024FA60()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1000DD3A8();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_1000D4218()
{
  return sub_1000D92CC(17) & 1;
}

uint64_t sub_1000D4238()
{
  uint64_t v0 = sub_1000D9484(27);
  if (v0 == 1) {
    unsigned int v2 = 1;
  }
  else {
    unsigned int v2 = 2;
  }
  if (!v0) {
    unsigned int v2 = 0;
  }
  if (v1) {
    return 2;
  }
  else {
    return v2;
  }
}

uint64_t sub_1000D427C()
{
  return sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
}

uint64_t sub_1000D428C()
{
  return sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___bundleID, 2);
}

uint64_t sub_1000D429C(void *a1, char a2)
{
  Swift::UInt v3 = (uint64_t *)(v2 + *a1);
  if (!v3[1])
  {
    uint64_t v4 = sub_1000D939C(a2);
    if (v5) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 0;
    }
    if (v5) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xE000000000000000;
    }
    *Swift::UInt v3 = v6;
    v3[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return sub_100094D44();
}

void sub_1000D4318()
{
  sub_10001B51C();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1000D939C(20);
  uint64_t v7 = v6;
  if (!v6)
  {
    uint64_t v1 = 0;
    uint64_t v19 = 0;
    uint64_t v17 = 0;
    uint64_t v2 = 0;
    uint64_t v0 = 0;
    uint64_t v18 = 0;
    uint64_t v9 = 0;
LABEL_15:
    uint64_t v20 = 0;
    uint64_t v13 = 0;
    goto LABEL_19;
  }
  uint64_t v8 = v5;
  if (qword_100308D78 != -1)
  {
    uint64_t v21 = v6;
    swift_once();
    uint64_t v7 = v21;
  }
  uint64_t v9 = *(void *)(qword_10034C0A0 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    sub_1000DD32C();
    goto LABEL_15;
  }
  uint64_t v23 = v4;
  uint64_t v10 = (uint64_t *)(qword_10034C0A0 + 56);
  while (1)
  {
    uint64_t v1 = *(v10 - 3);
    uint64_t v2 = *(v10 - 2);
    uint64_t v11 = *v10;
    uint64_t v0 = v10[2];
    uint64_t v26 = v10[1];
    uint64_t v27 = *(v10 - 1);
    uint64_t v12 = v10[4];
    uint64_t v13 = v10[6];
    uint64_t v24 = v10[5];
    uint64_t v25 = v10[3];
    if (v1 == v8 && v7 == v2)
    {
      uint64_t v22 = v7;
      uint64_t v1 = v8;
      uint64_t v4 = v23;
      goto LABEL_18;
    }
    uint64_t v15 = v8;
    uint64_t v16 = v7;
    if (sub_10024FA60()) {
      break;
    }
    v10 += 10;
    --v9;
    uint64_t v7 = v16;
    uint64_t v8 = v15;
    if (!v9)
    {
      swift_bridgeObjectRelease();
      sub_1000DD32C();
      uint64_t v20 = 0;
      uint64_t v13 = 0;
      uint64_t v4 = v23;
      goto LABEL_19;
    }
  }
  uint64_t v22 = v2;
  uint64_t v4 = v23;
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v2 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = v26;
  uint64_t v17 = v27;
  uint64_t v20 = v24;
  uint64_t v18 = v25;
  uint64_t v19 = v22;
LABEL_19:
  *uint64_t v4 = v1;
  v4[1] = v19;
  long long v4[2] = v17;
  v4[3] = v2;
  v4[4] = v7;
  v4[5] = v0;
  v4[6] = v18;
  v4[7] = v9;
  v4[8] = v20;
  v4[9] = v13;
  sub_10001B500();
}

void sub_1000D44D4()
{
  uint64_t v0 = sub_1000D9484(21);
  if ((v2 & 1) == 0) {
    sub_10024EFE0(v1, *(Swift::Double *)&v0);
  }
}

double sub_1000D453C()
{
  uint64_t v2 = sub_10024E030();
  sub_10001B550();
  uint64_t v4 = v3;
  __chkstk_darwin(v5, v6);
  sub_100062164();
  uint64_t v7 = (unsigned char *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___purchaseDate);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___purchaseDate + 8) & 1) == 0) {
    return *(double *)v7;
  }
  *(double *)&uint64_t v8 = COERCE_DOUBLE(sub_1000D9484(11));
  if (v9)
  {
    sub_10024E010();
    sub_10024DF70();
    double v10 = v11;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  }
  else
  {
    double v10 = *(double *)&v8;
  }
  *(double *)uint64_t v7 = v10;
  v7[8] = 0;
  return v10;
}

uint64_t sub_1000D4628(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1000D467C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v5 = *v3++;
      int v4 = v5;
      if ((v5 & ~v2) == 0) {
        int v4 = 0;
      }
      uint64_t v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1000D46D0(int a1, int a2)
{
  return a2 & ~a1;
}

uint64_t sub_1000D46D8(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t sub_1000D46E0(uint64_t result)
{
  *v1 &= ~(_BYTE)result;
  return result;
}

uint64_t sub_1000D46F0(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

uint64_t sub_1000D4700()
{
  sub_1000DD71C();
  uint64_t v186 = v1;
  uint64_t v187 = v3;
  uint64_t v4 = v0;
  uint64_t v5 = sub_10024E030();
  sub_10001B550();
  uint64_t v171 = v6;
  __chkstk_darwin(v7, v8);
  sub_1000589AC();
  v172 = v9;
  uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v11 = sub_100026018(v10);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v170 = (uint64_t)&v168 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v168 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)&v168 - v20;
  sub_100019524((uint64_t *)&unk_100318D40);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100257710;
  *(void *)(v22 + 32) = 0x6E6F69746361;
  *(void *)(v22 + 40) = 0xE600000000000000;
  sub_1000D627C();
  sub_1000DD954();
  switch(v25)
  {
    case 1:
      sub_1000DDA5C();
      break;
    case 2:
      sub_1000DD940();
      break;
    case 3:
      sub_1000DD7A0();
      break;
    default:
      break;
  }
  *(void *)(v22 + 48) = v24;
  *(void *)(v22 + 56) = v23;
  *(void *)(v22 + 72) = &type metadata for String;
  *(void *)(v22 + 80) = 25705;
  *(void *)(v22 + 88) = 0xE200000000000000;
  *(void *)(v22 + 96) = sub_1000D5AE4();
  *(void *)(v22 + 120) = &type metadata for UInt;
  *(void *)(v22 + 128) = 0x64656873696E6966;
  *(void *)(v22 + 136) = 0xE800000000000000;
  *(unsigned char *)(v22 + 144) = sub_1000D640C() & 1;
  sub_1000DD8F0();
  *(void *)(v22 + 168) = v27;
  *(void *)(v22 + 176) = v26;
  *(void *)(v22 + 184) = 0xE900000000000044;
  *(void *)(v22 + 192) = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
  *(void *)(v22 + 200) = v28;
  sub_1000DD8D0();
  *(void *)(v22 + 216) = &type metadata for String;
  *(void *)(v22 + 224) = v29;
  *(void *)(v22 + 232) = 0xEC00000065746144;
  *(double *)(v22 + 240) = sub_1000D453C();
  *(void *)(v22 + 264) = &type metadata for Double;
  *(void *)(v22 + 272) = 0x6574617473;
  *(void *)(v22 + 280) = 0xE500000000000000;
  *(void *)(v22 + 288) = sub_1000D847C();
  *(void *)(v22 + 312) = &type metadata for Int;
  *(void *)(v22 + 320) = 1701869940;
  *(void *)(v22 + 328) = 0xE400000000000000;
  char v30 = sub_1000D6528();
  uint64_t v31 = 0x62616D75736E6F43;
  unint64_t v32 = 0xEA0000000000656CLL;
  switch(v30)
  {
    case 1:
      uint64_t v31 = 0x75736E6F436E6F4ELL;
      unint64_t v32 = 0xED0000656C62616DLL;
      break;
    case 2:
      sub_1000DD35C();
      uint64_t v31 = v33 + 4;
      unint64_t v34 = (unint64_t)"Consumable";
      goto LABEL_9;
    case 3:
      sub_1000DD35C();
      uint64_t v31 = v35 + 2;
      unint64_t v34 = v36 - 32;
LABEL_9:
      unint64_t v32 = v34 | 0x8000000000000000;
      break;
    default:
      break;
  }
  *(void *)(v22 + 336) = v31;
  *(void *)(v22 + 344) = v32;
  sub_1000DD35C();
  *(void *)(v22 + 360) = &type metadata for String;
  *(void *)(v22 + 368) = v37 - 3;
  uint64_t v169 = v37 - 3;
  sub_1000DCFA4();
  *(void *)(v22 + 376) = v38;
  *(unsigned char *)(v22 + 384) = sub_1000D6704() & 1;
  sub_1000DD894();
  *(void *)(v22 + 408) = &type metadata for Bool;
  *(void *)(v22 + 416) = v39;
  *(void *)(v22 + 424) = 0xE900000000000064;
  *(unsigned char *)(v22 + 432) = sub_1000D4218() & 1;
  sub_1000DDA48();
  *(void *)(v22 + 456) = &type metadata for Bool;
  *(void *)(v22 + 464) = v40;
  *(void *)(v22 + 472) = 0xE800000000000000;
  uint64_t v41 = sub_1000D64FC();
  *(void *)(v22 + 504) = &type metadata for Int;
  *(void *)(v22 + 480) = v41;
  uint64_t v178 = sub_10024E510();
  unsigned __int8 v42 = sub_1000D62B4();
  if (v42 != 3)
  {
    *((void *)&v182 + 1) = &type metadata for Int;
    *(void *)&long long v181 = v42 - 1;
    uint64_t v43 = sub_1000DD2FC();
    sub_10020554C(v43, 0x7975426F546B7361, 0xEE00737574617453);
  }
  uint64_t v44 = sub_1000D9484(8);
  if ((v45 & 1) == 0)
  {
    *((void *)&v182 + 1) = &type metadata for UInt;
    *(void *)&long long v181 = v44;
    uint64_t v46 = sub_1000DD2FC();
    sub_10020554C(v46, 0x6C616E696769726FLL, 0xEA00000000004449);
  }
  uint64_t v47 = sub_1000D9484(12);
  if ((v48 & 1) == 0)
  {
    *((void *)&v182 + 1) = &type metadata for Double;
    *(void *)&long long v181 = v47;
    sub_1000DD35C();
    sub_1000DD120(v49 + 1, (uint64_t)"originalPurchaseDate");
  }
  uint64_t v173 = OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___type;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___type))
  {
    case 1:
      sub_1000ACA44();
      goto LABEL_19;
    case 2:
      sub_1000DD590();
      goto LABEL_19;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    default:
LABEL_19:
      sub_1000DD5DC();
      char v50 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v50)
      {
LABEL_22:
        uint64_t v51 = sub_1000D9484(4);
        if ((v52 & 1) == 0)
        {
          *((void *)&v182 + 1) = &type metadata for Double;
          *(void *)&long long v181 = v51;
          uint64_t v53 = sub_1000DD2FC();
          sub_10020554C(v53, 0x6974617269707865, 0xEE00657461446E6FLL);
        }
        uint64_t v54 = sub_1000D939C(15);
        uint64_t v56 = v171;
        if (v55)
        {
          *((void *)&v182 + 1) = &type metadata for String;
          *(void *)&long long v181 = v54;
          *((void *)&v181 + 1) = v55;
        }
        else
        {
          long long v181 = 0u;
          long long v182 = 0u;
        }
        sub_1000DD018((uint64_t)"subscriptionGroupID");
        char v57 = sub_1000DA070();
        *((void *)&v182 + 1) = &type metadata for Bool;
        LOBYTE(v181) = v57 & 1;
        uint64_t v58 = sub_1000DD2FC();
        sub_10020554C(v58, 0x6461726770557369, v59);
        sub_1000D797C(29, (uint64_t)v21);
        if (sub_10001FA0C((uint64_t)v21, 1, v5))
        {
          sub_1000DC380((uint64_t)v21, (uint64_t *)&unk_10030FD70);
          sub_1000DD734();
        }
        else
        {
          uint64_t v60 = sub_1000DD254();
          v61(v60);
          sub_1000DC380((uint64_t)v21, (uint64_t *)&unk_10030FD70);
          sub_10024DF70();
          uint64_t v62 = sub_1000DD468();
          v63(v62);
          *((void *)&v182 + 1) = &type metadata for Double;
        }
        *(void *)&long long v181 = v2;
        sub_1000DD120(0xD000000000000015, (uint64_t)"gracePeriodExpiration");
        sub_1000D797C(30, (uint64_t)v18);
        if (sub_10001FA0C((uint64_t)v18, 1, v5))
        {
          sub_1000DC380((uint64_t)v18, (uint64_t *)&unk_10030FD70);
          sub_1000DD734();
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v56 + 16))(v172, v18, v5);
          sub_1000DC380((uint64_t)v18, (uint64_t *)&unk_10030FD70);
          sub_10024DF70();
          uint64_t v64 = sub_1000DD468();
          v65(v64);
          *((void *)&v182 + 1) = &type metadata for Double;
        }
        *(void *)&long long v181 = v2;
        uint64_t v66 = sub_1000DD2FC();
        sub_10020554C(v66, 0x52676E696C6C6962, 0xEF646E4579727465);
        uint64_t v67 = sub_1000D55F8();
        switch(v67)
        {
          case 1:
            uint64_t v67 = 1;
            goto LABEL_38;
          case 2:
            uint64_t v67 = 2;
            goto LABEL_38;
          case 3:
            uint64_t v67 = 10;
            goto LABEL_38;
          case 4:
            uint64_t v67 = 11;
            goto LABEL_38;
          case 5:
            long long v181 = 0u;
            long long v182 = 0u;
            goto LABEL_39;
          default:
LABEL_38:
            *((void *)&v182 + 1) = &type metadata for Int;
            *(void *)&long long v181 = v67;
LABEL_39:
            sub_1000DD018((uint64_t)"priceIncreaseStatus");
            uint64_t v68 = sub_1000D9484(25);
            if (v69)
            {
              uint64_t v68 = 0;
              *((void *)&v181 + 1) = 0;
              long long v182 = 0uLL;
            }
            else
            {
              *((void *)&v182 + 1) = &type metadata for UInt;
            }
            *(void *)&long long v181 = v68;
            sub_1000DD35C();
            sub_1000DD120(v70 - 1, (uint64_t)"webOrderLineItemID");
            uint64_t v71 = v170;
            sub_1000D797C(33, v170);
            if (sub_10001FA0C(v71, 1, v5))
            {
              sub_1000DC380(v71, (uint64_t *)&unk_10030FD70);
              sub_1000DD734();
            }
            else
            {
              uint64_t v72 = sub_1000DD254();
              v73(v72);
              sub_1000DC380(v71, (uint64_t *)&unk_10030FD70);
              sub_10024DF70();
              uint64_t v2 = v74;
              (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v0, v5);
              *((void *)&v182 + 1) = &type metadata for Double;
            }
            *(void *)&long long v181 = v2;
            sub_1000DD35C();
            sub_1000DD120(v75 + 8, (uint64_t)"recentSubscriptionStartDate");
            break;
        }
      }
      uint64_t v76 = sub_1000D9484(3);
      if ((v77 & 1) == 0)
      {
        *((void *)&v182 + 1) = &type metadata for Double;
        *(void *)&long long v181 = v76;
        uint64_t v78 = sub_1000DD2FC();
        sub_10020554C(v78, 0x61446C65636E6163, v79);
        unsigned __int8 v80 = sub_1000D4238();
        if (v80 == 2)
        {
          long long v181 = 0u;
          long long v182 = 0u;
        }
        else
        {
          *((void *)&v182 + 1) = &type metadata for Int;
          *(void *)&long long v181 = v80;
        }
        uint64_t v81 = sub_1000DD2FC();
        sub_10020554C(v81, v169, v82);
      }
      char v83 = sub_1000D9674();
      if (v83 != 22)
      {
        unint64_t v84 = sub_100098C3C(v83);
        *((void *)&v182 + 1) = &type metadata for String;
        *(void *)&long long v181 = v84;
        *((void *)&v181 + 1) = v85;
        sub_1000DD018((uint64_t)"offerSignatureError");
      }
      uint64_t v86 = sub_1000D6E60();
      if (v86)
      {
        uint64_t v87 = v86;
        uint64_t v88 = v86[2];
        if (v88)
        {
          v180[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_1000389BC();
          v172 = v87;
          unint64_t v89 = (unsigned __int8 *)(v87 + 8);
          uint64_t v90 = (void *)v180[0];
          do
          {
            uint64_t v92 = *((void *)v89 - 4);
            uint64_t v91 = *((void *)v89 - 3);
            uint64_t v94 = *((void *)v89 - 2);
            uint64_t v93 = *((void *)v89 - 1);
            int v95 = *v89;
            v89 += 40;
            switch(v95)
            {
              case 1:
                sub_1000DD684();
                *(void *)&long long v181 = v106;
                uint64_t v107 = sub_1000DCFE4(0xE600000000000000);
                sub_1000AC290(v107, v108, v109, v110, 1u);
                sub_1000DD164();
                sub_1000ACC1C();
                sub_1000DD694();
                uint64_t v101 = v92;
                uint64_t v102 = v91;
                uint64_t v103 = v94;
                uint64_t v104 = v93;
                unsigned __int8 v105 = 1;
                break;
              case 2:
                sub_1000DD674();
                *(void *)&long long v181 = v111;
                uint64_t v112 = sub_1000DCFE4(0xE500000000000000);
                sub_1000AC290(v112, v113, v114, v115, 2u);
                sub_1000DD164();
                sub_1000ACC1C();
                sub_1000DD694();
                uint64_t v101 = v92;
                uint64_t v102 = v91;
                uint64_t v103 = v94;
                uint64_t v104 = v93;
                unsigned __int8 v105 = 2;
                break;
              case 3:
                sub_1000AD01C();
                *(void *)&long long v181 = v116;
                uint64_t v117 = sub_1000DCFE4(0xE800000000000000);
                sub_1000AC290(v117, v118, v119, v120, 3u);
                sub_1000DD164();
                sub_1000ACC1C();
                sub_1000DD694();
                uint64_t v101 = v92;
                uint64_t v102 = v91;
                uint64_t v103 = v94;
                uint64_t v104 = v93;
                unsigned __int8 v105 = 3;
                break;
              case 4:
                *(void *)&long long v181 = 979661939;
                uint64_t v121 = sub_1000DCFE4(0xE400000000000000);
                sub_1000AC290(v121, v122, v123, v124, 4u);
                sub_1000DD164();
                uint64_t v101 = v92;
                uint64_t v102 = v91;
                uint64_t v103 = v94;
                uint64_t v104 = v93;
                unsigned __int8 v105 = 4;
                break;
              default:
                sub_1000DD6CC();
                *(void *)&long long v181 = v96;
                uint64_t v97 = sub_1000DCFE4(0xE600000000000000);
                sub_1000AC290(v97, v98, v99, v100, 0);
                sub_1000DD164();
                uint64_t v101 = v92;
                uint64_t v102 = v91;
                uint64_t v103 = v94;
                uint64_t v104 = v93;
                unsigned __int8 v105 = 0;
                break;
            }
            sub_1000AC2FC(v101, v102, v103, v104, v105);
            long long v125 = v181;
            v180[0] = (uint64_t)v90;
            unint64_t v126 = v90[2];
            if (v126 >= v90[3] >> 1)
            {
              sub_1000389BC();
              uint64_t v90 = (void *)v180[0];
            }
            v90[2] = v126 + 1;
            *(_OWORD *)&v90[2 * v126 + 4] = v125;
            --v88;
          }
          while (v88);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v90 = _swiftEmptyArrayStorage;
        }
        *((void *)&v182 + 1) = sub_100019524(&qword_100309410);
        *(void *)&long long v181 = v90;
        uint64_t v127 = sub_1000DD308();
        sub_10020554C(v127, v129, v128 | 0xEE00734400000000);
      }
      uint64_t v130 = (uint64_t)sub_1000D563C();
      if (v131)
      {
        *((void *)&v182 + 1) = &type metadata for String;
        *(void *)&long long v181 = v130;
        *((void *)&v181 + 1) = v131;
        uint64_t v132 = sub_1000DD308();
        uint64_t v130 = sub_10020554C(v132, v134, v133 | 0xED00004400000000);
      }
      sub_1000D96B0(v179, v130);
      sub_1000DBF98((uint64_t)v179, (uint64_t)v183, &qword_10030FC28);
      if (v184 != 255)
      {
        sub_1000CE8A4(v183, (uint64_t)&v185);
        uint64_t v135 = sub_1000D9C38();
        uint64_t v137 = v136;
        sub_1000DC340((uint64_t)v179, (void (*)(void, void, void, void, void))sub_1000DC32C);
        *((void *)&v182 + 1) = &type metadata for String;
        *(void *)&long long v181 = v135;
        *((void *)&v181 + 1) = v137;
        uint64_t v138 = sub_1000DD2FC();
        sub_10020554C(v138, 0x4449726566666FLL, 0xE700000000000000);
      }
      switch(*(unsigned char *)(v4 + v173))
      {
        case 1:
          sub_1000DD9AC();
          goto LABEL_74;
        case 3:
          swift_bridgeObjectRelease();
          goto LABEL_77;
        default:
LABEL_74:
          sub_1000DD5DC();
          char v139 = sub_10024FA60();
          swift_bridgeObjectRelease();
          if ((v139 & 1) == 0) {
            goto LABEL_87;
          }
LABEL_77:
          uint64_t v140 = sub_1000D563C();
          uint64_t v142 = v141;
          uint64_t v143 = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
          if (v142)
          {
            if (v140 == (void *)v143 && v142 == v144) {
              char v146 = 1;
            }
            else {
              char v146 = sub_10024FA60();
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            char v146 = 0;
          }
          swift_bridgeObjectRelease();
          *((void *)&v182 + 1) = &type metadata for Bool;
          LOBYTE(v181) = v146 & 1;
          sub_1000DD018((uint64_t)"autoRenewingEnabled");
LABEL_87:
          sub_1000D4318();
          sub_1000DBF98((uint64_t)v180, (uint64_t)&v181, &qword_100309EA0);
          if (*((void *)&v181 + 1))
          {
            uint64_t v177 = &type metadata for String;
            long long v174 = v181;
            swift_bridgeObjectRetain();
            uint64_t v147 = sub_1000DDA10();
            sub_10020554C(v147, v148, v149);
            sub_1000DC3D8(v180);
          }
          sub_1000D44D4();
          if ((v152 & 0x100000000) == 0)
          {
            int v153 = v150;
            __int16 v154 = v151;
            __int16 v155 = v152;
            unint64_t v156 = HIDWORD(v150);
            unint64_t v157 = HIWORD(v150);
            unint64_t v158 = v151 >> 16;
            unint64_t v159 = HIDWORD(v151);
            unint64_t v160 = HIWORD(v151);
            uint64_t v173 = v4;
            unint64_t v161 = v152 >> 16;
            type metadata accessor for Decimal(0);
            uint64_t v177 = v162;
            LODWORD(v174) = v153;
            WORD2(v174) = v156;
            WORD3(v174) = v157;
            WORD4(v174) = v154;
            WORD5(v174) = v158;
            WORD6(v174) = v159;
            HIWORD(v174) = v160;
            __int16 v175 = v155;
            __int16 v176 = v161;
            sub_10020554C((uint64_t)&v174, 0x6563697270, 0xE500000000000000);
          }
          char v163 = sub_1000D6DB0();
          uint64_t v164 = 3157553;
          if (v163) {
            uint64_t v164 = 3157554;
          }
          uint64_t v177 = &type metadata for String;
          *(void *)&long long v174 = v164;
          *((void *)&v174 + 1) = 0xE300000000000000;
          uint64_t v165 = sub_1000DDA10();
          sub_10020554C(v165, 0xD000000000000013, v166);
          return v178;
      }
  }
}

uint64_t sub_1000D55F8()
{
  unint64_t v0 = sub_1000D9484(32);
  if (v1) {
    return 5;
  }
  return sub_1000D887C(v0);
}

void *sub_1000D563C()
{
  BOOL result = sub_1000D6E60();
  if (result)
  {
    sub_1000D8628((uint64_t)result, (uint64_t)v9);
    uint64_t v1 = swift_bridgeObjectRelease();
    sub_1000DD550(v1, v2, &qword_10030FC28, v3, v4, v5, v6, v7, v9[0], v9[1], v9[2], v9[3], v9[4], v10);
    sub_1000DD544();
    if (!v8)
    {
      sub_1000CE8A4(&v10, (uint64_t)v11);
      sub_1000CE8A4(v11, (uint64_t)&v12);
      if (v13 == 4) {
        return (void *)v12;
      }
      sub_1000DC340((uint64_t)v9, (void (*)(void, void, void, void, void))sub_1000DC32C);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1000D56E0()
{
  uint64_t v1 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v2 = sub_100026018(v1);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10024E030();
  sub_10001B550();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  sub_1000DD1B8();
  if (sub_1000D5828())
  {
    sub_1000D797C(29, (uint64_t)v5);
    if (sub_10001FA0C((uint64_t)v5, 1, v6) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v0, v5, v6);
      char v11 = sub_10024DFD0();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
      return v11 & 1;
    }
    sub_1000DC380((uint64_t)v5, (uint64_t *)&unk_10030FD70);
  }
  char v11 = 0;
  return v11 & 1;
}

uint64_t sub_1000D5828()
{
  uint64_t v3 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v4 = sub_100026018(v3);
  __chkstk_darwin(v4, v5);
  uint64_t v6 = sub_1000DD568();
  sub_10001B550();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  sub_10003C744();
  __chkstk_darwin(v11, v12);
  sub_1000DD968();
  sub_1000D797C(30, v13);
  if (sub_10001FA0C(v0, 1, v6) == 1)
  {
    sub_1000DC380(v0, (uint64_t *)&unk_10030FD70);
    char v14 = 0;
  }
  else
  {
    uint64_t v15 = sub_1000DD528();
    v16(v15);
    sub_10024E010();
    char v14 = sub_10024DFD0();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v17(v1, v6);
    v17(v2, v6);
  }
  return v14 & 1;
}

uint64_t sub_1000D5964()
{
  sub_1000D6528();
  sub_1000ACA44();
  switch(v0)
  {
    case 1:
      goto LABEL_5;
    case 2:
      sub_1000DCF70();
      sub_1000DD590();
      goto LABEL_5;
    case 3:
      sub_1000DD590();
LABEL_5:
      char v1 = sub_1000DD3E8();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (v1) {
        return result;
      }
      if (qword_100308D10 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_10030FB58;
      unsigned __int8 v4 = sub_1000D847C();
      if (sub_1000D3E84(v4, v3)
        && ((sub_10024DF70(), double v6 = v5, (sub_1000D4218() & 1) == 0)
         || (double v7 = COERCE_DOUBLE(sub_1000D9484(3)), (v8 & 1) != 0)
         || v6 <= v7)
        && ((double v9 = COERCE_DOUBLE(sub_1000D9484(4)), (v10 & 1) != 0) || v6 <= v9))
      {
        return 1;
      }
      else
      {
        return 0;
      }
    default:
      swift_bridgeObjectRelease();
      return 0;
  }
}

uint64_t sub_1000D5AE4()
{
  char v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___id);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___id + 8) != 1) {
    return *(void *)v1;
  }
  uint64_t result = sub_1000D9484(7);
  if (v3) {
    uint64_t result = 0;
  }
  *(void *)char v1 = result;
  v1[8] = 0;
  return result;
}

uint64_t sub_1000D5B40@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D797C(33, a1);
}

#error "1000D5BAC: call analysis failed (funcsize=45)"

uint64_t sub_1000D5C00(unsigned __int8 a1)
{
  uint64_t v2 = a1;
  switch(a1)
  {
    case 1u:
      uint64_t v2 = 1;
      goto LABEL_6;
    case 2u:
      uint64_t v2 = 2;
      goto LABEL_6;
    case 3u:
      uint64_t v2 = 10;
      goto LABEL_6;
    case 4u:
      uint64_t v2 = 11;
      goto LABEL_6;
    case 5u:
      sub_1000DD29C();
      goto LABEL_7;
    default:
LABEL_6:
      v5[3] = &type metadata for Int;
      v5[0] = v2;
LABEL_7:
      sub_1001E7578((uint64_t)v5, 32);
      uint64_t result = sub_1000DC380((uint64_t)v5, (uint64_t *)&unk_100319510);
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
      if ((v4 & 1) == 0) {
        *(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = v4 | 1;
      }
      return result;
  }
}

uint64_t sub_1000D5CC4(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

uint64_t sub_1000D5CD4(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_1000D5CF8(unsigned __int8 a1)
{
  char v2 = *v1;
  if ((*v1 & a1) != 0) {
    *uint64_t v1 = v2 & ~a1;
  }
  return sub_1000DD918((v2 & a1));
}

uint64_t sub_1000D5D24(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_1000D5D3C(char a1)
{
  char v2 = *v1;
  *v1 |= a1;
  return sub_1000DD918((v2 & a1));
}

uint64_t sub_1000D5D5C(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_1000D5D6C(uint64_t result)
{
  *v1 ^= result;
  return result;
}

BOOL sub_1000D5D7C(unsigned __int8 a1, unsigned __int8 a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1000D5D8C(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL EmbeddedChannel.LeftOverState.isClean.getter(uint64_t a1)
{
  return a1 == 0;
}

BOOL sub_1000D5DA4(char a1)
{
  return a1 == 0;
}

uint64_t sub_1000D5DB0()
{
  sub_1000DD954();
  switch(v2)
  {
    case 1:
      sub_1000DDA5C();
      break;
    case 2:
      sub_1000DD940();
      break;
    case 3:
      sub_1000DD7A0();
      break;
    default:
      break;
  }
  v4[3] = &type metadata for String;
  v4[0] = v1;
  v4[1] = v0;
  sub_1001E7578((uint64_t)v4, 0);
  return sub_1000DC380((uint64_t)v4, (uint64_t *)&unk_100319510);
}

void sub_1000D5E48(uint64_t a1, char a2)
{
}

void sub_1000D5E58(uint64_t a1, char a2)
{
}

void sub_1000D5E68(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    a1 = sub_1000DD664();
  }
  else {
    v5[3] = a3;
  }
  v5[0] = a1;
  sub_1001E7578((uint64_t)v5, a4);
  sub_1000DC380((uint64_t)v5, (uint64_t *)&unk_100319510);
  if ((*(void *)(v4 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) & 2) == 0) {
    sub_1000DD8E4(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  }
}

void sub_1000D5EC8(char a1)
{
  char v3 = &type metadata for Bool;
  v2[0] = a1;
  sub_1001E7578((uint64_t)v2, 24);
  sub_1000DC380((uint64_t)v2, (uint64_t *)&unk_100319510);
  if ((*(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) & 2) == 0) {
    sub_1000DD8E4(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  }
}

uint64_t sub_1000D5F24(char a1)
{
  uint64_t result = 7959874;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x77656E6552;
      break;
    case 2:
      uint64_t result = 0x6F6C6E776F646552;
      break;
    case 3:
      uint64_t result = 0x65646172677055;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D5FB0()
{
  sub_1000DD988();
  uint64_t v3 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v4 = sub_100026018(v3);
  __chkstk_darwin(v4, v5);
  sub_1000DD2A8(v6, v12);
  uint64_t v7 = sub_10024E030();
  if (sub_10001FA0C(v1, 1, v7) == 1)
  {
    sub_1000DC380(v1, (uint64_t *)&unk_10030FD70);
    long long v12 = 0u;
    long long v13 = 0u;
  }
  else
  {
    sub_10024DF70();
    *((void *)&v13 + 1) = &type metadata for Double;
    *(void *)&long long v12 = v8;
    sub_10007A8C4();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  sub_1001E7578((uint64_t)&v12, 33);
  sub_1000DC380((uint64_t)&v12, (uint64_t *)&unk_100319510);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  if ((v10 & 1) == 0) {
    *(void *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = v10 | 1;
  }
  return sub_1000DC380(v0, (uint64_t *)&unk_10030FD70);
}

uint64_t sub_1000D60E0(uint64_t a1, char a2)
{
  sub_1000D6528();
  sub_1000DD704();
  switch(v4)
  {
    case 1:
      sub_1000DD9AC();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      if (a2) {
        goto LABEL_8;
      }
      goto LABEL_6;
    default:
LABEL_4:
      char v5 = sub_1000DCFB0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5)
      {
        if (a2)
        {
LABEL_8:
          a1 = 0;
          v7[1] = 0;
          void v7[2] = 0;
          uint64_t v8 = 0;
        }
        else
        {
LABEL_6:
          uint64_t v8 = &type metadata for Int;
        }
        v7[0] = a1;
        sub_1001E7578((uint64_t)v7, 34);
        return sub_1000DC380((uint64_t)v7, (uint64_t *)&unk_100319510);
      }
      return result;
  }
}

void sub_1000D6204(uint64_t a1, char a2)
{
}

void sub_1000D6214(uint64_t a1, char a2)
{
}

void sub_1000D621C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    v2[3] = &type metadata for String;
    v2[0] = a1;
    v2[1] = a2;
  }
  else
  {
    sub_1000DD29C();
  }
  sub_1001E7578((uint64_t)v2, 15);
  sub_1000DC380((uint64_t)v2, (uint64_t *)&unk_100319510);
  sub_1000DD6DC(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
}

uint64_t sub_1000D627C()
{
  uint64_t v0 = sub_1000D939C(0);
  if (!v1) {
    return 0;
  }
  LODWORD(result) = sub_1000D8810(v0, v1);
  if (result == 4) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1000D62B4()
{
  uint64_t v0 = sub_1000D9484(1);
  if ((unint64_t)(v0 + 1) < 3) {
    unsigned int v2 = v0 + 1;
  }
  else {
    unsigned int v2 = 3;
  }
  if (v1) {
    return 3;
  }
  else {
    return v2;
  }
}

uint64_t sub_1000D62F0(unsigned __int8 a1)
{
  if (a1 == 3)
  {
    sub_1000DD29C();
  }
  else
  {
    v8[3] = &type metadata for Int;
    v8[0] = a1 - 1;
  }
  sub_1001E7578((uint64_t)v8, 1);
  sub_1000DC380((uint64_t)v8, (uint64_t *)&unk_100319510);
  uint64_t v2 = OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  if ((v3 & 2) == 0) {
    *(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = v3 | 2;
  }
  sub_1000D939C(15);
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v7 = *(void *)(v1 + v2);
    if ((v7 & 1) == 0) {
      *(void *)(v1 + v2) = v7 | 1;
    }
  }
  return result;
}

void sub_1000D63A4(unsigned __int8 a1)
{
  v2[3] = &type metadata for Int;
  v2[0] = a1;
  sub_1001E7578((uint64_t)v2, 14);
  sub_1000DC380((uint64_t)v2, (uint64_t *)&unk_100319510);
  if ((*(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) & 2) == 0) {
    sub_1000DD8E4(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  }
}

uint64_t sub_1000D6404(char a1)
{
  return sub_1000D66C0(a1, 5);
}

uint64_t sub_1000D640C()
{
  return sub_1000D92CC(5) & 1;
}

uint64_t sub_1000D642C()
{
  sub_1000D6528();
  sub_1000DCF80();
  switch(v1)
  {
    case 1:
      goto LABEL_5;
    case 2:
      sub_1000DCF70();
      sub_1000DD064();
      goto LABEL_5;
    case 3:
      sub_1000DD9D4();
LABEL_5:
      sub_1000DD3E8();
      sub_1000DD7B8();
      if (v0) {
        goto LABEL_6;
      }
      goto LABEL_8;
    default:
      swift_bridgeObjectRelease();
LABEL_6:
      if (sub_1000D640C()) {
        return 0;
      }
LABEL_8:
      return sub_1000D685C();
  }
}

uint64_t sub_1000D64FC()
{
  uint64_t result = sub_1000D9484(13);
  if (v1) {
    return 0;
  }
  return result;
}

uint64_t sub_1000D6528()
{
  uint64_t v1 = OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___type;
  uint64_t result = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___type);
  if (result == 4)
  {
    uint64_t result = sub_1000D9630();
    *(unsigned char *)(v0 + v1) = result;
  }
  return result;
}

BOOL sub_1000D6564(uint64_t a1)
{
  uint64_t v1 = sub_1000D96B0(v11, a1);
  sub_1000DD550((uint64_t)v1, v2, &qword_10030FC28, v3, v4, v5, v6, v7, v11[0], v11[1], v11[2], v11[3], v11[4], v12);
  sub_1000DD544();
  if (v8) {
    return 0;
  }
  sub_1000CE8A4(&v12, (uint64_t)v13);
  sub_1000CE8A4(v13, (uint64_t)v14);
  BOOL v9 = v14[32] == 0;
  sub_1000DC340((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1000DC32C);
  return v9;
}

uint64_t sub_1000D65F0(char a1)
{
  if (a1 == 2)
  {
    sub_1000DD29C();
  }
  else
  {
    v2[3] = &type metadata for Int;
    v2[0] = a1 & 1;
  }
  sub_1001E7578((uint64_t)v2, 27);
  return sub_1000DC380((uint64_t)v2, (uint64_t *)&unk_100319510);
}

void sub_1000D6650(uint64_t a1, char a2)
{
}

void sub_1000D6658(uint64_t a1, char a2, char a3)
{
  if (a2) {
    a1 = sub_1000DD664();
  }
  else {
    v3[3] = &type metadata for Double;
  }
  v3[0] = a1;
  sub_1001E7578((uint64_t)v3, a3);
  sub_1000DC380((uint64_t)v3, (uint64_t *)&unk_100319510);
  sub_1000DD6DC(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
}

uint64_t sub_1000D66B8(char a1)
{
  return sub_1000D66C0(a1, 17);
}

uint64_t sub_1000D66C0(char a1, char a2)
{
  uint64_t v4 = &type metadata for Bool;
  v3[0] = a1;
  sub_1001E7578((uint64_t)v3, a2);
  return sub_1000DC380((uint64_t)v3, (uint64_t *)&unk_100319510);
}

uint64_t sub_1000D6704()
{
  return sub_1000D92CC(6) & 1;
}

uint64_t sub_1000D6724(uint64_t a1)
{
  uint64_t v1 = sub_1000D96B0(v10, a1);
  sub_1000DD550((uint64_t)v1, v2, &qword_10030FC28, v3, v4, v5, v6, v7, v10[0], v10[1], v10[2], v10[3], v10[4], v11);
  sub_1000DD544();
  if (!v8)
  {
    sub_1000CE8A4(&v11, (uint64_t)v12);
    sub_1000CE8A4(v12, (uint64_t)v13);
    if (v13[32] == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      sub_1000DC340((uint64_t)v10, (void (*)(void, void, void, void, void))sub_1000DC32C);
    }
  }
  return sub_100094D44();
}

uint64_t sub_1000D67C0(uint64_t a1)
{
  uint64_t v1 = sub_1000D96B0(v10, a1);
  sub_1000DD550((uint64_t)v1, v2, &qword_10030FC28, v3, v4, v5, v6, v7, v10[0], v10[1], v10[2], v10[3], v10[4], v11);
  sub_1000DD544();
  if (!v8)
  {
    sub_1000CE8A4(&v11, (uint64_t)v12);
    sub_1000CE8A4(v12, (uint64_t)v13);
    if (v13[32] == 3) {
      swift_bridgeObjectRelease();
    }
    else {
      sub_1000DC340((uint64_t)v10, (void (*)(void, void, void, void, void))sub_1000DC32C);
    }
  }
  return sub_100094D44();
}

uint64_t sub_1000D685C()
{
  if (sub_1000D847C() != 1) {
    goto LABEL_10;
  }
  sub_1000D6528();
  sub_1000DD5AC();
  switch(v1)
  {
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      sub_1000DCF70();
      sub_1000DD064();
      break;
    case 3:
      sub_1000DD9D4();
      break;
    default:
      break;
  }
  sub_10024FA60();
  sub_1000DD7B8();
  if ((v0 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  sub_1000D9484(8);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    char v3 = 0;
    return v3 & 1;
  }
LABEL_8:
  switch(sub_1000D627C())
  {
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      char v4 = sub_10024FA60();
      swift_bridgeObjectRelease();
      char v3 = v4 ^ 1;
      break;
  }
  return v3 & 1;
}

uint64_t sub_1000D6A14(uint64_t a1)
{
  return sub_1000D6A24(a1, 30);
}

uint64_t sub_1000D6A1C(uint64_t a1)
{
  return sub_1000D6A24(a1, 29);
}

uint64_t sub_1000D6A24(uint64_t a1, char a2)
{
  sub_1000DD988();
  uint64_t v6 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v7 = sub_100026018(v6);
  __chkstk_darwin(v7, v8);
  sub_1000DD1B8();
  sub_1000D6528();
  sub_1000ACA20();
  switch(v9)
  {
    case 1:
      sub_1000ACA44();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      sub_1000DD590();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      goto LABEL_7;
    default:
LABEL_4:
      char v10 = sub_1000DCFB0();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_7:
        sub_10007A6EC(v2, v4, (uint64_t *)&unk_10030FD70);
        uint64_t v11 = sub_10024E030();
        if (sub_10001FA0C(v4, 1, v11) == 1)
        {
          sub_1000DC380(v4, (uint64_t *)&unk_10030FD70);
          long long v16 = 0u;
          long long v17 = 0u;
        }
        else
        {
          sub_10024DF70();
          *((void *)&v17 + 1) = &type metadata for Double;
          *(void *)&long long v16 = v12;
          sub_10007A8C4();
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v11);
        }
        sub_1001E7578((uint64_t)&v16, a2);
        sub_1000DC380((uint64_t)&v16, (uint64_t *)&unk_100319510);
        uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
        if ((v14 & 1) == 0) {
          *(void *)(v3 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = v14 | 1;
        }
      }
      return sub_1000DC380(v2, (uint64_t *)&unk_10030FD70);
  }
}

uint64_t sub_1000D6BFC(char a1)
{
  return qword_10025EE80[a1];
}

void *sub_1000D6C10()
{
  uint64_t v0 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v1 = sub_100026018(v0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000D6E60();
  if (result)
  {
    uint64_t v6 = result[2];
    swift_bridgeObjectRelease();
    if (v6
      && (sub_1000D797C(30, (uint64_t)v4),
          uint64_t v7 = sub_10024E030(),
          int v8 = sub_10001FA0C((uint64_t)v4, 1, v7),
          sub_1000DC380((uint64_t)v4, (uint64_t *)&unk_10030FD70),
          v8 == 1)
      && (sub_1000D55F8() - 1) <= 4u)
    {
      return (void *)(sub_1000D55F8() != 2);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D6CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_1000D56E0() & 1) == 0 || (sub_1000D9484(4), (v4))
  {
    sub_10024E030();
    sub_10007A8C4();
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    return v8(a2, a1, v6);
  }
  else
  {
    return sub_10024DF60();
  }
}

uint64_t sub_1000D6DB0()
{
  uint64_t v0 = sub_1000D939C(26);
  if (v1) {
    return sub_1000F3954(v0, v1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000D6DE0@<X0>(uint64_t a1@<X8>)
{
  sub_1000D939C(22);
  if (v2)
  {
    sub_10024E040();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = sub_10024E0A0();
    return sub_1000195B4(a1, 1, 1, v4);
  }
}

void *sub_1000D6E60()
{
  sub_1000D6528();
  sub_1000DD040();
  switch(v1)
  {
    case 1:
      sub_1000DCF80();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      sub_1000DD064();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      goto LABEL_7;
    default:
LABEL_4:
      sub_1000DCFB0();
      sub_1000DD7B8();
      if ((v0 & 1) == 0) {
        return 0;
      }
LABEL_7:
      uint64_t v2 = sub_1000D9558(19);
      if (!v2) {
        return 0;
      }
      uint64_t v3 = v2;
      uint64_t v4 = *(void *)(v2 + 16);
      if (v4)
      {
        sub_1000DD6EC();
        sub_100038A0C();
        uint64_t v5 = v25;
        uint64_t v24 = v3;
        uint64_t v6 = (uint64_t *)(v3 + 40);
        do
        {
          uint64_t v8 = *(v6 - 1);
          uint64_t v7 = *v6;
          swift_bridgeObjectRetain_n();
          sub_1000D97AC(v8, v7, v9, v10, v11, v12, v13, v14, v24, v25, v26, v27, v28, v29, v30, v31[0], v31[1], v31[2], v31[3],
            v32,
            v33,
            v34,
            v35,
            v36,
            v37,
            v38);
          uint64_t v15 = v26;
          uint64_t v16 = v27;
          uint64_t v17 = v28;
          unint64_t v18 = v29;
          char v19 = v30;
          sub_1000DBF98((uint64_t)&v26, (uint64_t)v31, &qword_10030FC28);
          if (v32 == 255)
          {
            uint64_t v17 = 0;
            unint64_t v18 = 0;
            char v19 = 4;
            uint64_t v15 = (uint64_t *)v8;
            uint64_t v16 = v7;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v25 = v5;
          unint64_t v21 = *(void *)(v5 + 16);
          unint64_t v20 = *(void *)(v5 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1000DD64C(v20);
            sub_100038A0C();
          }
          v6 += 2;
          *(void *)(v5 + 16) = v21 + 1;
          unint64_t v22 = v5 + 40 * v21;
          *(void *)(v22 + 32) = v15;
          *(void *)(v22 + 40) = v16;
          *(void *)(v22 + 48) = v17;
          *(void *)(v22 + 56) = v18;
          *(unsigned char *)(v22 + 64) = v19;
          --v4;
        }
        while (v4);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
      return (void *)v5;
  }
}

void sub_1000D7038(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = (uint64_t)sub_1000D6E60();
  if (!v8)
  {
    uint64_t v11 = 0;
    sub_1000DD4BC();
    goto LABEL_104;
  }
  uint64_t v9 = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
  uint64_t v3 = v10;
  uint64_t v2 = a1;
  uint64_t v11 = sub_1000FE9DC(v9, v10);
  swift_bridgeObjectRelease();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_1000DD4BC();
LABEL_98:
    uint64_t v8 = 0;
LABEL_103:
    int64x2_t v53 = 0uLL;
    goto LABEL_104;
  }
  uint64_t v12 = *(void *)(v11 + 192);
  uint64_t v3 = *(void *)(v11 + 200);
  swift_bridgeObjectRetain();
  uint64_t v13 = v12;
  uint64_t v2 = a1;
  sub_1000FEBDC(v13, v3);
  sub_1000DDA30();
  if (!a1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v3 = 0;
    a1 = 0;
    uint64_t v5 = 0;
    goto LABEL_98;
  }
  uint64_t v56 = a2;
  uint64_t v14 = *(void *)(v8 + 16);
  if (!v14)
  {
LABEL_102:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    sub_1000DD4BC();
    uint64_t v8 = 0;
    a2 = v56;
    goto LABEL_103;
  }
  while (2)
  {
    uint64_t v11 = *(void *)(v8 + 32);
    uint64_t v3 = *(void *)(v8 + 40);
    a1 = *(void *)(v8 + 48);
    uint64_t v15 = *(void *)(v8 + 56);
    uint64_t v2 = *(unsigned __int8 *)(v8 + 64);
    sub_1000DD818();
    sub_1000DD818();
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (unint64_t)(v14 - 1) > *(void *)(v8 + 24) >> 1)
    {
      sub_100034DF4();
      uint64_t v8 = v16;
    }
    swift_arrayDestroy();
    uint64_t v17 = *(void *)(v8 + 16);
    if (!v17) {
      goto LABEL_115;
    }
    memmove((void *)(v8 + 32), (const void *)(v8 + 72), 40 * v17 - 40);
    *(void *)(v8 + 16) = v17 - 1;
    sub_1000AC2FC(v11, v3, a1, v15, v2);
    switch(v2)
    {
      case 1:
        sub_1000DD154();
        if (v35)
        {
          sub_1000DD090();
          if (!sub_10024F6F0())
          {
LABEL_69:
            sub_1000DD0F8();
            uint64_t v21 = sub_1000DD140();
            unsigned __int8 v25 = 1;
            goto LABEL_70;
          }
        }
        else
        {
          sub_1000DD070();
          if (v8 == -32) {
            goto LABEL_69;
          }
        }
        sub_1000DD640();
        while (1)
        {
          uint64_t v2 = sub_1000DD5C4();
          if (__OFADD__(v4 - 4, 1)) {
            goto LABEL_111;
          }
          sub_1000DD600();
          BOOL v37 = v20 && v3 == v36;
          if (v37 || (sub_1000DD180() & 1) != 0) {
            break;
          }
          swift_release();
          sub_1000DD5F4();
          if (v20) {
            goto LABEL_69;
          }
        }
        sub_1000DD0F8();
        uint64_t v49 = sub_1000DD86C();
        uint64_t v51 = sub_100026CB8(v49, v50);
        if (v51)
        {
          uint64_t v5 = v51;
          swift_release();
          swift_release();
          unint64_t v55 = 1;
          goto LABEL_109;
        }
        uint64_t v41 = sub_1000DD4A8();
        unsigned __int8 v45 = 1;
        goto LABEL_79;
      case 2:
        sub_1000DD154();
        if (v29)
        {
          sub_1000DD090();
          if (sub_10024F6F0())
          {
LABEL_36:
            sub_1000DD640();
            while (1)
            {
              uint64_t v2 = sub_1000DD5C4();
              if (__OFADD__(v4 - 4, 1)) {
                goto LABEL_114;
              }
              sub_1000DD600();
              BOOL v31 = v20 && v3 == v30;
              if (v31 || (sub_1000DD180() & 1) != 0) {
                break;
              }
              swift_release();
              sub_1000DD5F4();
              if (v20) {
                goto LABEL_45;
              }
            }
            sub_1000DD0F8();
            uint64_t v38 = sub_1000DD86C();
            uint64_t v40 = sub_100026F0C(v38, v39);
            if (!v40)
            {
              uint64_t v41 = sub_1000DD4A8();
              unsigned __int8 v45 = 2;
              goto LABEL_79;
            }
            uint64_t v5 = v40;
            swift_release();
            swift_release();
            unint64_t v55 = 2;
            goto LABEL_109;
          }
        }
        else
        {
          sub_1000DD070();
          if (v8 != -32) {
            goto LABEL_36;
          }
        }
LABEL_45:
        sub_1000DD0F8();
        uint64_t v21 = sub_1000DD140();
        unsigned __int8 v25 = 2;
        goto LABEL_70;
      case 3:
        sub_1000DD154();
        if (!v32)
        {
          sub_1000DD070();
          if (v8 != -32) {
            goto LABEL_48;
          }
LABEL_57:
          sub_1000DD0F8();
          uint64_t v21 = sub_1000DD140();
          unsigned __int8 v25 = 3;
LABEL_70:
          sub_1000AC2FC(v21, v22, v23, v24, v25);
LABEL_80:
          uint64_t v14 = *(void *)(v8 + 16);
          if (!v14) {
            goto LABEL_102;
          }
          continue;
        }
        sub_1000DD090();
        if (!sub_10024F6F0()) {
          goto LABEL_57;
        }
LABEL_48:
        sub_1000DD640();
        while (1)
        {
          uint64_t v2 = sub_1000DD5C4();
          if (__OFADD__(v4 - 4, 1))
          {
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            sub_10003C4F8();
            sub_10024F730();
            __break(1u);
            JUMPOUT(0x1000D76A8);
          }
          sub_1000DD600();
          BOOL v34 = v20 && v3 == v33;
          if (v34 || (sub_1000DD180() & 1) != 0) {
            break;
          }
          swift_release();
          sub_1000DD5F4();
          if (v20) {
            goto LABEL_57;
          }
        }
        sub_1000DD0F8();
        uint64_t v46 = sub_1000DD86C();
        uint64_t v48 = sub_100026F74(v46, v47);
        if (!v48)
        {
          uint64_t v41 = sub_1000DD4A8();
          unsigned __int8 v45 = 3;
          goto LABEL_79;
        }
        uint64_t v5 = v48;
        swift_release();
        swift_release();
        unint64_t v55 = 3;
LABEL_109:
        int64x2_t v53 = vdupq_n_s64(v55);
        v53.i64[0] = v17;
LABEL_101:
        a2 = v56;
LABEL_104:
        *(void *)a2 = v11;
        *(void *)(a2 + 8) = v3;
        *(void *)(a2 + 16) = a1;
        *(int64x2_t *)(a2 + 24) = v53;
        *(void *)(a2 + 40) = v5;
        *(void *)(a2 + 48) = v2;
        *(void *)(a2 + 56) = v8;
        return;
      case 4:
        sub_1000DD154();
        if (v26)
        {
          if (v5 < 0) {
            uint64_t v2 = v5;
          }
          else {
            uint64_t v2 = v5 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain_n();
          uint64_t v52 = sub_10024F6F0();
          swift_bridgeObjectRelease();
          if (v52)
          {
LABEL_24:
            sub_1000DD640();
            while (1)
            {
              uint64_t v2 = sub_1000DD5C4();
              if (__OFADD__(v4 - 4, 1)) {
                goto LABEL_113;
              }
              sub_1000DD600();
              BOOL v28 = v20 && v3 == v27;
              if (v28 || (sub_1000DD180() & 1) != 0) {
                break;
              }
              swift_release();
              sub_1000DD5F4();
              if (v20) {
                goto LABEL_33;
              }
            }
            sub_1000DD0F8();
            swift_bridgeObjectRelease();
            sub_100019524(&qword_10030A360);
            uint64_t v8 = swift_allocObject();
            *(_OWORD *)(v8 + 16) = xmmword_100255FB0;
            uint64_t v54 = *(void *)(v2 + 88);
            *(void *)(v8 + 32) = *(void *)(v2 + 80);
            *(void *)(v8 + 40) = v54;
            *(void *)(v8 + 48) = 0;
            *(void *)(v8 + 56) = 0;
            *(unsigned char *)(v8 + 64) = 4;
            swift_bridgeObjectRetain();
            swift_release();
            swift_release();
            uint64_t v5 = 0;
            int64x2_t v53 = vdupq_n_s64(4uLL);
LABEL_100:
            v53.i64[0] = v15;
            goto LABEL_101;
          }
        }
        else
        {
          sub_1000DD070();
          if (v8 != -32) {
            goto LABEL_24;
          }
        }
LABEL_33:
        sub_1000DD0F8();
        uint64_t v21 = sub_1000DD140();
        unsigned __int8 v25 = 4;
        goto LABEL_70;
      default:
        sub_1000DD154();
        if (v18)
        {
          sub_1000DD090();
          if (!sub_10024F6F0())
          {
LABEL_21:
            sub_1000DD0F8();
            uint64_t v21 = sub_1000DD83C();
            goto LABEL_70;
          }
        }
        else
        {
          sub_1000DD070();
          if (v8 == -32) {
            goto LABEL_21;
          }
        }
        sub_1000DD640();
        while (1)
        {
          uint64_t v2 = sub_1000DD5C4();
          if (__OFADD__(v4 - 4, 1)) {
            goto LABEL_112;
          }
          sub_1000DD600();
          BOOL v20 = v20 && v3 == v19;
          if (v20 || (sub_1000DD180() & 1) != 0) {
            break;
          }
          swift_release();
          sub_1000DD5F4();
          if (v20) {
            goto LABEL_21;
          }
        }
        sub_1000DD0F8();
        uint64_t v5 = *(void *)(v2 + 136);
        if (v5)
        {
          swift_retain();
          swift_release();
          swift_release();
          v53.i64[1] = 0;
          goto LABEL_100;
        }
        uint64_t v41 = sub_1000DD83C();
LABEL_79:
        sub_1000AC2FC(v41, v42, v43, v44, v45);
        swift_release();
        goto LABEL_80;
    }
  }
}

uint64_t sub_1000D76BC()
{
  sub_1000D6528();
  sub_1000DD040();
  switch(v1)
  {
    case 1:
      sub_1000DCF80();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      sub_1000DD064();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      return sub_1000D9484(34);
    default:
LABEL_4:
      sub_1000DCFB0();
      sub_1000DD7B8();
      if (v0) {
        return sub_1000D9484(34);
      }
      else {
        return 0;
      }
  }
}

uint64_t sub_1000D777C(char a1)
{
  return sub_1000D66C0(a1, 6);
}

BOOL sub_1000D7784()
{
  return sub_1000D84C4(3);
}

uint64_t sub_1000D778C()
{
  return sub_1000D779C(29);
}

uint64_t sub_1000D7794()
{
  return sub_1000D779C(30);
}

uint64_t sub_1000D779C(char a1)
{
  uint64_t v5 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v6 = sub_100026018(v5);
  __chkstk_darwin(v6, v7);
  uint64_t v8 = sub_1000DD568();
  sub_10001B550();
  uint64_t v10 = v9;
  __chkstk_darwin(v11, v12);
  sub_10003C744();
  __chkstk_darwin(v13, v14);
  sub_1000DD968();
  sub_1000D797C(a1, v15);
  if (sub_10001FA0C(v1, 1, v8) == 1)
  {
    sub_1000DC380(v1, (uint64_t *)&unk_10030FD70);
    char v16 = 0;
  }
  else
  {
    uint64_t v17 = sub_1000DD528();
    v18(v17);
    sub_10024E010();
    sub_1000C0B6C();
    char v16 = sub_10024E5D0() ^ 1;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v19(v2, v8);
    v19(v3, v8);
  }
  return v16 & 1;
}

uint64_t sub_1000D78F4()
{
  uint64_t result = sub_1000D9484(31);
  if (v1) {
    return 0;
  }
  return result;
}

uint64_t sub_1000D7920(uint64_t a1, char a2)
{
  if (a2) {
    a1 = sub_1000DD664();
  }
  else {
    v3[3] = &type metadata for Int;
  }
  v3[0] = a1;
  sub_1001E7578((uint64_t)v3, 31);
  return sub_1000DC380((uint64_t)v3, (uint64_t *)&unk_100319510);
}

uint64_t sub_1000D7974@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D797C(29, a1);
}

uint64_t sub_1000D797C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_1000D9484(a1);
  if (v3)
  {
    uint64_t v4 = 1;
  }
  else
  {
    sub_10024DF60();
    uint64_t v4 = 0;
  }
  uint64_t v5 = sub_10024E030();
  return sub_1000195B4(a2, v4, 1, v5);
}

uint64_t sub_1000D79EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D797C(30, a1);
}

uint64_t sub_1000D79F4(char a1)
{
  uint64_t v1 = 3157553;
  if (a1) {
    uint64_t v1 = 3157554;
  }
  v3[3] = &type metadata for String;
  v3[0] = v1;
  v3[1] = 0xE300000000000000;
  sub_1001E7578((uint64_t)v3, 26);
  return sub_1000DC380((uint64_t)v3, (uint64_t *)&unk_100319510);
}

void sub_1000D7A50()
{
  sub_1000DD988();
  uint64_t v5 = *v4;
  HIDWORD(v83) = v6;
  if (v4 && v5 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription17IntroductoryOffer)
  {
    char v7 = v3;
    uint64_t v1 = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
    uint64_t v2 = v8;
    sub_100019524(&qword_10030A360);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100255FB0;
    uint64_t v10 = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(unsigned char *)(inited + 64) = 4;
    if (v7)
    {
      uint64_t v77 = v2;
      uint64_t v79 = v1;
      sub_1000D96B0(v110, v10);
      uint64_t v18 = v110[0];
      uint64_t v19 = v110[1];
      uint64_t v21 = v110[2];
      uint64_t v20 = v110[3];
      char v22 = v111;
      sub_1000DBF98((uint64_t)v110, (uint64_t)v112, &qword_10030FC28);
      if (v112[32] == 255)
      {
        uint64_t v23 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v23 = (void *)swift_allocObject();
        *((_OWORD *)v23 + 1) = xmmword_100255FB0;
        v23[4] = v18;
        v23[5] = v19;
        void v23[6] = v21;
        v23[7] = v20;
        *((unsigned char *)v23 + 64) = v22;
      }
      uint64_t v2 = v77;
      uint64_t v1 = v79;
      if (sub_1000D6E60()) {
        swift_bridgeObjectRelease();
      }
      v117[0] = (uint64_t)v23;
      sub_1001D69A0();
      uint64_t v27 = v117[0];
    }
    else
    {
      uint64_t v27 = inited;
    }
    sub_1000DA128(v27, v11, v12, v13, v14, v15, v16, v17, v77, v79, xmmword_100255FB0, v83, v85, v87, v89, v91, v93, v95, v97,
      v99,
      v101,
      v103,
      v105,
      v107);
    uint64_t v30 = 0;
    uint64_t v29 = 0;
    char v26 = 0;
  }
  else
  {
    if (v0 && v5 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription10AdHocOffer)
    {
      swift_retain();
      sub_1000DD994(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID);
      sub_1000DD92C();
      char v26 = 1;
    }
    else if (v0 && v5 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription9CodeOffer)
    {
      swift_retain();
      uint64_t v1 = sub_1000DD994(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID);
      uint64_t v2 = v28;
      uint64_t v24 = (uint64_t *)(v0 + 16);
      unsigned __int8 v25 = (uint64_t *)(v0 + 24);
      char v26 = 2;
    }
    else
    {
      if (!v0 || v5 != _TtCC25ASOctaneSupportXPCService18OctaneSubscription12WinbackOffer)
      {
        if (qword_100308DE0 == -1) {
          goto LABEL_45;
        }
        goto LABEL_51;
      }
      swift_retain();
      sub_1000DD994(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID);
      sub_1000DD92C();
      char v26 = 3;
    }
    uint64_t v29 = *v25;
    uint64_t v30 = *v24;
    swift_bridgeObjectRetain();
    swift_release();
    BOOL v31 = sub_1000D563C();
    if (v32)
    {
      uint64_t v39 = v31;
      uint64_t v40 = v32;
      sub_100019524(&qword_10030A360);
      uint64_t v41 = (void *)swift_initStackObject();
      *((_OWORD *)v41 + 1) = xmmword_100255FB0;
      v41[4] = v39;
      v41[5] = v40;
      v41[6] = 0;
      v41[7] = 0;
      *((unsigned char *)v41 + 64) = 4;
    }
    else
    {
      uint64_t v41 = _swiftEmptyArrayStorage;
    }
    sub_1000DA128((uint64_t)v41, v32, v33, v34, v35, v36, v37, v38, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97,
      v99,
      v101,
      v103,
      v105,
      v107);
  }
  *(void *)&long long v113 = v1;
  *((void *)&v113 + 1) = v2;
  uint64_t v114 = v30;
  uint64_t v115 = v29;
  char v116 = v26;
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v42 = 1;
    if ((BYTE12(v84) & 1) == 0) {
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 48);
    if ((BYTE12(v84) & 1) == 0)
    {
LABEL_40:
      uint64_t v109 = sub_1000D6E60();
      if (v109)
      {
        sub_1000DA81C(&v113, v42);
        sub_10003BAD8();
        uint64_t v65 = (uint64_t)v109;
      }
      else
      {
        uint64_t v66 = sub_1000DD87C();
        sub_1000AC2FC(v66, v67, v68, v69, v70);
        uint64_t v65 = 0;
      }
      sub_1000DA128(v65, v58, v59, v60, v61, v62, v63, v64, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96, v98,
        v100,
        v102,
        v104,
        v106,
        v108);
      return;
    }
  }
  if (!__OFSUB__(v42--, 1))
  {
    v117[0] = v1;
    v117[1] = v2;
    v117[2] = v30;
    v117[3] = v29;
    char v118 = v26;
    uint64_t v44 = sub_1000DD87C();
    sub_1000AC290(v44, v45, v46, v47, v48);
    sub_1000D9ABC((uint64_t)v117);
    sub_1000D9E08(*(unsigned char *)(v0 + 57));
    if (*(__objc2_class **)v0 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription9CodeOffer)
    {
      uint64_t v49 = *(void *)(v0 + 80);
      uint64_t v50 = *(void *)(v0 + 88);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v49 = 0;
      uint64_t v50 = 0;
    }
    sub_1000DA0D4(v49, v50);
    switch(*(unsigned char *)(v0 + 57))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      default:
        char v52 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v52)
        {
LABEL_36:
          sub_10024EF90(v51, 0);
          unint64_t v56 = v55;
        }
        else
        {
          unint64_t v53 = sub_1001751F8();
          if ((v57 & 0x100000000) != 0) {
            goto LABEL_40;
          }
          unint64_t v56 = v57;
        }
        sub_1000D9F9C(v53, v54, v56);
        break;
    }
    goto LABEL_40;
  }
  __break(1u);
LABEL_51:
  swift_once();
LABEL_45:
  uint64_t v71 = sub_10024E1F0();
  sub_10001B0E8(v71, (uint64_t)qword_10034C0E0);
  swift_retain();
  uint64_t v72 = sub_10024E1D0();
  os_log_type_t v73 = sub_10024EE20();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    v117[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v74 = 136315138;
    uint64_t v75 = *(void *)(v0 + 16);
    unint64_t v76 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
    *(void *)&long long v113 = sub_1000F3F3C(v75, v76, v117);
    sub_10024F100();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Unknown offer type with id: %s, cannot add offer to transaction", v74, 0xCu);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1000D808C(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_10024E030();
  sub_10001B550();
  uint64_t v9 = v8;
  __chkstk_darwin(v10, v11);
  sub_1000DD1B8();
  if (sub_1000DA518(a1))
  {
    uint64_t v12 = sub_100175300();
    int v14 = v13;
LABEL_5:
    swift_release();
    sub_1000D453C();
    sub_10024DF60();
    uint64_t v18 = sub_100051580(v12, v14, v3, a2);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
    sub_1000D6658(v18, 0, 4);
    return sub_1000D9484(4);
  }
  uint64_t v15 = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
  uint64_t v17 = sub_1000FE9DC(v15, v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v12 = *(void *)(v17 + 176);
    int v14 = *(unsigned __int8 *)(v17 + 184);
    goto LABEL_5;
  }
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10024E1F0();
  sub_10001B0E8(v20, (uint64_t)qword_10034C0E0);
  id v21 = v4;
  char v22 = sub_10024E1D0();
  os_log_type_t v23 = sub_10024EE10();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v25 = sub_1000DD994(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID);
    sub_1000F3F3C(v25, v26, &v27);
    sub_10024F100();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "missing subscription for id: %s, cannot compute expiration", v24, 0xCu);
    swift_arrayDestroy();
    sub_10003FBCC();
    sub_10003FBCC();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1000D834C()
{
  sub_1000DD988();
  uint64_t v3 = sub_100019524(&qword_10030C100);
  uint64_t v4 = sub_100026018(v3);
  __chkstk_darwin(v4, v5);
  sub_1000DD2A8(v6, v12);
  uint64_t v7 = sub_10024E0A0();
  if (sub_10001FA0C(v1, 1, v7) == 1)
  {
    sub_1000DC380(v1, &qword_10030C100);
    long long v12 = 0u;
    long long v13 = 0u;
  }
  else
  {
    *((void *)&v13 + 1) = &type metadata for String;
    *(void *)&long long v12 = sub_10024E050();
    *((void *)&v12 + 1) = v8;
    sub_10007A8C4();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  sub_1001E7578((uint64_t)&v12, 22);
  sub_1000DC380((uint64_t)&v12, (uint64_t *)&unk_100319510);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  if ((v10 & 2) == 0) {
    *(void *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = v10 | 2;
  }
  return sub_1000DC380(v0, &qword_10030C100);
}

uint64_t sub_1000D847C()
{
  unint64_t v0 = sub_1000D9484(14);
  if (v1) {
    return 0;
  }
  LODWORD(result) = sub_1000D8800(v0);
  if (result == 5) {
    return 0;
  }
  else {
    return result;
  }
}

BOOL sub_1000D84BC()
{
  return sub_1000D84C4(4);
}

BOOL sub_1000D84C4(char a1)
{
  uint64_t v3 = sub_10024E030();
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_100062164();
  *(double *)&uint64_t v8 = COERCE_DOUBLE(sub_1000D9484(a1));
  if (v9) {
    return 0;
  }
  double v10 = *(double *)&v8;
  sub_10024E020();
  sub_10024DF70();
  double v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  return v12 > v10;
}

uint64_t sub_1000D8594()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (v1 == v2)
  {
    LOBYTE(result) = 0;
    return result | ((v1 == v2) << 8);
  }
  uint64_t result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (result < v1 || v2 - 1 >= v2) {
    goto LABEL_12;
  }
  uint64_t result = sub_10007274C(result, 0, *(void *)v0, *(void *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48));
  if ((result & 0x100) == 0) {
    return result | ((v1 == v2) << 8);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1000D8628@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = result + 40 * v3;
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v8 = *(void *)(v4 + 16);
    unsigned __int8 v9 = *(unsigned char *)(v4 + 24);
    uint64_t result = sub_1000AC290(v5, *(void *)v4, v7, v8, v9);
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unsigned __int8 v9 = -1;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(unsigned char *)(a2 + 32) = v9;
  return result;
}

uint64_t sub_1000D86B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_10024E7B0();
  return sub_10024E8F0();
}

uint64_t sub_1000D8730(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    swift_bridgeObjectRetain();
  }
  return sub_100094D44();
}

double sub_1000D8774()
{
  uint64_t v0 = sub_1000D9484(23);
  if ((v1 & 1) == 0) {
    return *(double *)&v0;
  }
  return sub_1000D453C();
}

uint64_t sub_1000D87B8()
{
  uint64_t result = sub_1000DC1C8((uint64_t)&off_1002D5B68);
  qword_10030FB58 = result;
  return result;
}

uint64_t sub_1000D87E0(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) < 3) {
    return a1 + 1;
  }
  else {
    return 3;
  }
}

uint64_t sub_1000D87F4(unsigned __int8 a1)
{
  return a1 - 1;
}

unint64_t sub_1000D8800(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

uint64_t sub_1000D8810(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D58B8;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000D885C(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000D8874(char a1)
{
  return a1 & 1;
}

uint64_t sub_1000D887C(unint64_t a1)
{
  if (a1 > 0xB) {
    return 5;
  }
  else {
    return byte_10025EEA8[a1];
  }
}

Swift::Int sub_1000D889C()
{
  return sub_1001D35AC(*v0);
}

void sub_1000D88A4()
{
}

Swift::Int sub_1000D88AC()
{
  return sub_1000D39E8();
}

uint64_t sub_1000D88B4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000D87E0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000D88E0()
{
  unsigned __int8 v1 = sub_1000621E4();
  uint64_t result = sub_1000D87F4(v1);
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1000D8908()
{
  return sub_10024EA60();
}

uint64_t sub_1000D8968()
{
  return sub_10024EA10();
}

Swift::Int sub_1000D89B8()
{
  return sub_1000D3964();
}

unint64_t sub_1000D89D4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000D8800(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000D8A00()
{
  return sub_10024EA60();
}

uint64_t sub_1000D8A60()
{
  return sub_10024EA10();
}

uint64_t sub_1000D8AB0(unsigned __int8 *a1, char *a2)
{
  return sub_1000FB720(*a1, *a2);
}

Swift::Int sub_1000D8ABC()
{
  return sub_1001D35F0(*v0);
}

uint64_t sub_1000D8AC4()
{
  return sub_1000D240C();
}

Swift::Int sub_1000D8ACC(uint64_t a1)
{
  return sub_1000D3D78(a1, *v1, (void (*)(unsigned char *, uint64_t))sub_1000D240C);
}

uint64_t sub_1000D8AFC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000D8810(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000D8B2C()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1000D5F24(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1000D8B54()
{
  return sub_10024EA50();
}

uint64_t sub_1000D8BB4()
{
  return sub_10024EA00();
}

BOOL sub_1000D8C04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return j___s25ASOctaneSupportXPCService28NIOHTTPObjectAggregatorEventV23__derived_struct_equalsySbAC_ACtFZ(*a1, *a2);
}

uint64_t sub_1000D8C10()
{
  return sub_1001D3608(*v0);
}

Swift::Int sub_1000D8C18()
{
  return sub_1000D3A80();
}

uint64_t sub_1000D8C34@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000D885C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000D8C60()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1000D8874(v1);
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1000D8C88()
{
  return sub_10024EA60();
}

uint64_t sub_1000D8CE8()
{
  return sub_10024EA10();
}

BOOL sub_1000D8D38(char *a1, char *a2)
{
  return sub_1000FB87C(*a1, *a2);
}

Swift::Int sub_1000D8D44()
{
  return sub_1001D360C(*v0);
}

void sub_1000D8D4C(uint64_t a1)
{
  sub_1000D24C4(a1, *v1);
}

Swift::Int sub_1000D8D54()
{
  return sub_1000D39A0();
}

uint64_t sub_1000D8D5C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000D887C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000D8D88()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1000D6BFC(v1);
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1000D8DB0()
{
  return sub_10024EA60();
}

uint64_t sub_1000D8E10()
{
  return sub_10024EA10();
}

BOOL sub_1000D8E60(uint64_t *a1)
{
  return sub_10002F9B8(*a1, *v1);
}

uint64_t sub_1000D8E6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10002C870(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1000D8E9C(uint64_t *a1)
{
  return sub_10002F9C0(*a1, *v1);
}

uint64_t sub_1000D8EA8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000D5CC4(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1000D8ED8(void *a1, uint64_t *a2)
{
  return sub_1000FBF90(a1, *a2);
}

uint64_t sub_1000D8EE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000D5CD4(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1000D8F14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000D5D24(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1000D8F48(uint64_t *a1)
{
  return sub_1000FBF68(*a1);
}

uint64_t sub_1000D8F50(uint64_t *a1)
{
  return sub_1000FBFEC(*a1);
}

uint64_t sub_1000D8F58(uint64_t *a1)
{
  return sub_1000D5D5C(*a1);
}

uint64_t sub_1000D8F60@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000D46D8(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1000D8F90(uint64_t *a1)
{
  return sub_10002F204(*a1, *v1);
}

BOOL sub_1000D8F9C(uint64_t *a1)
{
  return sub_1000D5D8C(*a1, *v1);
}

BOOL sub_1000D8FA8(uint64_t *a1)
{
  return sub_10002F220(*a1, *v1);
}

BOOL sub_1000D8FB4()
{
  return EmbeddedChannel.LeftOverState.isClean.getter(*v0);
}

uint64_t sub_1000D8FBC(uint64_t *a1)
{
  return sub_1000D46F0(*a1);
}

void *sub_1000D8FC4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1000D8FD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000D4628(a1);
  *a2 = result;
  return result;
}

char *sub_1000D8FFC(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = [a1 databaseID];
  id v5 = [a1 propertyValues];
  sub_10024E4F0();

  Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [a1 externalPropertyValues];
  sub_10024E4F0();

  Class v8 = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  unsigned __int8 v9 = (char *)[v3 initWithDatabaseID:v4 propertyValues:isa externalPropertyValues:v8];

  uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels];
  *(void *)&v9[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels] = v10;
  return v9;
}

uint64_t sub_1000D9164()
{
  return type metadata accessor for TransactionEntity();
}

void *sub_1000D9194()
{
  uint64_t v0 = sub_100152BB0();
  char v1 = (char *)v0[2];
  if (v1)
  {
    sub_1000DD6EC();
    sub_1000389BC();
    uint64_t v2 = 0;
    uint64_t v3 = v10;
    do
    {
      unint64_t v4 = sub_100152BBC(v2[(void)v0 + 32]);
      uint64_t v6 = v5;
      unint64_t v7 = *(void *)(v10 + 16);
      if (v7 >= *(void *)(v10 + 24) >> 1) {
        sub_1000389BC();
      }
      ++v2;
      *(void *)(v10 + 16) = v7 + 1;
      uint64_t v8 = v10 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v6;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

uint64_t sub_1000D92CC(char a1)
{
  sub_100152BBC(a1);
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v3 = [v1 valueForProperty:v2];

  if (v3)
  {
    sub_10024F250();
    swift_unknownObjectRelease();
    sub_10003B908(&v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100019524((uint64_t *)&unk_100319510);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 2;
  }
}

uint64_t sub_1000D939C(char a1)
{
  sub_100152BBC(a1);
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v3 = [v1 valueForProperty:v2];

  if (v3)
  {
    sub_10024F250();
    swift_unknownObjectRelease();
    sub_10003B908(&v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100019524((uint64_t *)&unk_100319510);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000D946C(char a1)
{
  return sub_1000D9484(a1);
}

uint64_t sub_1000D9478(char a1)
{
  return sub_1000D9484(a1);
}

uint64_t sub_1000D9484(char a1)
{
  sub_100152BBC(a1);
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v3 = [v1 valueForProperty:v2];

  if (v3)
  {
    sub_10024F250();
    swift_unknownObjectRelease();
    sub_10003B908(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_100019524((uint64_t *)&unk_100319510);
  int v4 = swift_dynamicCast();
  uint64_t v5 = v7;
  if (!v4) {
    return 0;
  }
  return v5;
}

uint64_t sub_1000D9558(char a1)
{
  sub_100152BBC(a1);
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v3 = [v1 valueForProperty:v2];

  if (v3)
  {
    sub_10024F250();
    swift_unknownObjectRelease();
    sub_10003B908(&v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100019524((uint64_t *)&unk_100319510);
  sub_100019524(&qword_100309410);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000D9630()
{
  uint64_t v0 = sub_1000D939C(16);
  if (!v1) {
    return 0;
  }
  LODWORD(result) = sub_10020F910(v0, v1);
  if (result == 4) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1000D9674()
{
  sub_1000D939C(10);
  if (!v0) {
    return 22;
  }
  return sub_100098E5C();
}

#error "1000D9764: call analysis failed (funcsize=54)"

void sub_1000D97AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_10001B51C();
  a25 = v26;
  a26 = v27;
  unint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  a13 = 58;
  a14 = 0xE100000000000000;
  a11 = &a13;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1001DCA88(0x7FFFFFFFFFFFFFFFLL, 1u, sub_100081864, (uint64_t)&a9, v31, v29);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    a13 = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000389BC();
    uint64_t v36 = (void *)a13;
    uint64_t v37 = v34 + 56;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_10024E740();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      a13 = (uint64_t)v36;
      unint64_t v41 = v36[2];
      if (v41 >= v36[3] >> 1)
      {
        sub_1000389BC();
        uint64_t v36 = (void *)a13;
      }
      _OWORD v36[2] = v41 + 1;
      uint64_t v42 = &v36[2 * v41];
      v42[4] = v38;
      v42[5] = v40;
      v37 += 32;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = _swiftEmptyArrayStorage;
  }
  uint64_t v43 = 0x6F72746E69;
  unint64_t v44 = v36[2];
  if (v44 != 3)
  {
    if (v44 < 2) {
      goto LABEL_22;
    }
LABEL_23:
    uint64_t v52 = v36[4];
    uint64_t v53 = v36[5];
    BOOL v54 = v52 == 0x6F72746E69 && v53 == 0xE500000000000000;
    if (v54 || (sub_1000DD3BC() & 1) != 0)
    {
      unint64_t v48 = 0;
      uint64_t v51 = 0;
      char v50 = 0;
      uint64_t v43 = v36[6];
      uint64_t v55 = v36[7];
    }
    else
    {
      BOOL v56 = v52 == 6583411 && v53 == 0xE300000000000000;
      if (!v56 && (sub_10024FA60() & 1) == 0) {
        goto LABEL_22;
      }
      unint64_t v48 = 0;
      uint64_t v51 = 0;
      uint64_t v43 = v36[6];
      uint64_t v55 = v36[7];
      char v50 = 4;
    }
    uint64_t v45 = v55;
    goto LABEL_36;
  }
  uint64_t v45 = v36[4];
  uint64_t v46 = v36[5];
  if (v45 == 0x6F72746E69 && v46 == 0xE500000000000000) {
    goto LABEL_23;
  }
  unint64_t v48 = 0xE500000000000000;
  if (sub_1000DD3BC()) {
    goto LABEL_23;
  }
  BOOL v49 = v45 == 0x636F686461 && v46 == 0xE500000000000000;
  if (v49 || (sub_1000DD6B0() & 1) != 0)
  {
    sub_1000DD624();
    char v50 = 1;
LABEL_20:
    uint64_t v51 = v46;
LABEL_36:
    swift_bridgeObjectRetain();
    goto LABEL_37;
  }
  BOOL v57 = v45 == 1701080931 && v46 == 0xE400000000000000;
  if (v57 || (sub_1000DD6B0() & 1) != 0)
  {
    sub_1000DD624();
    char v50 = 2;
    goto LABEL_20;
  }
  BOOL v58 = v45 == 0x6B6361626E6977 && v46 == 0xE700000000000000;
  if (v58 || (sub_1000DD6B0() & 1) != 0)
  {
    sub_1000DD624();
    char v50 = 3;
    goto LABEL_20;
  }
LABEL_22:
  uint64_t v43 = 0;
  uint64_t v45 = 0;
  unint64_t v48 = 0;
  uint64_t v51 = 0;
  char v50 = -1;
LABEL_37:
  swift_bridgeObjectRelease();
  *(void *)uint64_t v33 = v43;
  *(void *)(v33 + 8) = v45;
  *(void *)(v33 + 16) = v48;
  *(void *)(v33 + 24) = v51;
  *(unsigned char *)(v33 + 32) = v50;
  sub_10001B500();
}

uint64_t sub_1000D9ABC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1000D6528();
  sub_1000ACA20();
  switch(v4)
  {
    case 1:
      sub_1000ACA44();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      sub_1000DD590();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      goto LABEL_7;
    default:
LABEL_4:
      char v5 = sub_1000DCFB0();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return sub_1000DC340(a1, (void (*)(void, void, void, void, void))sub_1000DC32C);
      }
LABEL_7:
      sub_1000DBF98(a1, (uint64_t)v11, &qword_10030FC28);
      if (v12 == 255)
      {
        sub_1000DD29C();
      }
      else
      {
        sub_1000CE8A4(v11, (uint64_t)v13);
        uint64_t v7 = sub_1000D9C38();
        uint64_t v9 = v8;
        sub_1000DC340(a1, (void (*)(void, void, void, void, void))sub_1000DC32C);
        uint64_t v10[3] = &type metadata for String;
        v10[0] = v7;
        v10[1] = v9;
      }
      sub_1001E7578((uint64_t)v10, 18);
      uint64_t result = sub_1000DC380((uint64_t)v10, (uint64_t *)&unk_100319510);
      *(void *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) |= 3uLL;
      return result;
  }
}

uint64_t sub_1000D9C38()
{
  sub_1000CE8A4(v0, (uint64_t)&v9);
  switch(v12)
  {
    case 1:
      uint64_t v3 = v10;
      uint64_t v4 = v11;
      sub_1000DD684();
      goto LABEL_6;
    case 2:
      uint64_t v3 = v10;
      uint64_t v4 = v11;
      sub_1000DD674();
      goto LABEL_6;
    case 3:
      uint64_t v3 = v10;
      uint64_t v4 = v11;
      sub_1000AD01C();
LABEL_6:
      uint64_t v8 = v6;
      sub_10024E800(v5);
      sub_1000ACC1C();
      v1._uint64_t countAndFlagsBits = v3;
      v1._object = v4;
      goto LABEL_9;
    case 4:
      Swift::String v1 = v9;
      uint64_t v2 = 979661939;
      goto LABEL_8;
    default:
      sub_1000DD6CC();
LABEL_8:
      uint64_t v8 = v2;
LABEL_9:
      sub_10024E800(v1);
      return v8;
  }
}

uint64_t sub_1000D9D34()
{
  sub_1000D6528();
  sub_1000DD040();
  switch(v1)
  {
    case 1:
      sub_1000DCF80();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      sub_1000DD064();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      goto LABEL_7;
    default:
LABEL_4:
      sub_1000DCFB0();
      sub_1000DD7B8();
      if ((v0 & 1) == 0) {
        return 4;
      }
LABEL_7:
      uint64_t v2 = sub_1000D939C(35);
      if (!v3) {
        return 4;
      }
      return sub_100174F08(v2, v3);
  }
}

void sub_1000D9E08(char a1)
{
  sub_1000D6528();
  sub_1000DD5AC();
  switch(v2)
  {
    case 1:
      sub_1000DD2D8();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      goto LABEL_7;
    default:
LABEL_4:
      char v3 = sub_1000DCFB0();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_7:
        unint64_t v4 = 0xE400000000000000;
        uint64_t v5 = 1701736302;
        switch(a1)
        {
          case 1:
            uint64_t v5 = 1701147238;
            goto LABEL_11;
          case 2:
            unint64_t v4 = 0xEA00000000006F47;
            uint64_t v5 = 0x756F597341796170;
            goto LABEL_11;
          case 3:
            unint64_t v4 = 0xEA0000000000746ELL;
            uint64_t v5 = 0x6F72467055796170;
            goto LABEL_11;
          case 4:
            sub_1000DD29C();
            goto LABEL_13;
          default:
LABEL_11:
            void v6[3] = &type metadata for String;
            v6[0] = v5;
            v6[1] = v4;
LABEL_13:
            sub_1001E7578((uint64_t)v6, 35);
            sub_1000DC380((uint64_t)v6, (uint64_t *)&unk_100319510);
            sub_1000DD6DC(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
            break;
        }
      }
      return;
  }
}

void sub_1000D9F9C(unint64_t a1, unint64_t a2, unint64_t a3)
{
  if ((a3 & 0x100000000) != 0)
  {
    sub_1000DD29C();
  }
  else
  {
    __int16 v4 = a3;
    __int16 v5 = a2;
    int v6 = a1;
    unint64_t v7 = HIDWORD(a1);
    unint64_t v8 = HIWORD(a1);
    unint64_t v9 = a2 >> 16;
    unint64_t v10 = HIDWORD(a2);
    unint64_t v11 = HIWORD(a2);
    unint64_t v12 = a3 >> 16;
    type metadata accessor for Decimal(0);
    uint64_t v23 = v13;
    int v14 = v6;
    __int16 v15 = v7;
    __int16 v16 = v8;
    __int16 v17 = v5;
    __int16 v18 = v9;
    __int16 v19 = v10;
    __int16 v20 = v11;
    __int16 v21 = v4;
    __int16 v22 = v12;
  }
  sub_1001E7578((uint64_t)&v14, 21);
  sub_1000DC380((uint64_t)&v14, (uint64_t *)&unk_100319510);
  if ((*(void *)(v3 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) & 2) == 0) {
    sub_1000DD8E4(OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
  }
}

uint64_t sub_1000DA070()
{
  NSString v1 = sub_10024E6A0();
  [v0 BOOLValueForProperty:v1];

  return sub_1000D92CC(24) & 1;
}

uint64_t sub_1000DA0D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    v3[3] = &type metadata for String;
    v3[0] = a1;
    v3[1] = a2;
  }
  else
  {
    sub_1000DD29C();
  }
  sub_1001E7578((uint64_t)v3, 28);
  return sub_1000DC380((uint64_t)v3, (uint64_t *)&unk_100319510);
}

void sub_1000DA128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10001B51C();
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  sub_1000D6528();
  sub_1000ACA20();
  switch(v29)
  {
    case 1:
      sub_1000ACA44();
      goto LABEL_4;
    case 2:
      sub_1000DCF70();
      sub_1000DD590();
      goto LABEL_4;
    case 3:
      sub_1000DD1F4();
      goto LABEL_9;
    default:
LABEL_4:
      char v30 = sub_1000DCFB0();
      swift_bridgeObjectRelease();
      if (v30)
      {
LABEL_9:
        if (v28)
        {
          uint64_t v32 = *(void *)(v28 + 16);
          if (v32)
          {
            sub_1000389BC();
            uint64_t v33 = (unsigned __int8 *)(v28 + 64);
            do
            {
              uint64_t v35 = *((void *)v33 - 4);
              uint64_t v34 = *((void *)v33 - 3);
              uint64_t v37 = *((void *)v33 - 2);
              uint64_t v36 = *((void *)v33 - 1);
              int v38 = *v33;
              v33 += 40;
              switch(v38)
              {
                case 1:
                  sub_1000DD684();
                  *(void *)&a11 = v49;
                  uint64_t v50 = sub_1000DCFCC();
                  sub_1000AC290(v50, v51, v52, v53, 1u);
                  sub_1000DD19C();
                  sub_1000ACC1C();
                  sub_1000DD774();
                  uint64_t v44 = v35;
                  uint64_t v45 = v34;
                  uint64_t v46 = v37;
                  uint64_t v47 = v36;
                  unsigned __int8 v48 = 1;
                  break;
                case 2:
                  sub_1000DD674();
                  *(void *)&a11 = v54;
                  uint64_t v55 = sub_1000DCFCC();
                  sub_1000AC290(v55, v56, v57, v58, 2u);
                  sub_1000DD19C();
                  sub_1000ACC1C();
                  sub_1000DD774();
                  uint64_t v44 = v35;
                  uint64_t v45 = v34;
                  uint64_t v46 = v37;
                  uint64_t v47 = v36;
                  unsigned __int8 v48 = 2;
                  break;
                case 3:
                  sub_1000AD01C();
                  *(void *)&a11 = v59;
                  uint64_t v60 = sub_1000DCFCC();
                  sub_1000AC290(v60, v61, v62, v63, 3u);
                  sub_1000DD19C();
                  sub_1000ACC1C();
                  sub_1000DD774();
                  uint64_t v44 = v35;
                  uint64_t v45 = v34;
                  uint64_t v46 = v37;
                  uint64_t v47 = v36;
                  unsigned __int8 v48 = 3;
                  break;
                case 4:
                  *(void *)&a11 = 979661939;
                  uint64_t v64 = sub_1000DCFCC();
                  sub_1000AC290(v64, v65, v66, v67, 4u);
                  sub_1000DD19C();
                  uint64_t v44 = v35;
                  uint64_t v45 = v34;
                  uint64_t v46 = v37;
                  uint64_t v47 = v36;
                  unsigned __int8 v48 = 4;
                  break;
                default:
                  sub_1000DD6CC();
                  *(void *)&a11 = v39;
                  uint64_t v40 = sub_1000DCFCC();
                  sub_1000AC290(v40, v41, v42, v43, 0);
                  sub_1000DD19C();
                  uint64_t v44 = v35;
                  uint64_t v45 = v34;
                  uint64_t v46 = v37;
                  uint64_t v47 = v36;
                  unsigned __int8 v48 = 0;
                  break;
              }
              sub_1000AC2FC(v44, v45, v46, v47, v48);
              long long v68 = a11;
              unint64_t v70 = _swiftEmptyArrayStorage[2];
              unint64_t v69 = _swiftEmptyArrayStorage[3];
              if (v70 >= v69 >> 1)
              {
                sub_1000DD64C(v69);
                sub_1000389BC();
              }
              _swiftEmptyArrayStorage[2] = v70 + 1;
              *(_OWORD *)&_swiftEmptyArrayStorage[2 * v70 + 4] = v68;
              --v32;
            }
            while (v32);
          }
          swift_bridgeObjectRelease();
          *((void *)&a12 + 1) = sub_100019524(&qword_100309410);
          *(void *)&a11 = _swiftEmptyArrayStorage;
        }
        else
        {
          a11 = 0u;
          a12 = 0u;
        }
        sub_1001E7578((uint64_t)&a11, 19);
        sub_1000DC380((uint64_t)&a11, (uint64_t *)&unk_100319510);
        uint64_t v71 = *(void *)(v24 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels);
        if ((v71 & 1) == 0) {
          *(void *)(v24 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = v71 | 1;
        }
        sub_10001B500();
      }
      else
      {
        sub_10001B500();
        swift_bridgeObjectRelease();
      }
      return;
  }
}

uint64_t sub_1000DA45C()
{
  char v0 = sub_1000D6E60();
  if (!v0) {
    return 0;
  }
  sub_1000D8628((uint64_t)v0, (uint64_t)v11);
  uint64_t v1 = swift_bridgeObjectRelease();
  sub_1000DD550(v1, v2, &qword_10030FC28, v3, v4, v5, v6, v7, v11[0], v11[1], v11[2], v11[3], v11[4], v12);
  sub_1000DD544();
  if (v8) {
    return 0;
  }
  sub_1000CE8A4(&v12, (uint64_t)v13);
  sub_1000CE8A4(v13, (uint64_t)v14);
  if (v15 == 4) {
    uint64_t v9 = sub_1000FE9DC(v14[0], v14[1]);
  }
  else {
    uint64_t v9 = 0;
  }
  sub_1000DC340((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1000DC32C);
  return v9;
}

uint64_t sub_1000DA518(uint64_t a1)
{
  uint64_t v4 = sub_1000D96B0(v16, a1);
  sub_1000DD550((uint64_t)v4, v5, &qword_10030FC28, v6, v7, v8, v9, v10, v16[0], v16[1], v16[2], v16[3], v16[4], v17);
  sub_1000DD544();
  if (v11) {
    return 0;
  }
  sub_1000CE8A4(&v17, (uint64_t)v18);
  sub_1000CE8A4(v18, (uint64_t)v19);
  switch(v20)
  {
    case 1:
      sub_1000DD434();
      sub_1000DDA30();
      if (!v1) {
        goto LABEL_12;
      }
      uint64_t v14 = sub_100026CB8(v3, v2);
      goto LABEL_11;
    case 2:
      sub_1000DD434();
      sub_1000DDA30();
      if (!v1) {
        goto LABEL_12;
      }
      uint64_t v14 = sub_100026F0C(v3, v2);
      goto LABEL_11;
    case 3:
      sub_1000DD434();
      sub_1000DDA30();
      if (!v1)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v14 = sub_100026F74(v3, v2);
LABEL_11:
      uint64_t v13 = v14;
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 4:
      sub_1000DC340((uint64_t)v16, (void (*)(void, void, void, void, void))sub_1000DC32C);
      return 0;
    default:
      uint64_t v12 = sub_1000FE9DC(v19[0], v19[1]);
      sub_1000DC340((uint64_t)v16, (void (*)(void, void, void, void, void))sub_1000DC32C);
      if (!v12) {
        return 0;
      }
      uint64_t v13 = *(void *)(v12 + 136);
      swift_retain();
      swift_release();
      return v13;
  }
  return v13;
}

void *sub_1000DA69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    sub_10003C4F8();
    uint64_t result = (void *)sub_1000DD1D0();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      sub_100019524(&qword_10030FC60);
      uint64_t v6 = (void *)sub_10024EB00();
      uint64_t v7 = v6;
      _OWORD v6[2] = a3;
      void v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_retain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_retain();
      }
    }
    else
    {
      swift_release();
      return &_swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

void *sub_1000DA780(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    uint64_t result = (void *)sub_1000DD1D0();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return &_swiftEmptyArrayStorage;
    }
    uint64_t v4 = sub_10024EB00();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (void *)v4;
  }
  return result;
}

uint64_t sub_1000DA81C(long long *a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (a2)
    {
      uint64_t v4 = (void *)sub_10024EB00();
      long long v4[2] = a2;
      sub_1000CE8A4(a1, (uint64_t)(v4 + 4));
      if (a2 == 1) {
        return (uint64_t)v4;
      }
      sub_1000CE8A4(a1, (uint64_t)(v4 + 9));
      uint64_t v5 = a2 - 2;
      if (a2 == 2)
      {
        uint64_t v6 = sub_1000AC290;
      }
      else
      {
        uint64_t v7 = (uint64_t)(v4 + 14);
        do
        {
          uint64_t v6 = sub_1000AC290;
          sub_1000DC340((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1000AC290);
          sub_1000CE8A4(a1, v7);
          v7 += 40;
          --v5;
        }
        while (v5);
      }
    }
    else
    {
      uint64_t v6 = sub_1000AC2FC;
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    sub_1000DC340((uint64_t)a1, (void (*)(void, void, void, void, void))v6);
    return (uint64_t)v4;
  }
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

void *sub_1000DA96C(char a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    uint64_t result = (void *)sub_1000DD1D0();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v4 = sub_10024EB00();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return (void *)v4;
  }
  return result;
}

uint64_t sub_1000DAA08()
{
  sub_1000CE8A4(v0, (uint64_t)v2);
  return sub_1000D9C38();
}

id sub_1000DAA40()
{
  sub_1000DD71C();
  Class isa = v1;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  if (v1)
  {
    uint64_t v6 = *((void *)v1 + 2);
    if (v6)
    {
      uint64_t v15 = v0;
      swift_bridgeObjectRetain();
      sub_1000389BC();
      uint64_t v7 = 0;
      do
      {
        unint64_t v8 = sub_100152BBC(*((unsigned char *)isa + v7 + 32));
        uint64_t v10 = v9;
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
          sub_1000389BC();
        }
        ++v7;
        _swiftEmptyArrayStorage[2] = v11 + 1;
        uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
        v12[4] = v8;
        v12[5] = v10;
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
      uint64_t v3 = v15;
    }
    Class isa = sub_10024EA80().super.isa;
    swift_bridgeObjectRelease();
  }
  id v13 = [(id)swift_getObjCClassFromMetadata() queryOnConnection:v5 predicate:v3 orderingProperties:isa];

  return v13;
}

uint64_t sub_1000DAB88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v8.receiver = v2;
  v8.super_class = ObjectType;
  objc_msgSendSuper2(&v8, "copyWithZone:", a1);
  sub_10024F250();
  swift_unknownObjectRelease();
  uint64_t result = swift_dynamicCast();
  *(void *)(v7 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) = *(void *)&v2[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels];
  a2[3] = ObjectType;
  *a2 = v7;
  return result;
}

id sub_1000DAC98()
{
  sub_1000DD71C();
  uint64_t v15 = v1;
  uint64_t v16 = v2;
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___bundleID];
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = &v0[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___id];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  objc_super v8 = &v0[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID];
  *objc_super v8 = 0;
  v8[1] = 0;
  uint64_t v9 = &v0[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___purchaseDate];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  v0[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___type] = 4;
  Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  Class v11 = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  v14.receiver = v0;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, "initWithDatabaseID:propertyValues:externalPropertyValues:", v4, isa, v11);

  return v12;
}

id sub_1000DAE7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Transaction()
{
  return self;
}

ValueMetadata *type metadata accessor for Transaction.UpdatedModels()
{
  return &type metadata for Transaction.UpdatedModels;
}

unint64_t sub_1000DAF40()
{
  unint64_t result = qword_10030FBB8;
  if (!qword_10030FBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FBB8);
  }
  return result;
}

unint64_t sub_1000DAF90()
{
  unint64_t result = qword_10030FBC0;
  if (!qword_10030FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FBC0);
  }
  return result;
}

unint64_t sub_1000DAFE0()
{
  unint64_t result = qword_10030FBC8;
  if (!qword_10030FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FBC8);
  }
  return result;
}

unint64_t sub_1000DB030()
{
  unint64_t result = qword_10030FBD0;
  if (!qword_10030FBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FBD0);
  }
  return result;
}

uint64_t sub_1000DB07C()
{
  sub_1000DD71C();
  uint64_t v134 = v1;
  uint64_t v135 = v2;
  swift_getObjectType();
  uint64_t v131 = sub_10024FCB0();
  sub_10001B550();
  uint64_t v130 = v3;
  __chkstk_darwin(v4, v5);
  sub_1000589AC();
  uint64_t v129 = v6;
  uint64_t v7 = sub_100019524(&qword_10030FC18);
  uint64_t v8 = sub_100026018(v7);
  __chkstk_darwin(v8, v9);
  sub_1000589AC();
  uint64_t v128 = v10;
  uint64_t v11 = sub_10024E030();
  sub_10001B550();
  uint64_t v127 = v12;
  __chkstk_darwin(v13, v14);
  sub_1000589AC();
  uint64_t v126 = v15;
  sub_100019524((uint64_t *)&unk_100318D40);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10025E590;
  *(void *)(v16 + 32) = 0x4449656C646E7562;
  *(void *)(v16 + 40) = 0xE800000000000000;
  long long v17 = v0;
  *(void *)(v16 + 48) = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___bundleID, 2);
  *(void *)(v16 + 56) = v18;
  *(void *)(v16 + 72) = &type metadata for String;
  *(void *)(v16 + 80) = 25705;
  *(void *)(v16 + 88) = 0xE200000000000000;
  *(void *)(v16 + 96) = sub_1000D5AE4();
  sub_1000DD8F0();
  *(void *)(v16 + 120) = &type metadata for UInt;
  *(void *)(v16 + 128) = v19;
  *(void *)(v16 + 136) = 0xE900000000000044;
  *(void *)(v16 + 144) = sub_1000D429C(&OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction____lazy_storage___productID, 9);
  *(void *)(v16 + 152) = v20;
  sub_1000DD8D0();
  *(void *)(v16 + 168) = &type metadata for String;
  *(void *)(v16 + 176) = v21;
  *(void *)(v16 + 184) = 0xEC00000065746144;
  sub_1000D453C();
  *(void *)(v16 + 216) = v11;
  sub_1000709B8((uint64_t *)(v16 + 192));
  sub_10024DF60();
  *(void *)(v16 + 224) = 1701869940;
  *(void *)(v16 + 232) = 0xE400000000000000;
  *(unsigned char *)(v16 + 240) = sub_1000D6528();
  *(void *)(v16 + 264) = &type metadata for OctaneIAPType;
  *(void *)(v16 + 272) = 0x6E6F69746361;
  *(void *)(v16 + 280) = 0xE600000000000000;
  *(unsigned char *)(v16 + 288) = sub_1000D627C();
  *(void *)(v16 + 312) = &type metadata for Transaction.Action;
  *(void *)(v16 + 320) = 0x6C616E696769726FLL;
  *(void *)(v16 + 328) = 0xEA00000000004449;
  uint64_t v22 = sub_1000D9484(8);
  char v24 = v23;
  uint64_t v25 = sub_100019524(&qword_10030C9E8);
  *(void *)(v16 + 336) = v22;
  *(unsigned char *)(v16 + 344) = v24 & 1;
  uint64_t v124 = v25;
  *(void *)(v16 + 360) = v25;
  *(void *)(v16 + 368) = 0xD000000000000014;
  sub_1000DCFA4();
  *(void *)(v16 + 376) = v26;
  sub_1000D9484(12);
  char v28 = v27;
  uint64_t v29 = sub_100019524((uint64_t *)&unk_10030FD70);
  *(void *)(v16 + 408) = v29;
  char v30 = sub_1000709B8((uint64_t *)(v16 + 384));
  if (v28)
  {
    uint64_t v31 = 1;
  }
  else
  {
    sub_10024DF60();
    uint64_t v31 = 0;
  }
  uint64_t v32 = 1;
  sub_1000195B4((uint64_t)v30, v31, 1, v11);
  strcpy((char *)(v16 + 416), "askToBuyStatus");
  *(unsigned char *)(v16 + 431) = -18;
  char v33 = sub_1000D62B4();
  uint64_t v34 = sub_100019524(&qword_10030FC20);
  *(unsigned char *)(v16 + 432) = v33;
  *(void *)(v16 + 456) = v34;
  *(void *)(v16 + 464) = 0x61446C65636E6163;
  *(void *)(v16 + 472) = 0xEA00000000006574;
  uint64_t v35 = sub_1000D9484(3);
  char v37 = v36;
  uint64_t v38 = sub_100019524(&qword_10030C9D8);
  *(void *)(v16 + 480) = v35;
  *(unsigned char *)(v16 + 488) = v37 & 1;
  *(void *)(v16 + 504) = v38;
  strcpy((char *)(v16 + 512), "expirationDate");
  *(unsigned char *)(v16 + 527) = -18;
  sub_1000D9484(4);
  char v40 = v39;
  uint64_t v125 = v29;
  *(void *)(v16 + 552) = v29;
  uint64_t v41 = sub_1000709B8((uint64_t *)(v16 + 528));
  if ((v40 & 1) == 0)
  {
    sub_10024DF60();
    uint64_t v32 = 0;
  }
  sub_1000195B4((uint64_t)v41, v32, 1, v11);
  *(void *)(v16 + 560) = 0x64656873696E6966;
  *(void *)(v16 + 568) = 0xE800000000000000;
  char v42 = sub_1000D640C();
  *(void *)(v16 + 600) = &type metadata for Bool;
  *(unsigned char *)(v16 + 576) = v42 & 1;
  sub_1000DD35C();
  uint64_t v44 = v43 - 3;
  *(void *)(v16 + 608) = v43 - 3;
  sub_1000DCFA4();
  *(void *)(v16 + 616) = v45;
  char v46 = sub_1000D6704();
  *(void *)(v16 + 648) = &type metadata for Bool;
  *(unsigned char *)(v16 + 624) = v46 & 1;
  *(void *)(v16 + 656) = 0xD000000000000013;
  sub_1000DCFA4();
  *(void *)(v16 + 664) = v47;
  char v48 = sub_1000D9674();
  *(void *)(v16 + 696) = sub_100019524(&qword_10030BB18);
  *(unsigned char *)(v16 + 672) = v48;
  *(void *)(v16 + 704) = 0x6574617473;
  *(void *)(v16 + 712) = 0xE500000000000000;
  char v49 = sub_1000D847C();
  *(void *)(v16 + 744) = &type metadata for Transaction.State;
  *(unsigned char *)(v16 + 720) = v49;
  *(void *)(v16 + 752) = 0xD000000000000013;
  sub_1000DCFA4();
  *(void *)(v16 + 760) = v50;
  uint64_t v51 = sub_1000D939C(15);
  uint64_t v53 = v52;
  uint64_t v54 = sub_100019524(&qword_10030AA30);
  *(void *)(v16 + 792) = v54;
  *(void *)(v16 + 768) = v51;
  *(void *)(v16 + 776) = v53;
  sub_1000DDA48();
  *(void *)(v16 + 800) = v55;
  *(void *)(v16 + 808) = 0xE800000000000000;
  uint64_t v56 = sub_1000D64FC();
  *(void *)(v16 + 840) = &type metadata for Int;
  *(void *)(v16 + 816) = v56;
  sub_1000DD894();
  *(void *)(v16 + 848) = v57;
  sub_1000DD97C();
  *(void *)(v16 + 856) = v58;
  uint64_t v59 = sub_1000D4218();
  *(void *)(v16 + 888) = &type metadata for Bool;
  *(unsigned char *)(v16 + 864) = v59 & 1;
  *(void *)(v16 + 896) = 0x726566666FLL;
  *(void *)(v16 + 904) = 0xE500000000000000;
  sub_1000D96B0(v132, v59);
  *(void *)(v16 + 936) = sub_100019524(&qword_10030FC28);
  uint64_t v60 = swift_allocObject();
  *(void *)(v16 + 912) = v60;
  sub_1000DBF98((uint64_t)v132, v60 + 16, &qword_10030FC28);
  *(void *)(v16 + 944) = v44;
  sub_1000DCFA4();
  *(void *)(v16 + 952) = v61;
  LOBYTE(v51) = sub_1000D9D34();
  *(void *)(v16 + 984) = sub_100019524(&qword_10030FC30);
  *(unsigned char *)(v16 + 960) = v51;
  *(void *)(v16 + 992) = 0x6F726665726F7473;
  *(void *)(v16 + 1000) = 0xEA0000000000746ELL;
  sub_1000D4318();
  *(void *)(v16 + 1032) = sub_100019524(&qword_100309EA0);
  uint64_t v62 = swift_allocObject();
  *(void *)(v16 + 1008) = v62;
  sub_1000DBF98((uint64_t)&v133, v62 + 16, &qword_100309EA0);
  *(void *)(v16 + 1040) = 0x6563697270;
  *(void *)(v16 + 1048) = 0xE500000000000000;
  sub_1000D44D4();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  *(void *)(v16 + 1080) = sub_100019524(&qword_10030FC38);
  *(void *)(v16 + 1056) = v64;
  *(void *)(v16 + 1064) = v66;
  *(_DWORD *)(v16 + 1072) = v68;
  *(unsigned char *)(v16 + 1076) = BYTE4(v68) & 1;
  *(void *)(v16 + 1088) = 0x756F636341707061;
  *(void *)(v16 + 1096) = 0xEF6E656B6F54746ELL;
  *(void *)(v16 + 1128) = sub_100019524(&qword_10030C100);
  unint64_t v69 = sub_1000709B8((uint64_t *)(v16 + 1104));
  sub_1000D6DE0((uint64_t)v69);
  *(void *)(v16 + 1136) = 0x616470557473616CLL;
  *(void *)(v16 + 1144) = 0xEB00000000646574;
  sub_1000D8774();
  *(void *)(v16 + 1176) = v11;
  sub_1000709B8((uint64_t *)(v16 + 1152));
  sub_10024DF60();
  *(void *)(v16 + 1184) = 0x6461726770557369;
  *(void *)(v16 + 1192) = 0xEA00000000006465;
  char v70 = sub_1000DA070();
  *(void *)(v16 + 1224) = &type metadata for Bool;
  *(unsigned char *)(v16 + 1200) = v70 & 1;
  *(void *)(v16 + 1232) = 0xD000000000000012;
  sub_1000DCFA4();
  *(void *)(v16 + 1240) = v71;
  uint64_t v72 = sub_1000D9484(25);
  *(void *)(v16 + 1272) = v124;
  *(void *)(v16 + 1248) = v72;
  *(unsigned char *)(v16 + 1256) = v73 & 1;
  *(void *)(v16 + 1280) = 0xD000000000000013;
  sub_1000DCFA4();
  *(void *)(v16 + 1288) = v74;
  char v75 = sub_1000D6DB0();
  *(void *)(v16 + 1320) = &unk_1002E46A0;
  *(unsigned char *)(v16 + 1296) = v75;
  *(void *)(v16 + 1328) = v44;
  sub_1000DCFA4();
  *(void *)(v16 + 1336) = v76;
  LOBYTE(v64) = sub_1000D4238();
  *(void *)(v16 + 1368) = sub_100019524(&qword_10030FC40);
  *(unsigned char *)(v16 + 1344) = v64;
  *(void *)(v16 + 1376) = 0xD000000000000016;
  sub_1000DCFA4();
  *(void *)(v16 + 1384) = v77;
  uint64_t v78 = sub_1000D939C(28);
  *(void *)(v16 + 1416) = v54;
  *(void *)(v16 + 1392) = v78;
  *(void *)(v16 + 1400) = v79;
  *(void *)(v16 + 1424) = 0x52676E696C6C6962;
  *(void *)(v16 + 1432) = 0xEF646E4579727465;
  *(void *)(v16 + 1464) = v125;
  uint64_t v80 = sub_1000709B8((uint64_t *)(v16 + 1440));
  sub_1000D797C(30, (uint64_t)v80);
  *(void *)(v16 + 1472) = 0xD00000000000001CLL;
  sub_1000DCFA4();
  *(void *)(v16 + 1480) = v81;
  *(void *)(v16 + 1512) = v125;
  long long v83 = sub_1000709B8(v82);
  sub_1000D797C(29, (uint64_t)v83);
  *(void *)(v16 + 1520) = 0x6553736568737570;
  *(void *)(v16 + 1528) = 0xEA0000000000746ELL;
  uint64_t v84 = sub_1000D78F4();
  LOBYTE(v66) = v85;
  *(void *)(v16 + 1560) = sub_100019524(&qword_10030FC48);
  *(void *)(v16 + 1536) = v84;
  *(unsigned char *)(v16 + 1544) = v66 & 1;
  *(void *)(v16 + 1568) = 0xD000000000000013;
  sub_1000DCFA4();
  *(void *)(v16 + 1576) = v86;
  LOBYTE(v84) = sub_1000D55F8();
  *(void *)(v16 + 1608) = sub_100019524(&qword_10030C9F8);
  *(unsigned char *)(v16 + 1584) = v84;
  *(void *)(v16 + 1616) = 0xD00000000000001BLL;
  sub_1000DCFA4();
  *(void *)(v16 + 1624) = v87;
  *(void *)(v16 + 1656) = v125;
  uint64_t v89 = sub_1000709B8(v88);
  sub_1000D797C(33, (uint64_t)v89);
  *(void *)(v16 + 1664) = 0xD000000000000012;
  sub_1000DCFA4();
  *(void *)(v16 + 1672) = v90;
  uint64_t v91 = sub_1000D76BC();
  LOBYTE(v66) = v92;
  uint64_t v93 = sub_100019524(&qword_10030C9F0);
  *(void *)(v16 + 1704) = v93;
  *(void *)(v16 + 1680) = v91;
  *(unsigned char *)(v16 + 1688) = v66 & 1;
  strcpy((char *)(v16 + 1712), "adHocOfferID");
  *(unsigned char *)(v16 + 1725) = 0;
  *(_WORD *)(v16 + 1726) = -5120;
  uint64_t v94 = sub_1000D6724(v93);
  *(void *)(v16 + 1752) = v54;
  *(void *)(v16 + 1728) = v94;
  *(void *)(v16 + 1736) = v95;
  strcpy((char *)(v16 + 1760), "winbackOfferID");
  *(unsigned char *)(v16 + 1775) = -18;
  uint64_t v96 = sub_1000D67C0(v94);
  *(void *)(v16 + 1800) = v54;
  *(void *)(v16 + 1776) = v96;
  *(void *)(v16 + 1784) = v97;
  strcpy((char *)(v16 + 1808), "nextRenewalIDs");
  *(unsigned char *)(v16 + 1823) = -18;
  uint64_t v98 = sub_1000D6E60();
  *(void *)(v16 + 1848) = sub_100019524(&qword_10030FC50);
  *(void *)(v16 + 1824) = v98;
  *(void *)(v16 + 1856) = 0x7541646C756F6873;
  *(void *)(v16 + 1864) = 0xEF77656E65726F74;
  uint64_t v99 = (uint64_t)sub_1000D6C10();
  *(void *)(v16 + 1896) = &type metadata for Bool;
  *(unsigned char *)(v16 + 1872) = v99 & 1;
  strcpy((char *)(v16 + 1904), "hasIntroOffer");
  *(_WORD *)(v16 + 1918) = -4864;
  BOOL v100 = sub_1000D6564(v99);
  *(void *)(v16 + 1944) = &type metadata for Bool;
  *(unsigned char *)(v16 + 1920) = v100;
  *(void *)(v16 + 1952) = 0xD000000000000012;
  sub_1000DCFA4();
  *(void *)(v16 + 1960) = v101;
  uint64_t v102 = sub_1000D563C();
  *(void *)(v16 + 1992) = v54;
  *(void *)(v16 + 1968) = v102;
  *(void *)(v16 + 1976) = v103;
  *(void *)(v16 + 2000) = 0x6572697078457369;
  sub_1000DD97C();
  *(void *)(v16 + 2008) = v104;
  BOOL v105 = sub_1000D84C4(4);
  *(void *)(v16 + 2040) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2016) = v105;
  *(void *)(v16 + 2048) = 0x6C65636E61437369;
  *(void *)(v16 + 2056) = 0xEB0000000064656CLL;
  BOOL v106 = sub_1000D84C4(3);
  *(void *)(v16 + 2088) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2064) = v106;
  *(void *)(v16 + 2096) = v44;
  sub_1000DCFA4();
  *(void *)(v16 + 2104) = v107;
  char v108 = sub_1000D5828();
  *(void *)(v16 + 2136) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2112) = v108 & 1;
  *(void *)(v16 + 2144) = 0xD000000000000016;
  sub_1000DCFA4();
  *(void *)(v16 + 2152) = v109;
  sub_10024E010();
  LOBYTE(v54) = sub_1000D56E0();
  uint64_t v110 = *(void (**)(void))(v127 + 8);
  sub_1000DD59C();
  v110();
  *(void *)(v16 + 2184) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2160) = v54 & 1;
  *(void *)(v16 + 2192) = 0xD000000000000011;
  sub_1000DCFA4();
  *(void *)(v16 + 2200) = v111;
  char v112 = sub_1000D779C(30);
  *(void *)(v16 + 2232) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2208) = v112 & 1;
  *(void *)(v16 + 2240) = 0xD00000000000001CLL;
  sub_1000DCFA4();
  *(void *)(v16 + 2248) = v113;
  char v114 = sub_1000D779C(29);
  *(void *)(v16 + 2280) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2256) = v114 & 1;
  *(void *)(v16 + 2288) = 0xD000000000000013;
  sub_1000DCFA4();
  *(void *)(v16 + 2296) = v115;
  char v116 = sub_1000D685C();
  *(void *)(v16 + 2328) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2304) = v116 & 1;
  *(void *)(v16 + 2336) = 0xD00000000000001ALL;
  sub_1000DCFA4();
  *(void *)(v16 + 2344) = v117;
  char v118 = sub_1000D642C();
  *(void *)(v16 + 2376) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2352) = v118 & 1;
  *(void *)(v16 + 2384) = 0x6576697463417369;
  *(void *)(v16 + 2392) = 0xE800000000000000;
  sub_10024E010();
  LOBYTE(v54) = sub_1000D5964();
  sub_1000DD59C();
  v110();
  *(void *)(v16 + 2424) = &type metadata for Bool;
  *(unsigned char *)(v16 + 2400) = v54 & 1;
  *(void *)(v16 + 2432) = 0xD000000000000017;
  sub_1000DCFA4();
  *(void *)(v16 + 2440) = v119;
  sub_10024E010();
  *(void *)(v16 + 2472) = v11;
  uint64_t v120 = sub_1000709B8((uint64_t *)(v16 + 2448));
  sub_1000D6CFC(v126, (uint64_t)v120);
  sub_1000DD59C();
  v110();
  strcpy((char *)(v16 + 2480), "updatedModels");
  *(_WORD *)(v16 + 2494) = -4864;
  uint64_t v121 = *(void *)&v17[OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels];
  *(void *)(v16 + 2520) = &type metadata for Transaction.UpdatedModels;
  *(void *)(v16 + 2496) = v121;
  uint64_t v122 = sub_10024FCA0();
  sub_1000195B4(v128, 1, 1, v122);
  (*(void (**)(uint64_t, void, uint64_t))(v130 + 104))(v129, enum case for Mirror.AncestorRepresentation.generated(_:), v131);
  return sub_10024FCE0();
}

uint64_t sub_1000DBEB8()
{
  return sub_1000DB07C();
}

_UNKNOWN **sub_1000DBEDC()
{
  return &off_10030FBF8;
}

_UNKNOWN **sub_1000DBEE8()
{
  return &off_10030FBD8;
}

uint64_t sub_1000DBEF4()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1000AC2FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1000DBF3C()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000DBF98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_10007A8C4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000DBFF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_25;
  }
  sub_100019524((uint64_t *)&unk_100318D60);
  uint64_t result = sub_10024F310();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    sub_10024FC00();
    swift_bridgeObjectRetain();
    sub_10024E780();
    uint64_t result = sub_10024FC70();
    uint64_t v9 = -1 << v3[32];
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *((void *)v3 + 6);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = sub_10024FA60(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = sub_10024FA60();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*((void *)v3 + 6) + 16 * v10);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *((void *)v3 + 2);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *((void *)v3 + 2) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000DC1C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_100019524(&qword_10030FC58);
  uint64_t result = sub_10024F310();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  while (v5 < *(void *)(a1 + 16))
  {
    Swift::UInt v7 = *(unsigned __int8 *)(a1 + 32 + v5);
    sub_10024FC00();
    sub_10024FC20(v7);
    uint64_t result = sub_10024FC70();
    uint64_t v8 = -1 << v3[32];
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
    uint64_t v13 = *((void *)v3 + 6);
    if (((1 << v9) & v11) != 0)
    {
      if (*(unsigned __int8 *)(v13 + v9) == v7) {
        goto LABEL_13;
      }
      uint64_t v14 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v14;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v13 + v9) == v7) {
          goto LABEL_13;
        }
      }
    }
    *(void *)(v6 + 8 * v10) = v12 | v11;
    *(unsigned char *)(v13 + v9) = v7;
    uint64_t v15 = *((void *)v3 + 2);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_18;
    }
    *((void *)v3 + 2) = v17;
LABEL_13:
    if (++v5 == v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000DC32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 0xFF) {
    return sub_1000AC2FC(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1000DC340(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000DC380(uint64_t a1, uint64_t *a2)
{
  sub_100019524(a2);
  sub_10007A8C4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_1000DC3D8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1000DC424(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for Transaction.PriceIncreaseStatus()
{
  return &type metadata for Transaction.PriceIncreaseStatus;
}

ValueMetadata *type metadata accessor for Transaction.TimeBasedEvents()
{
  return &type metadata for Transaction.TimeBasedEvents;
}

uint64_t destroy for Transaction.RenewalType(uint64_t a1)
{
  return sub_1000AC2FC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for Transaction.RenewalType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1000AC290(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for Transaction.RenewalType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1000AC290(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1000AC2FC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for Transaction.RenewalType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1000AC2FC(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Transaction.RenewalType(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Transaction.RenewalType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000DC67C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1000DC684(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Transaction.RenewalType()
{
  return &type metadata for Transaction.RenewalType;
}

unsigned char *_s25ASOctaneSupportXPCService11TransactionC19PriceIncreaseStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DC768);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transaction.State()
{
  return &type metadata for Transaction.State;
}

unsigned char *storeEnumTagSinglePayload for Transaction.AskToBuyStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DC86CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transaction.AskToBuyStatus()
{
  return &type metadata for Transaction.AskToBuyStatus;
}

unsigned char *storeEnumTagSinglePayload for Transaction.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DC970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transaction.Action()
{
  return &type metadata for Transaction.Action;
}

unsigned char *storeEnumTagSinglePayload for Transaction.RevocationReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DCA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transaction.RevocationReason()
{
  return &type metadata for Transaction.RevocationReason;
}

unint64_t sub_1000DCAB0()
{
  unint64_t result = qword_10030FC68;
  if (!qword_10030FC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC68);
  }
  return result;
}

unint64_t sub_1000DCB00()
{
  unint64_t result = qword_10030FC70;
  if (!qword_10030FC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC70);
  }
  return result;
}

unint64_t sub_1000DCB50()
{
  unint64_t result = qword_10030FC78;
  if (!qword_10030FC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC78);
  }
  return result;
}

unint64_t sub_1000DCBA0()
{
  unint64_t result = qword_10030FC80;
  if (!qword_10030FC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC80);
  }
  return result;
}

unint64_t sub_1000DCBF0()
{
  unint64_t result = qword_10030FC88;
  if (!qword_10030FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC88);
  }
  return result;
}

unint64_t sub_1000DCC40()
{
  unint64_t result = qword_10030FC90;
  if (!qword_10030FC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC90);
  }
  return result;
}

unint64_t sub_1000DCC90()
{
  unint64_t result = qword_10030FC98;
  if (!qword_10030FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FC98);
  }
  return result;
}

unint64_t sub_1000DCCE0()
{
  unint64_t result = qword_10030FCA0;
  if (!qword_10030FCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCA0);
  }
  return result;
}

unint64_t sub_1000DCD30()
{
  unint64_t result = qword_10030FCA8;
  if (!qword_10030FCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCA8);
  }
  return result;
}

unint64_t sub_1000DCD7C()
{
  unint64_t result = qword_10030FCB0;
  if (!qword_10030FCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCB0);
  }
  return result;
}

unint64_t sub_1000DCDC8()
{
  unint64_t result = qword_10030FCB8;
  if (!qword_10030FCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCB8);
  }
  return result;
}

unint64_t sub_1000DCE14()
{
  unint64_t result = qword_10030FCC0;
  if (!qword_10030FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCC0);
  }
  return result;
}

unint64_t sub_1000DCE60()
{
  unint64_t result = qword_10030FCC8;
  if (!qword_10030FCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCC8);
  }
  return result;
}

unint64_t sub_1000DCEAC()
{
  unint64_t result = qword_10030FCD0;
  if (!qword_10030FCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FCD0);
  }
  return result;
}

uint64_t sub_1000DCF40()
{
  return sub_10024FC00();
}

uint64_t sub_1000DCF58()
{
  return sub_10024E780();
}

unint64_t sub_1000DCF70()
{
  return 0xD000000000000017;
}

uint64_t sub_1000DCF80()
{
  return 0x75736E6F436E6F4ELL;
}

uint64_t sub_1000DCFB0()
{
  return sub_10024FA60();
}

uint64_t sub_1000DCFCC()
{
  return v0;
}

uint64_t sub_1000DCFE4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 216) = a1;
  return v2;
}

uint64_t sub_1000DD018@<X0>(uint64_t a1@<X8>)
{
  return sub_10020554C(v1 + 208, 0xD000000000000013, (a1 - 32) | 0x8000000000000000);
}

uint64_t sub_1000DD040()
{
  return 0x62616D75736E6F43;
}

uint64_t sub_1000DD070()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1000DD090()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1000DD0F8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000DD110()
{
  return sub_10024E780();
}

Swift::Int sub_1000DD118()
{
  return sub_1000D3E38();
}

uint64_t sub_1000DD120@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10020554C(v2 + 208, a1, (a2 - 32) | 0x8000000000000000);
}

uint64_t sub_1000DD140()
{
  return v0;
}

void sub_1000DD164()
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1000DD180()
{
  return sub_10024FA60();
}

void sub_1000DD19C()
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1000DD1D0()
{
  return sub_10024F660();
}

uint64_t sub_1000DD1F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DD254()
{
  return *(void *)(v0 + 32);
}

double sub_1000DD29C()
{
  return 0.0;
}

uint64_t sub_1000DD2A8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_10007A6EC(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t sub_1000DD2D8()
{
  return 0x75736E6F436E6F4ELL;
}

uint64_t sub_1000DD2FC()
{
  return v0 + 208;
}

uint64_t sub_1000DD308()
{
  return v0 + 208;
}

uint64_t sub_1000DD3BC()
{
  return sub_10024FA60();
}

uint64_t sub_1000DD3E8()
{
  return sub_10024FA60();
}

uint64_t sub_1000DD434()
{
  uint64_t v2 = *(void *)(v0 - 88);
  uint64_t v3 = *(void *)(v0 - 80);
  return sub_1000FE9DC(v2, v3);
}

uint64_t sub_1000DD468()
{
  return v0;
}

uint64_t sub_1000DD4A8()
{
  return v0;
}

uint64_t sub_1000DD508()
{
  return sub_10024E780();
}

Swift::Int sub_1000DD510()
{
  return sub_1000D3E38();
}

uint64_t sub_1000DD518()
{
  return sub_10024E780();
}

Swift::Int sub_1000DD520()
{
  return sub_1000D3E38();
}

uint64_t sub_1000DD528()
{
  return v0;
}

uint64_t sub_1000DD550(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return sub_1000DBF98((uint64_t)&a9, (uint64_t)&a14, a3);
}

uint64_t sub_1000DD568()
{
  return sub_10024E030();
}

uint64_t sub_1000DD5AC()
{
  return 0x62616D75736E6F43;
}

uint64_t sub_1000DD5C4()
{
  return sub_10024F380();
}

uint64_t sub_1000DD600()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1000DD60C()
{
  return swift_retain();
}

uint64_t sub_1000DD624()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_1000DD64C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1000DD664()
{
  return 0;
}

void sub_1000DD694()
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1000DD6B0()
{
  return sub_10024FA60();
}

void sub_1000DD6DC(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1) |= 3uLL;
}

uint64_t sub_1000DD6EC()
{
  return 0;
}

uint64_t sub_1000DD704()
{
  return 0x62616D75736E6F43;
}

void sub_1000DD734()
{
  v0[28] = 0;
  v0[29] = 0;
  v0[27] = 0;
}

void sub_1000DD774()
{
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1000DD7B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DD7D0()
{
  return sub_10024E780();
}

uint64_t sub_1000DD7F4()
{
  return sub_10024E780();
}

uint64_t sub_1000DD818()
{
  return sub_1000AC290(v3, v2, v1, v4, v0);
}

uint64_t sub_1000DD83C()
{
  return v0;
}

void sub_1000DD854(uint64_t a1, Swift::UInt32 a2)
{
  sub_10024FC50(a2);
}

uint64_t sub_1000DD86C()
{
  return v0;
}

uint64_t sub_1000DD87C()
{
  return v0;
}

void sub_1000DD8E4(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) = v1 | 2;
}

uint64_t sub_1000DD918@<X0>(int a1@<W8>)
{
  return a1 | (v1 << 8);
}

uint64_t sub_1000DD924(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

uint64_t sub_1000DD994(void *a1)
{
  return sub_1000D429C(a1, 9);
}

uint64_t sub_1000DD9AC()
{
  return 0x75736E6F436E6F4ELL;
}

unint64_t sub_1000DD9D4()
{
  return 0xD000000000000015;
}

uint64_t sub_1000DDA10()
{
  return v0 + 48;
}

uint64_t sub_1000DDA30()
{
  return swift_bridgeObjectRelease();
}

id sub_1000DDAA4()
{
  return *(id *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection);
}

uint64_t sub_1000DDB10(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection) = a1;
  return _objc_release_x1();
}

id sub_1000DDB24(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DatabaseSession();
  return objc_msgSendSuper2(&v3, "init");
}

void sub_1000DDB8C()
{
  sub_10003C984();
  uint64_t v48 = v4;
  uint64_t v49 = v0;
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v10 = sub_100026018(v9);
  __chkstk_darwin(v10, v11);
  sub_1000E2460();
  __chkstk_darwin(v12, v13);
  sub_1000E25E0();
  __chkstk_darwin(v14, v15);
  sub_1000E288C();
  uint64_t v16 = sub_100019524(&qword_10030C100);
  uint64_t v17 = sub_100026018(v16);
  __chkstk_darwin(v17, v18);
  sub_100025FE8();
  uint64_t v47 = sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  uint64_t v19 = *(void *)(v8 + 192);
  unint64_t v20 = *(void *)(v8 + 200);
  long long v70 = 0u;
  long long v71 = 0u;
  sub_1000E298C();
  sub_1000E2878();
  uint64_t v24 = sub_1000E220C(v3, v21, v22, v23);
  uint64_t v25 = sub_1000E2964();
  sub_1000195B4(v25, v26, v27, v24);
  sub_1000195B4(v2, 1, 1, v24);
  sub_1000195B4(v1, 1, 1, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000E236C();
  __int16 v57 = v28;
  sub_1000E2444();
  sub_1000E26D0();
  LOBYTE(v48) = 1;
  sub_1000E28BC();
  sub_1000E2130(v48, v6, v29, v30, v31, v32, v33, v34, v46, SHIBYTE(v46), v47, 1, v49, v50[0], BYTE1(v50[0]), v50[1], 1, v50[3], v51,
    v52,
    v53,
    v54,
    v55,
    v19,
    v20,
    0,
    v57,
    SHIBYTE(v57),
    (uint64_t)&v70,
    &v75,
    0,
    v60,
    v61,
    v62,
    v63[0],
    v63[1],
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    *((uint64_t *)&v70 + 1),
    v71,
    *((uint64_t *)&v71 + 1),
    v72,
    v73,
    v74,
    v75,
    v76);
  sub_1000E29F8();
  sub_100019524((uint64_t *)&unk_10030FD90);
  sub_1000AC21C();
  uint64_t v35 = sub_10024E510();
  sub_1001E8464(v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&off_1002D7380, v35);
  sub_1000E2918();
  swift_bridgeObjectRelease();
  sub_1000E29C8();
  unint64_t v39 = sub_1000E19F8(v36, v37, v38);
  unint64_t v40 = v39;
  if (v39 >> 62) {
    goto LABEL_16;
  }
  for (uint64_t i = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_10024F6F0())
  {
    uint64_t v42 = 4;
    while (1)
    {
      id v43 = (v40 & 0xC000000000000001) != 0 ? (id)sub_10024F380() : *(id *)(v40 + 8 * v42);
      uint64_t v44 = v43;
      uint64_t v45 = v42 - 3;
      if (__OFADD__(v42 - 4, 1)) {
        break;
      }
      sub_1000D96B0(v50, v43);

      sub_1000E206C((uint64_t)v50, (uint64_t)&v56);
      if (v58 != 255)
      {
        sub_1000CE8A4(&v56, (uint64_t)&v59);
        sub_1000CE8A4(&v59, (uint64_t)v63);
        if (!(_BYTE)v69)
        {

          sub_1000E20D4((uint64_t)v50);
          goto LABEL_14;
        }
        sub_1000E20D4((uint64_t)v50);
      }
      ++v42;
      if (v45 == i) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_16:
    ;
  }
LABEL_12:

LABEL_14:
  swift_bridgeObjectRelease();
  sub_10003C8C8();
}

#error "1000DE000: call analysis failed (funcsize=112)"

void sub_1000DE078()
{
  sub_10003C984();
  uint64_t v43 = v4;
  unint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v12 = sub_100026018(v11);
  __chkstk_darwin(v12, v13);
  sub_1000E25E0();
  __chkstk_darwin(v14, v15);
  sub_1000E2664();
  __chkstk_darwin(v16, v17);
  sub_1000E29A8();
  uint64_t v18 = sub_100019524(&qword_10030C100);
  uint64_t v19 = sub_100026018(v18);
  __chkstk_darwin(v19, v20);
  sub_1000E25F0();
  sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  sub_1000E259C();
  sub_1000E2974();
  uint64_t v24 = sub_1000E220C(v3, v21, v22, v23);
  sub_1000E247C(v24);
  swift_bridgeObjectRetain();
  sub_1000E27D8();
  sub_1000E29EC();
  sub_1000E2690();
  sub_1000E26D0();
  sub_1001E76BC(v10, v8, 0, 1, v43, v6, 0, 1, v25, v26, 0, 1, v28, v29, HIBYTE(v29), v30, 1, v31, v32,
    SBYTE1(v32),
    SBYTE2(v32),
    HIBYTE(v32),
    1u,
    v33,
    v34,
    v35,
    1,
    0,
    (uint64_t)&v44,
    v45,
    0,
    1,
    v36,
    v37,
    v38,
    SHIBYTE(v38),
    v39,
    v40[0],
    v40[1],
    v40[2],
    v41,
    v42,
    v2,
    v1,
    v0,
    0,
    1,
    5,
    0,
    0,
    1);
  sub_1000E2AA8();
  sub_100019524((uint64_t *)&unk_10030FD90);
  sub_1000AC21C();
  uint64_t v27 = sub_10024E510();
  sub_1000E28F0(v27);
  sub_1000DD7B8();
  swift_bridgeObjectRelease();
  sub_1000E1818((uint64_t)_swiftEmptyArrayStorage);

  sub_1000E28C8();
  sub_10003C8C8();
}

void sub_1000DE274()
{
  sub_10003C984();
  uint64_t v76 = v3;
  uint64_t v77 = v4;
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v10 = sub_100026018(v9);
  __chkstk_darwin(v10, v11);
  sub_1000E28D4();
  __chkstk_darwin(v12, v13);
  sub_1000E2A54();
  __chkstk_darwin(v14, v15);
  sub_1000E29B8();
  uint64_t v16 = sub_100019524(&qword_10030C100);
  uint64_t v17 = sub_100026018(v16);
  __chkstk_darwin(v17, v18);
  sub_1000ACE78();
  uint64_t v19 = (void *)sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  sub_1000E259C();
  sub_1000E2974();
  uint64_t v23 = sub_1000E220C(v2, v20, v21, v22);
  sub_1000195B4(v1, 1, 1, v23);
  sub_1000E2520();
  swift_bridgeObjectRetain();
  sub_1000E23B4();
  uint64_t v61 = (uint64_t *)&v48;
  uint64_t v62 = 0;
  char v60 = v41;
  sub_1000E26E8();
  sub_1000E27B0();
  uint64_t v30 = sub_1000E2130(v8, v6, v24, v25, v26, v27, v28, v29, v41[0], v41[1], v42, v43, v44, v45, v46, v47, v48, v49, v50,
          v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          (uint64_t)v60,
          v61,
          v62,
          v63,
          v64,
          v65,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81,
          v82);
  sub_1000E2244((uint64_t)v30, v31, v32, v33, v34, v35, v36, v37, 0, 0, 0, 0, 0, 0, (uint64_t)&off_1002D73F8, 0, 0, 0, 0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0);
  sub_1000E2A48();
  sub_1001E8464((uint64_t)v30, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v0);
  sub_1000E2918();
  swift_bridgeObjectRelease();
  sub_1000E29C8();
  sub_1000E19F8(v38, v39, v40);

  sub_1000E28C8();
  sub_10003C8C8();
}

void sub_1000DE454()
{
  sub_10003C984();
  uint64_t v78 = v3;
  uint64_t v79 = v4;
  unint64_t v6 = v5;
  uint64_t v55 = v7;
  uint64_t v8 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v9 = sub_100026018(v8);
  __chkstk_darwin(v9, v10);
  sub_1000E2460();
  __chkstk_darwin(v11, v12);
  sub_1000E25E0();
  __chkstk_darwin(v13, v14);
  sub_1000E288C();
  uint64_t v15 = sub_100019524(&qword_10030C100);
  uint64_t v16 = sub_100026018(v15);
  __chkstk_darwin(v16, v17);
  sub_100025FE8();
  uint64_t v18 = *(void **)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection);
  sub_100019524((uint64_t *)&unk_10030FD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10025D960;
  uint64_t v53 = sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  sub_1000E2750();
  *(double *)&long long v20 = sub_1000E2A3C();
  long long v73 = v20;
  long long v74 = v20;
  long long v75 = v20;
  long long v76 = v20;
  long long v77 = v20;
  uint64_t v24 = sub_1000E220C(v2, v21, v22, v23);
  sub_1000E2814();
  sub_1000195B4(v1, 1, 1, v24);
  swift_bridgeObjectRetain();
  id v25 = v18;
  sub_1000E236C();
  __int16 v63 = v26;
  sub_1000E29EC();
  sub_1000E2930();
  LOBYTE(v55) = 1;
  sub_1000E28BC();
  uint64_t v33 = sub_1000E2130(v55, v6, v27, v28, v29, v30, v31, v32, v52, SHIBYTE(v52), v53, 1, v56, v57, BYTE1(v57), (uint64_t)v58, 1, 0, 1,
          2,
          2,
          0x16u,
          1u,
          v62[0],
          v62[1],
          v62[2],
          v63,
          SHIBYTE(v63),
          (uint64_t)&v64,
          (uint64_t *)&v73,
          0,
          v64,
          v65,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          *((uint64_t *)&v73 + 1),
          v74,
          *((uint64_t *)&v74 + 1),
          v75,
          *((uint64_t *)&v75 + 1),
          v76,
          SBYTE1(v76),
          *((uint64_t *)&v76 + 1),
          v77,
          SBYTE8(v77));
  *(double *)&uint64_t v34 = sub_1000E2798();
  uint64_t v44 = sub_1000E2244(v35, v36, v37, v38, v39, v40, v41, v42, v34, (uint64_t)v43, v34, (uint64_t)v43, v34, (uint64_t)v43, v34, (uint64_t)v43, v34, (uint64_t)v43, v34,
          v43,
          v34,
          v43,
          0,
          (uint64_t)&off_1002D75B0,
          v34,
          (uint64_t)v43,
          v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88);
  sub_1001E8464((uint64_t)v33, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&off_1002D7588, (uint64_t)v44);
  sub_1000E2A90();
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v54;
  sub_1000184A4(0, &qword_10030FDA0);
  char v59 = &type metadata for String;
  unint64_t v57 = 0xEA00000000006461;
  *(void *)(inited + 40) = sub_1001EA388(0, &v56, 1u);
  uint64_t v56 = inited;
  sub_10024EAC0();
  if (v56 < 0 || (v56 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100019718();
    sub_1000E27FC();
  }
  else
  {
    sub_1000E2AB4();
  }
  type metadata accessor for Transaction();
  sub_1000184A4(0, &qword_10030FDA8);
  sub_10007C9E8((unint64_t)&v56);
  uint64_t v46 = v45;
  swift_release();
  id v47 = sub_1001EA448(v46);
  swift_bridgeObjectRelease();
  id v48 = sub_1000DAA40();

  v62[0] = sub_10024E510();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v62;
  uint64_t v50 = sub_10004F2C8();
  *(void *)(v50 + 16) = sub_1000E2060;
  *(void *)(v50 + 24) = v49;
  char v60 = sub_1000E211C;
  uint64_t v61 = v50;
  uint64_t v56 = (uint64_t)_NSConcreteStackBlock;
  unint64_t v57 = 1107296256;
  char v58 = sub_1001F02A0;
  char v59 = &unk_1002E39D0;
  char v51 = _Block_copy(&v56);
  swift_retain();
  swift_release();
  [v48 enumerateMemoryEntitiesUsingBlock:v51];
  _Block_release(v51);
  LOBYTE(v51) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v51)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000197F8();

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10003C8C8();
  }
}

void sub_1000DE930(void *a1)
{
  type metadata accessor for Transaction();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    id v9 = a1;
    uint64_t v4 = sub_1000D939C(15);
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      id v8 = v9;
      sub_10020C990(v3, v6, v7);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

#error "1000DEC4C: call analysis failed (funcsize=248)"

void sub_1000DEE3C()
{
  sub_1000AC794();
  uint64_t v85 = v2;
  uint64_t v86 = v3;
  uint64_t v82 = v4;
  unint64_t v6 = v5;
  uint64_t v84 = v7;
  unint64_t v9 = v8;
  uint64_t v83 = v10;
  uint64_t v11 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v12 = sub_100026018(v11);
  __chkstk_darwin(v12, v13);
  sub_1000E289C();
  uint64_t v16 = v14 - v15;
  uint64_t v19 = __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v81 - v20;
  __chkstk_darwin(v19, v22);
  sub_1000E29B8();
  uint64_t v23 = sub_100019524(&qword_10030C100);
  uint64_t v24 = sub_100026018(v23);
  __chkstk_darwin(v24, v25);
  sub_100062164();
  sub_100019524((uint64_t *)&unk_10030FD80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10025EEC0;
  uint64_t v27 = sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  uint64_t v28 = sub_1000E2774();
  memset(v91, 0, 80);
  uint64_t v31 = sub_1000E220C(v0, v29, v30, v28);
  sub_1000195B4(v1, 1, 1, v31);
  uint64_t v32 = sub_1000E28AC();
  sub_1000195B4(v32, v33, v34, v31);
  sub_1000195B4(v16, 1, 1, v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = v83;
  sub_1000E2690();
  sub_1000E2930();
  sub_1000E28BC();
  sub_1000E2130(v84, v6, v35, v36, v37, v38, v39, v40, v64, SHIBYTE(v64), v65, 1, v66, v67, HIBYTE(v67), v68, 1, v69, v70,
    SBYTE1(v70),
    SBYTE2(v70),
    HIBYTE(v70),
    1u,
    v71,
    v9,
    0,
    1,
    2,
    (uint64_t)&v90,
    v91,
    0,
    1,
    v0,
    0,
    1,
    2,
    0,
    1,
    2,
    2,
    0,
    0,
    v1,
    (uint64_t)v21,
    v16,
    0,
    1,
    5,
    0,
    0,
    1);
  sub_1000E2AA8();
  *(double *)&uint64_t v41 = sub_1000E2798();
  char v51 = sub_1000E2244(v42, v43, v44, v45, v46, v47, v48, v49, v41, (uint64_t)v50, v41, (uint64_t)v50, v41, (uint64_t)v50, v41, (uint64_t)v50, v41, (uint64_t)v50, v41,
          v50,
          v41,
          v50,
          0,
          (uint64_t)&off_1002D7310,
          v41,
          (uint64_t)v50,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80);
  sub_1001E8464(v16, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v51);
  sub_10001B63C();
  swift_bridgeObjectRelease();
  *(void *)(v26 + 32) = v27;
  sub_10024DF70();
  uint64_t v53 = v52;
  sub_1000184A4(0, &qword_10030FDA0);
  long long v88 = &type metadata for Double;
  v87[0] = v53;
  *(void *)(v26 + 40) = sub_1001EA388(11, v87, 2u);
  uint64_t v54 = sub_10024DF70();
  long long v88 = &type metadata for Double;
  v87[0] = v55;
  *(void *)(v26 + 48) = sub_1000E2948(v54, v87);
  v87[0] = v26;
  uint64_t v56 = v87;
  sub_10024EAC0();
  uint64_t v57 = v87[0];
  uint64_t v89 = v87[0];
  if (v86)
  {
    long long v88 = &type metadata for String;
    v87[0] = v82;
    v87[1] = v86;
    swift_bridgeObjectRetain();
    sub_1001EA388(9, v87, 1u);
    uint64_t v56 = &v89;
    sub_10024EA70();
    if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10024EAD0();
    }
    sub_10024EB10();
    sub_10024EAC0();
    uint64_t v57 = v89;
  }
  if (v57 < 0 || (v57 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100019718();
    sub_10001B63C();
  }
  else
  {
    uint64_t v56 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  char v58 = (void *)sub_1000184A4(0, &qword_10030FDA8);
  sub_10007C9E8((unint64_t)v56);
  uint64_t v60 = v59;
  swift_release();
  sub_1001EA448(v60);
  sub_1000DD7B8();
  sub_1000E29C8();
  sub_1000E19F8(v61, v62, v63);

  sub_1000AC7B0();
}

#error "1000DF630: call analysis failed (funcsize=362)"

#error "1000DF9C4: call analysis failed (funcsize=97)"

unint64_t sub_1000DFA44(uint64_t a1)
{
  sub_1000184A4(0, &qword_10030FDA0);
  v5[3] = &type metadata for UInt;
  v5[0] = a1;
  id v2 = sub_1001EA388(7, v5, 0);
  unint64_t v3 = sub_1000E1818((uint64_t)v2);

  return v3;
}

void sub_1000DFAD0()
{
  sub_10003C984();
  uint64_t v51 = v3;
  uint64_t v34 = v0;
  char v5 = v4;
  unint64_t v7 = v6;
  uint64_t v8 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v9 = sub_100026018(v8);
  __chkstk_darwin(v9, v10);
  sub_1000E2460();
  __chkstk_darwin(v11, v12);
  sub_1000E25E0();
  __chkstk_darwin(v13, v14);
  sub_1000E288C();
  uint64_t v15 = sub_100019524(&qword_10030C100);
  uint64_t v16 = sub_100026018(v15);
  __chkstk_darwin(v16, v17);
  sub_100025FE8();
  sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  uint64_t v18 = sub_1000E259C();
  uint64_t v21 = sub_1000E220C(v1, v19, v20, v18);
  sub_1000E2608(v21);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1000E2168();
  uint64_t v29 = sub_1000E2130(v22, v7, v23, v24, v25, v26, v27, v28, v33, SHIBYTE(v33), v34, v35, v36, v37, HIBYTE(v37), v38, v39, v40, 0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          v41,
          v42,
          SHIBYTE(v42),
          v43,
          v44[0],
          v44[1],
          v44[2],
          v45,
          v46,
          v47,
          v48,
          v49,
          v50,
          v2,
          SHIBYTE(v2),
          v51,
          v52,
          v53);
  sub_100019524((uint64_t *)&unk_10030FD90);
  sub_1000AC21C();
  uint64_t v30 = sub_10024E510();
  uint64_t v31 = (void *)sub_1001E8464((uint64_t)v29, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    uint64_t v32 = &off_1002D7420;
  }
  else {
    uint64_t v32 = 0;
  }
  sub_1000E18B8((uint64_t)v31, (uint64_t)v32, 0x7FFFFFFFFFFFFFFFLL);

  swift_bridgeObjectRelease();
  sub_1000E28C8();
  sub_10003C8C8();
}

#error "1000DFDC8: call analysis failed (funcsize=244)"

void sub_1000E00CC(void *a1, uint64_t a2, unsigned char *a3, void *a4, uint64_t a5, unsigned char *a6, char a7)
{
  if (*a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 >= a5)
  {
    *a3 = 1;
    *a6 = 1;
    return;
  }
  type metadata accessor for Transaction();
  if (!swift_dynamicCastClass()) {
    return;
  }
  id v14 = a1;
  if (a7)
  {
    if ((sub_1000D685C() & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (sub_1000D642C())
  {
LABEL_11:
    id v14 = v14;
    sub_10024EA70();
    sub_1000348E0(*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_10024EB10();
    sub_10024EAC0();
  }
LABEL_12:
}

void sub_1000E0220()
{
  sub_1000AC794();
  uint64_t v68 = v1;
  uint64_t v69 = v0;
  unint64_t v65 = v3;
  uint64_t v66 = v2;
  uint64_t v67 = v4;
  unint64_t v6 = v5;
  uint64_t v7 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v8 = sub_100026018(v7);
  __chkstk_darwin(v8, v9);
  sub_1000E289C();
  uint64_t v12 = v10 - v11;
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = &v63[-v16];
  __chkstk_darwin(v15, v18);
  uint64_t v20 = &v63[-v19];
  uint64_t v21 = sub_100019524(&qword_10030C100);
  uint64_t v22 = sub_100026018(v21);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = &v63[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100019524((uint64_t *)&unk_10030FD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10025D960;
  uint64_t v64 = sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  long long v88 = 0u;
  long long v89 = 0u;
  sub_1000E298C();
  *(double *)&long long v27 = sub_1000E2A3C();
  v93[0] = v27;
  v93[1] = v27;
  v93[2] = v27;
  v93[3] = v27;
  v93[4] = v27;
  uint64_t v31 = sub_1000E220C((uint64_t)v25, v28, v29, v30);
  uint64_t v32 = sub_1000E28AC();
  sub_1000195B4(v32, v33, v34, v31);
  sub_1000195B4((uint64_t)v17, 1, 1, v31);
  sub_1000195B4(v12, 1, 1, v31);
  swift_bridgeObjectRetain();
  unint64_t v35 = v65;
  swift_bridgeObjectRetain();
  *(double *)&long long v36 = sub_1000E2674();
  long long v89 = (unint64_t)v12;
  *(void *)&long long v88 = v20;
  *((void *)&v88 + 1) = v17;
  long long v87 = v36;
  char v86 = 2;
  __int16 v85 = 513;
  uint64_t v84 = 0;
  __int16 v83 = 513;
  uint64_t v81 = v25;
  uint64_t v82 = 0;
  char v80 = 1;
  unint64_t v78 = (unint64_t)v93;
  uint64_t v79 = 0;
  uint64_t v77 = &v88;
  __int16 v76 = 513;
  unint64_t v74 = v6;
  uint64_t v75 = 0;
  uint64_t v73 = v66;
  unsigned __int8 v72 = 1;
  int v71 = 369230337;
  uint64_t v70 = 0;
  uint64_t v37 = sub_1000E26A4();
  sub_1000E2130(v37, v35, v38, v39, v40, v41, v42, v43, v63[0], v63[1], v64, v65, v66, v67, BYTE1(v67), v68, v69, v70, v71,
    SBYTE1(v71),
    SBYTE2(v71),
    HIBYTE(v71),
    v72,
    v73,
    v74,
    v75,
    v76,
    SHIBYTE(v76),
    (uint64_t)v77,
    (uint64_t *)v78,
    v79,
    v80,
    (uint64_t)v81,
    v82,
    v83,
    SHIBYTE(v83),
    v84,
    v85,
    SHIBYTE(v85),
    v86,
    v87,
    *((uint64_t *)&v87 + 1),
    v88,
    *((uint64_t *)&v88 + 1),
    v89,
    *((uint64_t *)&v89 + 1),
    v90,
    v91,
    v92,
    *(uint64_t *)&v93[0],
    SBYTE8(v93[0]));
  sub_1000E29F8();
  sub_100019524((uint64_t *)&unk_10030FD90);
  sub_1000AC21C();
  sub_10024E510();
  uint64_t v44 = sub_1000E29D4();
  uint64_t v45 = v64;
  sub_1001E8464(v44, v46, v47, v48);
  sub_1000E27FC();
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v45;
  sub_10024DF70();
  uint64_t v50 = v49;
  sub_1000184A4(0, &qword_10030FDA0);
  uint64_t v81 = (char *)&type metadata for Double;
  unint64_t v78 = (unint64_t)v50;
  *(void *)(inited + 40) = sub_1001EA388(11, &v78, 2u);
  unint64_t v78 = inited;
  sub_10024EAC0();
  if ((v78 & 0x8000000000000000) != 0 || (v78 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100019718();
    sub_1000E27FC();
  }
  else
  {
    sub_1000E2AB4();
  }
  uint64_t v51 = (void *)sub_1000184A4(0, &qword_10030FDA8);
  sub_10007C9E8((unint64_t)&v78);
  sub_1000E2A04();
  sub_1001EA448(inited);
  sub_1000E2918();
  sub_100019524((uint64_t *)&unk_10030FDB0);
  uint64_t v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_100255FB0;
  *(unsigned char *)(v52 + 32) = 11;
  uint64_t v53 = sub_10024E6B0();
  uint64_t v55 = sub_1000E2A7C(v53, v54);
  unint64_t v58 = sub_1000E19F8(v55, v56, v57);
  swift_setDeallocating();
  uint64_t v59 = v52;
  sub_10020BB5C();

  if (v58 >> 62)
  {
    sub_1000ACAE8();
    sub_10024F6F0();
    sub_1000E27FC();
    if (!v52) {
      goto LABEL_9;
    }
LABEL_6:
    BOOL v60 = __OFSUB__(v59, 1);
    uint64_t v61 = v59 - 1;
    if (v60)
    {
      __break(1u);
    }
    else
    {
      sub_10014ED88(v61, (v58 & 0xC000000000000001) == 0, v58);
      if ((v58 & 0xC000000000000001) == 0)
      {
        id v62 = *(id *)(v58 + 8 * v61 + 32);
        goto LABEL_9;
      }
    }
    sub_10024F380();
    goto LABEL_9;
  }
  uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v59) {
    goto LABEL_6;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  sub_1000AC7B0();
}

void sub_1000E0630()
{
  sub_10003C984();
  uint64_t v66 = v0;
  HIDWORD(v65) = v2;
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  unint64_t v60 = v6;
  uint64_t v61 = v5;
  uint64_t v62 = v7;
  unint64_t v9 = v8;
  uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v11 = sub_100026018(v10);
  __chkstk_darwin(v11, v12);
  sub_1000E289C();
  uint64_t v15 = v13 - v14;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v20 = &v58[-v19];
  __chkstk_darwin(v18, v21);
  uint64_t v23 = &v58[-v22];
  uint64_t v24 = sub_100019524(&qword_10030C100);
  uint64_t v25 = sub_100026018(v24);
  __chkstk_darwin(v25, v26);
  sub_1000ACE78();
  sub_100019524((uint64_t *)&unk_10030FD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10025EEE0;
  uint64_t v59 = sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  long long v86 = 0u;
  long long v87 = 0u;
  char v88 = -1;
  sub_10024E0A0();
  *(double *)&long long v28 = sub_1000E2A3C();
  v89[0] = v28;
  v89[1] = v28;
  v89[2] = v28;
  v89[3] = v28;
  v89[4] = v28;
  uint64_t v32 = sub_1000E220C(v1, v29, v30, v31);
  sub_1000E2520();
  uint64_t v33 = sub_1000E28AC();
  sub_1000195B4(v33, v34, v35, v32);
  swift_bridgeObjectRetain();
  unint64_t v36 = v60;
  swift_bridgeObjectRetain();
  *(double *)&long long v37 = sub_1000E2674();
  uint64_t v84 = v15;
  uint64_t v85 = 0;
  uint64_t v82 = v23;
  __int16 v83 = v20;
  long long v81 = v37;
  char v80 = 2;
  __int16 v79 = 513;
  uint64_t v78 = 0;
  LOWORD(v77) = 513;
  uint64_t v75 = v1;
  uint64_t v76 = 0;
  LOBYTE(v74) = 1;
  unsigned __int8 v72 = (uint64_t *)v89;
  uint64_t v73 = 0;
  int v71 = &v86;
  __int16 v70 = 513;
  unint64_t v68 = v9;
  uint64_t v69 = 0;
  uint64_t v67 = v61;
  sub_1000E2444();
  uint64_t v38 = sub_1000E26A4();
  uint64_t v45 = sub_1000E2130(v38, v36, v39, v40, v41, v42, v43, v44, v58[0], v58[1], v59, v60, v61, v62, BYTE1(v62), v63, v64, v65, v66,
          SBYTE1(v66),
          SBYTE2(v66),
          BYTE3(v66),
          BYTE4(v66),
          v67,
          v68,
          v69,
          v70,
          SHIBYTE(v70),
          (uint64_t)v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          SBYTE1(v77),
          v78,
          v79,
          SHIBYTE(v79),
          v80,
          v81,
          *((uint64_t *)&v81 + 1),
          (uint64_t)v82,
          (uint64_t)v83,
          v84,
          v85,
          v86,
          SBYTE1(v86),
          *((uint64_t *)&v86 + 1),
          v87,
          SBYTE8(v87));
  sub_100019524((uint64_t *)&unk_10030FD90);
  sub_1000AC21C();
  uint64_t v46 = sub_10024E510();
  uint64_t v47 = v59;
  sub_1001E8464((uint64_t)v45, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v46);
  sub_1000E2A90();
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v47;
  sub_1000184A4(0, &qword_10030FDA0);
  *(void *)(inited + 40) = sub_1001EA388(14, &v74, 1u);
  uint64_t v48 = sub_10024DF70();
  *(void *)(inited + 48) = sub_1000E2948(v48, &v74);
  uint64_t v77 = sub_100019524(&qword_10030C9E8);
  LOBYTE(v75) = BYTE4(v65) & 1;
  *(void *)(inited + 56) = sub_1001EA388(7, &v74, 1u);
  uint64_t v74 = inited;
  sub_10024EAC0();
  if (v74 < 0 || (v74 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100019718();
    sub_1000E27FC();
  }
  else
  {
    sub_1000E2AB4();
  }
  uint64_t v49 = (void *)sub_1000184A4(0, &qword_10030FDA8);
  sub_10007C9E8((unint64_t)&v74);
  sub_1000E2A04();
  sub_1001EA448((uint64_t)_swiftEmptyArrayStorage);
  sub_1000E2918();
  sub_100019524((uint64_t *)&unk_10030FDB0);
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_100255FB0;
  *(unsigned char *)(v50 + 32) = 11;
  uint64_t v51 = sub_10024E6B0();
  uint64_t v53 = sub_1000E2A7C(v51, v52);
  unint64_t v56 = sub_1000E19F8(v53, v54, v55);
  swift_setDeallocating();
  sub_10020BB5C();

  if (v56 >> 62)
  {
    sub_1000ACAE8();
    sub_10024F6F0();
    sub_1000E27FC();
    if (!v50) {
      goto LABEL_8;
    }
  }
  else if (!*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_8;
  }
  sub_10014ED88(0, (v56 & 0xC000000000000001) == 0, v56);
  if ((v56 & 0xC000000000000001) != 0) {
    sub_10024F380();
  }
  else {
    id v57 = *(id *)(v56 + 32);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  sub_10003C8C8();
}

uint64_t sub_1000E0A6C()
{
  unint64_t v9 = &_swiftEmptySetSingleton;
  uint64_t v10 = &_swiftEmptySetSingleton;
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection);
  NSString v2 = sub_10024E6A0();
  uint64_t v3 = sub_10004F2C8();
  *(void *)(v3 + 16) = &v10;
  *(void *)(v3 + 24) = &v9;
  uint64_t v4 = sub_10004F2C8();
  *(void *)(v4 + 16) = sub_1000E2008;
  *(void *)(v4 + 24) = v3;
  void v8[4] = sub_1000E2014;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_100205B60;
  v8[3] = &unk_1002E3868;
  uint64_t v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  [v1 executeQuery:v2 withResults:v5];

  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v10;
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

void sub_1000E0C08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_10024E1F0();
    sub_10001B0E8(v4, (uint64_t)qword_10034C0E0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = sub_10024E1D0();
    os_log_type_t v5 = sub_10024EE10();
    if (os_log_type_enabled(oslog, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v6 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = sub_10024FB80();
      sub_1000F3F3C(v7, v8, aBlock);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Error fetching used IDs: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else if (a1)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = a4;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1000E2020;
    *(void *)(v13 + 24) = v12;
    aBlock[4] = (uint64_t)sub_1000E202C;
    aBlock[5] = v13;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100205AC0;
    aBlock[3] = (uint64_t)&unk_1002E38E0;
    uint64_t v14 = _Block_copy(aBlock);
    id v15 = a1;
    swift_retain();
    swift_release();
    [v15 enumerateRowsUsingBlock:v14];

    _Block_release(v14);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v15) {
      __break(1u);
    }
  }
}

void sub_1000E0F50(void *a1)
{
  if (a1)
  {
    id v5 = a1;
    NSString v1 = sub_10024E6A0();
    id v2 = [v5 numberForColumnName:v1];

    if (v2)
    {
      sub_1001F1F50(&v6, (uint64_t)[v2 unsignedIntegerValue]);
    }
    NSString v3 = sub_10024E6A0();
    id v4 = [v5 numberForColumnName:v3];

    if (v4)
    {
      sub_1001F1F50(&v6, (uint64_t)[v4 unsignedIntegerValue]);
    }
    else
    {
    }
  }
}

#error "1000E1194: call analysis failed (funcsize=212)"

unint64_t sub_1000E1418()
{
  sub_1000E14B0();
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    if (sub_10024F6F0()) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
LABEL_3:
  unint64_t v2 = v1 & 0xC000000000000001;
  sub_10014ED88(0, (v1 & 0xC000000000000001) == 0, v1);
  if ((v1 & 0xC000000000000001) != 0) {
    sub_10024F380();
  }
  else {
    id v3 = *(id *)(v1 + 32);
  }
  sub_10001B63C();
  return v2;
}

void sub_1000E14B0()
{
  sub_1000AC794();
  uint64_t v44 = v3;
  uint64_t v45 = v0;
  unint64_t v5 = v4;
  uint64_t v43 = v6;
  uint64_t v7 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v8 = sub_100026018(v7);
  __chkstk_darwin(v8, v9);
  sub_1000E2664();
  __chkstk_darwin(v10, v11);
  sub_1000E2A68();
  __chkstk_darwin(v12, v13);
  id v15 = &v42[-v14];
  uint64_t v16 = sub_100019524(&qword_10030C100);
  uint64_t v17 = sub_100026018(v16);
  __chkstk_darwin(v17, v18);
  sub_100062164();
  sub_100019524((uint64_t *)&unk_10030FD80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10025EEC0;
  sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  long long v71 = 0u;
  long long v72 = 0u;
  LOBYTE(v73) = -1;
  sub_10024E0A0();
  sub_1000E2738();
  uint64_t v23 = sub_1000E220C(v1, v20, v21, v22);
  sub_1000195B4((uint64_t)v15, 1, 1, v23);
  sub_1000195B4(v2, 1, 1, v23);
  uint64_t v24 = sub_1000E2964();
  sub_1000195B4(v24, v25, v26, v23);
  swift_bridgeObjectRetain();
  *(double *)&long long v27 = sub_1000E24E0();
  uint64_t v63 = v1;
  uint64_t v64 = 0;
  char v62 = 1;
  unint64_t v60 = (uint64_t *)v75;
  uint64_t v61 = 0;
  uint64_t v59 = &v71;
  __int16 v58 = v28;
  uint64_t v57 = 0;
  long long v56 = v27;
  sub_1000E2444();
  sub_1000E2710();
  sub_1000E2130(v43, v5, v29, v30, v31, v32, v33, v34, v42[0], v42[1], v43, v44, v45, v46, v47, v48, v49, v50, v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    *((unint64_t *)&v56 + 1),
    v57,
    v58,
    SHIBYTE(v58),
    (uint64_t)v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    *((uint64_t *)&v71 + 1),
    v72,
    *((uint64_t *)&v72 + 1),
    v73,
    v74,
    v75[0],
    v75[1],
    v76,
    v77,
    v78);
  sub_1000E29F8();
  sub_100019524((uint64_t *)&unk_10030FD90);
  sub_1000AC21C();
  uint64_t v35 = sub_10024E510();
  uint64_t v36 = sub_1001E8464(v1, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&off_1002D72E8, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v36;
  *(void *)(inited + 40) = sub_1001EA4C4(30);
  sub_10024DF80();
  uint64_t v38 = v37;
  sub_1000184A4(0, &qword_10030FDA0);
  unint64_t v60 = (uint64_t *)&type metadata for Double;
  uint64_t v57 = v38;
  *(void *)(inited + 48) = sub_1001EA388(30, &v57, 4u);
  uint64_t v57 = inited;
  sub_10024EAC0();
  if (v57 < 0 || (v57 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100019718();
    sub_1000E27FC();
  }
  else
  {
    sub_1000E2AB4();
  }
  sub_1000184A4(0, &qword_10030FDA8);
  sub_10007C9E8((unint64_t)&v57);
  sub_1000E2A04();
  id v39 = sub_1001EA448(inited);
  swift_bridgeObjectRelease();
  sub_100019524((uint64_t *)&unk_10030FDB0);
  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = xmmword_100255FB0;
  *(unsigned char *)(v40 + 32) = 30;
  *(void *)(v40 + 40) = sub_10024E6B0();
  *(void *)(v40 + 48) = v41;
  sub_1000E19F8((uint64_t)v39, (objc_class *)v40, v44);
  swift_setDeallocating();
  sub_10020BB5C();

  sub_1000AC7B0();
}

unint64_t sub_1000E1818(uint64_t a1)
{
  unint64_t v1 = sub_1000E18B8(a1, (uint64_t)&off_1002D73D0, 1);
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    if (sub_10024F6F0()) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
LABEL_3:
  unint64_t v3 = v2 & 0xC000000000000001;
  sub_10014ED88(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0) {
    sub_10024F380();
  }
  else {
    id v4 = *(id *)(v2 + 32);
  }
  sub_10001B63C();
  return v3;
}

uint64_t sub_1000E18B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    int64_t v4 = *(void *)(a2 + 16);
    unint64_t v5 = (objc_class *)_swiftEmptyArrayStorage;
    if (v4)
    {
      uint64_t v16 = a1;
      uint64_t v17 = a3;
      swift_bridgeObjectRetain();
      sub_1000392A4(0, v4, 0);
      uint64_t v6 = 0;
      unint64_t v5 = v18;
      do
      {
        char v7 = *(unsigned char *)(a2 + v6 + 32);
        uint64_t v8 = sub_10024E6B0();
        uint64_t v10 = v9;
        unint64_t v12 = *((void *)v18 + 2);
        unint64_t v11 = *((void *)v18 + 3);
        if (v12 >= v11 >> 1) {
          sub_1000392A4((char *)(v11 > 1), v12 + 1, 1);
        }
        *((void *)v18 + 2) = v12 + 1;
        uint64_t v13 = (void *)((char *)v18 + 24 * v12);
        *((unsigned char *)v13 + 32) = v7;
        ++v6;
        v13[5] = v8;
        v13[6] = v10;
      }
      while (v4 != v6);
      swift_bridgeObjectRelease();
      a3 = v17;
      a1 = v16;
    }
  }
  else
  {
    unint64_t v5 = 0;
  }
  uint64_t v14 = sub_1000E19F8(a1, v5, a3);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1000E19F8(uint64_t a1, objc_class *a2, uint64_t a3)
{
  Class v5 = a2;
  uint64_t v38 = &_swiftEmptyArrayStorage;
  char v7 = *(void **)(v3 + OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection);
  if (a2)
  {
    uint64_t v8 = *((void *)a2 + 2);
    uint64_t v36 = *(void **)(v3 + OBJC_IVAR____TtC25ASOctaneSupportXPCService15DatabaseSession_connection);
    if (v8)
    {
      aBlock[0] = &_swiftEmptyArrayStorage;
      id v9 = v7;
      swift_bridgeObjectRetain();
      sub_1000389BC();
      uint64_t v10 = 32;
      unint64_t v11 = &_swiftEmptyArrayStorage;
      do
      {
        unint64_t v12 = sub_100152BBC(*((unsigned char *)v5 + v10));
        uint64_t v14 = v13;
        aBlock[0] = v11;
        unint64_t v15 = v11[2];
        if (v15 >= v11[3] >> 1)
        {
          sub_1000E2A1C();
          unint64_t v11 = (void *)aBlock[0];
        }
        long long v11[2] = v15 + 1;
        uint64_t v16 = (char *)&v11[2 * v15];
        *((void *)v16 + 4) = v12;
        *((void *)v16 + 5) = v14;
        v10 += 24;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v19 = v7;
    }
    Class isa = sub_10024EA80().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)v5 + 2);
    if (v20)
    {
      uint64_t v34 = a1;
      uint64_t v35 = a3;
      aBlock[0] = &_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1000389BC();
      uint64_t v21 = &_swiftEmptyArrayStorage;
      uint64_t v22 = (uint64_t *)((char *)v5 + 48);
      do
      {
        uint64_t v23 = *(v22 - 1);
        uint64_t v24 = *v22;
        aBlock[0] = v21;
        unint64_t v26 = v21[2];
        unint64_t v25 = v21[3];
        swift_bridgeObjectRetain();
        if (v26 >= v25 >> 1)
        {
          sub_1000E2A1C();
          uint64_t v21 = (void *)aBlock[0];
        }
        _OWORD v21[2] = v26 + 1;
        long long v27 = (char *)&v21[2 * v26];
        *((void *)v27 + 4) = v23;
        *((void *)v27 + 5) = v24;
        v22 += 3;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      a1 = v34;
      a3 = v35;
    }
    Class v5 = sub_10024EA80().super.isa;
    swift_bridgeObjectRelease();
    char v7 = v36;
  }
  else
  {
    id v17 = v7;
    Class isa = 0;
  }
  type metadata accessor for Transaction();
  id v28 = [(id)swift_getObjCClassFromMetadata() queryOnConnection:v7 predicate:a1 orderingProperties:isa orderingDirections:v5];

  uint64_t v29 = sub_10004F2C8();
  *(void *)(v29 + 16) = &v38;
  *(void *)(v29 + 24) = a3;
  uint64_t v30 = sub_10004F2C8();
  *(void *)(v30 + 16) = sub_1000E1EB8;
  *(void *)(v30 + 24) = v29;
  aBlock[4] = sub_1000E1EC4;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F02A0;
  aBlock[3] = &unk_1002E37F0;
  uint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v28 enumerateMemoryEntitiesUsingBlock:v31];

  _Block_release(v31);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v31)
  {
    __break(1u);
  }
  else
  {
    uint64_t v33 = v38;
    swift_release();
    return (uint64_t)v33;
  }
  return result;
}

uint64_t sub_1000E1D38(void *a1, uint64_t a2, unsigned char *a3, unint64_t *a4, uint64_t a5)
{
  type metadata accessor for Transaction();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    id v10 = a1;
    sub_10024EA70();
    sub_1000348E0(*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_10024EB10();
    uint64_t result = sub_10024EAC0();
    unint64_t v11 = *a4;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_10024F6F0();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v12 >= a5) {
      *a3 = 1;
    }
  }
  return result;
}

void sub_1000E1E0C()
{
}

id sub_1000E1E4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DatabaseSession();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DatabaseSession()
{
  return self;
}

uint64_t sub_1000E1EB8(void *a1, uint64_t a2, unsigned char *a3)
{
  return sub_1000E1D38(a1, a2, a3, *(unint64_t **)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1000E1EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F0278(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1000E1ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E1EDC()
{
  return swift_release();
}

id sub_1000E1EE4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  sub_10014ED88(a1, (a2 & 0xC000000000000001) == 0, a2);
  if (v4) {
    return (id)sub_10024F380();
  }
  else {
    return *(id *)(a2 + 8 * a1 + 32);
  }
}

void *sub_1000E1F48(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v6 = a3;
  uint64_t result = a1(&v7, &v6);
  if (!v4) {
    return (void *)v7;
  }
  return result;
}

id sub_1000E1FA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  id result = sub_1000E1EE4(*a1, *a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1000E1FE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000E1FA4(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1000E2008(void *a1, uint64_t a2)
{
  sub_1000E0C08(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000E2014(uint64_t a1, uint64_t a2)
{
  return sub_100205B38(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

void sub_1000E2020(void *a1)
{
}

uint64_t sub_1000E202C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100205A98(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1000E2034()
{
  return sub_1000E223C(v0, 41);
}

void sub_1000E2040(void *a1, uint64_t a2, unsigned char *a3)
{
  sub_1000E00CC(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(unsigned char **)(v3 + 32), *(unsigned char *)(v3 + 40));
}

uint64_t sub_1000E2054()
{
  return sub_1000E223C(v0, 24);
}

void sub_1000E2060(void *a1)
{
}

uint64_t sub_1000E206C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030FC28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E20D4(uint64_t a1)
{
  return a1;
}

void *sub_1000E2130(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, unsigned __int8 a15, uint64_t a16, char a17, uint64_t a18, char a19, char a20,char a21,unsigned __int8 a22,unsigned __int8 a23,uint64_t a24,unint64_t a25,uint64_t a26,char a27,char a28,uint64_t a29,uint64_t *a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,char a36,uint64_t a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,char a48,uint64_t a49,uint64_t a50,char a51)
{
  return sub_1001E76BC(a1, a2, 0, 1, 0, 0, 0, 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1000E2158()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E2168()
{
  return v0;
}

uint64_t sub_1000E220C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000195B4(a1, 1, 1, a4);
  return sub_10024E030();
}

uint64_t sub_1000E223C(uint64_t a1, uint64_t a2)
{
  return _swift_deallocObject(a1, a2, 7);
}

void *sub_1000E2244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  return sub_1001E8600(0, 0, 0, 0, 0, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1000E2274()
{
  sub_1000195B4(v1, 1, 1, *(void *)(v5 - 240));
  sub_1000195B4(v4, 1, 1, v0);
  sub_1000195B4(v3, 1, 1, v0);
  sub_1000195B4(v2, 1, 1, v0);
  return swift_bridgeObjectRetain();
}

void *sub_1000E22EC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_1001E8600(0, 0, 0, 0, a6, 0, 0, 0, a1.n128_i64[0], a1.n128_i64[1], a1.n128_i64[0], a1.n128_i64[1], a1.n128_i64[0], a1.n128_i64[1], a1.n128_i64[0], a1.n128_i64[1], a1.n128_i64[0], a1.n128_i64[1], a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

double sub_1000E2324()
{
  return 0.0;
}

double sub_1000E236C()
{
  return 0.0;
}

double sub_1000E23B4()
{
  return 0.0;
}

double sub_1000E23FC()
{
  return 0.0;
}

uint64_t sub_1000E247C(uint64_t a1)
{
  sub_1000195B4(v3, 1, 1, a1);
  sub_1000195B4(v2, 1, 1, a1);
  sub_1000195B4(v1, 1, 1, a1);
  return swift_bridgeObjectRetain();
}

double sub_1000E24E0()
{
  return 0.0;
}

uint64_t sub_1000E2520()
{
  sub_1000195B4(v1, 1, 1, v2);
  return sub_1000195B4(v0, 1, 1, v2);
}

uint64_t sub_1000E259C()
{
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  *(unsigned char *)(v0 - 176) = -1;
  return sub_10024E0A0();
}

double sub_1000E25C0()
{
  return 0.0;
}

uint64_t sub_1000E2608(uint64_t a1)
{
  sub_1000195B4(v3, 1, 1, a1);
  sub_1000195B4(v2, 1, 1, a1);
  return sub_1000195B4(v1, 1, 1, a1);
}

double sub_1000E2674()
{
  return 0.0;
}

uint64_t sub_1000E26A4()
{
  return *(void *)(v0 + 32);
}

double sub_1000E2738()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 192) = 0u;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

uint64_t sub_1000E2750()
{
  *(_OWORD *)(v0 - 224) = 0u;
  *(_OWORD *)(v0 - 208) = 0u;
  *(unsigned char *)(v0 - 192) = -1;
  return sub_10024E0A0();
}

uint64_t sub_1000E2774()
{
  *(_OWORD *)(v0 - 240) = 0u;
  *(_OWORD *)(v0 - 224) = 0u;
  *(unsigned char *)(v0 - 208) = -1;
  return sub_10024E0A0();
}

double sub_1000E2798()
{
  return 0.0;
}

uint64_t sub_1000E27FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E2814()
{
  sub_1000195B4(v2, 1, 1, v0);
  return sub_1000195B4(v1, 1, 1, v0);
}

double sub_1000E2878()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  return result;
}

uint64_t sub_1000E28AC()
{
  return v0;
}

uint64_t sub_1000E28C8()
{
  return v0;
}

uint64_t sub_1000E28F0(uint64_t a1)
{
  return sub_1001E8464(v1, v2, v2, a1);
}

uint64_t sub_1000E2918()
{
  return swift_bridgeObjectRelease();
}

id sub_1000E2948(uint64_t a1, void *a2)
{
  return sub_1001EA388(4, a2, 4u);
}

uint64_t sub_1000E2964()
{
  return v0;
}

double sub_1000E2974()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return result;
}

uint64_t sub_1000E298C()
{
  *(unsigned char *)(v0 + 224) = -1;
  return sub_10024E0A0();
}

uint64_t sub_1000E29D4()
{
  return v0;
}

uint64_t sub_1000E2A04()
{
  return swift_release();
}

void sub_1000E2A1C()
{
  sub_1000389BC();
}

double sub_1000E2A3C()
{
  return 0.0;
}

uint64_t sub_1000E2A7C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a2;
  return v2;
}

uint64_t sub_1000E2A90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E2AB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E2ACC(unint64_t a1, uint64_t a2)
{
  return sub_100196D90(a1, 0, a2);
}

uint64_t MulticastChannel.joinGroup(_:promise:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, 0, a2, a3, a4);
}

uint64_t MulticastChannel.joinGroup(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000E3000(a1, a2);
  v4(v3);
  uint64_t v6 = v5;
  swift_getObjectType();
  sub_1000E3038();
  uint64_t v12 = EventLoop.makePromise<A>(of:file:line:)(v7, v8, v9, v10, 91, v11, v7, v6);
  swift_unknownObjectRelease();
  uint64_t v13 = *(void (**)(uint64_t))(v2 + 16);
  swift_retain();
  uint64_t v14 = sub_1000E3044();
  v13(v14);
  swift_release();
  return v12;
}

void MulticastChannel.joinGroup(_:interface:)()
{
  sub_1000B7690();
  uint64_t v4 = sub_1000E2FA4(v1, v2, v3);
  v5(v4);
  sub_1000E3060();
  sub_1000E3038();
  sub_1000E3078(v6, v7, v8, v9, 99, v10);
  sub_1000E3090();
  uint64_t v11 = *(void (**)(uint64_t))(v0 + 24);
  swift_retain();
  uint64_t v12 = sub_1000E2FE0();
  v11(v12);
  swift_release();
  sub_1000B75A4();
}

void MulticastChannel.joinGroup(_:device:)()
{
  sub_1000B7690();
  uint64_t v4 = sub_1000E2FA4(v1, v2, v3);
  v5(v4);
  sub_1000E3060();
  sub_1000E3038();
  sub_1000E3078(v6, v7, v8, v9, 106, v10);
  sub_1000E3090();
  uint64_t v11 = *(void (**)(uint64_t))(v0 + 32);
  swift_retain();
  uint64_t v12 = sub_1000E2FE0();
  v11(v12);
  swift_release();
  sub_1000B75A4();
}

uint64_t sub_1000E2CC0(unint64_t a1, uint64_t a2)
{
  return sub_100196DE8(a1, 0, a2);
}

uint64_t MulticastChannel.leaveGroup(_:promise:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(a4 + 56))(a1, 0, a2, a3, a4);
}

uint64_t MulticastChannel.leaveGroup(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000E3000(a1, a2);
  v4(v3);
  uint64_t v6 = v5;
  swift_getObjectType();
  sub_1000E3038();
  uint64_t v12 = EventLoop.makePromise<A>(of:file:line:)(v7, v8, v9, v10, 116, v11, v7, v6);
  swift_unknownObjectRelease();
  uint64_t v13 = *(void (**)(uint64_t))(v2 + 40);
  swift_retain();
  uint64_t v14 = sub_1000E3044();
  v13(v14);
  swift_release();
  return v12;
}

void MulticastChannel.leaveGroup(_:interface:)()
{
  sub_1000B7690();
  uint64_t v4 = sub_1000E2FA4(v1, v2, v3);
  v5(v4);
  sub_1000E3060();
  sub_1000E3038();
  sub_1000E3078(v6, v7, v8, v9, 124, v10);
  sub_1000E3090();
  uint64_t v11 = *(void (**)(uint64_t))(v0 + 48);
  swift_retain();
  uint64_t v12 = sub_1000E2FE0();
  v11(v12);
  swift_release();
  sub_1000B75A4();
}

void MulticastChannel.leaveGroup(_:device:)()
{
  sub_1000B7690();
  uint64_t v4 = sub_1000E2FA4(v1, v2, v3);
  v5(v4);
  sub_1000E3060();
  sub_1000E3038();
  sub_1000E3078(v6, v7, v8, v9, 131, v10);
  sub_1000E3090();
  uint64_t v11 = *(void (**)(uint64_t))(v0 + 56);
  swift_retain();
  uint64_t v12 = sub_1000E2FE0();
  v11(v12);
  swift_release();
  sub_1000B75A4();
}

unint64_t sub_1000E2EB8()
{
  unint64_t result = qword_10030FDC8;
  if (!qword_10030FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FDC8);
  }
  return result;
}

#error "1000E2F4C: call analysis failed (funcsize=29)"

ValueMetadata *type metadata accessor for NIOMulticastNotSupportedError()
{
  return &type metadata for NIOMulticastNotSupportedError;
}

ValueMetadata *type metadata accessor for NIOMulticastNotImplementedError()
{
  return &type metadata for NIOMulticastNotImplementedError;
}

uint64_t sub_1000E2FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_1000E2FE0()
{
  return v0;
}

uint64_t sub_1000E3000(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000E3044()
{
  return v0;
}

uint64_t sub_1000E3060()
{
  return swift_getObjectType();
}

uint64_t sub_1000E3078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return EventLoop.makePromise<A>(of:file:line:)(a1, a2, a3, a4, a5, a6, a1, v6);
}

uint64_t sub_1000E3090()
{
  return swift_unknownObjectRelease();
}

void __swiftcall AdaptiveRecvByteBufferAllocator.init()(ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator *__return_ptr retstr)
{
  *(_OWORD *)&retstr->minimum = xmmword_10025F040;
  *(int64x2_t *)&retstr->initial = vdupq_n_s64(0x800uLL);
  retstr->decreaseNow = 0;
}

ASOctaneSupportXPCService::FixedSizeRecvByteBufferAllocator __swiftcall FixedSizeRecvByteBufferAllocator.init(capacity:)(ASOctaneSupportXPCService::FixedSizeRecvByteBufferAllocator capacity)
{
  if (capacity.capacity < 1) {
    __break(1u);
  }
  return capacity;
}

void FixedSizeRecvByteBufferAllocator.buffer(allocator:)(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v5 = a5;
  if (!a5)
  {
    if (qword_100308D08 == -1)
    {
LABEL_5:
      sub_1000E349C();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v5, a1, a2, a3, a4);
  sub_1000E34C4();
LABEL_6:
  sub_1000E34D8();
}

void sub_1000E3190(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  FixedSizeRecvByteBufferAllocator.buffer(allocator:)(a1, a2, a3, a4, *v4);
}

uint64_t AdaptiveRecvByteBufferAllocator.minimum.getter()
{
  return *(void *)v0;
}

uint64_t AdaptiveRecvByteBufferAllocator.maximum.getter()
{
  return *(void *)(v0 + 8);
}

void __swiftcall AdaptiveRecvByteBufferAllocator.init(minimum:initial:maximum:)(ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator *__return_ptr retstr, Swift::Int minimum, Swift::Int initial, Swift::Int maximum)
{
  if (minimum < 0 || (initial >= minimum ? (BOOL v4 = maximum < initial) : (BOOL v4 = 1), v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v5 = 0x40000000;
  if ((unint64_t)minimum > 0x40000000 || (uint64_t v5 = minimum) != 0) {
    uint64_t v5 = 0x8000000000000000 >> __clz(v5);
  }
  Swift::Int v6 = 0x40000000;
  if (initial <= 0x40000000)
  {
    if (!initial)
    {
      Swift::Int v7 = 0;
      goto LABEL_13;
    }
    Swift::Int v6 = initial;
  }
  Swift::Int v7 = 1 << (63 - __clz(v6));
LABEL_13:
  Swift::Int v8 = 0x40000000;
  if (maximum <= 0x40000000)
  {
    if (!maximum)
    {
      Swift::Int v12 = 1;
LABEL_20:
      retstr->minimum = v5;
      retstr->maximum = v12;
      retstr->initial = v7;
      retstr->nextReceiveBufferSize = v7;
      retstr->decreaseNow = 0;
      return;
    }
    Swift::Int v8 = maximum;
  }
  BOOL v9 = __OFSUB__(v8, 1);
  unint64_t v10 = v8 - 1;
  if (!v9)
  {
    unint64_t v11 = __clz(v10);
    if (v11) {
      Swift::Int v12 = 1 << -(char)v11;
    }
    else {
      Swift::Int v12 = 0;
    }
    goto LABEL_20;
  }
LABEL_24:
  __break(1u);
}

void AdaptiveRecvByteBufferAllocator.buffer(allocator:)(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 24);
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!v5)
  {
    if (qword_100308D08 == -1)
    {
LABEL_5:
      sub_1000E349C();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v5, a1, a2, a3, a4);
  sub_1000E34C4();
LABEL_6:
  sub_1000E34D8();
}

Swift::Bool __swiftcall AdaptiveRecvByteBufferAllocator.record(actualReadBytes:)(Swift::Int actualReadBytes)
{
  Swift::Int v2 = *(void *)(v1 + 24);
  if (v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v2 < *(void *)v1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  Swift::Int v3 = *(void *)(v1 + 8);
  if (v3 < v2)
  {
LABEL_26:
    __break(1u);
    return actualReadBytes;
  }
  Swift::Int v4 = v2 >> 1;
  uint64_t v5 = 2 * v2;
  if (2 * v2 <= 0) {
    uint64_t v5 = *(void *)(v1 + 24);
  }
  if (v4 >= actualReadBytes && v4 >= *(void *)v1)
  {
    if (*(unsigned char *)(v1 + 32) != 1)
    {
      LOBYTE(actualReadBytes) = 0;
      *(unsigned char *)(v1 + 32) = 1;
      return actualReadBytes;
    }
    LOBYTE(actualReadBytes) = 0;
    *(void *)(v1 + 24) = v4;
    goto LABEL_22;
  }
  if (v2 == v5 || v2 > actualReadBytes || v3 < v5)
  {
    LOBYTE(actualReadBytes) = 0;
LABEL_22:
    *(unsigned char *)(v1 + 32) = 0;
    return actualReadBytes;
  }
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = 0;
  LOBYTE(actualReadBytes) = 1;
  return actualReadBytes;
}

void sub_1000E33C8(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
}

ValueMetadata *type metadata accessor for FixedSizeRecvByteBufferAllocator()
{
  return &type metadata for FixedSizeRecvByteBufferAllocator;
}

uint64_t getEnumTagSinglePayload for AdaptiveRecvByteBufferAllocator(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdaptiveRecvByteBufferAllocator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdaptiveRecvByteBufferAllocator()
{
  return &type metadata for AdaptiveRecvByteBufferAllocator;
}

uint64_t sub_1000E349C()
{
  return swift_retain();
}

uint64_t sub_1000E34EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x647261646E617473 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10024FA60();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1000E3574()
{
  return 0x647261646E617473;
}

void sub_1000E358C()
{
  sub_1000EA748();
  uint64_t v1 = v0;
  sub_100019524(&qword_10030FFB0);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_100057274();
  sub_10001C2A8(v1, v1[3]);
  sub_1000EA25C();
  sub_10024FD40();
  sub_10024F940();
  sub_1000EA6E4();
  v4();
  sub_1000EA730();
}

void sub_1000E367C()
{
  sub_1000EA9CC();
  uint64_t v2 = v1;
  sub_100019524(&qword_10030FF90);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1000EA89C();
  sub_1000EA25C();
  sub_10006AC84();
  if (!v0)
  {
    sub_10024F830();
    sub_100025FB0();
    v5();
  }
  sub_10001C2EC(v2);
  sub_1000EA994();
}

uint64_t sub_1000E3780(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000E3860(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0x6E6F6973726576;
  }
}

void sub_1000E3890()
{
  sub_1000EA748();
  v11[1] = v1;
  uint64_t v3 = v2;
  uint64_t v4 = sub_100019524(&qword_10030FFB8);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  unint64_t v10 = (char *)v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(v3, v3[3]);
  sub_1000EA2A8();
  sub_10024FD40();
  sub_10024F940();
  if (!v0) {
    sub_10024F960();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  sub_1000EA730();
}

void sub_1000E39CC()
{
  sub_1000EA9CC();
  uint64_t v2 = v1;
  sub_100019524(&qword_10030FFA0);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1000EA89C();
  sub_1000EA2A8();
  sub_10024FD20();
  if (v0)
  {
    sub_10001C2EC(v2);
  }
  else
  {
    sub_10024F830();
    sub_1000EAA6C();
    sub_10024F850();
    sub_100025FB0();
    v5();
    sub_10001C2EC(v2);
    swift_bridgeObjectRelease();
  }
  sub_1000EA994();
}

uint64_t sub_1000E3B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E34EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1000E3B94(uint64_t a1)
{
  unint64_t v2 = sub_1000EA25C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E3BD0(uint64_t a1)
{
  unint64_t v2 = sub_1000EA25C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000E3C0C(void *a1@<X8>)
{
  sub_1000E367C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_1000E3C38()
{
}

uint64_t sub_1000E3C54()
{
  return sub_1000E3860(*v0);
}

uint64_t sub_1000E3C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E3780(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000E3C84(uint64_t a1)
{
  unint64_t v2 = sub_1000EA2A8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E3CC0(uint64_t a1)
{
  unint64_t v2 = sub_1000EA2A8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000E3CFC(void *a1@<X8>)
{
  sub_1000E39CC();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_1000E3D2C()
{
}

uint64_t sub_1000E3D4C@<X0>(uint64_t a1@<X1>, char a2@<W3>, char a3@<W4>, uint64_t a4@<X8>)
{
  sub_10020F78C();
  uint64_t v39 = sub_10024EF70();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10005148C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v38 = *(void *)(a1 + 16);
  type metadata accessor for OctaneSubscription();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    uint64_t result = sub_10001DB0C(a1);
    uint64_t v23 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = v38;
    uint64_t v29 = v39;
LABEL_27:
    v43[0] = 1;
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = v29;
    *(void *)(a4 + 24) = v7;
    *(void *)(a4 + 32) = v8;
    *(void *)(a4 + 40) = v10;
    *(void *)(a4 + 48) = v32;
    *(void *)(a4 + 56) = v11;
    *(void *)(a4 + 64) = v30;
    *(void *)(a4 + 72) = v31;
    *(void *)(a4 + 80) = 0;
    *(unsigned char *)(a4 + 88) = 1;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(void *)(a4 + 128) = v23;
    return result;
  }
  uint64_t v36 = v11;
  uint64_t v37 = v10;
  uint64_t v13 = *(void *)(v12 + 176);
  char v14 = *(unsigned char *)(v12 + 184);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v15 = sub_100213730(v13, v14);
  uint64_t v34 = v16;
  uint64_t v35 = v15;
  unint64_t v17 = sub_100026044();
  unint64_t v18 = v17;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_10024F6F0();
    uint64_t v19 = result;
  }
  else
  {
    uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  char v21 = a3;
  if (!v19)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v29 = v39;
LABEL_26:
    sub_10001DB0C(a1);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release_n();
    uint64_t v10 = v37;
    uint64_t v32 = v38;
    uint64_t v11 = v36;
    uint64_t v31 = v34;
    uint64_t v30 = v35;
    goto LABEL_27;
  }
  if (v19 >= 1)
  {
    uint64_t v33 = v7;
    uint64_t v22 = 0;
    uint64_t v23 = _swiftEmptyArrayStorage;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v24 = (__objc2_class **)sub_10024F380();
      }
      else
      {
        uint64_t v24 = *(__objc2_class ***)(v18 + 8 * v22 + 32);
        swift_retain();
      }
      unint64_t v25 = *v24;
      if ((a2 & 1) != 0 && v25 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription10AdHocOffer
        || (v21 & 1) != 0 && v25 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription12WinbackOffer
        || v25 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription17IntroductoryOffer)
      {
        swift_retain();
        sub_100048DF8(a1);
        sub_1000E4150((uint64_t)v24, a1, (uint64_t)v44);
        sub_1000458B4((uint64_t)v44, (uint64_t)v43, &qword_10030FDD0);
        sub_1000458B4((uint64_t)v44, (uint64_t)v45, &qword_10030FDD0);
        if (sub_1000E7B2C((uint64_t)v45) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100035DA4();
            uint64_t v23 = v27;
          }
          unint64_t v26 = v23[2];
          if (v26 >= v23[3] >> 1)
          {
            sub_100035DA4();
            uint64_t v23 = v28;
          }
          sub_1000458B4((uint64_t)v43, (uint64_t)__src, &qword_10030FDD0);
          long long v23[2] = v26 + 1;
          memcpy(&v23[17 * v26 + 4], __src, 0x88uLL);
          char v21 = a3;
        }
      }
      else
      {
        swift_release();
      }
      ++v22;
    }
    while (v19 != v22);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v7 = v33;
    uint64_t v29 = v39;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E4150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(__objc2_class **)a1;
  if (*(__objc2_class **)a1 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription10AdHocOffer)
  {
    sub_1000EA9F0();
LABEL_8:
    uint64_t v27 = *(void *)(a1 + 104);
    uint64_t v28 = *(void *)(a1 + 96);
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (v6 != _TtCC25ASOctaneSupportXPCService18OctaneSubscription17IntroductoryOffer)
  {
    if (v6 != _TtCC25ASOctaneSupportXPCService18OctaneSubscription12WinbackOffer)
    {
      swift_release();
      swift_release();
      sub_10001DB0C(a2);
      sub_1000E7B44(v30);
      sub_1000458B4((uint64_t)v30, (uint64_t)v37, &qword_10030FDD0);
      return sub_1000458B4((uint64_t)v37, a3, &qword_10030FDD0);
    }
    unint64_t v24 = 0xE700000000000000;
    uint64_t v25 = 0x6B6361626E6957;
    goto LABEL_8;
  }
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  sub_1000EA9F0();
LABEL_9:
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v29 = a3;
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    switch(*(unsigned char *)(a1 + 57))
    {
      case 1:
        goto LABEL_14;
      default:
        char v9 = sub_10024FA60();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          sub_100087E08(v8, v7);
          if ((v10 & 1) == 0)
          {
            uint64_t v26 = sub_10024EC10();
            unint64_t v12 = v11;
            uint64_t v13 = sub_10005148C();
            uint64_t v15 = v14;
            sub_10001DB0C(a2);
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
LABEL_14:
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v26 = 808463920;
  unint64_t v12 = 0xE400000000000000;
  uint64_t v13 = sub_10005148C();
  uint64_t v15 = v16;
  sub_10001DB0C(a2);
LABEL_16:
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  if (*(unsigned char *)(a1 + 56)) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = *(void *)(a1 + 48);
  }
  uint64_t v20 = *(char *)(a1 + 57);
  uint64_t v21 = *(void *)&aNone_2[8 * v20];
  uint64_t v22 = *(void *)&aFreetriapayasy[8 * v20 + 24];
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  v30[0] = v25;
  v30[1] = v24;
  v30[2] = v26;
  void v30[3] = v12;
  v30[4] = v13;
  v30[5] = v15;
  v30[6] = 0;
  v30[7] = 0;
  v30[8] = v18;
  v30[9] = v17;
  v30[10] = v19;
  char v31 = 0;
  uint64_t v32 = v21;
  uint64_t v33 = v22;
  uint64_t v34 = v28;
  uint64_t v35 = v27;
  uint64_t v36 = 0;
  debugOnly(_:)(v30);
  sub_1000458B4((uint64_t)v30, (uint64_t)v37, &qword_10030FDD0);
  a3 = v29;
  return sub_1000458B4((uint64_t)v37, a3, &qword_10030FDD0);
}

uint64_t sub_1000E4490(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v4._rawValue = &off_1002D7DE0;
  v6._object = a2;
  sub_10024F790(v4, v6);
  sub_10001B63C();
  if (v2 >= 9) {
    return 9;
  }
  else {
    return v2;
  }
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_if.getter()
{
  return 9;
}

uint64_t sub_1000E44E0(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1000EA960();
      break;
    case 2:
      uint64_t result = sub_1000EA784();
      break;
    case 3:
      uint64_t result = sub_1000EA808();
      break;
    case 4:
      uint64_t result = sub_1000EA938();
      break;
    case 5:
      uint64_t result = sub_1000EA7E8();
      break;
    case 6:
      uint64_t result = sub_1000EA84C();
      break;
    case 7:
      uint64_t result = sub_1000EA884();
      break;
    case 8:
      uint64_t result = 0x6570795465646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E4574(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1000EA960();
      break;
    case 2:
      uint64_t result = sub_1000EA784();
      break;
    case 3:
      uint64_t result = sub_1000EA808();
      break;
    case 4:
      uint64_t result = sub_1000EA938();
      break;
    case 5:
      uint64_t result = sub_1000EA7E8();
      break;
    case 6:
      uint64_t result = sub_1000EA84C();
      break;
    case 7:
      uint64_t result = sub_1000EA884();
      break;
    case 8:
      uint64_t result = 0x6570795465646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000E4608()
{
  sub_1000EA9CC();
  sub_100019524(&qword_10030FEE0);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_100025F70();
  sub_1000E96C0();
  sub_100025FCC();
  char v5 = 0;
  sub_10024F8D0();
  if (!v1)
  {
    char v5 = 1;
    sub_1000EA868();
    char v5 = 2;
    sub_1000EA868();
    sub_1000EA70C(3);
    sub_1000EA70C(4);
    char v5 = 5;
    sub_10024F900();
    sub_1000458B4(v0 + 128, (uint64_t)&v6, &qword_10030FEE8);
    sub_1000458B4((uint64_t)&v6, (uint64_t)&v5, &qword_10030FEE8);
    sub_100019524(&qword_10030FE70);
    sub_1000E9834(&qword_10030FEB0, &qword_10030FE70, (void (*)(void))sub_1000E9628);
    sub_10024F910();
    sub_1000EA70C(7);
    sub_1000EA70C(8);
  }
  sub_100025FB0();
  v4();
  sub_1000EA994();
}

void sub_1000E4848()
{
  sub_1000EA748();
  uint64_t v2 = v1;
  Swift::OpaquePointer v4 = v3;
  sub_100019524(&qword_10030FED0);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_100057274();
  uint64_t v53 = (uint64_t)v2;
  sub_10001C2A8(v2, v2[3]);
  sub_1000E96C0();
  sub_10024FD20();
  if (v0)
  {
    sub_10001C2EC((uint64_t)v2);
  }
  else
  {
    uint64_t v7 = sub_1000EA7A8();
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    uint64_t v40 = v9;
    uint64_t v35 = sub_1000EAAB0();
    uint64_t v11 = v10;
    swift_bridgeObjectRetain();
    uint64_t v39 = v11;
    uint64_t v34 = sub_1000EAAB0();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v38 = v13;
    uint64_t v14 = sub_1000EA7A8();
    uint64_t v37 = v15;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1000EA7A8();
    uint64_t v33 = v14;
    LOBYTE(v42[0]) = 5;
    uint64_t v17 = v16;
    swift_bridgeObjectRetain();
    uint64_t v36 = v17;
    uint64_t v31 = sub_10024F7F0();
    char v52 = v18 & 1;
    LOBYTE(v17) = v18;
    sub_100019524(&qword_10030FE70);
    LOBYTE(v41[0]) = 6;
    sub_1000E9834(&qword_10030FE78, &qword_10030FE70, (void (*)(void))sub_1000E9330);
    sub_10024F800();
    char v30 = v17;
    uint64_t v19 = v42[0];
    LOBYTE(v42[0]) = 7;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1000EA7A8();
    uint64_t v20 = v19;
    char v50 = 8;
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10024F7C0();
    uint64_t v28 = v24;
    uint64_t v25 = v23;
    uint64_t v26 = sub_1000EA6CC();
    v27(v26);
    v41[0] = v7;
    v41[1] = v40;
    v41[2] = v35;
    v41[3] = v39;
    v41[4] = v34;
    v41[5] = v38;
    v41[6] = v33;
    v41[7] = v37;
    char v41[8] = v32;
    v41[9] = v36;
    v41[10] = v31;
    LOBYTE(v41[11]) = v30 & 1;
    v41[12] = v25;
    v41[13] = v28;
    v41[14] = v29;
    v41[15] = v22;
    v41[16] = v20;
    swift_bridgeObjectRetain();
    sub_1000E970C((uint64_t)v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001C2EC(v53);
    v42[0] = v7;
    v42[1] = v40;
    v42[2] = v35;
    v42[3] = v39;
    v42[4] = v34;
    v42[5] = v38;
    v42[6] = v33;
    v42[7] = v37;
    char v42[8] = v32;
    v42[9] = v36;
    v42[10] = v31;
    char v43 = v52;
    *(_DWORD *)uint64_t v44 = *(_DWORD *)v51;
    *(_DWORD *)&unsigned char v44[3] = *(_DWORD *)&v51[3];
    uint64_t v45 = v25;
    uint64_t v46 = v28;
    uint64_t v47 = v29;
    uint64_t v48 = v22;
    uint64_t v49 = v20;
    sub_1000E97A0((uint64_t)v42);
    memcpy(v4, v41, 0x88uLL);
  }
  sub_1000EA730();
}

uint64_t sub_1000E4EC4(char *a1)
{
  return sub_1000FA5C8(*a1);
}

Swift::Int sub_1000E4ED0()
{
  return sub_1001D3658(*v0);
}

uint64_t sub_1000E4ED8()
{
  return sub_1000D1834();
}

Swift::Int sub_1000E4EE0(uint64_t a1)
{
  return sub_1000D3260(a1, *v1);
}

uint64_t sub_1000E4EE8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000E4490(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000E4F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E44E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000E4F44()
{
  return sub_1000E4574(*v0);
}

uint64_t sub_1000E4F4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E44D4();
  *a1 = result;
  return result;
}

void sub_1000E4F74(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1000E4F80(uint64_t a1)
{
  unint64_t v2 = sub_1000E96C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E4FBC(uint64_t a1)
{
  unint64_t v2 = sub_1000E96C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000E4FF8(void *a1@<X8>)
{
  sub_1000E4848();
  if (!v1) {
    memcpy(a1, __src, 0x88uLL);
  }
}

void sub_1000E5044()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1000E4608();
}

uint64_t sub_1000E5098(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x726F6C6F436762 && a2 == 0xE700000000000000;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
      if (v7 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1000E5228(char a1)
{
  uint64_t result = 7107189;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726F6C6F436762;
      break;
    case 2:
      uint64_t result = 0x6874646977;
      break;
    case 3:
      uint64_t result = 0x746867696568;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000E52AC()
{
  sub_1000EA9CC();
  sub_100019524(&qword_10030FE48);
  sub_10001B550();
  __chkstk_darwin(v1, v2);
  sub_100025F70();
  sub_1000E9200();
  sub_100025FCC();
  sub_10024F940();
  if (!v0)
  {
    sub_10024F8D0();
    sub_10024F960();
    sub_10024F960();
  }
  sub_100025FB0();
  v3();
  sub_1000EA994();
}

void sub_1000E540C()
{
  sub_1000EA748();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100019524(&qword_10030FE38);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_1000ACE78();
  uint64_t v7 = *(void *)(v2 + 24);
  sub_1000EA89C();
  sub_1000E9200();
  sub_10024FD20();
  if (v0)
  {
    sub_10001C2EC(v2);
  }
  else
  {
    sub_1000EA9E0();
    uint64_t v8 = sub_10024F830();
    sub_1000EAA6C();
    sub_1000EA9E0();
    uint64_t v9 = sub_10024F7C0();
    uint64_t v11 = v10;
    uint64_t v16 = v9;
    swift_bridgeObjectRetain();
    uint64_t v17 = v11;
    uint64_t v15 = sub_10024F850();
    sub_1000EA9E0();
    uint64_t v12 = sub_10024F850();
    uint64_t v13 = sub_1000EA6B4();
    v14(v13);
    sub_10001C2EC(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v8;
    v4[1] = v7;
    long long v4[2] = v16;
    v4[3] = v17;
    void v4[4] = v15;
    v4[5] = v12;
  }
  sub_1000EA730();
}

uint64_t sub_1000E5608()
{
  return sub_1000E5228(*v0);
}

uint64_t sub_1000E5610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E5098(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000E5638(uint64_t a1)
{
  unint64_t v2 = sub_1000E9200();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E5674(uint64_t a1)
{
  unint64_t v2 = sub_1000E9200();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1000E56B0@<D0>(_OWORD *a1@<X8>)
{
  sub_1000E540C();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_1000E56F4()
{
}

uint64_t sub_1000E570C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v52 = *(void *)(a1 + 80);
  uint64_t v51 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain();
  unint64_t v16 = swift_bridgeObjectRetain();
  sub_1000F072C(v16);
  sub_10001B63C();
  if (a5)
  {
    unint64_t v17 = a5[3];
    uint64_t v49 = a5[2];
    uint64_t v50 = a5[4];
    unint64_t v47 = a5[5];
    swift_bridgeObjectRetain();
    unint64_t v48 = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    unint64_t v48 = 0xE000000000000000;
    unint64_t v47 = 0xE000000000000000;
  }
  char v46 = *(unsigned char *)(a1 + 32);
  if (*(void *)(a6 + 16))
  {
    sub_10024FC00();
    sub_10024E780();
    sub_10024FC70();
    sub_1000EAA58();
    if ((*(void *)(a6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v19 = ~v18;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(a6 + 48) + v9))
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_16;
          case 2:
            sub_1000EAAE4();
            break;
          case 3:
            sub_1000EAAD0();
            break;
          case 4:
            sub_1000EA8F0();
            break;
          default:
            break;
        }
        char v20 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v20) {
          break;
        }
        unint64_t v9 = (v9 + 1) & v19;
        if (((*(void *)(a6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_13;
        }
      }
LABEL_16:
      unint64_t v21 = 0xEA0000000000656CLL;
      unint64_t v22 = 0x62616D75736E6F43;
      switch(*(unsigned char *)(a1 + 112))
      {
        case 1:
          unint64_t v21 = 0xEE00656C62616D75;
          unint64_t v22 = 0x736E6F432D6E6F4ELL;
          break;
        case 2:
          unint64_t v21 = 0x800000010027DB40;
          unint64_t v22 = 0xD000000000000019;
          break;
        case 3:
          unint64_t v22 = 0xD00000000000001BLL;
          unint64_t v21 = 0x800000010027DB20;
          break;
        default:
          break;
      }
      unint64_t v44 = v21;
      unint64_t v45 = v22;
    }
    else
    {
LABEL_13:
      unint64_t v44 = 0;
      unint64_t v45 = 0;
    }
  }
  else
  {
    unint64_t v44 = 0;
    unint64_t v45 = 0;
  }
  type metadata accessor for OctaneSubscription();
  uint64_t v23 = (void *)swift_dynamicCastClass();
  uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v42 = v23[24];
    uint64_t v43 = v23[21];
    uint64_t v41 = v23[25];
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    a2 = 0;
    a3 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v41 = 0;
  }
  sub_100019524(&qword_10030A4B8);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100255FB0;
  uint64_t v54 = a3;
  if (*(void *)(a6 + 16))
  {
    sub_10024FC00();
    swift_retain();
    sub_100048DF8(a4);
    swift_retain();
    sub_10024E780();
    sub_10024FC70();
    sub_1000EAA58();
    if ((*(void *)(a6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v26 = ~v25;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(a6 + 48) + v9))
        {
          case 2:
            swift_bridgeObjectRelease();
            char v27 = 1;
            goto LABEL_35;
          case 3:
            sub_1000EAAD0();
            goto LABEL_30;
          case 4:
            sub_1000EA8F0();
            goto LABEL_30;
          default:
LABEL_30:
            char v27 = sub_10024FA60();
            swift_bridgeObjectRelease();
            if (v27) {
              goto LABEL_35;
            }
            unint64_t v9 = (v9 + 1) & v26;
            if (((*(void *)(a6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
              goto LABEL_35;
            }
            continue;
        }
      }
    }
  }
  else
  {
    swift_retain();
    sub_100048DF8(a4);
    swift_retain();
  }
  char v27 = 0;
LABEL_35:
  if (*(void *)(a6 + 16))
  {
    sub_10024FC00();
    sub_10024E780();
    Swift::Int v28 = sub_10024FC70();
    uint64_t v29 = -1 << *(unsigned char *)(a6 + 32);
    unint64_t v30 = v28 & ~v29;
    if ((*(void *)(a6 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
    {
      uint64_t v31 = ~v29;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(a6 + 48) + v30))
        {
          case 2:
            sub_1000EAAE4();
            goto LABEL_41;
          case 3:
            swift_bridgeObjectRelease();
            char v32 = 1;
            goto LABEL_45;
          case 4:
            sub_1000EA8F0();
            goto LABEL_41;
          default:
LABEL_41:
            char v32 = sub_10024FA60();
            swift_bridgeObjectRelease();
            if (v32) {
              goto LABEL_45;
            }
            unint64_t v30 = (v30 + 1) & v31;
            if (((*(void *)(a6 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
              goto LABEL_45;
            }
            continue;
        }
      }
    }
  }
  char v32 = 0;
LABEL_45:
  BOOL v33 = v24 == 0;
  swift_bridgeObjectRelease();
  sub_1000E3D4C(a4, v27 & 1, v32 & 1, (uint64_t)__src);
  memcpy((void *)(v40 + 32), __src, 0x88uLL);
  uint64_t v34 = sub_1000F0A58(a4);
  uint64_t v36 = v35;
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = sub_10001DB0C(a4);
  uint64_t v38 = a7;
  if (!a8) {
    uint64_t v38 = 0;
  }
  unint64_t v39 = (unint64_t)(a8 != 0) << 10;
  *(void *)a9 = v52;
  *(void *)(a9 + 8) = v51;
  *(void *)(a9 + 16) = v50;
  *(void *)(a9 + 24) = v47;
  *(void *)(a9 + 32) = v49;
  *(void *)(a9 + 40) = v48;
  *(void *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = 0;
  *(void *)(a9 + 48) = 0;
  *(unsigned char *)(a9 + 72) = v46;
  *(void *)(a9 + 80) = v45;
  *(void *)(a9 + 88) = v44;
  *(void *)(a9 + 96) = v42;
  *(void *)(a9 + 104) = v41;
  *(void *)(a9 + 112) = v40;
  *(void *)(a9 + 120) = v34;
  *(void *)(a9 + 128) = v36;
  *(void *)(a9 + 136) = v43;
  *(unsigned char *)(a9 + 144) = v33;
  *(void *)(a9 + 152) = a2;
  *(void *)(a9 + 160) = v54;
  *(void *)(a9 + 168) = v38;
  *(void *)(a9 + 176) = a8;
  *(void *)(a9 + 184) = 0;
  *(void *)(a9 + 192) = 0;
  *(void *)(a9 + 200) = v39;
  *(void *)(a9 + 208) = v39;
  return result;
}

uint64_t sub_1000E5E74(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v4._rawValue = &off_1002D7ED8;
  v6._object = a2;
  sub_10024F790(v4, v6);
  sub_10001B63C();
  if (v2 >= 0xC) {
    return 12;
  }
  else {
    return v2;
  }
}

void sub_1000E5EBC()
{
  sub_1000EAA8C();
  switch(v0)
  {
    case 1:
      sub_1000EA974();
      break;
    case 2:
      sub_1000EA7C8();
      break;
    case 3:
      sub_1000EA760();
      break;
    case 4:
    case 7:
      sub_100020688();
      break;
    case 5:
      sub_1000EA984();
      break;
    case 6:
    case 8:
      sub_1000EA94C();
      break;
    case 9:
      sub_1000EA924();
      break;
    case 10:
      sub_1000EA8F0();
      break;
    default:
      return;
  }
}

void sub_1000E5F90()
{
  sub_1000EAA8C();
  switch(v0)
  {
    case 1:
      sub_1000EA974();
      break;
    case 2:
      sub_1000EA7C8();
      break;
    case 3:
      sub_1000EA760();
      break;
    case 4:
    case 7:
      sub_100020688();
      break;
    case 5:
      sub_1000EA984();
      break;
    case 6:
    case 8:
      sub_1000EA94C();
      break;
    case 9:
      sub_1000EA924();
      break;
    case 10:
      sub_1000EA8F0();
      break;
    default:
      return;
  }
}

void sub_1000E6064()
{
  sub_1000EA9CC();
  sub_100019524(&qword_10030FE90);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_100025F70();
  sub_1000E924C();
  sub_100025FCC();
  LOBYTE(v5[0]) = 0;
  sub_1000EA904();
  if (!v1)
  {
    LOBYTE(v5[0]) = 1;
    sub_1000EA904();
    v5[0] = *(_OWORD *)(v0 + 32);
    char v6 = 2;
    sub_1000E9590();
    sub_10024F980();
    sub_1000458B4(v0 + 48, (uint64_t)v8, &qword_10030FEA0);
    sub_1000458B4((uint64_t)v8, (uint64_t)v5, &qword_10030FEA0);
    char v6 = 3;
    sub_1000E95DC();
    sub_1000EAA34();
    LOBYTE(v5[0]) = 4;
    sub_10024F950();
    sub_1000EA828(5);
    sub_1000EA828(6);
    sub_1000EA828(7);
    LOBYTE(v5[0]) = 8;
    sub_10024F900();
    *(void *)&v5[0] = *(void *)(v0 + 112);
    char v6 = 9;
    sub_100019524(&qword_10030FE70);
    sub_1000E9834(&qword_10030FEB0, &qword_10030FE70, (void (*)(void))sub_1000E9628);
    sub_10024F980();
    LOBYTE(v5[0]) = 10;
    sub_1000EA904();
    sub_1000458B4(v0 + 168, (uint64_t)v7, &qword_10030FEC0);
    sub_1000458B4((uint64_t)v7, (uint64_t)v5, &qword_10030FEC0);
    char v6 = 11;
    sub_1000E9674();
    sub_1000EAA34();
  }
  sub_100025FB0();
  v4();
  sub_1000EA994();
}

void sub_1000E6358()
{
  sub_1000EA748();
  uint64_t v2 = v1;
  Swift::OpaquePointer v4 = v3;
  sub_100019524(&qword_10030FE50);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_1000ACE78();
  uint64_t v59 = (uint64_t)v2;
  sub_10001C2A8(v2, v2[3]);
  sub_1000E924C();
  sub_10024FD20();
  if (v0)
  {
    unsigned int v7 = 0;
  }
  else
  {
    uint64_t v8 = sub_10024F830();
    LOBYTE(v61) = 1;
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v57 = v10;
    uint64_t v11 = sub_10024F830();
    uint64_t v13 = v12;
    uint64_t v48 = v11;
    LOBYTE(v60[0]) = 2;
    unint64_t v14 = sub_1000E9298();
    swift_bridgeObjectRetain();
    sub_1000EA8BC();
    sub_10024F870();
    uint64_t v56 = v13;
    if (v14)
    {
      uint64_t v15 = sub_1000EA6B4();
      v16(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v7 = 3;
    }
    else
    {
      LOBYTE(v60[0]) = 3;
      unint64_t v17 = sub_1000E92E4();
      swift_bridgeObjectRetain();
      sub_1000EA8BC();
      sub_10024F800();
      uint64_t v55 = v62;
      if (!v17)
      {
        uint64_t v47 = v61;
        swift_bridgeObjectRetain();
        sub_1000EAA08();
        uint64_t v54 = v62;
        char v44 = sub_10024F840();
        uint64_t v46 = v63;
        uint64_t v20 = sub_1000EAA18();
        uint64_t v43 = v61;
        uint64_t v22 = v21;
        swift_bridgeObjectRetain();
        uint64_t v53 = v22;
        uint64_t v42 = sub_1000EAA18();
        uint64_t v24 = v23;
        swift_bridgeObjectRetain();
        uint64_t v52 = v24;
        uint64_t v41 = sub_1000EAA18();
        LOBYTE(v61) = 8;
        uint64_t v26 = v25;
        swift_bridgeObjectRetain();
        sub_1000EAA08();
        uint64_t v40 = sub_10024F7F0();
        uint64_t v51 = v26;
        LOBYTE(v26) = v27;
        char v98 = v27 & 1;
        sub_100019524(&qword_10030FE70);
        LOBYTE(v60[0]) = 9;
        sub_1000E9834(&qword_10030FE78, &qword_10030FE70, (void (*)(void))sub_1000E9330);
        sub_10024F870();
        uint64_t v28 = v61;
        LOBYTE(v61) = 10;
        uint64_t v50 = v28;
        swift_bridgeObjectRetain();
        sub_1000EAA08();
        uint64_t v29 = sub_10024F830();
        uint64_t v49 = v30;
        uint64_t v31 = v29;
        char v90 = 11;
        sub_1000E937C();
        swift_bridgeObjectRetain();
        sub_10024F800();
        char v32 = v44 & 1;
        char v35 = v44 & 1;
        uint64_t v33 = sub_1000EA6F0();
        v34(v33);
        uint64_t v58 = v92;
        uint64_t v45 = v93;
        uint64_t v38 = v95;
        uint64_t v39 = v94;
        uint64_t v36 = v91;
        uint64_t v37 = v96;
        v60[0] = v8;
        v60[1] = v57;
        v60[2] = v48;
        v60[3] = v56;
        v60[4] = v47;
        v60[5] = v55;
        v60[6] = v43;
        v60[7] = v54;
        v60[8] = v46;
        LOBYTE(v60[9]) = v32;
        v60[10] = v20;
        v60[11] = v53;
        v60[12] = v41;
        v60[13] = v51;
        v60[14] = v50;
        v60[15] = v31;
        v60[16] = v49;
        v60[17] = v40;
        LOBYTE(v60[18]) = v26 & 1;
        v60[19] = v42;
        v60[20] = v52;
        v60[21] = v91;
        v60[22] = v92;
        v60[23] = v93;
        v60[24] = v94;
        v60[25] = v95;
        v60[26] = v96;
        sub_1000E93C8((uint64_t)v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001C2EC(v59);
        uint64_t v61 = v8;
        uint64_t v62 = v57;
        uint64_t v63 = v48;
        uint64_t v64 = v56;
        uint64_t v65 = v47;
        uint64_t v66 = v55;
        uint64_t v67 = v43;
        uint64_t v68 = v54;
        uint64_t v69 = v46;
        char v70 = v35;
        *(_DWORD *)long long v71 = v99[0];
        *(_DWORD *)&v71[3] = *(_DWORD *)((char *)v99 + 3);
        uint64_t v72 = v20;
        uint64_t v73 = v53;
        uint64_t v74 = v41;
        uint64_t v75 = v51;
        uint64_t v76 = v50;
        uint64_t v77 = v31;
        uint64_t v78 = v49;
        uint64_t v79 = v40;
        char v80 = v98;
        *(_DWORD *)long long v81 = *(_DWORD *)v97;
        *(_DWORD *)&v81[3] = *(_DWORD *)&v97[3];
        uint64_t v82 = v42;
        uint64_t v83 = v52;
        uint64_t v84 = v36;
        uint64_t v85 = v58;
        uint64_t v86 = v45;
        uint64_t v87 = v39;
        uint64_t v88 = v38;
        uint64_t v89 = v37;
        sub_1000E94AC((uint64_t)&v61);
        memcpy(v4, v60, 0xD8uLL);
        goto LABEL_14;
      }
      uint64_t v18 = sub_1000EA6B4();
      v19(v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v7 = 7;
    }
  }
  sub_10001C2EC((uint64_t)v2);
  if (v7)
  {
    swift_bridgeObjectRelease();
    if (((v7 >> 1) & 1) == 0)
    {
LABEL_6:
      if ((v7 >> 2)) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  if ((v7 >> 2))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (((v7 >> 3) & 1) == 0) {
      goto LABEL_8;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (((v7 >> 5) & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
LABEL_12:
  if ((v7 >> 3)) {
    goto LABEL_13;
  }
LABEL_8:
  if ((v7 >> 5)) {
LABEL_9:
  }
    swift_bridgeObjectRelease();
LABEL_14:
  sub_1000EA730();
}

BOOL sub_1000E6C7C(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v4._rawValue = &off_1002D8018;
  v6._object = a2;
  sub_10024F790(v4, v6);
  sub_10001B63C();
  return v2 != 0;
}

uint64_t sub_1000E6CBC()
{
  return 0x737070612D6E69;
}

uint64_t sub_1000E6CD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FA7F4(*a1, *a2);
}

Swift::Int sub_1000E6CE0()
{
  return sub_1001D3670(*v0);
}

uint64_t sub_1000E6CE8(uint64_t a1)
{
  return sub_1000D1958(a1, *v1);
}

Swift::Int sub_1000E6CF0(uint64_t a1)
{
  return sub_1000D3278(a1, *v1);
}

uint64_t sub_1000E6CF8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000E5E74(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000E6D28(void *a1@<X8>)
{
  sub_1000E5EBC();
  *a1 = v2;
  a1[1] = v3;
}

void sub_1000E6D54()
{
}

uint64_t sub_1000E6D5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E5EB8();
  *a1 = result;
  return result;
}

void sub_1000E6D84(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1000E6D90(uint64_t a1)
{
  unint64_t v2 = sub_1000E924C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E6DCC(uint64_t a1)
{
  unint64_t v2 = sub_1000E924C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000E6E08(void *a1@<X8>)
{
  sub_1000E6358();
  if (!v1) {
    memcpy(a1, __src, 0xD8uLL);
  }
}

void sub_1000E6E54()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1000E6064();
}

BOOL sub_1000E6EB4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1000E6C7C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000E6EEC(void *a1@<X8>)
{
  *a1 = 0x737070612D6E69;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1000E6F08()
{
  return sub_10024EA50();
}

uint64_t sub_1000E6F68()
{
  return sub_10024EA00();
}

uint64_t sub_1000E6FB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1717924456 && a2 == 0xE400000000000000;
      if (v7 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1000E7144(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 1717924456;
      break;
    case 3:
      uint64_t result = 0x7475626972747461;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000E71C0()
{
  sub_1000EA748();
  sub_100019524(&qword_10030FE20);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_100025F70();
  sub_1000E8DFC();
  sub_100025FCC();
  v5[0] = 0;
  sub_1000EA868();
  if (!v1)
  {
    v5[0] = 1;
    sub_1000E9168();
    sub_10024F980();
    v5[0] = 2;
    sub_1000EA868();
    memcpy(v5, (const void *)(v0 + 32), sizeof(v5));
    sub_1000E91B4();
    sub_10024F980();
  }
  sub_100025FB0();
  v4();
  sub_1000EA730();
}

void sub_1000E7340()
{
  sub_1000EA748();
  uint64_t v2 = v1;
  Swift::OpaquePointer v4 = v3;
  sub_100019524(&qword_10030FE00);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_10001C2A8(v2, v2[3]);
  sub_1000E8DFC();
  sub_10024FD20();
  if (v0)
  {
    sub_10001C2EC((uint64_t)v2);
  }
  else
  {
    uint64_t v20 = v4;
    uint64_t v21 = (uint64_t)v2;
    uint64_t v7 = sub_10024F830();
    uint64_t v9 = v8;
    LOBYTE(v23[0]) = 1;
    unint64_t v10 = sub_1000E8E48();
    swift_bridgeObjectRetain();
    sub_1000EA9A8();
    if (v10)
    {
      sub_1000EA6E4();
      v12();
      swift_bridgeObjectRelease();
      int v13 = 0;
    }
    else
    {
      LOBYTE(v23[0]) = 2;
      uint64_t v11 = sub_10024F830();
      uint64_t v15 = v14;
      uint64_t v19 = v11;
      unint64_t v16 = sub_1000E8E94();
      swift_bridgeObjectRetain();
      sub_1000EA9A8();
      if (!v16)
      {
        sub_1000EA6E4();
        v18();
        memcpy(&v22[4], v25, 0xD8uLL);
        memcpy(v26, v25, sizeof(v26));
        v22[0] = v7;
        v22[1] = v9;
        v22[2] = v19;
        v22[3] = v15;
        sub_1000E8EE0((uint64_t)v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001C2EC(v21);
        v23[0] = v7;
        v23[1] = v9;
        long long v23[2] = v19;
        v23[3] = v15;
        memcpy(v24, v26, sizeof(v24));
        sub_1000E9024((uint64_t)v23);
        memcpy(v20, v22, 0xF8uLL);
        goto LABEL_4;
      }
      sub_1000EA6E4();
      v17();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v13 = 1;
    }
    sub_10001C2EC(v21);
    swift_bridgeObjectRelease();
    if (v13) {
      swift_bridgeObjectRelease();
    }
  }
LABEL_4:
  sub_1000EA730();
}

uint64_t sub_1000E760C()
{
  return sub_1000E7144(*v0);
}

uint64_t sub_1000E7614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E6FB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000E763C(uint64_t a1)
{
  unint64_t v2 = sub_1000E8DFC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E7678(uint64_t a1)
{
  unint64_t v2 = sub_1000E8DFC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000E76B4(void *a1@<X8>)
{
  sub_1000E7340();
  if (!v1) {
    memcpy(a1, __src, 0xF8uLL);
  }
}

void sub_1000E7708()
{
}

uint64_t sub_1000E7720(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10024FA60();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1000E7798()
{
  return 1635017060;
}

void sub_1000E77A8()
{
  sub_1000EA9CC();
  sub_100019524(&qword_10030FDD8);
  sub_10001B550();
  __chkstk_darwin(v0, v1);
  sub_100025F70();
  sub_1000E8D64();
  sub_100025FCC();
  sub_100019524(&qword_10030FDE8);
  sub_1000E9834(&qword_10030FDF0, &qword_10030FDE8, (void (*)(void))sub_1000E8DB0);
  sub_10024F980();
  sub_100025FB0();
  v2();
  sub_1000EA994();
}

void sub_1000E78E0()
{
  sub_1000EA9CC();
  uint64_t v2 = v1;
  sub_100019524(&qword_10030FEF0);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1000EA89C();
  sub_1000E8D64();
  sub_10006AC84();
  if (!v0)
  {
    sub_100019524(&qword_10030FDE8);
    sub_1000E9834(&qword_10030FEF8, &qword_10030FDE8, (void (*)(void))sub_1000E98A0);
    sub_10024F870();
    sub_100025FB0();
    v5();
  }
  sub_10001C2EC(v2);
  sub_1000EA994();
}

uint64_t sub_1000E7A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E7720(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1000E7A6C(uint64_t a1)
{
  unint64_t v2 = sub_1000E8D64();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E7AA8(uint64_t a1)
{
  unint64_t v2 = sub_1000E8D64();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000E7AE4(void *a1@<X8>)
{
  sub_1000E78E0();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1000E7B10()
{
}

uint64_t sub_1000E7B2C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_1000E7B44(void *a1)
{
}

uint64_t sub_1000E7B4C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 208);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E7BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  uint64_t v18 = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v18;
    uint64_t v15 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v15;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v16;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  }
  return a1;
}

uint64_t sub_1000E7D5C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v4;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 200);
  uint64_t v6 = (_OWORD *)(a2 + 200);
  uint64_t v7 = *(void *)(a2 + 208);
  if (*(void *)(a1 + 208))
  {
    if (v7)
    {
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
    }
    else
    {
      sub_1000E7FE4(a1 + 200);
      long long v9 = *(_OWORD *)(a2 + 216);
      long long v8 = *(_OWORD *)(a2 + 232);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 216) = v9;
      *(_OWORD *)(a1 + 232) = v8;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v6;
    long long v11 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v11;
    *uint64_t v5 = v10;
  }
  return a1;
}

uint64_t sub_1000E7FE4(uint64_t a1)
{
  return a1;
}

void *sub_1000E8014(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xF8uLL);
}

uint64_t sub_1000E801C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v13;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 208)) {
    goto LABEL_5;
  }
  uint64_t v14 = *(void *)(a2 + 208);
  if (!v14)
  {
    sub_1000E7FE4(a1 + 200);
LABEL_5:
    long long v16 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v16;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    return a1;
  }
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  return a1;
}

uint64_t sub_1000E8174(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 248))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000E81B4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MediaFetchResponse.Datum()
{
}

uint64_t sub_1000E823C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000E8284(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t sub_1000E8304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.Image()
{
}

uint64_t sub_1000E8360(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 176);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E83F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v16 = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v16;
    uint64_t v13 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v13;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v14;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  }
  return a1;
}

uint64_t sub_1000E8538(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v4;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 168);
  uint64_t v6 = (_OWORD *)(a2 + 168);
  uint64_t v7 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v7)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
    }
    else
    {
      sub_1000E7FE4(a1 + 168);
      long long v9 = *(_OWORD *)(a2 + 184);
      long long v8 = *(_OWORD *)(a2 + 200);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 184) = v9;
      *(_OWORD *)(a1 + 200) = v8;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v6;
    long long v11 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v11;
    *uint64_t v5 = v10;
  }
  return a1;
}

void *sub_1000E8780(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

uint64_t sub_1000E8788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 176)) {
    goto LABEL_5;
  }
  uint64_t v12 = *(void *)(a2 + 176);
  if (!v12)
  {
    sub_1000E7FE4(a1 + 168);
LABEL_5:
    long long v14 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v14;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    return a1;
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v13;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  return a1;
}

uint64_t sub_1000E88C0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 216))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000E8900(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes()
{
}

uint64_t sub_1000E8980()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E89EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000E8AB4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1000E8BEC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t sub_1000E8BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000E8CAC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000E8CEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.Offer()
{
}

void type metadata accessor for MediaFetchResponse()
{
}

unint64_t sub_1000E8D64()
{
  unint64_t result = qword_10030FDE0;
  if (!qword_10030FDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FDE0);
  }
  return result;
}

unint64_t sub_1000E8DB0()
{
  unint64_t result = qword_10030FDF8;
  if (!qword_10030FDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FDF8);
  }
  return result;
}

unint64_t sub_1000E8DFC()
{
  unint64_t result = qword_10030FE08;
  if (!qword_10030FE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE08);
  }
  return result;
}

unint64_t sub_1000E8E48()
{
  unint64_t result = qword_10030FE10;
  if (!qword_10030FE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE10);
  }
  return result;
}

unint64_t sub_1000E8E94()
{
  unint64_t result = qword_10030FE18;
  if (!qword_10030FE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE18);
  }
  return result;
}

uint64_t sub_1000E8EE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000E8FE0(v4, v3);
  return a1;
}

uint64_t sub_1000E8FE0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000E9024(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000E9124(v4, v3);
  return a1;
}

uint64_t sub_1000E9124(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1000E9168()
{
  unint64_t result = qword_10030FE28;
  if (!qword_10030FE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE28);
  }
  return result;
}

unint64_t sub_1000E91B4()
{
  unint64_t result = qword_10030FE30;
  if (!qword_10030FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE30);
  }
  return result;
}

unint64_t sub_1000E9200()
{
  unint64_t result = qword_10030FE40;
  if (!qword_10030FE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE40);
  }
  return result;
}

unint64_t sub_1000E924C()
{
  unint64_t result = qword_10030FE58;
  if (!qword_10030FE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE58);
  }
  return result;
}

unint64_t sub_1000E9298()
{
  unint64_t result = qword_10030FE60;
  if (!qword_10030FE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE60);
  }
  return result;
}

unint64_t sub_1000E92E4()
{
  unint64_t result = qword_10030FE68;
  if (!qword_10030FE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE68);
  }
  return result;
}

unint64_t sub_1000E9330()
{
  unint64_t result = qword_10030FE80;
  if (!qword_10030FE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE80);
  }
  return result;
}

unint64_t sub_1000E937C()
{
  unint64_t result = qword_10030FE88;
  if (!qword_10030FE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE88);
  }
  return result;
}

uint64_t sub_1000E93C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v4 = *(void *)(a1 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000E8FE0(v2, v4);
  return a1;
}

uint64_t sub_1000E94AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v4 = *(void *)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000E9124(v2, v4);
  return a1;
}

unint64_t sub_1000E9590()
{
  unint64_t result = qword_10030FE98;
  if (!qword_10030FE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FE98);
  }
  return result;
}

unint64_t sub_1000E95DC()
{
  unint64_t result = qword_10030FEA8;
  if (!qword_10030FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FEA8);
  }
  return result;
}

unint64_t sub_1000E9628()
{
  unint64_t result = qword_10030FEB8;
  if (!qword_10030FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FEB8);
  }
  return result;
}

unint64_t sub_1000E9674()
{
  unint64_t result = qword_10030FEC8;
  if (!qword_10030FEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FEC8);
  }
  return result;
}

unint64_t sub_1000E96C0()
{
  unint64_t result = qword_10030FED8;
  if (!qword_10030FED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FED8);
  }
  return result;
}

uint64_t sub_1000E970C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E97A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E9834(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000E98A0()
{
  unint64_t result = qword_10030FF00;
  if (!qword_10030FF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF00);
  }
  return result;
}

unsigned char *sub_1000E98EC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E99B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.Offer.CodingKeys()
{
}

unsigned char *sub_1000E99EC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E9AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.CodingKeys()
{
}

ValueMetadata *type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.Image.CodingKeys()
{
  return &type metadata for MediaFetchResponse.Datum.ProductAttributes.Image.CodingKeys;
}

unsigned char *_s25ASOctaneSupportXPCService18MediaFetchResponseV5DatumV17ProductAttributesV5ImageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E9BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaFetchResponse.Datum.CodingKeys()
{
  return &type metadata for MediaFetchResponse.Datum.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaFetchResponse.CodingKeys()
{
  return &type metadata for MediaFetchResponse.CodingKeys;
}

void type metadata accessor for MediaFetchResponse.Datum.DatumType()
{
}

void *sub_1000E9C28(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000E9C60(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *sub_1000E9CB8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.HostedContent()
{
}

void type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.Description()
{
}

unint64_t sub_1000E9D14()
{
  unint64_t result = qword_10030FF08;
  if (!qword_10030FF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF08);
  }
  return result;
}

unint64_t sub_1000E9D64()
{
  unint64_t result = qword_10030FF10;
  if (!qword_10030FF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF10);
  }
  return result;
}

unint64_t sub_1000E9DB4()
{
  unint64_t result = qword_10030FF18;
  if (!qword_10030FF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF18);
  }
  return result;
}

unint64_t sub_1000E9E04()
{
  unint64_t result = qword_10030FF20;
  if (!qword_10030FF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF20);
  }
  return result;
}

unint64_t sub_1000E9E54()
{
  unint64_t result = qword_10030FF28;
  if (!qword_10030FF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF28);
  }
  return result;
}

unint64_t sub_1000E9EA4()
{
  unint64_t result = qword_10030FF30;
  if (!qword_10030FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF30);
  }
  return result;
}

unint64_t sub_1000E9EF4()
{
  unint64_t result = qword_10030FF38;
  if (!qword_10030FF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF38);
  }
  return result;
}

unint64_t sub_1000E9F44()
{
  unint64_t result = qword_10030FF40;
  if (!qword_10030FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF40);
  }
  return result;
}

unint64_t sub_1000E9F94()
{
  unint64_t result = qword_10030FF48;
  if (!qword_10030FF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF48);
  }
  return result;
}

unint64_t sub_1000E9FE4()
{
  unint64_t result = qword_10030FF50;
  if (!qword_10030FF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF50);
  }
  return result;
}

unint64_t sub_1000EA034()
{
  unint64_t result = qword_10030FF58;
  if (!qword_10030FF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF58);
  }
  return result;
}

unint64_t sub_1000EA084()
{
  unint64_t result = qword_10030FF60;
  if (!qword_10030FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF60);
  }
  return result;
}

unint64_t sub_1000EA0D4()
{
  unint64_t result = qword_10030FF68;
  if (!qword_10030FF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF68);
  }
  return result;
}

unint64_t sub_1000EA124()
{
  unint64_t result = qword_10030FF70;
  if (!qword_10030FF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF70);
  }
  return result;
}

unint64_t sub_1000EA174()
{
  unint64_t result = qword_10030FF78;
  if (!qword_10030FF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF78);
  }
  return result;
}

unint64_t sub_1000EA1C4()
{
  unint64_t result = qword_10030FF80;
  if (!qword_10030FF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF80);
  }
  return result;
}

unint64_t sub_1000EA210()
{
  unint64_t result = qword_10030FF88;
  if (!qword_10030FF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF88);
  }
  return result;
}

unint64_t sub_1000EA25C()
{
  unint64_t result = qword_10030FF98;
  if (!qword_10030FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FF98);
  }
  return result;
}

unint64_t sub_1000EA2A8()
{
  unint64_t result = qword_10030FFA8;
  if (!qword_10030FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaFetchResponse.Datum.ProductAttributes.HostedContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EA3C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.HostedContent.CodingKeys()
{
  return &type metadata for MediaFetchResponse.Datum.ProductAttributes.HostedContent.CodingKeys;
}

unsigned char *_s25ASOctaneSupportXPCService18MediaFetchResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000EA494);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaFetchResponse.Datum.ProductAttributes.Description.CodingKeys()
{
  return &type metadata for MediaFetchResponse.Datum.ProductAttributes.Description.CodingKeys;
}

unint64_t sub_1000EA4D0()
{
  unint64_t result = qword_10030FFC0;
  if (!qword_10030FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFC0);
  }
  return result;
}

unint64_t sub_1000EA520()
{
  unint64_t result = qword_10030FFC8;
  if (!qword_10030FFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFC8);
  }
  return result;
}

unint64_t sub_1000EA570()
{
  unint64_t result = qword_10030FFD0;
  if (!qword_10030FFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFD0);
  }
  return result;
}

unint64_t sub_1000EA5C0()
{
  unint64_t result = qword_10030FFD8;
  if (!qword_10030FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFD8);
  }
  return result;
}

unint64_t sub_1000EA610()
{
  unint64_t result = qword_10030FFE0;
  if (!qword_10030FFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFE0);
  }
  return result;
}

unint64_t sub_1000EA660()
{
  unint64_t result = qword_10030FFE8;
  if (!qword_10030FFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFE8);
  }
  return result;
}

uint64_t sub_1000EA6B4()
{
  return v0;
}

uint64_t sub_1000EA6CC()
{
  return v0;
}

uint64_t sub_1000EA6F0()
{
  return v0;
}

uint64_t sub_1000EA70C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_10024F8D0();
}

uint64_t sub_1000EA760()
{
  return 0x6F43646574736F68;
}

uint64_t sub_1000EA784()
{
  return 0x726F466563697270;
}

uint64_t sub_1000EA7A8()
{
  return sub_10024F7C0();
}

uint64_t sub_1000EA7C8()
{
  return 0x7470697263736564;
}

uint64_t sub_1000EA7E8()
{
  return 0x726550664F6D756ELL;
}

uint64_t sub_1000EA808()
{
  return 0x79636E6572727563;
}

uint64_t sub_1000EA828@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 192) = a1;
  return sub_10024F8D0();
}

uint64_t sub_1000EA84C()
{
  return 0x746E756F63736964;
}

uint64_t sub_1000EA868()
{
  return sub_10024F940();
}

uint64_t sub_1000EA884()
{
  return 0x6449726566666FLL;
}

void *sub_1000EA89C()
{
  return sub_10001C2A8(v0, v1);
}

uint64_t sub_1000EA8F0()
{
  return 0x6C61636F4C756369;
}

uint64_t sub_1000EA904()
{
  return sub_10024F940();
}

uint64_t sub_1000EA924()
{
  return 0x73726566666FLL;
}

unint64_t sub_1000EA938()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1000EA94C()
{
  return 0xD000000000000016;
}

uint64_t sub_1000EA960()
{
  return 0x6563697270;
}

uint64_t sub_1000EA974()
{
  return 1701667182;
}

uint64_t sub_1000EA984()
{
  return 1684957547;
}

uint64_t sub_1000EA9A8()
{
  return sub_10024F870();
}

uint64_t sub_1000EAA08()
{
  return v0 + 440;
}

uint64_t sub_1000EAA18()
{
  return sub_10024F7C0();
}

uint64_t sub_1000EAA34()
{
  return sub_10024F910();
}

uint64_t sub_1000EAA6C()
{
  *(unsigned char *)(v0 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EAA8C()
{
  return 0x6D614E726566666FLL;
}

uint64_t sub_1000EAAB0()
{
  return sub_10024F830();
}

uint64_t sub_1000EAAD0()
{
  return 0x4F6B6361626E6977;
}

uint64_t sub_1000EAAE4()
{
  return 0x66664F636F486461;
}

uint64_t sub_1000EAAF8(int a1)
{
  if (!a1) {
    return 1;
  }
  unsigned int v1 = (a1 - 1) | ((a1 - 1) >> 1) | (((a1 - 1) | ((a1 - 1) >> 1)) >> 2);
  unsigned int v2 = v1 | (v1 >> 4) | ((v1 | (v1 >> 4)) >> 8);
  int v3 = v2 | HIWORD(v2);
  BOOL v4 = __CFADD__(v3, 1);
  unsigned int v5 = v3 + 1;
  if (v4) {
    return 0xFFFFFFFFLL;
  }
  else {
    return v5;
  }
}

void ByteBuffer.getInteger<A>(at:endianness:as:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, unint64_t a4@<X5>, void *a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(*(a5 - 1) + 64);
  int64_t v8 = a1 - a3;
  if (__OFSUB__(a1, a3))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v8 & 0x8000000000000000) == 0 && (v7 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(a3) >= a3)
    {
      if ((HIDWORD(a3) - a3) - v7 < v8) {
        goto LABEL_6;
      }
      if (!__OFADD__(v8, v7))
      {
        if (v8 + v7 >= v8)
        {
          if (a5 == (void *)&type metadata for UInt8)
          {
            __chkstk_darwin(a1, a2);
            ByteBuffer.withUnsafeReadableBytes<A>(_:)();
            sub_1000195B4(a6, 0, 1, (uint64_t)&type metadata for UInt8);
          }
          else
          {
            __chkstk_darwin(HIDWORD(a4), a2);
            sub_10024F030();
            ByteBuffer.withUnsafeReadableBytes<A>(_:)();
          }
          return;
        }
LABEL_18:
        __break(1u);
        return;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_6:
  sub_1000195B4(a6, 1, 1, (uint64_t)a5);
}

void ByteBuffer.setInteger<A>(_:at:endianness:as:)()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_10002F9C8();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  __chkstk_darwin(v11, v12);
  long long v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  ByteBuffer._toEndianness<A>(value:endianness:)(v6, v10);
  swift_release();
  uint64_t v18 = v0;
  uint64_t v19 = v4;
  sub_1000EBCEC((uint64_t)v14, (uint64_t)sub_100083F80, (uint64_t)&v17, v2, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Never, v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v2);
  sub_10003C8C8();
}

void ByteBuffer.writeInteger<A>(_:endianness:as:)()
{
  ByteBuffer.setInteger<A>(_:at:endianness:as:)();
  int v1 = *(_DWORD *)(v0 + 12);
  BOOL v3 = __CFADD__(v1, v2);
  int v4 = v1 + v2;
  if (v3) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v0 + 12) = v4;
  }
}

void FixedWidthInteger.previousPowerOf2()()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v32[2] = v6;
  uint64_t v7 = *(void *)(*(void *)(*(void *)(v6 + 8) + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v9);
  sub_10002F9C8();
  uint64_t v34 = v10;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)v32 - v17;
  char v19 = sub_1000EC0D0();
  uint64_t v33 = v0;
  if (v19)
  {
    if (sub_1000EC1F4() < 64)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v18, v0, v3);
      goto LABEL_12;
    }
    goto LABEL_14;
  }
  uint64_t v1 = sub_1000EC0D0();
  uint64_t v20 = sub_1000EC1F4();
  if (v1)
  {
    if (v20 <= 64)
    {
      v32[1] = v5;
      sub_1000EC198();
      sub_1000EC1B4();
      v32[0] = v7;
      sub_10024FA40();
      char v21 = sub_10024E5E0();
      uint64_t v22 = v34;
      uint64_t v1 = *(void *)(v34 + 8);
      sub_10003C99C();
      ((void (*)(void))v1)();
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v15, v33, v3);
      if ((v21 & 1) == 0)
      {
        sub_10003C99C();
        ((void (*)(void))v1)();
        goto LABEL_17;
      }
      uint64_t v23 = sub_10024F200();
      sub_10003C99C();
      ((void (*)(void))v1)();
      if (v23) {
        goto LABEL_17;
      }
LABEL_15:
      sub_1000EC198();
      sub_1000EC1B4();
      sub_1000EC20C();
LABEL_20:
      sub_10003C8C8();
      return;
    }
LABEL_14:
    uint64_t v35 = 0;
    unint64_t v26 = sub_1000EBDE0();
    sub_1000EC0EC((uint64_t)&v35, (uint64_t)&type metadata for Int, v26);
    char v27 = sub_10024E680();
    uint64_t v28 = sub_1000EC180();
    ((void (*)(uint64_t))v1)(v28);
    if ((v27 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (v20 >= 64) {
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v18, v33, v3);
LABEL_12:
  uint64_t v24 = sub_10024F200();
  uint64_t v25 = sub_1000EC180();
  ((void (*)(uint64_t))v1)(v25);
  if (!v24) {
    goto LABEL_15;
  }
LABEL_17:
  sub_1000EC198();
  sub_10024FB30();
  sub_1000EC20C();
  uint64_t v29 = sub_10024F5D0();
  uint64_t v30 = v29 - 1;
  if (__OFSUB__(v29, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v31 = sub_10024F5F0();
    if (!__OFSUB__(v30, v31))
    {
      uint64_t v35 = v30 - v31;
      sub_1000EBDE0();
      sub_10024F1F0();
      ((void (*)(char *, uint64_t))v1)(v18, v3);
      goto LABEL_20;
    }
  }
  __break(1u);
}

void FixedWidthInteger.nextPowerOf2()()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v62 = v4;
  uint64_t v6 = *(void (**)(void))(v5 + 8);
  uint64_t v59 = *((void *)v6 + 3);
  uint64_t v60 = v5;
  uint64_t v7 = *(void *)(v59 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v9);
  sub_1000AC748();
  uint64_t v58 = v10;
  __chkstk_darwin(v11, v12);
  sub_10002F9C8();
  uint64_t v14 = v13;
  __chkstk_darwin(v15, v16);
  sub_1000AC748();
  uint64_t v56 = v17;
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v57 = (char *)v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v25 = (char *)v52 - v24;
  __chkstk_darwin(v23, v26);
  uint64_t v28 = (void (*)(void))((char *)v52 - v27);
  char v29 = sub_1000EC0D0();
  uint64_t v55 = v6;
  uint64_t v61 = v0;
  if ((v29 & 1) == 0)
  {
    uint64_t v54 = v7;
    char v34 = sub_1000EC0D0();
    uint64_t v35 = sub_1000EC1F4();
    if (v34)
    {
      if (v35 <= 64)
      {
        sub_1000EC140();
        v52[2] = AssociatedTypeWitness;
        sub_10024FB30();
        sub_1000EC1D4();
        char v36 = sub_10024E5E0();
        uint64_t v6 = v28;
        uint64_t v28 = *(void (**)(void))(v14 + 8);
        v52[1] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        sub_1000EC130();
        v28();
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v25, v1, v3);
        if (v36)
        {
          uint64_t v37 = sub_10024F200();
          sub_1000EC130();
          v28();
          if (!v37) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_1000EC130();
          v28();
        }
        goto LABEL_11;
      }
    }
    else if (v35 < 64)
    {
      uint64_t v45 = sub_1000EC0B0();
      v46(v45);
      uint64_t v47 = sub_1000EC22C();
      uint64_t v48 = sub_1000EC098();
      ((void (*)(uint64_t))v28)(v48);
      if (!v47) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
    uint64_t v63 = 0;
    unint64_t v49 = sub_1000EBDE0();
    sub_1000EC0EC((uint64_t)&v63, (uint64_t)&type metadata for Int, v49);
    char v50 = sub_1000EC108();
    uint64_t v51 = sub_1000EC098();
    ((void (*)(uint64_t))v28)(v51);
    if ((v50 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_17:
    sub_1000EC140();
    sub_10024FB30();
    sub_1000EC1D4();
    goto LABEL_18;
  }
  if (sub_1000EC1F4() >= 64)
  {
    uint64_t v63 = 0;
    unint64_t v38 = sub_1000EBDE0();
    sub_1000EC0EC((uint64_t)&v63, (uint64_t)&type metadata for Int, v38);
    char v39 = sub_1000EC108();
    uint64_t v40 = sub_1000EC098();
    ((void (*)(uint64_t))v28)(v40);
    if ((v39 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  uint64_t v30 = sub_1000EC0B0();
  v31(v30);
  uint64_t v32 = sub_1000EC22C();
  uint64_t v33 = sub_1000EC098();
  ((void (*)(uint64_t))v28)(v33);
  if (!v32) {
    goto LABEL_17;
  }
LABEL_11:
  uint64_t v53 = v6;
  sub_1000EC140();
  sub_1000EC15C();
  sub_10024FA40();
  uint64_t v54 = sub_10024F5D0();
  sub_1000EC15C();
  uint64_t v41 = v56;
  sub_10024FA40();
  uint64_t v42 = v57;
  sub_10024F690();
  ((void (*)(uint64_t, uint64_t))v28)(v41, v3);
  uint64_t v43 = sub_10024F5F0();
  ((void (*)(char *, uint64_t))v28)(v42, v3);
  if (!__OFSUB__(v54, v43))
  {
    uint64_t v63 = v54 - v43;
    sub_1000EBDE0();
    char v44 = v53;
    sub_10024F1F0();
    ((void (*)(void (*)(void), uint64_t))v28)(v44, v3);
LABEL_18:
    sub_10003C8C8();
    return;
  }
  __break(1u);
}

uint64_t ByteBuffer._toEndianness<A>(value:endianness:)(uint64_t a1, char a2)
{
  if (a2) {
    return sub_10024F5E0();
  }
  else {
    return sub_10024F610();
  }
}

void ByteBuffer.readInteger<A>(endianness:as:)()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v19 = v5;
  HIDWORD(v18) = v6 & 1;
  uint64_t v7 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v9 = v8;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = *(unsigned int *)(v0 + 8);
  unint64_t v15 = v14 | ((unint64_t)*(unsigned int *)(v0 + 12) << 32);
  unint64_t v16 = *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48);
  swift_retain();
  ByteBuffer.getInteger<A>(at:endianness:as:)(v14, HIDWORD(v18), v15, v16, v4, (uint64_t)v13);
  swift_release();
  uint64_t v20 = v4;
  uint64_t v21 = v2;
  uint64_t v22 = v0;
  sub_1000C68EC((void (*)(uint64_t, uint64_t))sub_1000EBE2C, (uint64_t)v4, v17, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v7);
  sub_10003C8C8();
}

uint64_t sub_1000EB8FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 8);
  int v5 = *(_DWORD *)(v4 + 64);
  int v6 = *(_DWORD *)(a2 + 8);
  BOOL v7 = __CFADD__(v6, v5);
  int v8 = v6 + v5;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a2 + 8) = v8;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(a4, result);
  }
  return result;
}

uint64_t sub_1000EB980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W7>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  int v21 = a5 & 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness, v9);
  uint64_t v11 = *(void *)(a7 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedConformanceWitness();
  sub_10024FB30();
  sub_10024FA40();
  uint64_t v23 = v17;
  uint64_t v24 = v18;
  uint64_t v25 = v19;
  uint64_t v26 = v20;
  sub_1000EBCEC((uint64_t)v14, (uint64_t)sub_1000EC04C, (uint64_t)v22, a7, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for ()[8], (uint64_t)&protocol witness table for Never, v15);
  ByteBuffer._toEndianness<A>(value:endianness:)((uint64_t)v14, v21);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a7);
  return sub_1000195B4(a6, 0, 1, a7);
}

uint64_t sub_1000EBBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000EB980(a1, a2, *(void *)(v3 + 32), *(void *)(v3 + 40), *(unsigned char *)(v3 + 71), a3, *(void *)(v3 + 16));
}

uint64_t sub_1000EBC34()
{
  return swift_dynamicCast();
}

uint64_t sub_1000EBC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt32 a3@<W3>, void *a4@<X8>)
{
  uint64_t result = ByteBuffer._setBytes(_:at:)(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1000EBCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1000EBCEC(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000EBCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

unint64_t sub_1000EBDE0()
{
  unint64_t result = qword_10030FFF0;
  if (!qword_10030FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFF0);
  }
  return result;
}

uint64_t sub_1000EBE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000EB8FC(a1, *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

void sub_1000EBE50()
{
  static Endianness.host = 1;
}

char *Endianness.host.unsafeMutableAddressor()
{
  if (qword_100308D18 != -1) {
    swift_once();
  }
  return &static Endianness.host;
}

uint64_t static Endianness.host.getter()
{
  if (qword_100308D18 != -1) {
    swift_once();
  }
  return static Endianness.host;
}

unint64_t sub_1000EBEFC()
{
  unint64_t result = qword_10030FFF8;
  if (!qword_10030FFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10030FFF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Endianness(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EC014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Endianness()
{
  return &type metadata for Endianness;
}

uint64_t sub_1000EC04C()
{
  return sub_10024F100();
}

uint64_t sub_1000EC098()
{
  return v0;
}

uint64_t sub_1000EC0B0()
{
  return v0;
}

uint64_t sub_1000EC0D0()
{
  return sub_10024F220();
}

uint64_t sub_1000EC0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)(a1, a2, a3, v3, v4);
}

uint64_t sub_1000EC108()
{
  return sub_10024E680();
}

uint64_t sub_1000EC140()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1000EC15C()
{
  return sub_10024FB30();
}

uint64_t sub_1000EC180()
{
  return v0;
}

uint64_t sub_1000EC198()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1000EC1B4()
{
  return sub_10024FB30();
}

uint64_t sub_1000EC1D4()
{
  return sub_10024FA40();
}

uint64_t sub_1000EC1F4()
{
  return sub_10024F210();
}

uint64_t sub_1000EC20C()
{
  return sub_10024FA40();
}

uint64_t sub_1000EC22C()
{
  return sub_10024F200();
}

BOOL static SocketAddress.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a2 >> 62 == 1
        && *(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x11) == *(unsigned __int8 *)((a2 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                          + 0x11)
        && *(unsigned __int16 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x12) == *(unsigned __int16 *)((a2 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                            + 0x12)
        && *(_DWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x14) == *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x14)
        && *(_DWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x28) == *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28))
      {
        uint64_t v2 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        __s1[0] = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        __s1[1] = v2;
        uint64_t v3 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        __s2[0] = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        __s2[1] = v3;
        return memcmp(__s1, __s2, 0x10uLL) == 0;
      }
    }
    else if (a2 >> 62 == 2)
    {
      uint64_t v6 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      if (*(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x11) == *(unsigned __int8 *)((a2 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                          + 0x11))
      {
        long long v7 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x22);
        v13[0] = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x12);
        v13[1] = v7;
        long long v8 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x42);
        long long v9 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x52);
        long long v10 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x62);
        uint64_t v11 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x72);
        long long v13[2] = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x32);
        v13[3] = v8;
        void v13[4] = v9;
        v13[5] = v10;
        uint64_t v14 = v11;
        swift_retain();
        return sub_1000ED3E0((uint64_t)v13, v6, 0x68uLL);
      }
    }
    return 0;
  }
  if (a2 >> 62
    || *(unsigned __int8 *)(a1 + 17) != *(unsigned __int8 *)(a2 + 17)
    || *(unsigned __int16 *)(a1 + 18) != *(unsigned __int16 *)(a2 + 18))
  {
    return 0;
  }
  return *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20);
}

uint64_t SocketAddress.init(_:host:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4 = a2;
  char v5 = a1;
  unint64_t v6 = a1 >> 8;
  unint64_t v7 = a1 >> 16;
  unint64_t v8 = HIDWORD(a1);
  unint64_t v9 = a2 >> 8;
  unint64_t v10 = a2 >> 16;
  unint64_t v11 = a2 >> 24;
  unint64_t v12 = HIDWORD(a2);
  unint64_t v13 = a2 >> 40;
  unint64_t v15 = HIWORD(a2);
  unint64_t v16 = HIBYTE(a2);
  sub_100019524(&qword_10030B048);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v5;
  *(unsigned char *)(result + 17) = v6;
  *(_WORD *)(result + 18) = v7;
  *(_DWORD *)(result + 20) = v8;
  *(unsigned char *)(result + 24) = v4;
  *(unsigned char *)(result + 25) = v9;
  *(unsigned char *)(result + 26) = v10;
  *(unsigned char *)(result + 27) = v11;
  *(unsigned char *)(result + 28) = v12;
  *(unsigned char *)(result + 29) = v13;
  *(unsigned char *)(result + 30) = v15;
  *(unsigned char *)(result + 31) = v16;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  return result;
}

uint64_t SocketAddress.init(_:host:)(unint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  char v11 = a1;
  unint64_t v12 = a1 >> 8;
  unint64_t v13 = a1 >> 16;
  unint64_t v14 = HIDWORD(a1);
  sub_100019524(&qword_10030B040);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v11;
  *(unsigned char *)(v15 + 17) = v12;
  *(_WORD *)(v15 + 18) = v13;
  *(_DWORD *)(v15 + 20) = v14;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(_DWORD *)(v15 + 40) = a4;
  *(void *)(v15 + 48) = a5;
  *(void *)(v15 + 56) = a6;
  return v15 | 0x4000000000000000;
}

uint64_t static SocketAddress.makeAddressResolvingHost(_:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = 0;
  sub_10024F9E0();
  unint64_t v6 = (const char *)(sub_10024E730() + 32);
  uint64_t v7 = sub_10024E730();
  swift_bridgeObjectRelease();
  int v8 = getaddrinfo(v6, (const char *)(v7 + 32), 0, &v25);
  swift_release();
  uint64_t result = swift_release();
  if (v8)
  {
    sub_100050FC8();
    sub_1000290D0();
    *(void *)uint64_t v10 = a1;
    *(void *)(v10 + 8) = a2;
    *(void *)(v10 + 16) = a3;
    *(unsigned char *)(v10 + 24) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a3;
  }
  char v11 = v25;
  if (!v25) {
    goto LABEL_9;
  }
  int ai_family = v25->ai_family;
  if (ai_family != 30)
  {
    if (ai_family == 2)
    {
      ai_addr = v25->ai_addr;
      if (ai_addr)
      {
        int v14 = *(_DWORD *)&ai_addr->sa_len;
        int v15 = *(_DWORD *)&ai_addr->sa_data[2];
        sub_100019524(&qword_10030B048);
        a3 = swift_allocObject();
        uint64_t v16 = *(void *)&ai_addr->sa_data[6];
        *(_DWORD *)(a3 + 16) = v14;
        *(_DWORD *)(a3 + 20) = v15;
        *(void *)(a3 + 24) = v16;
        *(void *)(a3 + 32) = a1;
        *(void *)(a3 + 40) = a2;
LABEL_13:
        swift_bridgeObjectRetain();
        freeaddrinfo(v11);
        return a3;
      }
      __break(1u);
      goto LABEL_15;
    }
LABEL_9:
    sub_100050FC8();
    sub_1000290D0();
    *(void *)(v17 + 8) = 0;
    *(void *)(v17 + 16) = 0;
    *(void *)uint64_t v17 = 0;
    *(unsigned char *)(v17 + 24) = 2;
    swift_willThrow();
    if (v25) {
      freeaddrinfo(v25);
    }
    return a3;
  }
  uint64_t v18 = v25->ai_addr;
  if (v18)
  {
    int v19 = *(_DWORD *)&v18->sa_len;
    int v20 = *(_DWORD *)&v18->sa_data[2];
    uint64_t v21 = *(void *)&v18->sa_data[6];
    uint64_t v22 = *(void *)&v18[1].sa_len;
    int v23 = *(_DWORD *)&v18[1].sa_data[6];
    sub_100019524(&qword_10030B040);
    uint64_t v24 = swift_allocObject();
    *(_DWORD *)(v24 + 16) = v19;
    *(_DWORD *)(v24 + 20) = v20;
    *(void *)(v24 + 24) = v21;
    *(void *)(v24 + 32) = v22;
    *(_DWORD *)(v24 + 40) = v23;
    a3 = v24 | 0x4000000000000000;
    *(void *)(v24 + 48) = a1;
    *(void *)(v24 + 56) = a2;
    goto LABEL_13;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t SocketAddress.pathname.getter(uint64_t a1)
{
  if (a1 < 0) {
    return sub_10024E820();
  }
  else {
    return 0;
  }
}

uint64_t sub_1000EC818(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3 = *(unsigned __int16 *)(v1 + 20);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 22);
  char v5 = (void *)(*(void *)v1 + 24);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
  }
  else
  {
    a1(&v9, *v5 + (v4 | (v3 << 8)) + v7, v8 - v7);
    return 0;
  }
  return result;
}

uint64_t SocketAddress.IPv4Address.address.getter(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t SocketAddress.IPv6Address.address.getter(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

__n128 SocketAddress.UnixSocketAddress.address.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(a1 + 120);
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 112);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  *(void *)(a2 + 96) = v8;
  *(_WORD *)(a2 + 104) = v2;
  return result;
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.address.getter()
{
  return swift_retain();
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3 = a3;
  unint64_t v4 = HIDWORD(a3);
  uint64_t result = swift_beginAccess();
  if (v4 >= v3) {
    return sub_10024FC10();
  }
  __break(1u);
  return result;
}

#error "1000ECA44: call analysis failed (funcsize=46)"

Swift::Int SocketAddressError.FailedToParseIPByteBuffer.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2 = a2;
  unint64_t v3 = HIDWORD(a2);
  sub_10024FC00();
  Swift::Int result = swift_beginAccess();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_10024FC10();
    return sub_10024FC70();
  }
  return result;
}

Swift::Int sub_1000ECB10()
{
  return SocketAddressError.FailedToParseIPByteBuffer.hashValue.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1000ECB2C(uint64_t a1)
{
  return SocketAddressError.FailedToParseIPByteBuffer.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1000ECB48(uint64_t a1, uint64_t a2)
{
  return static SocketAddressError.FailedToParseIPByteBuffer.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t SocketAddress.IPv4Address.host.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SocketAddress.IPv6Address.host.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SocketAddress.description.getter(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    unint64_t v3 = *(void **)(a1 + 40);
    sub_1000EEF3C();
    if (v6)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = 0;
      unint64_t v3 = 0;
    }
    LODWORD(v26) = *(_DWORD *)(a1 + 20);
    uint64_t v20 = swift_retain();
    uint64_t v21 = sub_1000EEF20(v20, &v26);
    if (v1) {
      goto LABEL_26;
    }
    uint64_t v13 = v21;
    int v14 = v22;
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    uint64_t v23 = SocketAddress.port.getter(a1);
    if ((v24 & 1) == 0)
    {
      v27._uint64_t countAndFlagsBits = v23;
      v31._uint64_t countAndFlagsBits = sub_10024F9E0();
      sub_10024E800(v31);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t countAndFlagsBits = v28;
      uint64_t v18 = (void *)v29;
      v19._uint64_t countAndFlagsBits = 880169033;
      goto LABEL_19;
    }
    goto LABEL_25;
  }
  if (a1 >> 62 != 1)
  {
    uint64_t v28 = 0x5D5344555BLL;
    unint64_t v29 = 0xE500000000000000;
    v7._uint64_t countAndFlagsBits = SocketAddress.pathname.getter(a1);
    if (v7._object)
    {
      object = v7._object;
    }
    else
    {
      v7._uint64_t countAndFlagsBits = 0;
      object = (void *)0xE000000000000000;
    }
    v7._object = object;
    sub_10024E800(v7);
    goto LABEL_23;
  }
  uint64_t v4 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
  unint64_t v3 = *(void **)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
  sub_1000EEF3C();
  if (v5)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v3 = 0;
  }
  unint64_t v9 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v28 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v29 = v9;
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1000EEF04(v10, &v28);
  if (!v1)
  {
    uint64_t v13 = v11;
    int v14 = v12;
    v27._uint64_t countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    uint64_t v15 = SocketAddress.port.getter(a1);
    if ((v16 & 1) == 0)
    {
      uint64_t v26 = v15;
      v30._uint64_t countAndFlagsBits = sub_10024F9E0();
      sub_10024E800(v30);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v27._countAndFlagsBits;
      uint64_t v18 = v27._object;
      v19._uint64_t countAndFlagsBits = 913723465;
LABEL_19:
      uint64_t v28 = 91;
      unint64_t v29 = 0xE100000000000000;
      v19._object = (void *)0xE400000000000000;
      sub_10024E800(v19);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = 93;
      v32._object = (void *)0xE100000000000000;
      sub_10024E800(v32);
      if (v3)
      {
        v27._uint64_t countAndFlagsBits = v4;
        v27._object = v3;
        swift_bridgeObjectRetain();
        v33._uint64_t countAndFlagsBits = 47;
        v33._object = (void *)0xE100000000000000;
        sub_10024E800(v33);
        v34._uint64_t countAndFlagsBits = v13;
        v34._object = v14;
        sub_10024E800(v34);
        v35._uint64_t countAndFlagsBits = 58;
        v35._object = (void *)0xE100000000000000;
        sub_10024E800(v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v27._uint64_t countAndFlagsBits = v13;
        v27._object = v14;
        v36._uint64_t countAndFlagsBits = 58;
        v36._object = (void *)0xE100000000000000;
        sub_10024E800(v36);
      }
      sub_10024E800(v27);
      swift_bridgeObjectRelease();
      v37._uint64_t countAndFlagsBits = countAndFlagsBits;
      v37._object = v18;
      sub_10024E800(v37);
LABEL_23:
      swift_bridgeObjectRelease();
      return v28;
    }
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease();
    __break(1u);
  }
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1000EEE84();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1000ECF00(int a1, const void *a2, size_t a3)
{
  unint64_t v4 = a3;
  Swift::String v7 = (char *)sub_1000DA780(0, a3);
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    sub_10003C4F8();
    sub_10003C6E8();
LABEL_10:
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  sub_1001A8BEC();
  Swift::String v7 = v9;
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (HIDWORD(v4))
  {
    sub_10003C4F8();
    sub_10003C6D8();
    goto LABEL_10;
  }
  sub_10015CEEC(a1, a2, v7 + 32, v4);
  if (!v3) {
    unint64_t v4 = sub_10024E830();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t SocketAddress.port.getter(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v1 = (unsigned __int16 *)(a1 + 18);
    return bswap32(*v1) >> 16;
  }
  if (a1 >> 62 == 1)
  {
    uint64_t v1 = (unsigned __int16 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 18);
    return bswap32(*v1) >> 16;
  }
  return 0;
}

uint64_t SocketAddress.protocol.getter(unint64_t a1)
{
  return *(unsigned int *)((char *)&unk_10025FFF4 + ((a1 >> 60) & 0xC));
}

uint64_t SocketAddress.ipAddress.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = 0;
    if (a1 >> 62 != 1) {
      return v2;
    }
    uint64_t v3 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    v9[0] = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    v9[1] = v3;
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1000EEF04(v4, v9);
    if (!v1)
    {
      uint64_t v2 = v5;
LABEL_7:
      swift_release();
      return v2;
    }
  }
  else
  {
    LODWORD(v9[0]) = *(_DWORD *)(a1 + 20);
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1000EEF20(v6, v9);
    if (!v1)
    {
      uint64_t v2 = v7;
      goto LABEL_7;
    }
  }
  sub_1000EEE84();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t SocketAddress.port.setter(unint64_t result, char a2)
{
  unint64_t v9 = *v3;
  unint64_t v10 = *v3 >> 62;
  if (!v10)
  {
    char v11 = *(unsigned char *)(v9 + 16);
    char v12 = *(unsigned char *)(v9 + 17);
    int v13 = *(_DWORD *)(v9 + 20);
    uint64_t v14 = *(void *)(v9 + 24);
    if (a2)
    {
      LODWORD(result) = 0;
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_19;
      }
      if (result >= 0x10000)
      {
LABEL_10:
        sub_10003C4F8();
        sub_10003C6D8();
LABEL_20:
        uint64_t result = sub_10024F660();
        __break(1u);
        return result;
      }
    }
    unsigned int v19 = bswap32(result) >> 16;
    uint64_t v21 = *(void *)(v9 + 32);
    uint64_t v20 = *(void *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_release();
    sub_100019524(&qword_10030B048);
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v11;
    *(unsigned char *)(result + 17) = v12;
    *(_WORD *)(result + 18) = v19;
    *(_DWORD *)(result + 20) = v13;
    *(void *)(result + 24) = v14;
    *(void *)(result + 32) = v21;
    *(void *)(result + 40) = v20;
    goto LABEL_17;
  }
  if (v10 == 1)
  {
    uint64_t v2 = v9 & 0x3FFFFFFFFFFFFFFFLL;
    char v8 = *(unsigned char *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    int v4 = *(_DWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x14);
    uint64_t v6 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v5 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    int v7 = *(_DWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
    char v22 = *(unsigned char *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x11);
    if ((a2 & 1) == 0)
    {
      if ((result & 0x8000000000000000) == 0)
      {
        if (result >= 0x10000) {
          goto LABEL_10;
        }
        goto LABEL_14;
      }
LABEL_19:
      sub_10003C4F8();
      sub_10003C6E8();
      goto LABEL_20;
    }
  }
  else
  {
    if (a2) {
      return result;
    }
    __break(1u);
  }
  LODWORD(result) = 0;
LABEL_14:
  unsigned int v15 = bswap32(result) >> 16;
  uint64_t v17 = *(void *)(v2 + 48);
  uint64_t v16 = *(void *)(v2 + 56);
  swift_bridgeObjectRetain();
  swift_release();
  sub_100019524(&qword_10030B040);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v8;
  *(unsigned char *)(v18 + 17) = v22;
  *(_WORD *)(v18 + 18) = v15;
  *(_DWORD *)(v18 + 20) = v4;
  *(void *)(v18 + 24) = v6;
  *(void *)(v18 + 32) = v5;
  *(_DWORD *)(v18 + 40) = v7;
  uint64_t result = v18 | 0x4000000000000000;
  *(void *)(v18 + 48) = v17;
  *(void *)(v18 + 56) = v16;
LABEL_17:
  *uint64_t v3 = result;
  return result;
}

unint64_t (*SocketAddress.port.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v2 = *v1;
  unint64_t v3 = (unint64_t)*v1 >> 62;
  if (v3)
  {
    if (v3 != 1)
    {
      uint64_t v6 = 0;
      char v5 = 1;
      goto LABEL_6;
    }
    v2 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  int v4 = (unsigned __int16 *)(v2 + 18);
  char v5 = 0;
  uint64_t v6 = bswap32(*v4) >> 16;
LABEL_6:
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v5;
  return sub_1000ED3B0;
}

unint64_t sub_1000ED3B0(uint64_t a1)
{
  return SocketAddress.port.setter(*(void *)a1, *(unsigned char *)(a1 + 8));
}

BOOL sub_1000ED3E0(uint64_t a1, uint64_t a2, size_t a3)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 96);
  void v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  void v11[4] = v6;
  uint64_t v11[5] = v7;
  uint64_t v12 = v8;
  sub_1000EE4CC((const char *)v11, a2, a3, &v13);
  swift_release();
  if (!v3) {
    return v13;
  }
  return v9;
}

uint64_t SocketAddress.withSockAddr<A>(_:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      __chkstk_darwin(a1, a2);
      sub_1000EEE94();
      sub_1000EEEE0();
      sub_1000ED6AC();
    }
    else
    {
      __chkstk_darwin(a1, a2);
      sub_1000EEE94();
      sub_1000EEEE0();
      sub_1000ED778();
    }
  }
  else
  {
    __chkstk_darwin(a1, a2);
    sub_1000EEE94();
    sub_1000EEEE0();
    sub_1000ED5EC();
  }
  return swift_release();
}

uint64_t sub_1000ED5EC()
{
  sub_1000EEEF4();
  int v1 = *(_DWORD *)(v0 + 4);
  v10[0] = *(_DWORD *)v0;
  v10[1] = v1;
  uint64_t v11 = *(void *)(v0 + 8);
  uint64_t v13 = v3;
  uint64_t v14 = v2;
  uint64_t v15 = v4;
  type metadata accessor for sockaddr_in(0);
  uint64_t v5 = sub_100019524(&qword_100309768);
  return sub_1000EEEBC((uint64_t)v10, (uint64_t)sub_1000EEE44, (uint64_t)v12, v6, v5, v7, (uint64_t)&protocol self-conformance witness table for Error, v8);
}

uint64_t sub_1000ED6AC()
{
  sub_1000EEEF4();
  int v1 = *(_DWORD *)(v0 + 4);
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  int v4 = *(_DWORD *)(v0 + 24);
  v17[0] = *(_DWORD *)v0;
  v17[1] = v1;
  uint64_t v19 = v3;
  uint64_t v18 = v2;
  int v20 = v4;
  uint64_t v14 = v6;
  uint64_t v15 = v5;
  uint64_t v16 = v7;
  type metadata accessor for sockaddr_in6(0);
  uint64_t v8 = sub_100019524(&qword_100309768);
  return sub_1000EEEBC((uint64_t)v17, (uint64_t)sub_1000EEE6C, (uint64_t)v13, v9, v8, v10, (uint64_t)&protocol self-conformance witness table for Error, v11);
}

uint64_t sub_1000ED778()
{
  sub_1000EEEF4();
  __int16 v1 = *(_WORD *)(v0 + 104);
  long long v2 = *(_OWORD *)(v0 + 16);
  v15[0] = *(_OWORD *)v0;
  v15[1] = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 64);
  long long v5 = *(_OWORD *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 96);
  v15[2] = *(_OWORD *)(v0 + 32);
  v15[3] = v3;
  v15[4] = v4;
  v15[5] = v5;
  uint64_t v16 = v6;
  __int16 v17 = v1;
  uint64_t v19 = v8;
  uint64_t v20 = v7;
  uint64_t v21 = v9;
  type metadata accessor for sockaddr_un(0);
  uint64_t v10 = sub_100019524(&qword_100309768);
  return sub_1000EEEBC((uint64_t)v15, (uint64_t)sub_1000EEE6C, (uint64_t)v18, v11, v10, v12, (uint64_t)&protocol self-conformance witness table for Error, v13);
}

uint64_t SocketAddress.init(_:)(unint64_t a1, unint64_t a2)
{
  char v3 = a2;
  char v4 = a1;
  unint64_t v5 = a1 >> 8;
  unint64_t v6 = a1 >> 16;
  unint64_t v7 = HIDWORD(a1);
  unint64_t v8 = a2 >> 8;
  int v20 = HIDWORD(a1);
  unint64_t v9 = a2 >> 16;
  unint64_t v21 = a2;
  unint64_t v10 = a2 >> 24;
  unint64_t v11 = a2 >> 40;
  unint64_t v17 = HIDWORD(a2);
  unint64_t v18 = HIWORD(a2);
  unint64_t v19 = HIBYTE(a2);
  uint64_t v12 = sub_1000EEF20(a1, &v20);
  uint64_t v15 = v13;
  uint64_t v16 = v12;
  if (v2)
  {
    sub_1000EEE84();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_100019524(&qword_10030B048);
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v4;
    *(unsigned char *)(result + 17) = v5;
    *(_WORD *)(result + 18) = v6;
    *(_DWORD *)(result + 20) = v7;
    *(unsigned char *)(result + 24) = v3;
    *(unsigned char *)(result + 25) = v8;
    *(unsigned char *)(result + 26) = v9;
    *(unsigned char *)(result + 27) = v10;
    *(unsigned char *)(result + 28) = v17;
    *(unsigned char *)(result + 29) = v11;
    *(unsigned char *)(result + 30) = v18;
    *(unsigned char *)(result + 31) = v19;
    *(void *)(result + 32) = v16;
    *(void *)(result + 40) = v15;
  }
  return result;
}

uint64_t SocketAddress.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v15[0] = a2;
  v15[1] = a3;
  uint64_t v9 = sub_1000EEF04(a1, v15);
  if (v4)
  {
    sub_1000EEE84();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    sub_100019524(&qword_10030B040);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    *(void *)(v13 + 32) = a3;
    *(_DWORD *)(v13 + 40) = a4;
    *(void *)(v13 + 48) = v11;
    *(void *)(v13 + 56) = v12;
    return v13 | 0x4000000000000000;
  }
  return result;
}

unint64_t SocketAddress.init(_:)(const void *a1)
{
  sub_100019524(&qword_100310000);
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), a1, 0x6AuLL);
  return v2 | 0x8000000000000000;
}

unint64_t SocketAddress.init(unixDomainSocketPath:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v4 = sub_10024E850();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0) {
      goto LABEL_6;
    }
    Swift::Int v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4 > 103)
  {
    swift_bridgeObjectRelease();
    sub_100050FC8();
    sub_1000290D0();
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)uint64_t v5 = 1;
    *(unsigned char *)(v5 + 24) = 2;
    return swift_willThrow();
  }
LABEL_6:
  sub_1000EDC78(a1, a2, (uint64_t)&off_1002D8050);
  swift_bridgeObjectRelease();
  *(_WORD *)unint64_t v8 = 256;
  memset(&v8[2], 0, 96);
  sub_10024F100();
  swift_bridgeObjectRelease();
  sub_100019524(&qword_100310000);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)&v8[16];
  *(_OWORD *)(v7 + 48) = *(_OWORD *)&v8[32];
  *(_OWORD *)(v7 + 64) = *(_OWORD *)&v8[48];
  *(_OWORD *)(v7 + 80) = *(_OWORD *)&v8[64];
  *(_OWORD *)(v7 + 96) = *(_OWORD *)&v8[80];
  *(_WORD *)(v7 + 120) = 0;
  unint64_t result = v7 | 0x8000000000000000;
  *(void *)(v7 + 112) = 0;
  return result;
}

Swift::Int sub_1000EDC78(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int result = sub_10024E850();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    Swift::Int result = HIBYTE(a2) & 0xF;
  }
  else
  {
    Swift::Int result = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (__OFADD__(v3, result))
  {
    __break(1u);
  }
  else
  {
    sub_100035E48();
    uint64_t v6 = v5;
    swift_bridgeObjectRetain();
    sub_1001D7058();
    swift_bridgeObjectRetain();
    sub_1001D6FAC();
    return v6;
  }
  return result;
}

void *SocketAddress.init(ipAddress:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_10024F320();
    swift_bridgeObjectRelease();
    if (!v3) {
      return (void *)v17[2];
    }
  }
  else
  {
    __chkstk_darwin(a1, a2);
    Swift::Int v4 = v11;
    void v11[2] = sub_1000EE8B4;
    v11[3] = &v12;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = v7;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      sub_1000EDEBC((const char *)v17, v6, (uint64_t *)&v16);
      if (v3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        Swift::Int v4 = v16;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v7 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_10024F3E0();
      }
      Swift::Int v4 = (void *)sub_1000EE7F4(v8, v9, (uint64_t (*)(void))sub_1000EE8D4);
      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

uint64_t sub_1000EDEBC@<X0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  LODWORD(v12) = 0;
  sub_10015CE6C(2, a1, &v12);
  if (v3)
  {
    swift_errorRelease();
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    sub_10015CE6C(30, a1, &v12);
    if ((a2 & 0x8000000000000000) == 0 && a2 < 0x10000)
    {
      unsigned int v9 = bswap32(a2) >> 16;
      uint64_t v10 = v12;
      uint64_t v11 = v13;
      sub_100019524(&qword_10030B040);
      uint64_t result = swift_allocObject();
      *(_WORD *)(result + 16) = 7680;
      *(_WORD *)(result + 18) = v9;
      *(_DWORD *)(result + 20) = 0;
      *(void *)(result + 24) = v10;
      *(void *)(result + 32) = v11;
      *(_DWORD *)(result + 40) = 0;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = 0xE000000000000000;
      *a3 = result | 0x4000000000000000;
      return result;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0 && a2 < 0x10000)
  {
    int v7 = v12;
    sub_100019524(&qword_10030B048);
    uint64_t result = swift_allocObject();
    *(_WORD *)(result + 16) = 512;
    *(_WORD *)(result + 18) = bswap32(a2) >> 16;
    *(_DWORD *)(result + 20) = v7;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
    *(void *)(result + 40) = 0xE000000000000000;
    *a3 = result;
    return result;
  }
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t SocketAddress.init(packedIPAddress:port:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unsigned int v6 = a2;
  unint64_t v8 = HIDWORD(a2);
  ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v17);
  int v9 = v8 - v6;
  if (v8 < v6) {
    __break(1u);
  }
  if (v9 == 16)
  {
    long long v18 = 0uLL;
    if ((a4 & 0x8000000000000000) == 0)
    {
      if (a4 < 0x10000)
      {
        swift_retain();
        sub_1000EE370((uint64_t)v17, &v18);
        long long v14 = v18;
        sub_100074F0C((uint64_t)v17);
        swift_release();
        sub_100019524(&qword_10030B040);
        uint64_t v15 = swift_allocObject();
        *(_WORD *)(v15 + 16) = 7680;
        *(_WORD *)(v15 + 18) = bswap32(a4) >> 16;
        *(_DWORD *)(v15 + 20) = 0;
        *(_OWORD *)(v15 + 24) = v14;
        *(_DWORD *)(v15 + 40) = 0;
        uint64_t result = v15 | 0x4000000000000000;
        *(void *)(v15 + 48) = 0;
        *(void *)(v15 + 56) = 0xE000000000000000;
        return result;
      }
      goto LABEL_13;
    }
  }
  else
  {
    if (v9 != 4)
    {
      sub_1000EE918();
      sub_1000290D0();
      *(void *)uint64_t v16 = a1;
      *(_DWORD *)(v16 + 8) = v6;
      *(_DWORD *)(v16 + 12) = v8;
      *(_DWORD *)(v16 + 16) = a3;
      *(_WORD *)(v16 + 20) = WORD2(a3);
      *(unsigned char *)(v16 + 22) = BYTE6(a3);
      swift_retain();
      swift_willThrow();
      return sub_100074F0C((uint64_t)v17);
    }
    LOWORD(v18) = 512;
    *(void *)((char *)&v18 + 4) = 0;
    HIDWORD(v18) = 0;
    if ((a4 & 0x8000000000000000) == 0)
    {
      if (a4 < 0x10000)
      {
        WORD1(v18) = bswap32(a4) >> 16;
        swift_retain();
        sub_1000EE370((uint64_t)v17, (unsigned char *)&v18 + 4);
        int v10 = v18;
        int v11 = DWORD1(v18);
        uint64_t v12 = *((void *)&v18 + 1);
        sub_100074F0C((uint64_t)v17);
        swift_release();
        sub_100019524(&qword_10030B048);
        uint64_t result = swift_allocObject();
        *(_DWORD *)(result + 16) = v10;
        *(_DWORD *)(result + 20) = v11;
        *(void *)(result + 24) = v12;
        *(void *)(result + 32) = 0;
        *(void *)(result + 40) = 0xE000000000000000;
        return result;
      }
LABEL_13:
      sub_10003C4F8();
      sub_10003C6D8();
      goto LABEL_14;
    }
  }
  sub_10003C4F8();
  sub_10003C6E8();
LABEL_14:
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t sub_1000EE370(uint64_t result, unsigned char *a2)
{
  long long v6 = *(_OWORD *)result;
  long long v7 = *(_OWORD *)(result + 16);
  uint64_t v8 = *(void *)(result + 32);
  if (a2)
  {
    uint64_t v2 = a2;
    __chkstk_darwin(result, a2);
    uint64_t result = sub_1000EC818((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1000EEE24);
    if (result)
    {
      uint64_t v3 = *((void *)&v7 + 1);
      if (*((void *)&v7 + 1) != v8)
      {
        if (HIDWORD(v6) >= DWORD2(v6))
        {
          uint64_t result = swift_beginAccess();
          if (*((uint64_t *)&v7 + 1) >= v8)
          {
LABEL_16:
            __break(1u);
            return result;
          }
          unint64_t v4 = *(void *)(v6 + 24) + (BYTE6(v7) | ((unint64_t)WORD2(v7) << 8)) + DWORD2(v6);
          while (1)
          {
            unint64_t v5 = v3 - DWORD2(v6);
            if (__OFSUB__(v3, DWORD2(v6))) {
              break;
            }
            if (v5 >= (HIDWORD(v6) - DWORD2(v6))) {
              goto LABEL_13;
            }
            if (v5 == 0x7FFFFFFFFFFFFFFFLL) {
              goto LABEL_14;
            }
            ++v3;
            *v2++ = *(unsigned char *)(v4 + v5);
            if (v8 == v3) {
              return result;
            }
          }
          __break(1u);
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
        }
        __break(1u);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t sub_1000EE4C4()
{
  return SocketAddress.description.getter(*v0);
}

uint64_t sub_1000EE4CC@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, size_t a3@<X2>, BOOL *a4@<X8>)
{
  long long v5 = *(_OWORD *)(a2 + 34);
  v11[0] = *(_OWORD *)(a2 + 18);
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 66);
  long long v7 = *(_OWORD *)(a2 + 82);
  long long v8 = *(_OWORD *)(a2 + 98);
  uint64_t v9 = *(void *)(a2 + 114);
  void v11[2] = *(_OWORD *)(a2 + 50);
  v11[3] = v6;
  void v11[4] = v7;
  uint64_t v11[5] = v8;
  uint64_t v12 = v9;
  uint64_t result = strncmp(a1, (const char *)v11, a3);
  *a4 = result == 0;
  return result;
}

BOOL sub_1000EE568(unint64_t *a1, unint64_t *a2)
{
  return static SocketAddress.== infix(_:_:)(*a1, *a2);
}

void SocketAddress.hash(into:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    uint64_t v3 = a2 & 0x3FFFFFFFFFFFFFFFLL;
    if (a2 >> 62 == 1)
    {
      sub_10024FC20(2uLL);
      sub_10024FC30(*(unsigned char *)(v3 + 17));
      sub_10024FC40(*(_WORD *)(v3 + 18));
      sub_10024FC50(*(_DWORD *)(v3 + 20));
      sub_10024FC50(*(_DWORD *)(v3 + 40));
      uint64_t v4 = *(void *)(v3 + 32);
      *(void *)&v11[0] = *(void *)(v3 + 24);
      *((void *)&v11[0] + 1) = v4;
    }
    else
    {
      sub_10024FC20(0);
      sub_10024FC30(*(unsigned char *)(v3 + 17));
      long long v5 = *(_OWORD *)(v3 + 34);
      long long v6 = *(_OWORD *)(v3 + 50);
      long long v7 = *(_OWORD *)(v3 + 66);
      long long v8 = *(_OWORD *)(v3 + 82);
      long long v9 = *(_OWORD *)(v3 + 98);
      v11[0] = *(_OWORD *)(v3 + 18);
      v11[1] = v5;
      uint64_t v10 = *(void *)(v3 + 114);
      void v11[2] = v6;
      v11[3] = v7;
      void v11[4] = v8;
      uint64_t v11[5] = v9;
      uint64_t v12 = v10;
      strnlen((const char *)v11, 0x68uLL);
    }
    sub_10024FC10();
  }
  else
  {
    sub_10024FC20(1uLL);
    sub_10024FC30(*(unsigned char *)(a2 + 17));
    sub_10024FC40(*(_WORD *)(a2 + 18));
    sub_10024FC50(*(_DWORD *)(a2 + 20));
  }
}

Swift::Int SocketAddress.hashValue.getter(unint64_t a1)
{
  sub_10024FC00();
  SocketAddress.hash(into:)((uint64_t)v3, a1);
  return sub_10024FC70();
}

Swift::Int sub_1000EE6E0()
{
  return SocketAddress.hashValue.getter(*v0);
}

void sub_1000EE6E8(uint64_t a1)
{
  SocketAddress.hash(into:)(a1, *v1);
}

Swift::Int sub_1000EE6F0()
{
  unint64_t v1 = *v0;
  sub_10024FC00();
  SocketAddress.hash(into:)((uint64_t)v3, v1);
  return sub_10024FC70();
}

BOOL SocketAddress.isMulticast.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return 0;
    }
    return *(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == 255;
  }
  else
  {
    return (*(_DWORD *)(a1 + 20) & 0xF0) == 224;
  }
}

uint64_t sub_1000EE770(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  if (result)
  {
    uint64_t result = a3(result, a2 - result);
    if (v6) {
      *a6 = v6;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EE7B4()
{
  return sub_1000EE7CC();
}

uint64_t sub_1000EE7CC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1000EE7F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

void *sub_1000EE834(void *__src, size_t __len, int a3, int a4, int a5, void *__dst)
{
  if (__src)
  {
    if ((__len & 0x8000000000000000) != 0)
    {
      __src = (void *)sub_10024F730();
      __break(1u);
    }
    else
    {
      return memmove(__dst, __src, __len);
    }
  }
  return __src;
}

uint64_t sub_1000EE8B4@<X0>(const char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000EDEBC(a1, *(void *)(v2 + 16), a2);
}

void *sub_1000EE8D4@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_1000EE918()
{
  unint64_t result = qword_100310008;
  if (!qword_100310008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310008);
  }
  return result;
}

unint64_t sub_1000EE968()
{
  unint64_t result = qword_100310010;
  if (!qword_100310010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310010);
  }
  return result;
}

unint64_t sub_1000EE9B8()
{
  unint64_t result = qword_100310018;
  if (!qword_100310018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310018);
  }
  return result;
}

uint64_t sub_1000EEA04(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SocketAddressError(uint64_t a1)
{
  return sub_1000EEA30(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1000EEA30(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1000EEA04(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1000EEA04(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1000EEA30(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1000EEA30(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SocketAddressError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SocketAddressError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000EEBF0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000EEC08(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

void type metadata accessor for SocketAddressError()
{
}

void type metadata accessor for SocketAddressError.FailedToParseIPByteBuffer()
{
}

void *initializeBufferWithCopyOfBuffer for SocketAddress(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *assignWithCopy for SocketAddress(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SocketAddress(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SocketAddress(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SocketAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1000EED90(void *a1)
{
  return *a1 >> 62;
}

void *sub_1000EED9C(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1000EEDAC(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

void type metadata accessor for SocketAddress()
{
}

void type metadata accessor for SocketAddress.IPv4Address()
{
}

void type metadata accessor for SocketAddress.IPv6Address()
{
}

void type metadata accessor for SocketAddress.UnixSocketAddress()
{
}

void *sub_1000EEDF0(void *a1, size_t a2, uint64_t a3, int a4, int a5, void *a6)
{
  long long v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  uint64_t v9 = *(void *)(a3 + 32);
  return sub_1000EE834(a1, a2, (int)v8, a4, a5, a6);
}

void *sub_1000EEE24(void *a1, size_t a2)
{
  return sub_1000EEDF0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1000EEE44(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000EE770(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 16), a3);
}

uint64_t sub_1000EEE6C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000EEE44(a1, a2, a3);
}

uint64_t sub_1000EEE84()
{
  return v0;
}

uint64_t sub_1000EEE94()
{
  return swift_retain();
}

uint64_t sub_1000EEEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_1000EBCC4(a1, a2, a3, v8, a5, v9, a7, (uint64_t)va);
}

uint64_t sub_1000EEF04(uint64_t a1, const void *a2)
{
  return sub_1000ECF00(30, a2, 0x2EuLL);
}

uint64_t sub_1000EEF20(uint64_t a1, const void *a2)
{
  return sub_1000ECF00(2, a2, 0x10uLL);
}

uint64_t sub_1000EEF50(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D61B0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

void sub_1000EEF9C(uint64_t a1, unsigned __int8 a2)
{
  unsigned int v3 = a2;
  unint64_t v4 = (void *)CGSVGAttributeMapCreate();
  if (v3 > 2)
  {
    sub_1000EF154(a2, (uint64_t)&v11);
    long long v14 = v11;
    long long v15 = v12;
    int v16 = v13;
    uint64_t v7 = (void *)CGSVGAttributeCreateWithColor();
    CGSVGAttributeMapSetAttribute();
    NSString v8 = sub_1000EFBE0();
    CGSVGDocumentAddNamedStyle();

    uint64_t v9 = (void *)CGSVGAttributeMapCreate();
    sub_1000EF28C((uint64_t)&v14);
    uint64_t v10 = CGSVGAttributeCreateWithColor();
    uint64_t v5 = (void *)CGSVGAttributeCreateWithFloat();
    CGSVGAttributeMapSetAttribute();
    CGSVGAttributeMapSetAttribute();
    NSString v6 = sub_1000EFBE0();
    CGSVGDocumentAddNamedStyle();

    unint64_t v4 = (void *)v10;
  }
  else
  {
    sub_1000EF154(a2, (uint64_t)&v14);
    long long v11 = v14;
    long long v12 = v15;
    int v13 = v16;
    uint64_t v5 = (void *)CGSVGAttributeCreateWithColor();
    CGSVGAttributeMapSetAttribute();
    NSString v6 = sub_10024E6A0();
    CGSVGDocumentAddNamedStyle();
  }
}

__n128 sub_1000EF154@<Q0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v2 = v8;
      unint64_t v4 = v8;
      break;
    case 2:
      sub_1000EFBCC();
      break;
    case 3:
    case 4:
      sub_1000EFBBC();
      break;
    case 5:
    case 6:
      sub_1000EFBBC();
      break;
    case 7:
    case 8:
      sub_1000EFBCC();
      break;
    default:
      uint64_t v2 = v8;
      unint64_t v4 = v8;
      break;
  }
  sub_1000EF28C((uint64_t)v4);
  int v5 = *((_DWORD *)v2 + 8);
  __n128 result = *(__n128 *)v2;
  long long v7 = *((_OWORD *)v2 + 1);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v7;
  *(_DWORD *)(a2 + 32) = v5;
  return result;
}

double sub_1000EF28C@<D0>(uint64_t a1@<X8>)
{
  CGSVGColorCreateDisplayP3();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000EF2FC(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D60B8;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

id sub_1000EF348()
{
  sub_1000EFB7C();
  id result = sub_1000EF394();
  qword_100310020 = (uint64_t)result;
  return result;
}

id sub_1000EF394()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithPath:v1];

  return v2;
}

id sub_1000EF408()
{
  if (qword_100308D20 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_100310020;
  id v1 = objc_allocWithZone((Class)CUICatalog);
  id v2 = v0;
  id result = sub_1000EF98C(0x737465737341, 0xE600000000000000, v0);
  qword_100310028 = (uint64_t)result;
  return result;
}

id sub_1000EF4B4()
{
  if (qword_100308D28 != -1) {
    swift_once();
  }
  id v1 = (void *)qword_100310028;
  if (!qword_100310028) {
    return 0;
  }
  double v2 = *v0;
  uint64_t v3 = *((void *)v0 + 1);
  NSString v4 = sub_10024E6A0();
  id v5 = sub_1000EFA70((uint64_t)v4, 0, 0, *((void *)v0 + 3), qword_100260010[*((char *)v0 + 32)], v0[2], v0[5], 0, 0xE000000000000000, v1);

  if (!v5) {
    return 0;
  }
  id v6 = [v5 referenceGlyph];
  id result = v5;
  if (v6)
  {
    int v8 = *((unsigned __int8 *)v0 + 48);
    id v9 = v6;
    id v10 = v9;
    if (v8 != 9)
    {
      id v10 = v9;
      uint64_t v11 = sub_1000EF838();
      uint64_t v13 = (uint64_t)v10;
      if (v12 >> 60 == 15
        || (uint64_t v14 = v11,
            unint64_t v15 = v12,
            Class isa = sub_10024DEF0().super.isa,
            uint64_t v13 = CGSVGDocumentCreateFromData(),
            isa,
            sub_10003F7F4(v14, v15),
            v10,
            v13))
      {

        id v10 = (id)v13;
      }
      sub_1000EEF9C((uint64_t)v10, v8);
    }
    BOOL v17 = v2 == 9.29650297e242 && v3 == 0xE90000000000006BLL;
    if (v17 || (sub_10024FA60() & 1) != 0)
    {
      if (v8 == 9)
      {
        uint64_t v18 = sub_1000EF838();
        if (v19 >> 60 != 15)
        {
          uint64_t v20 = v18;
          unint64_t v21 = v19;
          Class v22 = sub_10024DEF0().super.isa;
          uint64_t v23 = CGSVGDocumentCreateFromData();

          sub_10003F7F4(v20, v21);
          if (v23)
          {

            id v10 = (id)v23;
          }
        }
      }
      sub_1000EF6F0((uint64_t)v10, v8 != 9);
    }
    uint64_t v24 = sub_1000EF838();

    return (id)v24;
  }
  __break(1u);
  return result;
}

void sub_1000EF6F0(uint64_t a1, char a2)
{
  if (a2) {
    char v2 = 4;
  }
  else {
    char v2 = 3;
  }
  sub_1000EF154(v2, (uint64_t)&v10);
  uint64_t v3 = (void *)CGSVGAttributeMapCreate();
  NSString v4 = (void *)CGSVGAttributeCreateWithColor();
  NSString v5 = sub_10024E6A0();
  id v6 = (void *)CGSVGAttributeCreateWithString();

  NSString v7 = sub_10024E6A0();
  int v8 = (void *)CGSVGAttributeCreateWithString();

  CGSVGAttributeMapSetAttribute();
  CGSVGAttributeMapSetAttribute();
  CGSVGAttributeMapSetAttribute();
  NSString v9 = sub_10024E6A0();
  CGSVGDocumentAddNamedStyle();
}

uint64_t sub_1000EF838()
{
  id v0 = [objc_allocWithZone((Class)NSMutableData) init];
  sub_100019524(&qword_100310030);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100255FB0;
  char v2 = (void *)kCGSVGPacked;
  *(void *)(inited + 32) = kCGSVGPacked;
  *(void *)(inited + 40) = kCFBooleanTrue;
  type metadata accessor for CFString(0);
  id v3 = v0;
  id v4 = v2;
  CFBooleanRef v5 = kCFBooleanTrue;
  sub_100019524(&qword_100310038);
  sub_1000EFB2C();
  sub_10024E510();
  Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  int v7 = CGSVGDocumentWriteToData();

  if (v7)
  {
    id v8 = v3;
    uint64_t v9 = sub_10024DF10();
  }
  else
  {

    return 0;
  }
  return v9;
}

id sub_1000EF98C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  NSString v6 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v11 = 0;
  id v7 = [v4 initWithName:v6 fromBundle:a3 error:&v11];

  if (v7)
  {
    id v8 = v11;
  }
  else
  {
    id v9 = v11;
    sub_10024DCE0();

    swift_willThrow();
  }

  return v7;
}

id sub_1000EFA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, uint64_t a8, uint64_t a9, void *a10)
{
  NSString v18 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v19 = [a10 namedVectorGlyphWithName:a1 scaleFactor:a2 deviceIdiom:a3 layoutDirection:a4 glyphSize:a5 glyphWeight:v18 glyphPointSize:a6 appearanceName:a7];

  return v19;
}

unint64_t sub_1000EFB2C()
{
  unint64_t result = qword_1003091C0;
  if (!qword_1003091C0)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003091C0);
  }
  return result;
}

unint64_t sub_1000EFB7C()
{
  unint64_t result = qword_100310040;
  if (!qword_100310040)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100310040);
  }
  return result;
}

double sub_1000EFBBC()
{
  return 1.0;
}

uint64_t sub_1000EFBCC()
{
  return 255;
}

NSString sub_1000EFBE0()
{
  return sub_10024E6A0();
}

uint64_t sub_1000EFC00(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_10024F6F0())
  {
    uint64_t v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_10024F380();
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5);
        swift_retain();
      }
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      swift_bridgeObjectRetain();
      char v8 = sub_1000F0BD0(a2, a3);
      swift_bridgeObjectRelease();
      if (v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      swift_release();
      ++v5;
      if (v7 == v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000EFD68()
{
  sub_10001DAC0();
  uint64_t v0 = sub_10024F170();
  unint64_t v2 = v1;
  if (qword_100308D30 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100026DD8(v3, v0, v2);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    sub_1000EFEF4(95, 0xE100000000000000, v0, v2);
    if (v5)
    {
      uint64_t v4 = 0;
    }
    else
    {
      uint64_t v6 = sub_10024E920();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v4 = sub_1000EFC00(v9, v6, v8);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1000EFEF4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_10024E8F0() != a1 || v9 != a2)
  {
    char v11 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v11) {
      return v8;
    }
    unint64_t v8 = sub_10024E7A0();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1000EFFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return variable initialization expression of MarkedCircularBuffer._markedIndexOffset();
  }
  if (*(void *)(a2 + 32) == a1) {
    return sub_1000F0E94();
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    uint64_t v6 = *(void *)(a2 + 40 + 8 * result++);
    if (v6 == a1) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_1000F0030(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_10024FA60() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  long long v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_10024FA60();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

void *sub_1000F0118()
{
  type metadata accessor for OctaneLocale();
  uint64_t result = sub_1000F0148();
  qword_10034C060 = (uint64_t)result;
  return result;
}

void *sub_1000F0148()
{
  uint64_t v0 = sub_10024DDC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v7 = sub_10024E6A0();
  NSString v8 = sub_10024E6A0();
  id v9 = [v6 pathForResource:v7 ofType:v8];

  long long v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    sub_10024E6B0();

    sub_10024DD30();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_10024DE00();
    unint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    sub_10024DC80();
    swift_allocObject();
    sub_10024DC70();
    sub_100019524(&qword_100310110);
    sub_1000F0DB4();
    sub_10024DC60();
    sub_10003F808(v11, v13);
    swift_release();
    NSString v18 = (void *)v20;
  }
  else
  {
    NSString v18 = _swiftEmptyArrayStorage;
  }
  unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = v18[2];
  if (v14)
  {
    type metadata accessor for OctaneLocale();
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v14; ++i)
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      if (sub_1000F0674(v16))
      {
        sub_10024EA70();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10024EAD0();
        }
        sub_10024EB10();
        sub_10024EAC0();
      }
    }
    swift_bridgeObjectRelease();
    long long v10 = (void *)v20;
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000F0464(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1000F04B4(a1);
  return v2;
}

void *sub_1000F04B4(void *a1)
{
  uint64_t v3 = v1;
  sub_10001C2A8(a1, a1[3]);
  sub_1000F0EA0();
  sub_10024FD10();
  if (v2)
  {
    type metadata accessor for OctaneLocale();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_10001C2A8(v10, v10[3]);
    sub_1000F0EA0();
    sub_10024FA70();
    type metadata accessor for OctaneLocale();
    uint64_t inited = (void *)sub_1000EFD68();
    swift_bridgeObjectRelease();
    if (!inited) {
      uint64_t inited = (void *)swift_initStaticObject();
    }
    uint64_t v7 = inited[5];
    void v3[4] = inited[4];
    v3[5] = v7;
    uint64_t v9 = inited[2];
    uint64_t v8 = inited[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    v3[2] = v9;
    v3[3] = v8;
    sub_10001C2EC((uint64_t)v10);
  }
  sub_10001C2EC((uint64_t)a1);
  return v3;
}

uint64_t sub_1000F05D4(void *a1)
{
  sub_10001C2A8(a1, a1[3]);
  sub_10024FD30();
  sub_100051B64((uint64_t)v2, v3);
  sub_10024FA90();
  return sub_10001C2EC((uint64_t)v2);
}

void *sub_1000F0674(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  unint64_t v2 = sub_10011ED00();
  if ((v3 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v2);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100161540(1701080931, 0xE400000000000000, a1);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    type metadata accessor for OctaneLocale();
    uint64_t result = (void *)swift_allocObject();
    result[4] = v6;
    result[5] = v5;
    result[2] = v7;
    result[3] = v9;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1000F072C(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10024F6F0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
    return 0;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    return 0;
  }
LABEL_3:
  unint64_t v4 = v1[3];
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v5 = v1[2] & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (v5)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_10024E8F0();
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      if (v6 == 95 && v8 == 0xE100000000000000) {
        break;
      }
      char v10 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0 || 4 * v5 == (unint64_t)sub_10024E7A0() >> 14) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v11 = sub_10024E920();
  unint64_t v20 = v12;
  uint64_t v21 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for OctaneLocale();
  unint64_t v13 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = 4;
  do
  {
    if (v13)
    {
      uint64_t v16 = sub_10024F380();
    }
    else
    {
      uint64_t v16 = *(void *)(a1 + 8 * v15);
      swift_retain();
    }
    uint64_t v17 = v15 - 3;
    if (__OFADD__(v15 - 4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (sub_1000F09D0(v1, *(void **)(v16 + 48)))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v16;
    }
    if (!v14)
    {
      swift_bridgeObjectRetain();
      char v18 = sub_1000F0BD0(v21, v20);
      swift_bridgeObjectRelease();
      uint64_t v14 = v16;
      if (v18) {
        goto LABEL_26;
      }
      uint64_t v14 = 0;
    }
    swift_release();
LABEL_26:
    ++v15;
  }
  while (v17 != v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v14)
  {
    sub_10014ED88(0, v13 == 0, a1);
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_10024F380();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)(a1 + 32);
      swift_retain();
    }
  }
  return v14;
}

uint64_t sub_1000F09D0(void *a1, void *a2)
{
  BOOL v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = sub_10024FA60(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5])
    {
      return 1;
    }
    else
    {
      return sub_10024FA60();
    }
  }
  return result;
}

uint64_t sub_1000F0A58(uint64_t a1)
{
  uint64_t v6 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = 0x636E657272756340;
  v7._object = (void *)0xEA00000000003D79;
  sub_10024E800(v7);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v4;
  v8._object = v3;
  sub_10024E800(v8);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000F0ADC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000F0B04()
{
  sub_1000F0ADC();
  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for OctaneLocale()
{
  return self;
}

uint64_t sub_1000F0B5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000F0464(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000F0B88(void *a1)
{
  return sub_1000F05D4(a1);
}

uint64_t sub_1000F0BAC(void **a1, void **a2)
{
  return sub_1000F09D0(*a1, *a2) & 1;
}

uint64_t sub_1000F0BD0(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10024E840();
  uint64_t v6 = a1;
  if (v5)
  {
    uint64_t v7 = v4;
    uint64_t v8 = v5;
    uint64_t v6 = a1;
    while ((v6 ^ a2) >= 0x4000)
    {
      uint64_t v9 = sub_10024F0C0();
      uint64_t v11 = v10;
      uint64_t v6 = sub_10024F070();
      if (v7 == v9 && v8 == v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v13 = sub_10024FA60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      uint64_t v7 = sub_10024E840();
      uint64_t v8 = v14;
      if (!v14) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  if ((v6 ^ a2) < 0x4000)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 1;
  }
  sub_10024F0C0();
  sub_10024F070();
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1000F0DB4()
{
  unint64_t result = qword_100310118;
  if (!qword_100310118)
  {
    sub_10001B028(&qword_100310110);
    sub_1000F0E28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310118);
  }
  return result;
}

unint64_t sub_1000F0E28()
{
  unint64_t result = qword_100309490;
  if (!qword_100309490)
  {
    sub_10001B028(&qword_100309478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100309490);
  }
  return result;
}

uint64_t sub_1000F0E94()
{
  return 0;
}

uint64_t sub_1000F0EA0()
{
  return v0;
}

void sub_1000F0EB4(int a1)
{
  sub_1001B5F48();
  if (v1)
  {
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      if (v6 == 22)
      {
        swift_bridgeObjectRelease();
        sub_1000C81E8();
        swift_allocError();
      }
      else
      {
        sub_100028D58(a1);
        sub_100028EB4();
        swift_allocError();
        *(void *)uint64_t v3 = v4;
        *(void *)(v3 + 8) = v5;
        *(_DWORD *)(v3 + 16) = v6;
      }
      swift_willThrow();
    }
    swift_errorRelease();
  }
}

uint64_t sub_1000F0FD4(int a1, uint64_t a2, char a3)
{
  sub_1001B6E08();
  uint64_t v7 = v6;
  if (!v3)
  {
    if (a3) {
      sub_1001B7130();
    }
    if (a1 == 30)
    {
      int v9 = 0;
      sub_1001B6CC0(v7, 41, 27, (uint64_t)&v9, 4u);
    }
  }
  return v7;
}

uint64_t sub_1000F1214(uint64_t result)
{
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 16) = result;
    sub_1000F0EB4(result);
    if (v2)
    {
      *(_DWORD *)(v1 + 16) = -1;
      swift_release();
      swift_willThrow();
    }
    return v1;
  }
  return result;
}

void sub_1000F126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((*(_DWORD *)(a1 + 16) & 0x80000000) != 0) {
    goto LABEL_5;
  }
  if (a5 && a6 - a5 >= (uint64_t)&_mh_execute_header)
  {
    sub_10003C4F8();
    sub_10024F660();
    __break(1u);
LABEL_5:
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v6, v7);
    return;
  }
  sub_1001B6BFC();
}

void sub_1000F137C(uint64_t a1, msghdr *a2, unint64_t a3)
{
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3 < 0)
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v4, v5);
  }
  else
  {
    if (a2)
    {
      if ((a3 & 0x8000000000000000) == 0 && !HIDWORD(a3))
      {
        sub_1001B6EB4(v3, a2, a3, 0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    sub_10003C4F8();
    sub_10024F660();
    __break(1u);
  }
}

uint64_t sub_1000F1468(uint64_t (*a1)(void))
{
  if ((*(_DWORD *)(v1 + 16) & 0x80000000) == 0) {
    return a1();
  }
  sub_100028EB4();
  sub_1000290D0();
  sub_1000878A4();
  return sub_100062570(v3, v4);
}

uint64_t sub_1000F14CC()
{
  int v1 = *(_DWORD *)(v0 + 16);
  if (v1 < 0)
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    return sub_100062570(v3, v4);
  }
  else
  {
    *(_DWORD *)(v0 + 16) = -1;
    return sub_100028D58(v1);
  }
}

BOOL sub_1000F152C()
{
  return *(_DWORD *)(v0 + 16) >= 0;
}

unint64_t sub_1000F153C()
{
  return sub_1000F159C((uint64_t (*)(void))sub_1000F1BEC);
}

unint64_t sub_1000F156C()
{
  return sub_1000F159C((uint64_t (*)(void))sub_1000F1C04);
}

unint64_t sub_1000F159C(uint64_t (*a1)(void))
{
  memset(v4, 0, sizeof(v4));
  unint64_t result = sub_1000F1C1C((uint64_t)v4, 0x80uLL, v1, a1);
  if (!v2) {
    return sub_1000F179C();
  }
  return result;
}

uint64_t sub_1000F1630(uint64_t result, uint64_t a2)
{
  if (result == 6 && a2 == 1)
  {
    unint64_t v4 = sub_1000F159C((uint64_t (*)(void))sub_1000F1BEC);
    if (v2)
    {
      unint64_t result = swift_errorRelease();
    }
    else
    {
      unint64_t v5 = v4;
      unint64_t result = swift_release();
      if ((v5 & 0x8000000000000000) != 0) {
        return result;
      }
    }
  }
  __chkstk_darwin(result, a2);
  return sub_100190C9C(sub_1000F2538);
}

uint64_t sub_1000F171C(unint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(v1 + 16);
  if ((v2 & 0x80000000) != 0)
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    return sub_100062570(v5, v6);
  }
  else
  {
    swift_retain();
    sub_1000F2200(v2, a1);
    return swift_release();
  }
}

unint64_t sub_1000F179C()
{
  int v8 = *(unsigned __int8 *)(v0 + 1);
  switch(v8)
  {
    case 1:
      sub_100019524(&qword_100310000);
      uint64_t v11 = swift_allocObject();
      return sub_1000F2558(v11);
    case 30:
      sub_1000F262C();
      uint64_t v22 = v1;
      uint64_t v23 = v5;
      sub_1000ECF00(30, &v22, 0x2EuLL);
      sub_100019524(&qword_10030B040);
      uint64_t v9 = swift_allocObject();
      return sub_1000F2604(v9);
    case 2:
      sub_1000F25A8();
      LOBYTE(v22) = v0;
      BYTE1(v22) = v12;
      WORD1(v22) = v1;
      HIDWORD(v22) = v2;
      LOBYTE(v23) = v3;
      BYTE1(v23) = v4;
      BYTE2(v23) = v5;
      BYTE3(v23) = v6;
      BYTE4(v23) = v7;
      char v20 = v14;
      char v21 = v13;
      BYTE5(v23) = v13;
      BYTE6(v23) = v14;
      HIBYTE(v23) = v0;
      uint64_t v15 = sub_1000ECF00(2, (char *)&v22 + 4, 0x10uLL);
      uint64_t v18 = v16;
      uint64_t v19 = v15;
      sub_100019524(&qword_10030B048);
      uint64_t v17 = swift_allocObject();
      unint64_t result = sub_1000F25D8(v17);
      *(unsigned char *)(result + 29) = v21;
      *(unsigned char *)(result + 30) = v20;
      *(unsigned char *)(result + 31) = v0;
      *(void *)(result + 32) = v19;
      *(void *)(result + 40) = v18;
      break;
    default:
      sub_10024F330(26);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = sub_10024F9E0();
      sub_10024E800(v24);
      swift_bridgeObjectRelease();
      sub_1000F2644();
      sub_10024F670();
      __break(1u);
      sub_1000F2658();
      unint64_t result = swift_unexpectedError();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1000F19EC()
{
  return sub_1000F1468((uint64_t (*)(void))sub_1000F2518);
}

unint64_t sub_1000F1A2C(uint64_t a1)
{
  char v9 = a1;
  int v10 = *(unsigned __int8 *)(a1 + 1);
  switch(v10)
  {
    case 1:
      sub_100019524(&qword_100310000);
      uint64_t v19 = swift_allocObject();
      return sub_1000F2558(v19);
    case 30:
      sub_1000F262C();
      uint64_t v24 = v2;
      uint64_t v25 = v6;
      sub_1000ECF00(30, &v24, 0x2EuLL);
      sub_100019524(&qword_10030B040);
      uint64_t v18 = swift_allocObject();
      return sub_1000F2604(v18);
    case 2:
      sub_1000F25A8();
      LOBYTE(v24) = v1;
      BYTE1(v24) = v11;
      WORD1(v24) = v2;
      HIDWORD(v24) = v3;
      LOBYTE(v25) = v4;
      BYTE1(v25) = v5;
      BYTE2(v25) = v6;
      BYTE3(v25) = v7;
      BYTE4(v25) = v8;
      char v22 = v13;
      char v23 = v12;
      BYTE5(v25) = v12;
      BYTE6(v25) = v13;
      HIBYTE(v25) = v9;
      uint64_t v14 = sub_1000ECF00(2, (char *)&v24 + 4, 0x10uLL);
      uint64_t v20 = v15;
      uint64_t v21 = v14;
      sub_100019524(&qword_10030B048);
      uint64_t v16 = swift_allocObject();
      unint64_t result = sub_1000F25D8(v16);
      *(unsigned char *)(result + 29) = v23;
      *(unsigned char *)(result + 30) = v22;
      *(unsigned char *)(result + 31) = v9;
      *(void *)(result + 32) = v21;
      *(void *)(result + 40) = v20;
      break;
    default:
      return 0xF000000000000007;
  }
  return result;
}

void sub_1000F1BEC()
{
}

void sub_1000F1C04()
{
}

uint64_t sub_1000F1C1C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if ((a2 & 0x8000000000000000) != 0 || HIDWORD(a2))
  {
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  else if ((*(_DWORD *)(a3 + 16) & 0x80000000) != 0)
  {
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD00000000000001FLL;
    *(void *)(v5 + 8) = 0x800000010027B110;
    *(_DWORD *)(v5 + 16) = 9;
    return swift_willThrow();
  }
  else
  {
    return a4();
  }
  return result;
}

uint64_t type metadata accessor for BaseSocket()
{
  return self;
}

uint64_t sub_1000F1D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a5 - 8);
  unint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1, a2);
  (*(void (**)(char *))(v9 + 16))((char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10))
  {
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  else
  {
    sub_1001B6CC0(a1, a3, a4, (uint64_t)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))((char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  }
  return result;
}

uint64_t sub_1000F1F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *(void *)(a4 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7))
  {
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  socklen_t v21 = *(void *)(v6 + 64);
  uint64_t v12 = *(void *)(v6 + 72);
  char v13 = (unsigned char *)sub_10024F110();
  uint64_t v15 = v14;
  sub_10008DB90(0, v13, v14);
  if (v13)
  {
    if (v12)
    {
      if (v15 - v13 != 0x8000000000000000 || v12 != -1) {
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
  }
LABEL_9:
  uint64_t v17 = sub_10024F050();
  if (!v17) {
    goto LABEL_15;
  }
  uint64_t v18 = v17;
  sub_1001B69D8(a1, a2, a3, v17, &v21);
  if (!v5) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a5, v18, a4);
  }
  return sub_1000F21A4(v18, (uint64_t)v13);
}

uint64_t sub_1000F21A4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10024F010();
  if (a2)
  {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_1000F2200(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      int v2 = *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x14);
      uint64_t v3 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v4 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      int v5 = *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      LODWORD(v16) = *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      DWORD1(v16) = v2;
      *((void *)&v16 + 1) = v3;
      *(void *)&long long v17 = v4;
      DWORD2(v17) = v5;
      unint64_t v6 = 28;
    }
    else
    {
      __int16 v8 = *(_WORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x78);
      long long v9 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      long long v10 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      long long v11 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
      long long v12 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x50);
      long long v13 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x60);
      long long v16 = *(_OWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      long long v17 = v9;
      uint64_t v14 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x70);
      long long v18 = v10;
      long long v19 = v11;
      long long v20 = v12;
      long long v21 = v13;
      uint64_t v22 = v14;
      __int16 v23 = v8;
      unint64_t v6 = 106;
    }
  }
  else
  {
    int v7 = *(_DWORD *)(a2 + 20);
    LODWORD(v16) = *(_DWORD *)(a2 + 16);
    DWORD1(v16) = v7;
    *((void *)&v16 + 1) = *(void *)(a2 + 24);
    unint64_t v6 = 16;
  }
  return sub_1001B65E0(a1, (uint64_t)&v16, v6);
}

uint64_t sub_1000F22D4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_1000F2318(unint64_t a1)
{
  return sub_1000F171C(a1);
}

unint64_t sub_1000F233C()
{
  return sub_1000F153C();
}

unint64_t sub_1000F2360()
{
  return sub_1000F156C();
}

uint64_t sub_1000F2384(uint64_t a1, uint64_t a2)
{
  return sub_1000F1630(a1, a2);
}

uint64_t sub_1000F23A8()
{
  return sub_1000F19EC();
}

unint64_t sub_1000F23CC()
{
  sub_10024F330(20);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 32032;
  v2._object = (void *)0xE200000000000000;
  sub_10024E800(v2);
  return 0xD000000000000010;
}

unint64_t sub_1000F2474()
{
  return sub_1000F23CC();
}

_UNKNOWN **sub_1000F2498()
{
  return &off_1002E4610;
}

unint64_t sub_1000F24A4(uint64_t a1)
{
  unint64_t result = sub_1000F24CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000F24CC()
{
  unint64_t result = qword_100310270;
  if (!qword_100310270)
  {
    type metadata accessor for BaseSocket();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310270);
  }
  return result;
}

uint64_t sub_1000F2518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F1F78(a1, *(unsigned int *)(v2 + 24), *(unsigned int *)(v2 + 28), *(void *)(v2 + 16), a2);
}

uint64_t sub_1000F2538(uint64_t a1)
{
  return sub_1000F1D9C(a1, *(void *)(v1 + 24), *(unsigned int *)(v1 + 32), *(unsigned int *)(v1 + 36), *(void *)(v1 + 16));
}

unint64_t sub_1000F2558(uint64_t a1)
{
  *(unsigned char *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 17) = 1;
  *(_OWORD *)(a1 + 18) = *(_OWORD *)(v1 + 2);
  *(_OWORD *)(a1 + 34) = *(_OWORD *)(v1 + 18);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(v1 + 34);
  long long v4 = *(_OWORD *)(v1 + 66);
  long long v5 = *(_OWORD *)(v1 + 82);
  uint64_t v6 = *(void *)(v1 + 98);
  *(_OWORD *)(a1 + 66) = *(_OWORD *)(v1 + 50);
  *(_OWORD *)(a1 + 82) = v4;
  *(_OWORD *)(a1 + 98) = v5;
  unint64_t result = a1 | 0x8000000000000000;
  *(void *)(a1 + 114) = v6;
  return result;
}

uint64_t sub_1000F25D8(uint64_t result)
{
  *(unsigned char *)(result + 16) = v1;
  *(unsigned char *)(result + 17) = 2;
  *(_WORD *)(result + 18) = v2;
  *(_DWORD *)(result + 20) = v3;
  *(unsigned char *)(result + 24) = v4;
  *(unsigned char *)(result + 25) = v5;
  *(unsigned char *)(result + 26) = v6;
  *(unsigned char *)(result + 27) = v7;
  *(unsigned char *)(result + 28) = v8;
  return result;
}

uint64_t sub_1000F2604(uint64_t a1)
{
  *(unsigned char *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 17) = v9;
  *(_WORD *)(a1 + 18) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v6;
  uint64_t result = a1 | 0x4000000000000000;
  *(void *)(a1 + 48) = v1;
  *(void *)(a1 + 56) = v2;
  return result;
}

uint64_t sub_1000F2658()
{
  return v0;
}

uint64_t sub_1000F266C()
{
  return v0;
}

unsigned char *sub_1000F2680(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F274CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for StoreKitClientVersion()
{
}

uint64_t sub_1000F2780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  BOOL v142 = 1;
  BOOL v141 = 1;
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(a1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = (uint64_t *)(v3 + 56);
    unsigned int v6 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v8 = *(v5 - 3);
      unint64_t v7 = *(v5 - 2);
      uint64_t v10 = *(v5 - 1);
      uint64_t v9 = *v5;
      if ((v7 & 0x1000000000000000) != 0) {
        goto LABEL_9;
      }
      if ((v7 & 0x2000000000000000) != 0)
      {
        char v139 = (void *)*(v5 - 3);
        uint64_t v140 = v7 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v8 & 0x1000000000000000) == 0)
      {
        sub_10024F3E0();
      }
      sub_1000F50C8();
      char v14 = sub_1001D5F9C(v11, v12, v13, 0xEA00000000007A54);
      if ((v14 & 0xFE) == 2) {
LABEL_9:
      }
        char v14 = sub_1001D60B0(0x2D656C7070412D58uLL, 0xEA00000000007A54, v8, v7);
      if (v14)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100034BF0();
          unsigned int v6 = v17;
        }
        unint64_t v15 = v6[2];
        unint64_t v2 = v15 + 1;
        if (v15 >= v6[3] >> 1)
        {
          sub_100034BF0();
          unsigned int v6 = v18;
        }
        _OWORD v6[2] = v2;
        long long v16 = &v6[2 * v15];
        void v16[4] = v10;
        uint64_t v16[5] = v9;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v5 += 4;
      --isUniquelyReferenced_nonNull_native;
    }
    while (isUniquelyReferenced_nonNull_native);
    uint64_t v3 = a1;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unsigned int v6 = _swiftEmptyArrayStorage;
  }
  if (v6[2])
  {
    sub_10014ED68(0, 1, (uint64_t)v6);
    uint64_t v20 = v6[4];
    unint64_t v19 = v6[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = HIBYTE(v19) & 0xF;
  uint64_t v22 = v20 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23) {
    goto LABEL_165;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    uint64_t v25 = sub_1001A4F88(v20, v19, 10);
    LOBYTE(v20) = v96;
    goto LABEL_57;
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((v20 & 0x1000000000000000) != 0) {
      uint64_t v24 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v24 = (unsigned __int8 *)sub_10024F3E0();
    }
    uint64_t v25 = (uint64_t)sub_1001A4F58(v24, v22);
    LOBYTE(v20) = v26 & 1;
    goto LABEL_57;
  }
  char v139 = (void *)v20;
  uint64_t v140 = v19 & 0xFFFFFFFFFFFFFFLL;
  if (v20 == 43)
  {
    if (v21)
    {
      if (v21 != 1 && (BYTE1(v20) - 48) <= 9u)
      {
        uint64_t v25 = (BYTE1(v20) - 48);
        if (v21 == 2) {
          goto LABEL_56;
        }
        if ((BYTE2(v20) - 48) <= 9u)
        {
          uint64_t v25 = 10 * (BYTE1(v20) - 48) + (BYTE2(v20) - 48);
          if (v21 != 3)
          {
            while (1)
            {
              sub_100028C7C();
              if (!v28 & v27) {
                goto LABEL_54;
              }
              sub_1000F5050();
              if (!v28) {
                goto LABEL_54;
              }
              uint64_t v25 = v30 + v29;
              if (__OFADD__(v30, v29)) {
                goto LABEL_54;
              }
              sub_100069330();
              if (v28) {
                goto LABEL_57;
              }
            }
          }
          goto LABEL_56;
        }
      }
      goto LABEL_54;
    }
  }
  else
  {
    if (v20 != 45)
    {
      if (v21 && (v20 - 48) <= 9u)
      {
        uint64_t v25 = (v20 - 48);
        if (v21 == 1) {
          goto LABEL_56;
        }
        if ((BYTE1(v20) - 48) <= 9u)
        {
          uint64_t v25 = 10 * (v20 - 48) + (BYTE1(v20) - 48);
          if (v21 != 2)
          {
            while (1)
            {
              sub_100028C7C();
              if (!v28 & v27) {
                goto LABEL_54;
              }
              sub_1000F5050();
              if (!v28) {
                goto LABEL_54;
              }
              uint64_t v25 = v93 + v92;
              if (__OFADD__(v93, v92)) {
                goto LABEL_54;
              }
              sub_100069330();
              if (v28) {
                goto LABEL_57;
              }
            }
          }
          goto LABEL_56;
        }
      }
LABEL_54:
      uint64_t v25 = 0;
      LOBYTE(v20) = 1;
      goto LABEL_57;
    }
    if (v21)
    {
      if (v21 != 1 && (BYTE1(v20) - 48) <= 9u)
      {
        if (v21 == 2)
        {
          LOBYTE(v20) = 0;
          uint64_t v25 = -(uint64_t)(BYTE1(v20) - 48);
LABEL_57:
          swift_bridgeObjectRelease();
          char v133 = v20 & 1;
          if (v20) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v25;
          }
          for (uint64_t i = v31; ; uint64_t i = 0)
          {
            swift_bridgeObjectRetain();
            sub_1000F5080((uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, (uint64_t)"Swift/UnsafeBufferPointer.swift");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v130 = *(void *)(v2 + 40);
              uint64_t v131 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v130 = 0;
              uint64_t v131 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, v3, 0x646973442D58uLL, 0xE600000000000000);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              sub_1000F5098();
            }
            else
            {
              unint64_t v19 = 0;
              uint64_t isUniquelyReferenced_nonNull_native = 0xE000000000000000;
            }
            swift_bridgeObjectRelease();
            Swift::String v32 = (void *)sub_1001A3CE4(v19, isUniquelyReferenced_nonNull_native);
            uint64_t v34 = v33;
            swift_bridgeObjectRetain();
            sub_1000F5030((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"X-Apple-Store-Front");
            sub_1000F4FDC();
            char v129 = v34;
            uint64_t v128 = v32;
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v126 = *(void *)(v2 + 40);
              uint64_t v127 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v126 = 0;
              uint64_t v127 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, v3, 0xD000000000000012, 0x800000010027DF70);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v124 = *(void *)(v2 + 40);
              uint64_t v125 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v124 = 0;
              uint64_t v125 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5080((uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001ALL, (uint64_t)"X-Apple-I-TimeZone");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v122 = *(void *)(v2 + 32);
              uint64_t v123 = *(void *)(v2 + 40);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v122 = 0;
              uint64_t v123 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, v3, 0xD000000000000015, 0x800000010027DFB0);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v120 = *(void *)(v2 + 40);
              uint64_t v121 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v120 = 0;
              uint64_t v121 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5064();
            sub_1000F3770(v36, v37, v38, v35 | 0xED00004D2D440000);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v118 = *(void *)(v2 + 40);
              uint64_t v119 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v118 = 0;
              uint64_t v119 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5080((uint64_t)_swiftEmptyArrayStorage, 0xD000000000000016, (uint64_t)"X-Apple-I-Client-Time");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v116 = *(void *)(v2 + 40);
              uint64_t v117 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v116 = 0;
              uint64_t v117 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5080((uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011, (uint64_t)"X-Apple-Client-Address");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              sub_1000F5098();
              swift_bridgeObjectRelease();
              char v139 = (void *)v34;
              uint64_t v140 = (uint64_t)v32;
              sub_10001DAC0();
              uint64_t v115 = sub_1000F50DC();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v115 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, v3, 0xD000000000000015, 0x800000010027E010);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v113 = *(void *)(v2 + 40);
              uint64_t v114 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v113 = 0;
              uint64_t v114 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5064();
            sub_1000F3770(v40, v41, v42, v39 & 0xFFFF0000FFFFLL | 0xEB00000000440000);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v111 = *(void *)(v2 + 40);
              uint64_t v112 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v111 = 0;
              uint64_t v112 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, v3, 0xD000000000000012, 0x800000010027E030);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              sub_1000F5098();
            }
            else
            {
              uint64_t v34 = 0;
              Swift::String v32 = (void *)0xE000000000000000;
            }
            swift_bridgeObjectRelease();
            uint64_t v43 = sub_1001A3CE4(v34, v32);
            char v45 = v44;
            swift_bridgeObjectRetain();
            sub_1000F50C8();
            sub_1000F3770(v46, v47, v48, 0xEE0074656E726150);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v107 = *(void *)(v2 + 40);
              uint64_t v108 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v107 = 0;
              uint64_t v108 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5010();
            sub_1000F3770(v50, v51, v52, v49 | 0xEE004D2D00000000);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v105 = *(void *)(v2 + 40);
              uint64_t v106 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v105 = 0;
              uint64_t v106 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5080((uint64_t)_swiftEmptyArrayStorage, 0xD000000000000010, (uint64_t)"X-Apple-I-MD-RINFO");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v103 = *(void *)(v2 + 40);
              uint64_t v104 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v103 = 0;
              uint64_t v104 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, v3, 0x6E656B6F542D58uLL, 0xE700000000000000);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v101 = *(void *)(v2 + 40);
              uint64_t v102 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v101 = 0;
              uint64_t v102 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5010();
            sub_1000F3770(v54, v55, v56, v53 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000);
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v99 = *(void *)(v2 + 40);
              uint64_t v100 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v99 = 0;
              uint64_t v100 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5030((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"X-Apple-I-Locale");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              uint64_t v97 = *(void *)(v2 + 40);
              uint64_t v98 = *(void *)(v2 + 32);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v97 = 0;
              uint64_t v98 = 0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1000F5080((uint64_t)_swiftEmptyArrayStorage, 0xD000000000000018, (uint64_t)"X-Apple-ActionSignature");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              sub_1000F5098();
              swift_bridgeObjectRelease();
              v57._rawValue = &off_1002D6230;
              BOOL v142 = sub_1000F3BF8(v34, v32, v57);
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRetain();
            sub_1000F5030((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"X-Apple-NSURLCachePolicy");
            sub_1000F4FDC();
            if (*(void *)(v2 + 16))
            {
              sub_1000F4FC0();
              sub_1000F5098();
              swift_bridgeObjectRelease();
              v58._rawValue = &off_1002D6268;
              BOOL v141 = sub_1000F3BF8(v34, v32, v58);
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v59 = (void *)sub_10024E510();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            uint64_t v60 = (void *)sub_1000F3770((uint64_t)_swiftEmptyArrayStorage, a1, 0xD000000000000017, 0x800000010027E0D0);
            swift_bridgeObjectRelease();
            uint64_t v110 = v43;
            if (v60[2])
            {
              sub_1000F4FC0();
              uint64_t v61 = (void *)v60[4];
              uint64_t v62 = v60[5];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              char v139 = v61;
              uint64_t v140 = v62;
              sub_10001DAC0();
              uint64_t v63 = (void *)sub_1000F50DC();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v63 = _swiftEmptyArrayStorage;
            }
            char v109 = v45;
            uint64_t v64 = v63[2];
            if (!v64)
            {
LABEL_141:
              swift_bridgeObjectRelease();
              v88._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
              v88._object = (void *)0x800000010027E0F0;
              Swift::String_optional v89 = HTTPHeaders.first(name:)(v88);
              swift_bridgeObjectRelease();
              if (v89.value._object) {
                BOOL v90 = sub_1000F3954(v89.value._countAndFlagsBits, (unint64_t)v89.value._object) != 0;
              }
              else {
                BOOL v90 = 0;
              }
              uint64_t result = v125;
              *(void *)a2 = i;
              *(void *)(a2 + 16) = v131;
              *(void *)(a2 + 24) = v130;
              *(void *)(a2 + 32) = v128;
              *(void *)(a2 + 48) = v59;
              *(void *)(a2 + 56) = v127;
              *(void *)(a2 + 64) = v126;
              *(void *)(a2 + 72) = v125;
              *(void *)(a2 + 80) = v124;
              *(void *)(a2 + 88) = v122;
              BOOL v138 = v142;
              LOBYTE(v139) = v133 & 1;
              BOOL v137 = v141;
              *(unsigned char *)(a2 + 8) = v133 & 1;
              *(unsigned char *)(a2 + 40) = v129 & 1;
              *(void *)(a2 + 96) = v123;
              *(void *)(a2 + 104) = v121;
              *(void *)(a2 + 112) = v120;
              *(void *)(a2 + 120) = v119;
              *(void *)(a2 + 128) = v118;
              *(void *)(a2 + 136) = v117;
              *(void *)(a2 + 144) = v116;
              *(void *)(a2 + 152) = v115;
              *(void *)(a2 + 160) = v114;
              *(void *)(a2 + 168) = v113;
              *(unsigned char *)(a2 + 176) = v138;
              *(unsigned char *)(a2 + 177) = v137;
              *(void *)(a2 + 184) = v112;
              *(void *)(a2 + 192) = v111;
              *(void *)(a2 + 200) = v110;
              *(unsigned char *)(a2 + 208) = v109 & 1;
              *(void *)(a2 + 216) = v108;
              *(void *)(a2 + 224) = v107;
              *(void *)(a2 + 232) = v106;
              *(void *)(a2 + 240) = v105;
              *(void *)(a2 + 248) = v104;
              *(void *)(a2 + 256) = v103;
              *(void *)(a2 + 264) = v102;
              *(void *)(a2 + 272) = v101;
              *(void *)(a2 + 280) = v100;
              *(void *)(a2 + 288) = v99;
              *(void *)(a2 + 296) = v98;
              *(void *)(a2 + 304) = v97;
              *(unsigned char *)(a2 + 312) = v90;
              return result;
            }
            uint64_t v65 = v63 + 5;
            uint64_t v3 = 47;
            sub_10001DAC0();
            while (1)
            {
              uint64_t v66 = *v65;
              char v139 = (void *)*(v65 - 1);
              uint64_t v140 = v66;
              uint64_t v67 = (void *)sub_10024F130();
              unint64_t v2 = (unint64_t)v67;
              uint64_t v68 = v67[2];
              if (!v68) {
                goto LABEL_136;
              }
              uint64_t v69 = v67[4];
              uint64_t v70 = v67[5];
              uint64_t v71 = (uint64_t)&v67[2 * v68 + 4];
              uint64_t v72 = *(void *)(v71 - 16);
              uint64_t v73 = *(void *)(v71 - 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (!v59)
              {
                swift_bridgeObjectRelease();
LABEL_136:
                swift_bridgeObjectRelease();
                goto LABEL_140;
              }
              uint64_t v136 = v73;
              uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              char v139 = v59;
              uint64_t v74 = v69;
              unint64_t v19 = (unint64_t)v59;
              unint64_t v75 = sub_10011ED00();
              uint64_t v77 = v59[2];
              BOOL v78 = (v76 & 1) == 0;
              Swift::Int v79 = v77 + v78;
              if (__OFADD__(v77, v78)) {
                break;
              }
              unint64_t v2 = v75;
              uint64_t v3 = v76;
              sub_100019524(&qword_10030AA40);
              unint64_t v19 = (unint64_t)&v139;
              if (sub_10024F630(isUniquelyReferenced_nonNull_native, v79))
              {
                unint64_t v19 = (unint64_t)v139;
                unint64_t v80 = sub_10011ED00();
                if ((v3 & 1) != (v81 & 1)) {
                  goto LABEL_170;
                }
                unint64_t v2 = v80;
              }
              uint64_t v59 = v139;
              if (v3)
              {
                uint64_t v82 = (void *)(v139[7] + 16 * v2);
                swift_bridgeObjectRelease();
                void *v82 = v72;
                v82[1] = v136;
              }
              else
              {
                v139[(v2 >> 6) + 8] |= 1 << v2;
                uint64_t v83 = (void *)(v59[6] + 16 * v2);
                *uint64_t v83 = v74;
                v83[1] = v70;
                uint64_t v84 = (void *)(v59[7] + 16 * v2);
                *uint64_t v84 = v72;
                v84[1] = v136;
                uint64_t v85 = v59[2];
                BOOL v86 = __OFADD__(v85, 1);
                uint64_t v87 = v85 + 1;
                if (v86) {
                  goto LABEL_164;
                }
                v59[2] = v87;
                swift_bridgeObjectRetain();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v3 = 47;
LABEL_140:
              v65 += 2;
              if (!--v64) {
                goto LABEL_141;
              }
            }
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            swift_bridgeObjectRelease();
            char v133 = 1;
          }
        }
        if ((BYTE2(v20) - 48) <= 9u)
        {
          uint64_t v25 = -10 * (BYTE1(v20) - 48) - (BYTE2(v20) - 48);
          if (v21 != 3)
          {
            while (1)
            {
              sub_100028C7C();
              if (!v28 & v27) {
                goto LABEL_54;
              }
              sub_1000F5050();
              if (!v28) {
                goto LABEL_54;
              }
              uint64_t v25 = v95 - v94;
              if (__OFSUB__(v95, v94)) {
                goto LABEL_54;
              }
              sub_100069330();
              if (v28) {
                goto LABEL_57;
              }
            }
          }
LABEL_56:
          LOBYTE(v20) = 0;
          goto LABEL_57;
        }
      }
      goto LABEL_54;
    }
    __break(1u);
  }
  __break(1u);
LABEL_170:
  uint64_t result = sub_10024FB70();
  __break(1u);
  return result;
}

uint64_t sub_1000F3770(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v24 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = a4;
    unint64_t v8 = (uint64_t *)(a2 + 56);
    do
    {
      unint64_t v10 = *(v8 - 3);
      unint64_t v9 = *(v8 - 2);
      uint64_t v11 = *(v8 - 1);
      uint64_t v12 = *v8;
      if ((v9 & 0x1000000000000000) != 0
        || ((v9 & 0x2000000000000000) != 0
          ? (v14 = HIBYTE(v9) & 0xF, v23[0] = *(v8 - 3), v23[1] = v9 & 0xFFFFFFFFFFFFFFLL, uint64_t v13 = v23)
          : (v10 & 0x1000000000000000) == 0
          ? (uint64_t v13 = (unsigned char *)sub_10024F3E0())
          : (unsigned char *)(uint64_t v13 = (unsigned char *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32), v14 = v10 & 0xFFFFFFFFFFFFLL),
            char v15 = sub_1001D5F9C(v13, v14, v24, a4),
            (v15 & 0xFE) == 2))
      {
        char v16 = sub_1001D60B0(v24, a4, v10, v9);
      }
      else
      {
        char v16 = v15 & 1;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (v16)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100034BF0();
          a1 = v19;
        }
        unint64_t v17 = *(void *)(a1 + 16);
        if (v17 >= *(void *)(a1 + 24) >> 1)
        {
          sub_100034BF0();
          a1 = v20;
        }
        *(void *)(a1 + 16) = v17 + 1;
        uint64_t v18 = a1 + 16 * v17;
        *(void *)(v18 + 32) = v11;
        *(void *)(v18 + 40) = v12;
        a4 = v22;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v8 += 4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000F393C(char a1)
{
  if (a1) {
    return 3157554;
  }
  else {
    return 3157553;
  }
}

uint64_t sub_1000F3954(uint64_t a1, unint64_t a2)
{
  BOOL v2 = a1 == 49 && a2 == 0xE100000000000000;
  if (v2
    || (sub_1000F4FF4() & 1) != 0
    || (a1 == 3157553 ? (BOOL v5 = a2 == 0xE300000000000000) : (BOOL v5 = 0), v5 || (sub_1000F4FF4() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  BOOL v7 = a1 == 50 && a2 == 0xE100000000000000;
  if (!v7 && (sub_1000F4FF4() & 1) == 0)
  {
    BOOL v8 = a1 == 3157554 && a2 == 0xE300000000000000;
    if (!v8 && (sub_1000F4FF4() & 1) == 0)
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_10024E1F0();
      sub_10001B0E8(v9, (uint64_t)qword_10034C0E0);
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_10024E1D0();
      os_log_type_t v11 = sub_10024EDF0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        swift_bridgeObjectRetain();
        sub_1000F3F3C(a1, a2, &v13);
        sub_10024F100();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Defaulting to legacy StoreKit mode because an invalid header version value was provided (%s)", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

BOOL sub_1000F3BC4(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D6230;
  return sub_1000F3BF8(a1, a2, v2);
}

unint64_t sub_1000F3BD0()
{
  return 0xD000000000000023;
}

BOOL sub_1000F3BEC(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D6268;
  return sub_1000F3BF8(a1, a2, v2);
}

BOOL sub_1000F3BF8(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  Swift::Int v5 = sub_10024F790(a3, v7);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

uint64_t sub_1000F3C3C()
{
  return 1766222167;
}

BOOL sub_1000F3C58@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D6230;
  BOOL result = sub_1000F3BF8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_1000F3C98@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1000F3BD0();
  *a1 = 0xD000000000000023;
  a1[1] = v3;
  return result;
}

BOOL sub_1000F3CD4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D6268;
  BOOL result = sub_1000F3BF8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_1000F3D14(void *a1@<X8>)
{
  *a1 = 1766222167;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1000F3D28(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8078;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000F3D7C(char *a1, char *a2)
{
  return sub_1000F9A48(*a1, *a2);
}

Swift::Int sub_1000F3D88()
{
  return sub_1001D36C8();
}

uint64_t sub_1000F3D90()
{
  return sub_1000D1198();
}

Swift::Int sub_1000F3D98()
{
  return sub_1000D2E50();
}

uint64_t sub_1000F3DA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000F3D28(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000F3DD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000F393C(*v1);
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

unint64_t sub_1000F3E04()
{
  unint64_t result = qword_100310278;
  if (!qword_100310278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310278);
  }
  return result;
}

uint64_t sub_1000F3E50(uint64_t result, unsigned char **a2)
{
  Swift::OpaquePointer v2 = *a2;
  *Swift::OpaquePointer v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1000F3E60(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1000F3E9C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000F3EC4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1000F3F3C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10024F100();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1000F3F3C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000F4010(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000318C8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000318C8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10001C2EC((uint64_t)v12);
  return v7;
}

uint64_t sub_1000F4010(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1000F4168((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_10024F120();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_1000F4240(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_10024F3E0();
    if (!v8)
    {
      uint64_t result = sub_10024F660();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1000F4168(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_10024F730();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_1000F4240(uint64_t a1, unint64_t a2)
{
  Swift::OpaquePointer v2 = sub_1000F42D8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::OpaquePointer v2 = sub_1000F4510(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    Swift::OpaquePointer v2 = sub_1000F4510((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_1000F42D8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = sub_10024E850();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_1000F444C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_10024F340();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_10024F730();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)sub_10024F660();
  __break(1u);
  return result;
}

void *sub_1000F444C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100019524(&qword_100309130);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000F44B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_10024E8A0();
    sub_1000F50B0(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = sub_10024E870();
    sub_1000F50B0(v3);
    return v4 | 8;
  }
}

char *sub_1000F4510(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100019524(&qword_100309130);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100038774(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000F45E8(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1000F45E8(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_10024F730();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

unsigned char **sub_1000F46C0(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1000F46D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F4784(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v13 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v13;
  uint64_t v14 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v14;
  uint64_t v15 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v15;
  uint64_t v16 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v16;
  uint64_t v17 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v17;
  uint64_t v18 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v18;
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000F4930(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(unsigned char *)(a1 + 177) = *((unsigned char *)a2 + 177);
  *(void *)(a1 + 184) = a2[23];
  *(void *)(a1 + 192) = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[25];
  *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
  *(void *)(a1 + 200) = v6;
  *(void *)(a1 + 216) = a2[27];
  *(void *)(a1 + 224) = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = a2[34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = a2[37];
  *(void *)(a1 + 304) = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 312) = *((unsigned char *)a2 + 312);
  return a1;
}

void *sub_1000F4BB8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x139uLL);
}

uint64_t sub_1000F4BC0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  uint64_t v11 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v12 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  return a1;
}

uint64_t sub_1000F4D38(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 313))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000F4D8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 312) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 313) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 313) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

void type metadata accessor for AppleSpecificHeaders()
{
}

void type metadata accessor for ConnectionType()
{
}

unsigned char *sub_1000F4E50(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000F4EECLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for CachePolicy()
{
}

unint64_t sub_1000F4F24()
{
  unint64_t result = qword_100310280;
  if (!qword_100310280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310280);
  }
  return result;
}

unint64_t sub_1000F4F74()
{
  unint64_t result = qword_100310288;
  if (!qword_100310288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310288);
  }
  return result;
}

unint64_t sub_1000F4FC0()
{
  return sub_10014ED68(0, 1, v0);
}

uint64_t sub_1000F4FDC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F4FF4()
{
  return sub_10024FA60();
}

uint64_t sub_1000F5030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F3770(a1, v2, 0xD000000000000017, a2 | 0x8000000000000000);
}

uint64_t sub_1000F5080@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1000F3770(a1, v3, a2, a3 | 0x8000000000000000);
}

uint64_t sub_1000F5098()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1000F50B0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_1000F50DC()
{
  return sub_10024F130();
}

void sub_1000F50FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10024E2B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100051014();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchQoS.QoSClass.default(_:), v4);
  uint64_t v8 = (void *)sub_10024EED0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  MultiThreadedEventLoopGroup.shutdownGracefully(queue:_:)(v8, a1, a2);
}

uint64_t sub_1000F522C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_errorRetain();
  }
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ServerError(uint64_t a1)
{
  return sub_1000F525C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1000F525C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_errorRelease();
  }
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s25ASOctaneSupportXPCService11ServerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000F522C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ServerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000F522C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000F525C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ServerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000F525C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000F53EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000F5404(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ServerError()
{
  return &type metadata for ServerError;
}

uint64_t sub_1000F542C()
{
  return (*(uint64_t (**)(void))(*v0 + 248))(v0[5]);
}

uint64_t sub_1000F5454()
{
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  sub_10024E800(v3);
  v4._uint64_t countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v4);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1000F54D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sysconf(58);
  if (v8 >= 3) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = v8;
  }
  type metadata accessor for MultiThreadedEventLoopGroup();
  *(void *)(v4 + 16) = sub_10014D30C(v9, (uint64_t)sub_10014D2F4, 0);
  *(void *)(v4 + 40) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = (_DWORD *)swift_slowAlloc();
  *(void *)(v10 + 16) = v11;
  *uint64_t v11 = 0;
  *(unsigned char *)(v4 + 56) = 0;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = v10;
  return v4;
}

void sub_1000F5594()
{
  uint64_t v2 = v1;
  if ((*(unsigned char *)(v0 + 56) & 1) == 0)
  {
    uint64_t v3 = v0;
    uint64_t v4 = *(void *)(v0 + 48);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
    uint64_t v5 = (void *)swift_retain();
    sub_1000F6338(v5);
    sub_10008C918();
    sub_100163C84(256);
    sub_100163B44(0x40000FFFFLL, 1);
    swift_endAccess();
    sub_10008C918();
    sub_100163B44(0x100000006, 1);
    swift_endAccess();
    swift_retain();
    uint64_t v6 = ServerBootstrap.childChannelInitializer(_:)((uint64_t)sub_1000F63D0, v0);
    swift_release();
    swift_release();
    uint64_t v8 = *(void *)(v0 + 24);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v9 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    sub_100163E00(v6, v8, v7, v9);
    sub_1001FAF90();
    if (v2)
    {
      swift_release();
      uint64_t v11 = sub_1000F5454();
      uint64_t v13 = v12;
      sub_1000F6248();
      swift_allocError();
      *(void *)uint64_t v14 = v11;
      *(void *)(v14 + 8) = v13;
      *(unsigned char *)(v14 + 16) = 0;
      swift_willThrow();
      swift_errorRelease();
    }
    else
    {
      uint64_t v15 = v10;
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(ObjectType, v15);
      if ((~v17 & 0xF000000000000007) != 0)
      {
        uint64_t v18 = v17;
        uint64_t v21 = SocketAddress.port.getter(v17);
        char v20 = v19;
        sub_10002F2A0(v18);
        if ((v20 & 1) == 0)
        {
          *(void *)(v3 + 40) = v21;
          sub_1000F542C();
        }
      }
      *(unsigned char *)(v3 + 56) = 1;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
      (*(void (**)(uint64_t, uint64_t))(v15 + 24))(ObjectType, v15);
      sub_1001FB10C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/Server.swift", 99, 2, 81);
      swift_unknownObjectRelease();
      swift_release();
    }
    swift_release();
  }
}

uint64_t sub_1000F5834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  ChannelPipeline.configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)(1, 0x8000000000000000, 1, 0, 0, 0, 1);
  swift_release();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a3;
  void v7[3] = a1;
  _OWORD v7[4] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1001B7D9C((uint64_t)sub_1000F6418, (uint64_t)v7);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1000F5924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for HTTPHandler();
  swift_allocObject();
  *(void *)(sub_1001B7E98() + 136) = &off_1002E4938;
  swift_unknownObjectWeakAssign();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(ObjectType, a4);
  uint64_t v7 = swift_retain();
  sub_1000F65DC(v7, 0, 0, 1, 0x8000000000000000, v6);
  swift_release();
  swift_release();
  return swift_release_n();
}

void sub_1000F59F4()
{
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    uint64_t v2 = v0;
    sub_1000F5AD8();
    if (v1)
    {
      sub_1000F6248();
      swift_allocError();
      *(void *)uint64_t v3 = v1;
      *(void *)(v3 + 8) = 0;
      *(unsigned char *)(v3 + 16) = 1;
      swift_willThrow();
      uint64_t v4 = *(os_unfair_lock_s **)(*(void *)(v0 + 48) + 16);
      swift_retain();
      os_unfair_lock_lock(v4);
      *(unsigned char *)(v2 + 56) = 0;
      os_unfair_lock_unlock(v4);
      swift_release();
    }
    else
    {
      uint64_t v5 = *(os_unfair_lock_s **)(*(void *)(v0 + 48) + 16);
      swift_retain();
      os_unfair_lock_lock(v5);
      *(unsigned char *)(v0 + 56) = 0;
      os_unfair_lock_unlock(v5);
      swift_release();
    }
  }
}

uint64_t sub_1000F5AD8()
{
  sub_10024E2A0();
  __chkstk_darwin();
  if (static MultiThreadedEventLoopGroup.currentEventLoop.getter())
  {
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
  }
  else
  {
    type metadata accessor for Lock();
    swift_allocObject();
    uint64_t v0 = Lock.init()();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = 0;
    aBlock[4] = debugOnly(_:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018758;
    aBlock[3] = &unk_1002E4970;
    _Block_copy(aBlock);
    aBlock[7] = &_swiftEmptyArrayStorage;
    sub_100029BC0();
    sub_100019524(&qword_100309168);
    sub_100029C10();
    sub_10024F280();
    sub_10024E380();
    swift_allocObject();
    uint64_t v2 = sub_10024E360();
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = v0;
    v3[3] = v1;
    void v3[4] = v2;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000F50FC((uint64_t)sub_1000F632C, (uint64_t)v3);
    swift_release();
    sub_10024E350();
    Lock.lock()();
    swift_beginAccess();
    if (*(void *)(v1 + 16))
    {
      swift_errorRetain();
      swift_willThrow();
    }
    Lock.unlock()();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000F5DA0(void *a1)
{
  if (qword_100308D70 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10015A5F4(a1, 0, 0, 0, 0);
  return swift_release();
}

uint64_t sub_1000F6098()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1000F60C8()
{
  sub_1000F6098();
  return _swift_deallocClassInstance(v0, 57, 7);
}

uint64_t type metadata accessor for Server()
{
  return self;
}

uint64_t sub_1000F6120(uint64_t *a1)
{
  sub_10015973C(a1, (uint64_t)&v4);
  swift_getObjectType();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v2 = v1;
  sub_1000F61C8(&v4);
  return v2;
}

uint64_t sub_1000F61B0(uint64_t *a1)
{
  return sub_1000F6120(a1);
}

void *sub_1000F61C8(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  swift_bridgeObjectRelease();
  swift_release();
  sub_100045868(v2, v3, v4);
  return a1;
}

unint64_t sub_1000F6248()
{
  unint64_t result = qword_1003103D8;
  if (!qword_1003103D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003103D8);
  }
  return result;
}

uint64_t sub_1000F6294()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F62CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F62DC()
{
  return swift_release();
}

uint64_t sub_1000F62E4()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F632C(uint64_t a1)
{
  return sub_1001712AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

__objc2_class *sub_1000F6338(void *a1)
{
  unint64_t result = (__objc2_class *)object_getClass(a1);
  if (result != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
    && result != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
    || a1 == 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for ServerBootstrap();
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = (void *)swift_retain_n();
    unint64_t result = (__objc2_class *)sub_1000F6424(v6, a1, &protocol witness table for MultiThreadedEventLoopGroup, v5);
    if (result)
    {
      uint64_t v7 = result;
      swift_release();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F63D0(uint64_t a1, uint64_t a2)
{
  return sub_1000F5834(a1, a2, v2);
}

uint64_t sub_1000F63D8()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F6418(uint64_t a1)
{
  return sub_1000F5924(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000F6424(id a1, void *a2, char **a3, uint64_t a4)
{
  if (a2)
  {
    id v7 = a2;
  }
  else
  {
    swift_unknownObjectRetain();
    a3 = &protocol witness table for MultiThreadedEventLoopGroup;
    id v7 = a1;
  }
  Class = (__objc2_class *)object_getClass(a1);
  BOOL v10 = Class != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup
     && Class != _TtC25ASOctaneSupportXPCService19SelectableEventLoop
     || a1 == 0;
  if (v10
    || ((uint64_t v11 = (__objc2_class *)object_getClass(v7),
         v11 != _TtC25ASOctaneSupportXPCService27MultiThreadedEventLoopGroup)
      ? (BOOL v12 = v11 == _TtC25ASOctaneSupportXPCService19SelectableEventLoop)
      : (BOOL v12 = 1),
        v12 ? (BOOL v13 = v7 == 0) : (BOOL v13 = 1),
        v13))
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(a4 + 16) = a1;
    *(void *)(a4 + 24) = &protocol witness table for MultiThreadedEventLoopGroup;
    *(void *)(a4 + 32) = v7;
    *(void *)(a4 + 40) = a3;
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    *(void *)(a4 + 80) = sub_100035E7C(0, 2, 0, _swiftEmptyArrayStorage);
    *(void *)(a4 + 88) = sub_100035E7C(0, 2, 0, _swiftEmptyArrayStorage);
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    swift_beginAccess();
    sub_100163B44(0x100000006, 1);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  return a4;
}

uint64_t sub_1000F65DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a6 + 56);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(ObjectType, v12))
  {
    uint64_t v14 = sub_1000F6994(a1, a2, a3, a4, a5, a6, (uint64_t)sub_100200CF0);
    char v16 = v15 & 1;
    LOBYTE(v29) = v15 & 1;
    EventLoop.makeCompletedFuture<A>(_:)((uint64_t)&v28, ObjectType, (uint64_t)&type metadata for ()[8], v12, v17, v18, v19, v20, v25, v26, v14, v29, v30, v31, v32, v33, v34, v35, v36,
      v37);
    uint64_t v22 = v21;
    sub_10003C3F0(v14, v16);
  }
  else
  {
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = a6;
    v23[3] = a1;
    void v23[4] = &off_1002EDD70;
    v23[5] = a2;
    void v23[6] = a3;
    v23[7] = a4;
    v23[8] = a5;
    char v27 = *(uint64_t (**)(uint64_t (*)(), void *, char *, uint64_t, uint64_t))(v12 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_10007D98C(a4, a5);
    uint64_t v22 = v27(sub_1000F6784, v23, &type metadata for ()[8], ObjectType, v12);
    swift_release();
  }
  return v22;
}

uint64_t sub_1000F6784()
{
  return sub_1000B73E8();
}

uint64_t sub_1000F679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a6 + 56);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(ObjectType, v12))
  {
    uint64_t v14 = sub_1000F6994(a1, a2, a3, a4, a5, a6, (uint64_t)sub_100200CF0);
    char v16 = v15 & 1;
    LOBYTE(v29) = v15 & 1;
    EventLoop.makeCompletedFuture<A>(_:)((uint64_t)&v28, ObjectType, (uint64_t)&type metadata for ()[8], v12, v17, v18, v19, v20, v25, v26, v14, v29, v30, v31, v32, v33, v34, v35, v36,
      v37);
    uint64_t v22 = v21;
    sub_10003C3F0(v14, v16);
  }
  else
  {
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = a6;
    v23[3] = a1;
    void v23[4] = &off_1002E9D40;
    v23[5] = a2;
    void v23[6] = a3;
    v23[7] = a4;
    v23[8] = a5;
    char v27 = *(uint64_t (**)(uint64_t (*)(), void *, char *, uint64_t, uint64_t))(v12 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_10007D98C(a4, a5);
    uint64_t v22 = v27(sub_1000F6784, v23, &type metadata for ()[8], ObjectType, v12);
    swift_release();
  }
  return v22;
}

uint64_t sub_1000F6944()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10007D954(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000F6994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_getObjectType();
  uint64_t result = sub_1000F6E88((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 198);
  if (*(unsigned char *)(a6 + 40) == 1)
  {
    sub_10002F0C8();
    uint64_t v14 = swift_allocError();
    sub_1000F6F3C(v14, v15);
    return v7;
  }
  if (!(a5 >> 62))
  {
    sub_1000F6E88((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 248);
    if (*(void *)(a6 + 16))
    {
      sub_1000F6EA4();
      swift_retain();
      if (a7)
      {
        do
        {
          uint64_t v19 = *(void *)(a6 + 24);
          if (v19 && a7 == v19) {
            goto LABEL_31;
          }
          uint64_t v7 = ChannelHandlerContext.handler.getter();
          swift_unknownObjectRelease();
          if (v7 == a4)
          {
            sub_1000F6F24();
            sub_1000F6E60((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Serve"
                                   "r/SwiftNIO/ChannelPipeline.swift");
            if (*(unsigned char *)(a6 + 40) == 1)
            {
LABEL_45:
              sub_10002F0C8();
              uint64_t v25 = swift_allocError();
              sub_1000F6F3C(v25, v26);
              swift_release();
              swift_release();
              sub_1000F6F24();
              return v7;
            }
            if (!a3)
            {
              sub_1000AEE40();
              sub_1000F6F54();
            }
            type metadata accessor for ChannelHandlerContext();
            sub_1000F6F60();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v29 = sub_1000F6EE8();
            v30(v29);
            sub_1000AEC28();
LABEL_52:
            sub_1000AEEF0();
            swift_release();
            swift_release();
            swift_release();
            sub_1000F6F24();
            return 0;
          }
          uint64_t v21 = *(void *)(a7 + 16);
          swift_retain();
          swift_release();
          a7 = v21;
        }
        while (v21);
      }
LABEL_32:
      sub_1000F6F24();
      goto LABEL_33;
    }
LABEL_27:
    sub_10007D98C(a4, a5);
    swift_retain();
LABEL_33:
    sub_1000B5AB0();
    uint64_t v7 = swift_allocError();
    *uint64_t v22 = 1;
    swift_release();
    sub_1000F6F24();
    return v7;
  }
  if (a5 >> 62 == 1)
  {
    sub_1000F6E88((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 248);
    if (*(void *)(a6 + 16))
    {
      sub_1000F6EA4();
      swift_retain();
      if (a7)
      {
        while (1)
        {
          uint64_t v16 = *(void *)(a6 + 24);
          if (v16 && a7 == v16) {
            break;
          }
          uint64_t v7 = ChannelHandlerContext.handler.getter();
          swift_unknownObjectRelease();
          if (v7 == a4)
          {
            sub_1000F6F24();
            sub_1000F6E60((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Serve"
                                   "r/SwiftNIO/ChannelPipeline.swift");
            if (*(unsigned char *)(a6 + 40) == 1) {
              goto LABEL_45;
            }
            if (!a3)
            {
              sub_1000AEE40();
              sub_1000F6F54();
            }
            type metadata accessor for ChannelHandlerContext();
            sub_1000F6F60();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v27 = sub_1000F6EE8();
            v28(v27);
            sub_1000AEB1C();
            goto LABEL_52;
          }
          uint64_t v18 = *(void *)(a7 + 16);
          swift_retain();
          swift_release();
          a7 = v18;
          if (!v18) {
            goto LABEL_32;
          }
        }
LABEL_31:
        swift_release();
        goto LABEL_32;
      }
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  if (a4 | a5 ^ 0x8000000000000000)
  {
    if (*(void *)(a6 + 24))
    {
      sub_1000F6E60((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/Swif"
                             "tNIO/ChannelPipeline.swift");
      swift_retain();
      swift_retain();
      if (!a3)
      {
        sub_1000AEE40();
        sub_1000F6F54();
      }
      type metadata accessor for ChannelHandlerContext();
      sub_1000F6F60();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v24 = sub_1000F6F08();
      ((void (*)(uint64_t))a7)(v24);
      sub_1000AEC28();
LABEL_38:
      sub_1000AEEF0();
      swift_release();
      swift_release();
      swift_release();
      return 0;
    }
  }
  else
  {
    if (*(void *)(a6 + 16))
    {
      sub_1000F6E60((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/Swif"
                             "tNIO/ChannelPipeline.swift");
      swift_retain();
      swift_retain();
      if (!a3)
      {
        sub_1000AEE40();
        sub_1000F6F54();
      }
      type metadata accessor for ChannelHandlerContext();
      sub_1000F6F60();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v23 = sub_1000F6F08();
      ((void (*)(uint64_t))a7)(v23);
      sub_1000AEB1C();
      goto LABEL_38;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F6E60(uint64_t a1)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 280, v1, v2);
}

uint64_t sub_1000F6E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, a2, a3, a4, v4, v5);
}

uint64_t sub_1000F6EA4()
{
  sub_10007D98C(v1, v0);
  sub_10007D98C(v1, v0);
  return swift_retain();
}

uint64_t sub_1000F6EE8()
{
  return v0;
}

uint64_t sub_1000F6F08()
{
  return v0;
}

uint64_t sub_1000F6F24()
{
  return sub_10007D954(v1, v0);
}

void sub_1000F6F3C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 2;
  *(unsigned char *)(a2 + 8) = 3;
}

uint64_t sub_1000F6F60()
{
  return swift_allocObject();
}

uint64_t sub_1000F6F78(uint64_t a1)
{
  type metadata accessor for InAppCheckDownloadQueueCountResponse();
  swift_allocObject();
  uint64_t v2 = sub_1000CC340();
  *(unsigned char *)(v2 + 24) = 2;
  *(void *)(v2 + 48) = _swiftEmptyArrayStorage;
  swift_retain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(unsigned char *)(v2 + 40) = 0;
  swift_release();
  return v2;
}

uint64_t type metadata accessor for InAppCheckDownloadQueueCountResponse()
{
  return self;
}

uint64_t sub_1000F7018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = 1701736270;
  uint64_t v5 = 808463920;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    switch(*(unsigned char *)(a1 + 57))
    {
      case 1:
        uint64_t v6 = 0xE400000000000000;
        swift_bridgeObjectRelease();
        uint64_t v24 = 0;
        char v23 = 0;
        break;
      default:
        char v8 = sub_10024FA60();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v8)
        {
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_100087E08(v7, v6);
        char v23 = v9 & 1;
        uint64_t v5 = v7;
        break;
    }
  }
  else
  {
LABEL_6:
    uint64_t v24 = 0;
    char v23 = 0;
    uint64_t v6 = 0xE400000000000000;
  }
  unint64_t v10 = 0xE400000000000000;
  uint64_t v25 = v5;
  switch(*(unsigned char *)(a1 + 57))
  {
    case 1:
      unint64_t v10 = 0xE90000000000006CLL;
      uint64_t v4 = 0x6169725465657246;
      break;
    case 2:
      uint64_t v4 = 0x756F597341796150;
      unint64_t v10 = 0xEA00000000006F47;
      break;
    case 3:
      uint64_t v4 = 0x6F72467055796150;
      unint64_t v10 = 0xEA0000000000746ELL;
      break;
    default:
      break;
  }
  uint64_t v26 = v4;
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 48);
  int v13 = *(unsigned __int8 *)(a1 + 56);
  if (*(__objc2_class **)a1 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription10AdHocOffer)
  {
    uint64_t v15 = *(void *)(a1 + 96);
    uint64_t v16 = *(void *)(a1 + 104);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v19 = 0xEA00000000007265;
    uint64_t v18 = 0x66664F636F686441;
  }
  else
  {
    uint64_t v14 = *(__objc2_class **)a1;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    BOOL v17 = v14 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription17IntroductoryOffer;
    if (v14 == _TtCC25ASOctaneSupportXPCService18OctaneSubscription17IntroductoryOffer) {
      uint64_t v18 = 0x66664F6F72746E49;
    }
    else {
      uint64_t v18 = 0;
    }
    if (v17) {
      unint64_t v19 = 0xEA00000000007265;
    }
    else {
      unint64_t v19 = 0;
    }
  }
  if (v13) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = v12;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v24;
  *(unsigned char *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v11;
  *(void *)(a2 + 96) = v20;
  *(unsigned char *)(a2 + 104) = 0;
  return result;
}

uint64_t sub_1000F7384(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D80C8;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000F73D4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6563697270;
      break;
    case 3:
      unint64_t result = 0x69642D6563697270;
      break;
    case 4:
      unint64_t result = 0x6570795465646F6DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x726550664F6D756ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000F74BC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6563697270;
      break;
    case 3:
      unint64_t result = 0x69642D6563697270;
      break;
    case 4:
      unint64_t result = 0x6570795465646F6DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x726550664F6D756ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F75A4(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100310588);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  char v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1000F7CA0();
  sub_10024FD40();
  v11[15] = 0;
  sub_100052BD4();
  if (!v1)
  {
    v11[14] = 1;
    sub_100052BD4();
    v11[13] = 2;
    sub_10024F8F0();
    v11[12] = 3;
    sub_100052BD4();
    v11[11] = 4;
    sub_100052BD4();
    v11[10] = 5;
    sub_100052BD4();
    v11[9] = 6;
    sub_10024F900();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1000F7770@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_100310578);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1000F7CA0();
  sub_10024FD20();
  if (v2)
  {
    sub_1000F8284();
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v50 = 0;
    uint64_t v12 = sub_1000F8250();
    uint64_t v14 = v13;
    char v49 = 1;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1000F8250();
    uint64_t v42 = v15;
    uint64_t v43 = v14;
    char v48 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10024F7E0();
    int v39 = v17;
    uint64_t v40 = v16;
    char v47 = 3;
    uint64_t v18 = sub_1000F8250();
    uint64_t v20 = v19;
    uint64_t v37 = v18;
    unint64_t v38 = a2;
    char v46 = 4;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000F8250();
    uint64_t v23 = v22;
    uint64_t v35 = v21;
    uint64_t v36 = v12;
    char v45 = 5;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1000F8250();
    uint64_t v26 = v25;
    uint64_t v34 = v24;
    char v44 = 6;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10024F7F0();
    uint64_t v28 = v11;
    char v30 = v29;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v5);
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000F826C();
    uint64_t v31 = v43;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v33 = v38;
    *unint64_t v38 = v36;
    v33[1] = v31;
    v33[2] = v41;
    v33[3] = v7 + 8;
    v33[4] = v40;
    *((unsigned char *)v33 + 40) = v39 & 1;
    v33[6] = v37;
    v33[7] = v20;
    v33[8] = v35;
    v33[9] = v23;
    v33[10] = v34;
    v33[11] = v26;
    v33[12] = v27;
    *((unsigned char *)v33 + 104) = v30 & 1;
  }
  return result;
}

uint64_t sub_1000F7B14(char *a1, char *a2)
{
  return sub_1000F8780(*a1, *a2);
}

Swift::Int sub_1000F7B20()
{
  return sub_1001D36D4(*v0);
}

uint64_t sub_1000F7B28(uint64_t a1)
{
  return sub_1000D06E0(a1, *v1);
}

Swift::Int sub_1000F7B30(uint64_t a1)
{
  return sub_1000D2A80(a1, *v1);
}

uint64_t sub_1000F7B38@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000F7384(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000F7B68@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000F73D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000F7B94()
{
  return sub_1000F74BC(*v0);
}

uint64_t sub_1000F7B9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000F73D0();
  *a1 = result;
  return result;
}

uint64_t sub_1000F7BC4(uint64_t a1)
{
  unint64_t v2 = sub_1000F7CA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F7C00(uint64_t a1)
{
  unint64_t v2 = sub_1000F7CA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1000F7C3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1000F7770(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x69uLL);
  }
  return result;
}

uint64_t sub_1000F7C88(void *a1)
{
  return sub_1000F75A4(a1);
}

unint64_t sub_1000F7CA0()
{
  unint64_t result = qword_100310580;
  if (!qword_100310580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310580);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Discount.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F7DB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Discount.CodingKeys()
{
  return &type metadata for Discount.CodingKeys;
}

uint64_t destroy for Discount()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Discount(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Discount(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v5;
  return a1;
}

void *initializeWithTake for Discount(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for Discount(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for Discount(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 105))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Discount(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Discount()
{
  return &type metadata for Discount;
}

unint64_t sub_1000F814C()
{
  unint64_t result = qword_100310590;
  if (!qword_100310590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310590);
  }
  return result;
}

unint64_t sub_1000F819C()
{
  unint64_t result = qword_100310598;
  if (!qword_100310598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310598);
  }
  return result;
}

unint64_t sub_1000F81EC()
{
  unint64_t result = qword_1003105A0;
  if (!qword_1003105A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003105A0);
  }
  return result;
}

uint64_t sub_1000F8238()
{
  return v0;
}

uint64_t sub_1000F8250()
{
  return sub_10024F7C0();
}

uint64_t sub_1000F826C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F8298()
{
  return swift_bridgeObjectRelease();
}

BOOL static ChannelOptions.Types.SocketOption.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1000F82BC(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0x2E746E756F636361;
  }
  else {
    unint64_t v4 = 0xD00000000000001BLL;
  }
  if (v3) {
    unint64_t v5 = 0x8000000100279120;
  }
  else {
    unint64_t v5 = 0xEF676E696C6C6962;
  }
  if (a2) {
    unint64_t v6 = 0x2E746E756F636361;
  }
  else {
    unint64_t v6 = 0xD00000000000001BLL;
  }
  if (a2) {
    unint64_t v7 = 0xEF676E696C6C6962;
  }
  else {
    unint64_t v7 = 0x8000000100279120;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F8360(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEA0000000000656CLL;
  unint64_t v4 = 0x62616D75736E6F43;
  uint64_t v5 = a1;
  unint64_t v6 = 0x62616D75736E6F43;
  unint64_t v7 = 0xEA0000000000656CLL;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x75736E6F436E6F4ELL;
      unint64_t v7 = 0xED0000656C62616DLL;
      break;
    case 2:
      unint64_t v6 = 0xD000000000000017;
      unint64_t v7 = 0x8000000100278110;
      break;
    case 3:
      unint64_t v7 = 0x8000000100278130;
      unint64_t v6 = 0xD000000000000015;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v4 = 0x75736E6F436E6F4ELL;
      unint64_t v3 = 0xED0000656C62616DLL;
      break;
    case 2:
      unint64_t v4 = 0xD000000000000017;
      unint64_t v3 = 0x8000000100278110;
      break;
    case 3:
      unint64_t v3 = 0x8000000100278130;
      unint64_t v4 = 0xD000000000000015;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F84F4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEC00000065636972;
  uint64_t v4 = 0x5079616C70736964;
  uint64_t v5 = a1;
  unint64_t v6 = 0x5079616C70736964;
  unint64_t v7 = 0xEC00000065636972;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x6853796C696D6166;
      unint64_t v7 = 0xEF656C6261657261;
      break;
    case 2:
      unint64_t v6 = 0x6C616E7265746E69;
      unint64_t v7 = 0xEA00000000004449;
      break;
    case 3:
      unint64_t v6 = 0x617A696C61636F6CLL;
      uint64_t v8 = 0x736E6F6974;
      goto LABEL_7;
    case 4:
      unint64_t v6 = 0x49746375646F7270;
      unint64_t v7 = 0xE900000000000044;
      break;
    case 5:
      unint64_t v6 = 0x636E657265666572;
      uint64_t v8 = 0x656D614E65;
LABEL_7:
      unint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    case 6:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v6 = 1701869940;
      break;
    case 7:
      unint64_t v7 = 0x8000000100279BF0;
      unint64_t v6 = sub_1000FC9C8();
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v4 = 0x6853796C696D6166;
      unint64_t v3 = 0xEF656C6261657261;
      break;
    case 2:
      uint64_t v4 = 0x6C616E7265746E69;
      unint64_t v3 = 0xEA00000000004449;
      break;
    case 3:
      uint64_t v4 = 0x617A696C61636F6CLL;
      uint64_t v9 = 0x736E6F6974;
      goto LABEL_16;
    case 4:
      uint64_t v4 = 0x49746375646F7270;
      unint64_t v3 = 0xE900000000000044;
      break;
    case 5:
      uint64_t v4 = 0x636E657265666572;
      uint64_t v9 = 0x656D614E65;
LABEL_16:
      unint64_t v3 = v9 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    case 6:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1701869940;
      break;
    case 7:
      sub_1000FCA20();
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F8780(char a1, char a2)
{
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1701869940;
      break;
    case 2:
      uint64_t v5 = sub_1000FC9E4();
      break;
    case 3:
      uint64_t v5 = sub_1000FC8AC();
      unint64_t v4 = 0xED00000000000000;
      break;
    case 4:
      uint64_t v5 = sub_1000FC988();
      break;
    case 5:
      uint64_t v5 = sub_1000FCA5C();
      break;
    case 6:
      uint64_t v5 = sub_1000FC93C();
      unint64_t v4 = 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE200000000000000;
  uint64_t v7 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v7 = 1701869940;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      sub_1000FC9B8();
      break;
    case 3:
      sub_1000FC8EC();
      unint64_t v6 = 0xED00000000000000;
      break;
    case 4:
      sub_1000FC970();
      break;
    case 5:
      sub_1000FCA34();
      break;
    case 6:
      sub_1000FC920();
      unint64_t v6 = 0xEC00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v7 && v4 == v6) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F88EC(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100087FF8);
}

uint64_t sub_1000F8904(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1001B4784);
}

uint64_t sub_1000F891C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x6449676F6C616964;
  uint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x6449676F6C616964;
  switch(v5)
  {
    case 1:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t v6 = 0x497463656A627573;
      uint64_t v4 = 0xE900000000000064;
      break;
    case 4:
      sub_1000DD97C();
      uint64_t v4 = v7 | 1;
      break;
    case 5:
      sub_1000DD97C();
      uint64_t v4 = v8 | 8;
      break;
    case 6:
      uint64_t v6 = 0x54746E657645746DLL;
      uint64_t v4 = 0xEB00000000656D69;
      break;
    default:
      break;
  }
  uint64_t v9 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v9 = 0xE700000000000000;
      uint64_t v3 = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t v9 = 0xE700000000000000;
      uint64_t v3 = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t v3 = 0x497463656A627573;
      uint64_t v9 = 0xE900000000000064;
      break;
    case 4:
      sub_1000DD97C();
      uint64_t v9 = v10 | 1;
      break;
    case 5:
      sub_1000DD97C();
      uint64_t v9 = v11 | 8;
      break;
    case 6:
      uint64_t v3 = 0x54746E657645746DLL;
      uint64_t v9 = 0xEB00000000656D69;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v9) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F8B58(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1001503D4);
}

uint64_t sub_1000F8B74(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100093A3C);
}

uint64_t sub_1000F8B8C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xED00006E6F697372;
  unint64_t v4 = 0x65762D65726F7473;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0xD000000000000018;
    }
    else {
      unint64_t v6 = 0xD000000000000015;
    }
    if (v5 == 1) {
      unint64_t v7 = 0x80000001002796A0;
    }
    else {
      unint64_t v7 = 0x80000001002796C0;
    }
  }
  else
  {
    unint64_t v6 = 0x65762D65726F7473;
    unint64_t v7 = 0xED00006E6F697372;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v4 = 0xD000000000000018;
    }
    else {
      unint64_t v4 = 0xD000000000000015;
    }
    if (a2 == 1) {
      unint64_t v3 = 0x80000001002796A0;
    }
    else {
      unint64_t v3 = 0x80000001002796C0;
    }
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F8C8C()
{
  sub_1000FC818();
  switch(v3)
  {
    case 1:
      sub_1000FC9A0();
      break;
    case 2:
      sub_1000FC800();
      break;
    case 3:
      sub_1000FC7B0();
      break;
    case 4:
      sub_1000FC8CC();
      break;
    case 5:
      unint64_t v0 = 0xE700000000000000;
      break;
    case 6:
      unint64_t v0 = 0x8000000100278BE0;
      break;
    case 7:
      unint64_t v0 = 0x8000000100278C00;
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v8)
  {
    case 1:
      sub_1000FC958();
      break;
    case 2:
      sub_1000FC7E8();
      break;
    case 3:
      sub_1000FC794();
      break;
    case 4:
      sub_1000FC88C();
      break;
    case 5:
      unint64_t v1 = 0xE700000000000000;
      unint64_t v5 = 0x65726F4D736168;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v1 = (v7 - 32) | 0x8000000000000000;
      break;
    case 7:
      unint64_t v1 = (v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F8E40(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xED0000746E65746ELL;
  uint64_t v4 = 0x6F43646574736F68;
  uint64_t v5 = a1;
  uint64_t v6 = 0x6F43646574736F68;
  unint64_t v7 = 0xED0000746E65746ELL;
  switch(v5)
  {
    case 1:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v6 = 1684957547;
      break;
    case 2:
      uint64_t v6 = 0x66664F636F486461;
      unint64_t v7 = 0xEB00000000737265;
      break;
    case 3:
      uint64_t v6 = sub_1000FC85C();
      break;
    case 4:
      uint64_t v6 = 0x6C61636F4C756369;
      unint64_t v7 = 0xE900000000000065;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1684957547;
      break;
    case 2:
      sub_1000FC9F8();
      unint64_t v3 = 0xEB00000000737265;
      break;
    case 3:
      sub_1000FC82C();
      break;
    case 4:
      uint64_t v4 = 0x6C61636F4C756369;
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F8FD8()
{
  sub_1000FC818();
  switch(v3)
  {
    case 1:
      sub_1000FC800();
      break;
    case 2:
      sub_1000FC7B0();
      break;
    case 3:
      unint64_t v0 = 0x8000000100278790;
      sub_1000FC9C8();
      break;
    case 4:
      sub_1000FC9A0();
      break;
    case 5:
      unint64_t v0 = 0xE500000000000000;
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v6)
  {
    case 1:
      sub_1000FC7E8();
      break;
    case 2:
      sub_1000FC794();
      break;
    case 3:
      sub_1000FC90C();
      break;
    case 4:
      sub_1000FC958();
      break;
    case 5:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v5 = 0x74696D696CLL;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F911C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6C65636E6163;
  }
  else {
    uint64_t v4 = 7041889;
  }
  if (v3) {
    unint64_t v5 = 0xE300000000000000;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x6C65636E6163;
  }
  else {
    uint64_t v6 = 7041889;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F91A4(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x646E6F636573;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x646E6F636573;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x6574756E696DLL;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1920298856;
      break;
    case 3:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 7954788;
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1801807223;
      break;
    case 5:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x68746E6F6DLL;
      break;
    case 6:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1918985593;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x6574756E696DLL;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1920298856;
      break;
    case 3:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 7954788;
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1801807223;
      break;
    case 5:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x68746E6F6DLL;
      break;
    case 6:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1918985593;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9358(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x736E6F6974706FLL;
  }
  else {
    uint64_t v4 = 1701869940;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x736E6F6974706FLL;
  }
  else {
    uint64_t v6 = 1701869940;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F93E4(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD000000000000010;
  }
  else {
    unint64_t v4 = 1701667182;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0x8000000100279BA0;
  }
  if (a2) {
    unint64_t v6 = 0xD000000000000010;
  }
  else {
    unint64_t v6 = 1701667182;
  }
  if (a2) {
    unint64_t v7 = 0x8000000100279BA0;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9474(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x73676E6970;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x73676E6970;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x6F44656C676E696ALL;
      unint64_t v4 = 0xED00006570795463;
      break;
    case 2:
      unint64_t v4 = 0x80000001002789C0;
      unint64_t v6 = 0xD000000000000019;
      break;
    case 3:
      unint64_t v6 = 0x6341656C676E696ALL;
      uint64_t v7 = 1852795252;
      goto LABEL_8;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1684632420;
      break;
    case 5:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x7473696C2D707061;
      break;
    case 6:
      unint64_t v6 = 0x2D74706965636572;
      uint64_t v7 = 1635017060;
LABEL_8:
      unint64_t v4 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6F44656C676E696ALL;
      unint64_t v8 = 0xED00006570795463;
      break;
    case 2:
      unint64_t v8 = 0x80000001002789C0;
      unint64_t v3 = 0xD000000000000019;
      break;
    case 3:
      unint64_t v3 = 0x6341656C676E696ALL;
      uint64_t v9 = 1852795252;
      goto LABEL_16;
    case 4:
      unint64_t v8 = 0xE400000000000000;
      unint64_t v3 = 1684632420;
      break;
    case 5:
      unint64_t v8 = 0xE800000000000000;
      unint64_t v3 = 0x7473696C2D707061;
      break;
    case 6:
      unint64_t v3 = 0x2D74706965636572;
      uint64_t v9 = 1635017060;
LABEL_16:
      unint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F96A0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xE900000000000064;
  uint64_t v4 = 0x692D656C646E7562;
  uint64_t v5 = a1;
  uint64_t v6 = 0x692D656C646E7562;
  unint64_t v7 = 0xE900000000000064;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x2D6E6F6973726576;
      unint64_t v7 = 0xEA00000000006469;
      break;
    case 2:
      unint64_t v7 = 0x8000000100278790;
      uint64_t v6 = sub_1000FC9C8();
      break;
    case 3:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v6 = 1684632935;
      break;
    case 4:
      uint64_t v6 = sub_1000FCA48();
      unint64_t v7 = 0xEB0000000063614DLL;
      break;
    case 5:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v6 = 6580598;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v4 = 0x2D6E6F6973726576;
      unint64_t v3 = 0xEA00000000006469;
      break;
    case 2:
      sub_1000FCA20();
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1684632935;
      break;
    case 4:
      sub_1000FCA0C();
      unint64_t v3 = 0xEB0000000063614DLL;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v4 = 6580598;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9854(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100062AE8);
}

uint64_t sub_1000F986C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 6580578;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 6580578;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1936881250;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1684632935;
      break;
    case 3:
      uint64_t v6 = sub_1000FCA48();
      unint64_t v4 = 0xEB0000000063614DLL;
      break;
    case 4:
      uint64_t v6 = 6580598;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1936881250;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1684632935;
      break;
    case 3:
      sub_1000FCA0C();
      unint64_t v7 = 0xEB0000000063614DLL;
      break;
    case 4:
      v3 += 20;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F99B8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD000000000000012;
  }
  else {
    unint64_t v4 = 1634497893;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0x8000000100278850;
  }
  if (a2) {
    unint64_t v6 = 0xD000000000000012;
  }
  else {
    unint64_t v6 = 1634497893;
  }
  if (a2) {
    unint64_t v7 = 0x8000000100278850;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9A48(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 3157554;
  }
  else {
    uint64_t v2 = 3157553;
  }
  if (a2) {
    uint64_t v3 = 3157554;
  }
  else {
    uint64_t v3 = 3157553;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_10024FA60();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1000F9AB0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 1634497893;
  }
  else {
    unint64_t v4 = 0xD000000000000010;
  }
  if (v3) {
    unint64_t v5 = 0x8000000100278820;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  if (a2) {
    unint64_t v6 = 1634497893;
  }
  else {
    unint64_t v6 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0x8000000100278820;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9B40(char a1, char a2)
{
  uint64_t v3 = 1701667182;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x746E6572727563;
    }
    else {
      uint64_t v4 = 0x64656C62616E65;
    }
    unint64_t v5 = 0xE700000000000000;
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v4 = 1701667182;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x746E6572727563;
    }
    else {
      uint64_t v3 = 0x64656C62616E65;
    }
    unint64_t v6 = 0xE700000000000000;
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v4 == v3 && v5 == v6) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9C2C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x7865646E69;
  }
  else {
    uint64_t v4 = 1701869940;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x7865646E69;
  }
  else {
    uint64_t v6 = 1701869940;
  }
  if (a2) {
    unint64_t v7 = 0xE500000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9CB4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x656D614E707061;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x656D614E707061;
  unint64_t v7 = "subscriptionOffersKeyPair";
  unint64_t v8 = "nonRenewingSubscriptions";
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0xD000000000000018;
      uint64_t v9 = "twork";
      goto LABEL_6;
    case 2:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x73746375646F7270;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x73676E6974746573;
      break;
    case 4:
      unint64_t v6 = 0xD000000000000019;
      uint64_t v9 = "riptions";
LABEL_6:
      unint64_t v4 = (unint64_t)v9 | 0x8000000000000000;
      break;
    case 5:
      unint64_t v4 = 0x80000001002790D0;
      unint64_t v6 = sub_1000FC9C8();
      break;
    case 6:
      unint64_t v6 = 0x63696C6F50707061;
      unint64_t v4 = 0xEB00000000736569;
      break;
    case 7:
      unint64_t v6 = 0x6E6F6973726576;
      break;
    default:
      break;
  }
  unint64_t v10 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xD000000000000018;
      uint64_t v11 = v8 - 32;
      goto LABEL_15;
    case 2:
      unint64_t v10 = 0xE800000000000000;
      unint64_t v3 = 0x73746375646F7270;
      break;
    case 3:
      unint64_t v10 = 0xE800000000000000;
      unint64_t v3 = 0x73676E6974746573;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000019;
      uint64_t v11 = v7 - 32;
LABEL_15:
      unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
      break;
    case 5:
      sub_1000FC90C();
      break;
    case 6:
      unint64_t v3 = 0x63696C6F50707061;
      unint64_t v10 = 0xEB00000000736569;
      break;
    case 7:
      unint64_t v3 = 0x6E6F6973726576;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v10) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9F00(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656C646E7562;
  }
  else {
    uint64_t v4 = 1701603686;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x656C646E7562;
  }
  else {
    uint64_t v6 = 1701603686;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000F9F88(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x616B636174537369;
  }
  else {
    uint64_t v4 = 0x6C69626967696C65;
  }
  if (v3) {
    unint64_t v5 = 0xEB00000000797469;
  }
  else {
    unint64_t v5 = 0xEB00000000656C62;
  }
  if (a2) {
    uint64_t v6 = 0x616B636174537369;
  }
  else {
    uint64_t v6 = 0x6C69626967696C65;
  }
  if (a2) {
    unint64_t v7 = 0xEB00000000656C62;
  }
  else {
    unint64_t v7 = 0xEB00000000797469;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA02C(char a1)
{
  unint64_t v3 = 0xE400000000000000;
  switch(a1)
  {
    case 2:
      unint64_t v3 = 0xEA00000000006F47;
      break;
    case 3:
      unint64_t v3 = 0xEA0000000000746ELL;
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v6)
  {
    case 1:
      uint64_t v5 = 1701147238;
      break;
    case 2:
      uint64_t v5 = 0x756F597341796170;
      unint64_t v1 = 0xEA00000000006F47;
      break;
    case 3:
      uint64_t v5 = 0x6F72467055796170;
      unint64_t v1 = 0xEA0000000000746ELL;
      break;
    default:
      break;
  }
  if (v4 == v5 && v3 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA184(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 7824750;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x676E697473697865;
    }
    else {
      uint64_t v5 = 0x64657269707865;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v5 = 7824750;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x676E697473697865;
    }
    else {
      uint64_t v3 = 0x64657269707865;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xE700000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA270(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x626967696C457369;
  }
  else {
    uint64_t v4 = 0x4449726566666FLL;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xEA0000000000656CLL;
  }
  if (a2) {
    uint64_t v6 = 0x626967696C457369;
  }
  else {
    uint64_t v6 = 0x4449726566666FLL;
  }
  if (a2) {
    unint64_t v7 = 0xEA0000000000656CLL;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA308()
{
  unint64_t v1 = 0xEB00000000737265;
  sub_1000FC9F8();
  uint64_t v5 = v4;
  uint64_t v6 = "subscriptionGroupID";
  uint64_t v7 = 0x66664F636F486461;
  unint64_t v8 = 0xEB00000000737265;
  uint64_t v9 = "recurringSubscriptionPeriod";
  unint64_t v10 = "introductoryOffer";
  switch(v5)
  {
    case 1:
      uint64_t v7 = 0x6566664F65646F63;
      unint64_t v8 = 0xEA00000000007372;
      break;
    case 2:
      uint64_t v7 = sub_1000FC85C();
      break;
    case 3:
      uint64_t v7 = 0x6D754E70756F7267;
      unint64_t v8 = 0xEB00000000726562;
      break;
    case 4:
      unint64_t v8 = 0x8000000100278880;
      uint64_t v7 = 0xD000000000000011;
      break;
    case 5:
      uint64_t v7 = 0xD00000000000001BLL;
      uint64_t v11 = "introductoryOffer";
      goto LABEL_8;
    case 6:
      uint64_t v7 = 0xD000000000000013;
      uint64_t v11 = "eIncreaseConsent";
LABEL_8:
      unint64_t v8 = (unint64_t)v11 | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      unint64_t v3 = 0x6566664F65646F63;
      unint64_t v1 = 0xEA00000000007372;
      break;
    case 2:
      sub_1000FC82C();
      break;
    case 3:
      unint64_t v3 = 0x6D754E70756F7267;
      unint64_t v1 = 0xEB00000000726562;
      break;
    case 4:
      unint64_t v1 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v3 = 0xD00000000000001BLL;
      uint64_t v12 = v9 - 32;
      goto LABEL_16;
    case 6:
      unint64_t v3 = 0xD000000000000013;
      uint64_t v12 = v6 - 32;
LABEL_16:
      unint64_t v1 = (unint64_t)v12 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v7 == v3 && v8 == v1) {
    sub_1000FC850();
  }
  else {
    char v0 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1000FA528(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x636E657265666572;
  }
  else {
    uint64_t v4 = 0x4449726566666FLL;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xED0000656D614E65;
  }
  if (a2) {
    uint64_t v6 = 0x636E657265666572;
  }
  else {
    uint64_t v6 = 0x4449726566666FLL;
  }
  if (a2) {
    unint64_t v7 = 0xED0000656D614E65;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA5C8(char a1)
{
  unint64_t v3 = 0xE400000000000000;
  switch(a1)
  {
    case 1:
      sub_1000FC9E4();
      break;
    case 2:
      unint64_t v3 = 0xEE0064657474616DLL;
      break;
    case 3:
      unint64_t v3 = 1701080899;
      goto LABEL_7;
    case 4:
      sub_1000FCA5C();
      break;
    case 5:
      sub_1000FC93C();
LABEL_7:
      unint64_t v3 = v3 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 6:
      unint64_t v3 = 0xE900000000000073;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      break;
    case 8:
      sub_1000FC988();
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE500000000000000;
      sub_1000FC9B8();
      break;
    case 2:
      uint64_t v5 = 0x726F466563697270;
      unint64_t v1 = 0xEE0064657474616DLL;
      break;
    case 3:
      uint64_t v5 = 0x79636E6572727563;
      unint64_t v1 = 1701080899;
      goto LABEL_17;
    case 4:
      sub_1000FCA34();
      break;
    case 5:
      sub_1000FC920();
LABEL_17:
      unint64_t v1 = v1 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 6:
      uint64_t v5 = 0x746E756F63736964;
      unint64_t v1 = 0xE900000000000073;
      break;
    case 7:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v5 = 0x6449726566666FLL;
      break;
    case 8:
      sub_1000FC970();
      break;
    default:
      break;
  }
  if (v4 == v5 && v3 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA7F4(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1000E5EBC);
}

uint64_t sub_1000FA80C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x4C4157454E4552;
  }
  else {
    uint64_t v4 = 0x4553414843525550;
  }
  if (v3) {
    unint64_t v5 = 0xE800000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x4C4157454E4552;
  }
  else {
    uint64_t v6 = 0x4553414843525550;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE800000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA8A0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEA00000000004C41;
  uint64_t v4 = 0x4952545F45455246;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v6 = 0x595F53415F594150;
    }
    else {
      uint64_t v6 = 0x465F50555F594150;
    }
    if (v5 == 1) {
      unint64_t v7 = 0xED00004F475F554FLL;
    }
    else {
      unint64_t v7 = 0xEC000000544E4F52;
    }
  }
  else
  {
    uint64_t v6 = 0x4952545F45455246;
    unint64_t v7 = 0xEA00000000004C41;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v4 = 0x595F53415F594150;
    }
    else {
      uint64_t v4 = 0x465F50555F594150;
    }
    if (a2 == 1) {
      unint64_t v3 = 0xED00004F475F554FLL;
    }
    else {
      unint64_t v3 = 0xEC000000544E4F52;
    }
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FA9C8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x535F594C494D4146;
  }
  else {
    uint64_t v4 = 0x4553414843525550;
  }
  if (v3) {
    unint64_t v5 = 0xE900000000000044;
  }
  else {
    unint64_t v5 = 0xED00004445524148;
  }
  if (a2) {
    uint64_t v6 = 0x535F594C494D4146;
  }
  else {
    uint64_t v6 = 0x4553414843525550;
  }
  if (a2) {
    unint64_t v7 = 0xED00004445524148;
  }
  else {
    unint64_t v7 = 0xE900000000000044;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FAA6C(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100156BF0);
}

uint64_t sub_1000FAA84(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100152BBC);
}

uint64_t sub_1000FAA9C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x4C4452445453;
  }
  else {
    uint64_t v4 = 1363432531;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x4C4452445453;
  }
  else {
    uint64_t v6 = 1363432531;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FAB24(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656C61636F6CLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x52557963696C6F70;
    }
    else {
      uint64_t v5 = 0x65547963696C6F70;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE90000000000004CLL;
    }
    else {
      unint64_t v6 = 0xEA00000000007478;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x656C61636F6CLL;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x52557963696C6F70;
    }
    else {
      uint64_t v3 = 0x65547963696C6F70;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE90000000000004CLL;
    }
    else {
      unint64_t v7 = 0xEA00000000007478;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FAC28(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x73656963696C6F70;
  }
  else {
    uint64_t v4 = 1634497893;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x73656963696C6F70;
  }
  else {
    uint64_t v6 = 1634497893;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FACB4(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6269726373627553;
  }
  else {
    uint64_t v4 = 7954768;
  }
  if (v3) {
    unint64_t v5 = 0xE300000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v6 = 0x6269726373627553;
  }
  else {
    uint64_t v6 = 7954768;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000065;
  }
  else {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FAD44(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1001CC5F8);
}

uint64_t sub_1000FAD5C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000016;
  unint64_t v4 = 0x80000001002790F0;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD000000000000016;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      unint64_t v6 = 7959874;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1869901639;
      break;
    case 3:
      unint64_t v6 = 0x4165636976726553;
      unint64_t v4 = 0xED00006E6F697463;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001002790F0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE300000000000000;
      unint64_t v3 = 7959874;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v3 = 1869901639;
      break;
    case 3:
      unint64_t v3 = 0x4165636976726553;
      unint64_t v7 = 0xED00006E6F697463;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FAEBC(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1001B0324);
}

uint64_t sub_1000FAED4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x737574617473;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x737574617473;
  switch(v5)
  {
    case 1:
      unint64_t v7 = "";
      goto LABEL_4;
    case 2:
      unint64_t v7 = "originalTransactionId";
LABEL_4:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000015;
      break;
    case 3:
      unint64_t v6 = 0xD000000000000011;
      unint64_t v4 = 0x8000000100278930;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v9 = "";
      goto LABEL_9;
    case 2:
      uint64_t v9 = "originalTransactionId";
LABEL_9:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000015;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000011;
      unint64_t v8 = 0x8000000100278930;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB020(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD000000000000010;
  }
  else {
    unint64_t v4 = 0xD00000000000001BLL;
  }
  if (v3) {
    unint64_t v5 = 0x8000000100278950;
  }
  else {
    unint64_t v5 = 0x8000000100278970;
  }
  if (a2) {
    unint64_t v6 = 0xD000000000000010;
  }
  else {
    unint64_t v6 = 0xD00000000000001BLL;
  }
  if (a2) {
    unint64_t v7 = 0x8000000100278970;
  }
  else {
    unint64_t v7 = 0x8000000100278950;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB0BC()
{
  sub_1000FC818();
  switch(v3)
  {
    case 1:
      sub_1000FC7B0();
      break;
    case 2:
      sub_1000FC800();
      break;
    case 3:
      sub_1000FC8CC();
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v6)
  {
    case 1:
      sub_1000FC794();
      break;
    case 2:
      sub_1000FC7E8();
      break;
    case 3:
      sub_1000FC88C();
      break;
    case 4:
      uint64_t v5 = 1635017060;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB1C8(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1001F9D3C);
}

uint64_t sub_1000FB1E0(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_10017A79C);
}

uint64_t sub_1000FB1F8()
{
  sub_1000FC818();
  switch(v3)
  {
    case 1:
      sub_1000FC7B0();
      break;
    case 2:
      sub_1000FC800();
      break;
    case 3:
      unint64_t v0 = 0x8000000100278790;
      sub_1000FC9C8();
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v6)
  {
    case 1:
      sub_1000FC794();
      break;
    case 2:
      sub_1000FC7E8();
      break;
    case 3:
      sub_1000FC90C();
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_1000FB2F4(char a1, char a2)
{
  return qword_1002608E8[a1] == qword_1002608E8[a2];
}

uint64_t sub_1000FB318(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 7959874;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6C65636E6143;
    }
    else {
      uint64_t v5 = 27503;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000;
    }
    else {
      unint64_t v6 = 0xE200000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v5 = 7959874;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6C65636E6143;
    }
    else {
      uint64_t v3 = 27503;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE600000000000000;
    }
    else {
      unint64_t v7 = 0xE200000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB3E4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x7975427070416E69;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x7975427070416E69;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0x8000000100278CD0;
      unint64_t v6 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v6 = 0xD000000000000018;
      unint64_t v7 = "inAppTransactionDone";
      goto LABEL_5;
    case 3:
      unint64_t v6 = 0xD00000000000001BLL;
      unint64_t v7 = "inAppPendingTransactions";
LABEL_5:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0x8000000100278CD0;
      unint64_t v3 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v3 = 0xD000000000000018;
      uint64_t v9 = "inAppTransactionDone";
      goto LABEL_10;
    case 3:
      unint64_t v3 = 0xD00000000000001BLL;
      uint64_t v9 = "inAppPendingTransactions";
LABEL_10:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB540(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_1000CBEC4);
}

uint64_t sub_1000FB558(char a1)
{
  unint64_t v3 = 0xE400000000000000;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE900000000000073;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      break;
    case 5:
      unint64_t v3 = 0xE900000000000074;
      break;
    default:
      break;
  }
  sub_1000FC880();
  switch(v6)
  {
    case 1:
      uint64_t v5 = 0x6D61726150797562;
      unint64_t v1 = 0xE900000000000073;
      break;
    case 2:
      unint64_t v1 = 0xE800000000000000;
      uint64_t v5 = 0x656D614E6D657469;
      break;
    case 3:
      unint64_t v1 = 0xE300000000000000;
      uint64_t v5 = 7107189;
      break;
    case 4:
      unint64_t v1 = 0xE600000000000000;
      uint64_t v5 = 0x746567726174;
      break;
    case 5:
      uint64_t v5 = 0x6567726174627573;
      unint64_t v1 = 0xE900000000000074;
      break;
    default:
      break;
  }
  if (v4 == v5 && v3 == v1) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB720(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 7959874;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 7959874;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x77656E6552;
      break;
    case 2:
      uint64_t v6 = 0x6F6C6E776F646552;
      unint64_t v4 = 0xEA00000000006461;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x65646172677055;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x77656E6552;
      break;
    case 2:
      uint64_t v3 = 0x6F6C6E776F646552;
      unint64_t v7 = 0xEA00000000006461;
      break;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x65646172677055;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_1000FB87C(char a1, char a2)
{
  return qword_100260958[a1] == qword_100260958[a2];
}

uint64_t sub_1000FB8A0(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100147644);
}

uint64_t sub_1000FB8B8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 2036429415;
  }
  else {
    uint64_t v4 = 0x6B63616C62;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v6 = 2036429415;
  }
  else {
    uint64_t v6 = 0x6B63616C62;
  }
  if (a2) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB940(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656772616CLL;
  }
  else {
    uint64_t v4 = 0x6C616D726F6ELL;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x656772616CLL;
  }
  else {
    uint64_t v6 = 0x6C616D726F6ELL;
  }
  if (a2) {
    unint64_t v7 = 0xE500000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FB9CC(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xE90000000000006ELL;
  unint64_t v4 = 0x69614D6563697270;
  uint64_t v5 = a1;
  unint64_t v6 = 0x69614D6563697270;
  unint64_t v7 = 0xE90000000000006ELL;
  switch(v5)
  {
    case 1:
      unint64_t v7 = 0x80000001002799C0;
      unint64_t v6 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v6 = 0x6275536563697270;
      break;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v6 = 0x746C7561666564;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x80000001002799C0;
      unint64_t v4 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v4 = 0x6275536563697270;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x746C7561666564;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1000FC850();
  }
  else {
    char v2 = sub_1000FC7CC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FBB40(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x726564616568;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x65756C6176;
    }
    else {
      uint64_t v5 = 0x7475626972747461;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xEE007473694C6465;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x726564616568;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x65756C6176;
    }
    else {
      uint64_t v3 = 0x7475626972747461;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE500000000000000;
    }
    else {
      unint64_t v7 = 0xEE007473694C6465;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FBC44(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_100098EB0);
}

uint64_t sub_1000FBC5C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x657070616D2D3276;
  }
  else {
    uint64_t v4 = 0x702D6C72752D3276;
  }
  if (v3) {
    unint64_t v5 = 0xEF736E7265747461;
  }
  else {
    unint64_t v5 = 0xEE00736C72752D64;
  }
  if (a2) {
    uint64_t v6 = 0x657070616D2D3276;
  }
  else {
    uint64_t v6 = 0x702D6C72752D3276;
  }
  if (a2) {
    unint64_t v7 = 0xEE00736C72752D64;
  }
  else {
    unint64_t v7 = 0xEF736E7265747461;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1000FC788();
  }
  else {
    char v2 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1000FBD08(uint64_t a1, uint64_t a2)
{
  return sub_1000FBD20(a1, a2, (uint64_t (*)(void))sub_10001D594);
}

uint64_t sub_1000FBD20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    sub_1000FC788();
  }
  else {
    LOBYTE(v5) = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1000FBDA4()
{
  sub_1000FC9B8();
  unint64_t v3 = 0xE500000000000000;
  uint64_t v5 = v4;
  uint64_t v6 = 0x6563697270;
  switch(v5)
  {
    case 1:
      uint64_t v6 = sub_1000FC8AC();
      goto LABEL_5;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v6 = 1702521203;
      break;
    case 3:
      uint64_t v6 = 0x6C662D7465737361;
      unint64_t v3 = 0x73726F7661;
LABEL_5:
      unint64_t v3 = v3 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(v1)
  {
    case 1:
      sub_1000FC8EC();
      goto LABEL_10;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v2 = 1702521203;
      break;
    case 3:
      uint64_t v2 = 0x6C662D7465737361;
      unint64_t v7 = 0x73726F7661;
LABEL_10:
      unint64_t v7 = v7 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  if (v6 == v2 && v3 == v7) {
    sub_1000FC788();
  }
  else {
    char v0 = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

unint64_t sub_1000FBEE8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6 = HTTPMethod.rawValue.getter(a1, a2);
  uint64_t v8 = v7;
  if (v6 == HTTPMethod.rawValue.getter(a3, a4) && v8 == v9) {
    sub_1000FC788();
  }
  else {
    LOBYTE(v6) = sub_1000FC76C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1000FBF68(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_1000FBF78(uint64_t result)
{
  *v1 |= result;
  return result;
}

BOOL sub_1000FBF90(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

BOOL sub_1000FBFBC(unsigned __int8 *a1, unsigned __int8 a2)
{
  int v3 = (*v2 & a2);
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_1000FBFEC(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_1000FBFFC(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t NIOFileHandle.withUnsafeFileDescriptor<A>(_:)(uint64_t (*a1)(void))
{
  sub_1000C825C();
  if (*(unsigned char *)(v1 + 16) == 1) {
    return a1(*(unsigned int *)(v1 + 20));
  }
  sub_100028EB4();
  sub_1000290D0();
  sub_1000878A4();
  return sub_100062570(v4, v5);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NIOFileHandle.close()()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_100028D58(*(_DWORD *)(v0 + 20));
    if (!v1) {
      *(unsigned char *)(v0 + 16) = 0;
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v2, v3);
  }
}

uint64_t NIOFileHandle.isOpen.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t NIOFileHandle.__allocating_init(descriptor:)(int a1)
{
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 20) = a1;
  *(unsigned char *)(result + 16) = 1;
  return result;
}

uint64_t NIOFileHandle.init(descriptor:)(int a1)
{
  *(_DWORD *)(v1 + 20) = a1;
  *(unsigned char *)(v1 + 16) = 1;
  return v1;
}

uint64_t NIOFileHandle.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t NIOFileHandle.duplicate()()
{
  sub_1000C825C();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t result = sub_100028CB4(*(_DWORD *)(v0 + 20));
    if (!v1)
    {
      int v3 = result;
      uint64_t result = swift_allocObject();
      *(_DWORD *)(result + 20) = v3;
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    return sub_100062570(v4, v5);
  }
  return result;
}

Swift::Int32 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NIOFileHandle.takeDescriptorOwnership()()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 16))
  {
    *(unsigned char *)(v0 + 16) = 0;
    return *(_DWORD *)(v0 + 20);
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    return sub_100062570(v2, 0xD00000000000002CLL);
  }
}

uint64_t sub_1000FC314(uint64_t (*a1)(void))
{
  return NIOFileHandle.withUnsafeFileDescriptor<A>(_:)(a1);
}

uint64_t sub_1000FC338()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

void sub_1000FC378()
{
}

void *NIOFileHandle.Mode.read.unsafeMutableAddressor()
{
  return &static NIOFileHandle.Mode.read;
}

void *NIOFileHandle.Mode.write.unsafeMutableAddressor()
{
  return &static NIOFileHandle.Mode.write;
}

uint64_t sub_1000FC3B4(unsigned __int8 *a1)
{
  return sub_1000DCEFC(*a1);
}

uint64_t sub_1000FC3BC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000DCEF8(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1000FC3EC(char *a1)
{
  return sub_10002F9C4(*a1, *v1);
}

BOOL sub_1000FC3F8(unsigned __int8 *a1)
{
  return sub_1000DCF10(*a1, *v1);
}

uint64_t sub_1000FC404(unsigned __int8 *a1)
{
  return sub_1000DCF30(*a1);
}

void *NIOFileHandle.Flags.default.unsafeMutableAddressor()
{
  return &static NIOFileHandle.Flags.default;
}

uint64_t static NIOFileHandle.Flags.allowFileCreation(posixMode:)(unsigned __int16 a1)
{
  return a1 | 0x20000000000;
}

unint64_t static NIOFileHandle.Flags.posix(flags:mode:)(uint64_t a1, unsigned __int16 a2)
{
  return a2 | (unint64_t)(a1 << 32);
}

void NIOFileHandle.__allocating_init(path:mode:flags:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 - 1) > 2u)
  {
    __break(1u);
  }
  else
  {
    sub_10024E730();
    swift_bridgeObjectRelease();
    int v4 = sub_100028DE0();
    swift_release();
    if (!v3)
    {
      uint64_t v5 = swift_allocObject();
      *(_DWORD *)(v5 + 20) = v4;
      *(unsigned char *)(v5 + 16) = 1;
    }
  }
}

void NIOFileHandle.__allocating_init(path:)(uint64_t a1, uint64_t a2)
{
}

unint64_t NIOFileHandle.description.getter()
{
  sub_10024F330(29);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 32032;
  v2._object = (void *)0xE200000000000000;
  sub_10024E800(v2);
  return 0xD000000000000019;
}

unint64_t sub_1000FC5B0()
{
  unint64_t result = qword_1003105A8;
  if (!qword_1003105A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003105A8);
  }
  return result;
}

unint64_t sub_1000FC600()
{
  unint64_t result = qword_1003105B0;
  if (!qword_1003105B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003105B0);
  }
  return result;
}

unint64_t sub_1000FC650()
{
  unint64_t result = qword_1003105B8;
  if (!qword_1003105B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003105B8);
  }
  return result;
}

unint64_t sub_1000FC6A0()
{
  unint64_t result = qword_1003105C0;
  if (!qword_1003105C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003105C0);
  }
  return result;
}

unint64_t sub_1000FC6EC()
{
  return NIOFileHandle.description.getter();
}

uint64_t type metadata accessor for NIOFileHandle()
{
  return self;
}

ValueMetadata *type metadata accessor for NIOFileHandle.Mode()
{
  return &type metadata for NIOFileHandle.Mode;
}

ValueMetadata *type metadata accessor for NIOFileHandle.Flags()
{
  return &type metadata for NIOFileHandle.Flags;
}

uint64_t sub_1000FC76C()
{
  return sub_10024FA60();
}

uint64_t sub_1000FC7B0()
{
  return 0x496D616441707061;
}

uint64_t sub_1000FC7CC()
{
  return sub_10024FA60();
}

uint64_t sub_1000FC800()
{
  return 0x6449656C646E7562;
}

uint64_t sub_1000FC85C()
{
  return 0x4F6B6361626E6977;
}

uint64_t sub_1000FC8AC()
{
  return 0x69642D6563697270;
}

uint64_t sub_1000FC8CC()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_1000FC93C()
{
  return 0x726550664F6D756ELL;
}

uint64_t sub_1000FC988()
{
  return 0x6570795465646F6DLL;
}

uint64_t sub_1000FC9A0()
{
  return 0x6E6F697369766572;
}

unint64_t sub_1000FC9C8()
{
  return 0xD000000000000012;
}

uint64_t sub_1000FC9D4(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t sub_1000FC9DC(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_1000FC9E4()
{
  return 0x6563697270;
}

uint64_t sub_1000FCA48()
{
  return 0x6E4F707041534F69;
}

unint64_t sub_1000FCA5C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1000FCA70(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_10024F6F0())
  {
    type metadata accessor for OctaneLocale();
    uint64_t v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_10024F380();
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5);
        swift_retain();
      }
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if (sub_1000F09D0(*(void **)(v6 + 16), a2))
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v6;
      }
      swift_release();
      ++v5;
      if (v7 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000FCB98()
{
  uint64_t v1 = sub_10024DCF0();
  sub_10001B550();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  sub_10002059C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v9 - 8, v10);
  sub_10002059C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10024DDC0();
  sub_10001B550();
  __chkstk_darwin(v15, v16);
  sub_100057274();
  sub_10001DAC0();
  uint64_t v17 = sub_10024F180();
  if (v18)
  {
    uint64_t v19 = v17;
    sub_1000195B4(v13, 1, 1, v14);
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
    sub_10024DDA0();
    uint64_t v20 = sub_1000FD7D4(v0);
    if (!v24) {
      uint64_t v19 = v20;
    }
    uint64_t v21 = sub_1000FFC24();
    v22(v21);
  }
  else
  {
    uint64_t v19 = type metadata accessor for OctaneError();
    sub_1000FF820((unint64_t *)&qword_10030D0E8, 255, (void (*)(uint64_t))type metadata accessor for OctaneError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v19;
}

uint64_t sub_1000FCDDC()
{
  sub_1000FFBCC();
  *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 40) = _swiftEmptyArrayStorage;
  type metadata accessor for OctaneConfigurationSettings();
  swift_allocObject();
  *(void *)(v0 + 48) = sub_1000930A4();
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  type metadata accessor for OctaneAppPolicies();
  uint64_t v1 = (void *)swift_allocObject();
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = _swiftEmptyArrayStorage;
  *(void *)(v0 + 120) = v1;
  *(void *)(v0 + 64) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v0 + 128) = xmmword_10025C320;
  return v0;
}

uint64_t sub_1000FCE6C(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1002D8190;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

_UNKNOWN **sub_1000FCEBC()
{
  return &off_1002D8270;
}

unint64_t sub_1000FCEC8(char a1)
{
  unint64_t result = 0x656D614E707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0x73746375646F7270;
      break;
    case 3:
      unint64_t result = 0x73676E6974746573;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x63696C6F50707061;
      break;
    case 7:
      unint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000FCFDC(char a1)
{
  unint64_t result = 0x656D614E707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0x73746375646F7270;
      break;
    case 3:
      unint64_t result = 0x73676E6974746573;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x63696C6F50707061;
      break;
    case 7:
      unint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000FD0F0(unsigned __int8 *a1, char *a2)
{
  return sub_1000F9CB4(*a1, *a2);
}

Swift::Int sub_1000FD0FC()
{
  return sub_1001D36EC(*v0);
}

uint64_t sub_1000FD104(uint64_t a1)
{
  return sub_1000D1324(a1, *v1);
}

Swift::Int sub_1000FD10C(uint64_t a1)
{
  return sub_1000D2FFC(a1, *v1);
}

uint64_t sub_1000FD114@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FCE6C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000FD144@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000FCEC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000FD170()
{
  return sub_1000FCFDC(*v0);
}

uint64_t sub_1000FD178@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000FCEB8();
  *a1 = result;
  return result;
}

uint64_t sub_1000FD1A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOBSDSocket.Option.so_keepalive.getter();
  *a1 = result;
  return result;
}

_UNKNOWN **sub_1000FD1C8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000FCEBC();
  *a1 = result;
  return result;
}

uint64_t sub_1000FD1F0(uint64_t a1)
{
  unint64_t v2 = sub_1000FF260();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FD22C(uint64_t a1)
{
  unint64_t v2 = sub_1000FF260();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FD268(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1000FD2B8(a1);
  return v2;
}

uint64_t sub_1000FD2B8(void *a1)
{
  uint64_t v3 = v1;
  sub_100019524(&qword_100310910);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_100057274();
  sub_1000FFBCC();
  sub_10001C2A8(a1, a1[3]);
  sub_1000FF260();
  sub_10024FD20();
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_1000FF628(*(void *)(v1 + 72), *(void *)(v1 + 80));
    type metadata accessor for OctaneConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v20) = 0;
    *(void *)(v1 + 16) = sub_10024F7C0();
    *(void *)(v1 + 24) = v7;
    swift_bridgeObjectRelease();
    sub_100019524(&qword_1003090F0);
    sub_1000FF678(&qword_100310918, &qword_100310920);
    sub_1000FFAFC();
    uint64_t v9 = (void *)v20;
    if (!(void)v20) {
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    *(void *)(v1 + 32) = v9;
    sub_1000FFAFC();
    uint64_t v10 = (void *)v20;
    if (!(void)v20) {
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    *(void *)(v1 + 40) = v10;
    type metadata accessor for OctaneConfigurationSettings();
    sub_1000FF820(&qword_100310928, 255, (void (*)(uint64_t))type metadata accessor for OctaneConfigurationSettings);
    sub_1000FFB2C();
    uint64_t v11 = v20;
    if (!(void)v20)
    {
      swift_allocObject();
      uint64_t v11 = sub_1000930A4();
    }
    *(void *)(v1 + 48) = v11;
    sub_1000FF700();
    sub_1000FFBA4();
    uint64_t v12 = *(void *)(v1 + 72);
    uint64_t v13 = *(void *)(v1 + 80);
    *(_OWORD *)(v1 + 72) = v20;
    *(_OWORD *)(v1 + 88) = v21;
    *(_OWORD *)(v1 + 104) = v22;
    sub_1000FF628(v12, v13);
    sub_100019524(&qword_1003108E8);
    sub_1000FF74C(&qword_100310938, &qword_100310940);
    sub_10024F800();
    uint64_t v14 = (void *)v20;
    if (!(void)v20) {
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    *(void *)(v1 + 56) = v14;
    type metadata accessor for OctaneAppPolicies();
    sub_1000FF820(&qword_100310948, 255, (void (*)(uint64_t))type metadata accessor for OctaneAppPolicies);
    sub_1000FFB2C();
    uint64_t v15 = (void *)v20;
    if (!(void)v20)
    {
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = 0;
      void v15[3] = 0xE000000000000000;
      v15[4] = _swiftEmptyArrayStorage;
    }
    *(void *)(v1 + 120) = v15;
    *(void *)(v1 + 64) = _swiftEmptyArrayStorage;
    sub_1000FF7D4();
    sub_1000FFBA4();
    if ((_BYTE)v21) {
      uint64_t v16 = 4;
    }
    else {
      uint64_t v16 = v20;
    }
    if ((_BYTE)v21) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = *((void *)&v20 + 1);
    }
    uint64_t v18 = sub_100027AC4();
    v19(v18);
    *(void *)(v3 + 128) = v16;
    *(void *)(v3 + 136) = v17;
  }
  sub_10001C2EC((uint64_t)a1);
  return v3;
}

uint64_t sub_1000FD7D4(uint64_t a1)
{
  uint64_t v2 = sub_10024DCF0();
  sub_10001B550();
  uint64_t v96 = v3;
  __chkstk_darwin(v4, v5);
  sub_10002059C();
  unint64_t v95 = v7 - v6;
  uint64_t v8 = sub_10024DDC0();
  sub_10001B550();
  uint64_t v10 = v9;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)v84 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v23 = (char *)v84 - v22;
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v98 = (char *)v84 - v26;
  __chkstk_darwin(v25, v27);
  char v29 = (char *)v84 - v28;
  int v30 = sub_1000FE134();
  if (v30 == 2)
  {
    type metadata accessor for OctaneError();
    sub_1000FF820((unint64_t *)&qword_10030D0E8, 255, (void (*)(uint64_t))type metadata accessor for OctaneError);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v31, a1, v8);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    int v94 = v30;
    uint64_t v90 = v2;
    uint64_t v85 = v15;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_10024E1F0();
    uint64_t v33 = sub_10001B0E8(v32, (uint64_t)qword_10034C0E0);
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v93 = a1;
    Swift::String v88 = v34;
    uint64_t v89 = v10 + 16;
    v34(v29, a1, v8);
    v84[1] = v33;
    uint64_t v35 = sub_10024E1D0();
    os_log_type_t v36 = sub_10024EE00();
    BOOL v37 = os_log_type_enabled(v35, v36);
    BOOL v86 = v19;
    if (v37)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v91 = v10;
      uint64_t v39 = v38;
      v84[0] = swift_slowAlloc();
      uint64_t v99 = v84[0];
      *(_DWORD *)uint64_t v39 = 136315395;
      char v40 = v94;
      if ((_BYTE)v94) {
        uint64_t v41 = 0x656C646E7562;
      }
      else {
        uint64_t v41 = 1701603686;
      }
      if ((_BYTE)v94) {
        unint64_t v42 = 0xE600000000000000;
      }
      else {
        unint64_t v42 = 0xE400000000000000;
      }
      uint64_t v101 = sub_1000F3F3C(v41, v42, &v99);
      uint64_t v87 = v8;
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2081;
      uint64_t v43 = sub_10024DD80(0);
      uint64_t v101 = sub_1000F3F3C(v43, v44, &v99);
      uint64_t v8 = v87;
      sub_10024F100();
      swift_bridgeObjectRelease();
      unsigned __int8 v92 = *(void (**)(uint64_t))(v91 + 8);
      sub_1000ACADC();
      v46(v45);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Reading StoreKit configuration %s at %{private}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      sub_10003FBCC();
      uint64_t v10 = v91;
      sub_10003FBCC();
    }
    else
    {
      unsigned __int8 v92 = *(void (**)(uint64_t))(v10 + 8);
      sub_1000ACADC();
      v47();

      char v40 = v94;
    }
    uint64_t v48 = v93;
    if (v40)
    {
      uint64_t v99 = 0xD000000000000016;
      unint64_t v100 = 0x800000010027C290;
      (*(void (**)(unint64_t, void, uint64_t))(v96 + 104))(v95, enum case for URL.DirectoryHint.inferFromPath(_:), v90);
      sub_10001DAC0();
      sub_10024DDB0();
      sub_1000ACADC();
      v50(v49);
      swift_bridgeObjectRelease();
    }
    else
    {
      v88(v23, v93, v8);
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v98, v23, v8);
    uint64_t v51 = sub_10024DD80(0);
    uint64_t v53 = v52;
    id v54 = objc_allocWithZone((Class)NSData);
    uint64_t v55 = v97;
    id v56 = sub_1000FF504(v51, v53, 0);
    if (v55)
    {
      uint64_t v57 = sub_1000FFB88();
      v58(v57);
    }
    else
    {
      uint64_t v59 = v56;
      uint64_t v60 = sub_10024DF10();
      unint64_t v62 = v61;

      sub_10024D980();
      swift_allocObject();
      sub_10024D970();
      type metadata accessor for OctaneConfiguration();
      sub_1000FF820(&qword_100310958, v63, (void (*)(uint64_t))type metadata accessor for OctaneConfiguration);
      sub_10024D960();
      uint64_t v91 = v10;
      uint64_t v87 = v8;
      int v64 = v94;
      swift_release();
      uint64_t v8 = v99;
      if (v64)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        int v65 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if ((v65 & 1) == 0)
        {
          sub_1000ACADC();
          v80(v79);
          sub_10003F808(v60, v62);
          return v8;
        }
      }
      uint64_t v97 = v60;
      uint64_t v99 = 0x737465737341;
      unint64_t v100 = 0xE600000000000000;
      unint64_t v67 = v95;
      uint64_t v66 = v96;
      uint64_t v68 = v90;
      (*(void (**)(unint64_t, void, uint64_t))(v96 + 104))(v95, enum case for URL.DirectoryHint.isDirectory(_:), v90);
      sub_10001DAC0();
      uint64_t v69 = v86;
      sub_10024DDB0();
      (*(void (**)(unint64_t, uint64_t))(v66 + 8))(v67, v68);
      swift_bridgeObjectRelease();
      *(void *)(v8 + 64) = sub_10008128C(v69);
      swift_bridgeObjectRelease();
      v88(v85, v48, v87);
      swift_retain();
      uint64_t v71 = sub_10024E1D0();
      os_log_type_t v72 = sub_10024EE00();
      int v73 = v72;
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v74 = swift_slowAlloc();
        uint64_t v96 = swift_slowAlloc();
        uint64_t v99 = v96;
        *(_DWORD *)uint64_t v74 = 134218242;
        uint64_t v101 = *(void *)(*(void *)(v8 + 64) + 16);
        int v94 = v73;
        sub_10024F100();
        swift_release();
        *(_WORD *)(v74 + 12) = 2080;
        unint64_t v95 = v62;
        uint64_t v75 = sub_10024DD80(0);
        uint64_t v101 = sub_1000F3F3C(v75, v76, &v99);
        sub_10024F100();
        swift_bridgeObjectRelease();
        uint64_t v77 = v92;
        sub_1000FFAEC();
        v77(v78);
        _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v94, "Found %ld asset(s)\nin the StoreKit configuration at %s", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        sub_10003FBCC();
        sub_10003FBCC();
        sub_10003F808(v97, v95);
      }
      else
      {
        sub_10003F808(v97, v62);

        uint64_t v77 = v92;
        sub_1000FFAEC();
        v77(v81);
        swift_release();
      }
      sub_1000FFAEC();
      v77(v82);
      sub_1000FFAEC();
      v77(v83);
    }
  }
  return v8;
}

uint64_t sub_1000FE134()
{
  id v0 = [self defaultManager];
  unsigned int v1 = NSFileManager.fileExists(at:)();

  if (v1) {
    return (v1 >> 8) & 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_1000FE198(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000FE308(a1, a2);
  if (!result)
  {
    uint64_t result = sub_1000FE204(a1, a2);
    if (!result)
    {
      return sub_1000FE9DC(a1, a2);
    }
  }
  return result;
}

uint64_t sub_1000FE204(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(v2 + 32);
  if (v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10024F6F0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = sub_10024F380();
      }
      else
      {
        uint64_t v8 = *(void *)(v5 + 8 * v7);
        swift_retain();
      }
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v10 = *(void *)(v8 + 80) == a1 && *(void *)(v8 + 88) == a2;
      if (v10 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
      swift_release();
      ++v7;
      if (v9 == v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_18:
    sub_10001B56C();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000FE308(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(v2 + 40);
  if (v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10024F6F0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = sub_10024F380();
      }
      else
      {
        uint64_t v8 = *(void *)(v5 + 8 * v7);
        swift_retain();
      }
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v10 = *(void *)(v8 + 80) == a1 && *(void *)(v8 + 88) == a2;
      if (v10 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
      swift_release();
      ++v7;
      if (v9 == v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_18:
    sub_10001B56C();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1000FE40C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_1001D4BB0(v5);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    uint64_t v8 = sub_1000FF620;
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(uint64_t))static System.hasAsyncAwaitSupport.getter;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRetain();
  if (a2)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001D4BB0(v9);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    uint64_t v12 = v11;
    uint64_t v13 = sub_1000FF618;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = static System.hasAsyncAwaitSupport.getter;
  }
  uint64_t v14 = v13;
  BOOL v37 = (uint64_t (*)(uint64_t))v13;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v8;
  void v15[3] = v7;
  v15[4] = v14;
  v15[5] = v12;
  uint64_t v31 = v15;
  if (v6)
  {
    uint64_t v16 = *(void *)(v6 + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_100082944(v16, 0);
    sub_10024EAC0();
  }
  else
  {
    swift_retain();
    swift_retain();
  }
  uint64_t v17 = *(void *)(v3 + 40);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000FF3E8;
  *(void *)(v18 + 24) = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001D6A5C(v17, sub_1000FF47C, v18);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000FF3E8;
  *(void *)(v19 + 24) = v31;
  swift_retain();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1001D6A5C(v20, sub_1000FFAB4, v19);
  unint64_t v21 = *(void *)(v3 + 56);
  uint64_t v35 = v21 & 0xFFFFFFFFFFFFFF8;
  unint64_t v32 = v21 + 32;
  unint64_t v33 = v21 & 0xC000000000000001;
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v36 = 0;
  unint64_t v34 = v21 >> 62;
  uint64_t v22 = v37;
  while (1)
  {
    if (v34)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)(v35 + 16);
    }
    if (v36 == v26) {
      break;
    }
    if (v33)
    {
      uint64_t v27 = sub_10024F380();
    }
    else
    {
      if (v36 >= *(void *)(v35 + 16))
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v27 = *(void *)(v32 + 8 * v36);
      swift_retain();
    }
    if (__OFADD__(v36, 1)) {
      goto LABEL_44;
    }
    ++v36;
    unint64_t v28 = *(void *)(v27 + 56);
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v29 = v28;
    if (v28)
    {
      for (unint64_t i = 0; ; ++i)
      {
        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_10024F6F0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v24 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (i == v24) {
          break;
        }
        if ((v29 & 0xC000000000000001) != 0)
        {
          uint64_t v25 = sub_10024F380();
        }
        else
        {
          if (i >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
          uint64_t v25 = *(void *)(v29 + 8 * i + 32);
          swift_retain();
        }
        if (__OFADD__(i, 1)) {
          goto LABEL_42;
        }
        if (v8(v25) & 1) != 0 && (v22(v25))
        {
          sub_10024F400();
          sub_10024F490();
          uint64_t v22 = v37;
          sub_10024F4A0();
          sub_10024F420();
        }
        else
        {
          swift_release();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    sub_10024FAD0();
    type metadata accessor for OctaneIAP();
    goto LABEL_40;
  }
LABEL_45:
  type metadata accessor for OctaneIAP();
  swift_bridgeObjectRetain();
  sub_10024F680();
  swift_release();
LABEL_40:
  swift_release();
  sub_1001D6C8C();
  swift_release();
  swift_release();
  swift_release();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000FE908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain();
  sub_1000D4104(v3, v4, a2);
  LOBYTE(a2) = v5;
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1000FE95C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for OctaneSubscription();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v4 = *(void *)(result + 192);
    uint64_t v5 = *(void *)(result + 200);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000D4104(v4, v5, a2);
    char v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  return result;
}

uint64_t sub_1000FE9DC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(v2 + 56);
  if (v5 >> 62)
  {
LABEL_31:
    sub_10001B56C();
    uint64_t result = sub_10024F6F0();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v8 = 0;
      unint64_t v9 = v5 & 0xC000000000000001;
      uint64_t v18 = v6;
      do
      {
        if (v9)
        {
          uint64_t v10 = sub_10024F380();
        }
        else
        {
          if (v8 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          uint64_t v10 = *(void *)(v5 + 32 + 8 * v8);
          swift_retain();
        }
        if (__OFADD__(v8++, 1)) {
          goto LABEL_30;
        }
        unint64_t v12 = *(void *)(v10 + 56);
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v13 = sub_10024F6F0();
          swift_bridgeObjectRelease();
          if (v13)
          {
LABEL_11:
            uint64_t v14 = 4;
            while (1)
            {
              if ((v12 & 0xC000000000000001) != 0)
              {
                uint64_t v15 = sub_10024F380();
              }
              else
              {
                uint64_t v15 = *(void *)(v12 + 8 * v14);
                swift_retain();
              }
              uint64_t v16 = v14 - 3;
              if (__OFADD__(v14 - 4, 1)) {
                break;
              }
              BOOL v17 = *(void *)(v15 + 80) == a1 && *(void *)(v15 + 88) == a2;
              if (v17 || (sub_10024FA60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                return v15;
              }
              swift_release();
              ++v14;
              if (v16 == v13)
              {
                swift_release();
                unint64_t v9 = v5 & 0xC000000000000001;
                uint64_t v6 = v18;
                goto LABEL_25;
              }
            }
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v13) {
            goto LABEL_11;
          }
        }
        swift_release();
LABEL_25:
        uint64_t result = swift_bridgeObjectRelease();
      }
      while (v8 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000FEBDC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100026DD8(v4, a1, a2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000FEC44(void *a1)
{
  swift_retain();
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000FCA70(v2, a1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1000FECA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for OctaneAsset();
  __chkstk_darwin(v7, v8);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000FF344(v14, (uint64_t)v11);
      BOOL v16 = *v11 == a1 && v11[1] == a2;
      if (v16 || (sub_10024FA60() & 1) != 0) {
        break;
      }
      sub_100065A40((uint64_t)v11);
      v14 += v15;
      if (!--v13) {
        goto LABEL_12;
      }
    }
    sub_1000659DC((uint64_t)v11, a3);
    uint64_t v17 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    uint64_t v17 = 1;
  }
  sub_1000195B4(a3, v17, 1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000FEE10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000FF628(*(void *)(v0 + 72), *(void *)(v0 + 80));
  swift_release();
  return v0;
}

uint64_t sub_1000FEE70()
{
  sub_1000FEE10();
  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t type metadata accessor for OctaneConfiguration()
{
  return self;
}

uint64_t sub_1000FEEC8(void *a1)
{
  sub_100019524(&qword_1003108B8);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_10002059C();
  sub_10001C2A8(a1, a1[3]);
  sub_1000FF260();
  sub_10024FD40();
  swift_bridgeObjectRetain();
  sub_10024F8D0();
  if (v1)
  {
    uint64_t v5 = sub_1000CD424();
    v6(v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100019524(&qword_1003090F0);
    sub_1000FF678(&qword_1003108C8, &qword_1003108D0);
    sub_1000FFB5C();
    sub_1000FFB5C();
    type metadata accessor for OctaneConfigurationSettings();
    sub_1000FF820(&qword_1003108D8, 255, (void (*)(uint64_t))type metadata accessor for OctaneConfigurationSettings);
    sub_1000FFAC0();
    sub_1000FF2AC();
    sub_1000FFBE4();
    sub_10024F910();
    sub_100019524(&qword_1003108E8);
    sub_1000FF74C(&qword_1003108F0, &qword_1003108F8);
    sub_1000FFAC0();
    type metadata accessor for OctaneAppPolicies();
    sub_1000FF820(&qword_100310900, 255, (void (*)(uint64_t))type metadata accessor for OctaneAppPolicies);
    sub_1000FFAC0();
    sub_1000FF2F8();
    sub_1000FFBE4();
    sub_10024F980();
    uint64_t v8 = sub_1000CD424();
    return v9(v8);
  }
}

uint64_t sub_1000FF210@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000FD268(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000FF23C(void *a1)
{
  return sub_1000FEEC8(a1);
}

unint64_t sub_1000FF260()
{
  unint64_t result = qword_1003108C0;
  if (!qword_1003108C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003108C0);
  }
  return result;
}

unint64_t sub_1000FF2AC()
{
  unint64_t result = qword_1003108E0;
  if (!qword_1003108E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003108E0);
  }
  return result;
}

unint64_t sub_1000FF2F8()
{
  unint64_t result = qword_100310908;
  if (!qword_100310908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310908);
  }
  return result;
}

uint64_t sub_1000FF344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OctaneAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FF3A8()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000FF3E8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 32);
  if ((*(uint64_t (**)(void))(v1 + 16))()) {
    return v3(a1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FF444()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000FF47C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1) & 1;
}

uint64_t sub_1000FF4AC(char a1)
{
  if (a1) {
    return 0x656C646E7562;
  }
  else {
    return 1701603686;
  }
}

uint64_t sub_1000FF4D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000FF4AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_1000FF504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithContentsOfFile:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_10024DCE0();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1000FF5E0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FF618(uint64_t a1)
{
  return sub_1000FE95C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000FF620(uint64_t a1)
{
  return sub_1000FE908(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000FF628(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000FF678(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_1003090F0);
    sub_1000FF820(a2, 255, (void (*)(uint64_t))type metadata accessor for OctaneIAP);
    uint64_t result = sub_1000FFC38();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FF700()
{
  unint64_t result = qword_100310930;
  if (!qword_100310930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310930);
  }
  return result;
}

uint64_t sub_1000FF74C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_1003108E8);
    sub_1000FF820(a2, 255, (void (*)(uint64_t))type metadata accessor for OctaneSubscriptionGroup);
    uint64_t result = sub_1000FFC38();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FF7D4()
{
  unint64_t result = qword_100310950;
  if (!qword_100310950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310950);
  }
  return result;
}

uint64_t sub_1000FF820(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OctaneConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FF934);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneConfiguration.CodingKeys()
{
  return &type metadata for OctaneConfiguration.CodingKeys;
}

unint64_t sub_1000FF970()
{
  unint64_t result = qword_100310960;
  if (!qword_100310960)
  {
    sub_10001B028(&qword_100310968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310960);
  }
  return result;
}

unint64_t sub_1000FF9C8()
{
  unint64_t result = qword_100310970;
  if (!qword_100310970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310970);
  }
  return result;
}

unint64_t sub_1000FFA18()
{
  unint64_t result = qword_100310978;
  if (!qword_100310978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310978);
  }
  return result;
}

unint64_t sub_1000FFA68()
{
  unint64_t result = qword_100310980;
  if (!qword_100310980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100310980);
  }
  return result;
}

uint64_t sub_1000FFAC0()
{
  return sub_10024F980();
}

uint64_t sub_1000FFAFC()
{
  return sub_10024F800();
}

uint64_t sub_1000FFB2C()
{
  return sub_10024F800();
}

uint64_t sub_1000FFB5C()
{
  return sub_10024F980();
}

uint64_t sub_1000FFB88()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_1000FFBA4()
{
  return sub_10024F800();
}

double sub_1000FFBCC()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  return result;
}

uint64_t sub_1000FFBE4()
{
  return v0 - 128;
}

uint64_t sub_1000FFC24()
{
  return v0;
}

uint64_t sub_1000FFC38()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000FFC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000ACEB8();
  v8._uint64_t countAndFlagsBits = 47;
  v8._object = (void *)0xE100000000000000;
  if (sub_10024E8B0(v8))
  {
    uint64_t v7 = sub_100105E78(a3, a4);
  }
  else
  {
    uint64_t v7 = sub_100105E78(a3, a4);
    v9._uint64_t countAndFlagsBits = 47;
    v9._object = (void *)0xE100000000000000;
    sub_10024E800(v9);
  }
  v10._uint64_t countAndFlagsBits = sub_10008436C();
  sub_10024E800(v10);
  return v7;
}

void *sub_1000FFCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v5 = sub_10001C2A8((void *)(a2 + 56), *(void *)(a2 + 80));
      __chkstk_darwin(v5, v6);
      swift_bridgeObjectRetain();
      sub_1002068C0();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1000FFE70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v38 = a3;
  BOOL v37 = (void (*)(void *))a2;
  uint64_t v7 = sub_100019524(&qword_100310B20);
  __chkstk_darwin(v7 - 8, v8);
  sub_100110EF4();
  uint64_t v35 = type metadata accessor for IAPTransaction();
  sub_10002F9C8();
  uint64_t v33 = v9;
  __chkstk_darwin(v10, v11);
  sub_1000E289C();
  uint64_t v36 = v12 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v32 = (uint64_t)&v30 - v16;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v17; uint64_t v17 = sub_10024F6F0())
  {
    uint64_t v30 = v5;
    unint64_t v34 = a1 & 0xC000000000000001;
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v19 = 4;
    unint64_t v31 = a1;
    uint64_t v20 = v37;
    while (1)
    {
      id v21 = v34 ? (id)sub_10024F380() : *(id *)(a1 + 8 * v19);
      uint64_t v5 = v19 - 3;
      if (__OFADD__(v19 - 4, 1)) {
        break;
      }
      id v22 = v21;
      sub_10003C360((uint64_t)v20);
      sub_1001F99F0(v22, v20, v4);
      uint64_t v23 = v35;
      sub_1000195B4(v4, 0, 1, v35);

      if (sub_10001FA0C(v4, 1, v23) == 1)
      {
        sub_1000AC6D0(v4, &qword_100310B20);
      }
      else
      {
        uint64_t v24 = v32;
        sub_100110A34(v4, v32, (void (*)(void))type metadata accessor for IAPTransaction);
        sub_100110A34(v24, v36, (void (*)(void))type metadata accessor for IAPTransaction);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000354A8(0, v18[2] + 1, 1, (uint64_t)v18);
          uint64_t v18 = v27;
        }
        unint64_t v26 = v18[2];
        unint64_t v25 = v18[3];
        if (v26 >= v25 >> 1)
        {
          sub_1000354A8(v25 > 1, v26 + 1, 1, (uint64_t)v18);
          uint64_t v18 = v28;
        }
        long long v18[2] = v26 + 1;
        sub_100110A34(v36, (uint64_t)v18+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v26, (void (*)(void))type metadata accessor for IAPTransaction);
        a1 = v31;
      }
      ++v19;
      if (v5 == v17)
      {
        swift_bridgeObjectRelease();
        sub_10003C350((uint64_t)v37);
        return v18;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_10003C350((uint64_t)v37);
  return _swiftEmptyArrayStorage;
}

double sub_100100194@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  type metadata accessor for PurchaseEngagementDialog();
  swift_allocObject();
  uint64_t v12 = sub_10010DCBC(a1, a2, a3, a4, a5);
  *(void *)a6 = 0;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = _swiftEmptyArrayStorage;
  *(_WORD *)(a6 + 24) = 0;
  *(void *)(a6 + 32) = 0x3233363232333731;
  *(void *)(a6 + 40) = 0xEB00000000373231;
  *(void *)(a6 + 48) = 0;
  *(unsigned char *)(a6 + 56) = 1;
  *(void *)(a6 + 64) = 0;
  *(void *)(a6 + 72) = 0;
  *(void *)(a6 + 80) = 0xF000000000000000;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = 0;
  *(void *)(a6 + 104) = 1;
  double result = 0.0;
  *(_OWORD *)(a6 + 144) = 0u;
  *(_OWORD *)(a6 + 160) = 0u;
  *(_OWORD *)(a6 + 112) = 0u;
  *(_OWORD *)(a6 + 128) = 0u;
  *(unsigned char *)(a6 + 176) = 19;
  *(void *)(a6 + 184) = 0xD000000000000022;
  *(void *)(a6 + 192) = 0x800000010027B700;
  *(void *)(a6 + 200) = v12;
  *(unsigned char *)(a6 + 208) = 2;
  return result;
}

uint64_t sub_1001002A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = sub_100019524(&qword_100310B18);
  __chkstk_darwin(v89, v5);
  Swift::String v88 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v85 = (char *)&v80 - v9;
  uint64_t v91 = type metadata accessor for PurchaseConfiguration();
  __chkstk_darwin(v91, v10);
  uint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  BOOL v86 = (uint64_t *)((char *)&v80 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (uint64_t *)((char *)&v80 - v18);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (uint64_t *)((char *)&v80 - v22);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v80 - v26;
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  unsigned __int8 v92 = v19;
  uint64_t v28 = sub_10024E1F0();
  sub_10001B0E8(v28, (uint64_t)qword_10034C0E0);
  sub_10011078C((uint64_t)a1, (uint64_t)v27, (void (*)(void))type metadata accessor for PurchaseConfiguration);
  sub_10011078C((uint64_t)a1, (uint64_t)v23, (void (*)(void))type metadata accessor for PurchaseConfiguration);
  unint64_t v29 = sub_10024E1D0();
  os_log_type_t v30 = sub_10024EE30();
  int v31 = v30;
  BOOL v32 = os_log_type_enabled(v29, v30);
  uint64_t v90 = v2;
  uint64_t v84 = a2;
  uint64_t v87 = v12;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    v94[0] = v83;
    *(_DWORD *)uint64_t v33 = 136315394;
    LODWORD(v82) = v31;
    uint64_t v34 = *((void *)v27 + 2);
    unint64_t v35 = *((void *)v27 + 3);
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_1000F3F3C(v34, v35, v94);
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_10011097C((uint64_t)v27, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v36 = *v23;
    unint64_t v37 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_1000F3F3C(v36, v37, v94);
    sub_10024F100();
    swift_bridgeObjectRelease();
    sub_10011097C((uint64_t)v23, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v82, "Will run simulated off device purchase of \"%s\" for \"%s\"", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10011097C((uint64_t)v27, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    sub_10011097C((uint64_t)v23, (void (*)(void))type metadata accessor for PurchaseConfiguration);
  }

  uint64_t v38 = (void *)(v93 + 48);
  sub_10001C2A8((void *)(v93 + 48), *(void *)(v93 + 72));
  uint64_t v39 = a1[2];
  uint64_t v40 = a1[3];
  sub_10008A5FC(*a1, a1[1]);
  uint64_t v41 = sub_1000FE198(v39, v40);
  swift_release();
  if (v41)
  {
    unint64_t v42 = v92;
    sub_10011078C((uint64_t)a1, (uint64_t)v92, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    uint64_t v43 = v91;
    uint64_t v44 = *(int *)(v91 + 44);
    int v45 = *((unsigned __int8 *)v42 + v44);
    if (v45 != 3)
    {
      char v46 = (uint64_t *)((char *)v42 + *(int *)(v91 + 40));
      uint64_t v47 = v46[1];
      if (v47)
      {
        if (v45 == 1)
        {
          uint64_t v81 = (uint64_t *)((char *)v42 + *(int *)(v91 + 40));
          uint64_t v83 = *v46;
          sub_10001C2A8(v38, *(void *)(v93 + 72));
          uint64_t v48 = v42[2];
          uint64_t v49 = v42[3];
          uint64_t v50 = *v42;
          uint64_t v51 = v42[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10008A5FC(v50, v51);
          uint64_t v52 = sub_1000FE9DC(v48, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          if (v52)
          {
            unint64_t v53 = *(void *)(v52 + 152);
            swift_bridgeObjectRetain();
            swift_release();
            if (v53 >> 62) {
              goto LABEL_41;
            }
            uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            for (; v54; uint64_t v54 = sub_10024F6F0())
            {
              unint64_t v82 = v53 & 0xC000000000000001;
              uint64_t v55 = 4;
              while (1)
              {
                if (v82)
                {
                  id v56 = (void *)sub_10024F380();
                }
                else
                {
                  id v56 = *(void **)(v53 + 8 * v55);
                  swift_retain();
                }
                uint64_t v57 = v55 - 3;
                if (__OFADD__(v55 - 4, 1)) {
                  break;
                }
                BOOL v58 = v56[10] == v83 && v47 == v56[11];
                if (v58 || (sub_10024FA60() & 1) != 0)
                {
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  uint64_t v62 = v56[2];
                  uint64_t v61 = v56[3];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_release();
                  uint64_t v63 = v81;
                  *uint64_t v81 = v62;
                  v63[1] = v61;
                  unint64_t v42 = v92;
                  *((unsigned char *)v92 + v44) = 1;
                  goto LABEL_29;
                }
                swift_release();
                ++v55;
                if (v57 == v54) {
                  goto LABEL_24;
                }
              }
              __break(1u);
LABEL_41:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
LABEL_24:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          unint64_t v42 = v92;
LABEL_29:
          uint64_t v43 = v91;
        }
      }
    }
    int v64 = v86;
    sub_10011078C((uint64_t)v42, (uint64_t)v86, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    swift_retain();
    sub_1001AF324(v64, v41, v95);
    int v65 = v87;
    sub_10011078C((uint64_t)v42, (uint64_t)v87, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    uint64_t v67 = (uint64_t)v88;
    uint64_t v66 = v89;
    uint64_t v68 = (uint64_t)&v88[*(int *)(v89 + 44)];
    uint64_t v69 = sub_10024E030();
    sub_1000195B4(v68, 1, 1, v69);
    uint64_t v70 = v65[1];
    *(void *)uint64_t v67 = *v65;
    *(void *)(v67 + 8) = v70;
    *(unsigned char *)(v67 + 16) = 1;
    *(void *)(v67 + 24) = v41;
    uint64_t v71 = (uint64_t)v65 + *(int *)(v43 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100110398(v71, v68);
    int v72 = *((unsigned __int8 *)v65 + *(int *)(v43 + 48));
    sub_10011097C((uint64_t)v65, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    if (v72 == 2)
    {
      type metadata accessor for OctaneSubscription();
      char v73 = swift_dynamicCastClass() != 0;
    }
    else
    {
      char v73 = v72 & 1;
    }
    uint64_t v74 = (uint64_t)v85;
    *(unsigned char *)(v67 + *(int *)(v66 + 48)) = v73;
    *(unsigned char *)(v67 + *(int *)(v66 + 52)) = 1;
    sub_100110A88(v67, v74, &qword_100310B18);
    id v75 = sub_100100C44(v94, v95, v74, 0);
    sub_1000C0BBC(v95);
    sub_1000AC6D0(v74, &qword_100310B18);
    if (v75)
    {
      id v76 = v75;
      sub_10011097C((uint64_t)v42, (void (*)(void))type metadata accessor for PurchaseConfiguration);

      swift_release();
      uint64_t v77 = v84;
      sub_100027788((uint64_t)v94, v84);
      *(void *)(v77 + 40) = v76;
    }
    else
    {
      int v78 = *((unsigned __int8 *)sub_10001C2A8(v94, v94[3]) + 176);
      if (v78 == 22)
      {
        type metadata accessor for OctaneError();
        sub_1001108E8((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        sub_100110128();
        swift_allocError();
        *uint64_t v79 = v78;
      }
      swift_willThrow();
      swift_release();
      sub_10011097C((uint64_t)v42, (void (*)(void))type metadata accessor for PurchaseConfiguration);
    }
    return sub_10001C2EC((uint64_t)v94);
  }
  else
  {
    sub_1000C0494();
    swift_allocError();
    *uint64_t v59 = 1;
    return swift_willThrow();
  }
}

void sub_100100BAC()
{
  sub_10003C7F0();
  if ((v0 & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10009DC4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003C780();
}

id sub_100100C44(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v366 = a4;
  uint64_t v385 = a2;
  BOOL v383 = a1;
  uint64_t v6 = type metadata accessor for IAPTransaction();
  *(void *)&long long v361 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v362 = (char *)&v335 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = sub_10024E0A0();
  *(void *)&long long v359 = *(void *)(v379 - 8);
  __chkstk_darwin(v379, v9);
  *(void *)&long long v358 = (char *)&v335 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v363 = sub_100019524(&qword_10030E948);
  __chkstk_darwin(v363, v11);
  *(void *)&long long v356 = (char *)&v335 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  *(void *)&long long v352 = (char *)&v335 - v15;
  *(void *)&long long v353 = sub_100019524(&qword_10030E950);
  __chkstk_darwin(v353, v16);
  *(void *)&long long v354 = (char *)&v335 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  *(void *)&long long v355 = (char *)&v335 - v20;
  uint64_t v21 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v21 - 8, v22);
  *(void *)&long long v360 = (char *)&v335 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  *(void *)&long long v375 = (char *)&v335 - v26;
  __chkstk_darwin(v27, v28);
  *(void *)&long long v370 = (char *)&v335 - v29;
  __chkstk_darwin(v30, v31);
  *(void *)&long long v369 = (char *)&v335 - v32;
  uint64_t v33 = sub_100019524(&qword_10030C100);
  __chkstk_darwin(v33 - 8, v34);
  *(void *)&long long v357 = (char *)&v335 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v37);
  *(void *)&long long v367 = (char *)&v335 - v38;
  __chkstk_darwin(v39, v40);
  uint64_t v382 = (uint64_t *)((char *)&v335 - v41);
  uint64_t v381 = sub_10024E030();
  *(void *)&long long v378 = *(void *)(v381 - 8);
  __chkstk_darwin(v381, v42);
  *(void *)&long long v372 = (char *)&v335 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v45);
  *(void *)&long long v373 = (char *)&v335 - v46;
  __chkstk_darwin(v47, v48);
  *(void *)&long long v371 = (char *)&v335 - v49;
  __chkstk_darwin(v50, v51);
  *(void *)&long long v376 = (char *)&v335 - v52;
  uint64_t v53 = sub_100019524(&qword_100310B18);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(void *)(v54 + 64);
  __chkstk_darwin(v53, v56);
  *(void *)&long long v377 = (char *)&v335 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57, v58);
  *(void *)&long long v364 = (char *)&v335 - v59;
  __chkstk_darwin(v60, v61);
  *(void *)&long long v365 = (char *)&v335 - v62;
  __chkstk_darwin(v63, v64);
  *(void *)&long long v368 = (char *)&v335 - v65;
  __chkstk_darwin(v66, v67);
  uint64_t v69 = (char *)&v335 - v68;
  __chkstk_darwin(v70, v71);
  char v73 = (char *)&v335 - v72;
  __chkstk_darwin(v74, v75);
  uint64_t v77 = (char *)&v335 - v76;
  uint64_t v380 = v78;
  uint64_t v387 = *(int *)(v78 + 52);
  char v79 = *(unsigned char *)(a3 + v387);
  uint64_t v388 = a3;
  sub_1001107E0(a3, (uint64_t)&v335 - v76, &qword_100310B18);
  uint64_t v386 = v4;
  if (v79)
  {
    BOOL v80 = 0;
  }
  else
  {
    sub_10001C2A8(v4 + 6, v4[9]);
    BOOL v80 = sub_10008A5D8();
  }
  sub_1000AC6D0((uint64_t)v77, &qword_100310B18);
  char v81 = *(unsigned char *)(v388 + v387);
  sub_1001107E0(v388, (uint64_t)v73, &qword_100310B18);
  if (v81)
  {
    BOOL v82 = 0;
  }
  else
  {
    sub_10001C2A8(v386 + 6, v386[9]);
    BOOL v82 = sub_10008A880();
  }
  sub_1000AC6D0((uint64_t)v73, &qword_100310B18);
  uint64_t v83 = v388;
  sub_1001107E0(v388, (uint64_t)v69, &qword_100310B18);
  unint64_t v84 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v85 = v84 + v55;
  uint64_t v86 = v83;
  uint64_t v87 = swift_allocObject();
  sub_100110A88((uint64_t)v69, v87 + v84, &qword_100310B18);
  Swift::String v88 = (unsigned char *)(v87 + v85);
  LODWORD(v374) = v80;
  *Swift::String v88 = v80;
  v88[1] = v82;
  uint64_t v89 = v385;
  memcpy((void *)(v87 + ((v85 + 9) & 0xFFFFFFFFFFFFFFF8)), v385, 0x369uLL);
  sub_1000C0148(v89);
  NSString v90 = sub_10024E6A0();
  uint64_t v91 = swift_allocObject();
  *(void *)(v91 + 16) = sub_1001106B8;
  *(void *)(v91 + 24) = v87;
  *(void *)&v425[2] = sub_1000C0A80;
  *((void *)&v425[2] + 1) = v91;
  *(void *)&v425[0] = _NSConcreteStackBlock;
  *((void *)&v425[0] + 1) = 1107296256;
  *(void *)&v425[1] = sub_10015AFA8;
  *((void *)&v425[1] + 1) = &unk_1002E4EB8;
  unsigned __int8 v92 = _Block_copy(v425);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v92);
  swift_release();

  type metadata accessor for AllSetDialog();
  swift_allocObject();
  uint64_t v384 = sub_100150F8C();
  char v422 = 0;
  char v421 = 1;
  unsigned __int8 v420 = 0;
  char v417 = 1;
  if (*(unsigned char *)(v86 + v387) == 1 && *(unsigned char *)(*(void *)(v86 + 24) + 112) == 1)
  {
    sub_10001C2A8(v386 + 11, v386[14]);
    swift_retain();
    uint64_t v93 = v376;
    sub_10024E010();
    int v94 = (void *)sub_10009FE0C();
    (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v93, v381);
    if (v94)
    {
      v389[0] = 0uLL;
      *(void *)&v389[1] = _swiftEmptyArrayStorage;
      WORD4(v389[1]) = 0;
      *(void *)&v389[2] = 0x3233363232333731;
      *((void *)&v389[2] + 1) = 0xEB00000000373231;
      *(void *)&v389[3] = 0;
      BYTE8(v389[3]) = 1;
      v389[4] = 0uLL;
      v389[5] = 0xF000000000000000;
      *(void *)&v389[6] = 0;
      *((void *)&v389[6] + 1) = 1;
      memset(&v389[7], 0, 64);
      uint64_t v95 = v384;
      LOBYTE(v389[11]) = 4;
      *(void *)&v389[12] = 0;
      *((void *)&v389[11] + 1) = 0;
      *((void *)&v389[12] + 1) = v384;
      LOBYTE(v389[13]) = 2;
      sub_1000636BC(v389);
      swift_release();
      uint64_t v96 = v383;
      v383[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v96[4] = sub_1000C0578();
      uint64_t v97 = swift_allocObject();
      uint64_t v98 = (void *)(v97 + 16);
      *uint64_t v96 = v97;

      memcpy(v98, v389, 0xD1uLL);
      v425[0] = 0uLL;
      *(void *)&v425[1] = _swiftEmptyArrayStorage;
      WORD4(v425[1]) = v420;
      *(void *)&v425[2] = 0x3233363232333731;
      *((void *)&v425[2] + 1) = 0xEB00000000373231;
      *(void *)&v425[3] = 0;
      BYTE8(v425[3]) = v417;
      v425[4] = 0uLL;
      v425[5] = 0xF000000000000000;
      *(void *)&v425[6] = 0;
      *((void *)&v425[6] + 1) = 1;
      memset(&v425[7], 0, 64);
      LOBYTE(v425[11]) = 4;
      *((void *)&v425[11] + 1) = 0;
      *(void *)&v425[12] = 0;
      *((void *)&v425[12] + 1) = v95;
      LOBYTE(v425[13]) = 2;
LABEL_36:
      long long v162 = v425;
      goto LABEL_37;
    }
    swift_release();
  }
  LODWORD(v376) = v82;
  uint64_t v99 = v385;
  unint64_t v100 = v386;
  uint64_t v101 = v382;
  if ((*(unsigned char *)(v86 + 16) & 1) == 0)
  {
    uint64_t v102 = (void *)v385[33];
    if (!v102
      || (uint64_t v103 = v385[32],
          swift_bridgeObjectRetain(),
          v428._uint64_t countAndFlagsBits = v103,
          v428._object = v102,
          !sub_10024EB70(v428).value))
    {
      uint64_t v104 = v377;
      sub_1001107E0(v86, v377, &qword_100310B18);
      uint64_t v105 = *(void *)(v86 + 24);
      int v106 = *(unsigned __int8 *)(v105 + 112);
      if (v106 == 1)
      {
        if (sub_10010439C((uint64_t)v100, v104))
        {
          sub_1000AC6D0(v104, &qword_100310B18);
          sub_100110A88((uint64_t)(v99 + 70), (uint64_t)v393, &qword_10030A860);
          LODWORD(v387) = *((unsigned __int8 *)v99 + 552);
          uint64_t v386 = (void *)v99[67];
          uint64_t v382 = (void *)v99[68];
          LODWORD(v381) = *((unsigned __int8 *)v99 + 528);
          uint64_t v380 = v99[64];
          uint64_t v379 = v99[65];
          long long v107 = *((_OWORD *)v99 + 31);
          long long v377 = *((_OWORD *)v99 + 30);
          long long v378 = v107;
          long long v108 = *((_OWORD *)v99 + 29);
          long long v375 = *((_OWORD *)v99 + 28);
          long long v376 = v108;
          long long v109 = *((_OWORD *)v99 + 27);
          long long v373 = *((_OWORD *)v99 + 26);
          long long v374 = v109;
          long long v110 = *((_OWORD *)v99 + 25);
          long long v371 = *((_OWORD *)v99 + 24);
          long long v372 = v110;
          long long v111 = *((_OWORD *)v99 + 23);
          long long v369 = *((_OWORD *)v99 + 22);
          long long v370 = v111;
          long long v112 = *((_OWORD *)v99 + 21);
          long long v367 = *((_OWORD *)v99 + 20);
          long long v368 = v112;
          long long v113 = *((_OWORD *)v99 + 19);
          long long v365 = *((_OWORD *)v99 + 18);
          long long v366 = v113;
          long long v364 = *((_OWORD *)v99 + 17);
          uint64_t v114 = v99[30];
          uint64_t v362 = (char *)v99[31];
          *(void *)&long long v363 = v114;
          long long v115 = *((_OWORD *)v99 + 14);
          long long v360 = *((_OWORD *)v99 + 13);
          long long v361 = v115;
          uint64_t v116 = v99;
          char v117 = *((unsigned char *)v99 + 200);
          uint64_t v119 = v116[23];
          uint64_t v118 = v116[24];
          long long v120 = *(_OWORD *)(v116 + 21);
          long long v358 = *(_OWORD *)(v116 + 19);
          long long v359 = v120;
          long long v121 = *(_OWORD *)(v116 + 17);
          long long v356 = *(_OWORD *)(v116 + 15);
          long long v357 = v121;
          long long v122 = *(_OWORD *)(v116 + 13);
          uint64_t v123 = v86;
          char v124 = *((unsigned char *)v116 + 96);
          uint64_t v125 = v116[10];
          uint64_t v126 = v116[11];
          long long v354 = *((_OWORD *)v116 + 4);
          long long v355 = v122;
          long long v127 = *((_OWORD *)v116 + 3);
          long long v352 = *((_OWORD *)v116 + 2);
          long long v353 = v127;
          long long v128 = *((_OWORD *)v116 + 1);
          long long v350 = *(_OWORD *)v116;
          long long v351 = v128;
          sub_1000C0148(v116);
          swift_bridgeObjectRelease();
          uint64_t v129 = *(void *)(v123 + 24);
          v389[0] = v350;
          v389[1] = v351;
          v389[2] = v352;
          v389[3] = v353;
          v389[4] = v354;
          *(void *)&v389[5] = v125;
          *((void *)&v389[5] + 1) = v126;
          LOBYTE(v389[6]) = v124;
          *(_OWORD *)((char *)&v389[6] + 8) = v355;
          *(_OWORD *)((char *)&v389[7] + 8) = v356;
          *(_OWORD *)((char *)&v389[8] + 8) = v357;
          *(_OWORD *)((char *)&v389[9] + 8) = v358;
          *(_OWORD *)((char *)&v389[10] + 8) = v359;
          *((void *)&v389[11] + 1) = v119;
          *(void *)&v389[12] = v118;
          BYTE8(v389[12]) = v117;
          v389[13] = v360;
          v389[14] = v361;
          *(void *)&v389[15] = v363;
          *((void *)&v389[15] + 1) = v362;
          v389[16] = xmmword_10025D3E0;
          v389[17] = v364;
          v389[18] = v365;
          v389[19] = v366;
          v389[20] = v367;
          v389[21] = v368;
          v389[22] = v369;
          v389[23] = v370;
          v389[24] = v371;
          v389[25] = v372;
          v389[26] = v373;
          v389[27] = v374;
          v389[28] = v375;
          v389[29] = v376;
          v389[30] = v377;
          v389[31] = v378;
          *(void *)&v389[32] = v380;
          *((void *)&v389[32] + 1) = v379;
          LOBYTE(v389[33]) = v381;
          *((void *)&v389[33] + 1) = v386;
          *(void *)&v389[34] = v382;
          BYTE8(v389[34]) = v387;
          sub_100110A88((uint64_t)v393, (uint64_t)&v389[35], &qword_10030A860);
          memcpy(v425, v389, 0x369uLL);
          swift_retain();
          uint64_t v130 = sub_1001AF734();
          uint64_t v132 = v131;
          sub_1000C0BBC(v389);
          sub_100062858(v129, v130, v132, (uint64_t)v391);
LABEL_22:
          unint64_t v160 = v383;
          v383[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
          v160[4] = sub_1000C0578();
          uint64_t v161 = swift_allocObject();
          *unint64_t v160 = v161;
          memcpy((void *)(v161 + 16), v391, 0xD1uLL);
          v390[0] = 0uLL;
          *(void *)&v390[1] = _swiftEmptyArrayStorage;
          WORD4(v390[1]) = v420;
          *(_DWORD *)((char *)&v390[1] + 10) = v418;
          HIWORD(v390[1]) = v419;
          *(void *)&v390[2] = 0x3233363232333731;
          *((void *)&v390[2] + 1) = 0xEB00000000373231;
          *(void *)&v390[3] = 0;
          BYTE8(v390[3]) = v417;
          HIDWORD(v390[3]) = *(_DWORD *)((char *)v416 + 3);
          *(_DWORD *)((char *)&v390[3] + 9) = v416[0];
          v390[4] = 0uLL;
          v390[5] = 0xF000000000000000;
          *(void *)&v390[6] = 0;
          *((void *)&v390[6] + 1) = 1;
          memset(&v390[7], 0, 64);
          LOBYTE(v390[11]) = 22;
          *(_DWORD *)((char *)&v390[11] + 1) = v415[0];
          DWORD1(v390[11]) = *(_DWORD *)((char *)v415 + 3);
          *((void *)&v390[11] + 1) = 0;
          *(void *)&v390[12] = 0;
          *((void *)&v390[12] + 1) = v384;
          LOBYTE(v390[13]) = 2;
          long long v162 = v390;
LABEL_37:
          sub_10006382C(v162);
          return 0;
        }
        int v106 = *(unsigned __int8 *)(v105 + 112);
      }
      if (v106 == 2)
      {
        BOOL v133 = sub_10010439C((uint64_t)v100, v104);
        sub_1000AC6D0(v104, &qword_100310B18);
        if (v133)
        {
          sub_100110A88((uint64_t)(v99 + 70), (uint64_t)v393, &qword_10030A860);
          LODWORD(v387) = *((unsigned __int8 *)v99 + 552);
          uint64_t v386 = (void *)v99[67];
          uint64_t v382 = (void *)v99[68];
          LODWORD(v381) = *((unsigned __int8 *)v99 + 528);
          uint64_t v380 = v99[64];
          uint64_t v379 = v99[65];
          long long v134 = *((_OWORD *)v99 + 31);
          long long v377 = *((_OWORD *)v99 + 30);
          long long v378 = v134;
          long long v135 = *((_OWORD *)v99 + 29);
          long long v375 = *((_OWORD *)v99 + 28);
          long long v376 = v135;
          long long v136 = *((_OWORD *)v99 + 27);
          long long v373 = *((_OWORD *)v99 + 26);
          long long v374 = v136;
          long long v137 = *((_OWORD *)v99 + 25);
          long long v371 = *((_OWORD *)v99 + 24);
          long long v372 = v137;
          long long v138 = *((_OWORD *)v99 + 23);
          long long v369 = *((_OWORD *)v99 + 22);
          long long v370 = v138;
          long long v139 = *((_OWORD *)v99 + 21);
          long long v367 = *((_OWORD *)v99 + 20);
          long long v368 = v139;
          long long v140 = *((_OWORD *)v99 + 19);
          long long v365 = *((_OWORD *)v99 + 18);
          long long v366 = v140;
          long long v364 = *((_OWORD *)v99 + 17);
          uint64_t v141 = v99[30];
          uint64_t v362 = (char *)v99[31];
          *(void *)&long long v363 = v141;
          long long v142 = *((_OWORD *)v99 + 14);
          long long v360 = *((_OWORD *)v99 + 13);
          long long v361 = v142;
          char v143 = *((unsigned char *)v99 + 200);
          uint64_t v144 = v99;
          uint64_t v145 = v99[23];
          uint64_t v146 = v144[24];
          long long v147 = *(_OWORD *)(v144 + 21);
          long long v358 = *(_OWORD *)(v144 + 19);
          long long v359 = v147;
          long long v148 = *(_OWORD *)(v144 + 17);
          long long v356 = *(_OWORD *)(v144 + 15);
          long long v357 = v148;
          long long v149 = *(_OWORD *)(v144 + 13);
          char v150 = *((unsigned char *)v144 + 96);
          uint64_t v151 = v86;
          uint64_t v153 = v144[10];
          uint64_t v152 = v144[11];
          long long v354 = *((_OWORD *)v144 + 4);
          long long v355 = v149;
          long long v154 = *((_OWORD *)v144 + 3);
          long long v352 = *((_OWORD *)v144 + 2);
          long long v353 = v154;
          long long v155 = *((_OWORD *)v144 + 1);
          long long v350 = *(_OWORD *)v144;
          long long v351 = v155;
          sub_1000C0148(v144);
          swift_bridgeObjectRelease();
          uint64_t v156 = *(void *)(v151 + 24);
          v389[0] = v350;
          v389[1] = v351;
          v389[2] = v352;
          v389[3] = v353;
          v389[4] = v354;
          *(void *)&v389[5] = v153;
          *((void *)&v389[5] + 1) = v152;
          LOBYTE(v389[6]) = v150;
          *(_OWORD *)((char *)&v389[6] + 8) = v355;
          *(_OWORD *)((char *)&v389[7] + 8) = v356;
          *(_OWORD *)((char *)&v389[8] + 8) = v357;
          *(_OWORD *)((char *)&v389[9] + 8) = v358;
          *(_OWORD *)((char *)&v389[10] + 8) = v359;
          *((void *)&v389[11] + 1) = v145;
          *(void *)&v389[12] = v146;
          BYTE8(v389[12]) = v143;
          v389[13] = v360;
          v389[14] = v361;
          *(void *)&v389[15] = v363;
          *((void *)&v389[15] + 1) = v362;
          v389[16] = xmmword_10025D3E0;
          v389[17] = v364;
          v389[18] = v365;
          v389[19] = v366;
          v389[20] = v367;
          v389[21] = v368;
          v389[22] = v369;
          v389[23] = v370;
          v389[24] = v371;
          v389[25] = v372;
          v389[26] = v373;
          v389[27] = v374;
          v389[28] = v375;
          v389[29] = v376;
          v389[30] = v377;
          v389[31] = v378;
          *(void *)&v389[32] = v380;
          *((void *)&v389[32] + 1) = v379;
          LOBYTE(v389[33]) = v381;
          *((void *)&v389[33] + 1) = v386;
          *(void *)&v389[34] = v382;
          BYTE8(v389[34]) = v387;
          sub_100110A88((uint64_t)v393, (uint64_t)&v389[35], &qword_10030A860);
          memcpy(v425, v389, 0x369uLL);
          swift_retain();
          uint64_t v157 = sub_1001AF734();
          uint64_t v159 = v158;
          sub_1000C0BBC(v389);
          sub_100062884(v156, v157, v159, (uint64_t)v391);
          goto LABEL_22;
        }
      }
      else
      {
        sub_1000AC6D0(v104, &qword_100310B18);
      }
    }
  }
  int v163 = *(unsigned __int8 *)(*(void *)(v86 + 24) + 112);
  sub_1001AFBC8();
  if (v163 == 3)
  {
    if (v164 > 1)
    {
      type metadata accessor for MultipleQuantitiesNotAllowedDialog();
      swift_allocObject();
      uint64_t v165 = sub_100151A54();
LABEL_29:
      uint64_t v166 = v165;
      swift_retain();
      swift_release();
      if (*(unsigned char *)(v86 + v387)) {
        char v167 = 3;
      }
      else {
        char v167 = 0;
      }
      v389[0] = 0uLL;
      *(void *)&v389[1] = _swiftEmptyArrayStorage;
      WORD4(v389[1]) = 1;
      *(void *)&v389[2] = 0x3233363232333731;
      *((void *)&v389[2] + 1) = 0xEB00000000373231;
      *(void *)&v389[3] = 0;
      BYTE8(v389[3]) = 1;
      v389[4] = 0uLL;
      v389[5] = 0xF000000000000000;
      *(void *)&v389[6] = 0;
      *((void *)&v389[6] + 1) = 1;
      memset(&v389[7], 0, 64);
      LOBYTE(v389[11]) = v167;
      *(void *)&v389[12] = 0;
      *((void *)&v389[11] + 1) = 0;
      *((void *)&v389[12] + 1) = v166;
      LOBYTE(v389[13]) = 1;
      sub_1000636BC(v389);
      swift_release();
      uint64_t v168 = v383;
      v383[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v168[4] = sub_1000C0578();
      uint64_t v169 = swift_allocObject();
      *uint64_t v168 = v169;
      memcpy((void *)(v169 + 16), v389, 0xD1uLL);
      v425[0] = 0uLL;
      *(void *)&v425[1] = _swiftEmptyArrayStorage;
      WORD4(v425[1]) = 1;
      *(void *)&v425[2] = 0x3233363232333731;
      *((void *)&v425[2] + 1) = 0xEB00000000373231;
      *(void *)&v425[3] = 0;
      BYTE8(v425[3]) = v417;
      v425[4] = 0uLL;
      v425[5] = 0xF000000000000000;
      *(void *)&v425[6] = 0;
      *((void *)&v425[6] + 1) = 1;
      memset(&v425[7], 0, 64);
      LOBYTE(v425[11]) = v167;
      *(void *)&v425[12] = 0;
      *((void *)&v425[11] + 1) = 0;
      *((void *)&v425[12] + 1) = v166;
      LOBYTE(v425[13]) = 1;
      goto LABEL_36;
    }
  }
  else if (v164 > 10)
  {
    type metadata accessor for InvalidQuantityDialog();
    swift_allocObject();
    uint64_t v165 = sub_100151920();
    goto LABEL_29;
  }
  uint64_t v170 = v99[62];
  uint64_t v171 = v99[63];
  if (v171)
  {
    sub_10024E040();
    if (sub_10001FA0C((uint64_t)v101, 1, v379) == 1)
    {
      sub_1000AC6D0((uint64_t)v101, &qword_10030C100);
      type metadata accessor for InvalidAppAccountTokenDialog();
      swift_allocObject();
      uint64_t v172 = sub_100151AB0();
      swift_retain();
      swift_release();
      v389[0] = 0uLL;
      *(void *)&v389[1] = _swiftEmptyArrayStorage;
      WORD4(v389[1]) = 1;
      *(void *)&v389[2] = 0x3233363232333731;
      *((void *)&v389[2] + 1) = 0xEB00000000373231;
      *(void *)&v389[3] = 0;
      BYTE8(v389[3]) = 1;
      v389[4] = 0uLL;
      v389[5] = 0xF000000000000000;
      *(void *)&v389[6] = 0;
      *((void *)&v389[6] + 1) = 1;
      memset(&v389[7], 0, 65);
      *(void *)&v389[12] = 0;
      *((void *)&v389[11] + 1) = 0;
      *((void *)&v389[12] + 1) = v172;
      LOBYTE(v389[13]) = 2;
      sub_1000636BC(v389);
      swift_release();
      uint64_t v173 = v383;
      v383[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v173[4] = sub_1000C0578();
      uint64_t v174 = swift_allocObject();
      uint64_t *v173 = v174;
      memcpy((void *)(v174 + 16), v389, 0xD1uLL);
      v425[0] = 0uLL;
      *(void *)&v425[1] = _swiftEmptyArrayStorage;
      WORD4(v425[1]) = 1;
      *(void *)&v425[2] = 0x3233363232333731;
      *((void *)&v425[2] + 1) = 0xEB00000000373231;
      *(void *)&v425[3] = 0;
      BYTE8(v425[3]) = v417;
      v425[4] = 0uLL;
      v425[5] = 0xF000000000000000;
      *(void *)&v425[6] = 0;
      *((void *)&v425[6] + 1) = 1;
      memset(&v425[7], 0, 65);
      *(void *)&v425[12] = 0;
      *((void *)&v425[11] + 1) = 0;
      *((void *)&v425[12] + 1) = v172;
      LOBYTE(v425[13]) = 2;
      goto LABEL_36;
    }
    sub_1000AC6D0((uint64_t)v101, &qword_10030C100);
  }
  uint64_t v347 = v171;
  uint64_t v345 = v170;
  uint64_t v176 = v100[9];
  unint64_t v349 = v100 + 6;
  sub_10001C2A8(v100 + 6, v176);
  *(void *)&long long v377 = sub_10008A5FC(*(void *)v86, *(void *)(v86 + 8));
  sub_100110A88((uint64_t)(v99 + 70), (uint64_t)v389, &qword_10030A860);
  sub_100110A88((uint64_t)v389, (uint64_t)v425, &qword_10030A860);
  if (sub_1000C066C((uint64_t)v425) == 1) {
    goto LABEL_45;
  }
  if (BYTE8(v425[19]) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v177 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if ((v177 & 1) == 0) {
      goto LABEL_45;
    }
  }
  sub_100110A88((uint64_t)(v99 + 60), (uint64_t)v424, &qword_10030AA30);
  sub_100110A88((uint64_t)v424, (uint64_t)&v426, &qword_10030AA30);
  uint64_t v178 = v427;
  if (v427)
  {
    uint64_t v179 = v426;
    uint64_t v180 = (void *)swift_allocObject();
    v180[2] = v100;
    v180[3] = v179;
    *(void *)&long long v351 = v180;
    v180[4] = v178;
    swift_retain();
    sub_1000562D8((uint64_t)v424);
    *(void *)&long long v350 = sub_100110970;
    goto LABEL_46;
  }
LABEL_45:
  *(void *)&long long v350 = 0;
  *(void *)&long long v351 = 0;
LABEL_46:
  uint64_t v181 = *(void *)(v86 + 24);
  type metadata accessor for OctaneSubscription();
  long long v182 = (void *)swift_dynamicCastClass();
  if (v182)
  {
    uint64_t v382 = v182;
    unint64_t v183 = v99[51];
    if (v183)
    {
      uint64_t v184 = v99[50];
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v198 = sub_100105284(v184, v183, (uint64_t)v382);
      swift_bridgeObjectRelease();
      uint64_t v346 = v198;
      if (v198)
      {
        uint64_t v195 = 0;
      }
      else
      {
        uint64_t v185 = (uint64_t *)v364;
        sub_1001107E0(v86, v364, &qword_100310B18);
        if (*(unsigned char *)(v86 + v387) == 1)
        {
          sub_1000AC6D0((uint64_t)v185, &qword_100310B18);
          uint64_t v186 = v382;
        }
        else
        {
          uint64_t v189 = *v185;
          uint64_t v190 = v185[1];
          uint64_t v191 = v184;
          uint64_t v186 = v382;
          *((void *)&v348 + 1) = v184;
          int v192 = v185;
          int v193 = sub_100104594(v191, v183, v189, v190, (uint64_t)v382, (uint64_t)v99);
          uint64_t v194 = (uint64_t)v192;
          uint64_t v184 = *((void *)&v348 + 1);
          sub_1000AC6D0(v194, &qword_100310B18);
          if (v193 != 22)
          {
            if ((*(unsigned char *)(v86 + 16) & 1) == 0)
            {
              type metadata accessor for UnableToPurchaseDialog();
              swift_allocObject();
              uint64_t v228 = sub_100151870();
              swift_release();
              uint64_t v384 = v228;
            }
            v391[0] = 0uLL;
            *(void *)&v391[1] = _swiftEmptyArrayStorage;
            WORD4(v391[1]) = 0;
            *(void *)&v391[2] = 0x3233363232333731;
            *((void *)&v391[2] + 1) = 0xEB00000000373231;
            *(void *)&v391[3] = 0;
            BYTE8(v391[3]) = 1;
            v391[4] = 0uLL;
            v391[5] = 0xF000000000000000;
            *(void *)&v391[6] = 0;
            *((void *)&v391[6] + 1) = 1;
            memset(&v391[7], 0, 64);
            LOBYTE(v391[11]) = 18;
            *(void *)&v391[12] = 0;
            *((void *)&v391[11] + 1) = 0;
            uint64_t v229 = v384;
            *((void *)&v391[12] + 1) = v384;
            LOBYTE(v391[13]) = 1;
            char v230 = v383;
            v383[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
            v230[4] = sub_1000C0578();
            uint64_t v231 = swift_allocObject();
            uint64_t v232 = (void *)(v231 + 16);
            *char v230 = v231;
            sub_1000636BC(v391);
            sub_10003C350(v350);
            swift_release();
            swift_release();
            memcpy(v232, v391, 0xD1uLL);
            v393[1] = 0;
            v393[0] = 0;
            v393[2] = _swiftEmptyArrayStorage;
            LOWORD(v394) = v420;
            uint64_t v395 = 0x3233363232333731;
            unint64_t v396 = 0xEB00000000373231;
            uint64_t v397 = 0;
            char v398 = v417;
            uint64_t v400 = 0;
            uint64_t v399 = 0;
            unint64_t v401 = 0xF000000000000000;
            uint64_t v402 = 0;
            uint64_t v403 = 0;
            uint64_t v404 = 1;
            long long v407 = 0u;
            long long v408 = 0u;
            long long v405 = 0u;
            long long v406 = 0u;
            char v409 = 18;
            uint64_t v410 = 0;
            uint64_t v411 = 0;
            uint64_t v412 = v229;
            char v413 = 1;
            long long v162 = v393;
            goto LABEL_37;
          }
        }
        uint64_t v195 = sub_100105714(v184, v183, (uint64_t)v186);
        uint64_t v346 = 0;
      }
    }
    else
    {
      swift_retain();
      uint64_t v195 = 0;
      uint64_t v346 = 0;
    }
    unint64_t v196 = v99[65];
    *((void *)&v348 + 1) = v195;
    if (v196)
    {
      uint64_t v197 = v99[64];
      swift_bridgeObjectRetain();
      uint64_t v199 = sub_1001058F8(v197, v196, (uint64_t)v382);
      swift_bridgeObjectRelease();
      uint64_t v200 = v199;
      LODWORD(v364) = *(unsigned __int8 *)(v86 + v387) ^ 1;
      uint64_t v195 = *((void *)&v348 + 1);
    }
    else
    {
      LODWORD(v364) = 0;
      uint64_t v200 = 0;
    }
    *(void *)&long long v348 = v200;
    uint64_t v201 = v368;
    uint64_t v342 = v181;
    if (v195 || v200 && LOBYTE(v200[13].isa) != 1)
    {
      sub_1001107E0(v86, v368, &qword_100310B18);
    }
    else
    {
      sub_1001107E0(v86, v368, &qword_100310B18);
      if (!v346)
      {
        sub_10001C2A8(v100 + 11, v100[14]);
        LODWORD(v343) = sub_10009FBA0() ^ 1;
LABEL_63:
        sub_1000AC6D0(v201, &qword_100310B18);
        *(void *)&long long v368 = v100 + 11;
        sub_100027788((uint64_t)(v100 + 11), (uint64_t)v393);
        sub_10001C2A8(v393, v394);
        uint64_t v344 = v86 + *(int *)(v380 + 44);
        uint64_t v202 = v369;
        sub_1001107E0(v344, v369, (uint64_t *)&unk_10030FD70);
        uint64_t v203 = v381;
        if (sub_10001FA0C(v202, 1, v381) == 1)
        {
          uint64_t v204 = v371;
          sub_10024E010();
          sub_1000AC6D0(v202, (uint64_t *)&unk_10030FD70);
          uint64_t v205 = v203;
          uint64_t v206 = v378;
        }
        else
        {
          uint64_t v206 = v378;
          uint64_t v204 = v371;
          (*(void (**)(void, uint64_t, uint64_t))(v378 + 32))(v371, v202, v203);
          uint64_t v205 = v203;
        }
        sub_100100BAC();
        uint64_t v207 = v204;
        uint64_t v209 = v208;
        long long v339 = *(void (**)(uint64_t, uint64_t))(v206 + 8);
        uint64_t v340 = v206 + 8;
        v339(v207, v205);
        uint64_t v210 = v373;
        if (v209)
        {
          sub_10001C2EC((uint64_t)v393);
          uint64_t v211 = sub_1000D427C();
          uint64_t v213 = sub_1000FE9DC(v211, v212);
          swift_bridgeObjectRelease();
          if (v213)
          {
            int v214 = sub_100027094((uint64_t)v382);
            if (v214)
            {
              if (v214 == 2)
              {
                uint64_t v215 = v386;
                sub_10001C2A8((void *)v368, v386[14]);
                id v175 = sub_10009DEA4(v213, (uint64_t)v382, v209);
                swift_release();

                uint64_t v216 = v215;
                uint64_t v341 = 0;
                uint64_t v188 = 0;
                LODWORD(v343) = 0;
LABEL_81:
                int v221 = 1;
                goto LABEL_95;
              }
LABEL_90:
              uint64_t v234 = v382[10];
              id v175 = v209;
              swift_bridgeObjectRetain();
              sub_1000D5B48(v234);
              swift_bridgeObjectRelease();
              sub_1000D5C00(5u);
              sub_1000D60E0(0, 0);
              if (v348 == 0)
              {
                uint64_t v216 = v386;
                if (!v346)
                {
LABEL_94:
                  sub_10001C2A8((void *)v368, v216[14]);
                  sub_1000A1278(v175, v364 & 1);

                  swift_release();
                  uint64_t v188 = v382[11];
                  uint64_t v341 = v382[10];
                  swift_bridgeObjectRetain();
                  LODWORD(v343) = 0;
                  int v221 = 0;
                  goto LABEL_95;
                }
              }
              else
              {
                uint64_t v216 = v386;
              }
              swift_retain();
              sub_1000D7A50();
              swift_release();
              goto LABEL_94;
            }
            if (!(void)v348) {
              goto LABEL_90;
            }
            id v175 = v209;
            sub_1000D63A4(2u);
            type metadata accessor for CannotRedeemOfferCodeDialog();
            swift_allocObject();
            uint64_t v233 = sub_100151464();
            swift_release();
            swift_release();

            uint64_t v341 = 0;
            uint64_t v188 = 0;
            LODWORD(v343) = 0;
            int v221 = 0;
            LODWORD(v369) = 1;
            LODWORD(v371) = 15;
            uint64_t v384 = v233;
LABEL_98:
            uint64_t v216 = v386;
            goto LABEL_99;
          }
        }
        else
        {
          sub_10001C2EC((uint64_t)v393);
        }
        uint64_t v216 = v386;
        sub_10001C2A8((void *)v368, v386[14]);
        sub_10009EA18();
        id v175 = v217;
        int v218 = *(unsigned __int8 *)(v86 + v387);
        uint64_t v219 = v365;
        sub_1001107E0(v86, v365, &qword_100310B18);
        if (v218 != 1)
        {
          sub_1000AC6D0(v219, &qword_100310B18);
          uint64_t v341 = 0;
          uint64_t v188 = 0;
          goto LABEL_81;
        }
        uint64_t v220 = v360;
        sub_1001107E0(v219 + *(int *)(v380 + 44), v360, (uint64_t *)&unk_10030FD70);
        sub_1000AC6D0(v219, &qword_100310B18);
        int v221 = 1;
        int v222 = sub_10001FA0C(v220, 1, v381);
        sub_1000AC6D0(v220, (uint64_t *)&unk_10030FD70);
        if (v222 == 1)
        {
          uint64_t v341 = 0;
          uint64_t v188 = 0;
LABEL_95:
          LODWORD(v369) = 2;
          LODWORD(v371) = 22;
LABEL_99:
          uint64_t v235 = v372;
          *(void *)&long long v365 = swift_allocObject();
          *(unsigned char *)(v365 + 16) = -8;
          if (v221)
          {
            if ((void)v348)
            {
              swift_retain();
              sub_1000D7A50();
              swift_release();
            }
            uint64_t v236 = v346;
            if (*((void *)&v348 + 1))
            {
              swift_retain();
              sub_1000D7A50();
              swift_release();
            }
            if (v236)
            {
              swift_retain();
              sub_1000D7A50();
              swift_release();
            }
            int v237 = sub_1000BDE68(v365, (uint64_t)v216);
            sub_1000D808C(v377, v237);
            sub_10001C2A8((void *)v368, v216[14]);
            sub_1000A1278(v175, v364 & 1);
          }
          if ((v343 & 1) != 0 && v382[17])
          {
            swift_retain();
            sub_1000D7A50();
            uint64_t v238 = v386;
            int v239 = sub_1000BDE68(v365, (uint64_t)v386);
            sub_1000D808C(v377, v239);
            sub_10001C2A8((void *)v368, v238[14]);
            sub_1000A1278(v175, v364 & 1);
            swift_release();
          }
          uint64_t v240 = v370;
          sub_1001107E0(v344, v370, (uint64_t *)&unk_10030FD70);
          if (sub_10001FA0C(v240, 1, v381) == 1)
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            sub_1000AC6D0(v240, (uint64_t *)&unk_10030FD70);
            swift_release();
            unint64_t v100 = v386;
          }
          else
          {
            sub_1000AC6D0(v240, (uint64_t *)&unk_10030FD70);
            sub_1000D9478(4);
            unint64_t v100 = v386;
            if (v241)
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
            else
            {
              *(void *)&long long v370 = v188;
              sub_1000D453C();
              sub_10024DF60();
              sub_10024DF60();
              sub_100027788(v368, (uint64_t)v393);
              long long v338 = sub_10001C2A8(v393, v394);
              int v242 = (void *)v382[25];
              *(void *)&long long v360 = v382[24];
              uint64_t v243 = *(void *)v86;
              uint64_t v343 = *(void *)(v86 + 8);
              uint64_t v344 = v243;
              sub_1001108E8((unint64_t *)&qword_10030E968, (void (*)(uint64_t))&type metadata accessor for Date);
              uint64_t v382 = v242;
              swift_bridgeObjectRetain();
              uint64_t v244 = v381;
              char v245 = sub_10024E5F0();
              id v337 = v175;
              if ((v245 & 1) == 0)
              {
                __break(1u);
                JUMPOUT(0x100103F10);
              }
              uint64_t v246 = v363;
              uint64_t v247 = v352;
              uint64_t v248 = v352 + *(int *)(v363 + 48);
              uint64_t v249 = v378;
              uint64_t v250 = *(void (**)(uint64_t, uint64_t, uint64_t))(v378 + 16);
              v250(v352, v210, v244);
              uint64_t v336 = v248;
              v250(v248, v235, v244);
              uint64_t v251 = v356;
              uint64_t v252 = v356 + *(int *)(v246 + 48);
              v250(v356, v247, v244);
              v250(v252, v248, v244);
              v253 = *(void (**)(uint64_t, uint64_t, uint64_t))(v249 + 32);
              uint64_t v254 = v354;
              v253(v354, v251, v244);
              char v255 = v339;
              v339(v252, v244);
              uint64_t v256 = v251 + *(int *)(v363 + 48);
              v253(v251, v247, v244);
              v253(v256, v336, v244);
              v253(v254 + *(int *)(v353 + 36), v256, v244);
              v255(v251, v244);
              uint64_t v257 = v355;
              sub_100110A88(v254, v355, &qword_10030E950);
              uint64_t v258 = v337;
              sub_1000D5AE4();
              LOBYTE(v247) = sub_1000A46B4();
              swift_bridgeObjectRelease();
              sub_1000AC6D0(v257, &qword_10030E950);
              sub_10001C2EC((uint64_t)v393);
              id v175 = v258;
              if (v247)
              {
                unint64_t v100 = v386;
                sub_10001C2A8((void *)v368, v386[14]);
                sub_10009F408();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                v255(v372, v244);
                v255(v373, v244);
                swift_release();
                LODWORD(v371) = 21;
                uint64_t v86 = v388;
                uint64_t v99 = v385;
              }
              else
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                v255(v372, v244);
                v255(v373, v244);
                swift_release();
                uint64_t v86 = v388;
                uint64_t v99 = v385;
                unint64_t v100 = v386;
              }
              uint64_t v188 = v370;
            }
          }
          goto LABEL_119;
        }
        sub_10001C2A8((void *)v368, v216[14]);
        swift_bridgeObjectRetain();
        sub_1000A4AE4();
        uint64_t v224 = v223;
        swift_bridgeObjectRelease();
        if (v224)
        {
          id v225 = v224;
          uint64_t v226 = sub_1000D5AE4();
          uint64_t v227 = sub_1000D5AE4();

          uint64_t v99 = v385;
          if (v226 == v227)
          {

            uint64_t v341 = 0;
            uint64_t v188 = 0;
            int v221 = 1;
            LODWORD(v369) = 2;
            LODWORD(v371) = 22;
            id v175 = v225;
          }
          else
          {

            uint64_t v341 = 0;
            uint64_t v188 = 0;
            int v221 = 1;
            LODWORD(v369) = 2;
            LODWORD(v371) = 22;
          }
        }
        else
        {
          uint64_t v341 = 0;
          uint64_t v188 = 0;
          int v221 = 1;
          LODWORD(v369) = 2;
          LODWORD(v371) = 22;
          uint64_t v99 = v385;
        }
        goto LABEL_98;
      }
    }
    LODWORD(v343) = 0;
    goto LABEL_63;
  }
  sub_10001C2A8(v100 + 11, v100[14]);
  sub_1001AFBC8();
  sub_10009DF90();
  id v175 = v187;
  LODWORD(v364) = 0;
  uint64_t v341 = 0;
  uint64_t v188 = 0;
  LODWORD(v369) = 2;
  LODWORD(v371) = 22;
LABEL_119:
  sub_100110A88((uint64_t)v389, (uint64_t)v393, &qword_10030A860);
  int v259 = sub_1000C066C((uint64_t)v393);
  *(void *)&long long v360 = v259 != 1;
  uint64_t v260 = v379;
  *(void *)&long long v370 = v188;
  if (v259 != 1)
  {
    sub_1000D79F4(v414);
    sub_100110A88((uint64_t)v389, (uint64_t)v391, &qword_10030A860);
    if ((v392 & 1) == 0)
    {
      uint64_t v345 = v99[42];
      uint64_t v347 = v99[43];
    }
    uint64_t v261 = v367;
    if (v347)
    {
      sub_10024E040();
      if (sub_10001FA0C(v261, 1, v260) == 1)
      {
        sub_1000AC6D0(v261, &qword_10030C100);
      }
      else
      {
        uint64_t v262 = v359;
        uint64_t v263 = v358;
        (*(void (**)(void, uint64_t, uint64_t))(v359 + 32))(v358, v261, v260);
        uint64_t v264 = v357;
        (*(void (**)(void, uint64_t, uint64_t))(v262 + 16))(v357, v263, v260);
        sub_1000195B4(v264, 0, 1, v260);
        sub_1000D834C();
        uint64_t v265 = v263;
        uint64_t v188 = v370;
        (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v265, v260);
      }
    }
  }
  switch(sub_1000D6528())
  {
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_129;
    default:
      char v266 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v266 & 1) == 0) {
        goto LABEL_131;
      }
LABEL_129:
      int v267 = (void *)v99[33];
      if (v267
        && (uint64_t v268 = v99[32],
            swift_bridgeObjectRetain(),
            v429._uint64_t countAndFlagsBits = v268,
            v429._object = v267,
            v269.value = sub_10024EB70(v429).value,
            v269.value != 2))
      {
        if ((v374 & !v269.value) != 0) {
          goto LABEL_132;
        }
      }
      else
      {
LABEL_131:
        if (v374)
        {
LABEL_132:
          BOOL v270 = v188 == 0;
          goto LABEL_135;
        }
      }
      BOOL v270 = 0;
LABEL_135:
      sub_10001C2A8(v349, v100[9]);
      uint64_t v271 = v99[8];
      uint64_t v272 = v99[9];
      uint64_t v278 = sub_10008A698(32, v271, v272, v273, v274, v275, v276, v277);
      if (v376)
      {
        LODWORD(v371) = 2;
        sub_1000D63A4(2u);
        LODWORD(v369) = 1;
        sub_1000D777C(1);
        swift_release();
        LODWORD(v387) = 0;
        *(void *)&long long v374 = 0;
        uint64_t v382 = 0;
        uint64_t v279 = 0;
        uint64_t v379 = 0;
        uint64_t v384 = 0;
        char v280 = 0;
        long long v378 = xmmword_10025C2E0;
        long long v281 = 0uLL;
        long long v376 = 0u;
        long long v368 = 0u;
        unint64_t v282 = 0xF000000000000000;
        *(void *)&long long v373 = _swiftEmptyArrayStorage;
        long long v366 = 0u;
        long long v367 = 0u;
        *(void *)&long long v372 = 0x3233363232333731;
        unint64_t v283 = 0xEB00000000373231;
        int v284 = 1;
        long long v365 = 0u;
LABEL_170:
        long long v363 = v281;
        goto LABEL_171;
      }
      if (v270)
      {
        sub_1000D62F0(0);
        sub_1000D63A4(4u);
        if ((*(unsigned char *)(v86 + 16) & 1) != 0 || !(void)v366)
        {
          swift_release();
          LODWORD(v387) = 0;
          *(void *)&long long v374 = 0;
          uint64_t v382 = 0;
          uint64_t v279 = 0;
          uint64_t v379 = 0;
          uint64_t v384 = 0;
          char v280 = 0;
          long long v378 = xmmword_10025C2E0;
          long long v281 = 0uLL;
          long long v376 = 0u;
          LODWORD(v369) = 1;
          long long v367 = 0u;
          long long v368 = 0u;
          LODWORD(v371) = 5;
          unint64_t v282 = 0xF000000000000000;
          *(void *)&long long v373 = _swiftEmptyArrayStorage;
          long long v366 = 0u;
          *(void *)&long long v372 = 0x3233363232333731;
          unint64_t v283 = 0xEB00000000373231;
        }
        else
        {
          sub_10001C2A8(v349, v100[9]);
          uint64_t v285 = *(void *)v86;
          uint64_t v286 = *(void **)(v86 + 8);
          swift_retain();
          sub_10008A7F0();
          unint64_t v287 = swift_bridgeObjectRetain();
          uint64_t v288 = sub_1000F072C(v287);
          swift_bridgeObjectRelease();
          if (v288)
          {
            uint64_t v289 = *(void *)(v288 + 32);
            uint64_t v290 = *(void **)(v288 + 40);
            swift_bridgeObjectRetain();
            swift_release();
          }
          else
          {
            uint64_t v289 = sub_10020F734();
            uint64_t v290 = v319;
          }
          uint64_t v320 = sub_1000D5AE4();
          type metadata accessor for AskToBuyDialog();
          swift_allocObject();
          swift_bridgeObjectRetain();
          uint64_t v321 = sub_10010DA38(v289, v290, v320, v285, v286, v366);
          swift_release();
          swift_release();
          LODWORD(v387) = 0;
          *(void *)&long long v374 = 0;
          uint64_t v382 = 0;
          uint64_t v279 = 0;
          uint64_t v379 = 0;
          char v280 = 0;
          long long v378 = xmmword_10025C2E0;
          long long v281 = 0uLL;
          long long v376 = 0u;
          LODWORD(v369) = 1;
          LODWORD(v371) = 5;
          long long v367 = 0u;
          long long v368 = 0u;
          unint64_t v282 = 0xF000000000000000;
          *(void *)&long long v373 = _swiftEmptyArrayStorage;
          *(void *)&long long v372 = 0x3233363232333731;
          long long v366 = 0u;
          unint64_t v283 = 0xEB00000000373231;
          uint64_t v384 = v321;
        }
        long long v365 = v281;
        int v284 = 1;
        goto LABEL_170;
      }
      if (v278 == 1)
      {
        if (*(unsigned char *)(v86 + v387)) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(v86 + 16) & 1) == 0)
        {
          sub_1000D63A4(4u);
          uint64_t v291 = sub_1000D427C();
          uint64_t v293 = v292;
          uint64_t v294 = sub_1001AF734();
          char v296 = v295;
          uint64_t v297 = v366;
          swift_retain();
          sub_100100194(v291, v293, v294, v296, v297, (uint64_t)v391);
          v390[0] = 0uLL;
          *(void *)&v390[1] = _swiftEmptyArrayStorage;
          WORD4(v390[1]) = v420;
          *(_DWORD *)((char *)&v390[1] + 10) = v418;
          HIWORD(v390[1]) = v419;
          *(void *)&v390[2] = 0x3233363232333731;
          *((void *)&v390[2] + 1) = 0xEB00000000373231;
          *(void *)&v390[3] = 0;
          BYTE8(v390[3]) = v417;
          HIDWORD(v390[3]) = *(_DWORD *)((char *)v416 + 3);
          *(_DWORD *)((char *)&v390[3] + 9) = v416[0];
          v390[4] = 0uLL;
          v390[5] = 0xF000000000000000;
          int v284 = 1;
          *(void *)&v390[6] = 0;
          *((void *)&v390[6] + 1) = 1;
          memset(&v390[7], 0, 64);
          LOBYTE(v390[11]) = v371;
          *(_DWORD *)((char *)&v390[11] + 1) = v415[0];
          DWORD1(v390[11]) = *(_DWORD *)((char *)v415 + 3);
          *((void *)&v390[11] + 1) = 0;
          *(void *)&v390[12] = 0;
          *((void *)&v390[12] + 1) = v384;
          LOBYTE(v390[13]) = v369;
          sub_10006382C(v390);
          sub_100110A88((uint64_t)&v391[4], (uint64_t)&v423, &qword_10030BAE0);
          long long v376 = v391[0];
          *(void *)&long long v373 = *(void *)&v391[1];
          unsigned __int8 v420 = BYTE8(v391[1]);
          LODWORD(v387) = BYTE9(v391[1]);
          int v418 = *(_DWORD *)((char *)&v391[1] + 10);
          __int16 v419 = HIWORD(v391[1]);
          unint64_t v283 = *((void *)&v391[2] + 1);
          *(void *)&long long v372 = *(void *)&v391[2];
          v416[0] = *(_DWORD *)((char *)&v391[3] + 9);
          *(_DWORD *)((char *)v416 + 3) = HIDWORD(v391[3]);
          uint64_t v279 = *((void *)&v391[4] + 1);
          unint64_t v282 = *(void *)&v391[5];
          long long v378 = *(_OWORD *)((char *)&v391[6] + 8);
          long long v367 = *(_OWORD *)((char *)&v391[7] + 8);
          long long v368 = *(_OWORD *)((char *)&v391[5] + 8);
          long long v365 = *(_OWORD *)((char *)&v391[9] + 8);
          long long v366 = *(_OWORD *)((char *)&v391[8] + 8);
          uint64_t v379 = *((void *)&v391[10] + 1);
          LODWORD(v371) = LOBYTE(v391[11]);
          v415[0] = *(_DWORD *)((char *)&v391[11] + 1);
          *(_DWORD *)((char *)v415 + 3) = DWORD1(v391[11]);
          long long v363 = *(_OWORD *)((char *)&v391[11] + 8);
          uint64_t v384 = *((void *)&v391[12] + 1);
          LODWORD(v369) = LOBYTE(v391[13]);
          uint64_t v298 = sub_100104FCC(v271, v272, v350, v351);
          sub_10005D0C8((uint64_t)&v423);
          char v280 = 0;
          uint64_t v382 = v298;
          *(void *)&long long v374 = v298[2];
          char v417 = 0;
LABEL_171:
          uint64_t v310 = v380;
          goto LABEL_172;
        }
      }
      else if (*(unsigned char *)(v86 + v387))
      {
        goto LABEL_151;
      }
      uint64_t v300 = *(void *)v86;
      uint64_t v299 = *(void *)(v86 + 8);
      sub_10001C2A8(v349, v100[9]);
      uint64_t v306 = sub_10008AEB4(1uLL, v300, v299, v301, v302, v303, v304, v305);
      if ((v307 & 1) == 0)
      {
        unint64_t v308 = v306;
        sub_1000D63A4(2u);
        LODWORD(v371) = sub_100098AA0(v308);
        swift_release();
        uint64_t v384 = 0;
        char v309 = *(unsigned char *)(v86 + 16);
        LODWORD(v369) = 1;
        *(void *)&long long v360 = 1;
        uint64_t v310 = v380;
        uint64_t v311 = (uint64_t)v362;
        uint64_t v312 = v361;
        if ((v309 & 1) == 0) {
          goto LABEL_156;
        }
        goto LABEL_152;
      }
LABEL_151:
      int v313 = *(unsigned __int8 *)(v86 + 16);
      uint64_t v310 = v380;
      uint64_t v311 = (uint64_t)v362;
      uint64_t v312 = v361;
      if (v313 != 1) {
        goto LABEL_156;
      }
LABEL_152:
      if (sub_1000D847C() != 2 && sub_1000D847C() != 1)
      {
        *(void *)&long long v360 = 1;
        sub_1000D63A4(1u);
      }
      swift_release();
      uint64_t v384 = 0;
LABEL_156:
      if (!sub_1000D847C())
      {
        *(void *)&long long v360 = 1;
        sub_1000D63A4(1u);
      }
      sub_100110A88((uint64_t)v389, (uint64_t)v391, &qword_10030A860);
      if (sub_1000C066C((uint64_t)v391) == 1)
      {
        char v280 = 0;
      }
      else
      {
        if (v392 == 1) {
          char v280 = sub_10024FA60();
        }
        else {
          char v280 = 1;
        }
        swift_bridgeObjectRelease();
      }
      id v314 = v175;
      uint64_t v315 = (void (*)(void *))v350;
      sub_10003C360(v350);
      sub_1001F99F0(v314, v315, v311);
      uint64_t v316 = v370;
      if ((void)v370)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v311 + 88) = v341;
        *(void *)(v311 + 96) = v316;
      }
      sub_100019524(&qword_10030A3E8);
      unint64_t v317 = (*(unsigned __int8 *)(v312 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v312 + 80);
      uint64_t v318 = (void *)swift_allocObject();
      *((_OWORD *)v318 + 1) = xmmword_100255FB0;
      sub_10011078C(v311, (uint64_t)v318 + v317, (void (*)(void))type metadata accessor for IAPTransaction);
      swift_bridgeObjectRelease();
      uint64_t v382 = v318;
      *(void *)&long long v374 = v318[2];
      char v417 = 0;
      sub_10011097C(v311, (void (*)(void))type metadata accessor for IAPTransaction);
      LODWORD(v387) = 0;
      uint64_t v279 = 0;
      uint64_t v379 = 0;
      long long v378 = xmmword_10025C2E0;
      long long v376 = 0u;
      unint64_t v282 = 0xF000000000000000;
      *(void *)&long long v373 = _swiftEmptyArrayStorage;
      *(void *)&long long v372 = 0x3233363232333731;
      unint64_t v283 = 0xEB00000000373231;
      long long v367 = 0u;
      long long v368 = 0u;
      long long v365 = 0u;
      long long v366 = 0u;
      long long v363 = 0u;
      int v284 = v360;
LABEL_172:
      if (*(unsigned char *)(*(void *)(v388 + 24) + 112) == 3 && (*(unsigned char *)(v388 + *(int *)(v310 + 48)) & 1) == 0)
      {
        sub_1000D5B48(0);
      }
      else if (!v284)
      {
        if ((v280 & 1) == 0) {
          goto LABEL_177;
        }
        goto LABEL_176;
      }
      sub_10001C2A8(v386 + 11, v386[14]);
      sub_1000A1278(v175, v364 & 1);
      if (v280)
      {
LABEL_176:
        uint64_t v322 = sub_100105060((uint64_t)v385);
        unint64_t v324 = v323;
        sub_10003F7F4(v279, v282);
        uint64_t v279 = v322;
        unint64_t v282 = v324;
      }
LABEL_177:
      uint64_t v325 = v388;
      uint64_t v326 = v388 + *(int *)(v310 + 44);
      uint64_t v327 = v310;
      uint64_t v328 = v375;
      sub_1001107E0(v326, v375, (uint64_t *)&unk_10030FD70);
      int v329 = sub_10001FA0C(v328, 1, v381);
      sub_1000AC6D0(v328, (uint64_t *)&unk_10030FD70);
      if (v329 != 1 && *(unsigned char *)(v325 + *(int *)(v327 + 48)) == 1)
      {
        sub_10001C2A8(v386 + 11, v386[14]);
        sub_1000A4DD0();
      }
      v390[0] = v376;
      *(void *)&v390[1] = v373;
      BYTE8(v390[1]) = v420;
      BYTE9(v390[1]) = v387;
      *(_DWORD *)((char *)&v390[1] + 10) = v418;
      HIWORD(v390[1]) = v419;
      *(void *)&v390[2] = v372;
      *((void *)&v390[2] + 1) = v283;
      *(void *)&v390[3] = v374;
      BYTE8(v390[3]) = v417;
      *(_DWORD *)((char *)&v390[3] + 9) = v416[0];
      HIDWORD(v390[3]) = *(_DWORD *)((char *)v416 + 3);
      *(void *)&v390[4] = v382;
      *((void *)&v390[4] + 1) = v279;
      *(_OWORD *)((char *)&v390[5] + 8) = v368;
      *(_OWORD *)((char *)&v390[6] + 8) = v378;
      *(_OWORD *)((char *)&v390[7] + 8) = v367;
      *(_OWORD *)((char *)&v390[8] + 8) = v366;
      *(_OWORD *)((char *)&v390[9] + 8) = v365;
      *(void *)&v390[5] = v282;
      *((void *)&v390[10] + 1) = v379;
      LOBYTE(v390[11]) = v371;
      *(_DWORD *)((char *)&v390[11] + 1) = v415[0];
      DWORD1(v390[11]) = *(_DWORD *)((char *)v415 + 3);
      *(_OWORD *)((char *)&v390[11] + 8) = v363;
      *((void *)&v390[12] + 1) = v384;
      LOBYTE(v390[13]) = v369;
      Swift::String v331 = v383;
      v383[3] = (uint64_t)&type metadata for LegacyInAppBuyResponse;
      v331[4] = sub_1000C0578();
      uint64_t v332 = swift_allocObject();
      uint64_t v333 = (void *)(v332 + 16);
      *Swift::String v331 = v332;
      sub_1000636BC(v390);
      sub_10003C350(v350);
      swift_release();
      swift_bridgeObjectRelease();
      sub_10006382C(v390);
      memcpy(v333, v390, 0xD1uLL);
      return v175;
  }
}

uint64_t sub_100103F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1001BCF7C();
  Class isa = sub_10024EB60().super.super.isa;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)isa, 0x7975426F546B7361, 0xEF64656C62616E45, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  Class v8 = sub_10024EB60().super.super.isa;
  uint64_t v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)v8, 0x4473676F6C616964, 0xEF64656C62617369, v9);
  swift_bridgeObjectRelease();
  Class v10 = sub_10024EB60().super.super.isa;
  uint64_t v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)v10, 0xD000000000000015, 0x800000010027D110, v11);
  swift_bridgeObjectRelease();
  Class v12 = sub_10024EB60().super.super.isa;
  uint64_t v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_10020D504((uint64_t)v12, 0xD000000000000012, 0x800000010027D130, v13);
  swift_bridgeObjectRelease();
  sub_1001AFBC8();
  Class v14 = sub_10024EC50().super.super.isa;
  uint64_t v15 = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = v5;
  sub_10020D504((uint64_t)v14, 0x797469746E617571, 0xE800000000000000, v15);
  uint64_t v16 = v5;
  swift_bridgeObjectRelease();
  sub_100110A88(a4 + 560, (uint64_t)v29, &qword_10030A860);
  sub_100110A88((uint64_t)v29, (uint64_t)v30, &qword_10030A860);
  if (sub_1000C066C((uint64_t)v30) != 1)
  {
    if ((v31 & 1) == 0) {
      sub_10024FA60();
    }
    swift_bridgeObjectRelease();
    Class v17 = sub_10024EB60().super.super.isa;
    uint64_t v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = v5;
    sub_10020D504((uint64_t)v17, 0x4B65726F74537369, 0xEB00000000327469, v18);
    uint64_t v16 = v33;
    swift_bridgeObjectRelease();
  }
  type metadata accessor for OctaneSubscription();
  if (swift_dynamicCastClass())
  {
    sub_100110A88(a4 + 448, (uint64_t)v28, &qword_10030AA30);
    sub_100110A88((uint64_t)v28, (uint64_t)&v33, &qword_10030AA30);
    Class v19 = sub_10024EB60().super.super.isa;
    uint64_t v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v16;
    sub_10020D504((uint64_t)v19, 0x6F6D6F7250736168, 0xED0000726566664FLL, v20);
    uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    sub_100110A88((uint64_t)v28, (uint64_t)&v32, &qword_10030AA30);
    Class v22 = sub_10024EB60().super.super.isa;
    uint64_t v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_10020D504((uint64_t)v22, 0x61626E6957736168, 0xEF726566664F6B63, v23);
    uint64_t v16 = v21;
    swift_bridgeObjectRelease();
  }
  sub_100110A88(a4 + 552, (uint64_t)&v27, &qword_10030ED60);
  sub_100110A88((uint64_t)&v27, (uint64_t)&v34, &qword_10030ED60);
  if (v34)
  {
    sub_1000C0F08();
    Class v24 = sub_10024EF30(1).super.super.isa;
    uint64_t v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_10020D504((uint64_t)v24, 0xD000000000000017, 0x800000010027D150, v25);
    swift_bridgeObjectRelease();
  }
  return v16;
}

BOOL sub_10010439C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10024E030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  Class v12 = (char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027788(a1 + 88, (uint64_t)v17);
  sub_10001C2A8(v17, v17[3]);
  uint64_t v13 = sub_100019524(&qword_100310B18);
  sub_1001107E0(a2 + *(int *)(v13 + 44), (uint64_t)v7, (uint64_t *)&unk_10030FD70);
  if (sub_10001FA0C((uint64_t)v7, 1, v8) == 1)
  {
    sub_10024E010();
    sub_1000AC6D0((uint64_t)v7, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  }
  Class v14 = (void *)sub_10009FE0C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v14) {

  }
  sub_10001C2EC((uint64_t)v17);
  return v14 != 0;
}

uint64_t sub_100104594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  uint64_t v10 = sub_100019524(&qword_10030C100);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v76 = a5;
  uint64_t v77 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)(a5 + 144);
  if (v13 >> 62) {
    goto LABEL_77;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  for (; v14; uint64_t v14 = sub_10024F6F0())
  {
    uint64_t v15 = 4;
    while (1)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = sub_10024F380();
      }
      else
      {
        uint64_t v16 = *(void *)(v13 + 8 * v15);
        swift_retain();
      }
      uint64_t v17 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      BOOL v18 = *(void *)(v16 + 96) == a1 && *(void *)(v16 + 104) == a2;
      if (v18 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        sub_100110A88(a6 + 416, (uint64_t)v86, &qword_10030AA30);
        sub_100110A88((uint64_t)v86, (uint64_t)&v93, &qword_10030AA30);
        uint64_t v24 = v94;
        if (v94)
        {
          uint64_t v25 = v93;
          sub_100110A88(a6 + 448, (uint64_t)v85, &qword_10030AA30);
          sub_100110A88((uint64_t)v85, (uint64_t)&v95, &qword_10030AA30);
          uint64_t v26 = v96;
          if (v96)
          {
            uint64_t v27 = v95;
            sub_100110A88(a6 + 464, (uint64_t)v84, &qword_10030AA30);
            sub_100110A88((uint64_t)v84, (uint64_t)&v97, &qword_10030AA30);
            uint64_t v28 = v98;
            if (v98)
            {
              uint64_t v75 = v97;
              sub_100110A88(a6 + 432, (uint64_t)v83, &qword_10030AA30);
              sub_100110A88((uint64_t)v83, (uint64_t)&v99, &qword_10030AA30);
              if (v100)
              {
                uint64_t v70 = v100;
                uint64_t v69 = v99;
                sub_100110A88(a6 + 560, (uint64_t)v82, &qword_10030A860);
                sub_100110A88((uint64_t)v82, (uint64_t)v101, &qword_10030A860);
                int v29 = sub_1000C066C((uint64_t)v101);
                uint64_t v72 = v27;
                uint64_t v73 = v26;
                uint64_t v74 = v25;
                uint64_t v71 = v28;
                if (v29 == 1) {
                  goto LABEL_48;
                }
                if ((v101[312] & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_46;
                }
                char v38 = sub_10024FA60();
                swift_bridgeObjectRelease();
                if ((v38 & 1) == 0)
                {
LABEL_48:
                  sub_100110A88(a6 + 496, (uint64_t)v81, &qword_10030AA30);
                  sub_100110A88((uint64_t)v81, (uint64_t)v102, &qword_10030AA30);
                  if (v102[1])
                  {
                    uint64_t v41 = v77;
                    sub_10024E040();
                    uint64_t v42 = sub_10024E0A0();
                    int v43 = sub_10001FA0C(v41, 1, v42);
                    uint64_t v44 = v78;
                    if (v43 != 1)
                    {
                      uint64_t v45 = sub_10024E050();
                      uint64_t v47 = v46;
                      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
                      uint64_t v87 = v45;
                      uint64_t v88 = v47;
                      sub_10001DAC0();
                      uint64_t v39 = sub_10024F150();
                      unint64_t v40 = v48;
                      swift_bridgeObjectRelease();
                      goto LABEL_55;
                    }
                  }
                  else
                  {
                    uint64_t v49 = sub_10024E0A0();
                    uint64_t v41 = v77;
                    sub_1000195B4(v77, 1, 1, v49);
                    uint64_t v44 = v78;
                  }
                  sub_1000AC6D0(v41, &qword_10030C100);
                  uint64_t v39 = 0;
                  unint64_t v40 = 0xE000000000000000;
                }
                else
                {
LABEL_46:
                  if (*(void *)(a6 + 344))
                  {
                    uint64_t v39 = *(void *)(a6 + 336);
                    unint64_t v40 = *(void *)(a6 + 344);
                  }
                  else
                  {
                    uint64_t v39 = 0;
                    unint64_t v40 = 0xE000000000000000;
                  }
                  uint64_t v44 = v78;
                  swift_bridgeObjectRetain();
                }
LABEL_55:
                sub_10001C2A8((void *)(v44 + 48), *(void *)(v44 + 72));
                uint64_t v50 = (void *)sub_10008A5FC(v79, v80);
                uint64_t v51 = v50;
                uint64_t v52 = v50[10];
                if (v52)
                {
                  uint64_t v77 = v39;
                  unint64_t v78 = v40;
                  uint64_t v53 = v50[9];
                  uint64_t v55 = v50[11];
                  uint64_t v54 = v50[12];
                  uint64_t v56 = v50[13];
                  uint64_t v57 = v50[14];
                  uint64_t v87 = v53;
                  uint64_t v88 = v52;
                  uint64_t v89 = v55;
                  uint64_t v90 = v54;
                  uint64_t v91 = v56;
                  uint64_t v92 = v57;
                  BOOL v58 = (void *)v53 == v74 && v52 == v24;
                  if (v58 || (v74 = v50, v59 = sub_10024FA60(), uint64_t v51 = v74, (v59 & 1) != 0))
                  {
                    uint64_t v61 = *(void *)(v76 + 80);
                    uint64_t v60 = *(void *)(v76 + 88);
                    sub_1000C0690(v53, v52);
                    swift_bridgeObjectRetain();
                    char v62 = sub_1001B99A4(v72, v73, v79, v80, v61, v60, a1, a2, v77, v78, v69, v70, v75, v71, &v87);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v62) {
                      return 22;
                    }
                    else {
                      return 18;
                    }
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                if (v51[10])
                {
                  if (qword_100308DE0 != -1) {
                    swift_once();
                  }
                  uint64_t v63 = sub_10024E1F0();
                  sub_10001B0E8(v63, (uint64_t)qword_10034C0E0);
                  char v31 = sub_10024E1D0();
                  os_log_type_t v64 = sub_10024EE10();
                  if (os_log_type_enabled(v31, v64))
                  {
                    uint64_t v65 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v65 = 0;
                    uint64_t v66 = "Key ID doesn't match stored value";
                    goto LABEL_74;
                  }
LABEL_75:

                  swift_release();
                  return 17;
                }
                if (qword_100308DE0 != -1) {
                  swift_once();
                }
                uint64_t v67 = sub_10024E1F0();
                sub_10001B0E8(v67, (uint64_t)qword_10034C0E0);
                char v31 = sub_10024E1D0();
                os_log_type_t v64 = sub_10024EE10();
                if (!os_log_type_enabled(v31, v64)) {
                  goto LABEL_75;
                }
                uint64_t v65 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v65 = 0;
                uint64_t v66 = "Missing key pair set";
LABEL_74:
                _os_log_impl((void *)&_mh_execute_header, v31, v64, v66, v65, 2u);
                swift_slowDealloc();
                swift_release();
LABEL_43:

                return 17;
              }
              if (qword_100308DE0 != -1) {
                swift_once();
              }
              uint64_t v37 = sub_10024E1F0();
              sub_10001B0E8(v37, (uint64_t)qword_10034C0E0);
              char v31 = sub_10024E1D0();
              os_log_type_t v32 = sub_10024EE10();
              if (!os_log_type_enabled(v31, v32)) {
                goto LABEL_43;
              }
              uint64_t v33 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v33 = 0;
              char v34 = "Missing offer nonce";
            }
            else
            {
              if (qword_100308DE0 != -1) {
                swift_once();
              }
              uint64_t v36 = sub_10024E1F0();
              sub_10001B0E8(v36, (uint64_t)qword_10034C0E0);
              char v31 = sub_10024E1D0();
              os_log_type_t v32 = sub_10024EE10();
              if (!os_log_type_enabled(v31, v32)) {
                goto LABEL_43;
              }
              uint64_t v33 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v33 = 0;
              char v34 = "Missing timestamp";
            }
          }
          else
          {
            if (qword_100308DE0 != -1) {
              swift_once();
            }
            uint64_t v35 = sub_10024E1F0();
            sub_10001B0E8(v35, (uint64_t)qword_10034C0E0);
            char v31 = sub_10024E1D0();
            os_log_type_t v32 = sub_10024EE10();
            if (!os_log_type_enabled(v31, v32)) {
              goto LABEL_43;
            }
            uint64_t v33 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v33 = 0;
            char v34 = "Missing signature";
          }
        }
        else
        {
          if (qword_100308DE0 != -1) {
            swift_once();
          }
          uint64_t v30 = sub_10024E1F0();
          sub_10001B0E8(v30, (uint64_t)qword_10034C0E0);
          char v31 = sub_10024E1D0();
          os_log_type_t v32 = sub_10024EE10();
          if (!os_log_type_enabled(v31, v32)) {
            goto LABEL_43;
          }
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          char v34 = "Missing offer key ID";
        }
        _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
        swift_slowDealloc();
        goto LABEL_43;
      }
      swift_release();
      ++v15;
      if (v17 == v14) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_77:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10024E1F0();
  sub_10001B0E8(v19, (uint64_t)qword_10034C0E0);
  uint64_t v20 = sub_10024E1D0();
  os_log_type_t v21 = sub_10024EE10();
  if (os_log_type_enabled(v20, v21))
  {
    Class v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Class v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Invalid offer ID", v22, 2u);
    swift_slowDealloc();
  }

  return 15;
}