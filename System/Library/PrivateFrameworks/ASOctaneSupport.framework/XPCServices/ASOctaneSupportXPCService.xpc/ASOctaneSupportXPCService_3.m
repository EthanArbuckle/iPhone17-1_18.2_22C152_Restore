unint64_t sub_1001881D0()
{
  unint64_t result;

  result = qword_100315F98;
  if (!qword_100315F98)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315F98);
  }
  return result;
}

unint64_t sub_100188220()
{
  unint64_t result = qword_100315FA0;
  if (!qword_100315FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100315FA0);
  }
  return result;
}

unint64_t sub_100188270()
{
  unint64_t result = qword_100315FA8[0];
  if (!qword_100315FA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100315FA8);
  }
  return result;
}

uint64_t sub_1001882BC()
{
  return v0;
}

uint64_t sub_1001882D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10024E450();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1001883BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = sub_10024E450();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  uint64_t v36 = v9;
  unint64_t v14 = (v9 + v12 + ((v8 + 72) & ~v8)) & ~(unint64_t)v12;
  uint64_t v15 = *(void *)(v11 + 64) + 7;
  int v16 = (v12 | v7) & 0x100000;
  if ((v13 | (unint64_t)v7) > 7 || v16 != 0 || ((v15 + v14) & 0xFFFFFFFFFFFFFFF8) + 10 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19
                   + (((v13 | v7) & 0xF8 ^ 0x1F8) & ((v13 | v7) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v34 = ~v13;
    uint64_t v35 = v10;
    uint64_t v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    uint64_t v21 = a2[3];
    a1[2] = a2[2];
    a1[3] = v21;
    uint64_t v22 = a2[5];
    a1[4] = a2[4];
    a1[5] = v22;
    uint64_t v23 = a2[7];
    a1[6] = a2[6];
    a1[7] = v23;
    uint64_t v33 = ((unint64_t)a1 + v8 + 72) & ~v8;
    a1[8] = a2[8];
    uint64_t v24 = ((unint64_t)a2 + v8 + 72) & ~v8;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v33, v24, v5);
    uint64_t v26 = v36 + v13;
    uint64_t v27 = (v33 + v36 + v13) & ~v13;
    uint64_t v28 = (v24 + v26) & v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v27, v28, v35);
    unint64_t v29 = (v15 + v27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v15 + v28) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = *(void *)v30;
    *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
    *(void *)unint64_t v29 = v31;
    *(unsigned char *)(v29 + 9) = *(unsigned char *)(v30 + 9);
  }
  return a1;
}

uint64_t sub_100188610(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = sub_10024E450();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = v8;
  unint64_t v12 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return v10(v12, v11);
}

void *sub_1001886FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  a1[8] = a2[8];
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  uint64_t v10 = *(void *)(v8 - 8) + 16;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v12 = ((unint64_t)a1 + v11 + 72) & ~v11;
  uint64_t v13 = ((unint64_t)a2 + v11 + 72) & ~v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v12, v13, v8);
  uint64_t v14 = *(void *)(v10 + 48);
  uint64_t v15 = sub_10024E450();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v14 + v18;
  uint64_t v20 = (v14 + v18 + v12) & ~v18;
  uint64_t v21 = (v19 + v13) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v21, v15);
  uint64_t v22 = *(void *)(v17 + 48) + 7;
  unint64_t v23 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v22 + v21) & 0xFFFFFFFFFFFFFFF8;
  char v25 = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = v25;
  *(unsigned char *)(v23 + 9) = *(unsigned char *)(v24 + 9);
  return a1;
}

void *sub_100188864(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 72) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 72) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = sub_10024E450();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v16, v17, v12);
  uint64_t v18 = *(void *)(v14 + 40) + 7;
  unint64_t v19 = (v18 + v16) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v18 + v17) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  *(unsigned char *)(v19 + 9) = *(unsigned char *)(v20 + 9);
  return a1;
}

void *sub_100188A0C(void *a1, const void *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x48uLL);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 72) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 72) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32);
  uint64_t v12 = sub_10024E450();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v17, v12);
  uint64_t v18 = *(void *)(v14 + 32) + 7;
  unint64_t v19 = (v18 + v16) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v18 + v17) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  *(unsigned char *)(v19 + 9) = *(unsigned char *)(v20 + 9);
  return a1;
}

void *sub_100188B24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)a1 + v12 + 72) & ~v12;
  uint64_t v14 = ((unint64_t)a2 + v12 + 72) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 24);
  uint64_t v16 = sub_10024E450();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v17 + 40;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (v15 + v19 + v13) & ~v19;
  uint64_t v21 = (v15 + v19 + v14) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(v20, v21, v16);
  uint64_t v22 = *(void *)(v18 + 24) + 7;
  unint64_t v23 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v22 + v21) & 0xFFFFFFFFFFFFFFF8;
  char v25 = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = v25;
  *(unsigned char *)(v23 + 9) = *(unsigned char *)(v24 + 9);
  return a1;
}

uint64_t sub_100188C84(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_10024E450();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = v7;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v16 = v8;
  if (v12 < a2)
  {
    unint64_t v17 = ((*(void *)(*(void *)(v8 - 8) + 64) + ((v14 + v15 + ((v13 + 72) & ~v13)) & ~v15) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 10;
    if (v17 <= 3) {
      unsigned int v18 = ((a2 - v12 + 0xFFFF) >> (8 * v17)) + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      LODWORD(v19) = 4;
    }
    else {
      LODWORD(v19) = 2;
    }
    if (v18 < 0x100) {
      LODWORD(v19) = 1;
    }
    if (v18 >= 2) {
      uint64_t v19 = v19;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v17);
        if (!*((unsigned char *)a1 + v17)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v17);
        if (*(unsigned __int16 *)((char *)a1 + v17)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100188ED4);
      case 4:
        int v20 = *(_DWORD *)((char *)a1 + v17);
        if (!v20) {
          break;
        }
LABEL_25:
        BOOL v22 = v17 > 3;
        if (v17 <= 3) {
          int v23 = (v20 - 1) << (8 * v17);
        }
        else {
          int v23 = 0;
        }
        if (v22) {
          int v26 = *(_DWORD *)a1;
        }
        else {
          int v26 = *a1;
        }
        return v12 + (v26 | v23) + 1;
      default:
        break;
    }
  }
  if ((v11 & 0x80000000) != 0)
  {
    uint64_t v25 = ((unint64_t)a1 + v13 + 72) & ~v13;
    if (v7 == v12)
    {
      uint64_t v10 = v7;
      uint64_t v16 = v5;
    }
    else
    {
      uint64_t v25 = (v25 + v14 + v15) & ~v15;
    }
    return sub_10001FA0C(v25, v10, v16);
  }
  else
  {
    unint64_t v24 = *((void *)a1 + 1);
    if (v24 >= 0xFFFFFFFF) {
      LODWORD(v24) = -1;
    }
    return (v24 + 1);
  }
}

void sub_100188EE8(unsigned int *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = sub_10024E450();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  size_t v18 = ((*(void *)(*(void *)(v10 - 8) + 64) + ((v16 + v17 + ((v15 + 72) & ~v15)) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 10;
  if (v14 >= a3)
  {
    int v21 = 0;
  }
  else
  {
    if (v18 <= 3) {
      unsigned int v19 = ((a3 - v14 + 0xFFFF) >> (8 * v18)) + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
  }
  if (v14 < a2)
  {
    unsigned int v22 = ~v14 + a2;
    bzero(a1, v18);
    if (v18 <= 3) {
      int v23 = (v22 >> (8 * v18)) + 1;
    }
    else {
      int v23 = 1;
    }
    if (v18 > 3) {
      *a1 = v22;
    }
    else {
      *(_WORD *)a1 = v22;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)a1 + v18) = v23;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v18) = v23;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(unsigned int *)((char *)a1 + v18) = v23;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)((char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1001891A8);
    case 4:
      *(unsigned int *)((char *)a1 + v18) = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if ((v13 & 0x80000000) != 0)
        {
          uint64_t v24 = ((unint64_t)a1 + v15 + 72) & ~v15;
          if (v9 == v14)
          {
            uint64_t v25 = a2;
            uint64_t v12 = v9;
            uint64_t v10 = v7;
          }
          else
          {
            uint64_t v24 = (v24 + v16 + v17) & ~v17;
            uint64_t v25 = a2;
          }
          sub_1000195B4(v24, v25, v12, v10);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(a1 + 10) = 0u;
          *(_OWORD *)(a1 + 6) = 0u;
          *(_OWORD *)(a1 + 2) = 0u;
          *(_OWORD *)(a1 + 14) = 0u;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for JWS()
{
  return sub_10002F7A4();
}

void sub_1001891E8()
{
  sub_1000EA748();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  v88 = v5;
  uint64_t v87 = sub_10024E490();
  sub_10001B550();
  uint64_t v86 = v6;
  __chkstk_darwin(v7, v8);
  sub_1000589AC();
  unint64_t v92 = v9;
  sub_10024E6F0();
  sub_10001B550();
  uint64_t v94 = v11;
  uint64_t v95 = v10;
  __chkstk_darwin(v10, v12);
  sub_1000589AC();
  unint64_t v93 = v13;
  sub_10024E0A0();
  sub_10001B550();
  v90 = v15;
  unint64_t v91 = v14;
  __chkstk_darwin(v14, v16);
  sub_1000589AC();
  uint64_t v89 = v17;
  uint64_t v18 = sub_10024D9C0();
  sub_10001B550();
  uint64_t v20 = v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024DA00();
  swift_allocObject();
  uint64_t v25 = sub_10024D9F0();
  if (qword_100308CF0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10001B0E8(v18, (uint64_t)qword_10034C010);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v24, v26, v18);
  sub_10024D9D0();
  uint64_t v27 = *(void **)(v2 + 8);
  uint64_t v28 = *(void *)(v2 + 16);
  uint64_t v29 = *(void *)(v2 + 24);
  uint64_t v30 = *(void *)(v2 + 32);
  uint64_t v31 = *(void *)(v2 + 40);
  uint64_t v32 = *(void *)(v2 + 64);
  uint64_t v102 = *(void *)v2;
  v103 = v27;
  uint64_t v104 = v28;
  uint64_t v105 = v29;
  uint64_t v106 = v30;
  uint64_t v107 = v31;
  long long v108 = *(_OWORD *)(v2 + 48);
  uint64_t v109 = v32;
  uint64_t v33 = v25;
  uint64_t v97 = v4;
  uint64_t v34 = *(void *)(v4 + 16);
  uint64_t v35 = *(void **)(v4 + 24);
  uint64_t v96 = v34;
  type metadata accessor for JWS.Header();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v36 = sub_10024D9E0();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v85 = v35;
    uint64_t v84 = v36;
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v39 = v38;
    uint64_t v102 = sub_10024DF00(0);
    v103 = v40;
    uint64_t v100 = 43;
    unint64_t v101 = 0xE100000000000000;
    uint64_t v98 = 45;
    unint64_t v99 = 0xE100000000000000;
    unint64_t v41 = sub_10001DAC0();
    uint64_t v42 = sub_10024F170();
    v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v102 = v42;
    v103 = v44;
    uint64_t v100 = 47;
    unint64_t v101 = 0xE100000000000000;
    uint64_t v98 = 95;
    unint64_t v99 = 0xE100000000000000;
    uint64_t v45 = sub_10018B36C();
    v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v102 = v45;
    v103 = v47;
    uint64_t v100 = 61;
    unint64_t v101 = 0xE100000000000000;
    uint64_t v98 = 0;
    unint64_t v99 = 0xE000000000000000;
    uint64_t v48 = sub_10018B36C();
    v50 = v49;
    swift_bridgeObjectRelease();
    sub_10003F808(v84, v39);
    uint64_t v51 = sub_10024D9E0();
    unint64_t v53 = v52;
    uint64_t v84 = v48;
    v83 = v50;
    uint64_t v96 = v33;
    uint64_t v54 = sub_10024DF00(0);
    v56 = v55;
    uint64_t v102 = v54;
    v103 = v55;
    uint64_t v100 = 43;
    unint64_t v101 = 0xE100000000000000;
    uint64_t v98 = 45;
    unint64_t v99 = 0xE100000000000000;
    sub_10018B36C();
    sub_10018B460();
    uint64_t v102 = 0;
    v103 = (void *)v48;
    uint64_t v100 = 47;
    unint64_t v101 = 0xE100000000000000;
    uint64_t v98 = 95;
    unint64_t v99 = 0xE100000000000000;
    sub_10018B36C();
    sub_10018B440();
    uint64_t v102 = 0;
    v103 = v56;
    uint64_t v100 = 61;
    unint64_t v101 = 0xE100000000000000;
    uint64_t v98 = 0;
    unint64_t v99 = 0xE000000000000000;
    uint64_t v82 = sub_10018B36C();
    v58 = v57;
    swift_bridgeObjectRelease();
    sub_10003F808(v51, v53);
    uint64_t v59 = v2 + *(int *)(v97 + 44);
    char v60 = *(unsigned char *)(v59 + 8);
    v85 = v58;
    if ((v60 & 1) != 0 || *(void *)v59 != 21)
    {
      uint64_t v102 = v84;
      v103 = v83;
      swift_bridgeObjectRetain();
      v110._countAndFlagsBits = 46;
      v110._object = (void *)0xE100000000000000;
      sub_10024E800(v110);
      swift_bridgeObjectRetain();
      v111._countAndFlagsBits = v82;
      v111._object = v58;
      sub_10024E800(v111);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v61 = v89;
      sub_10024E090();
      sub_10024E050();
      ((void (*)(uint64_t, unint64_t))v90[1])(v61, v91);
    }
    unint64_t v62 = v93;
    sub_10024E6E0();
    uint64_t v63 = sub_10024E6C0();
    unint64_t v65 = v64;
    uint64_t v67 = v94;
    uint64_t v66 = v95;
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v62, v66);
    if (v65 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100119888();
      swift_allocError();
      swift_willThrow();
      swift_release();
    }
    else
    {
      uint64_t v102 = v63;
      v103 = (void *)v65;
      sub_1000473AC(v63, v65);
      sub_10003F860();
      sub_10024E440();
      uint64_t v68 = sub_10024E480();
      uint64_t v97 = v63;
      uint64_t v69 = v68;
      unint64_t v71 = v70;
      uint64_t v72 = sub_10024DF00(0);
      v74 = v73;
      uint64_t v102 = v72;
      v103 = v73;
      uint64_t v100 = 43;
      unint64_t v101 = 0xE100000000000000;
      uint64_t v98 = 45;
      unint64_t v99 = 0xE100000000000000;
      unint64_t v92 = v41;
      unint64_t v93 = v41;
      v90 = &type metadata for String;
      unint64_t v91 = v41;
      sub_10024F170();
      sub_10018B460();
      uint64_t v102 = (uint64_t)&v102;
      v103 = &type metadata for String;
      uint64_t v100 = 47;
      unint64_t v101 = 0xE100000000000000;
      uint64_t v98 = 95;
      unint64_t v99 = 0xE100000000000000;
      sub_10018B36C();
      sub_10018B440();
      uint64_t v102 = (uint64_t)&v102;
      v103 = v74;
      uint64_t v100 = 61;
      unint64_t v101 = 0xE100000000000000;
      uint64_t v98 = 0;
      unint64_t v99 = 0xE000000000000000;
      uint64_t v75 = sub_10018B36C();
      uint64_t v77 = v76;
      swift_bridgeObjectRelease();
      sub_10003F808(v69, v71);
      uint64_t v78 = v97;
      sub_10003F7F4(v97, v65);
      swift_release();
      sub_10003F7F4(v78, v65);
      (*(void (**)(unint64_t, uint64_t))(v86 + 8))(v92, v87);
      v79 = v88;
      v80 = v83;
      void *v88 = v84;
      v79[1] = v80;
      v81 = v85;
      v79[2] = v82;
      v79[3] = v81;
      v79[4] = v75;
      v79[5] = v77;
    }
  }
  sub_1000EA730();
}

Swift::Int sub_100189A14()
{
  sub_10024FC00();
  NIOHTTPObjectAggregatorEvent.hash(into:)((uint64_t)v2, *v0);
  return sub_10024FC70();
}

uint64_t sub_100189A54(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9170;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_100189AA4(char a1)
{
  uint64_t result = 6777953;
  switch(a1)
  {
    case 1:
      uint64_t result = 6580587;
      break;
    case 2:
      uint64_t result = 7371124;
      break;
    case 3:
      uint64_t result = 6501752;
      break;
    case 4:
      uint64_t result = 0x676E696666757473;
      break;
    default:
      return result;
  }
  return result;
}

void sub_100189B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000EA748();
  a19 = v22;
  a20 = v23;
  uint64_t v36 = v21;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  type metadata accessor for JWS.Header.CodingKeys();
  swift_getWitnessTable();
  uint64_t v27 = sub_10024F9A0();
  sub_10001B550();
  uint64_t v29 = v28;
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v35 - v32;
  sub_10001C2A8(v26, v26[3]);
  sub_10024FD40();
  char v38 = 0;
  uint64_t v34 = v36;
  sub_10024F940();
  if (!v34)
  {
    sub_10018B3FC(1);
    sub_10018B3FC(2);
    sub_10018B1BC(v24 + 48, (uint64_t)&a10);
    sub_10018B1BC((uint64_t)&a10, (uint64_t)&v38);
    char v37 = 3;
    sub_100019524(&qword_100309410);
    sub_10001FC58((unint64_t *)&qword_100309418);
    sub_10024F910();
    char v38 = 4;
    sub_10024F8D0();
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v27);
  sub_1000EA730();
}

void sub_100189D30()
{
  sub_1000EA748();
  uint64_t v2 = v1;
  uint64_t v16 = v3;
  type metadata accessor for JWS.Header.CodingKeys();
  swift_getWitnessTable();
  sub_10024F8A0();
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_10001C2A8(v2, v2[3]);
  sub_10024FD20();
  if (v0)
  {
    sub_10001C2EC((uint64_t)v2);
    swift_bridgeObjectRelease();
    sub_10018B420();
  }
  else
  {
    uint64_t v6 = sub_10024F830();
    uint64_t v8 = v7;
    uint64_t v15 = v6;
    sub_100019524(&qword_100309410);
    sub_10001FC58(&qword_100309438);
    swift_bridgeObjectRetain();
    sub_10024F800();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10024F7C0();
    uint64_t v11 = v10;
    uint64_t v12 = v9;
    uint64_t v13 = sub_10018B3C8();
    v14(v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10001C2EC((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10018B420();
    swift_bridgeObjectRelease();
    *uint64_t v16 = v15;
    v16[1] = v8;
    v16[2] = 0x63585F656C707041;
    v16[3] = 0xEF79654B5F65646FLL;
    v16[4] = 5527370;
    v16[5] = 0xE300000000000000;
    v16[6] = v17;
    v16[7] = v12;
    v16[8] = v11;
  }
  sub_1000EA730();
}

uint64_t sub_10018A050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A0C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A210@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100189A54(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10018A248@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10018A6F4(a1, (uint64_t (*)(void, void, void))sub_100189AA4, a2);
}

uint64_t sub_10018A260()
{
  return sub_100189B28(*v0);
}

uint64_t sub_10018A26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_100189AA0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_10018A29C(uint64_t a1, uint64_t a2)
{
  return sub_10018A780(a1, a2, (uint64_t (*)(void, void, void))j___s25ASOctaneSupportXPCService20MarkedCircularBufferV18_markedIndexOffsetSiSgvpfi);
}

uint64_t sub_10018A2B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static NIOHTTPObjectAggregatorError.unexpectedMessageEnd.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10018A2E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10018A338(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10018A38C(void *a1@<X8>)
{
  sub_100189D30();
  if (!v1) {
    memcpy(a1, __src, 0x48uLL);
  }
}

void sub_10018A3E0(uint64_t a1, uint64_t a2)
{
  memcpy(__dst, v2, 0x48uLL);
  sub_100189B2C(a1, a2, v5, v6, v7, v8, v9, v10, v11, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
    __dst[10]);
}

uint64_t sub_10018A43C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9208;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_10018A48C(char a1)
{
  if (!a1) {
    return 0x65746365746F7270;
  }
  if (a1 == 1) {
    return 0x64616F6C796170;
  }
  return 0x727574616E676973;
}

uint64_t sub_10018A4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A558(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10018A6A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10018A43C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10018A6DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10018A6F4(a1, (uint64_t (*)(void, void, void))sub_10018A48C, a2);
}

uint64_t sub_10018A6F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_10018A72C()
{
  return sub_10018A48C(*v0);
}

uint64_t sub_10018A738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_10018A488(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_10018A768(uint64_t a1, uint64_t a2)
{
  return sub_10018A780(a1, a2, (uint64_t (*)(void, void, void))variable initialization expression of MarkedCircularBuffer._markedIndexOffset);
}

uint64_t sub_10018A780(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  return a3(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_10018A7AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10018A800(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

void sub_10018A854()
{
  sub_1000EA748();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for JWS.CodingKeys();
  swift_getWitnessTable();
  sub_10024F9A0();
  sub_10001B550();
  __chkstk_darwin(v6, v7);
  sub_1001891E8();
  if (!v1)
  {
    uint64_t v21 = v5;
    uint64_t v16 = v17[1];
    uint64_t v8 = v18;
    uint64_t v9 = v20;
    if (*(unsigned char *)(v0 + *(int *)(v3 + 48)))
    {
      sub_10001C2A8(v21, v21[3]);
      sub_10024FD40();
      sub_10018B3DC();
      swift_bridgeObjectRelease();
      sub_10018B3DC();
      swift_bridgeObjectRelease();
      LOBYTE(v17[0]) = 2;
      sub_10018B3DC();
      uint64_t v14 = sub_10018B3AC();
      v15(v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = v19;
      uint64_t v11 = v17[2];
      uint64_t v12 = v17[0];
      sub_100019524(&qword_1003090E8);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10025EED0;
      *(void *)(v13 + 32) = v12;
      *(void *)(v13 + 40) = v16;
      *(void *)(v13 + 48) = v11;
      *(void *)(v13 + 56) = v8;
      *(void *)(v13 + 64) = v10;
      *(void *)(v13 + 72) = v9;
      v17[0] = v13;
      sub_100019524(&qword_100309410);
      sub_10003F8AC();
      sub_10024E5C0();
      swift_bridgeObjectRelease();
      sub_10001C2A8(v21, v21[3]);
      sub_10024FD30();
      sub_100051B64((uint64_t)v17, v18);
      sub_10024FA90();
      swift_bridgeObjectRelease();
      sub_10001C2EC((uint64_t)v17);
    }
  }
  sub_1000EA730();
}

void sub_10018AB24()
{
}

uint64_t type metadata accessor for JWS.CodingKeys()
{
  return sub_10002F7A4();
}

uint64_t type metadata accessor for JWS.Header()
{
  return sub_10002F7A4();
}

unsigned char *storeEnumTagSinglePayload for JWSError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10018AC08);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JWSError()
{
  return &type metadata for JWSError;
}

unsigned char *sub_10018AC40(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018AD0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_10018AD34(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018AE00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for JWS.Serialization()
{
  return sub_10002F7A4();
}

uint64_t sub_10018AE40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_10018AE94(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10018AF14(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018B054(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10018B094(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10018B0E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018B100()
{
  return swift_getWitnessTable();
}

unint64_t sub_10018B120()
{
  unint64_t result = qword_1003161B0[0];
  if (!qword_1003161B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1003161B0);
  }
  return result;
}

uint64_t sub_10018B16C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018B188()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for JWS.Header.CodingKeys()
{
  return sub_10002F7A4();
}

uint64_t sub_10018B1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030AA38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *sub_10018B224(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018B2F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_10018B318()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018B334()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018B350()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018B36C()
{
  return sub_10024F170();
}

uint64_t sub_10018B3AC()
{
  return v0;
}

uint64_t sub_10018B3C8()
{
  return v0;
}

uint64_t sub_10018B3DC()
{
  return sub_10024F940();
}

uint64_t sub_10018B3FC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_10024F940();
}

uint64_t sub_10018B420()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018B440()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018B460()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_10018B480(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = a2 & 0x1000000000000000;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
      sub_10024F3E0();
    }
    sub_10024DEC0();
  }
  return v2 >> 60;
}

uint64_t sub_10018B514(double a1)
{
  double v2 = a1;
  v3[3] = &type metadata for UnsafeRawBufferPointer;
  v3[4] = &protocol witness table for UnsafeRawBufferPointer;
  v3[0] = &v2;
  v3[1] = v3;
  sub_10001C2A8(v3, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  sub_10024DEC0();
  return sub_10001C2EC((uint64_t)v3);
}

uint64_t sub_10018B5B0()
{
  type metadata accessor for CertificateManager();
  swift_allocObject();
  uint64_t result = sub_10018B6C8();
  qword_10034C0A8 = result;
  return result;
}

uint64_t sub_10018B5F0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_10018D968();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_10018B650(uint64_t a1@<X8>)
{
  int v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  sub_10018D968();
  uint64_t v4 = v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey;
  swift_beginAccess();
  sub_10018E164(v4, a1);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_10018B6C8()
{
  type metadata accessor for UnfairLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = 0;
  *(void *)(v0 + 16) = v1;
  uint64_t v3 = v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey;
  uint64_t v4 = sub_10024E450();
  sub_1000195B4(v3, 1, 1, v4);
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert);
  *uint64_t v5 = 0;
  v5[1] = 0;
  return v0;
}

uint64_t sub_10018B750()
{
  NSString v0 = sub_10024E6A0();
  SecKeyRef v1 = sub_10018BBE0();
  if (!v1) {
    goto LABEL_9;
  }
  SecKeyRef v2 = v1;
  sub_100019524(&qword_100316378);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100256170;
  sub_100019524(&qword_100316380);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100255FB0;
  sub_100019524((uint64_t *)&unk_10030FD80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10025D960;
  unsigned int v6 = (void *)kSecOidCommonName;
  *(void *)(v5 + 32) = kSecOidCommonName;
  *(void *)(v5 + 40) = v0;
  uint64_t v44 = v5;
  sub_10024EAC0();
  *(void *)(v4 + 32) = v44;
  *(void *)(v3 + 32) = v4;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100255FB0;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10025D960;
  uint64_t v9 = (void *)kSecOidOrganization;
  *(void *)(v8 + 32) = kSecOidOrganization;
  *(void *)(v8 + 40) = v0;
  uint64_t v45 = v8;
  sub_10024EAC0();
  *(void *)(v7 + 32) = v45;
  *(void *)(v3 + 40) = v7;
  id v10 = v0;
  id v11 = v6;
  id v12 = v9;
  sub_100019524(&qword_100316388);
  SecKeyRef v13 = v2;
  Class isa = sub_10024EA80().super.isa;
  swift_bridgeObjectRelease();
  sub_100019524(&qword_10030E938);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10025EED0;
  uint64_t v16 = (void *)kSecCertificateKeyUsage;
  *(void *)(inited + 32) = kSecCertificateKeyUsage;
  id v17 = v16;
  Class v18 = sub_10024F0F0().super.super.isa;
  type metadata accessor for CFNumber(0);
  uint64_t v20 = v19;
  *(void *)(inited + 40) = v18;
  uint64_t v21 = (void *)kSecSubjectAltName;
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = v21;
  sub_100019524(&qword_100316390);
  uint64_t v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_100255FB0;
  uint64_t v23 = (void *)kSecSubjectAltNameEmailAddress;
  *(void *)(v22 + 32) = kSecSubjectAltNameEmailAddress;
  *(void *)(v22 + 40) = v10;
  type metadata accessor for CFString(0);
  sub_10018E558((unint64_t *)&qword_1003091C0, type metadata accessor for CFString);
  id v43 = v10;
  id v24 = v21;
  id v25 = v23;
  Class v26 = isa;
  SecKeyRef v27 = v13;
  sub_10024E510();
  Class v28 = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  type metadata accessor for CFDictionary(0);
  *(void *)(inited + 80) = v28;
  uint64_t v29 = (void *)kSecCSRBasicContraintsPathLen;
  *(void *)(inited + 104) = v30;
  *(void *)(inited + 112) = v29;
  id v31 = v29;
  v32.super.super.Class isa = sub_10024EC50().super.super.isa;
  *(void *)(inited + 144) = v20;
  *(NSNumber *)(inited + 120) = v32;
  sub_10024E510();
  v33.super.Class isa = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  SelfSignedCertificate = (void *)SecGenerateSelfSignedCertificate();
  if (!SelfSignedCertificate)
  {
    NSString v0 = v43;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_10024E1F0();
    sub_10001B0E8(v38, (uint64_t)qword_10034C0E0);
    unint64_t v39 = sub_10024E1D0();
    os_log_type_t v40 = sub_10024EE10();
    if (os_log_type_enabled(v39, v40))
    {
      unint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Failed to generate self-signed certificate for StoreKit testing", v41, 2u);
      swift_slowDealloc();

      return 0;
    }

LABEL_9:
    return 0;
  }
  uint64_t v35 = SelfSignedCertificate;
  CFDataRef v36 = SecCertificateCopyData(v35);
  uint64_t v37 = sub_10024DF10();

  return v37;
}

SecKeyRef sub_10018BBE0()
{
  sub_100019524(&qword_100316398);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10025EED0;
  *(void *)(inited + 32) = kSecAttrKeyType;
  *(void *)(inited + 40) = kSecAttrKeyTypeEC;
  *(void *)(inited + 48) = kSecAttrKeyClass;
  *(void *)(inited + 56) = kSecAttrKeyClassPrivate;
  *(void *)(inited + 64) = kSecAttrKeySizeInBits;
  CFStringRef v1 = (id)kSecAttrKeyType;
  CFStringRef v2 = (id)kSecAttrKeyTypeEC;
  CFStringRef v3 = (id)kSecAttrKeyClass;
  CFStringRef v4 = (id)kSecAttrKeyClassPrivate;
  CFStringRef v5 = (id)kSecAttrKeySizeInBits;
  *(NSNumber *)(inited + 72) = sub_10024EC50();
  type metadata accessor for CFString(0);
  sub_10018E558((unint64_t *)&qword_1003091C0, type metadata accessor for CFString);
  sub_10024E510();
  CFErrorRef error = 0;
  uint64_t v6 = sub_10024E420();
  unint64_t v8 = v7;
  CFDataRef isa = sub_10024DEF0().super.isa;
  sub_10003F808(v6, v8);
  CFDictionaryRef v10 = sub_10024E4E0().super.isa;
  swift_bridgeObjectRelease();
  SecKeyRef v11 = SecKeyCreateWithData(isa, v10, &error);

  if (error)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10024E1F0();
    sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
    SecKeyRef v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      type metadata accessor for CFError(0);
      uint64_t v16 = sub_10024E700();
      sub_1000F3F3C(v16, v17, &v19);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to convert CryptoKit key to SecKey: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  return v11;
}

uint64_t sub_10018BEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10024DDC0();
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_10002059C();
  CFStringRef v5 = self;
  sub_10018E438(v5);
  if (v6)
  {
    sub_10024DD20();
    sub_10024DD60();
    sub_100172260();
    v7();
    sub_1000195B4(a1, 0, 1, v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_1000195B4(a1, 1, 1, v2);
  }
}

Swift::Int sub_10018C020(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10024DDC0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018BEF8((uint64_t)v7);
  if (sub_10001FA0C((uint64_t)v7, 1, v8) == 1)
  {
    sub_10018E29C((uint64_t)v7, &qword_100309778);
    type metadata accessor for OctaneError();
    sub_10018E558((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    long long v19 = xmmword_10025A770;
    sub_10024DF80();
    double v15 = v14;
    if ((a2 & 0x1000000000000000) != 0)
    {
      Swift::Int v16 = sub_10024E850();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      Swift::Int v16 = HIBYTE(a2) & 0xF;
    }
    else
    {
      Swift::Int v16 = a1 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v17 = __OFADD__(v16, 8);
    Swift::Int result = v16 + 8;
    if (v17)
    {
      __break(1u);
    }
    else
    {
      sub_10024DEA0(result);
      sub_10018B514(v15 + 31536000.0);
      swift_bridgeObjectRetain();
      sub_10018C2E8(a1, a2);
      swift_bridgeObjectRelease();
      long long v18 = v19;
      sub_1000473AC(v19, *((unint64_t *)&v19 + 1));
      sub_10024DF40();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      sub_10003F808(v18, *((unint64_t *)&v18 + 1));
      return sub_10003F808(v19, *((unint64_t *)&v19 + 1));
    }
  }
  return result;
}

unint64_t sub_10018C2E8(uint64_t a1, unint64_t a2)
{
  uint64_t v43 = a1;
  unint64_t v44 = a2;
  uint64_t v41 = a1;
  unint64_t v42 = a2;
  swift_bridgeObjectRetain();
  sub_100019524(&qword_10030C5B8);
  if (swift_dynamicCast())
  {
    sub_10002F754(v45, (uint64_t)&v47);
    uint64_t v3 = sub_10001C2A8(&v47, v48[2]);
    __chkstk_darwin(v3, v4);
    uint64_t v37 = v2;
    sub_10024DC30();
    return sub_10001C2EC((uint64_t)&v47);
  }
  uint64_t v46 = 0;
  memset(v45, 0, sizeof(v45));
  sub_10018E29C((uint64_t)v45, &qword_10030C5C0);
  unint64_t result = sub_10018B480(v43, v44);
  if ((result & 1) == 0) {
    return result;
  }
  if ((v44 & 0x1000000000000000) != 0) {
    goto LABEL_63;
  }
  if ((v44 & 0x2000000000000000) != 0) {
    unint64_t v6 = HIBYTE(v44) & 0xF;
  }
  else {
    unint64_t v6 = v43 & 0xFFFFFFFFFFFFLL;
  }
LABEL_8:
  uint64_t v7 = *v2;
  unint64_t v8 = v2[1];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v8 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v7), v7)) {
        goto LABEL_70;
      }
      uint64_t v10 = HIDWORD(v7) - (int)v7;
      uint64_t v9 = v7 >> 32;
LABEL_13:
      if (__OFADD__(v9, v6))
      {
        __break(1u);
        goto LABEL_65;
      }
      if ((uint64_t)(v9 + v6) < v9)
      {
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      if (v9 < 0)
      {
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v13 = sub_10024DE80();
      __chkstk_darwin(v13, v14);
      v36[2] = v10;
      v36[3] = v6;
      uint64_t v37 = &v43;
      unint64_t v15 = (unint64_t)sub_100076338((void *(*)(uint64_t *__return_ptr, char *, char *))sub_10018E4D4, (uint64_t)v36);
      uint64_t v19 = v16;
      if (v18 != v6)
      {
        uint64_t v30 = *v2;
        unint64_t v31 = v2[1];
        uint64_t v32 = 0;
        switch(v31 >> 62)
        {
          case 1uLL:
            uint64_t v32 = (int)v30;
            break;
          case 2uLL:
            uint64_t v32 = *(void *)(v30 + 16);
            break;
          default:
            break;
        }
        BOOL v33 = __OFADD__(v32, v10);
        uint64_t v34 = v32 + v10;
        if (!v33)
        {
          if (!__OFADD__(v34, v18))
          {
            uint64_t v35 = 0;
            switch(v31 >> 62)
            {
              case 1uLL:
                uint64_t v35 = v30 >> 32;
                break;
              case 2uLL:
                uint64_t v35 = *(void *)(v30 + 24);
                break;
              case 3uLL:
                break;
              default:
                uint64_t v35 = BYTE6(v31);
                break;
            }
            if (v35 >= v34 + v18)
            {
              sub_10024DE90();
              return swift_bridgeObjectRelease();
            }
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
          }
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      uint64_t v20 = v15;
      unint64_t v21 = v17;
      if ((v16 & 0x2000000000000000) != 0) {
        unint64_t v22 = HIBYTE(v16) & 0xF;
      }
      else {
        unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)v45 + 7) = 0;
      *(void *)&v45[0] = 0;
      if (4 * v22 != v17 >> 14)
      {
        LOBYTE(v23) = 0;
        uint64_t v24 = (v15 >> 59) & 1;
        if ((v16 & 0x1000000000000000) == 0) {
          LOBYTE(v24) = 1;
        }
        uint64_t v25 = 4 << v24;
        uint64_t v39 = (v16 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v40 = v16 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v38 = (char *)v48 + 6;
        while (1)
        {
          unint64_t v26 = v21;
          if ((v21 & 0xC) == v25) {
            unint64_t v26 = sub_1000F44B4(v21, v20, v19);
          }
          unint64_t v27 = v26 >> 16;
          if (v26 >> 16 >= v22)
          {
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            unint64_t v6 = sub_10024E850();
            goto LABEL_8;
          }
          if ((v19 & 0x1000000000000000) != 0)
          {
            char v29 = sub_10024E890();
          }
          else if ((v19 & 0x2000000000000000) != 0)
          {
            uint64_t v47 = v20;
            v48[0] = v40;
            char v29 = *((unsigned char *)&v48[-1] + v27);
          }
          else
          {
            uint64_t v28 = v39;
            if ((v20 & 0x1000000000000000) == 0) {
              uint64_t v28 = sub_10024F3E0();
            }
            char v29 = *(unsigned char *)(v28 + v27);
          }
          if ((v21 & 0xC) == v25)
          {
            unint64_t v21 = sub_1000F44B4(v21, v20, v19);
            if ((v19 & 0x1000000000000000) != 0)
            {
LABEL_38:
              if (v22 <= v21 >> 16) {
                goto LABEL_62;
              }
              unint64_t v21 = sub_10024E860();
              goto LABEL_40;
            }
          }
          else if ((v19 & 0x1000000000000000) != 0)
          {
            goto LABEL_38;
          }
          unint64_t v21 = (v21 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_40:
          *((unsigned char *)v45 + v23) = v29;
          unsigned int v23 = v23 + 1;
          if ((v23 >> 8)) {
            goto LABEL_61;
          }
          BYTE14(v45[0]) = v23;
          if (v23 == 14)
          {
            uint64_t v47 = *(void *)&v45[0];
            LODWORD(v48[0]) = DWORD2(v45[0]);
            WORD2(v48[0]) = WORD6(v45[0]);
            sub_10024DEC0();
            LOBYTE(v23) = 0;
            BYTE14(v45[0]) = 0;
          }
          if (4 * v22 == v21 >> 14)
          {
            if ((_BYTE)v23)
            {
              uint64_t v47 = *(void *)&v45[0];
              LODWORD(v48[0]) = DWORD2(v45[0]);
              WORD2(v48[0]) = WORD6(v45[0]);
              sub_10024DEC0();
            }
            return swift_bridgeObjectRelease();
          }
        }
      }
      return swift_bridgeObjectRelease();
    case 2uLL:
      uint64_t v12 = v7 + 16;
      uint64_t v11 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v12 + 8);
      uint64_t v10 = v9 - v11;
      if (!__OFSUB__(v9, v11)) {
        goto LABEL_13;
      }
      goto LABEL_71;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v9 = BYTE6(v8);
      uint64_t v10 = BYTE6(v8);
      goto LABEL_13;
  }
}

char *sub_10018C818(uint64_t a1)
{
  uint64_t v3 = sub_10024E6F0();
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100019524(&qword_100309778);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10024DDC0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018BEF8((uint64_t)v10);
  if (sub_10001FA0C((uint64_t)v10, 1, v11) == 1)
  {
    sub_10018E29C((uint64_t)v10, &qword_100309778);
    type metadata accessor for OctaneError();
    sub_10018E558((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    uint64_t v16 = sub_10024DE00();
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {
      unint64_t v19 = v17;
      uint64_t v20 = v16;
      uint64_t v32 = v12;
      switch(v17 >> 62)
      {
        case 1uLL:
          if (v16 >> 32 < (int)v16)
          {
            __break(1u);
            sub_10003F808(v16, v17);
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x10018CCF4);
          }
          swift_retain();
          sub_10018E2F4((int)v20);
          sub_10003F808(v20, v19);
          break;
        case 2uLL:
          uint64_t v21 = *(void *)(v16 + 16);
          swift_retain();
          swift_retain();
          sub_10018E2F4(v21);
          swift_release();
          swift_release();
          break;
        default:
          break;
      }
      sub_10024DF60();
      uint64_t v22 = sub_10024E030();
      uint64_t v30 = *(void *)(v22 - 8);
      uint64_t v31 = v22;
      uint64_t v23 = sub_10018CD04(*(void *)(v30 + 64), v20, v19);
      uint64_t v29 = a1;
      uint64_t v24 = v23;
      unint64_t v26 = v25;
      sub_10024E6E0();
      unint64_t v6 = (char *)sub_10024E6D0();
      uint64_t v28 = v27;
      sub_10003F808(v24, v26);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v11);
        sub_10003F808(v20, v19);
      }
      else
      {
        type metadata accessor for OctaneError();
        sub_10018E558((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_10003F808(v20, v19);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v11);
      }
    }
  }
  return v6;
}

uint64_t sub_10018CD04(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned __int8 v3 = BYTE6(a3);
  unint64_t v4 = a3 >> 62;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(v4)
  {
    case 1uLL:
      uint64_t v7 = (int)a2;
      uint64_t v6 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v6 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = v3;
      break;
  }
  if (v6 < a1 || v6 < v7)
  {
    __break(1u);
    JUMPOUT(0x10018CD68);
  }
  return sub_10024DED0();
}

uint64_t sub_10018CD78()
{
  uint64_t v2 = v0;
  sub_10002F9E0();
  uint64_t v3 = sub_100019524(&qword_100309778);
  uint64_t v4 = sub_100026018(v3);
  __chkstk_darwin(v4, v5);
  sub_10002059C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10024DDC0();
  sub_10001B550();
  uint64_t v41 = v10;
  __chkstk_darwin(v11, v12);
  sub_100025FE8();
  uint64_t v13 = sub_10024E450();
  sub_10001B550();
  uint64_t v15 = v14;
  __chkstk_darwin(v16, v17);
  sub_10002059C();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_100019524(&qword_100316370);
  uint64_t v22 = sub_100026018(v21);
  __chkstk_darwin(v22, v23);
  sub_10002059C();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey;
  swift_beginAccess();
  sub_10018E164(v27, v26);
  if (sub_10001FA0C(v26, 1, v13)) {
    return sub_10018E29C(v26, &qword_100316370);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v26, v13);
  sub_10018E29C(v26, &qword_100316370);
  uint64_t v29 = sub_10024E400();
  unint64_t v31 = v30;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v13);
  uint64_t v32 = (uint64_t *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert);
  unint64_t v33 = *(void *)(v2 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert + 8);
  if (!v33) {
    return sub_10003F808(v29, v31);
  }
  uint64_t v34 = *v32;
  swift_bridgeObjectRetain();
  sub_10018BEF8(v8);
  if (sub_10001FA0C(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10018E29C(v8, &qword_100309778);
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_10024E1F0();
    sub_10001B0E8(v35, (uint64_t)qword_10034C0E0);
    CFDataRef v36 = sub_10024E1D0();
    os_log_type_t v37 = sub_10024EE20();
    if (os_log_type_enabled(v36, v37))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_10018E5C8((void *)&_mh_execute_header, v38, v39, "Failed to persist testing StoreKit 2 key pair due to missing directory.");
      swift_slowDealloc();
    }

    type metadata accessor for OctaneError();
    sub_10018E558((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
    sub_1000290D0();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_10003F808(v29, v31);
  }
  else
  {
    sub_10018E5B8();
    v40();
    sub_10024DF40();
    if (!v42) {
      sub_10018C020(v34, v33);
    }
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v1, v9);
    sub_10003F808(v29, v31);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10018D1CC()
{
  sub_10002F9E0();
  uint64_t v3 = sub_100019524(&qword_100316370);
  uint64_t v4 = sub_100026018(v3);
  __chkstk_darwin(v4, v5);
  sub_1000AC748();
  uint64_t v77 = v6;
  __chkstk_darwin(v7, v8);
  uint64_t v76 = (char *)&v69 - v9;
  uint64_t v82 = sub_10024E030();
  sub_10001B550();
  uint64_t v78 = v10;
  __chkstk_darwin(v11, v12);
  sub_1000AC748();
  uint64_t v81 = v13;
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v69 - v17;
  __chkstk_darwin(v16, v19);
  v85 = (char *)&v69 - v20;
  sub_10024E450();
  sub_10001B550();
  uint64_t v79 = v22;
  uint64_t v80 = v21;
  __chkstk_darwin(v21, v23);
  sub_10002059C();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_100019524(&qword_100309778);
  uint64_t v28 = sub_100026018(v27);
  __chkstk_darwin(v28, v29);
  sub_10002059C();
  uint64_t v32 = v31 - v30;
  uint64_t v33 = sub_10024DDC0();
  sub_10001B550();
  uint64_t v35 = v34;
  __chkstk_darwin(v36, v37);
  sub_100025FE8();
  sub_10018BEF8(v32);
  if (sub_10001FA0C(v32, 1, v33) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v2, v32, v33);
    uint64_t v44 = sub_10024DE00();
    if (!v1)
    {
      uint64_t v75 = v0;
      uint64_t v83 = v44;
      unint64_t v84 = v45;
      uint64_t v48 = v44;
      unint64_t v49 = v45;
      sub_1000473AC(v44, v45);
      sub_10024E410();
      uint64_t v73 = v48;
      unint64_t v74 = v49;
      unint64_t v70 = sub_10018C818((uint64_t)v18);
      unint64_t v71 = v50;
      uint64_t v72 = v26;
      uint64_t v51 = v78;
      uint64_t v52 = v82;
      sub_10018E5B8();
      v53();
      uint64_t v54 = v75;
      uint64_t v55 = v81;
      sub_10024E020();
      sub_10018E558((unint64_t *)&qword_10030E968, (void (*)(uint64_t))&type metadata accessor for Date);
      char v56 = sub_10024E5D0();
      uint64_t v57 = v55;
      v58 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v58(v57, v52);
      if (v56)
      {
        sub_10003F808(v73, v74);
        v58((uint64_t)v85, v52);
        uint64_t v59 = sub_10018E5A0();
        v60(v59);
        uint64_t v61 = v80;
        uint64_t v62 = (uint64_t)v76;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v76, v72, v80);
        sub_1000195B4(v62, 0, 1, v61);
        uint64_t v63 = v62;
        uint64_t v64 = v77;
        sub_10018E1CC(v63, v77);
        uint64_t v65 = v54 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey;
        swift_beginAccess();
        sub_10018E234(v64, v65);
        swift_endAccess();
        uint64_t v66 = (char **)(v54 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert);
        uint64_t v67 = v71;
        *uint64_t v66 = v70;
        v66[1] = v67;
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      type metadata accessor for OctaneError();
      sub_10018E558((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
      sub_1000290D0();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_10003F808(v73, v74);
      v58((uint64_t)v85, v52);
      sub_10003FDC8();
      v68();
    }
    uint64_t v46 = sub_10018E5A0();
    return v47(v46);
  }
  sub_10018E29C(v32, &qword_100309778);
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_10024E1F0();
  sub_10001B0E8(v38, (uint64_t)qword_10034C0E0);
  uint64_t v39 = sub_10024E1D0();
  os_log_type_t v40 = sub_10024EE20();
  if (os_log_type_enabled(v39, v40))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_10018E5C8((void *)&_mh_execute_header, v41, v42, "Failed to read testing StoreKit 2 key pair due to missing directory.");
    swift_slowDealloc();
  }

  type metadata accessor for OctaneError();
  sub_10018E558((unint64_t *)&qword_10030D0E8, (void (*)(uint64_t))type metadata accessor for OctaneError);
  sub_1000290D0();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_10018D968()
{
  uint64_t v1 = v0;
  sub_10002F9E0();
  v41[2] = v2;
  uint64_t v3 = sub_10024E450();
  sub_10001B550();
  uint64_t v42 = v4;
  __chkstk_darwin(v5, v6);
  sub_1000AC748();
  v41[1] = v7;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v41 - v10;
  uint64_t v12 = sub_100019524(&qword_100316370);
  uint64_t v13 = sub_100026018(v12);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)v41 - v22;
  __chkstk_darwin(v21, v24);
  uint64_t v26 = (char *)v41 - v25;
  uint64_t v27 = (uint64_t *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert);
  if (!*(void *)(v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedCert + 8)
    || (uint64_t v28 = v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey,
        swift_beginAccess(),
        sub_10018E164(v28, (uint64_t)v26),
        LODWORD(v28) = sub_10001FA0C((uint64_t)v26, 1, v3),
        uint64_t result = sub_10018E29C((uint64_t)v26, &qword_100316370),
        v28 == 1))
  {
    uint64_t v30 = v1 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey;
    swift_beginAccess();
    sub_10018E164(v30, (uint64_t)v23);
    if (sub_10001FA0C((uint64_t)v23, 1, v3) == 1)
    {
      sub_10018E29C((uint64_t)v23, &qword_100316370);
      return sub_10018D1CC();
    }
    v41[0] = v17;
    uint64_t v31 = v42;
    sub_10018E5B8();
    v32();
    uint64_t v33 = sub_10018B750();
    if (v34 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v3);
      return sub_10018D1CC();
    }
    uint64_t v35 = v33;
    unint64_t v36 = v34;
    uint64_t v37 = sub_10024DF00(0);
    unint64_t v39 = v38;
    sub_10003F7F4(v35, v36);
    *uint64_t v27 = v37;
    v27[1] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_10018C020(v37, v39);
    sub_10003FDC8();
    v40();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10018DF90()
{
  swift_release();
  sub_10018E29C(v0 + OBJC_IVAR____TtC25ASOctaneSupportXPCService18CertificateManager_cachedKey, &qword_100316370);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10018DFDC()
{
  sub_10018DF90();
  sub_10002F9E0();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_10018E014()
{
  return type metadata accessor for CertificateManager();
}

uint64_t type metadata accessor for CertificateManager()
{
  uint64_t result = qword_100316270;
  if (!qword_100316270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10018E064()
{
  sub_10018E10C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10018E10C()
{
  if (!qword_100316280)
  {
    sub_10024E450();
    unint64_t v0 = sub_10024F030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100316280);
    }
  }
}

uint64_t sub_10018E164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100316370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018E1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100316370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018E234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100316370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018E29C(uint64_t a1, uint64_t *a2)
{
  sub_100019524(a2);
  sub_10003FDC8();
  v3();
  return a1;
}

uint64_t sub_10018E2F4(uint64_t a1)
{
  uint64_t v2 = sub_10024DB80();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = sub_10024DBA0();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = v3 + a1 - result;
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t result = sub_10024DB90();
  if (!v5) {
LABEL_8:
  }
    __break(1u);
  return result;
}

uint64_t sub_10018E360(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result)
  {
    if (__OFSUB__(a2 - result, a3))
    {
      __break(1u);
      goto LABEL_9;
    }
    uint64_t v8 = result + a3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a5;
  *(void *)(result + 24) = a6;
  if (!v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_10024F340();
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10018E438(void *a1)
{
  id v1 = [a1 persistedDataPath];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_10024E6B0();

  return v3;
}

uint64_t sub_10018E49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_10018E360(a1, a2, a3, a4, *a5, a5[1]);
  if (!v6)
  {
    *a6 = result;
    a6[1] = v9;
    a6[2] = v10;
    a6[3] = v11;
  }
  return result;
}

uint64_t sub_10018E4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_10018E49C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_10018E4F4()
{
  return sub_10024DEC0();
}

uint64_t sub_10018E520()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018E558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10018E5A0()
{
  return v0;
}

void sub_10018E5C8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_10018E5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  BOOL v6 = sub_1000C6ADC();
  uint64_t result = swift_release();
  if (v6)
  {
    Lock.lock()();
    uint64_t v8 = *(void *)(v3 + 168);
    uint64_t v9 = *(void *)(v3 + 176);
    *(void *)(v3 + 168) = a1;
    *(void *)(v3 + 176) = a2;
    sub_10002F288(a1);
    sub_10002F288(a2);
    sub_10002F2A0(v8);
    sub_10002F2A0(v9);
    Lock.unlock()();
    sub_10002F2A0(a1);
    return sub_10002F2A0(a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10018E698()
{
  uint64_t v1 = v0;
  swift_retain();
  BOOL v2 = sub_1000C6ADC();
  swift_release();
  if (v2) {
    return *(void *)(v1 + 184);
  }
  swift_retain();
  Lock.lock()();
  uint64_t v3 = *(void *)(v1 + 184);
  Lock.unlock()();
  swift_release();
  return v3;
}

uint64_t sub_10018E730()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 224);
  swift_unknownObjectRetain();
  swift_retain();
  return v1;
}

BOOL sub_10018E7A8()
{
  sub_10018E730();
  uint64_t v2 = sub_100197D4C();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 188, v2, v0);
  swift_release();
  swift_unknownObjectRelease();
  return (v1 & 0xFF00) != 1024;
}

BOOL sub_10018E810()
{
  sub_10018E730();
  uint64_t v2 = sub_100197D4C();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 166, v2, v0);
  swift_release();
  swift_unknownObjectRelease();
  return (v1 & 0xFB00) != 0;
}

uint64_t sub_10018E87C()
{
  uint64_t result = *(void *)(v0 + 160);
  if (result) {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_10018E88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  type metadata accessor for Lock();
  swift_allocObject();
  *(void *)(v5 + 56) = Lock.init()();
  sub_100019524(&qword_100316FC8);
  uint64_t v12 = swift_bufferAllocate();
  sub_10000764C((unsigned char *)(v12 + 16), 0);
  *(void *)(v5 + 64) = swift_dynamicCastClassUnconditional();
  *(unsigned char *)(v5 + 88) = 0;
  *(void *)(v5 + 144) = 4;
  *(_WORD *)(v5 + 152) = 256;
  *(void *)(v5 + 160) = 0;
  *(void *)(v5 + 168) = 0xF000000000000007;
  *(unsigned char *)(v5 + 216) = 0;
  *(void *)(v5 + 256) = j_j__malloc;
  *(void *)(v5 + 264) = j_j__realloc;
  *(void *)(v5 + 272) = j_j__free;
  *(void *)(v5 + 280) = sub_10006C3B4;
  *(void *)(v5 + 176) = 0xF000000000000007;
  *(void *)(v5 + 184) = j_j__malloc;
  *(void *)(v5 + 192) = j_j__realloc;
  *(void *)(v5 + 200) = j_j__free;
  *(void *)(v5 + 208) = sub_10006C3B4;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 40) = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 443);
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_100027788(a5, v5 + 104);
  uint64_t v14 = *(void *)(v5 + 168);
  uint64_t v13 = *(void *)(v5 + 176);
  *(int64x2_t *)(v6 + 168) = vdupq_n_s64(0xF000000000000007);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_10002F2A0(v14);
  sub_10002F2A0(v13);
  uint64_t v15 = *(void *)(v6 + 64);
  *(void *)(v6 + 224) = a4;
  *(void *)(v6 + 232) = &protocol witness table for SelectableEventLoop;
  *(void *)(v6 + 240) = v15;
  *(_WORD *)(v6 + 248) = 0;
  swift_retain();
  swift_retain();
  *(void *)(v6 + 72) = sub_1000C7A44();
  *(void *)(v6 + 80) = v16;
  *(void *)(v6 + 96) = 0;
  type metadata accessor for ChannelPipeline();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = swift_retain();
  uint64_t v19 = sub_100200DCC(v18, v17);
  swift_unknownObjectRelease();
  swift_release();
  sub_10001C2EC(a5);
  swift_release();
  *(void *)(v6 + 160) = v19;
  swift_release();
  return v6;
}

uint64_t sub_10018EAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v8 = v6;
  type metadata accessor for Lock();
  swift_allocObject();
  *(void *)(v6 + 56) = Lock.init()();
  sub_100019524(&qword_100316FC8);
  uint64_t v14 = swift_bufferAllocate();
  sub_10000764C((unsigned char *)(v14 + 16), 0);
  *(void *)(v6 + 64) = swift_dynamicCastClassUnconditional();
  *(unsigned char *)(v6 + 88) = 0;
  *(void *)(v6 + 144) = 4;
  *(_WORD *)(v6 + 152) = 256;
  *(_OWORD *)(v6 + 160) = xmmword_100266D70;
  *(unsigned char *)(v6 + 216) = 0;
  *(void *)(v6 + 256) = j_j__malloc;
  *(void *)(v6 + 264) = j_j__realloc;
  *(void *)(v6 + 272) = j_j__free;
  *(void *)(v6 + 280) = sub_10006C3B4;
  *(void *)(v6 + 176) = 0xF000000000000007;
  *(void *)(v6 + 184) = j_j__malloc;
  *(void *)(v6 + 192) = j_j__realloc;
  *(void *)(v6 + 200) = j_j__free;
  *(void *)(v6 + 208) = sub_10006C3B4;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 40) = sub_10004A268((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 443);
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  sub_100027788(a5, v6 + 104);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  unint64_t v15 = sub_1000F159C((uint64_t (*)(void))sub_1000F1BEC);
  if (v7)
  {
    swift_errorRelease();
    unint64_t v16 = 0xF000000000000007;
  }
  else
  {
    unint64_t v16 = v15;
  }
  unint64_t v17 = sub_1000F159C((uint64_t (*)(void))sub_1000F1C04);
  uint64_t v18 = *(void *)(v6 + 168);
  uint64_t v19 = *(void *)(v6 + 176);
  *(void *)(v8 + 168) = v16;
  *(void *)(v8 + 176) = v17;
  sub_10002F2A0(v18);
  sub_10002F2A0(v19);
  uint64_t v20 = *(void *)(v8 + 64);
  *(void *)(v8 + 224) = a4;
  *(void *)(v8 + 232) = &protocol witness table for SelectableEventLoop;
  *(void *)(v8 + 240) = v20;
  *(_WORD *)(v8 + 248) = 0;
  swift_retain();
  swift_retain();
  *(void *)(v8 + 72) = sub_1000F23CC();
  *(void *)(v8 + 80) = v21;
  *(void *)(v8 + 96) = 0;
  type metadata accessor for ChannelPipeline();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = swift_retain();
  uint64_t v24 = a6(v23, v22);
  swift_unknownObjectRelease();
  swift_release();
  sub_10001C2EC(a5);
  swift_release();
  *(void *)(v8 + 160) = v24;
  swift_release();
  return v8;
}

uint64_t sub_10018ED8C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001C2EC(v0 + 104);
  swift_release();
  uint64_t v1 = *(void *)(v0 + 176);
  sub_10002F2A0(*(void *)(v0 + 168));
  sub_10002F2A0(v1);
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_10018EE20()
{
  sub_10002FC68();
  char v1 = (*(uint64_t (**)(void))(v0 + 584))();
  sub_10002F0C8();
  sub_1000290D0();
  uint64_t v3 = 1;
  if ((v1 & 1) == 0) {
    uint64_t v3 = 2;
  }
  return sub_1000CA830(v2, v3);
}

unint64_t sub_10018EE94(uint64_t (*a1)(void))
{
  sub_10002FC68();
  if ((*(uint64_t (**)(void))(v2 + 584))()) {
    return sub_1000F159C(a1);
  }
  sub_10002F0C8();
  sub_1000290D0();
  return sub_1000CA830(v4, 2);
}

uint64_t sub_10018EF30(char a1, char a2)
{
  return sub_10018F014(a1, a2, sub_1000C8DD8);
}

uint64_t sub_10018EF48(char a1, char a2)
{
  uint64_t v4 = sub_1000C8DD8();
  uint64_t v6 = v5;
  if (a1)
  {
    sub_10018EE20();
    if ((a2 & 1) == 0) {
      goto LABEL_6;
    }
LABEL_4:
    sub_10018EE20();
    goto LABEL_7;
  }
  sub_10002F288(v4);
  if (a2) {
    goto LABEL_4;
  }
LABEL_6:
  sub_10002F288(v6);
LABEL_7:
  sub_100197DFC();
  uint64_t v7 = sub_100197D80();
  return sub_10002F2A0(v7);
}

uint64_t sub_10018F014(char a1, char a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (a1)
  {
    sub_10018EE94((uint64_t (*)(void))sub_1000F1BEC);
    if ((a2 & 1) == 0) {
      goto LABEL_6;
    }
LABEL_4:
    sub_10018EE94((uint64_t (*)(void))sub_1000F1C04);
    goto LABEL_7;
  }
  sub_10002F288(v5);
  if (a2) {
    goto LABEL_4;
  }
LABEL_6:
  sub_10002F288(v7);
LABEL_7:
  sub_100197DFC();
  uint64_t v8 = sub_100197D80();
  return sub_10002F2A0(v8);
}

uint64_t sub_10018F110(unsigned __int8 a1)
{
  sub_10002FC68();
  uint64_t result = (*(uint64_t (**)(void))(v3 + 584))();
  if ((result & 1) != 0 && *(unsigned __int8 *)(v1 + 216) != a1)
  {
    *(unsigned char *)(v1 + 216) = a1;
    return sub_1001907E4();
  }
  return result;
}

uint64_t sub_10018F26C()
{
  if ((*(unsigned char *)(v0 + 216) & 8) != 0) {
    return sub_10018F110(*(unsigned char *)(v0 + 216) & 0xF7);
  }
  return result;
}

uint64_t sub_10018F294()
{
  if ((*(unsigned char *)(v0 + 216) & 4) != 0) {
    return sub_10018F110(*(unsigned char *)(v0 + 216) & 0xFB);
  }
  return result;
}

uint64_t sub_10018F2B8()
{
  sub_10018E730();
  char v2 = v1;
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
  if ((v2 & 1) == 0 && (*(unsigned char *)(v0 + 216) & 2) == 0) {
    return sub_10018F110(*(unsigned char *)(v0 + 216) | 2u);
  }
  return result;
}

uint64_t sub_10018F308(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = (void *)v3;
  sub_10002FC68();
  uint64_t result = (*(uint64_t (**)(void))(v8 + 584))();
  if (result)
  {
    if (a2 == 2)
    {
      *(unsigned char *)(v3 + 216) = 1;
      sub_100190380();
      sub_1000623FC();
      swift_retain();
      swift_beginAccess();
      uint64_t v18 = *(void *)(v3 + 232);
      uint64_t ObjectType = swift_getObjectType();
      sub_100197CA0();
      EventLoop.assertInEventLoop(file:line:)(v20, v21, v22, v23, ObjectType, v18);
      switch(*(unsigned char *)(v3 + 249))
      {
        case 1:
        case 2:
          *(unsigned char *)(v3 + 249) = 4;
          sub_100197A98((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/"
                                 "SwiftNIO/BaseSocketChannel.swift");
          uint64_t v24 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029F24;
          break;
        case 3:
          *(unsigned char *)(v3 + 249) = 4;
          sub_100197A98((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/"
                                 "SwiftNIO/BaseSocketChannel.swift");
          uint64_t v25 = *(void *)(v3 + 240);
          swift_retain();
          sub_10000764C((unsigned char *)(v25 + 16), 0);
          swift_release();
          uint64_t v24 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029E24;
          break;
        case 4:
          __break(1u);
          JUMPOUT(0x10018F820);
        default:
          *(unsigned char *)(v3 + 249) = 4;
          sub_100197A98((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/"
                                 "SwiftNIO/BaseSocketChannel.swift");
          uint64_t v24 = sub_100029E0C;
          break;
      }
      uint64_t v26 = (void (*)(uint64_t, uint64_t))v24;
      swift_endAccess();
      (*(void (**)(uint64_t))(*v4 + 672))(a1);
      uint64_t v27 = _swiftEmptyArrayStorage[2];
      if (v27)
      {
        uint64_t v37 = (uint64_t)v26;
        BOOL v38 = a1;
        swift_bridgeObjectRetain();
        uint64_t v28 = &_swiftEmptyArrayStorage[5];
        do
        {
          uint64_t v29 = (void (*)(uint64_t *))*(v28 - 1);
          uint64_t v39 = sub_10018E87C();
          swift_retain();
          v29(&v39);
          swift_release();
          swift_release();
          v28 += 2;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
        uint64_t v26 = (void (*)(uint64_t, uint64_t))v37;
      }
      swift_bridgeObjectRelease();
      uint64_t v30 = v4[12];
      if (v30)
      {
        v4[12] = 0;
        swift_errorRetain();
        sub_1000B44D0(a1, 1, v30, v31, v32, v33, v34, v35, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
          v48,
          v49,
          v50);
        swift_errorRelease();
        swift_release();
      }
      uint64_t v36 = sub_10018E87C();
      v26(a3, v36);
      swift_release();
      swift_retain();
      swift_retain();
      SelectableEventLoop.execute(_:)((uint64_t)sub_10019782C, (uint64_t)v4);
      swift_release();
      swift_release();
      return swift_release();
    }
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v10 = sub_1000290D0();
    sub_10002FCB0(v12, 1);
  }
  else
  {
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v10 = sub_1000290D0();
    *(void *)uint64_t v11 = 3;
    *(unsigned char *)(v11 + 8) = 3;
  }
  swift_errorRetain();
  sub_1000B44D0(v10, 1, a3, v13, v14, v15, v16, v17, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
    v48,
    v49,
    v50);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10018F834(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = (void *)v3;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 584))();
  if (result)
  {
    if (a2 == 2)
    {
      *(unsigned char *)(v3 + 216) = 1;
      sub_100190380();
      sub_1000F14CC();
      swift_retain();
      swift_beginAccess();
      uint64_t v17 = *(void *)(v3 + 232);
      uint64_t ObjectType = swift_getObjectType();
      EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 91, ObjectType, v17);
      switch(*(unsigned char *)(v3 + 249))
      {
        case 1:
        case 2:
          *(unsigned char *)(v3 + 249) = 4;
          EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v17);
          uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029F24;
          break;
        case 3:
          *(unsigned char *)(v3 + 249) = 4;
          EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v17);
          uint64_t v20 = *(void *)(v3 + 240);
          swift_retain();
          sub_10000764C((unsigned char *)(v20 + 16), 0);
          swift_release();
          uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029E24;
          break;
        case 4:
          __break(1u);
          JUMPOUT(0x10018FDACLL);
        default:
          *(unsigned char *)(v3 + 249) = 4;
          EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v17);
          uint64_t v19 = sub_100029E0C;
          break;
      }
      uint64_t v21 = (void (*)(uint64_t, uint64_t))v19;
      swift_endAccess();
      (*(void (**)(uint64_t))(*v4 + 672))(a1);
      uint64_t v22 = _swiftEmptyArrayStorage[2];
      if (v22)
      {
        uint64_t v32 = (uint64_t)v21;
        BOOL v33 = a1;
        swift_bridgeObjectRetain();
        uint64_t v23 = &_swiftEmptyArrayStorage[5];
        do
        {
          uint64_t v24 = (void (*)(uint64_t *))*(v23 - 1);
          uint64_t v34 = sub_10018E87C();
          swift_retain();
          v24(&v34);
          swift_release();
          swift_release();
          v23 += 2;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        uint64_t v21 = (void (*)(uint64_t, uint64_t))v32;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = v4[12];
      if (v25)
      {
        v4[12] = 0;
        swift_errorRetain();
        sub_1000B44D0(a1, 1, v25, v26, v27, v28, v29, v30, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
          v43,
          v44,
          v45);
        swift_errorRelease();
        swift_release();
      }
      uint64_t v31 = sub_10018E87C();
      v21(a3, v31);
      swift_release();
      swift_retain();
      swift_retain();
      SelectableEventLoop.execute(_:)((uint64_t)sub_10019782C, (uint64_t)v4);
      swift_release();
      swift_release();
      return swift_release();
    }
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v9 = swift_allocError();
    *(void *)uint64_t v11 = 1;
    *(unsigned char *)(v11 + 8) = 3;
  }
  else
  {
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v9 = swift_allocError();
    *(void *)uint64_t v10 = 3;
    *(unsigned char *)(v10 + 8) = 3;
  }
  swift_errorRetain();
  sub_1000B44D0(v9, 1, a3, v12, v13, v14, v15, v16, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10018FDC0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = (void *)v3;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 584))();
  if (result)
  {
    if (a2 == 2)
    {
      *(unsigned char *)(v3 + 216) = 1;
      sub_100190380();
      sub_1000C7D4C();
      swift_retain();
      swift_beginAccess();
      uint64_t v17 = *(void *)(v3 + 232);
      uint64_t ObjectType = swift_getObjectType();
      EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 91, ObjectType, v17);
      switch(*(unsigned char *)(v3 + 249))
      {
        case 1:
        case 2:
          *(unsigned char *)(v3 + 249) = 4;
          EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v17);
          uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029F24;
          break;
        case 3:
          *(unsigned char *)(v3 + 249) = 4;
          EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v17);
          uint64_t v20 = *(void *)(v3 + 240);
          swift_retain();
          sub_10000764C((unsigned char *)(v20 + 16), 0);
          swift_release();
          uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100029E24;
          break;
        case 4:
          __break(1u);
          JUMPOUT(0x100190338);
        default:
          *(unsigned char *)(v3 + 249) = 4;
          EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v17);
          uint64_t v19 = sub_100029E0C;
          break;
      }
      uint64_t v21 = (void (*)(uint64_t, uint64_t))v19;
      swift_endAccess();
      (*(void (**)(uint64_t))(*v4 + 672))(a1);
      uint64_t v22 = _swiftEmptyArrayStorage[2];
      if (v22)
      {
        uint64_t v32 = (uint64_t)v21;
        BOOL v33 = a1;
        swift_bridgeObjectRetain();
        uint64_t v23 = &_swiftEmptyArrayStorage[5];
        do
        {
          uint64_t v24 = (void (*)(uint64_t *))*(v23 - 1);
          uint64_t v34 = sub_10018E87C();
          swift_retain();
          v24(&v34);
          swift_release();
          swift_release();
          v23 += 2;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        uint64_t v21 = (void (*)(uint64_t, uint64_t))v32;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = v4[12];
      if (v25)
      {
        v4[12] = 0;
        swift_errorRetain();
        sub_1000B44D0(a1, 1, v25, v26, v27, v28, v29, v30, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
          v43,
          v44,
          v45);
        swift_errorRelease();
        swift_release();
      }
      uint64_t v31 = sub_10018E87C();
      v21(a3, v31);
      swift_release();
      swift_retain();
      swift_retain();
      SelectableEventLoop.execute(_:)((uint64_t)sub_10019782C, (uint64_t)v4);
      swift_release();
      swift_release();
      return swift_release();
    }
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v9 = swift_allocError();
    *(void *)uint64_t v11 = 1;
    *(unsigned char *)(v11 + 8) = 3;
  }
  else
  {
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v9 = swift_allocError();
    *(void *)uint64_t v10 = 3;
    *(unsigned char *)(v10 + 8) = 3;
  }
  swift_errorRetain();
  sub_1000B44D0(v9, 1, a3, v12, v13, v14, v15, v16, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_10019034C(uint64_t a1, unsigned __int8 a2)
{
  if (!*(unsigned char *)(v2 + 88)) {
    sub_1000C9E90(*(void *)(v2 + 16), a2);
  }
}

void sub_100190380()
{
  if (!*(unsigned char *)(v0 + 88))
  {
    uint64_t v1 = sub_100197B90();
    (*(void (**)(uint64_t))(v2 + 848))(v1);
  }
}

#error "100190408: call analysis failed (funcsize=22)"

uint64_t sub_100190428()
{
  return sub_100190440();
}

uint64_t sub_100190440()
{
  uint64_t result = sub_100190830(1);
  if (!v1)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t ObjectType = swift_getObjectType();
    sub_100197CA0();
    uint64_t result = EventLoop.assertInEventLoop(file:line:)(v5, v6, v7, v8, ObjectType, v3);
    if (*(unsigned char *)(v0 + 249) == 1)
    {
      *(unsigned char *)(v0 + 249) = 2;
      EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/BaseSocketChannel.swift", 119, 2, 44, ObjectType, v3);
      sub_10018E87C();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

#error "1001906D8: call analysis failed (funcsize=176)"

uint64_t sub_1001907E4()
{
  uint64_t v0 = sub_100197B90();
  return (*(uint64_t (**)(uint64_t, void))(v1 + 856))(v0, *(unsigned __int8 *)(v2 + 216));
}

uint64_t sub_100190830(char a1)
{
  sub_10002FC68();
  if ((*(uint64_t (**)(void))(v4 + 584))())
  {
    v1[216] = a1;
    uint64_t result = sub_100190980();
    if (!v2) {
      return result;
    }
    uint64_t v6 = *(void *)(sub_10018E87C() + 56);
    uint64_t ObjectType = swift_getObjectType();
    EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1189, ObjectType, v6);
    if (sub_1000B05F8())
    {
      sub_1000B1750();
      swift_release();
    }
    swift_release();
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)v1 + 760))(v2, 2, 0);
  }
  else
  {
    sub_10002F0C8();
    sub_1000290D0();
    sub_10002FCB0(v8, 2);
  }
  return swift_willThrow();
}

uint64_t sub_100190980()
{
  if (*(unsigned char *)(v0 + 88))
  {
    sub_10002F2C8();
    sub_1000290D0();
    *uint64_t v1 = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v3 = sub_100197B90();
    return (*(uint64_t (**)(uint64_t, void))(v4 + 840))(v3, *(unsigned __int8 *)(v5 + 216));
  }
}

#error "100190BA0: call analysis failed (funcsize=115)"

#error "100190C38: call analysis failed (funcsize=42)"

uint64_t sub_100190C9C(uint64_t (*a1)(void))
{
  if (sub_1000F152C()) {
    return a1(*(unsigned int *)(v1 + 16));
  }
  sub_100028EB4();
  sub_1000290D0();
  sub_1000878A4();
  return sub_100062570(v4, v5);
}

uint64_t sub_100190D28(void (*a1)(uint64_t *__return_ptr, void))
{
  if (sub_1000F152C())
  {
    a1(&v8, *(unsigned int *)(v1 + 16));
    if (!v2) {
      char v4 = v8;
    }
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100062570(v5, v6);
  }
  return v4 & 1;
}

uint64_t sub_100190DBC(uint64_t result, uint64_t a2)
{
  if (result == 6 && a2 == 1)
  {
    unint64_t v4 = sub_1000F159C((uint64_t (*)(void))sub_1000F1BEC);
    if (v2)
    {
      uint64_t result = swift_errorRelease();
    }
    else
    {
      unint64_t v5 = v4;
      uint64_t result = swift_release();
      if ((v5 & 0x8000000000000000) != 0) {
        return result;
      }
    }
  }
  __chkstk_darwin(result, a2);
  return sub_100190C9C(sub_100197578);
}

uint64_t sub_100190EA4(uint64_t result, uint64_t a2)
{
  if (result == 6 && a2 == 1)
  {
    unint64_t v4 = sub_1000F159C((uint64_t (*)(void))sub_1000F1BEC);
    if (v2)
    {
      uint64_t result = swift_errorRelease();
    }
    else
    {
      unint64_t v5 = v4;
      uint64_t result = swift_release();
      if ((v5 & 0x8000000000000000) != 0) {
        return result;
      }
    }
  }
  __chkstk_darwin(result, a2);
  return sub_100190C9C(sub_100197334);
}

uint64_t sub_100190F8C(uint64_t result, uint64_t a2)
{
  if (result == 6 && a2 == 1)
  {
    unint64_t v4 = sub_1000F159C((uint64_t (*)(void))sub_1000F1BEC);
    if (v2)
    {
      uint64_t result = swift_errorRelease();
    }
    else
    {
      unint64_t v5 = v4;
      uint64_t result = swift_release();
      if ((v5 & 0x8000000000000000) != 0) {
        return result;
      }
    }
  }
  __chkstk_darwin(result, a2);
  return sub_100190C9C(sub_100197354);
}

void sub_100191078(uint64_t a1)
{
  uint64_t v1 = sub_100197A24(a1);
  if (v3)
  {
    sub_100197EB4();
    sub_100197C30();
    sub_100197E54((uint64_t)"can't register on selector as it's ");
    sub_100197C24();
    sub_100197C0C();
    sub_100197BF4();
    sub_100028EB4();
    uint64_t v4 = sub_1000290D0();
    *unint64_t v5 = v6;
    v5[1] = v7;
    sub_100197968(v4, (uint64_t)v5);
  }
  else
  {
    __chkstk_darwin(v1, v2);
    sub_100197B70();
    sub_100191BF4(sub_100197884);
    sub_100197BB0();
  }
  sub_100197BA4();
}

void sub_10019114C(uint64_t a1)
{
  uint64_t v1 = sub_100197A24(a1);
  if (v3)
  {
    sub_100197EB4();
    sub_100197C30();
    sub_100197E54((uint64_t)"can't register on selector as it's ");
    sub_100197C24();
    sub_100197C0C();
    sub_100197BF4();
    sub_100028EB4();
    uint64_t v4 = sub_1000290D0();
    *unint64_t v5 = v7;
    v5[1] = v8;
    sub_100197968(v4, (uint64_t)v5);
  }
  else
  {
    __chkstk_darwin(v1, v2);
    sub_100197B70();
    sub_100190C9C(v6);
    sub_100197BB0();
  }
  sub_100197BA4();
}

uint64_t sub_100191210(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t result = sub_100192850(a3, a4, 256, *(unsigned int *)(a2 + 32));
  if (!v5)
  {
    ++*(_DWORD *)(a2 + 32);
    a5(&v16, a4);
    uint64_t v11 = a1;
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    uint64_t v15 = v19;
    swift_beginAccess();
    Scheduled._promise.getter(v12);
    sub_10020C7D0(v12, v13 | (v14 << 8) | (v15 << 32), v11);
    swift_endAccess();
    return j__swift_release(v12, v13);
  }
  return result;
}

uint64_t sub_100191308(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_100192950(a3, a4, 256, *(unsigned int *)(a2 + 32), a7);
  if (!v7)
  {
    ++*(_DWORD *)(a2 + 32);
    a5(&v18, a4);
    uint64_t v13 = a1;
    uint64_t v14 = v18;
    uint64_t v15 = v19;
    uint64_t v16 = v20;
    uint64_t v17 = v21;
    swift_beginAccess();
    Scheduled._promise.getter(v14);
    sub_10020C7D0(v14, v15 | (v16 << 8) | (v17 << 32), v13);
    swift_endAccess();
    return j__swift_release(v14, v15);
  }
  return result;
}

void sub_100191404(uint64_t a1)
{
  uint64_t v1 = sub_100197A24(a1);
  if (v3)
  {
    sub_100197E94();
    sub_100197C30();
    sub_100197E74((uint64_t)"can't re-register on selector as it's ");
    sub_100197C24();
    sub_100197C0C();
    sub_100197BF4();
    sub_100028EB4();
    uint64_t v4 = sub_1000290D0();
    *uint64_t v5 = v6;
    v5[1] = v7;
    sub_100197968(v4, (uint64_t)v5);
  }
  else
  {
    __chkstk_darwin(v1, v2);
    sub_100197BD8();
    sub_100191BF4((uint64_t (*)(void))sub_100197848);
    sub_100197BB0();
  }
  sub_100197BA4();
}

void sub_1001914D8(uint64_t a1)
{
  uint64_t v1 = sub_100197A24(a1);
  if (v3)
  {
    sub_100197E94();
    sub_100197C30();
    sub_100197E74((uint64_t)"can't re-register on selector as it's ");
    sub_100197C24();
    sub_100197C0C();
    sub_100197BF4();
    sub_100028EB4();
    uint64_t v4 = sub_1000290D0();
    *uint64_t v5 = v7;
    v5[1] = v8;
    sub_100197968(v4, (uint64_t)v5);
  }
  else
  {
    __chkstk_darwin(v1, v2);
    sub_100197BD8();
    sub_100190C9C(v6);
    sub_100197BB0();
  }
  sub_100197BA4();
}

unint64_t sub_10019159C(int a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8 = a1;
  swift_beginAccess();
  unint64_t result = sub_100161588(v8, *(void *)(a2 + 24));
  uint64_t v11 = result;
  uint64_t v12 = v10;
  if ((~result & 0xF000000000000007) == 0 && (v10 & 0xFE) == 0xFE)
  {
    __break(1u);
  }
  else
  {
    sub_100192850(a3, a4, BYTE1(v10), HIDWORD(v10));
    if (!v4)
    {
      swift_beginAccess();
      Scheduled._promise.getter(v11);
      sub_10020C7D0(v11, v12 & 0xFFFFFFFF000000FFLL | ((unint64_t)a4 << 8), v8);
      swift_endAccess();
    }
    return sub_100197448(v11, v12);
  }
  return result;
}

void sub_1001916A8(int a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a1;
  sub_10006FF20();
  unint64_t v12 = sub_100161588(v10, *(void *)(a2 + 24));
  uint64_t v13 = v11;
  if ((~v12 & 0xF000000000000007) == 0 && (v11 & 0xFE) == 0xFE)
  {
    __break(1u);
  }
  else
  {
    sub_100192950(a3, a4, BYTE1(v11), HIDWORD(v11), a5);
    if (!v5)
    {
      swift_beginAccess();
      Scheduled._promise.getter(v12);
      sub_10020C7D0(v12, v13 & 0xFFFFFFFF000000FFLL | ((unint64_t)a4 << 8), v10);
      swift_endAccess();
    }
    sub_100197448(v12, v13);
    sub_100197C84();
  }
}

void sub_1001917B0(uint64_t a1)
{
  uint64_t v2 = sub_100197A24(a1);
  if (v4)
  {
    sub_100197ED4();
    sub_100197C30();
    sub_100197E34((uint64_t)"can't deregister from selector as it's ");
    sub_100197C24();
    sub_100197C0C();
    sub_100197BF4();
    sub_100028EB4();
    uint64_t v5 = sub_1000290D0();
    *uint64_t v6 = v8;
    v6[1] = v9;
    sub_100197968(v5, (uint64_t)v6);
  }
  else
  {
    __chkstk_darwin(v2, v3);
    sub_1000ACD1C();
    *(void *)(v7 - 16) = v1;
    *(void *)(v7 - 8) = &v10;
    sub_100191BF4((uint64_t (*)(void))sub_100197868);
    sub_100197BB0();
  }
  sub_100197BA4();
}

void sub_100191888(uint64_t a1)
{
  uint64_t v1 = sub_100197A24(a1);
  if (v3)
  {
    sub_100197ED4();
    sub_100197C30();
    sub_100197E34((uint64_t)"can't deregister from selector as it's ");
    sub_100197C24();
    sub_100197C0C();
    sub_100197BF4();
    sub_100028EB4();
    uint64_t v4 = sub_1000290D0();
    *uint64_t v5 = v7;
    v5[1] = v8;
    sub_100197968(v4, (uint64_t)v5);
  }
  else
  {
    __chkstk_darwin(v1, v2);
    sub_100190C9C(v6);
    sub_100197BB0();
  }
  sub_100197BA4();
}

uint64_t sub_10019195C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  swift_beginAccess();
  unint64_t v6 = sub_10011EDD4(v5);
  if ((v7 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v8 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0x8000000000000000;
  Swift::Int v10 = *(void *)(v16 + 24);
  sub_100019524(&qword_100316FC0);
  sub_10024F630(isUniquelyReferenced_nonNull_native, v10);
  uint64_t v11 = *(void *)(v16 + 56) + 16 * v8;
  uint64_t v12 = *(void *)v11;
  LOWORD(v10) = *(unsigned __int8 *)(v11 + 9);
  uint64_t v13 = *(unsigned int *)(v11 + 12);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 8);
  sub_10024F650();
  *(void *)(a2 + 24) = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_100192850(a3, 1, v10, v13);
  return j__swift_release(v12, v14);
}

void sub_100191AA8(int a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a1;
  swift_beginAccess();
  unint64_t v8 = sub_10011EDD4(v7);
  if (v9)
  {
    unint64_t v10 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(a2 + 24);
    *(void *)(a2 + 24) = 0x8000000000000000;
    Swift::Int v12 = *(void *)(v17 + 24);
    sub_100019524(&qword_100316FC0);
    sub_10024F630(isUniquelyReferenced_nonNull_native, v12);
    uint64_t v13 = *(void *)(v17 + 56) + 16 * v10;
    uint64_t v16 = *(void *)v13;
    LOWORD(v12) = *(unsigned __int8 *)(v13 + 9);
    uint64_t v14 = *(unsigned int *)(v13 + 12);
    uint64_t v15 = *(unsigned __int8 *)(v13 + 8);
    sub_10024F650();
    *(void *)(a2 + 24) = v17;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_100192950(a3, 1, v12, v14, a4);
    j__swift_release(v16, v15);
  }
  else
  {
    swift_endAccess();
  }
  sub_100197C84();
}

uint64_t sub_100191BF4(uint64_t (*a1)(void))
{
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 1) {
    return a1(*(unsigned int *)(v1 + 20));
  }
  sub_100028EB4();
  swift_allocError();
  *(void *)uint64_t v4 = 0xD00000000000001FLL;
  *(void *)(v4 + 8) = 0x800000010027B110;
  *(_DWORD *)(v4 + 16) = 9;
  return swift_willThrow();
}

uint64_t sub_100191CC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  *(_WORD *)(v5 + 296) = 0;
  *(unsigned char *)(v5 + 298) = 0;
  uint64_t v10 = a4[14];
  uint64_t v11 = a4[15];
  uint64_t v12 = a4[16];
  uint64_t v13 = a4[17];
  type metadata accessor for PendingStreamWritesManager();
  swift_allocObject();
  swift_retain();
  *(void *)(v6 + 304) = sub_1001EC5B4(v10, v11, v12, v13);
  *(void *)(v6 + 288) = 0;
  swift_release();
  sub_100027788(a5, (uint64_t)v18);
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_10018EAC8(v14, a2, a3, (uint64_t)a4, (uint64_t)v18, (uint64_t (*)(uint64_t, uint64_t))sub_100200DCC);
  sub_10001C2EC(a5);
  swift_release();
  return v15;
}

void sub_100191DE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  *(_WORD *)(v5 + 296) = 0;
  *(unsigned char *)(v5 + 298) = 0;
  uint64_t v10 = a4[14];
  uint64_t v11 = a4[15];
  uint64_t v12 = a4[16];
  uint64_t v13 = a4[17];
  type metadata accessor for PendingStreamWritesManager();
  swift_allocObject();
  swift_retain();
  *(void *)(v6 + 304) = sub_1001EC5B4(v10, v11, v12, v13);
  *(void *)(v6 + 288) = 0;
  swift_release();
  sub_100027788(a5, (uint64_t)v16);
  uint64_t v14 = swift_retain();
  sub_10018E88C(v14, a2, a3, (uint64_t)a4, (uint64_t)v16);
  sub_10001C2EC(a5);
  swift_release();
  sub_100197C84();
}

uint64_t sub_100191ED8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  return sub_100197BBC(v3, v4);
}

void sub_100191F08(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      NIOFileHandle.close()();
      if (!v2) {
        *(unsigned char *)(v1 + 297) = 1;
      }
    }
  }
  else
  {
    NIOFileHandle.close()();
    if (!v3) {
      *(unsigned char *)(v1 + 298) = 1;
    }
  }
}

uint64_t sub_100191F6C(uint64_t result)
{
  if ((_BYTE)result)
  {
    if (result == 1)
    {
      unint64_t result = sub_100087560(0);
      if (!v2) {
        *(unsigned char *)(v1 + 297) = 1;
      }
    }
  }
  else
  {
    unint64_t result = sub_100087560(1u);
    if (!v2) {
      *(unsigned char *)(v1 + 298) = 1;
    }
  }
  return result;
}

uint64_t sub_100191FDC()
{
  uint64_t v0 = sub_10018ED8C();
  swift_release();
  swift_release();
  return v0;
}

void sub_100192014()
{
  sub_100197CE0();
  if (v28)
  {
    if (v1[1])
    {
      if (v0)
      {
        sub_10002F0C8();
        uint64_t v6 = sub_1000290D0();
        uint64_t v7 = 4;
        goto LABEL_9;
      }
LABEL_32:
      sub_100197CF8();
      return;
    }
    sub_100191F6C(0);
    sub_1001EB85C(v3, 0);
    uint64_t v29 = sub_10018F26C();
    if (v0) {
      sub_100197A7C(v29, v30, v31, v32, v33, v34, v35, v36, v45, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, v54, v55,
    }
        v56,
        vars0,
        vars8);
    sub_100197DC0();
    uint64_t v48 = &type metadata for ChannelEvent;
    LOBYTE(v45) = 1;
LABEL_31:
    ChannelPipeline.fireUserInboundEventTriggered(_:)((uint64_t)&v45);
    swift_release();
    sub_10001C2EC((uint64_t)&v45);
    goto LABEL_32;
  }
  if (v4 == 1)
  {
    if (*v1)
    {
      if (v0)
      {
        sub_10002F0C8();
        uint64_t v6 = sub_1000290D0();
        uint64_t v7 = 5;
LABEL_9:
        sub_10002FCC0(v5, v7);
        sub_100197AD8(v6, v8, v9, v10, v11, v12, v13, v14, v45, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, v54, v55,
          v56,
          vars0,
          vars8);
        swift_errorRelease();
        sub_100197CF8();
        swift_errorRelease();
        return;
      }
      goto LABEL_32;
    }
    uint64_t v50 = v3;
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      BOOL v28 = v46 == 3 && v45 == 6;
      if (v28)
      {
        *uint64_t v1 = 1;
        swift_errorRelease();
        goto LABEL_28;
      }
      sub_100044A90(v45, v46);
    }
    swift_errorRelease();
    sub_100191F6C(1);
LABEL_28:
    uint64_t v37 = sub_10018F294();
    if (v0) {
      sub_100197A7C(v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, v54, v55,
    }
        v56,
        vars0,
        vars8);
    sub_100197DC0();
    uint64_t v48 = &type metadata for ChannelEvent;
    LOBYTE(v45) = 0;
    goto LABEL_31;
  }
  uint64_t v16 = *(void *)(v2 + 288);
  if (v16)
  {
    *(void *)(v2 + 288) = 0;
    sub_10002F2C8();
    uint64_t v17 = sub_1000290D0();
    *uint64_t v18 = 1;
    swift_errorRetain();
    sub_1000B44D0(v17, 1, v16, v19, v20, v21, v22, v23, v45, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, v54, v55,
      v56,
      vars0,
      vars8);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  sub_100197CF8();
  sub_10018F834(v24, v25, v26);
}

void sub_1001922A0()
{
  sub_100197CE0();
  if (v29)
  {
    if (v1[1])
    {
      if (v0)
      {
        sub_10002F0C8();
        uint64_t v7 = sub_1000290D0();
        uint64_t v8 = 4;
        goto LABEL_9;
      }
LABEL_37:
      sub_100197CF8();
      return;
    }
    sub_100197DAC();
    v31();
    if (!v2)
    {
      sub_1001EB85C(v4, 0);
      uint64_t v39 = sub_10018F26C();
      if (v0) {
        sub_100197A7C(v39, v40, v41, v42, v43, v44, v45, v46, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64, v65,
      }
          v66,
          vars0,
          vars8);
      sub_100197DC0();
      v58 = &type metadata for ChannelEvent;
      LOBYTE(v55) = 1;
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  if (v5 == 1)
  {
    if (*v1)
    {
      if (v0)
      {
        sub_10002F0C8();
        uint64_t v7 = sub_1000290D0();
        uint64_t v8 = 5;
LABEL_9:
        sub_10002FCC0(v6, v8);
        sub_100197AD8(v7, v9, v10, v11, v12, v13, v14, v15, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64, v65,
          v66,
          vars0,
          vars8);
        swift_errorRelease();
        sub_100197CF8();
        swift_errorRelease();
        return;
      }
      goto LABEL_37;
    }
    uint64_t v60 = v4;
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      BOOL v29 = v56 == 3 && v55 == 6;
      if (v29)
      {
        *uint64_t v1 = 1;
        swift_errorRelease();
LABEL_33:
        uint64_t v47 = sub_10018F294();
        if (v0) {
          sub_100197A7C(v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64, v65,
        }
            v66,
            vars0,
            vars8);
        sub_100197DC0();
        v58 = &type metadata for ChannelEvent;
        LOBYTE(v55) = 0;
LABEL_36:
        ChannelPipeline.fireUserInboundEventTriggered(_:)((uint64_t)&v55);
        swift_release();
        sub_10001C2EC((uint64_t)&v55);
        goto LABEL_37;
      }
      sub_100044A90(v55, v56);
    }
    swift_errorRelease();
    sub_100197DAC();
    v30();
    if (!v2) {
      goto LABEL_33;
    }
LABEL_26:
    if (v0)
    {
      swift_errorRetain();
      sub_100197AD8(v2, v32, v33, v34, v35, v36, v37, v38, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64, v65,
        v66,
        vars0,
        vars8);
      swift_errorRelease();
    }
    swift_errorRelease();
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v3 + 288);
  if (v17)
  {
    *(void *)(v3 + 288) = 0;
    sub_10002F2C8();
    uint64_t v18 = sub_1000290D0();
    *uint64_t v19 = 1;
    swift_errorRetain();
    sub_1000B44D0(v18, 1, v17, v20, v21, v22, v23, v24, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, v64, v65,
      v66,
      vars0,
      vars8);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  sub_100197CF8();
  sub_10018FDC0(v25, v26, v27);
}

uint64_t sub_100192564(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v5 = a2;
  return sub_1001B6CC0(a1, a3, a4, (uint64_t)&v5, 4u);
}

uint64_t sub_1001925C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  v7[0] = a2;
  v7[1] = a3;
  int v8 = a4;
  return sub_1001B6CC0(a1, a5, a6, (uint64_t)v7, 0x14u);
}

uint64_t sub_10019262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  return sub_1001B6CC0(a1, a3, a4, (uint64_t)&v5, 8u);
}

uint64_t sub_100192690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  socklen_t v9 = 8;
  uint64_t v7 = (uint64_t *)swift_slowAlloc();
  *uint64_t v7 = 0;
  sub_1001B69D8(a1, a2, a3, (uint64_t)v7, &v9);
  if (!v3) {
    a3 = *v7;
  }
  swift_slowDealloc();
  return a3;
}

uint64_t sub_100192770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  socklen_t v9 = 4;
  uint64_t v7 = (_DWORD *)swift_slowAlloc();
  *uint64_t v7 = 0;
  sub_1001B69D8(a1, a2, a3, (uint64_t)v7, &v9);
  if (!v3) {
    a3 = *v7;
  }
  swift_slowDealloc();
  return a3;
}

uint64_t sub_100192850(uint64_t a1, char a2, __int16 a3, uint64_t a4)
{
  if ((a3 & 0x100) != 0) {
    char v8 = 0;
  }
  else {
    char v8 = a3;
  }
  uint64_t v9 = sub_10015C4B8(v8);
  uint64_t v10 = sub_10015C4B8(a2);
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    uint64_t v11 = *(unsigned int *)(a1 + 20);
    swift_retain();
    return sub_10015C4C0(v9, v11, a4, v10, v4);
  }
  else
  {
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD00000000000001FLL;
    *(void *)(v13 + 8) = 0x800000010027B110;
    *(_DWORD *)(v13 + 16) = 9;
    return swift_willThrow();
  }
}

uint64_t sub_100192950(uint64_t a1, char a2, __int16 a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v5;
  if ((a3 & 0x100) != 0) {
    char v11 = 0;
  }
  else {
    char v11 = a3;
  }
  uint64_t v12 = sub_10015C4B8(v11);
  uint64_t v13 = sub_10015C4B8(a2);
  if (sub_1000F152C())
  {
    uint64_t v14 = *(unsigned int *)(a1 + 16);
    swift_retain();
    return a5(v12, v14, a4, v13, v7);
  }
  else
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    return sub_100062570(v16, v17);
  }
}

uint64_t sub_100192A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ServerSocket();
  swift_allocObject();
  uint64_t v9 = sub_1000622DC(a1, 1);
  if (v4)
  {
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v10 = v9;
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    a4 = sub_100193568(v10, a2, a3, a4, v11, v12, v13, v14);
    int v15 = *(_DWORD *)(a4 + 288);
    swift_retain();
    swift_retain();
    sub_100062380(v15);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  return a4;
}

uint64_t sub_100192B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ServerSocket();
  swift_allocObject();
  int v7 = sub_100197CC8();
  uint64_t v9 = sub_10006221C(v7, v8);
  if (v3)
  {
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = v9;
    uint64_t v12 = swift_allocObject();
    return sub_100193568(v11, a1, a2, a3, v12, v13, v14, v15);
  }
}

uint64_t sub_100192C40(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Socket();
  uint64_t v5 = sub_100197C6C();
  uint64_t v6 = a2;
  uint64_t v7 = v5;
  uint64_t v8 = sub_1000F1214(v6);
  if (!v2)
  {
    uint64_t v9 = v8;
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v7 = sub_100194908(v9, 0, 0, a1);
    swift_release();
  }
  swift_release();
  return v7;
}

uint64_t sub_100192D3C(uint64_t a1, int a2)
{
  sub_10002F9F4();
  sub_100197D0C();
  sub_100197C6C();
  uint64_t v4 = sub_100086A94(a2, 1, 1);
  if (v2)
  {
    swift_release();
    return sub_100197DDC();
  }
  else
  {
    sub_100197A34(v4, v5, v6, v7, v8, v9, v10, v11, v21, v23, v25, v27, v28, v29);
    uint64_t v13 = sub_100140C60();
    return sub_1001979E0(v13, v14, v15, v16, v17, v18, v19, v20, v22, v24, v26, (uint64_t)&type metadata for AdaptiveRecvByteBufferAllocator, (uint64_t)&protocol witness table for AdaptiveRecvByteBufferAllocator, v29, v30, v31);
  }
}

uint64_t sub_100192DFC()
{
  sub_10002F9F4();
  sub_100197D0C();
  sub_100197C6C();
  uint64_t v1 = sub_100197CC8();
  uint64_t v3 = sub_100086B34(v1, v2);
  if (v0)
  {
    swift_release();
    return sub_100197DDC();
  }
  else
  {
    sub_100197A34(v3, v4, v5, v6, v7, v8, v9, v10, v20, v22, v24, v26, v27, v28);
    uint64_t v12 = sub_100140C60();
    return sub_1001979E0(v12, v13, v14, v15, v16, v17, v18, v19, v21, v23, v25, (uint64_t)&type metadata for AdaptiveRecvByteBufferAllocator, (uint64_t)&protocol witness table for AdaptiveRecvByteBufferAllocator, v28, v29, v30);
  }
}

uint64_t sub_100192EA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator *a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 312) = 0;
  *(unsigned char *)(v8 + 320) = 1;
  sub_100197A34(a1, a2, a3, (uint64_t)a4, a5, a6, a7, a8, v16[0], v16[1], v16[2], (uint64_t)v17, (uint64_t)v18, v19);
  uint64_t v17 = &type metadata for AdaptiveRecvByteBufferAllocator;
  uint64_t v18 = &protocol witness table for AdaptiveRecvByteBufferAllocator;
  uint64_t v13 = sub_100140C60();
  v16[0] = v13;
  long long v14 = v20;
  *(_OWORD *)(v13 + 16) = v19;
  *(_OWORD *)(v13 + 32) = v14;
  *(unsigned char *)(v13 + 48) = v21;
  return sub_100191CC8(a1, a2, a3, a4, (uint64_t)v16);
}

void sub_100192F54(uint64_t a1, uint64_t a2)
{
  sub_100197D38(a1, a2);
  swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  __chkstk_darwin(v3, v4);
  sub_10002F9C8();
  __chkstk_darwin(v5, v6);
  if (sub_1001979A0())
  {
    uint64_t v7 = sub_100197AF0();
    v8(v7);
    if (sub_100197984())
    {
      uint64_t v9 = sub_100197B50();
      v10(v9);
      int v11 = swift_dynamicCast();
      uint64_t v12 = v20;
      if (!v11) {
        uint64_t v12 = 0;
      }
      *(void *)(v2 + 312) = v12;
      *(unsigned char *)(v2 + 320) = v11 ^ 1;
    }
    else
    {
      uint64_t v14 = sub_100197CB0();
      sub_1001D18C0(v14, v15, v16, v17);
    }
    uint64_t v18 = sub_100197D6C();
    v19(v18);
  }
  else
  {
    sub_10002F0C8();
    sub_1000290D0();
    sub_1000CA830(v13, 2);
  }
  sub_100197D2C();
}

void sub_1001930C8()
{
  sub_10002F9C8();
  __chkstk_darwin(v0, v1);
  if (sub_1001979A0())
  {
    uint64_t v2 = sub_100197B30();
    v3(v2);
    if (sub_100197984())
    {
      sub_100019524(&qword_100316FD0);
      swift_getAssociatedTypeWitness();
      swift_dynamicCast();
    }
    else
    {
      uint64_t v5 = sub_100197C54();
      sub_1001D1B74(v5, v6, v7);
    }
    uint64_t v8 = sub_100094D1C();
    v9(v8);
  }
  else
  {
    sub_10002F0C8();
    sub_1000290D0();
    sub_1000CA830(v4, 2);
  }
  sub_100197D2C();
}

uint64_t sub_100193208(unint64_t a1)
{
  uint64_t v3 = v1;
  char v4 = (v2 != 0) | sub_100086BC4(a1);
  if ((v4 & 1) == 0 && (*(unsigned char *)(v1 + 320) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + 312);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
    swift_retain();
    swift_retain();
    uint64_t v7 = static NIODeadline.now()();
    uint64_t v8 = static NIODeadline.+ infix(_:_:)(v7, v5);
    uint64_t v9 = sub_100190A08(v8, sub_10019775C, v6);
    swift_release();
    swift_release();
    *(void *)(v3 + 288) = v9;
    swift_release();
  }
  return v4 & 1;
}

uint64_t sub_1001932E4(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 96))
  {
    sub_10002F0C8();
    swift_allocError();
    *(void *)uint64_t v3 = a2;
    *(unsigned char *)(v3 + 8) = 0;
    sub_100192014();
    return swift_errorRelease();
  }
  return result;
}

#error "1001933B0: call analysis failed (funcsize=34)"

uint64_t sub_1001933E8()
{
  return sub_100194288();
}

uint64_t sub_10019343C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_10019347C()
{
  return sub_100194384();
}

uint64_t sub_1001934A8()
{
  return sub_100194404();
}

uint64_t sub_1001934D4()
{
  uint64_t v0 = sub_100191FDC();
  return _swift_deallocClassInstance(v0, 321, 7);
}

uint64_t type metadata accessor for SocketChannel(uint64_t a1)
{
  return sub_100022F8C(a1, qword_1003163C8);
}

uint64_t sub_100193524()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100193568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator *a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v8 + 288) = 128;
  *(void *)(v8 + 296) = a3;
  *(void *)(v8 + 304) = a4;
  sub_100197A34(a1, a2, a3, a4, a5, a6, a7, a8, v14[0], v14[1], v14[2], (uint64_t)v15, (uint64_t)v16, v17);
  uint64_t v15 = &type metadata for AdaptiveRecvByteBufferAllocator;
  uint64_t v16 = &protocol witness table for AdaptiveRecvByteBufferAllocator;
  uint64_t v11 = sub_100140C60();
  v14[0] = v11;
  long long v12 = v18;
  *(_OWORD *)(v11 + 16) = v17;
  *(_OWORD *)(v11 + 32) = v12;
  *(unsigned char *)(v11 + 48) = v19;
  return sub_10018EAC8(a1, 0, 0, a2, (uint64_t)v14, (uint64_t (*)(uint64_t, uint64_t))sub_100200DCC);
}

void sub_100193618(uint64_t a1, uint64_t a2)
{
  sub_100197D38(a1, a2);
  swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  __chkstk_darwin(v3, v4);
  sub_10002F9C8();
  __chkstk_darwin(v5, v6);
  if (sub_1001979A0())
  {
    uint64_t v7 = sub_100197AF0();
    v8(v7);
    if (sub_100197984())
    {
      uint64_t v9 = sub_100197B50();
      v10(v9);
      swift_dynamicCast();
      *(_DWORD *)(v2 + 288) = v17;
    }
    else
    {
      uint64_t v12 = sub_100197CB0();
      sub_10002B5B0(v12, v13, v14);
    }
    uint64_t v15 = sub_100197D6C();
    v16(v15);
  }
  else
  {
    sub_10002F0C8();
    sub_1000290D0();
    sub_1000CA830(v11, 2);
  }
  sub_100197D2C();
}

void sub_10019377C()
{
  sub_10002F9C8();
  __chkstk_darwin(v0, v1);
  if (sub_1001979A0())
  {
    uint64_t v2 = sub_100197B30();
    v3(v2);
    if (sub_100197984())
    {
      swift_getAssociatedTypeWitness();
      swift_dynamicCast();
    }
    else
    {
      uint64_t v5 = sub_100197C54();
      sub_10002BE38(v5, v6, v7);
    }
    uint64_t v8 = sub_100094D1C();
    v9(v8);
  }
  else
  {
    sub_10002F0C8();
    sub_1000290D0();
    sub_1000CA830(v4, 2);
  }
  sub_100197D2C();
}

#error "100193A70: call analysis failed (funcsize=160)"

#error "100193B74: call analysis failed (funcsize=21)"

uint64_t sub_100193B9C()
{
  return sub_1001952E4() & 1;
}

uint64_t sub_100193BB8()
{
  return sub_100195328();
}

void sub_100193BD0()
{
  uint64_t v2 = *(void *)(v0 + 144);
  if (!v2)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  if (!sub_10018E7A8())
  {
LABEL_17:
    sub_10002F0C8();
    sub_1000290D0();
    sub_10002FCB0(v25, 6);
    goto LABEL_18;
  }
  if (!sub_1000F152C())
  {
LABEL_16:
    sub_100028EB4();
    sub_1000290D0();
    sub_1000878A4();
    sub_100197C3C(v23, v24);
LABEL_18:
    swift_willThrow();
    return;
  }
  BOOL v5 = v2 == 1;
  uint64_t v6 = 1;
  uint64_t v30 = v2;
  while (1)
  {
    sub_1001B6510();
    if (v3) {
      break;
    }
    uint64_t v8 = v7;
    if ((v7 & 0x100000000) != 0) {
      break;
    }
    type metadata accessor for Socket();
    sub_100197C6C();
    uint64_t v9 = sub_1000F1214(v8);
    if (!sub_1000F152C())
    {
      sub_100028EB4();
      sub_1000290D0();
      sub_1000878A4();
      sub_100062570(v26, v27);
      sub_1000F14CC();
      swift_willThrow();
      swift_release();
      return;
    }
    sub_1001B7130();
    *(unsigned char *)(v4 + 88) = 0;
    uint64_t v10 = *(void *)(v4 + 304);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    uint64_t v13 = (void *)v12(ObjectType, v10);
    if (object_getClass(v13) != (Class)_TtC25ASOctaneSupportXPCService19SelectableEventLoop) {
      uint64_t v13 = 0;
    }
    uint64_t v14 = type metadata accessor for SocketChannel(0);
    swift_allocObject();
    swift_retain();
    uint64_t v19 = sub_100192EA8(v9, v4, (uint64_t)&off_1002DBF00, v13, v15, v16, v17, v18);
    uint64_t v20 = sub_10018E87C();
    v28[3] = v14;
    v28[0] = v19;
    char v29 = 2;
    uint64_t v21 = *(void *)(v20 + 56);
    uint64_t v22 = swift_getObjectType();
    EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1157, v22, v21);
    if (sub_1000B05F8())
    {
      swift_retain();
      sub_1000B13A4();
      swift_release();
      swift_release();
    }
    swift_release();
    swift_release();
    sub_10003908C((uint64_t)v28);
    if (v5) {
      return;
    }
    if (v6 == -1) {
      goto LABEL_23;
    }
    if (!sub_10018E7A8()) {
      goto LABEL_17;
    }
    BOOL v5 = ++v6 == v30;
    if (!sub_1000F152C()) {
      goto LABEL_16;
    }
  }
}

unint64_t sub_100193EEC()
{
  swift_errorRetain();
  sub_100019524(&qword_100309768);
  if (swift_dynamicCast()) {
    return 0;
  }
  swift_errorRetain();
  if (!swift_dynamicCast()) {
    return 1;
  }
  swift_bridgeObjectRelease();
  if (v1 >= 0x38) {
    return 1;
  }
  else {
    return (0x5FFFFFFE7FEFFFuLL >> v1) & 1;
  }
}

uint64_t sub_100193FB0()
{
  type metadata accessor for SocketChannel(0);
  uint64_t v0 = sub_100033028();
  swift_retain();
  swift_retain();
  SelectableEventLoop.execute(_:)((uint64_t)sub_100197608, v0);
  swift_release();
  return swift_release_n();
}

uint64_t sub_100194024()
{
  sub_1001FAAF4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/SocketChannel.swift", 115, 2, 301);
  swift_retain_n();
  sub_100131CD4();
  swift_release();
  swift_release();
  swift_retain_n();
  swift_retain();
  sub_10012DD14();
  swift_release();
  return swift_release();
}

uint64_t sub_10019410C()
{
  if (sub_10018E7A8()) {
    return sub_100190510(0);
  }
  sub_10002F0C8();
  swift_allocError();
  *(void *)uint64_t v1 = 2;
  *(unsigned char *)(v1 + 8) = 3;
  return swift_willThrow();
}

uint64_t sub_100194180()
{
  sub_10018E87C();
  ChannelPipeline.close(mode:promise:)();
  return swift_release();
}

#error "100194204: call analysis failed (funcsize=26)"

uint64_t sub_100194234()
{
  return sub_100194288();
}

uint64_t sub_100194288()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  swift_retain();
  sub_10019114C(v1);
  swift_release();
  return swift_release();
}

uint64_t sub_10019431C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_100194358()
{
  return sub_100194384();
}

uint64_t sub_100194384()
{
  uint64_t v0 = swift_retain();
  sub_100191888(v0);
  return swift_release();
}

uint64_t sub_1001943D8()
{
  return sub_100194404();
}

uint64_t sub_100194404()
{
  uint64_t v0 = swift_retain();
  sub_1001914D8(v0);
  return swift_release();
}

uint64_t sub_100194468()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100194470()
{
  uint64_t v0 = sub_10018ED8C();
  swift_unknownObjectRelease();
  return _swift_deallocClassInstance(v0, 312, 7);
}

uint64_t type metadata accessor for ServerSocketChannel(uint64_t a1)
{
  return sub_100022F8C(a1, qword_100316838);
}

uint64_t sub_1001944D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100194528()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 296) + 176);
  swift_retain();
  uint64_t v2 = sub_100007640((unsigned char *)(v1 + 16));
  swift_release();
  return v2;
}

BOOL sub_100194570()
{
  return sub_10018E7A8();
}

uint64_t sub_10019458C()
{
  return swift_release();
}

uint64_t sub_100194594()
{
  if ((*(unsigned char *)(v0 + 376) & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + 320);
    uint64_t v2 = *(void *)(v0 + 336);
    uint64_t v3 = *(void *)(v0 + 360);
    if (*(void *)(v0 + 304)) {
      sub_10003FBCC();
    }
    if (v1) {
      sub_10003FBCC();
    }
    if (v2) {
      sub_10003FBCC();
    }
    if (v3) {
      sub_10003FBCC();
    }
  }
  uint64_t v4 = sub_10018ED8C();
  swift_release();
  return v4;
}

uint64_t sub_100194614()
{
  uint64_t v0 = sub_100194594();
  return _swift_deallocClassInstance(v0, 377, 7);
}

uint64_t type metadata accessor for DatagramChannel(uint64_t a1)
{
  return sub_100022F8C(a1, qword_100316C00);
}

uint64_t sub_100194664()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001946C0(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  sub_10002F9F4();
  *(_WORD *)(v4 + 288) = 0;
  *(_OWORD *)(v4 + 304) = 0u;
  *(_OWORD *)(v4 + 320) = 0u;
  *(_OWORD *)(v4 + 336) = 0u;
  *(_OWORD *)(v4 + 352) = 0u;
  *(void *)(v4 + 368) = 0;
  *(unsigned char *)(v4 + 376) = 1;
  type metadata accessor for Socket();
  sub_100197C6C();
  swift_retain();
  uint64_t v7 = sub_100086A94(a2, 2, 0);
  if (v3)
  {
    swift_release();
  }
  else
  {
    uint64_t v8 = v7;
    if (sub_1000F152C())
    {
      sub_1001B7130();
      uint64_t v21 = *(void *)(a1 + 160);
      uint64_t v9 = *(void *)(a1 + 176);
      uint64_t v10 = *(void *)(a1 + 120);
      uint64_t v18 = *(void *)(a1 + 112);
      uint64_t v19 = *(void *)(a1 + 168);
      uint64_t v17 = *(void *)(a1 + 184);
      uint64_t v11 = *(void *)(a1 + 128);
      uint64_t v12 = *(void *)(a1 + 136);
      sub_10006FF20();
      long long v16 = *(_OWORD *)(a1 + 192);
      uint64_t v13 = *(void *)(a1 + 208);
      type metadata accessor for PendingDatagramWritesManager();
      swift_allocObject();
      *(void *)(v4 + 296) = sub_1001AAE10(v21, v19, v18, v10, v9, v17, v11, v12, v16, v13);
      swift_release();
      v20[3] = &type metadata for FixedSizeRecvByteBufferAllocator;
      v20[4] = &protocol witness table for FixedSizeRecvByteBufferAllocator;
      v20[0] = 2048;
      return sub_10018EAC8(v8, 0, 0, a1, (uint64_t)v20, (uint64_t (*)(uint64_t, uint64_t))sub_100200DCC);
    }
    sub_100028EB4();
    sub_1000290D0();
    sub_100062570(v15, 0xD00000000000001FLL);
    swift_release();
    sub_1000F14CC();
    swift_willThrow();
    swift_release();
  }
  swift_release();
  return swift_deallocPartialClassInstance();
}

uint64_t sub_100194908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  *(_WORD *)(v4 + 288) = 0;
  *(_OWORD *)(v4 + 304) = 0u;
  *(_OWORD *)(v4 + 320) = 0u;
  *(_OWORD *)(v4 + 336) = 0u;
  *(_OWORD *)(v4 + 352) = 0u;
  *(void *)(v4 + 368) = 0;
  *(unsigned char *)(v4 + 376) = 1;
  if (!sub_1000F152C())
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_100062570(v11, 0xD00000000000001FLL);
    goto LABEL_5;
  }
  swift_retain();
  sub_1001B7130();
  if (v5)
  {
    swift_release();
LABEL_5:
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return swift_deallocPartialClassInstance();
  }
  uint64_t v23 = *(void *)(a4 + 160);
  uint64_t v20 = *(void *)(a4 + 112);
  uint64_t v21 = *(void *)(a4 + 168);
  uint64_t v13 = *(void *)(a4 + 128);
  uint64_t v18 = *(void *)(a4 + 176);
  uint64_t v19 = *(void *)(a4 + 120);
  uint64_t v17 = *(void *)(a4 + 184);
  uint64_t v14 = *(void *)(a4 + 136);
  sub_10006FF20();
  long long v16 = *(_OWORD *)(a4 + 192);
  uint64_t v15 = *(void *)(a4 + 208);
  type metadata accessor for PendingDatagramWritesManager();
  swift_allocObject();
  *(void *)(v6 + 296) = sub_1001AAE10(v23, v21, v20, v19, v18, v17, v13, v14, v16, v15);
  swift_release();
  v22[3] = &type metadata for FixedSizeRecvByteBufferAllocator;
  v22[4] = &protocol witness table for FixedSizeRecvByteBufferAllocator;
  v22[0] = 2048;
  return sub_10018EAC8(a1, a2, a3, a4, (uint64_t)v22, (uint64_t (*)(uint64_t, uint64_t))sub_100200DCC);
}

uint64_t sub_100194B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  __chkstk_darwin(v7, v8);
  sub_10002F9C8();
  uint64_t v10 = v9;
  __chkstk_darwin(v11, v12);
  if (!sub_1001979A0())
  {
    sub_10002F0C8();
    sub_1000290D0();
    return sub_1000CA830(v16, 2);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, a1, a3);
  if (!sub_100197984())
  {
    if (sub_100197984())
    {
      uint64_t v18 = *(void *)(v3 + 296);
      uint64_t v19 = sub_1001979C4();
      v20(v19);
      sub_100197A5C();
      *(_OWORD *)(v18 + 160) = v36;
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, a3);
    }
    if (sub_100197984()) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, a3);
    }
    if (sub_100197984())
    {
      uint64_t v21 = sub_1001979C4();
      v22(v21);
      uint64_t v23 = sub_100197A5C();
      unint64_t v24 = sub_1000C8DD8(v23);
      sub_10002F2A0(v25);
      if ((~v24 & 0xF000000000000007) != 0)
      {
        uint64_t v26 = v24;
        if (!(v24 >> 62))
        {
          sub_10002F2A0(v24);
          *(unsigned char *)(v3 + 288) = 1;
          uint64_t v27 = 0;
          uint64_t v28 = 27;
          goto LABEL_28;
        }
        if (v24 >> 62 == 1)
        {
          sub_10002F2A0(v24);
          *(unsigned char *)(v3 + 288) = 1;
          uint64_t v27 = 41;
          uint64_t v28 = 35;
LABEL_28:
          sub_100190DBC(v27, v28);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, a3);
        }
        goto LABEL_22;
      }
    }
    else
    {
      if (!sub_100197984())
      {
        sub_10002B5B0(a1, a2, a3);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, a3);
      }
      uint64_t v29 = sub_1001979C4();
      v30(v29);
      uint64_t v31 = sub_100197A5C();
      unint64_t v32 = sub_1000C8DD8(v31);
      sub_10002F2A0(v33);
      if ((~v32 & 0xF000000000000007) != 0)
      {
        uint64_t v26 = v32;
        if (!(v32 >> 62))
        {
          sub_10002F2A0(v32);
          *(unsigned char *)(v3 + 289) = 1;
          if (qword_100308DE8 != -1) {
            swift_once();
          }
          uint64_t v28 = dword_10034C0F8;
          uint64_t v27 = 0;
          goto LABEL_28;
        }
        if (v32 >> 62 == 1)
        {
          sub_10002F2A0(v32);
          *(unsigned char *)(v3 + 289) = 1;
          if (qword_100308DF0 != -1) {
            swift_once();
          }
          uint64_t v28 = dword_10034C0FC;
          uint64_t v27 = 41;
          goto LABEL_28;
        }
LABEL_22:
        sub_10002F2A0(v26);
      }
    }
    sub_10002F0C8();
    sub_1000290D0();
    sub_1000CA830(v34, 1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, a3);
  }
  uint64_t v13 = *(void *)(v3 + 296);
  uint64_t v14 = sub_1001979C4();
  v15(v14);
  sub_100197A5C();
  *(void *)(v13 + 192) = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, a3);
}

uint64_t sub_100194EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002F9C8();
  uint64_t v9 = v8;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_10018E7A8())
  {
    sub_10002F0C8();
    sub_1000290D0();
    return sub_1000CA830(v14, 2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a1, a2);
  if (!sub_100197ABC())
  {
    if (sub_100197ABC())
    {
      long long v35 = *(_OWORD *)(*(void *)(v3 + 296) + 160);
      sub_100197B14();
      goto LABEL_18;
    }
    if (sub_100197ABC())
    {
      if (*(unsigned char *)(v3 + 376)) {
        uint64_t v16 = 0;
      }
      else {
        uint64_t v16 = *(void *)(v3 + 312);
      }
      *(void *)&long long v35 = v16;
      sub_100197B14();
      goto LABEL_18;
    }
    uint64_t v17 = sub_100197ABC();
    if (v17)
    {
      unint64_t v18 = sub_1000C8DD8(v17);
      sub_10002F2A0(v19);
      if ((~v18 & 0xF000000000000007) == 0)
      {
LABEL_30:
        sub_10002F0C8();
        sub_1000290D0();
        sub_10002FCB0(v30, 1);
LABEL_41:
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a2);
      }
      uint64_t v20 = v18;
      if (!(v18 >> 62))
      {
        sub_10002F2A0(v18);
        uint64_t v31 = *(void *)(v3 + 32);
        if (sub_1000F152C())
        {
          uint64_t v22 = *(unsigned int *)(v31 + 16);
          uint64_t v23 = 0;
          uint64_t v24 = 27;
          goto LABEL_38;
        }
        goto LABEL_40;
      }
      if (v18 >> 62 == 1)
      {
        sub_10002F2A0(v18);
        uint64_t v21 = *(void *)(v3 + 32);
        if (sub_1000F152C())
        {
          uint64_t v22 = *(unsigned int *)(v21 + 16);
          uint64_t v23 = 41;
          uint64_t v24 = 35;
LABEL_38:
          uint64_t v33 = sub_100192690(v22, v23, v24);
          if (v4) {
            return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a2);
          }
          LOBYTE(v35) = v33 != 0;
          sub_100197B14();
          goto LABEL_18;
        }
        goto LABEL_40;
      }
LABEL_29:
      sub_10002F2A0(v20);
      goto LABEL_30;
    }
    uint64_t v25 = sub_100197ABC();
    if (!v25)
    {
      sub_10002BE38(a1, a2, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a2);
    }
    unint64_t v26 = sub_1000C8DD8(v25);
    sub_10002F2A0(v27);
    if ((~v26 & 0xF000000000000007) == 0) {
      goto LABEL_30;
    }
    uint64_t v20 = v26;
    if (v26 >> 62)
    {
      if (v26 >> 62 != 1) {
        goto LABEL_29;
      }
      sub_10002F2A0(v26);
      uint64_t v28 = *(void *)(v3 + 32);
      if (qword_100308DF0 != -1) {
        swift_once();
      }
      uint64_t v29 = dword_10034C0FC;
      if (sub_1000F152C())
      {
        uint64_t v22 = *(unsigned int *)(v28 + 16);
        uint64_t v23 = 41;
LABEL_37:
        uint64_t v24 = v29;
        goto LABEL_38;
      }
    }
    else
    {
      sub_10002F2A0(v26);
      uint64_t v32 = *(void *)(v3 + 32);
      if (qword_100308DE8 != -1) {
        swift_once();
      }
      uint64_t v29 = dword_10034C0F8;
      if (sub_1000F152C())
      {
        uint64_t v22 = *(unsigned int *)(v32 + 16);
        uint64_t v23 = 0;
        goto LABEL_37;
      }
    }
LABEL_40:
    sub_100028EB4();
    sub_1000290D0();
    sub_100197C3C(v34, 0xD00000000000001FLL);
    goto LABEL_41;
  }
  *(void *)&long long v35 = *(void *)(*(void *)(v3 + 296) + 192);
  sub_100197B14();
LABEL_18:
  swift_dynamicCast();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a2);
}

uint64_t sub_1001952E4()
{
  sub_10002F0C8();
  sub_1000290D0();
  sub_1000CA830(v0, 1);
  return 0;
}

uint64_t sub_100195328()
{
  sub_10002F0C8();
  sub_1000290D0();
  return sub_1000CA830(v0, 1);
}

uint64_t sub_100195368()
{
  if (*(unsigned char *)(v0 + 376)) {
    return sub_1001953E0() & 1;
  }
  uint64_t result = sub_10024F670();
  __break(1u);
  return result;
}

uint64_t sub_1001953E0()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v42 = (unsigned char *)(v0 + 288);
  memset(v49, 0, sizeof(v49));
  unsigned int v48 = 128;
  swift_beginAccess();
  uint64_t v41 = v0 + 104;
  sub_100027788(v0 + 104, (uint64_t)v58);
  uint64_t v4 = v60;
  sub_10001C2A8(v58, *((uint64_t *)&v59 + 1));
  uint64_t v5 = sub_10018E698();
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
  sub_10001C2EC((uint64_t)v58);
  if ((*(unsigned char *)(v0 + 288) & 1) != 0 || *(unsigned char *)(v0 + 289) == 1)
  {
    uint64_t v7 = *(void *)(v0 + 48);
    swift_beginAccess();
    uint64_t v8 = sub_10007ACD0(0, *(void *)(v7 + 192), *(void *)(v7 + 200));
    uint64_t v39 = v9;
    uint64_t v40 = v8;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  uint64_t v38 = *(void *)(v0 + 144);
  if (!v38) {
LABEL_37:
  }
    __break(1u);
  if (sub_10018E7A8())
  {
    char v10 = 0;
    BOOL v11 = v38 == 1;
    unint64_t v44 = 1;
    uint64_t v45 = v0;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v12 = sub_10006C75C(*(_DWORD *)(v6 + 16));
        swift_release();
        uint64_t v6 = v12;
      }
      uint64_t v13 = *(unsigned int *)(v6 + 16);
      v58[0] = v40;
      v58[1] = v39;
      long long v59 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      char v62 = 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v14 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v13 << 32, v13);
        swift_release();
        LODWORD(v13) = *(_DWORD *)(v14 + 16);
        uint64_t v6 = v14;
      }
      swift_beginAccess();
      sub_100087284(*(void *)(v6 + 24), *(void *)(v6 + 24) + v13, (uint64_t)v49, &v48, v58);
      if (v2) {
        return swift_release();
      }
      if ((v16 & 1) == 0)
      {
        swift_release();
        return v10 & 1;
      }
      uint64_t v17 = v15;
      swift_beginAccess();
      uint64_t v18 = *(void *)(v3 + 128);
      uint64_t v19 = *(void *)(v3 + 136);
      sub_100051B64(v41, v18);
      char v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v18, v19);
      swift_endAccess();
      *(unsigned char *)(v3 + 88) = 0;
      uint64_t v47 = v6;
      BOOL v43 = v11;
      if ((*v42 & 1) == 0 && v42[1] != 1) {
        goto LABEL_17;
      }
      if ((v62 & 1) == 0)
      {
        *(void *)&long long v63 = v59;
        uint64_t v64 = v60;
        DWORD2(v63) = DWORD2(v59);
        int v65 = DWORD2(v60);
        long long v66 = v61;
        unsigned __int8 v23 = sub_10007BFEC(&v63);
        uint64_t v46 = v24;
        uint64_t v21 = v25;
        uint64_t v22 = v23;
      }
      else
      {
LABEL_17:
        uint64_t v46 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = 4;
      }
      unint64_t v26 = sub_1000F179C();
      uint64_t v27 = sub_10018E87C();
      v50[0] = v26;
      v50[1] = v47;
      int v51 = 0;
      int v52 = v17;
      LODWORD(v53) = v13;
      WORD2(v53) = 0;
      BYTE6(v53) = 0;
      uint64_t v54 = v22;
      uint64_t v55 = v46;
      uint64_t v56 = v21;
      char v57 = 1;
      uint64_t v28 = *(void *)(v27 + 56);
      uint64_t ObjectType = swift_getObjectType();
      EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1157, ObjectType, v28);
      if (sub_1000B05F8())
      {
        swift_retain();
        uint64_t v30 = v46;
        sub_10003BD08(v22, v46);
        swift_retain();
        swift_retain();
        sub_10003BD08(v22, v46);
        sub_1000B13A4();
        swift_release();
      }
      else
      {
        swift_retain();
        uint64_t v30 = v46;
        sub_10003BD08(v22, v46);
        swift_retain();
        swift_retain();
        sub_10003BD08(v22, v46);
      }
      swift_release();
      sub_10003908C((uint64_t)v50);
      if (v20)
      {
        unint64_t v31 = v44;
        if (v44 >= *(void *)(v45 + 144))
        {
          swift_release();
          swift_release();
          sub_10003B918(v22, v30);
          sub_10003B918(v22, v30);
        }
        else
        {
          sub_100027788(v41, (uint64_t)v50);
          uint64_t v32 = v54;
          sub_10001C2A8(v50, v53);
          uint64_t v33 = sub_10018E698();
          uint64_t v34 = *(uint64_t (**)(uint64_t))(v32 + 8);
          unint64_t v31 = v44;
          uint64_t v35 = v34(v33);
          swift_release();
          swift_release();
          sub_10003B918(v22, v30);
          sub_10003B918(v22, v30);
          swift_release();
          sub_10001C2EC((uint64_t)v50);
          uint64_t v47 = v35;
        }
      }
      else
      {
        swift_release();
        swift_release();
        sub_10003B918(v22, v30);
        sub_10003B918(v22, v30);
        unint64_t v31 = v44;
      }
      uint64_t v2 = 0;
      if (v43) {
        break;
      }
      uint64_t v6 = v47;
      if (v31 == -1)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v3 = v45;
      if (!sub_10018E7A8()) {
        goto LABEL_31;
      }
      BOOL v11 = v31 + 1 == v38;
      unint64_t v44 = v31 + 1;
      char v10 = 1;
    }
    swift_release();
    char v10 = 1;
    return v10 & 1;
  }
  else
  {
LABEL_31:
    sub_10002F0C8();
    swift_allocError();
    *(void *)uint64_t v36 = 6;
    *(unsigned char *)(v36 + 8) = 3;
    swift_willThrow();
    return swift_release();
  }
}

BOOL sub_100195A1C()
{
  swift_errorRetain();
  sub_100019524(&qword_100309768);
  if (!swift_dynamicCast()) {
    return 1;
  }
  swift_bridgeObjectRelease();
  return v2 != 61 && v2 != 12;
}

uint64_t sub_100195A94(uint64_t a1, uint64_t a2)
{
  NIOAny.forceAsByteEnvelope()((uint64_t)v6);
  if (sub_1001A95F8(v6, a2)) {
    return sub_10019751C((uint64_t)v6);
  }
  uint64_t v4 = *(void *)(sub_10018E87C() + 56);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1173, ObjectType, v4);
  if (sub_1000B05F8())
  {
    sub_1000B1558();
    swift_release();
  }
  sub_10019751C((uint64_t)v6);
  return swift_release();
}

BOOL sub_100195B58()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 136) & 1) == 0;
}

uint64_t sub_100195BA0()
{
  return sub_1001A973C();
}

uint64_t sub_100195BC4(uint64_t a1)
{
  return sub_1001A97A0(a1, 1);
}

uint64_t sub_100195BEC()
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 296);
  if (*(unsigned char *)(v3 + 200) == 1)
  {
    uint64_t v4 = *(void *)(v3 + 192);
    sub_10006FF20();
    if ((*(unsigned char *)(v3 + 136) & 1) == 0)
    {
      BOOL v5 = v4 == 0;
      swift_retain();
      uint64_t v33 = 0;
      while (1)
      {
        BOOL v34 = v5;
        while (2)
        {
          uint64_t v10 = sub_1001AAF28();
          switch((char)v10)
          {
            case 1:
              uint64_t v43 = *(void *)(v3 + 152);
              long long v16 = *(_OWORD *)(v3 + 136);
              long long v17 = *(_OWORD *)(v3 + 104);
              v42[1] = *(_OWORD *)(v3 + 120);
              v42[2] = v16;
              v42[0] = v17;
              uint64_t v18 = *(void *)(v3 + 40);
              uint64_t v19 = *(void *)(v3 + 64);
              uint64_t v38 = *(void *)(v3 + 56);
              uint64_t v39 = *(void *)(v3 + 48);
              uint64_t v20 = *(void *)(v3 + 24);
              uint64_t v21 = *(void *)(v3 + 80);
              uint64_t v36 = *(void *)(v3 + 72);
              uint64_t v37 = *(void *)(v3 + 16);
              uint64_t v35 = *(void *)(v3 + 32);
              uint64_t v22 = *(void *)(v3 + 88);
              uint64_t v23 = *(void *)(v3 + 96);
              sub_10001B078((uint64_t)v42);
              uint64_t v24 = sub_1001A99E4((uint64_t *)v42, v39, v38, v37, v20, v19, v36, v35, v18, v21, v22, v23, (uint64_t (*)(uint64_t, uint64_t))sub_1001974D8, v40);
              if (v2)
              {
                sub_100074F0C((uint64_t)v42);
                swift_getErrorValue();
                BOOL v26 = sub_1001A98C8(v41);
                if (!v26)
                {
                  swift_willThrow();
                  return swift_release();
                }
                __chkstk_darwin(v26, v27);
                sub_1000ACD1C();
                *(void *)(v28 - 16) = sub_1001974BC;
                *(void *)(v28 - 8) = v40;
                char v15 = sub_1001AB038((uint64_t)sub_1001974F4, v29);
                swift_errorRelease();
                uint64_t v2 = 0;
              }
              else
              {
                uint64_t v30 = v24;
                char v31 = v25 & 1;
                sub_100074F0C((uint64_t)v42);
                char v15 = sub_1001AB224(v30, v31, *(void *)(v3 + 16), *(void *)(v3 + 24), 0);
              }
              BOOL v5 = v34;
LABEL_21:
              if (!v15)
              {
LABEL_22:
                if (*(unsigned char *)(v3 + 200) != 1 || (*(unsigned char *)(v3 + 136) & 1) != 0) {
                  goto LABEL_4;
                }
                continue;
              }
              if (v15 == 2)
              {
                BOOL v5 = 1;
                goto LABEL_5;
              }
              if (v5) {
                goto LABEL_5;
              }
              uint64_t v32 = v33 + 1;
              if (v33 == -1)
              {
                __break(1u);
LABEL_35:
                __break(1u);
                JUMPOUT(0x100195FA8);
              }
              if (*(unsigned char *)(v3 + 200) != 1 || (*(unsigned char *)(v3 + 136) & 1) != 0) {
                goto LABEL_5;
              }
              ++v33;
              BOOL v5 = v32 == v4;
              break;
            case 2:
              goto LABEL_35;
            case 3:
              goto LABEL_22;
            default:
              __chkstk_darwin(v10, v11);
              sub_1000ACD1C();
              *(void *)(v12 - 16) = sub_1001974BC;
              *(void *)(v12 - 8) = v40;
              char v14 = sub_1001AB038((uint64_t)sub_1001974F4, v13);
              if (v2) {
                return swift_release();
              }
              char v15 = v14;
              goto LABEL_21;
          }
          break;
        }
      }
    }
  }
  swift_retain();
LABEL_4:
  BOOL v5 = 0;
LABEL_5:
  if (*(unsigned char *)(v3 + 184) == 1)
  {
    swift_release();
    int v6 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 176);
    swift_retain();
    int v8 = sub_100007640((unsigned char *)(v7 + 16));
    swift_release();
    *(unsigned char *)(v3 + 184) = v8;
    swift_release();
    if (v8) {
      int v6 = 256;
    }
    else {
      int v6 = 0;
    }
  }
  return v6 | v5;
}

void sub_100195FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 && a2 - a1 >= 1)
  {
    uint64_t v13 = *(void *)(a8 + 48);
    swift_beginAccess();
    uint64_t v23 = sub_10007ACD0(0, *(void *)(v13 + 192), *(void *)(v13 + 200));
    uint64_t v24 = v14;
    unint64_t v15 = sub_1000C8DD8(v23);
    sub_10002F2A0(v16);
    if ((~v15 & 0xF000000000000007) == 0) {
      goto LABEL_10;
    }
    int v17 = *(_DWORD *)((char *)dword_100266EFC + ((v15 >> 60) & 0xC));
    sub_10002F2A0(v15);
    if (a5 == 4) {
      goto LABEL_10;
    }
    if (v17 == 30)
    {
      sub_10002F288(a6);
      int v18 = sub_10007C3E8(a5);
      unsigned int v19 = 41;
      unsigned int v20 = 36;
    }
    else
    {
      if (v17 != 2)
      {
LABEL_10:
        sub_10007C520(v23, v24, 0);
        sub_100087190(a1, a2, a3, a4, v21, v22);
        return;
      }
      sub_10002F288(a6);
      int v18 = sub_10007C3E8(a5);
      unsigned int v19 = 0;
      unsigned int v20 = 3;
    }
    sub_1001A92B4(v19, v20, v18);
    sub_10003B918(a5, a6);
    goto LABEL_10;
  }
}

void sub_10019616C(msghdr *a1, unint64_t a2, uint64_t a3)
{
}

#error "1001961F0: call analysis failed (funcsize=62)"

uint64_t sub_1001962A0()
{
  return sub_100194288();
}

uint64_t sub_1001962F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_100196334()
{
  return sub_100197A54(72, 16, (void *)0x8000000100281CF0, (uint64_t (*)(void))sub_1000C8DD8);
}

uint64_t sub_100196364()
{
  return sub_10019646C(72, 0xD000000000000010, (void *)0x8000000100281CF0, (uint64_t (*)(void))sub_1000C8DD8);
}

uint64_t sub_1001963B8()
{
  return sub_100197A54(78, 22, (void *)0x8000000100281D10, (uint64_t (*)(void))sub_1000C8DD8);
}

uint64_t sub_1001963E8()
{
  return sub_10019646C(78, 0xD000000000000016, (void *)0x8000000100281D10, (uint64_t (*)(void))sub_1000C8DD8);
}

uint64_t sub_10019643C()
{
  return sub_100197A54(74, 18, (void *)0x8000000100281D30, (uint64_t (*)(void))sub_1000C8DD8);
}

uint64_t sub_10019646C(Swift::Int a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  sub_10024F330(a1);
  v26._countAndFlagsBits = a2;
  v26._object = a3;
  sub_10024E800(v26);
  uint64_t v8 = v4[9];
  uint64_t v9 = (void *)v4[10];
  swift_bridgeObjectRetain();
  v27._countAndFlagsBits = v8;
  v27._object = v9;
  sub_10024E800(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0x657669746361202CLL;
  v28._object = (void *)0xEB00000000203D20;
  sub_10024E800(v28);
  uint64_t v10 = v4[8];
  swift_retain();
  int v11 = sub_100007640((unsigned char *)(v10 + 16));
  swift_release();
  if (v11) {
    v12._countAndFlagsBits = 1702195828;
  }
  else {
    v12._countAndFlagsBits = 0x65736C6166;
  }
  if (v11) {
    uint64_t v13 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v13 = (void *)0xE500000000000000;
  }
  v12._object = v13;
  sub_10024E800(v12);
  swift_bridgeObjectRelease();
  v29._object = (void *)0x800000010027D340;
  v29._countAndFlagsBits = 0xD000000000000011;
  sub_10024E800(v29);
  uint64_t v14 = a4();
  sub_10002F2A0(v15);
  sub_100019524(&qword_10030F668);
  uint64_t v16 = sub_10024F020();
  int v18 = v17;
  sub_10002F2A0(v14);
  v30._countAndFlagsBits = v16;
  v30._object = v18;
  sub_10024E800(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 0xD000000000000012;
  v31._object = (void *)0x800000010027D360;
  sub_10024E800(v31);
  uint64_t v19 = a4();
  uint64_t v21 = v20;
  sub_10002F2A0(v19);
  uint64_t v22 = sub_10024F020();
  uint64_t v24 = v23;
  sub_10002F2A0(v21);
  v32._countAndFlagsBits = v22;
  v32._object = v24;
  sub_10024E800(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 32032;
  v33._object = (void *)0xE200000000000000;
  sub_10024E800(v33);
  return 0;
}

uint64_t sub_100196688()
{
  return sub_10019646C(74, 0xD000000000000012, (void *)0x8000000100281D30, (uint64_t (*)(void))sub_1000C8DD8);
}

uint64_t sub_1001966DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196BE8(a1, a2, a3, 0, (uint64_t)&unk_1002EC5A8, (uint64_t)sub_100197404);
}

uint64_t sub_100196700(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  swift_retain();
  int v10 = sub_100007640((unsigned char *)(v9 + 16));
  uint64_t result = swift_release();
  if (!v10)
  {
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v15 = swift_allocError();
    uint64_t v16 = 12;
    goto LABEL_9;
  }
  if (a2 && (*(unsigned char *)(a2 + 64) & 1) == 0)
  {
    if (!a3) {
      return result;
    }
    sub_10019705C();
    uint64_t v15 = swift_allocError();
    *Swift::String v26 = a2;
    swift_retain();
    goto LABEL_10;
  }
  unint64_t v12 = sub_1000C8DD8(result);
  uint64_t result = sub_10002F2A0(v13);
  if ((~v12 & 0xF000000000000007) == 0)
  {
    if (!a3) {
      return result;
    }
    sub_10002F0C8();
    uint64_t v15 = swift_allocError();
    uint64_t v16 = 9;
LABEL_9:
    *(void *)uint64_t v14 = v16;
    *(unsigned char *)(v14 + 8) = 3;
LABEL_10:
    swift_errorRetain();
    sub_1000B44D0(v15, 1, a3, v17, v18, v19, v20, v21, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
      v55,
      vars0,
      vars8);
    swift_errorRelease();
LABEL_11:
    return swift_errorRelease();
  }
  unint64_t v22 = a1 >> 62;
  if (*(_DWORD *)((char *)dword_100266EFC + ((v12 >> 60) & 0xC)) == dword_100266EFC[a1 >> 62])
  {
    if (SocketAddress.isMulticast.getter(a1))
    {
      if (a2)
      {
        unint64_t v23 = *(void *)(a2 + 32);
        sub_10002F288(v23);
        if (v22)
        {
LABEL_18:
          if (v22 != 1)
          {
            __break(1u);
            goto LABEL_59;
          }
          if ((~v23 & 0xF000000000000007) == 0)
          {
            if (a4) {
              uint64_t v24 = 13;
            }
            else {
              uint64_t v24 = 12;
            }
            swift_retain();
            uint64_t v25 = v24;
            goto LABEL_44;
          }
          if (v23 >> 62 == 1)
          {
            swift_retain();
            sub_10002F2A0(v23);
            if (a2)
            {
              unint64_t v31 = *(void *)(a2 + 72);
              if ((v31 & 0x8000000000000000) == 0 && !HIDWORD(v31))
              {
                if (a4) {
                  uint64_t v25 = 13;
                }
                else {
                  uint64_t v25 = 12;
                }
LABEL_44:
                sub_100190F8C(41, v25);
                goto LABEL_50;
              }
LABEL_60:
              uint64_t result = sub_10024F660();
              __break(1u);
              return result;
            }
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
LABEL_55:
          sub_10002F2A0(v23);
          sub_10002F0C8();
          uint64_t v27 = swift_allocError();
          *(void *)uint64_t v38 = 11;
          *(unsigned char *)(v38 + 8) = 3;
          swift_willThrow();
          if (!a3)
          {
LABEL_57:
            sub_10002F2A0(v12);
            goto LABEL_11;
          }
LABEL_56:
          swift_errorRetain();
          sub_1000B44D0(v27, 1, a3, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
            v55,
            vars0,
            vars8);
          swift_errorRelease();
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v23 = 0xF000000000000007;
        if (v22) {
          goto LABEL_18;
        }
      }
      if ((~v23 & 0xF000000000000007) != 0)
      {
        if (v23 >> 62) {
          goto LABEL_55;
        }
        if (a4) {
          uint64_t v32 = 13;
        }
        else {
          uint64_t v32 = 12;
        }
        swift_retain();
        sub_100190EA4(0, v32);
        sub_10002F2A0(v23);
      }
      else
      {
        if (a4) {
          uint64_t v30 = 13;
        }
        else {
          uint64_t v30 = 12;
        }
        swift_retain();
        sub_100190EA4(0, v30);
      }
LABEL_50:
      swift_release();
      if (a3) {
        sub_1000B44D0(0, 0, a3, v33, v34, v35, v36, v37, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
      }
          v55,
          vars0,
          vars8);
      goto LABEL_52;
    }
    if (a3)
    {
      sub_10002F0C8();
      uint64_t v27 = swift_allocError();
      *(void *)uint64_t v29 = a1;
      *(unsigned char *)(v29 + 8) = 1;
      swift_retain();
      goto LABEL_56;
    }
  }
  else if (a3)
  {
    sub_10002F0C8();
    uint64_t v27 = swift_allocError();
    *(void *)uint64_t v28 = 10;
    *(unsigned char *)(v28 + 8) = 3;
    goto LABEL_56;
  }
LABEL_52:
  return sub_10002F2A0(v12);
}

uint64_t sub_100196BC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196BE8(a1, a2, a3, 1, (uint64_t)&unk_1002EC558, (uint64_t)sub_100197378);
}

uint64_t sub_100196BE8(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = v6;
  swift_retain();
  BOOL v13 = sub_1000C6ADC();
  swift_release();
  if (v13)
  {
    if (a2)
    {
      uint64_t v14 = swift_retain();
      uint64_t v15 = NIONetworkDevice.init(_:)(v14);
    }
    else
    {
      uint64_t v15 = 0;
    }
    sub_100196700(a1, v15, a3, a4);
  }
  else
  {
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v9;
    uint64_t v16[3] = a1;
    v16[4] = a2;
    v16[5] = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    SelectableEventLoop.execute(_:)(a6, (uint64_t)v16);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_100196D10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7 = a3;
  if (a3)
  {
    uint64_t v9 = swift_retain();
    uint64_t v7 = NIONetworkDevice.init(_:)(v9);
  }
  sub_100196700(a2, v7, a4, a5);
  return swift_release();
}

uint64_t sub_100196D90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196E0C(a1, a2, a3, 0, (uint64_t)&unk_1002EC580, (uint64_t)sub_1001973A0);
}

uint64_t sub_100196DB4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100196700(a2, a3, a4, 0);
}

uint64_t sub_100196DE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196E0C(a1, a2, a3, 1, (uint64_t)&unk_1002EC530, (uint64_t)sub_100197050);
}

uint64_t sub_100196E0C(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = v6;
  swift_retain();
  BOOL v13 = sub_1000C6ADC();
  swift_release();
  if (v13)
  {
    return sub_100196700(a1, a2, a3, a4);
  }
  else
  {
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v9;
    v15[3] = a1;
    v15[4] = a2;
    v15[5] = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    SelectableEventLoop.execute(_:)(a6, (uint64_t)v15);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100196F38(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100196700(a2, a3, a4, 1);
}

uint64_t sub_100196F6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196BE8(a1, a2, a3, 0, (uint64_t)&unk_1002EC5A8, (uint64_t)sub_100197404);
}

uint64_t sub_100196FA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196E0C(a1, a2, a3, 0, (uint64_t)&unk_1002EC580, (uint64_t)sub_1001973A0);
}

uint64_t sub_100196FDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196BE8(a1, a2, a3, 1, (uint64_t)&unk_1002EC558, (uint64_t)sub_100197378);
}

uint64_t sub_100197014(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100196E0C(a1, a2, a3, 1, (uint64_t)&unk_1002EC530, (uint64_t)sub_100197050);
}

uint64_t sub_100197050()
{
  return sub_100196F38(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_10019705C()
{
  unint64_t result = qword_100316FB8;
  if (!qword_100316FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100316FB8);
  }
  return result;
}

uint64_t sub_1001970A8(int a1, uint64_t a2, uint64_t *a3)
{
  return sub_10019195C(a1, a2, *a3);
}

void sub_1001970C4(int a1, uint64_t a2, uint64_t *a3)
{
}

void sub_1001970F4(int a1, uint64_t a2, uint64_t *a3)
{
}

unint64_t sub_100197124(int a1, uint64_t a2, uint64_t *a3, unsigned __int8 a4)
{
  return sub_10019159C(a1, a2, *a3, a4);
}

void sub_100197140(int a1, uint64_t a2, uint64_t *a3, unsigned __int8 a4)
{
}

void sub_100197170(int a1, uint64_t a2, uint64_t *a3, unsigned __int8 a4)
{
}

uint64_t sub_1001971A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v6 = a4 - a3;
  if (!a3) {
    uint64_t v6 = 0;
  }
  if (result < 0 || v6 < result) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1001971CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10008EE54(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_1001971A0(a1, a2, a4, a5);
}

uint64_t sub_100197254(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  return sub_100192564(a1, *a2, a3, a4);
}

uint64_t sub_100197270(int a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t))
{
  return sub_100191210(a1, a2, *a3, a4, a5);
}

uint64_t sub_10019728C(int a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6)
{
  return sub_100191308(a1, a2, *a3, a4, a5, a6, sub_10015C520);
}

uint64_t sub_1001972BC(int a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6)
{
  return sub_100191308(a1, a2, *a3, a4, a5, a6, sub_10015C60C);
}

uint64_t sub_1001972EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001925C8(a1, *(void *)a2, *(void *)(a2 + 8), *(_DWORD *)(a2 + 16), a3, a4);
}

uint64_t sub_100197318(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10019262C(a1, *a2, a3, a4);
}

uint64_t sub_100197334(uint64_t a1)
{
  return sub_100197318(a1, *(uint64_t **)(v1 + 16), *(unsigned int *)(v1 + 24), *(unsigned int *)(v1 + 28));
}

uint64_t sub_100197354(uint64_t a1)
{
  return sub_1001972EC(a1, *(void *)(v1 + 16), *(unsigned int *)(v1 + 24), *(unsigned int *)(v1 + 28));
}

uint64_t sub_100197378()
{
  return sub_100196D10(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 1);
}

uint64_t sub_1001973A0()
{
  return sub_100196DB4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001973B0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100197404()
{
  return sub_100196D10(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 0);
}

void sub_100197428(int a1)
{
  sub_100197140(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100197448(uint64_t result, uint64_t a2)
{
  if ((~result & 0xF000000000000007) != 0 || (a2 & 0xFE) != 0xFE) {
    return j__swift_release(result, a2);
  }
  return result;
}

void sub_100197468(int a1)
{
  sub_1001970C4(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_100197484(uint64_t a1, uint64_t a2)
{
  return sub_1001962F4(a1, a2, v2);
}

uint64_t sub_100197490(uint64_t a1)
{
  return sub_1001978B0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10019728C);
}

void sub_1001974BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100195FB8(a1, a2, a3, a4, a5, a6, a7, v7);
}

void sub_1001974D8(msghdr *a1, unint64_t a2)
{
  sub_10019616C(a1, a2, v2);
}

uint64_t sub_1001974F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001AB010(a1, a2, a3, a4, a5, a6, a7, *(uint64_t (**)(void))(v7 + 16));
}

uint64_t sub_10019751C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_release();
  swift_release();
  sub_10003B918(v2, v3);
  return a1;
}

uint64_t sub_100197578(uint64_t a1)
{
  return sub_100197254(a1, *(int **)(v1 + 16), *(unsigned int *)(v1 + 24), *(unsigned int *)(v1 + 28));
}

void sub_100197598(int a1)
{
  sub_100197170(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

void sub_1001975B8(int a1)
{
  sub_1001970F4(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1001975D4(uint64_t a1, uint64_t a2)
{
  return sub_10019431C(a1, a2, v2);
}

uint64_t sub_1001975DC(uint64_t a1)
{
  return sub_1001978B0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1001972BC);
}

uint64_t sub_100197608()
{
  return sub_100194024();
}

uint64_t sub_100197610()
{
  return sub_10019410C();
}

uint64_t sub_10019762C()
{
  return sub_100194180();
}

uint64_t sub_100197634()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100197644()
{
  return sub_10019790C((void (*)(void))&_swift_release);
}

uint64_t sub_10019765C()
{
  return sub_100190510(*(void *)(v0 + 24));
}

uint64_t sub_100197684()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1001976B4()
{
  swift_release();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001976EC(uint64_t a1)
{
  return sub_100193B48(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001976F4(uint64_t a1, uint64_t a2)
{
  return sub_10019343C(a1, a2, v2);
}

uint64_t sub_1001976FC()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return sub_100197BBC(v1, v2);
}

uint64_t sub_10019772C()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10019775C()
{
  return sub_1001932E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100197778()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001977B8()
{
  return sub_100190BF4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001977C4()
{
  return sub_10019790C((void (*)(void))&_swift_release);
}

uint64_t sub_1001977DC()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100197814()
{
  return sub_10019790C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10019782C()
{
  return sub_1001903D0(v0);
}

unint64_t sub_100197848(int a1)
{
  return sub_100197124(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100197868(int a1)
{
  return sub_1001970A8(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_100197884(uint64_t a1)
{
  return sub_1001978B0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100197270);
}

uint64_t sub_1001978B0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1001978DC()
{
  return sub_10019790C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1001978F4()
{
  return sub_10019790C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10019790C(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  uint64_t v3 = sub_1001414C8();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100197968(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + 16) = 9;
  return swift_willThrow();
}

uint64_t sub_100197984()
{
  return swift_dynamicCast();
}

BOOL sub_1001979A0()
{
  return sub_10018E7A8();
}

uint64_t sub_1001979C4()
{
  return v0;
}

uint64_t sub_1001979E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, long long a14, long long a15, char a16)
{
  a9 = a1;
  long long v19 = a15;
  *(_OWORD *)(a1 + 16) = a14;
  *(_OWORD *)(a1 + 32) = v19;
  *(unsigned char *)(a1 + 48) = a16;
  return sub_100191CC8(v16, 0, 0, v17, (uint64_t)&a9);
}

uint64_t sub_100197A24(uint64_t result)
{
  *(void *)(v1 - 24) = result;
  return result;
}

void sub_100197A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  AdaptiveRecvByteBufferAllocator.init(minimum:initial:maximum:)((ASOctaneSupportXPCService::AdaptiveRecvByteBufferAllocator *)&a14, 64, 2048, 0x10000);
}

uint64_t sub_100197A54(Swift::Int a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  return sub_10019646C(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t sub_100197A5C()
{
  return swift_dynamicCast();
}

void sub_100197A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, BOOL a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B44D0(0, 0, v22, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_100197A98(uint64_t a1)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 119, 2, 44, v2, v1);
}

uint64_t sub_100197ABC()
{
  return swift_dynamicCast();
}

void sub_100197AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, BOOL a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1000B44D0(a1, 1, v22, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_100197AF0()
{
  *(void *)(v2 - 96) = v1;
  return v0;
}

uint64_t sub_100197B14()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_100197B30()
{
  return v0;
}

uint64_t sub_100197B50()
{
  return v0;
}

uint64_t sub_100197B90()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100197BBC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t v2 = result;
  *(_WORD *)(v2 + 8) = a2;
  *(_DWORD *)(v2 + 12) = HIDWORD(a2);
  return result;
}

void sub_100197BF4()
{
  v1._countAndFlagsBits = 46;
  v1._object = (void *)0xE100000000000000;
  sub_10024E800(v1);
}

uint64_t sub_100197C0C()
{
  return sub_10024F5C0();
}

void sub_100197C24()
{
  *(unsigned char *)(v1 - 49) = *(unsigned char *)(v0 + 16);
}

void sub_100197C30()
{
  uint64_t v1 = *(void *)(v0 - 40);
  *(void *)(v0 - 48) = *(void *)(v0 - 48);
  *(void *)(v0 - 40) = v1;
}

void sub_100197C3C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_DWORD *)(a1 + 16) = 9;
}

uint64_t sub_100197C54()
{
  return v0;
}

uint64_t sub_100197C6C()
{
  return swift_allocObject();
}

uint64_t sub_100197CB0()
{
  return *(void *)(v0 - 80);
}

uint64_t sub_100197CC8()
{
  return v0;
}

uint64_t sub_100197D0C()
{
  *(void *)(v0 + 312) = 0;
  *(unsigned char *)(v0 + 320) = 1;
  return type metadata accessor for Socket();
}

uint64_t sub_100197D38(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 88) = a2;
  *(void *)(v2 - 80) = result;
  return result;
}

uint64_t sub_100197D4C()
{
  return swift_getObjectType();
}

uint64_t sub_100197D6C()
{
  return v0;
}

uint64_t sub_100197D80()
{
  sub_10002F2A0(v3);
  sub_10002F2A0(v2);
  sub_10002F2A0(v1);
  return v0;
}

uint64_t sub_100197DC0()
{
  return sub_10018E87C();
}

uint64_t sub_100197DDC()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_100197DFC()
{
  sub_10002F288(v0);
  sub_10002F288(v1);
  return sub_10018E5E8(v0, v1);
}

void sub_100197E34(uint64_t a1@<X8>)
{
  v2._countAndFlagsBits = 0xD000000000000027;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_10024E800(v2);
}

void sub_100197E54(uint64_t a1@<X8>)
{
  v2._countAndFlagsBits = 0xD000000000000023;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_10024E800(v2);
}

void sub_100197E74(uint64_t a1@<X8>)
{
  v2._countAndFlagsBits = 0xD000000000000026;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_10024E800(v2);
}

void sub_100197E94()
{
  *(void *)(v0 - 48) = 0;
  *(void *)(v0 - 40) = 0xE000000000000000;
  sub_10024F330(41);
}

void sub_100197EB4()
{
  *(void *)(v0 - 48) = 0;
  *(void *)(v0 - 40) = 0xE000000000000000;
  sub_10024F330(38);
}

void sub_100197ED4()
{
  *(void *)(v0 - 48) = 0;
  *(void *)(v0 - 40) = 0xE000000000000000;
  sub_10024F330(42);
}

uint64_t sub_100197EF4()
{
  v1._countAndFlagsBits = 40;
  v1._object = (void *)0xE100000000000000;
  sub_10024E800(v1);
  sub_10024EC20();
  v2._countAndFlagsBits = 44;
  v2._object = (void *)0xE100000000000000;
  sub_10024E800(v2);
  v3._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  sub_10024E800(v4);
  return 0;
}

uint64_t sub_100197FB0(void *a1)
{
  uint64_t v3 = sub_10024E6F0();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v5 = a1[3];
  sub_10001C2A8(a1, v5);
  sub_100111414();
  sub_10024FD10();
  if (v1) {
    goto LABEL_4;
  }
  sub_10001C2A8(v58, v58[3]);
  sub_100111414();
  uint64_t v7 = sub_10024FA70();
  uint64_t v9 = v8;
  sub_10024DE60();
  if (v10 >> 60 != 15)
  {
    uint64_t v5 = v10;
    sub_10024E6E0();
    uint64_t v11 = sub_10024E6D0();
    if (v12)
    {
      uint64_t v13 = v11;
      unint64_t v14 = v12;
      uint64_t v15 = swift_bridgeObjectRelease();
      *(void *)&long long v51 = 44;
      *((void *)&v51 + 1) = 0xE100000000000000;
      __chkstk_darwin(v15, v16);
      uint64_t v47 = &v51;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1001DCA88(0x7FFFFFFFFFFFFFFFLL, 1u, sub_100081864, (uint64_t)&v45, v13, v14);
      swift_bridgeObjectRelease();
      if (*(void *)(v17 + 16))
      {
        uint64_t v18 = *(void *)(v17 + 48);
        uint64_t v19 = *(void *)(v17 + 56);
        long long v51 = *(_OWORD *)(v17 + 32);
        uint64_t v52 = v18;
        uint64_t v53 = v19;
        uint64_t v56 = 95;
        unint64_t v57 = 0xE100000000000000;
        uint64_t v54 = 46;
        unint64_t v55 = 0xE100000000000000;
        unint64_t v20 = sub_100198AAC();
        uint64_t v47 = (long long *)sub_10001DAC0();
        uint64_t v48 = v47;
        BOOL v45 = &type metadata for String;
        unint64_t v46 = v20;
        sub_100198AF8();
        uint64_t v21 = sub_10024F170();
        sub_100087E08(v21, v22);
        if ((v23 & 1) == 0)
        {
          if (*(void *)(v17 + 16) < 2uLL)
          {
            __break(1u);
          }
          else
          {
            unint64_t v24 = *(void *)(v17 + 64);
            uint64_t v25 = *(void *)(v17 + 72);
            uint64_t v50 = *(void *)(v17 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if ((v25 ^ v24) >> 14)
            {
              uint64_t v26 = sub_100198B18();
              uint64_t v49 = sub_100198594(v26, v27, v28, v29, v30);
              if ((v31 & 0x100) != 0)
              {
                uint64_t v38 = sub_100198B18();
                uint64_t v34 = sub_100219D80(v38, v39, v40, v41, v42);
                char v44 = v43;
                swift_bridgeObjectRelease();
                int v33 = v44 & 1;
                sub_100198B30();
              }
              else
              {
                char v32 = v31;
                swift_bridgeObjectRelease();
                sub_100198B30();
                int v33 = v32 & 1;
                uint64_t v34 = v49;
              }
              if (v33) {
                uint64_t v5 = 0;
              }
              else {
                uint64_t v5 = v34;
              }
              goto LABEL_23;
            }
          }
          swift_bridgeObjectRelease();
          sub_100198B30();
LABEL_17:
          uint64_t v5 = 0;
LABEL_23:
          sub_10001C2EC((uint64_t)v58);
          sub_10001C2EC((uint64_t)a1);
          return v5;
        }
      }
      swift_bridgeObjectRelease();
      sub_100119888();
      swift_allocError();
      swift_willThrow();
      sub_100198B30();
      goto LABEL_3;
    }
    sub_100198B30();
  }
  *(void *)&long long v51 = v7;
  *((void *)&v51 + 1) = v9;
  uint64_t v56 = 95;
  unint64_t v57 = 0xE100000000000000;
  uint64_t v54 = 46;
  unint64_t v55 = 0xE100000000000000;
  BOOL v45 = &type metadata for String;
  unint64_t v46 = sub_10001DAC0();
  sub_100198AF8();
  uint64_t v35 = sub_10024F170();
  uint64_t v5 = v36;
  swift_bridgeObjectRelease();
  sub_100087E08(v35, v5);
  if ((v37 & 1) == 0) {
    goto LABEL_17;
  }
  sub_100119888();
  swift_allocError();
  swift_willThrow();
LABEL_3:
  sub_10001C2EC((uint64_t)v58);
LABEL_4:
  sub_10001C2EC((uint64_t)a1);
  return v5;
}

uint64_t sub_100198374(void *a1, uint64_t a2)
{
  sub_10024EC10();
  v11[8] = 0xE100000000000000;
  v11[5] = 95;
  v11[6] = 0xE100000000000000;
  sub_10001DAC0();
  uint64_t v4 = sub_10024F170();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  v11[0] = v4;
  v11[1] = v6;
  v12._countAndFlagsBits = 44;
  v12._object = (void *)0xE100000000000000;
  sub_10024E800(v12);
  v11[7] = a2;
  v13._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v13);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_100075748(v4, v6);
  unint64_t v9 = v8;
  sub_10024DF00(0);
  sub_10003F808(v7, v9);
  sub_10001C2A8(a1, a1[3]);
  sub_10024FD30();
  sub_100051B64((uint64_t)v11, v11[3]);
  sub_10024FA90();
  swift_bridgeObjectRelease();
  return sub_10001C2EC((uint64_t)v11);
}

BOOL sub_100198504(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_100198514(uint64_t a1, uint64_t a2)
{
  return sub_100198504(*(void *)(a1 + 8), *(void *)(a2 + 8), *(double *)a1, *(double *)a2);
}

uint64_t sub_100198528()
{
  return sub_100197EF4();
}

ValueMetadata *type metadata accessor for Revision()
{
  return &type metadata for Revision;
}

uint64_t sub_100198544@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100197FB0(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_100198574(void *a1)
{
  return sub_100198374(a1, *(void *)(v1 + 8));
}

uint64_t sub_100198594(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    uint64_t v12 = HIBYTE(a4) & 0xF;
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v15;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = (void *)sub_10024F3E0();
  }
  uint64_t result = sub_100198670((uint64_t)v11, v12, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v16 = v14 & 1;
LABEL_8:
    LOBYTE(v15[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_100198670(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int64_t a7)
{
  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  uint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    uint64_t result = sub_1000F44B4(a3, a5, a6);
    unint64_t v16 = result;
  }
  uint64_t v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    unint64_t v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_97;
    }
    uint64_t result = sub_10024E880();
    uint64_t v18 = result;
    uint64_t v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    uint64_t v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    uint64_t v20 = v17;
    uint64_t result = sub_1000F44B4(v11, a5, a6);
    uint64_t v17 = v20;
    unint64_t v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    uint64_t v21 = a4;
    uint64_t v22 = v17;
    uint64_t result = sub_1000F44B4(v21, a5, a6);
    uint64_t v17 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    uint64_t result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  unint64_t v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    unint64_t v23 = v17;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_93;
  }
  if (v23 < a4 >> 16)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  uint64_t result = sub_10024E880();
LABEL_22:
  uint64_t v24 = v18 + result;
  if (__OFADD__(v18, result))
  {
    __break(1u);
    goto LABEL_92;
  }
  if (v24 < v18)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  uint64_t v25 = (unsigned __int8 *)(v12 + v18);
  if (!v12) {
    uint64_t v25 = 0;
  }
  int v26 = *v25;
  if (v26 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v39 = a7 + 48;
        unsigned __int8 v40 = a7 + 55;
        unsigned __int8 v41 = a7 + 87;
        if (a7 > 10)
        {
          unsigned __int8 v39 = 58;
        }
        else
        {
          unsigned __int8 v41 = 97;
          unsigned __int8 v40 = 65;
        }
        if (v25)
        {
          unint64_t v30 = 0;
          uint64_t v42 = v25 + 1;
          uint64_t v43 = result - 1;
          do
          {
            unsigned int v44 = *v42;
            if (v44 < 0x30 || v44 >= v39)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v35 = 0;
                if (v44 < 0x61 || v44 >= v41) {
                  return v35;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            if (!is_mul_ok(v30, a7)) {
              return 0;
            }
            unint64_t v46 = v30 * a7;
            unsigned __int8 v47 = v44 + v45;
            BOOL v38 = __CFADD__(v46, v47);
            unint64_t v30 = v46 + v47;
            if (v38) {
              return 0;
            }
            ++v42;
            --v43;
          }
          while (v43);
          return v30;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_96;
  }
  if (v26 != 45)
  {
    if (v24 != v18)
    {
      unsigned __int8 v48 = a7 + 48;
      unsigned __int8 v49 = a7 + 55;
      unsigned __int8 v50 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v48 = 58;
      }
      else
      {
        unsigned __int8 v50 = 97;
        unsigned __int8 v49 = 65;
      }
      if (v25)
      {
        unint64_t v30 = 0;
        while (1)
        {
          unsigned int v51 = *v25;
          if (v51 < 0x30 || v51 >= v48)
          {
            if (v51 < 0x41 || v51 >= v49)
            {
              uint64_t v35 = 0;
              if (v51 < 0x61 || v51 >= v50) {
                return v35;
              }
              char v52 = -87;
            }
            else
            {
              char v52 = -55;
            }
          }
          else
          {
            char v52 = -48;
          }
          if (!is_mul_ok(v30, a7)) {
            return 0;
          }
          unint64_t v53 = v30 * a7;
          unsigned __int8 v54 = v51 + v52;
          BOOL v38 = __CFADD__(v53, v54);
          unint64_t v30 = v53 + v54;
          if (v38) {
            return 0;
          }
          ++v25;
          if (!--result) {
            return v30;
          }
        }
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v27 = a7 + 48;
      unsigned __int8 v28 = a7 + 55;
      unsigned __int8 v29 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v27 = 58;
      }
      else
      {
        unsigned __int8 v29 = 97;
        unsigned __int8 v28 = 65;
      }
      if (v25)
      {
        unint64_t v30 = 0;
        __int16 v31 = v25 + 1;
        uint64_t v32 = result - 1;
        while (1)
        {
          unsigned int v33 = *v31;
          if (v33 < 0x30 || v33 >= v27)
          {
            if (v33 < 0x41 || v33 >= v28)
            {
              uint64_t v35 = 0;
              if (v33 < 0x61 || v33 >= v29) {
                return v35;
              }
              char v34 = -87;
            }
            else
            {
              char v34 = -55;
            }
          }
          else
          {
            char v34 = -48;
          }
          if (!is_mul_ok(v30, a7)) {
            return 0;
          }
          unint64_t v36 = v30 * a7;
          unsigned __int8 v37 = v33 + v34;
          BOOL v38 = v36 >= v37;
          unint64_t v30 = v36 - v37;
          if (!v38) {
            return 0;
          }
          ++v31;
          if (!--v32) {
            return v30;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

unint64_t sub_100198AAC()
{
  unint64_t result = qword_100316FD8;
  if (!qword_100316FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100316FD8);
  }
  return result;
}

uint64_t sub_100198AF8()
{
  return v0 - 136;
}

uint64_t sub_100198B18()
{
  return v0;
}

uint64_t sub_100198B30()
{
  return sub_10003F7F4(v1, v0);
}

uint64_t sub_100198B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10024EBD0();
  if (sub_10001FA0C(a1, 1, v6) == 1)
  {
    sub_100043550(a1);
  }
  else
  {
    sub_10024EBC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10024EB80();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

void sub_100198CB0(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void))
{
  swift_bridgeObjectRetain();
  sub_10019C770((uint64_t)"appRemoved(withBundleID:withReply:)", 35, 2, a3, a1, a2);
  a4[2](a4);
  _Block_release(a4);
}

void sub_100198D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void))
{
  uint64_t v11 = type metadata accessor for PurchaseConfiguration();
  uint64_t v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (uint64_t *)&v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = (uint64_t)v15 + v12[8];
  uint64_t v17 = sub_10024E0A0();
  sub_1000195B4(v16, 1, 1, v17);
  uint64_t v18 = (uint64_t)v15 + v12[10];
  uint64_t v19 = sub_10024E030();
  sub_1000195B4(v18, 1, 1, v19);
  uint64_t v20 = v12[12];
  uint64_t v21 = v12[13];
  *uint64_t v15 = a3;
  v15[1] = a4;
  void v15[2] = a1;
  v15[3] = a2;
  uint64_t v22 = (char *)v15 + v12[9];
  *(void *)uint64_t v22 = 1;
  v22[8] = 0;
  *((unsigned char *)v15 + v12[11]) = 0;
  unint64_t v23 = (uint64_t *)((char *)v15 + v20);
  *unint64_t v23 = 0;
  v23[1] = 0;
  *((unsigned char *)v15 + v21) = 3;
  *((unsigned char *)v15 + v12[14]) = 2;
  uint64_t v24 = qword_100308D38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  sub_100109A40(v15, (uint64_t)v26);
  sub_1001101D0((uint64_t)v26);
  a6[2](a6, 0);
  sub_100181A8C((uint64_t)v15);
  _Block_release(a6);
}

void sub_100198F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010A2C4();
  if (v7) {
    unint64_t v8 = (void *)sub_10024DCD0();
  }
  else {
    unint64_t v8 = 0;
  }
  ((void (**)(void, void *))a6)[2](a6, v8);

  swift_errorRelease();
  _Block_release(a6);
}

void sub_100199088(char a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *aBlock)
{
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_10019CC88((int)"changeAutoRenewStatus(_:transactionID:bundleID:withReply:)", 58, 2, a5, a1, a2, a3, a4, aBlock);
  _Block_release(aBlock);
}

void sub_100199128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010A2C4();
  if (v8) {
    unint64_t v9 = (void *)sub_10024DCD0();
  }
  else {
    unint64_t v9 = 0;
  }
  ((void (**)(void, void *))a7)[2](a7, v9);

  swift_errorRelease();
  _Block_release(a7);
}

void sub_100199220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  if (sub_10010A4E4()) {
    uint64_t v6 = (void *)sub_10024DCD0();
  }
  else {
    uint64_t v6 = 0;
  }
  ((void (**)(void, void *))a5)[2](a5, v6);

  swift_errorRelease();
  _Block_release(a5);
}

void sub_100199320(char a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *aBlock)
{
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_10019D1CC((int)"completeAskToBuyRequest(withResponse:transactionIdentifier:forBundleID:withReply:)", 82, 2, a5, a2, a3, a4, a1, aBlock);
  _Block_release(aBlock);
}

void sub_1001993C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010A59C();
  if (v8) {
    unint64_t v9 = (void *)sub_10024DCD0();
  }
  else {
    unint64_t v9 = 0;
  }
  ((void (**)(void, void *))a7)[2](a7, v9);

  swift_errorRelease();
  _Block_release(a7);
}

uint64_t sub_1001994B8(void *a1, int a2, uint64_t a3, uint64_t a4, int a5, void *aBlock, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, id, void *))
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = sub_10024E6B0();
  uint64_t v14 = v13;
  _Block_copy(v11);
  id v15 = a1;
  a7(a3, a4, v12, v14, v15, v11);
  _Block_release(v11);

  return swift_bridgeObjectRelease();
}

void sub_10019956C(int a1, int a2, int a3, void *a4)
{
  sub_1001A3A3C(a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1001A3A6C();
  v4(v6);
  _Block_release(v5);
}

uint64_t sub_100199660()
{
  sub_1000B7690();
  sub_1001A3BE8();
  uint64_t v2 = _Block_copy(v1);
  sub_10024E6B0();
  _Block_copy(v2);
  id v3 = v0;
  sub_1001A3C88();
  sub_10019C1E8();
  _Block_release(v2);

  sub_1000B75A4();
  return swift_bridgeObjectRelease();
}

void sub_100199704(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, void *aBlock)
{
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10019E0A8((uint64_t)"expireOrRenewSubscription(withIdentifier:expire:forBundleID:withReply:)", 71, 2, a6, a1, a2, a3, a4, a5, aBlock);
  _Block_release(aBlock);
}

void sub_1001997B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (**a8)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  if (sub_10010A6CC(a3, a4, a5 & 1, a6, a7)) {
    uint64_t v14 = (void *)sub_10024DCD0();
  }
  else {
    uint64_t v14 = 0;
  }
  ((void (**)(void, void *))a8)[2](a8, v14);

  swift_errorRelease();
  _Block_release(a8);
}

void sub_100199968(int a1, void *aBlock)
{
  _Block_copy(aBlock);
  sub_10019E600((int)"getPortWithReply(_:)", 20, 2, a1, aBlock);
  _Block_release(aBlock);
}

void sub_100199A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 64), *(void *)(qword_10034C070 + 88));
  sub_10008AFE8();
  sub_100161E34();
  sub_10001DB0C((uint64_t)&v7);
  Class isa = sub_10024E4E0().super.isa;
  ((void (**)(void, Class))a5)[2](a5, isa);
  swift_bridgeObjectRelease();

  _Block_release(a5);
}

void sub_100199B70(int a1, int a2, int a3, void *a4)
{
  sub_1001A3A3C(a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  int v6 = sub_1001A3A6C();
  sub_10019F078(v6, v7, v8, v9, v10, v11, v12, v4);
  _Block_release(v5);
}

void sub_100199BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10010AA8C();
  unint64_t v8 = v7;
  if (v7 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_10024DEF0().super.isa;
  }
  ((void (**)(void, Class))a5)[2](a5, isa);

  sub_10003F7F4(v6, v8);
  _Block_release(a5);
}

uint64_t sub_100199CEC()
{
  sub_1001A3C9C();
  uint64_t v5 = v4;
  unint64_t v7 = _Block_copy(v6);
  uint64_t v8 = sub_10024E6B0();
  uint64_t v10 = v9;
  _Block_copy(v7);
  id v11 = v5;
  v0(v8, v10, v11, v7, v3, v2, v1);
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

void sub_100199DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  if (a7(a3, a4, a5)) {
    uint64_t v12 = (void *)sub_10024DCD0();
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = sub_1001A3C54();
  v14(v13);

  swift_errorRelease();
  _Block_release(a6);
}

void sub_100199F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *aBlock)
{
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10019F4D4((int)"setStorefront(_:forBundleID:withReply:)", 39, 2, a5, a1, a2, a3, a4, aBlock);
  _Block_release(aBlock);
}

void sub_100199FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *aBlock)
{
  _Block_copy(aBlock);
  id v12 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10019FA44((uint64_t)"startServingConfiguration(_:forBundleID:withReply:)", 51, 2, (uint64_t)v12, v12, a1, a2, a3, a4, (void (**)(void, void))aBlock);
  _Block_release(aBlock);
}

uint64_t sub_10019A0A0(void *a1, int a2, int a3, int a4, void *aBlock, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, id, void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = sub_10024E6B0();
  uint64_t v11 = v10;
  uint64_t v12 = sub_10024E6B0();
  uint64_t v14 = v13;
  _Block_copy(v8);
  id v15 = a1;
  a6(v9, v11, v12, v14, v15, v8);
  _Block_release(v8);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10019A168(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *aBlock)
{
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_10019FFE4((int)"getIntegerValue(for:forBundleID:withReply:)", 43, 2, a4, a1, a2, a3, aBlock);
  _Block_release(aBlock);
}

void sub_10019A29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  if (a8(a3, a4, a5, a6)) {
    uint64_t v14 = (void *)sub_10024DCD0();
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = sub_1001A3C54();
  v16(v15);

  swift_errorRelease();
  _Block_release(a7);
}

void sub_10019A3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 64), *(void *)(qword_10034C070 + 88));
  sub_10008A770(a3, a4, a5);
  NSString v10 = sub_10024E6A0();
  ((void (**)(void, NSString))a6)[2](a6, v10);
  swift_bridgeObjectRelease();

  _Block_release(a6);
}

void sub_10019A4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 64), *(void *)(qword_10034C070 + 88));
  if (sub_10008A988(a1, a2, a3, a4, a5)) {
    uint64_t v13 = (void *)sub_10024DCD0();
  }
  else {
    uint64_t v13 = 0;
  }
  ((void (**)(void, void *))a7)[2](a7, v13);

  swift_errorRelease();
  _Block_release(a7);
}

uint64_t sub_10019A6A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100019524(&qword_10030A768);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10024EBD0();
  sub_1000195B4((uint64_t)v13, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = 0;
  v15[3] = 0;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a1;
  v15[7] = a4;
  v15[8] = a5;
  sub_1000473AC(a2, a3);
  swift_retain();
  sub_100198B48((uint64_t)v13, (uint64_t)&unk_1003170C8, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_10019A7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[14] = a4;
  uint64_t v9 = sub_10024E0A0();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return _swift_task_switch(sub_10019A878, 0, 0);
}

uint64_t sub_10019A878()
{
  sub_100043B04();
  uint64_t v2 = *(void *)(v0 + 112);
  unint64_t v1 = *(void *)(v0 + 120);
  sub_1000473AC(v2, v1);
  sub_100052C08(v2, v1, (_OWORD *)(v0 + 64));
  uint64_t v3 = *(void *)(v0 + 104);
  int64x2_t v4 = *(int64x2_t *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  int64x2_t v6 = *(int64x2_t *)(v0 + 72);
  *(void *)(v0 + 192) = v3;
  *(int64x2_t *)(v0 + 176) = vzip1q_s64(v6, v4);
  *(void *)(v0 + 16) = v5;
  *(int64x2_t *)(v0 + 24) = v6;
  *(int64x2_t *)(v0 + 40) = v4;
  *(void *)(v0 + 56) = v3;
  if (qword_100308CF8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10034C028;
  *(void *)(v0 + 200) = qword_10034C028;
  return _swift_task_switch(sub_10019A988, v7, 0);
}

uint64_t sub_10019A988()
{
  sub_100043B04();
  sub_100053BE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10019AA1C, 0, 0);
}

uint64_t sub_10019AA1C()
{
  sub_100043B04();
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  (*(void (**)(uint64_t))(v0 + 136))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  sub_100043B28();
  return v4();
}

void sub_10019AB88(uint64_t a1, uint64_t a2)
{
  Class isa = sub_10024E060().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_10019ABE4(uint64_t a1)
{
  uint64_t v3 = sub_10024E0A0();
  sub_10001B550();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v8, v9);
  uint64_t v10 = sub_100019524(&qword_10030A768);
  __chkstk_darwin(v10 - 8, v11);
  sub_1001A3AB0();
  uint64_t v12 = sub_10024EBD0();
  sub_1000195B4(v1, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_100198B48(v1, (uint64_t)&unk_1003170A8, v14);
  return swift_release();
}

uint64_t sub_10019AD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10019AD68, 0, 0);
}

uint64_t sub_10019AD68()
{
  sub_100043A98();
  if (qword_100308CF8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10034C028;
  *(void *)(v0 + 24) = qword_10034C028;
  return _swift_task_switch(sub_10019ADFC, v1, 0);
}

uint64_t sub_10019ADFC()
{
  sub_100043A98();
  sub_1000540A8();
  sub_100043B28();
  return v0();
}

void sub_10019AF3C(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  if (sub_10010B790()) {
    v5.super.Class isa = sub_10024E4E0().super.isa;
  }
  else {
    v5.super.Class isa = 0;
  }
  ((void (**)(void, Class))a4)[2](a4, v5.super.isa);
  swift_bridgeObjectRelease();

  _Block_release(a4);
}

uint64_t sub_10019B034(void *a1, int a2, int a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = sub_10024E6B0();
  uint64_t v10 = v9;
  _Block_copy(v7);
  id v11 = a1;
  a5(v8, v10, v11, v7);
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

void sub_10019B0D0(uint64_t a1, void *a2, id a3, uint64_t a4, void (**a5)(void, void))
{
  char v9 = sub_1000C8BA4((unint64_t)[a3 integerValue]);
  if (v9 == 4)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10024E1F0();
    sub_10001B0E8(v10, (uint64_t)qword_10034C0E0);
    id v11 = a3;
    uint64_t v12 = sub_10024E1D0();
    os_log_type_t v13 = sub_10024EE10();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      [v11 integerValue];
      sub_10024F100();

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Invalid message reason %ld requested", v14, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
    a5[2](a5, 0);
  }
  else
  {
    char v15 = v9;
    if (qword_100308D38 != -1) {
      swift_once();
    }
    if (sub_10010BA8C(v15, a1, a2))
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_10024E1F0();
      sub_10001B0E8(v16, (uint64_t)qword_10034C0E0);
      id v17 = a3;
      uint64_t v18 = sub_10024E1D0();
      os_log_type_t v19 = sub_10024EE30();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 134217984;
        [v17 integerValue];
        sub_10024F100();

        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Found message with type %ld", v20, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      v26.super.Class isa = sub_10024E4E0().super.isa;
    }
    else
    {
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_10024E1F0();
      sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
      id v22 = a3;
      unint64_t v23 = sub_10024E1D0();
      os_log_type_t v24 = sub_10024EE30();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 134217984;
        [v22 integerValue];
        sub_10024F100();

        _os_log_impl((void *)&_mh_execute_header, v23, v24, "No message found with type %ld", v25, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      v26.super.Class isa = 0;
    }
    ((void (**)(void, Class))a5)[2](a5, v26.super.isa);

    swift_bridgeObjectRelease();
  }
  _Block_release(a5);
}

uint64_t sub_10019B5BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 40) = a4;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  return sub_100043A8C((uint64_t)sub_10019B5DC);
}

uint64_t sub_10019B5DC()
{
  sub_100043B04();
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010B4A4();
  if (v0) {
    swift_willThrow();
  }
  sub_100043B28();
  return v1();
}

uint64_t sub_10019B728(uint64_t a1, int a2, char a3, void *aBlock, void *a5)
{
  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  uint64_t v9 = sub_10024E6B0();
  uint64_t v11 = v10;
  v5[4] = v10;
  id v12 = a5;
  os_log_type_t v13 = (void *)swift_task_alloc();
  v5[5] = v13;
  *os_log_type_t v13 = v5;
  v13[1] = sub_10019B810;
  return sub_10019B5BC(a1, v9, v11, a3);
}

uint64_t sub_10019B810()
{
  sub_1001A3BBC();
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  sub_1000AC9CC();
  *NSDictionary v5 = v4;
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v7 = *v1;
  *NSDictionary v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v3 + 24);
  if (v2)
  {
    uint64_t v9 = (void *)sub_10024DCD0();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_10019B9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030A768);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10024EBD0();
  sub_1000195B4((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_100317110;
  v10[5] = v9;
  sub_1000432C8((uint64_t)v7, (uint64_t)&unk_100317120, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_10019BAA8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = a4;
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 40) = a1;
  return sub_100043A8C((uint64_t)sub_10019BAC8);
}

uint64_t sub_10019BAC8()
{
  sub_100043B04();
  if (qword_100308D38 != -1) {
    swift_once();
  }
  if (sub_10010B550()) {
    swift_willThrow();
  }
  sub_100043B28();
  return v0();
}

uint64_t sub_10019BC14(char a1, uint64_t a2, int a3, void *aBlock, void *a5)
{
  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  uint64_t v9 = sub_10024E6B0();
  uint64_t v11 = v10;
  v5[4] = v10;
  id v12 = a5;
  os_log_type_t v13 = (void *)swift_task_alloc();
  v5[5] = v13;
  *os_log_type_t v13 = v5;
  v13[1] = sub_1001A3A08;
  return sub_10019BAA8(a1, a2, v9, v11);
}

void sub_10019BCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Block_copy(a10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A0EBC((uint64_t)"validateSKAdNetworkSignature(_:withPublicKey:source:andParameters:forBundleID:withReply:)", 89, 2, a9, a1, a2, a3, a4, a5, a6, a7, a8, a10);
  _Block_release(a10);
}

void sub_10019BDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (**a11)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010BD80();
  if (v11) {
    id v12 = (void *)sub_10024DCD0();
  }
  else {
    id v12 = 0;
  }
  ((void (**)(void, void *))a11)[2](a11, v12);

  swift_errorRelease();
  _Block_release(a11);
}

void sub_10019C010(uint64_t a1, int a2, void *aBlock)
{
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_1001A1408((int)"generateSKANPostbackSignature(_:withReply:)", 43, 2, a2, a1, aBlock);
  _Block_release(aBlock);
}

void sub_10019C090(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010BECC();
  if (v5) {
    NSString v6 = sub_10024E6A0();
  }
  else {
    NSString v6 = 0;
  }
  ((void (**)(void, NSString))a4)[2](a4, v6);
  swift_bridgeObjectRelease();

  _Block_release(a4);
}

void sub_10019C1E8()
{
  sub_1000B7690();
  sub_1001A3C9C();
  sub_1001A3B6C();
  _Block_copy(v8);
  swift_bridgeObjectRetain();
  v7(v1, v0, 2, v3, v6, v5, v4, v2);
  sub_1000B75A4();
  _Block_release(v9);
}

void sub_10019C270(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 64), *(void *)(qword_10034C070 + 88));
  uint64_t v15 = sub_10008AEB4(a3, a4, a5, v10, v11, v12, v13, v14);
  if (v16) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v15;
  }
  a6[2](a6, v17);
  _Block_release(a6);
}

void sub_10019C380()
{
  sub_1000B7690();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_1001A3B6C();
  _Block_copy(v11);
  swift_bridgeObjectRetain();
  v4(v8, v6, 2, v10, v3, v2, v1, v0);
  sub_1000B75A4();
  _Block_release(v12);
}

uint64_t sub_10019C454()
{
  sub_1000B7690();
  sub_1001A3BE8();
  uint64_t v2 = _Block_copy(v1);
  sub_10024E6B0();
  _Block_copy(v2);
  id v3 = v0;
  sub_1001A3C88();
  sub_10019C380();
  _Block_release(v2);

  sub_1000B75A4();
  return swift_bridgeObjectRelease();
}

void sub_10019C4F8(uint64_t a1, unint64_t a2, int a3, void *aBlock)
{
  _Block_copy(aBlock);
  sub_1000473AC(a1, a2);
  sub_1001A1E94((int)"buyProduct(withConfiguration:withReply:)", 40, 2, a3, a1, a2, aBlock);
  _Block_release(aBlock);
}

void sub_10019C584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void))
{
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_100109FA8((uint64_t)v10);
  if (v5)
  {
    swift_errorRetain();
    uint64_t v7 = (void *)sub_10024DCD0();
    ((void (**)(void, void *, void))a5)[2](a5, v7, 0);

    swift_errorRelease();
    swift_errorRelease();
    _Block_release(a5);
  }
  else
  {
    sub_100118A04();
    if (v8) {
      NSString v9 = sub_10024E6A0();
    }
    else {
      NSString v9 = 0;
    }
    ((void (**)(void, void, NSString))a5)[2](a5, 0, v9);
    swift_bridgeObjectRelease();

    sub_1001101D0((uint64_t)v10);
    _Block_release(a5);
  }
}

uint64_t sub_10019C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_1000511D4();
  unint64_t v10 = v9;
  id v11 = [self currentConnection];
  if (v11)
  {
    uint64_t v12 = v11;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10024E1F0();
    sub_10001B0E8(v13, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v14 = v12;
    uint64_t v15 = sub_10024E1D0();
    os_log_type_t v16 = sub_10024EE30();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      unsigned __int8 v28 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v8, v10, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v18 = sub_10024F360();
      sub_1000F3F3C(v18, v19, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2112;
      id v20 = v14;
      sub_10024F100();
      *unsigned __int8 v28 = v12;

      uint64_t v21 = v15;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] Entered %s from %@", (uint8_t *)v17, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_10:
      goto LABEL_13;
    }

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_10024E1F0();
    sub_10001B0E8(v22, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_10024E1D0();
    os_log_type_t v23 = sub_10024EE30();
    if (os_log_type_enabled(v21, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v8, v10, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v25 = sub_10024F360();
      sub_1000F3F3C(v25, v26, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v23, "[%s] Entered %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_10;
    }

    swift_bridgeObjectRelease_n();
  }
LABEL_13:
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010998C(a5, a6);
  sub_1001A23C0(v8, v10);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019CC88(int a1, int a2, int a3, int a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v13 = sub_1000511D4();
  unint64_t v15 = v14;
  id v16 = [self currentConnection];
  if (v16)
  {
    uint64_t v17 = v16;
    char v36 = a5;
    uint64_t v37 = a6;
    uint64_t v18 = v13;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10024E1F0();
    sub_10001B0E8(v19, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v20 = v17;
    uint64_t v21 = sub_10024E1D0();
    os_log_type_t v22 = sub_10024EE30();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v35 = a8;
      uint64_t v23 = swift_slowAlloc();
      char v34 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v18, v15, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v24 = sub_10024F360();
      sub_1000F3F3C(v24, v25, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2112;
      id v26 = v20;
      sub_10024F100();
      *char v34 = v17;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%s] Entered %s from %@", (uint8_t *)v23, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a8 = v35;
      swift_slowDealloc();

      uint64_t v13 = v18;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v13 = v18;
    }
    a6 = v37;
    a5 = v36;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10024E1F0();
    sub_10001B0E8(v27, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    unsigned __int8 v28 = sub_10024E1D0();
    os_log_type_t v29 = sub_10024EE30();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v38 = a6;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v13, v15, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v31 = sub_10024F360();
      sub_1000F3F3C(v31, v32, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%s] Entered %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v38;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_100199128(v13, v15, a5 & 1, a6, a7, a8, (void (**)(void, void))aBlock);
  sub_1001A23C0(v13, v15);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019D1CC(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v12 = sub_1000511D4();
  unint64_t v14 = v13;
  id v15 = [self currentConnection];
  if (v15)
  {
    id v16 = v15;
    uint64_t v33 = a5;
    uint64_t v34 = a6;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10024E1F0();
    sub_10001B0E8(v17, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v18 = v16;
    uint64_t v19 = sub_10024E1D0();
    os_log_type_t v20 = sub_10024EE30();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      unint64_t v32 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v12, v14, &v37);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v22 = sub_10024F360();
      sub_1000F3F3C(v22, v23, &v37);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2112;
      id v24 = v18;
      sub_10024F100();
      *unint64_t v32 = v16;

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%s] Entered %s from %@", (uint8_t *)v21, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a5 = v33;
    a6 = v34;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_10024E1F0();
    sub_10001B0E8(v25, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v26 = sub_10024E1D0();
    os_log_type_t v27 = sub_10024EE30();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v35 = a6;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v12, v14, &v37);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v29 = sub_10024F360();
      sub_1000F3F3C(v29, v30, &v37);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[%s] Entered %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v35;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_1001993C0(v12, v14, a5, a6, a7, a8 & 1, (void (**)(void, void))aBlock);
  sub_1001A23C0(v12, v14);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

void sub_10019D70C(int a1, int a2, int a3, int a4, int a5, int a6, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v8 = sub_1000511D4();
  unint64_t v10 = v9;
  id v11 = [self currentConnection];
  uint64_t v28 = v8;
  if (v11)
  {
    uint64_t v12 = v11;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10024E1F0();
    sub_10001B0E8(v13, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v14 = v12;
    id v15 = sub_10024E1D0();
    os_log_type_t v16 = sub_10024EE30();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      os_log_type_t v27 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v8, v10, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v18 = sub_10024F360();
      sub_1000F3F3C(v18, v19, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2112;
      id v20 = v14;
      sub_10024F100();
      *os_log_type_t v27 = v12;

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] Entered %s from %@", (uint8_t *)v17, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10024E1F0();
    sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_10024E1D0();
    os_log_type_t v23 = sub_10024EE30();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v28, v10, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v25 = sub_10024F360();
      sub_1000F3F3C(v25, v26, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%s] Entered %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 104), *(void *)(qword_10034C070 + 128));
  sub_10009F734();
  (*((void (**)(void *, void))aBlock + 2))(aBlock, 0);
  _Block_release(aBlock);
  sub_1001A23C0(v28, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

uint64_t sub_10019DC70(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, void *aBlock, uint64_t (*a9)(uint64_t, uint64_t, uint64_t))
{
  _Block_copy(aBlock);
  uint64_t v13 = sub_1000511D4();
  unint64_t v15 = v14;
  id v16 = [self currentConnection];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v38 = a5;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10024E1F0();
    sub_1001A3A0C(v18, (uint64_t)qword_10034C0E0);
    id v19 = v17;
    id v20 = sub_10024E1D0();
    os_log_type_t v21 = sub_10024EE30();
    if (sub_1001A3B84(v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v39 = sub_1001A3B18();
      *(_DWORD *)uint64_t v22 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1000F3F3C(v13, v15, &v39);
      sub_1001A3C28(v23);
      sub_10024F100();
      sub_1001A3AE8();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v24 = sub_10024F360();
      sub_1000F3F3C(v24, v25, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2112;
      id v26 = v19;
      sub_10024F100();
      *uint64_t v37 = v17;

      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)a6, "[%s] Entered %s from %@", (uint8_t *)v22, 0x20u);
      sub_100019524(&qword_1003170F0);
      sub_1001A3BA0();
      sub_10003FBCC();
      sub_1001A3CB0();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1001A3B00();
    }
    a5 = v38;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10024E1F0();
    sub_1001A3A0C(v27, (uint64_t)qword_10034C0E0);
    uint64_t v28 = (void *)sub_10024E1D0();
    os_log_type_t v29 = sub_10024EE30();
    if (sub_10003FCF4(v29))
    {
      swift_slowAlloc();
      uint64_t v39 = sub_1001A3B18();
      sub_1001A3C68(4.8151e-34);
      uint64_t v30 = sub_1000F3F3C(v13, v15, &v39);
      sub_1001A3C28(v30);
      sub_1001A3C34();
      sub_1001A3AE8();
      uint64_t v31 = sub_1001A3B48();
      uint64_t v33 = sub_1000F3F3C(v31, v32, &v39);
      sub_1001A3BFC(v33);
      sub_10024F100();
      swift_bridgeObjectRelease();
      sub_1001A3A90((void *)&_mh_execute_header, v34, v35, "[%s] Entered %s");
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1001A3B00();
    }
  }
  _Block_copy(aBlock);
  sub_100199DF0(v13, v15, a5, a6, a7, aBlock, a9);
  sub_1001A23C0(v13, v15);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019E0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Block_copy(a10);
  uint64_t v12 = sub_1000511D4();
  unint64_t v14 = v13;
  id v15 = [self currentConnection];
  if (v15)
  {
    id v16 = v15;
    uint64_t v37 = a8;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10024E1F0();
    sub_10001B0E8(v17, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v18 = v16;
    id v19 = sub_10024E1D0();
    os_log_type_t type = sub_10024EE30();
    if (os_log_type_enabled(v19, type))
    {
      uint64_t v35 = a6;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v12, v14, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v21 = sub_10024F360();
      log = v19;
      sub_1000F3F3C(v21, v22, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2112;
      id v23 = v18;
      uint64_t v24 = v12;
      sub_10024F100();
      *uint64_t v33 = v16;

      _os_log_impl((void *)&_mh_execute_header, log, type, "[%s] Entered %s from %@", (uint8_t *)v20, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v35;
      swift_slowDealloc();

      a8 = v37;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      a8 = v37;
      uint64_t v24 = v12;
    }
  }
  else
  {
    uint64_t v25 = v12;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10024E1F0();
    sub_10001B0E8(v26, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_10024E1D0();
    os_log_type_t v28 = sub_10024EE30();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v25, v14, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v30 = sub_10024F360();
      sub_1000F3F3C(v30, v31, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%s] Entered %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v24 = v25;
  }
  _Block_copy(a10);
  sub_1001997B8(v24, v14, a5, a6, a7 & 1, a8, a9, (void (**)(void, void))a10);
  sub_1001A23C0(v24, v14);
  swift_bridgeObjectRelease();
  _Block_release(a10);
  _Block_release(a10);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10019E600(int a1, int a2, int a3, int a4, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v6 = sub_1000511D4();
  unint64_t v8 = v7;
  id v9 = [self currentConnection];
  if (v9)
  {
    unint64_t v10 = v9;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10024E1F0();
    sub_10001B0E8(v11, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v12 = v10;
    unint64_t v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE30();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      os_log_type_t v28 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v6, v8, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v16 = sub_10024F360();
      sub_1000F3F3C(v16, v17, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2112;
      id v18 = v12;
      sub_10024F100();
      *os_log_type_t v28 = v10;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%s] Entered %s from %@", (uint8_t *)v15, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10024E1F0();
    sub_10001B0E8(v19, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_10024E1D0();
    os_log_type_t v21 = sub_10024EE30();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v6, v8, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v23 = sub_10024F360();
      sub_1000F3F3C(v23, v24, &v29);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%s] Entered %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  if (qword_100308D38 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10034C070;
  uint64_t v26 = *(os_unfair_lock_s **)(*(void *)(qword_10034C070 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v26);
  uint64_t v27 = *(void *)(v25 + 40);
  os_unfair_lock_unlock(v26);
  swift_release();
  (*((void (**)(void *, uint64_t))aBlock + 2))(aBlock, v27);
  _Block_release(aBlock);
  sub_1001A23C0(v6, v8);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_10019EB58(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v10 = sub_1000511D4();
  unint64_t v12 = v11;
  id v13 = [self currentConnection];
  if (v13)
  {
    os_log_type_t v14 = v13;
    uint64_t v31 = a5;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10024E1F0();
    sub_10001B0E8(v15, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v16 = v14;
    unint64_t v17 = sub_10024E1D0();
    os_log_type_t v18 = sub_10024EE30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v30 = v10;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v30, v12, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v20 = sub_10024F360();
      sub_1000F3F3C(v20, v21, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2112;
      id v22 = v16;
      sub_10024F100();
      *uint64_t v29 = v14;

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%s] Entered %s from %@", (uint8_t *)v19, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v10 = v30;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a5 = v31;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_10024E1F0();
    sub_10001B0E8(v23, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    unint64_t v24 = sub_10024E1D0();
    os_log_type_t v25 = sub_10024EE30();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v32 = a5;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v10, v12, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v27 = sub_10024F360();
      sub_1000F3F3C(v27, v28, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%s] Entered %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v32;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_100199A3C(v10, v12, a5, a6, (void (**)(void, void))aBlock);
  sub_1001A23C0(v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

uint64_t sub_10019F078(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, void *aBlock, void (*a8)(uint64_t, unint64_t, uint64_t, uint64_t, void *))
{
  _Block_copy(aBlock);
  uint64_t v12 = sub_1000511D4();
  unint64_t v14 = v13;
  id v15 = [self currentConnection];
  if (v15)
  {
    id v16 = v15;
    uint64_t v38 = v12;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10024E1F0();
    sub_1001A3A0C(v17, (uint64_t)qword_10034C0E0);
    id v18 = v16;
    uint64_t v19 = (void *)sub_10024E1D0();
    os_log_type_t v20 = sub_10024EE30();
    if (sub_1001A3B84(v20))
    {
      uint64_t v21 = swift_slowAlloc();
      char v36 = (void *)swift_slowAlloc();
      uint64_t v39 = sub_1001A3B18();
      *(_DWORD *)uint64_t v21 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v38, v14, &v39);
      sub_1001A3C10();
      sub_1001A3AE8();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v22 = sub_10024F360();
      sub_1000F3F3C(v22, v23, &v39);
      sub_1001A3C10();
      swift_bridgeObjectRelease();
      sub_1001A3CD0();
      id v24 = v18;
      sub_10024F100();
      *char v36 = v16;

      sub_1001A3BC8((void *)&_mh_execute_header, v25, v26, "[%s] Entered %s from %@");
      sub_100019524(&qword_1003170F0);
      sub_1001A3BA0();
      sub_10003FBCC();
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();

      uint64_t v12 = v38;
    }
    else
    {

      sub_1001A3B00();
      uint64_t v12 = v38;
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10024E1F0();
    sub_1001A3A0C(v27, (uint64_t)qword_10034C0E0);
    unint64_t v28 = (void *)sub_10024E1D0();
    os_log_type_t v29 = sub_10024EE30();
    if (sub_10003FCF4(v29))
    {
      uint64_t v37 = a5;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = sub_1001A3B18();
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v12, v14, &v39);
      sub_10024F100();
      sub_1001A3AE8();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v31 = sub_10024F360();
      sub_1000F3F3C(v31, v32, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      sub_1001A3A90((void *)&_mh_execute_header, v33, v34, "[%s] Entered %s");
      swift_arrayDestroy();
      sub_10003FBCC();
      a5 = v37;
      sub_10003FBCC();
    }
    else
    {

      sub_1001A3B00();
    }
  }
  _Block_copy(aBlock);
  a8(v12, v14, a5, a6, aBlock);
  sub_1001A23C0(v12, v14);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019F4D4(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v12 = sub_1000511D4();
  unint64_t v14 = v13;
  id v15 = [self currentConnection];
  if (v15)
  {
    id v16 = v15;
    uint64_t v37 = a5;
    uint64_t v17 = v12;
    uint64_t v36 = a7;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10024E1F0();
    sub_10001B0E8(v18, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v19 = v16;
    os_log_type_t v20 = sub_10024E1D0();
    os_log_type_t v21 = sub_10024EE30();
    if (os_log_type_enabled(v20, v21))
    {
      *(void *)os_log_type_t type = a8;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v17, v14, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v23 = sub_10024F360();
      sub_1000F3F3C(v23, v24, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2112;
      id v25 = v19;
      sub_10024F100();
      *uint64_t v34 = v16;

      os_log_type_t v26 = v21;
      uint64_t v12 = v17;
      _os_log_impl((void *)&_mh_execute_header, v20, v26, "[%s] Entered %s from %@", (uint8_t *)v22, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a8 = *(void *)type;
      swift_slowDealloc();

      a7 = v36;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      a7 = v36;
      uint64_t v12 = v17;
    }
    a5 = v37;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10024E1F0();
    sub_10001B0E8(v27, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    unint64_t v28 = sub_10024E1D0();
    os_log_type_t v29 = sub_10024EE30();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v12, v14, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v31 = sub_10024F360();
      sub_1000F3F3C(v31, v32, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%s] Entered %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_10019A29C(v12, v14, a5, a6, a7, a8, aBlock, sub_10010B2C8);
  sub_1001A23C0(v12, v14);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10019FA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (**a10)(void, void))
{
  uint64_t v12 = a9;
  _Block_copy(a10);
  uint64_t v38 = sub_1000511D4();
  unint64_t v14 = v13;
  id v15 = [self currentConnection];
  if (v15)
  {
    id v16 = v15;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10024E1F0();
    sub_10001B0E8(v17, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v18 = v16;
    id v19 = sub_10024E1D0();
    os_log_type_t type = sub_10024EE30();
    if (os_log_type_enabled(v19, type))
    {
      *(void *)uint64_t v33 = a7;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v21 = v38;
      unint64_t v32 = v14;
      sub_1000F3F3C(v38, v14, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v22 = sub_10024F360();
      sub_1000F3F3C(v22, v23, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2112;
      id v24 = v18;
      sub_10024F100();
      *uint64_t v31 = v16;

      _os_log_impl((void *)&_mh_execute_header, v19, type, "[%s] Entered %s from %@", (uint8_t *)v20, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a7 = *(void *)v33;
      swift_slowDealloc();

      uint64_t v12 = a9;
      unint64_t v14 = v32;
      goto LABEL_13;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v12 = a9;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_10024E1F0();
    sub_10001B0E8(v25, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    os_log_type_t v26 = sub_10024E1D0();
    os_log_type_t v27 = sub_10024EE30();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t v34 = v27;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v21 = v38;
      sub_1000F3F3C(v38, v14, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v29 = sub_10024F360();
      sub_1000F3F3C(v29, v30, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v34, "[%s] Entered %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_13;
    }

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = v38;
LABEL_13:
  _Block_copy(a10);
  sub_1001A2568(v21, v14);
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10010B318(a6, a7, a8, v12);
  a10[2](a10, 0);
  _Block_release(a10);
  sub_1001A23C0(v21, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  _Block_release(a10);
  _Block_release(a10);
}

void sub_10019FFE4(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v12 = sub_1000511D4();
  unint64_t v14 = v13;
  id v15 = [self currentConnection];
  uint64_t v41 = v12;
  if (v15)
  {
    id v16 = v15;
    uint64_t v39 = a5;
    uint64_t v40 = a6;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10024E1F0();
    sub_10001B0E8(v17, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v18 = v16;
    id v19 = sub_10024E1D0();
    os_log_type_t v20 = sub_10024EE30();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v38 = a7;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v12, v14, &v42);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v22 = sub_10024F360();
      sub_1000F3F3C(v22, v23, &v42);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2112;
      id v24 = v18;
      sub_10024F100();
      *uint64_t v37 = v16;

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%s] Entered %s from %@", (uint8_t *)v21, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a7 = v38;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a6 = v40;
    a5 = v39;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_10024E1F0();
    sub_10001B0E8(v25, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    os_log_type_t v26 = sub_10024E1D0();
    os_log_type_t v27 = sub_10024EE30();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v41, v14, &v42);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v29 = sub_10024F360();
      sub_1000F3F3C(v29, v30, &v42);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[%s] Entered %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 64), *(void *)(qword_10034C070 + 88));
  uint64_t v36 = sub_10008A698(a5, a6, a7, v31, v32, v33, v34, v35);
  (*((void (**)(void *, uint64_t))aBlock + 2))(aBlock, v36);
  _Block_release(aBlock);
  sub_1001A23C0(v41, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

uint64_t sub_1001A055C(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v13 = sub_1000511D4();
  unint64_t v15 = v14;
  id v16 = [self currentConnection];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v36 = a5;
    uint64_t v37 = a6;
    uint64_t v18 = v13;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10024E1F0();
    sub_10001B0E8(v19, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v20 = v17;
    uint64_t v21 = sub_10024E1D0();
    os_log_type_t v22 = sub_10024EE30();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v35 = a8;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v18, v15, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v24 = sub_10024F360();
      sub_1000F3F3C(v24, v25, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2112;
      id v26 = v20;
      sub_10024F100();
      *uint64_t v34 = v17;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%s] Entered %s from %@", (uint8_t *)v23, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a8 = v35;
      swift_slowDealloc();

      uint64_t v13 = v18;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v13 = v18;
    }
    a5 = v36;
    a6 = v37;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10024E1F0();
    sub_10001B0E8(v27, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_10024E1D0();
    os_log_type_t v29 = sub_10024EE30();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v38 = a6;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v13, v15, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v31 = sub_10024F360();
      sub_1000F3F3C(v31, v32, &v39);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%s] Entered %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v38;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_10019A29C(v13, v15, a5, a6, a7, a8, aBlock, sub_10010C030);
  sub_1001A23C0(v13, v15);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A0AAC(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, void *aBlock, void (*a9)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  _Block_copy(aBlock);
  uint64_t v13 = sub_1000511D4();
  unint64_t v15 = v14;
  id v16 = [self currentConnection];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v42 = v13;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10024E1F0();
    sub_1001A3A0C(v18, (uint64_t)qword_10034C0E0);
    id v19 = v17;
    id v20 = (void *)sub_10024E1D0();
    os_log_type_t v21 = sub_10024EE30();
    if (sub_1001A3B84(v21))
    {
      uint64_t v41 = a6;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v39 = (void *)swift_slowAlloc();
      uint64_t v43 = sub_1001A3B18();
      *(_DWORD *)uint64_t v22 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1000F3F3C(v42, v15, &v43);
      sub_1001A3C28(v23);
      sub_1001A3C10();
      sub_1001A3AE8();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v24 = sub_10024F360();
      sub_1000F3F3C(v24, v25, &v43);
      sub_1001A3C10();
      swift_bridgeObjectRelease();
      sub_1001A3CD0();
      id v26 = v19;
      sub_10024F100();
      *uint64_t v39 = v17;

      sub_1001A3BC8((void *)&_mh_execute_header, v27, v28, "[%s] Entered %s from %@");
      sub_100019524(&qword_1003170F0);
      sub_1001A3BA0();
      sub_10003FBCC();
      sub_1001A3CB0();
      sub_10003FBCC();
      a6 = v41;
      sub_10003FBCC();

      uint64_t v13 = v42;
    }
    else
    {

      sub_1001A3B00();
      uint64_t v13 = v42;
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_10024E1F0();
    sub_1001A3A0C(v29, (uint64_t)qword_10034C0E0);
    uint64_t v30 = (void *)sub_10024E1D0();
    os_log_type_t v31 = sub_10024EE30();
    if (sub_10003FCF4(v31))
    {
      swift_slowAlloc();
      uint64_t v43 = sub_1001A3B18();
      sub_1001A3C68(4.8151e-34);
      uint64_t v32 = sub_1000F3F3C(v13, v15, &v43);
      sub_1001A3C28(v32);
      sub_1001A3C34();
      sub_1001A3AE8();
      uint64_t v33 = sub_1001A3B48();
      uint64_t v35 = sub_1000F3F3C(v33, v34, &v43);
      sub_1001A3BFC(v35);
      a7 = v40;
      sub_10024F100();
      swift_bridgeObjectRelease();
      sub_1001A3A90((void *)&_mh_execute_header, v36, v37, "[%s] Entered %s");
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      sub_1001A3B00();
    }
  }
  _Block_copy(aBlock);
  a9(v13, v15, a5, a6, a7, aBlock);
  sub_1001A23C0(v13, v15);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A0EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v14 = a10;
  _Block_copy(a13);
  uint64_t v15 = sub_1000511D4();
  unint64_t v17 = v16;
  id v18 = [self currentConnection];
  if (v18)
  {
    id v19 = v18;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10024E1F0();
    sub_10001B0E8(v20, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v21 = v19;
    uint64_t v22 = sub_10024E1D0();
    os_log_type_t v23 = sub_10024EE30();
    if (os_log_type_enabled(v22, v23))
    {
      log = v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v15, v17, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v25 = sub_10024F360();
      sub_1000F3F3C(v25, v26, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2112;
      id v27 = v21;
      sub_10024F100();
      *uint64_t v35 = v19;

      _os_log_impl((void *)&_mh_execute_header, log, v23, "[%s] Entered %s from %@", (uint8_t *)v24, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v14 = a10;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_10024E1F0();
    sub_10001B0E8(v28, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_10024E1D0();
    os_log_type_t v30 = sub_10024EE30();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v15, v17, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v32 = sub_10024F360();
      sub_1000F3F3C(v32, v33, &v40);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%s] Entered %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(a13);
  sub_10019BDD8(v15, v17, a5, a6, a7, a8, a9, v14, a11, a12, (void (**)(void, void))a13);
  sub_1001A23C0(v15, v17);
  swift_bridgeObjectRelease();
  _Block_release(a13);
  _Block_release(a13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A1408(int a1, int a2, int a3, int a4, uint64_t a5, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v8 = sub_1000511D4();
  unint64_t v10 = v9;
  id v11 = [self currentConnection];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v29 = v8;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10024E1F0();
    sub_10001B0E8(v13, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v14 = v12;
    uint64_t v15 = sub_10024E1D0();
    os_log_type_t v16 = sub_10024EE30();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v29, v10, &v30);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v18 = sub_10024F360();
      sub_1000F3F3C(v18, v19, &v30);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2112;
      id v20 = v14;
      sub_10024F100();
      *uint64_t v28 = v12;

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] Entered %s from %@", (uint8_t *)v17, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v8 = v29;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v8 = v29;
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10024E1F0();
    sub_10001B0E8(v21, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_10024E1D0();
    os_log_type_t v23 = sub_10024EE30();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v8, v10, &v30);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v25 = sub_10024F360();
      sub_1000F3F3C(v25, v26, &v30);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%s] Entered %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_10019C090(v8, v10, a5, (void (**)(void, void))aBlock);
  sub_1001A23C0(v8, v10);
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
  return swift_bridgeObjectRelease();
}

void sub_1001A1930(int a1, int a2, int a3, int a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v11 = sub_1000511D4();
  unint64_t v13 = v12;
  id v14 = [self currentConnection];
  uint64_t v34 = v11;
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v31 = a7;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10024E1F0();
    sub_10001B0E8(v16, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v17 = v15;
    uint64_t v18 = sub_10024E1D0();
    os_log_type_t v19 = sub_10024EE30();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v11, v13, &v35);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v21 = sub_10024F360();
      sub_1000F3F3C(v21, v22, &v35);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2112;
      id v23 = v17;
      sub_10024F100();
      *uint64_t v30 = v15;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%s] Entered %s from %@", (uint8_t *)v20, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a7 = v31;
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10024E1F0();
    sub_10001B0E8(v24, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_10024E1D0();
    os_log_type_t v26 = sub_10024EE30();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v34, v13, &v35);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v28 = sub_10024F360();
      sub_1000F3F3C(v28, v29, &v35);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%s] Entered %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_10001C2A8((void *)(qword_10034C070 + 64), *(void *)(qword_10034C070 + 88));
  sub_10008AF50(a5, 0, a6, a7, a8);
  (*((void (**)(void *))aBlock + 2))(aBlock);
  _Block_release(aBlock);
  sub_1001A23C0(v34, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1001A1E94(int a1, int a2, int a3, int a4, uint64_t a5, unint64_t a6, void *aBlock)
{
  _Block_copy(aBlock);
  uint64_t v10 = sub_1000511D4();
  unint64_t v12 = v11;
  id v13 = [self currentConnection];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = v10;
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10024E1F0();
    sub_10001B0E8(v16, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    id v17 = v14;
    uint64_t v18 = sub_10024E1D0();
    os_log_type_t v19 = sub_10024EE30();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v31 = a5;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315650;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v15, v12, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v21 = sub_10024F360();
      sub_1000F3F3C(v21, v22, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2112;
      id v23 = v17;
      sub_10024F100();
      *uint64_t v30 = v14;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%s] Entered %s from %@", (uint8_t *)v20, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v31;
      swift_slowDealloc();

      uint64_t v10 = v15;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v10 = v15;
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10024E1F0();
    sub_10001B0E8(v24, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_10024E1D0();
    os_log_type_t v26 = sub_10024EE30();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v32 = a6;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(v10, v12, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v28 = sub_10024F360();
      sub_1000F3F3C(v28, v29, &v33);
      sub_10024F100();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%s] Entered %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v32;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  _Block_copy(aBlock);
  sub_10019C584(v10, v12, a5, a6, (void (**)(void, void, void))aBlock);
  sub_1001A23C0(v10, v12);
  swift_bridgeObjectRelease();
  sub_10003F808(a5, a6);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1001A23C0(uint64_t a1, unint64_t a2)
{
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10024E1F0();
  sub_10001B0E8(v4, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_10024E1D0();
  os_log_type_t v6 = sub_10024EE30();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000F3F3C(a1, a2, &v8);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] Exited", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1001A2568(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_10024E2A0();
  sub_10001B550();
  uint64_t v23 = v5;
  __chkstk_darwin(v6, v7);
  sub_1001A3ACC();
  uint64_t v8 = sub_10024E2D0();
  sub_10001B550();
  uint64_t v10 = v9;
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100308D38 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_10034C070;
  uint64_t v16 = *(os_unfair_lock_s **)(*(void *)(qword_10034C070 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v16);
  char v17 = *(unsigned char *)(v15 + 56);
  os_unfair_lock_unlock(v16);
  uint64_t result = swift_release();
  if ((v17 & 1) == 0)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v22;
    *(void *)(v19 + 24) = a2;
    aBlock[4] = sub_1001A2EB8;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018758;
    aBlock[3] = &unk_1002EC898;
    uint64_t v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    sub_10024E2C0();
    uint64_t v24 = _swiftEmptyArrayStorage;
    sub_1001A3584((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100019524(&qword_100309168);
    sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
    sub_10024F280();
    sub_10024EEB0();
    _Block_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v2, v4);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v8);
    return swift_release();
  }
  return result;
}

void sub_1001A2828(uint64_t a1, unint64_t a2)
{
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10024E1F0();
  sub_10001B0E8(v4, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_10024E1D0();
  os_log_type_t v6 = sub_10024EE30();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000F3F3C(a1, a2, &v8);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] Starting server", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_100308D38 != -1) {
    swift_once();
  }
  sub_1000F5594();
}

id sub_1001A2BCC()
{
  uint64_t v14 = sub_10024EE80();
  sub_10001B550();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  sub_1001A3ACC();
  uint64_t v6 = sub_10024EE60();
  __chkstk_darwin(v6, v7);
  sub_1001A3AB0();
  uint64_t v8 = sub_10024E2D0();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v13 = OBJC_IVAR____TtC25ASOctaneSupportXPCService16OctaneXPCService_serverQueue;
  sub_100051014();
  id v10 = v0;
  sub_10024E2C0();
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_1001A3584((unint64_t *)&qword_10030B050, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100019524((uint64_t *)&unk_1003170E0);
  sub_100051120((unint64_t *)&qword_10030B058, (uint64_t *)&unk_1003170E0);
  sub_10024F280();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  *(void *)(v12 + v13) = sub_10024EEC0();

  v15.receiver = v10;
  v15.super_class = (Class)type metadata accessor for OctaneXPCService();
  return objc_msgSendSuper2(&v15, "init");
}

id sub_1001A2E18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OctaneXPCService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for OctaneXPCService()
{
  return self;
}

uint64_t sub_1001A2E80()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001A2EB8()
{
  sub_1001A2828(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001A2EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001A2ED0()
{
  return swift_release();
}

uint64_t sub_1001A2ED8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001A2FB4;
  return v6(a1);
}

uint64_t sub_1001A2FB4()
{
  sub_100043A98();
  sub_100043A74();
  uint64_t v1 = *v0;
  sub_1000AC9CC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100043B28();
  return v3();
}

uint64_t sub_1001A3078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000AC744;
  return v6();
}

uint64_t sub_1001A3144(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000AC744;
  return v7();
}

uint64_t sub_1001A3210()
{
  uint64_t v1 = sub_10024E0A0();
  sub_10001B550();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_1001A32B4()
{
  sub_100043B04();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(sub_10024E0A0() - 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_100043BD0(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_1000AC744;
  return sub_10019AD48(v2, v4, v5, v6);
}

uint64_t sub_1001A3394()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A33CC()
{
  sub_100043B04();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_100043BD0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1000ABDA4;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1003170B0 + dword_1003170B0);
  return v7(v2, v3);
}

uint64_t sub_1001A3478()
{
  swift_unknownObjectRelease();
  sub_10003F808(*(void *)(v0 + 32), *(void *)(v0 + 40));
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001A34C0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_100043BD0(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1000ABDA4;
  uint64_t v8 = sub_1001A3B30();
  return sub_10019A7B0(v8, v9, v10, v11, v1, v2, v3, v4);
}

uint64_t sub_1001A3584(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A35CC()
{
  _Block_release(*(const void **)(v0 + 40));
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001A3614()
{
  sub_1001A3BBC();
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000AC744;
  uint64_t v8 = (uint64_t (*)(char, uint64_t, int, void *, void *))((char *)&dword_1003170F8 + dword_1003170F8);
  return v8(v2, v3, v4, v6, v5);
}

uint64_t sub_1001A36DC()
{
  sub_1001A3BBC();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000AC744;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100317108 + dword_100317108);
  return v6(v2, v3, v4);
}

uint64_t sub_1001A379C()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001A37DC()
{
  sub_1001A3BBC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100043BD0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000AC744;
  uint64_t v3 = sub_1001A3B30();
  return v4(v3);
}

uint64_t sub_1001A388C()
{
  _Block_release(*(const void **)(v0 + 40));
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001A38D4()
{
  sub_1001A3BBC();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1000AC744;
  uint64_t v8 = (uint64_t (*)(uint64_t, int, char, void *, void *))((char *)&dword_100317128 + dword_100317128);
  return v8(v2, v3, v4, v6, v5);
}

uint64_t sub_1001A3998@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1001A39C8()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001A3A00(uint64_t a1)
{
  sub_10019AB88(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001A3A0C(uint64_t a1, uint64_t a2)
{
  sub_10001B0E8(a1, a2);
  return swift_bridgeObjectRetain_n();
}

void *sub_1001A3A3C(int a1, int a2, int a3, void *aBlock)
{
  return _Block_copy(aBlock);
}

uint64_t sub_1001A3A6C()
{
  return v0;
}

void sub_1001A3A90(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0x16u);
}

uint64_t sub_1001A3AB0()
{
  return 0;
}

uint64_t sub_1001A3ACC()
{
  return 0;
}

uint64_t sub_1001A3AE8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1001A3B00()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1001A3B18()
{
  return swift_slowAlloc();
}

uint64_t sub_1001A3B30()
{
  return v0;
}

uint64_t sub_1001A3B48()
{
  *(_WORD *)(v0 + 12) = 2080;
  return sub_10024F360();
}

BOOL sub_1001A3B84(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1001A3BA0()
{
  return swift_arrayDestroy();
}

void sub_1001A3BC8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v6, v4, a4, v5, 0x20u);
}

uint64_t sub_1001A3BFC(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_1001A3C10()
{
  return sub_10024F100();
}

uint64_t sub_1001A3C28(uint64_t result)
{
  *(void *)(v1 - 88) = result;
  return result;
}

uint64_t sub_1001A3C34()
{
  return sub_10024F100();
}

uint64_t sub_1001A3C54()
{
  return v0;
}

uint64_t sub_1001A3C68(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A3C88()
{
  return v0;
}

uint64_t sub_1001A3CB0()
{
  return swift_arrayDestroy();
}

void sub_1001A3CD0()
{
  *(_WORD *)(v0 + 22) = 2112;
}

uint64_t sub_1001A3CE8()
{
  sub_1001A61A0();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return sub_1001A620C();
  }
  if ((v0 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = sub_1001A61F4(v1, v2, v3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A5340);
    char v9 = v28;
    goto LABEL_39;
  }
  if ((v0 & 0x2000000000000000) == 0)
  {
    if ((v1 & 0x1000000000000000) != 0) {
      uint64_t v5 = (unsigned __int8 *)sub_1001A61E8();
    }
    else {
      uint64_t v5 = (unsigned __int8 *)sub_10024F3E0();
    }
    unint64_t v7 = (unint64_t)sub_1001A5340(v5, v6);
    char v9 = v8 & 1;
    goto LABEL_39;
  }
  sub_1001A61D4();
  if (v13)
  {
    if (!v10) {
      goto LABEL_52;
    }
    if (v10 == 1) {
      goto LABEL_36;
    }
    sub_100067DD4();
    if (!v13 && v16) {
      goto LABEL_36;
    }
    unint64_t v7 = v20;
    if (v19 != 2)
    {
      sub_1001A6064();
      while (1)
      {
        sub_100028C7C();
        if (!v13 && v16) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v7, v21)) {
          goto LABEL_36;
        }
        BOOL v16 = __CFADD__(10 * v7, v22);
        unint64_t v7 = 10 * v7 + v22;
        if (v16) {
          goto LABEL_36;
        }
        char v9 = 0;
        sub_1001A6044();
        if (v13) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v9 = 0;
    goto LABEL_39;
  }
  if (v11 != 45)
  {
    if (!v10) {
      goto LABEL_36;
    }
    sub_1001A6038();
    if (!v13 && v16) {
      goto LABEL_36;
    }
    unint64_t v7 = v24;
    if (v23 != 1)
    {
      while (1)
      {
        sub_100028C7C();
        if (!v13 && v16) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v7, v26)) {
          goto LABEL_36;
        }
        BOOL v16 = __CFADD__(10 * v7, v27);
        unint64_t v7 = 10 * v7 + v27;
        if (v16) {
          goto LABEL_36;
        }
        char v9 = 0;
        sub_1001A6044();
        if (v13) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v10)
  {
    if (v10 != 1)
    {
      sub_100067DD4();
      if (v13 || !v16)
      {
        unint64_t v12 = 0;
        unint64_t v7 = -(uint64_t)v15;
        if (!v15)
        {
          if (v14 != 2)
          {
            sub_1001A6064();
            while (1)
            {
              sub_100028C7C();
              if (!v13 && v16) {
                goto LABEL_36;
              }
              if (!is_mul_ok(v7, v17)) {
                goto LABEL_36;
              }
              BOOL v16 = 10 * v7 >= v18;
              unint64_t v7 = 10 * v7 - v18;
              if (!v16) {
                goto LABEL_36;
              }
              char v9 = 0;
              sub_1001A6044();
              if (v13) {
                goto LABEL_39;
              }
            }
          }
          goto LABEL_38;
        }
        goto LABEL_53;
      }
    }
LABEL_36:
    unint64_t v7 = 0;
    char v9 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v9 = 1;
  unint64_t v7 = v12;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

void sub_1001A3EE8()
{
  sub_1001A61A0();
  if (v4)
  {
    if ((v0 & 0x1000000000000000) != 0)
    {
      sub_1001A61F4(v1, v2, v3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A50DC);
LABEL_38:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v0 & 0x2000000000000000) == 0)
    {
      if ((v1 & 0x1000000000000000) != 0) {
        uint64_t v5 = (unsigned __int8 *)sub_1001A61E8();
      }
      else {
        uint64_t v5 = (unsigned __int8 *)sub_10024F3E0();
      }
      sub_1001A50DC(v5, v6);
      goto LABEL_38;
    }
    sub_1001A61D4();
    if (v9)
    {
      if (v7)
      {
        if (v7 != 1)
        {
          sub_100067DD4();
          if (!(!v9 & v11) && v14 != 2)
          {
            sub_1001A6064();
            do
            {
              sub_100028C7C();
              if (!v9 & v11) {
                break;
              }
              sub_10016D574();
              if (!v9) {
                break;
              }
              if (__OFADD__(v16, v15)) {
                break;
              }
              sub_1001A6044();
            }
            while (!v9);
          }
        }
        goto LABEL_38;
      }
    }
    else
    {
      if (v8 != 45)
      {
        if (v7)
        {
          sub_1001A6038();
          if (!(!v9 & v11) && v17 != 1)
          {
            do
            {
              sub_100028C7C();
              if (!v9 & v11) {
                break;
              }
              sub_10016D574();
              if (!v9) {
                break;
              }
              if (__OFADD__(v19, v18)) {
                break;
              }
              sub_1001A6044();
            }
            while (!v9);
          }
        }
        goto LABEL_38;
      }
      if (v7)
      {
        if (v7 != 1)
        {
          sub_100067DD4();
          if (!(!v9 & v11) && v10 != 2)
          {
            sub_1001A6064();
            do
            {
              sub_100028C7C();
              if (!v9 & v11) {
                break;
              }
              sub_10016D574();
              if (!v9) {
                break;
              }
              if (__OFSUB__(v13, v12)) {
                break;
              }
              sub_1001A6044();
            }
            while (!v9);
          }
        }
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1001A620C();
  }
}

void sub_1001A40B4()
{
  sub_1000458B4(v0, (uint64_t)v20, &qword_10030AA30);
  sub_1000458B4((uint64_t)v20, (uint64_t)v21, &qword_10030AA30);
  uint64_t v1 = v22;
  if (!v22 || (sub_1001A6188(), !v2))
  {
    sub_1001A620C();
    return;
  }
  if ((v1 & 0x1000000000000000) != 0)
  {
    sub_1000562D8((uint64_t)v20);
    sub_1001A61F4(v0, v18, v19, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A50DC);
    sub_1001A4FA0((uint64_t)v20);
    return;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v0 & 0x1000000000000000) != 0) {
      uint64_t v3 = (unsigned __int8 *)sub_1001A61E8();
    }
    else {
      uint64_t v3 = (unsigned __int8 *)sub_10024F3E0();
    }
    sub_1001A6144(v3, v4);
    return;
  }
  sub_1001A6178();
  if (v7)
  {
    if (!v5) {
      goto LABEL_59;
    }
    if (v5 != 1)
    {
      sub_100067DD4();
      if (!(!v7 & v9) && v10 != 2)
      {
        sub_100067DD4();
        if (!(!v7 & v9))
        {
          sub_1001A6108();
          if (!v7)
          {
            sub_1001A6074();
            do
            {
              sub_100028C7C();
              if (!v7 & v9) {
                break;
              }
              sub_1001A6024();
              if (!v7) {
                break;
              }
              if (__OFADD__(v12, v11)) {
                break;
              }
              sub_100067DE4();
            }
            while (!v7);
          }
        }
      }
    }
  }
  else
  {
    if (v6 == 45)
    {
      if (v5)
      {
        if (v5 != 1)
        {
          sub_100067DD4();
          if (!(!v7 & v9))
          {
            if (v8 == 2)
            {
              sub_1001A6168();
            }
            else
            {
              sub_1001A60F4();
              if (!(!v7 & v9))
              {
                sub_1001A60DC();
                if (!v7)
                {
                  sub_1001A6074();
                  do
                  {
                    sub_100028C7C();
                    if (!v7 & v9) {
                      break;
                    }
                    sub_1001A6024();
                    if (!v7) {
                      break;
                    }
                    if (__OFSUB__(v17, v16)) {
                      break;
                    }
                    sub_100067DE4();
                  }
                  while (!v7);
                }
              }
            }
          }
        }
        return;
      }
      __break(1u);
LABEL_59:
      __break(1u);
      return;
    }
    if (v5)
    {
      sub_1001A6038();
      if (!(!v7 & v9) && v13 != 1)
      {
        sub_100067DD4();
        if (!(!v7 & v9))
        {
          sub_1001A611C();
          if (!v7)
          {
            sub_1001A6064();
            do
            {
              sub_100028C7C();
              if (!v7 & v9) {
                break;
              }
              sub_1001A6024();
              if (!v7) {
                break;
              }
              if (__OFADD__(v15, v14)) {
                break;
              }
              sub_100067DE4();
            }
            while (!v7);
          }
        }
      }
    }
  }
}

void sub_1001A42D0()
{
  sub_1000458B4(v0 + 32, (uint64_t)v20, &qword_10030AA30);
  sub_1000458B4((uint64_t)v20, (uint64_t)v21, &qword_10030AA30);
  uint64_t v1 = v22;
  if (!v22 || (sub_1001A6188(), !v2))
  {
    sub_1001A620C();
    return;
  }
  if ((v1 & 0x1000000000000000) != 0)
  {
    sub_1000562D8((uint64_t)v20);
    sub_1001A61F4(v0, v18, v19, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A50DC);
    sub_1001A4FA0((uint64_t)v20);
    return;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v0 & 0x1000000000000000) != 0) {
      uint64_t v3 = (unsigned __int8 *)sub_1001A61E8();
    }
    else {
      uint64_t v3 = (unsigned __int8 *)sub_10024F3E0();
    }
    sub_1001A6144(v3, v4);
    return;
  }
  sub_1001A6178();
  if (v7)
  {
    if (!v5) {
      goto LABEL_59;
    }
    if (v5 != 1)
    {
      sub_100067DD4();
      if (!(!v7 & v9) && v10 != 2)
      {
        sub_100067DD4();
        if (!(!v7 & v9))
        {
          sub_1001A6108();
          if (!v7)
          {
            sub_1001A6074();
            do
            {
              sub_100028C7C();
              if (!v7 & v9) {
                break;
              }
              sub_1001A6024();
              if (!v7) {
                break;
              }
              if (__OFADD__(v12, v11)) {
                break;
              }
              sub_100067DE4();
            }
            while (!v7);
          }
        }
      }
    }
  }
  else
  {
    if (v6 == 45)
    {
      if (v5)
      {
        if (v5 != 1)
        {
          sub_100067DD4();
          if (!(!v7 & v9))
          {
            if (v8 == 2)
            {
              sub_1001A6168();
            }
            else
            {
              sub_1001A60F4();
              if (!(!v7 & v9))
              {
                sub_1001A60DC();
                if (!v7)
                {
                  sub_1001A6074();
                  do
                  {
                    sub_100028C7C();
                    if (!v7 & v9) {
                      break;
                    }
                    sub_1001A6024();
                    if (!v7) {
                      break;
                    }
                    if (__OFSUB__(v17, v16)) {
                      break;
                    }
                    sub_100067DE4();
                  }
                  while (!v7);
                }
              }
            }
          }
        }
        return;
      }
      __break(1u);
LABEL_59:
      __break(1u);
      return;
    }
    if (v5)
    {
      sub_1001A6038();
      if (!(!v7 & v9) && v13 != 1)
      {
        sub_100067DD4();
        if (!(!v7 & v9))
        {
          sub_1001A611C();
          if (!v7)
          {
            sub_1001A6064();
            do
            {
              sub_100028C7C();
              if (!v7 & v9) {
                break;
              }
              sub_1001A6024();
              if (!v7) {
                break;
              }
              if (__OFADD__(v15, v14)) {
                break;
              }
              sub_100067DE4();
            }
            while (!v7);
          }
        }
      }
    }
  }
}

void sub_1001A44EC()
{
  unint64_t v1 = *(void *)(v0 + 96);
  if (!v1) {
    return;
  }
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
  if (!((v1 & 0x2000000000000000) != 0 ? HIBYTE(v1) & 0xF : v2 & 0xFFFFFFFFFFFFLL)) {
    return;
  }
  if ((v1 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1001A4FE4(v2, v1, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A50DC);
    swift_bridgeObjectRelease();
    return;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v2 & 0x1000000000000000) != 0) {
      uint64_t v5 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v5 = (unsigned __int8 *)sub_10024F3E0();
    }
    sub_1001A6144(v5, v3);
    return;
  }
  sub_1001A6178();
  if (v8)
  {
    if (!v6) {
      goto LABEL_61;
    }
    if (v6 != 1)
    {
      sub_100067DD4();
      if (!(!v8 & v10) && v11 != 2)
      {
        sub_100067DD4();
        if (!(!v8 & v10))
        {
          sub_1001A6108();
          if (!v8)
          {
            sub_1001A6074();
            do
            {
              sub_100028C7C();
              if (!v8 & v10) {
                break;
              }
              sub_1001A6024();
              if (!v8) {
                break;
              }
              if (__OFADD__(v13, v12)) {
                break;
              }
              sub_100067DE4();
            }
            while (!v8);
          }
        }
      }
    }
  }
  else
  {
    if (v7 == 45)
    {
      if (v6)
      {
        if (v6 != 1)
        {
          sub_100067DD4();
          if (!(!v8 & v10))
          {
            if (v9 == 2)
            {
              sub_1001A6168();
            }
            else
            {
              sub_1001A60F4();
              if (!(!v8 & v10))
              {
                sub_1001A60DC();
                if (!v8)
                {
                  sub_1001A6074();
                  do
                  {
                    sub_100028C7C();
                    if (!v8 & v10) {
                      break;
                    }
                    sub_1001A6024();
                    if (!v8) {
                      break;
                    }
                    if (__OFSUB__(v18, v17)) {
                      break;
                    }
                    sub_100067DE4();
                  }
                  while (!v8);
                }
              }
            }
          }
        }
        return;
      }
      __break(1u);
LABEL_61:
      __break(1u);
      return;
    }
    if (v6)
    {
      sub_1001A6038();
      if (!(!v8 & v10) && v14 != 1)
      {
        sub_100067DD4();
        if (!(!v8 & v10))
        {
          sub_1001A611C();
          if (!v8)
          {
            sub_1001A6064();
            do
            {
              sub_100028C7C();
              if (!v8 & v10) {
                break;
              }
              sub_1001A6024();
              if (!v8) {
                break;
              }
              if (__OFADD__(v16, v15)) {
                break;
              }
              sub_100067DE4();
            }
            while (!v8);
          }
        }
      }
    }
  }
}

uint64_t sub_1001A46F4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9270;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001A4744(char a1)
{
  uint64_t result = 1684632420;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_100062138();
      break;
    case 2:
      uint64_t result = sub_10006211C();
      break;
    case 3:
      uint64_t result = sub_1001A6130();
      break;
    case 4:
      uint64_t result = sub_1000C6814();
      break;
    case 5:
      uint64_t result = 0x74696D696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001A47BC(char a1)
{
  uint64_t result = 1684632420;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_100062138();
      break;
    case 2:
      uint64_t result = sub_10006211C();
      break;
    case 3:
      uint64_t result = sub_1001A6130();
      break;
    case 4:
      uint64_t result = sub_1000C6814();
      break;
    case 5:
      uint64_t result = 0x74696D696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001A4834(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_100317158);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1001A5D98();
  sub_10024FD40();
  v14[0] = 0;
  sub_1001A60A4();
  if (!v2)
  {
    v14[0] = 1;
    sub_1001A60A4();
    v14[0] = 2;
    sub_1001A60A4();
    v14[0] = 3;
    sub_10024F940();
    sub_1000458B4(v3 + 64, (uint64_t)v15, &qword_10030EEE8);
    sub_1000458B4((uint64_t)v15, (uint64_t)v14, &qword_10030EEE8);
    v13[15] = 4;
    sub_1000C650C();
    sub_10024F910();
    v14[0] = 5;
    sub_1001A60A4();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_1001A4A04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100019524(&qword_100317140);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = a1[3];
  sub_10001C2A8(a1, v7);
  sub_1001A5D98();
  sub_10024FD20();
  if (v2) {
    return sub_10001C2EC((uint64_t)a1);
  }
  LOBYTE(v26) = 0;
  uint64_t v8 = sub_1001A6084();
  sub_1001A61B8(1);
  uint64_t v25 = v7;
  uint64_t v22 = sub_1001A6084();
  sub_1001A61B8(2);
  uint64_t v9 = sub_1001A6084();
  uint64_t v23 = v10;
  uint64_t v24 = v7;
  uint64_t v21 = v9;
  sub_1001A61B8(3);
  uint64_t v20 = sub_10024F830();
  uint64_t v12 = v11;
  sub_1001A5DE4();
  swift_bridgeObjectRetain();
  sub_10024F800();
  uint64_t v13 = sub_1001A6084();
  uint64_t v15 = v14;
  uint64_t v19 = v13;
  uint64_t v16 = sub_1001A6050();
  v17(v16);
  swift_bridgeObjectRetain();
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v25;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v24;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v27;
  *(unsigned char *)(a2 + 80) = v28;
  *(void *)(a2 + 88) = v19;
  *(void *)(a2 + 96) = v15;
  return result;
}

uint64_t sub_1001A4D84()
{
  return sub_1000F8FD8();
}

Swift::Int sub_1001A4D90()
{
  return sub_1001D3950(*v0);
}

uint64_t sub_1001A4D98()
{
  return sub_1000D0B8C();
}

Swift::Int sub_1001A4DA0(uint64_t a1)
{
  return sub_1000D2C0C(a1, *v1);
}

uint64_t sub_1001A4DA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001A46F4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001A4DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001A4744(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001A4E04()
{
  return sub_1001A47BC(*v0);
}

uint64_t sub_1001A4E0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001A4740();
  *a1 = result;
  return result;
}

void sub_1001A4E34(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1001A4E40(uint64_t a1)
{
  unint64_t v2 = sub_1001A5D98();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A4E7C(uint64_t a1)
{
  unint64_t v2 = sub_1001A5D98();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1001A4EB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1001A4A04(a1, (uint64_t)__src);
  if (!v2) {
    return memcpy(a2, __src, 0x68uLL);
  }
  return result;
}

uint64_t sub_1001A4F04(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1001A4834(a1);
}

unsigned __int8 *sub_1001A4F58(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1001A50DC(a1, a2);
}

unsigned __int8 *sub_1001A4F70(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1001A5340(a1, a2);
}

uint64_t sub_1001A4F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A4FE4(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A50DC);
}

uint64_t sub_1001A4FA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001A4FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A4FE4(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001A5340);
}

uint64_t sub_1001A4FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10024E910();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1001A55A4();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_10024F3E0();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1001A50DC(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1001A60C4();
        if (v20 ^ v21 | v19) {
          unsigned __int8 v25 = v28;
        }
        if (v20 ^ v21 | v19) {
          unsigned __int8 v26 = 65;
        }
        if (!(v20 ^ v21 | v19)) {
          unsigned __int8 v27 = 58;
        }
        if (v22)
        {
          uint64_t v13 = 0;
          unint64_t v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            unsigned int v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                uint64_t v17 = 0;
                if (v30 < 0x61 || v30 >= v25) {
                  return (unsigned __int8 *)v17;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            uint64_t v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63) {
              return 0;
            }
            uint64_t v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31))) {
              return 0;
            }
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_1001A60C4();
        if (v34 ^ v35 | v33) {
          unsigned __int8 v39 = v42;
        }
        if (v34 ^ v35 | v33) {
          unsigned __int8 v40 = 65;
        }
        if (!(v34 ^ v35 | v33)) {
          unsigned __int8 v41 = 58;
        }
        if (v36)
        {
          uint64_t v43 = 0;
          do
          {
            unsigned int v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v17 = 0;
                if (v44 < 0x61 || v44 >= v39) {
                  return (unsigned __int8 *)v17;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63) {
              return 0;
            }
            uint64_t v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45))) {
              return 0;
            }
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1001A60C4();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          uint64_t v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            uint64_t v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63) {
              return 0;
            }
            uint64_t v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16))) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1001A5340(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1001A60C4();
        if (v22 ^ v23 | v21) {
          unsigned __int8 v27 = v30;
        }
        if (v22 ^ v23 | v21) {
          unsigned __int8 v28 = 65;
        }
        if (!(v22 ^ v23 | v21)) {
          unsigned __int8 v29 = 58;
        }
        if (v24)
        {
          unint64_t v13 = 0;
          char v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            unsigned int v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                uint64_t v17 = 0;
                if (v32 < 0x61 || v32 >= v27) {
                  return (unsigned __int8 *)v17;
                }
                char v33 = -87;
              }
              else
              {
                char v33 = -55;
              }
            }
            else
            {
              char v33 = -48;
            }
            if (!is_mul_ok(v13, v25)) {
              return 0;
            }
            unint64_t v34 = v13 * v25;
            unsigned __int8 v35 = v32 + v33;
            BOOL v20 = __CFADD__(v34, v35);
            unint64_t v13 = v34 + v35;
            if (v20) {
              return 0;
            }
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_1001A60C4();
        if (v37 ^ v38 | v36) {
          unsigned __int8 v42 = v45;
        }
        if (v37 ^ v38 | v36) {
          unsigned __int8 v43 = 65;
        }
        if (!(v37 ^ v38 | v36)) {
          unsigned __int8 v44 = 58;
        }
        if (v39)
        {
          unint64_t v46 = 0;
          do
          {
            unsigned int v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                uint64_t v17 = 0;
                if (v47 < 0x61 || v47 >= v42) {
                  return (unsigned __int8 *)v17;
                }
                char v48 = -87;
              }
              else
              {
                char v48 = -55;
              }
            }
            else
            {
              char v48 = -48;
            }
            if (!is_mul_ok(v46, v40)) {
              return 0;
            }
            unint64_t v49 = v46 * v40;
            unsigned __int8 v50 = v47 + v48;
            BOOL v20 = __CFADD__(v49, v50);
            unint64_t v46 = v49 + v50;
            if (v20) {
              return 0;
            }
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1001A60C4();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          unint64_t v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            if (!is_mul_ok(v13, v7)) {
              return 0;
            }
            unint64_t v18 = v13 * v7;
            unsigned __int8 v19 = v15 + v16;
            BOOL v20 = v18 >= v19;
            unint64_t v13 = v18 - v19;
            if (!v20) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A55A4()
{
  unint64_t v0 = sub_1001A560C();
  uint64_t v4 = sub_1001A5640(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001A560C()
{
  return sub_10024E920();
}

uint64_t sub_1001A5640(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1001A5798(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned __int8 v11 = sub_1000F444C(v9, 0),
          unint64_t v12 = sub_1001A5898((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_10024E770();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_10024E770();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_10024F3E0();
LABEL_4:
  return sub_10024E770();
}

uint64_t sub_1001A5798(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1000F44B4(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1000F44B4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_10024E880();
}

unint64_t sub_1001A5898(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_1000F44B4(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_10024E890();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_10024F3E0();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_1000F44B4(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_10024E860();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t destroy for TransactionHistoryRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionHistoryRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionHistoryRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for TransactionHistoryRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for TransactionHistoryRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionHistoryRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionHistoryRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionHistoryRequest()
{
  return &type metadata for TransactionHistoryRequest;
}

unint64_t sub_1001A5D98()
{
  unint64_t result = qword_100317148;
  if (!qword_100317148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317148);
  }
  return result;
}

unint64_t sub_1001A5DE4()
{
  unint64_t result = qword_100317150;
  if (!qword_100317150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317150);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TransactionHistoryRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A5EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionHistoryRequest.CodingKeys()
{
  return &type metadata for TransactionHistoryRequest.CodingKeys;
}

unint64_t sub_1001A5F38()
{
  unint64_t result = qword_100317160;
  if (!qword_100317160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317160);
  }
  return result;
}

unint64_t sub_1001A5F88()
{
  unint64_t result = qword_100317168;
  if (!qword_100317168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317168);
  }
  return result;
}

unint64_t sub_1001A5FD8()
{
  unint64_t result = qword_100317170;
  if (!qword_100317170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317170);
  }
  return result;
}

uint64_t sub_1001A6050()
{
  return v0;
}

uint64_t sub_1001A6084()
{
  return sub_10024F7C0();
}

uint64_t sub_1001A60A4()
{
  return sub_10024F8D0();
}

unint64_t sub_1001A6130()
{
  return 0xD000000000000012;
}

unsigned __int8 *sub_1001A6144(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1001A50DC(a1, a2);
}

uint64_t sub_1001A61B8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A61E8()
{
  return (v0 & 0xFFFFFFFFFFFFFFFLL) + 32;
}

uint64_t sub_1001A61F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  return sub_1001A4FE4(a1, v4, 10, a4);
}

uint64_t sub_1001A620C()
{
  return 0;
}

uint64_t sub_1001A6218(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_10024F380();
        swift_unknownObjectRelease();
        if (v6 == a2) {
          goto LABEL_11;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        goto LABEL_11;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v5 = 0;
LABEL_11:
  swift_release();
  return v5;
}

uint64_t sub_1001A6314()
{
  if (*(void *)(*(void *)v0 + 16))
  {
    uint64_t v1 = *(void *)(*(void *)v0 + 32);
    swift_retain();
    sub_10003AAB8();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A635C(unint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1001A8C40(v3);
    unint64_t v3 = result;
    *uint64_t v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    unint64_t v8 = v6 - 1 - a1;
    uint64_t v9 = v5 + 8 * a1;
    uint64_t v10 = *(void *)(v9 + 32);
    sub_100037D0C(v9 + 40, v8, v9 + 32);
    *(void *)(v5 + 16) = v7;
    sub_10024EAC0();
    return v10;
  }
  return result;
}

uint64_t sub_1001A63E8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = sub_10006FF20();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if ((v5 & 1) == 0) {
      a2(result);
    }
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t sub_1001A644C(uint64_t a1, void (*a2)(void *))
{
  uint64_t result = sub_10006FF20();
  int v5 = *(unsigned __int8 *)(a1 + 32);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if ((v5 & 1) == 0)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      v8[0] = v7;
      v8[1] = v6;
      sub_10003C360(v7);
      a2(v8);
      sub_10013FF34(v7, v6, v5);
    }
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t sub_1001A64E0(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t result = sub_10006FF20();
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if ((v5 & 1) == 0)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = v6;
      swift_retain();
      a2(&v7);
      sub_1001A8EBC(v6, v5);
    }
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t sub_1001A6564(uint64_t a1, void (*a2)(void *))
{
  uint64_t result = sub_10006FF20();
  int v5 = *(unsigned __int8 *)(a1 + 32);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    if ((v5 & 1) == 0)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      v8[0] = v7;
      v8[1] = v6;
      swift_unknownObjectRetain();
      a2(v8);
      sub_10013F2CC(v7, v6, v5);
    }
    return _s25ASOctaneSupportXPCService35NIOSingleStepByteToMessageProcessorC7_bufferAA0F6BufferVSgvpfi_0();
  }
  return result;
}

uint64_t SingleConnectionFailure.error.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t NIOConnectionError.dnsAError.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_errorRetain();
  return v1;
}

uint64_t NIOConnectionError.dnsAAAAError.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_errorRetain();
  return v1;
}

uint64_t NIOConnectionError.connectionErrors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SingleConnectionFailure()
{
  swift_release();
  return swift_errorRelease();
}

void *_s25ASOctaneSupportXPCService23SingleConnectionFailureVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_retain();
  swift_errorRetain();
  a1[1] = v3;
  return a1;
}

void *assignWithCopy for SingleConnectionFailure(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[1];
  swift_errorRetain();
  a1[1] = v4;
  swift_errorRelease();
  return a1;
}

void *assignWithTake for SingleConnectionFailure(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_errorRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SingleConnectionFailure()
{
  return &type metadata for SingleConnectionFailure;
}

uint64_t destroy for NIOConnectionError()
{
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for NIOConnectionError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_errorRetain();
  a1[3] = v5;
  uint64_t v6 = a2[4];
  swift_errorRetain();
  uint64_t v7 = a2[5];
  a1[4] = v6;
  a1[5] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NIOConnectionError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v4 = a2[3];
  swift_errorRetain();
  a1[3] = v4;
  swift_errorRelease();
  uint64_t v5 = a2[4];
  swift_errorRetain();
  a1[4] = v5;
  swift_errorRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NIOConnectionError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_errorRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_errorRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NIOConnectionError()
{
  return &type metadata for NIOConnectionError;
}

uint64_t sub_1001A699C()
{
  if (*(unsigned char *)v0)
  {
    if (!*(void *)(*(void *)(v0 + 8) + 16))
    {
      if (!*(void *)(*(void *)(v0 + 16) + 16)) {
        return 0xF000000000000007;
      }
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  if (*(void *)(*(void *)(v0 + 16) + 16))
  {
LABEL_6:
    char v1 = 1;
LABEL_9:
    *(unsigned char *)uint64_t v0 = v1;
    return sub_1001A6314();
  }
  if (*(void *)(*(void *)(v0 + 8) + 16))
  {
LABEL_8:
    char v1 = 0;
    goto LABEL_9;
  }
  return 0xF000000000000007;
}

uint64_t sub_1001A6A24()
{
  if (!*(void *)(*(void *)(v0 + 16) + 16)) {
    return 0xF000000000000007;
  }
  *(unsigned char *)uint64_t v0 = 1;
  return sub_1001A6314();
}

uint64_t sub_1001A6A64()
{
  if (!*(void *)(*(void *)(v0 + 8) + 16)) {
    return 0xF000000000000007;
  }
  *(unsigned char *)uint64_t v0 = 0;
  return sub_1001A6314();
}

uint64_t sub_1001A6AA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001A699C();
  *a1 = result;
  return result;
}

uint64_t sub_1001A6AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  *(unsigned char *)(v12 + 176) = 0;
  *(void *)(v12 + 184) = _swiftEmptyArrayStorage;
  *(void *)(v12 + 192) = _swiftEmptyArrayStorage;
  *(void *)(v12 + 200) = _swiftEmptyArrayStorage;
  *(void *)(v12 + 208) = 0;
  sub_100027788(a1, v12 + 16);
  *(void *)(v12 + 56) = a2;
  *(void *)(v12 + 64) = a3;
  *(void *)(v12 + 72) = a4;
  *(void *)(v12 + 80) = a5;
  *(void *)(v12 + 88) = a6;
  *(void *)(v12 + 96) = a10;
  *(void *)(v12 + 104) = a11;
  *(void *)(v12 + 120) = 0;
  *(void *)(v12 + 136) = 0;
  *(void *)(v12 + 144) = a7;
  *(void *)(v12 + 152) = 0;
  *(unsigned char *)(v12 + 168) = 0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = sub_100019524(&qword_10030A528);
  EmbeddedChannel.WrongTypeError.actual.getter(ObjectType, v21);
  *(void *)(v12 + 160) = EventLoop.makePromise<A>(of:file:line:)(v21, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HappyEyeballs.swift", 115, 2, 294, ObjectType, v21, a3);
  *(void *)(v12 + 216) = a4;
  *(void *)(v12 + 224) = a5;
  *(void *)(v12 + 232) = a6;
  *(void *)(v12 + 240) = 0;
  *(void *)(v12 + 248) = 0;
  *(void *)(v12 + 256) = _swiftEmptyArrayStorage;
  if (a8 < 1)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v12 + 112) = a8;
  if (a9 >= 100000000)
  {
    swift_bridgeObjectRetain();
    sub_10001C2EC(a1);
    if ((unint64_t)a9 <= 0x77359400)
    {
      *(void *)(v12 + 128) = a9;
      return v12;
    }
    goto LABEL_6;
  }
LABEL_7:
  swift_bridgeObjectRetain();
  uint64_t result = sub_10001C2EC(a1);
  __break(1u);
  return result;
}

uint64_t sub_1001A6C40()
{
  uint64_t v2 = sub_1001A9274();
  uint64_t v3 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v1 + 24);
  swift_retain();
  v3(sub_1001A8EE0, v0, v2, v1);
  swift_release();
  return swift_retain();
}

uint64_t sub_1001A6CCC(void *a1)
{
  uint64_t v2 = a1[8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = a1[18];
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t (*)(), void *, char *, uint64_t, uint64_t))(v2 + 48);
  swift_retain();
  uint64_t v6 = v5(v4, sub_1001A8EE8, a1, &type metadata for ()[8], ObjectType, v2);
  swift_release();
  a1[19] = v6;
  swift_release();
  return sub_1001A6D88(0);
}

uint64_t sub_1001A6D88(uint64_t result)
{
  char v2 = result;
  switch(*(unsigned char *)(v1 + 168))
  {
    case 1:
      if (result == 5) {
        goto LABEL_25;
      }
      if (result == 2)
      {
        char v2 = 4;
        goto LABEL_14;
      }
      if (result != 1) {
        goto LABEL_43;
      }
      *(unsigned char *)(v1 + 168) = 2;
      uint64_t result = sub_1001A7228();
      break;
    case 2:
      if (result != 5)
      {
        if (result != 3)
        {
          if (result != 2)
          {
LABEL_43:
            sub_10024F330(50);
            v4._object = (void *)0x80000001002827F0;
            v4._countAndFlagsBits = 0xD000000000000026;
            sub_10024E800(v4);
            sub_1001A9254();
            v5._countAndFlagsBits = 0x207475706E69202CLL;
            v5._object = (void *)0xE800000000000000;
            sub_10024E800(v5);
            sub_1001A9254();
            sub_10024F670();
            __break(1u);
            JUMPOUT(0x1001A70F4);
          }
          char v2 = 5;
        }
LABEL_14:
        *(unsigned char *)(v1 + 168) = v2;
        return sub_1001A7304();
      }
LABEL_25:
      *(unsigned char *)(v1 + 168) = 6;
      uint64_t result = sub_1001A75BC();
      break;
    case 3:
      switch((char)result)
      {
        case 2:
          goto LABEL_18;
        case 4:
          goto LABEL_22;
        case 5:
          goto LABEL_25;
        case 6:
          goto LABEL_30;
        case 7:
          goto LABEL_33;
        case 8:
          return result;
        default:
          goto LABEL_43;
      }
    case 4:
      switch((char)result)
      {
        case 1:
LABEL_18:
          *(unsigned char *)(v1 + 168) = 5;
          return sub_1001A74A0();
        case 4:
          goto LABEL_22;
        case 5:
          goto LABEL_25;
        case 6:
          goto LABEL_30;
        case 7:
          goto LABEL_33;
        case 8:
          return result;
        default:
          goto LABEL_43;
      }
    case 5:
      switch((char)result)
      {
        case 4:
LABEL_22:
          return sub_1001A74B0();
        case 5:
          goto LABEL_25;
        case 6:
LABEL_30:
          *(unsigned char *)(v1 + 168) = 6;
          return sub_1001A7E4C();
        case 7:
LABEL_33:
          return sub_1001A74E0();
        case 8:
          *(unsigned char *)(v1 + 168) = 6;
          return sub_1001A7640();
        default:
          goto LABEL_43;
      }
    case 6:
      if (result - 1 < 7) {
        return result;
      }
      goto LABEL_43;
    default:
      if ((_BYTE)result) {
        goto LABEL_43;
      }
      *(unsigned char *)(v1 + 168) = 1;
      return sub_1001A7160();
  }
  return result;
}

uint64_t sub_1001A7160()
{
  sub_10001C2A8((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = sub_1001A91F8();
  v2(v1);
  sub_1001A8614();
  swift_release();
  sub_10001C2A8((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v3 = sub_1001A91F8();
  v4(v3);
  sub_1001A844C();
  return swift_release();
}

uint64_t sub_1001A7228()
{
  uint64_t v2 = sub_1001A9274();
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1001A8EB8;
  *(void *)(v4 + 24) = v0;
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t, char *, uint64_t, uint64_t))(v1 + 48);
  swift_retain();
  uint64_t v6 = v5(v3, sub_100080458, v4, &type metadata for ()[8], v2, v1);
  swift_release();
  *(void *)(v0 + 120) = v6;
  return swift_release();
}

uint64_t sub_1001A7304()
{
  if (*(void *)(v0 + 136))
  {
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10024F6F0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return sub_1001A6D88(8);
    }
    return result;
  }
  uint64_t v1 = v0;
  sub_10008C918();
  if (*(unsigned char *)(v0 + 176))
  {
    uint64_t v2 = sub_1001A6A64();
    if ((~v2 & 0xF000000000000007) == 0)
    {
      uint64_t v3 = sub_1001A6A24();
      goto LABEL_7;
    }
LABEL_11:
    unint64_t v4 = v2;
    swift_endAccess();
    goto LABEL_12;
  }
  uint64_t v2 = sub_1001A6A24();
  if ((~v2 & 0xF000000000000007) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = sub_1001A6A64();
LABEL_7:
  unint64_t v4 = v3;
  swift_endAccess();
  if ((~v4 & 0xF000000000000007) != 0)
  {
LABEL_12:
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t, char *, uint64_t, uint64_t))(v7 + 48);
    swift_retain();
    uint64_t v11 = v10(v9, sub_1001A8E8C, v0, &type metadata for ()[8], ObjectType, v7);
    swift_release();
    *(void *)(v1 + 136) = v11;
    swift_release();
    sub_1001A7750(v4);
    return swift_release();
  }
  uint64_t result = sub_10006FF20();
  unint64_t v6 = *(void *)(v0 + 200);
  if (v6 >> 62) {
    goto LABEL_15;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return sub_1001A6D88(8);
  }
  return result;
}

uint64_t sub_1001A74A0()
{
  if (!*(void *)(v0 + 136)) {
    return sub_1001A7304();
  }
  return result;
}

uint64_t sub_1001A74B0()
{
  *(void *)(v0 + 136) = 0;
  swift_release();
  return sub_1001A7304();
}

#error "1001A7554: call analysis failed (funcsize=54)"

#error "1001A7610: call analysis failed (funcsize=32)"

uint64_t sub_1001A7640()
{
  uint64_t result = sub_10006FF20();
  unint64_t v2 = v0[25];
  if (v2 >> 62)
  {
    sub_1001A9294();
    uint64_t v16 = sub_10024F6F0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v16) {
      goto LABEL_3;
    }
  }
  else if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_1001A7E4C();
    uint64_t v3 = v0[20];
    sub_10006FF20();
    uint64_t v5 = v0[27];
    uint64_t v4 = v0[28];
    uint64_t v7 = v0[29];
    uint64_t v6 = v0[30];
    uint64_t v9 = v0[31];
    uint64_t v8 = v0[32];
    sub_1001A8E40();
    uint64_t v10 = sub_1000290D0();
    *uint64_t v11 = v5;
    v11[1] = v4;
    v11[2] = v7;
    v11[3] = v6;
    v11[4] = v9;
    v11[5] = v8;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    sub_1000B4BF0(v10, 0, 1, v3, v12, v13, v14, v15, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
      v28,
      v29,
      v30,
      vars0,
      vars8);
    swift_errorRelease();
    return swift_errorRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A7750(unint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void, void, void))(v1 + 96))(*(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned int *)((char *)&unk_1002674F4 + ((a1 >> 60) & 0xC)));
  sub_10008C918();
  swift_retain();
  sub_10024EA70();
  sub_1000348E0(*(void *)((*(void *)(v1 + 200) & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_10024EB10();
  sub_10024EAC0();
  swift_endAccess();
  uint64_t v4 = (void *)sub_1001188D4();
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = a1;
  swift_retain();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_10013175C();
  swift_release();
  swift_release();
  uint64_t v5 = (void *)sub_1001188D4();
  v5[2] = v1;
  v5[3] = a1;
  v5[4] = v3;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100131878();
  swift_release();
  return swift_release_n();
}

uint64_t sub_1001A78DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if (*(unsigned char *)(a2 + 168) == 6)
  {
    swift_beginAccess();
    swift_retain();
    unint64_t v8 = swift_bridgeObjectRetain();
    unint64_t v9 = sub_1001A6218(v8, a3);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      sub_1001A635C(v9);
      swift_release();
    }
    swift_endAccess();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = static NIOHTTPObjectAggregatorError.endingIgnoredMessage.getter();
    return Channel.close(mode:promise:)(v13, 0, ObjectType);
  }
  else
  {
    swift_getObjectType();
    ChannelOutboundInvoker.connect(to:file:line:)();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a2;
    uint64_t v16[3] = a3;
    v16[4] = v6;
    v16[5] = v7;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1001A8DE0;
    *(void *)(v17 + 24) = v16;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/HappyEyeballs.swift", 115, 2, 542, (uint64_t)sub_10004E9CC, v17);
    swift_release();
    swift_release();
    char v18 = (void *)swift_allocObject();
    v18[2] = a2;
    v18[3] = a3;
    v18[4] = a4;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10012DD14();
    swift_release();
    return swift_release();
  }
}

#error "1001A7C08: call analysis failed (funcsize=69)"

uint64_t sub_1001A7C30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a2 + 168) != 6)
  {
    uint64_t v7 = result;
    swift_beginAccess();
    swift_errorRetain();
    swift_retain();
    sub_10003478C();
    uint64_t v8 = *(void *)(*(void *)(a2 + 256) + 16);
    sub_100034A48();
    uint64_t v9 = *(void *)(a2 + 256);
    *(void *)(v9 + 16) = v8 + 1;
    uint64_t v10 = v9 + 16 * v8;
    *(void *)(v10 + 32) = a4;
    *(void *)(v10 + 40) = v7;
    swift_endAccess();
    swift_beginAccess();
    swift_retain();
    unint64_t v11 = swift_bridgeObjectRetain();
    unint64_t v12 = sub_1001A6218(v11, a3);
    LOBYTE(v7) = v13;
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      sub_1001A635C(v12);
      swift_release();
    }
    swift_endAccess();
    return sub_1001A6D88(7);
  }
  return result;
}

uint64_t sub_1001A7D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  swift_errorRetain();
  swift_retain();
  sub_10003478C();
  uint64_t v8 = *(void *)(*(void *)(a2 + 256) + 16);
  sub_100034A48();
  uint64_t v9 = *(void *)(a2 + 256);
  *(void *)(v9 + 16) = v8 + 1;
  uint64_t v10 = v9 + 16 * v8;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a1;
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  unint64_t v11 = swift_bridgeObjectRetain();
  unint64_t v12 = sub_1001A6218(v11, a4);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    sub_1001A635C(v12);
    swift_release();
  }
  swift_endAccess();
  return sub_1001A6D88(7);
}

uint64_t sub_1001A7E4C()
{
  if ((uint64_t)v0[26] <= 1)
  {
    uint64_t v1 = v0[5];
    uint64_t v2 = v0[6];
    sub_10001C2A8(v0 + 2, v1);
    (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  }
  if (v0[15])
  {
    sub_10002F2C8();
    uint64_t v3 = sub_1000290D0();
    sub_1001A91CC(v3, v4);
    uint64_t v5 = swift_errorRetain();
    sub_10002FBD4(v5, v6, v7, v8, v9, v10, v11, v12, v61, v62, v63, v64, v66, v68, v69, v70, v71, v72, v73,
      v74,
      v75,
      v76);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
    v0[15] = 0;
    swift_release();
  }
  if (v0[17])
  {
    sub_10002F2C8();
    uint64_t v13 = sub_1000290D0();
    sub_1001A91CC(v13, v14);
    uint64_t v15 = swift_errorRetain();
    sub_10002FBD4(v15, v16, v17, v18, v19, v20, v21, v22, v61, v62, v63, v64, v66, v68, v69, v70, v71, v72, v73,
      v74,
      v75,
      v76);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
    v0[17] = 0;
    swift_release();
  }
  if (v0[19])
  {
    sub_10002F2C8();
    uint64_t v23 = sub_1000290D0();
    sub_1001A91CC(v23, v24);
    uint64_t v25 = swift_errorRetain();
    sub_10002FBD4(v25, v26, v27, v28, v29, v30, v31, v32, v61, v62, v63, v64, v66, v68, v69, v70, v71, v72, v73,
      v74,
      v75,
      v76);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
    v0[19] = 0;
    swift_release();
  }
  uint64_t result = swift_beginAccess();
  unint64_t v34 = v0[25];
  v0[25] = _swiftEmptyArrayStorage;
  if (!(v34 >> 62))
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35) {
      goto LABEL_11;
    }
    return swift_bridgeObjectRelease();
  }
  sub_10001B56C();
  uint64_t v35 = sub_10024F6F0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v35) {
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  if (v35 >= 1)
  {
    uint64_t v36 = 0;
    unint64_t v67 = v34 & 0xC000000000000001;
    do
    {
      if (v67)
      {
        uint64_t v37 = sub_10024F380();
      }
      else
      {
        uint64_t v37 = *(void *)(v34 + 8 * v36 + 32);
        swift_retain();
      }
      char v38 = (void *)sub_1001188D4();
      v38[2] = v37;
      v38[3] = sub_1001A8400;
      v38[4] = 0;
      uint64_t v39 = *(void *)(v37 + 48);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 16);
      sub_1001A923C();
      if (v41(ObjectType, v39))
      {
        unsigned __int8 v42 = (void *)sub_1001188D4();
        v42[2] = v37;
        _OWORD v42[3] = sub_1001A8400;
        v42[4] = 0;
        uint64_t v43 = *(void *)(v37 + 48);
        uint64_t v44 = swift_getObjectType();
        EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 692, v44, v43);
        sub_10006FF20();
        int v45 = *(unsigned __int8 *)(v37 + 32);
        if (v45 == 255)
        {
          swift_beginAccess();
          if (*(void *)(v37 + 56))
          {
            if (*(void *)(v37 + 72))
            {
              uint64_t result = swift_allocObject();
              *(void *)(result + 16) = sub_1001408A8;
              *(void *)(result + 24) = v42;
              uint64_t v46 = *(void *)(v37 + 72);
              if (!v46) {
                goto LABEL_39;
              }
              uint64_t v47 = result;
              sub_1001A923C();
              swift_retain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v37 + 72) = v46;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1000350C8();
                uint64_t v46 = v59;
                *(void *)(v37 + 72) = v59;
              }
              unint64_t v49 = *(void *)(v46 + 16);
              if (v49 >= *(void *)(v46 + 24) >> 1)
              {
                sub_1000350C8();
                uint64_t v46 = v60;
              }
              *(void *)(v46 + 16) = v49 + 1;
              uint64_t v50 = v46 + 16 * v49;
              *(void *)(v50 + 32) = sub_1001A91C8;
              *(void *)(v50 + 40) = v47;
              *(void *)(v37 + 72) = v46;
            }
            else
            {
              sub_100019524(&qword_10030A3C0);
              uint64_t v57 = swift_allocObject();
              *(_OWORD *)(v57 + 16) = xmmword_100255FB0;
              uint64_t v58 = swift_allocObject();
              *(void *)(v58 + 16) = sub_1001408A8;
              *(void *)(v58 + 24) = v42;
              *(void *)(v57 + 32) = sub_1001A8D30;
              *(void *)(v57 + 40) = v58;
              sub_1001A923C();
              swift_retain();
              swift_bridgeObjectRelease();
              *(void *)(v37 + 72) = v57;
            }
          }
          else
          {
            *(void *)(v37 + 56) = sub_1001408A8;
            *(void *)(v37 + 64) = v42;
            sub_1001A923C();
            swift_retain();
          }
          swift_endAccess();
          swift_release();
        }
        else if (v45)
        {
          swift_retain();
        }
        else
        {
          uint64_t v55 = swift_getObjectType();
          uint64_t v56 = static NIOHTTPObjectAggregatorError.endingIgnoredMessage.getter();
          sub_1001A923C();
          Channel.close(mode:promise:)(v56, 0, v55);
          swift_release();
        }
        swift_release();
      }
      else
      {
        unsigned int v51 = (void *)sub_1001188D4();
        v51[2] = v37;
        v51[3] = sub_10013F26C;
        v51[4] = v38;
        uint64_t v65 = v36;
        unint64_t v52 = v34;
        uint64_t v53 = v35;
        unsigned __int8 v54 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v39 + 24);
        swift_retain();
        swift_retain();
        v54(sub_1001A8CE8, v51, ObjectType, v39);
        uint64_t v35 = v53;
        unint64_t v34 = v52;
        uint64_t v36 = v65;
        swift_release();
      }
      swift_release();
      swift_release();
      ++v36;
      swift_release();
    }
    while (v35 != v36);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001A8400()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = static NIOHTTPObjectAggregatorError.endingIgnoredMessage.getter();
  return Channel.close(mode:promise:)(v1, 0, ObjectType);
}

uint64_t sub_1001A844C()
{
  swift_retain();
  uint64_t v1 = sub_1001A91E8();
  sub_1001B7C78(v1, v2, v3, 608, v4, v0);
  swift_release();
  swift_retain();
  sub_1001A91E8();
  sub_100134C44();
  swift_release();
  swift_retain_n();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_release();
}

uint64_t sub_1001A8530()
{
  return swift_endAccess();
}

uint64_t sub_1001A8590()
{
  sub_1001A9214();
  *(void *)(v0 + 240) = v1;
  swift_errorRetain();
  return swift_errorRelease();
}

uint64_t sub_1001A85D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 208);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 208) = v4;
    return sub_1001A6D88(1);
  }
  return result;
}

uint64_t sub_1001A8614()
{
  swift_retain();
  uint64_t v1 = sub_1001A91E8();
  sub_1001B7C78(v1, v2, v3, 620, v4, v0);
  swift_release();
  swift_retain();
  sub_1001A91E8();
  sub_100134C2C();
  swift_release();
  swift_retain_n();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_release();
}

uint64_t sub_1001A86F8()
{
  return swift_endAccess();
}

uint64_t sub_1001A8758()
{
  sub_1001A9214();
  *(void *)(v0 + 248) = v1;
  swift_errorRetain();
  return swift_errorRelease();
}

#error "1001A8804: call analysis failed (funcsize=47)"

uint64_t sub_1001A8860()
{
  *(void *)(v0 + 120) = 0;
  swift_release();
  return sub_1001A6D88(3);
}

uint64_t sub_1001A8894()
{
  sub_10001C2EC(v0 + 16);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001A893C()
{
  sub_1001A8894();
  return _swift_deallocClassInstance(v0, 264, 7);
}

uint64_t type metadata accessor for HappyEyeballsConnector()
{
  return self;
}

uint64_t sub_1001A8998(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetIterator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TargetIterator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TargetIterator()
{
  return &type metadata for TargetIterator;
}

unsigned char *storeEnumTagSinglePayload for HappyEyeballsConnector.ConnectionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A8B64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HappyEyeballsConnector.ConnectionState()
{
  return &type metadata for HappyEyeballsConnector.ConnectionState;
}

unint64_t sub_1001A8BA0()
{
  unint64_t result = qword_1003173D8;
  if (!qword_1003173D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003173D8);
  }
  return result;
}

void sub_1001A8BEC()
{
}

uint64_t sub_1001A8C00(uint64_t a1)
{
  return sub_1000351A8(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1001A8C14(uint64_t a1)
{
}

void sub_1001A8C28()
{
}

uint64_t sub_1001A8C40(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_10001B56C();
    sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  return sub_10024F390();
}

void sub_1001A8CAC()
{
}

uint64_t sub_1001A8CC0()
{
  return sub_1001A86F8();
}

uint64_t sub_1001A8CC8(uint64_t a1)
{
  return sub_1001A87A0(a1, v1);
}

uint64_t sub_1001A8CD0()
{
  return sub_1001A8530();
}

uint64_t sub_1001A8CD8(uint64_t a1)
{
  return sub_1001A85D8(a1, v1);
}

uint64_t sub_1001A8CE8()
{
  return sub_1001354C0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001A8CF8()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A8D30@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001250B0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1001A8D3C(uint64_t *a1)
{
  return sub_1001A78DC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001A8D48()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1001A8D8C(uint64_t a1)
{
  return sub_1001A7D44(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001A8D98()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001A8DE0()
{
  return sub_1001A7B1C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1001A8DF0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1001A8E34(uint64_t a1)
{
  return sub_1001A7C30(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1001A8E40()
{
  unint64_t result = qword_1003173E0;
  if (!qword_1003173E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003173E0);
  }
  return result;
}

uint64_t sub_1001A8E8C()
{
  return sub_1001A6D88(4);
}

uint64_t sub_1001A8EBC(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1001A8ED4(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1001A8ED4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_1001A8EE0()
{
  return sub_1001A6CCC(v0);
}

uint64_t sub_1001A8EE8()
{
  return sub_1001A6D88(5);
}

unsigned char *storeEnumTagSinglePayload for HappyEyeballsConnector.ConnectorInput(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A8FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HappyEyeballsConnector.ConnectorInput()
{
  return &type metadata for HappyEyeballsConnector.ConnectorInput;
}

unsigned char *storeEnumTagSinglePayload for TargetIterator.AddressFamily(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A90E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetIterator.AddressFamily()
{
  return &type metadata for TargetIterator.AddressFamily;
}

unint64_t sub_1001A9120()
{
  unint64_t result = qword_1003173E8;
  if (!qword_1003173E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003173E8);
  }
  return result;
}

unint64_t sub_1001A9170()
{
  unint64_t result = qword_1003173F0;
  if (!qword_1003173F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003173F0);
  }
  return result;
}

uint64_t sub_1001A91CC(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_retain();
}

uint64_t sub_1001A91E8()
{
  return v0;
}

uint64_t sub_1001A91F8()
{
  return v0;
}

uint64_t sub_1001A9214()
{
  return swift_beginAccess();
}

uint64_t sub_1001A923C()
{
  return swift_retain_n();
}

uint64_t sub_1001A9254()
{
  return sub_10024F5C0();
}

uint64_t sub_1001A9274()
{
  return swift_getObjectType();
}

uint64_t sub_1001A9294()
{
  return swift_bridgeObjectRetain();
}

_DWORD *sub_1001A92B4(unsigned int a1, unsigned int a2, int a3)
{
  uint64_t v7 = sub_10012101C(v3[2], *v3, v3[1]);
  uint64_t v8 = (unsigned int *)UnsafeMutableRawBufferPointer.init(fastRebase:)(v7);
  uint64_t v10 = v9;
  unint64_t result = (_DWORD *)sub_10000D03C(4);
  uint64_t v12 = (uint64_t)result;
  if (v8)
  {
    if (v10 - (uint64_t)v8 < (uint64_t)result)
    {
      __break(1u);
    }
    else
    {
      v8[1] = a1;
      void v8[2] = a2;
      unint64_t v13 = sub_10000D034(4);
      if ((v13 & 0x8000000000000000) != 0)
      {
LABEL_16:
        sub_10003C4F8();
LABEL_18:
        unint64_t result = (_DWORD *)sub_10024F660();
        __break(1u);
        goto LABEL_19;
      }
      if (HIDWORD(v13))
      {
        sub_10003C4F8();
        sub_10003C6D8();
        goto LABEL_18;
      }
      *uint64_t v8 = v13;
      unint64_t result = (_DWORD *)sub_10015294C(v8);
      if (v15)
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      if (result && v14 - (uint64_t)result >= 4)
      {
        *unint64_t result = a3;
        uint64_t v16 = v3[2];
        BOOL v17 = __OFADD__(v16, v12);
        uint64_t v18 = v16 + v12;
        if (!v17)
        {
          v3[2] = v18;
          return result;
        }
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v12 <= 0)
  {
    __break(1u);
    goto LABEL_15;
  }
LABEL_19:
  __break(1u);
  return result;
}

void *sub_1001A9400(void *(*a1)(uint64_t *__return_ptr, long long *, uint64_t), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      int v4 = *(_DWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x14);
      uint64_t v5 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v6 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      int v7 = *(_DWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      LODWORD(v20) = *(_DWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      DWORD1(v20) = v4;
      *((void *)&v20 + 1) = v5;
      *(void *)&long long v21 = v6;
      DWORD2(v21) = v7;
      uint64_t v8 = 28;
    }
    else
    {
      long long v11 = *(_OWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      long long v12 = *(_OWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      long long v13 = *(_OWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
      long long v14 = *(_OWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x50);
      long long v15 = *(_OWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x60);
      uint64_t v16 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x70);
      __int16 v17 = *(_WORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x78);
      long long v20 = *(_OWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      long long v21 = v11;
      long long v22 = v12;
      long long v23 = v13;
      long long v24 = v14;
      long long v25 = v15;
      uint64_t v26 = v16;
      __int16 v27 = v17;
      uint64_t v8 = 106;
    }
  }
  else
  {
    int v9 = *(_DWORD *)(a3 + 20);
    uint64_t v10 = *(void *)(a3 + 24);
    LODWORD(v20) = *(_DWORD *)(a3 + 16);
    DWORD1(v20) = v9;
    *((void *)&v20 + 1) = v10;
    uint64_t v8 = 16;
  }
  unint64_t result = a1(&v19, &v20, v8);
  if (!v3) {
    return (void *)v19;
  }
  return result;
}

uint64_t sub_1001A9514(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
LABEL_8:
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  if (HIDWORD(a1))
  {
    sub_10003C4F8();
    sub_10003C6D8();
    goto LABEL_8;
  }
  uint64_t v3 = 0x1FFFFFF00000000;
  if ((uint64_t)a1 < a3) {
    uint64_t v3 = 0xFFFFFF00000000;
  }
  return v3 | a1;
}

uint64_t sub_1001A95B8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 >= a4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)(a3 + 16);
  }
  return sub_1001A9514((*(void *)(a3 + 16) - 1) & (a2 + a1), a5 - a4 + v5, a4) & 0x1FFFFFFFFFFFFFFLL;
}

uint64_t sub_1001A95F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int v4 = *((_DWORD *)a1 + 6);
  __int16 v5 = *((_WORD *)a1 + 14);
  char v6 = *((unsigned char *)a1 + 30);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v10 = a1[6];
  v15[0] = a1[1];
  v15[1] = a1[2];
  int v16 = v4;
  __int16 v17 = v5;
  char v18 = v6;
  uint64_t v19 = a2;
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  sub_10008C918();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003BD08(v8, v9);
  sub_1001AA2AC((uint64_t)v15);
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  sub_10003B918(v8, v9);
  if (*(void *)(v3 + 168) >= *(void *)(v3 + 152)) {
    return 1;
  }
  uint64_t v11 = *(void *)(v2 + 176);
  swift_retain();
  uint64_t v12 = 1;
  BOOL v13 = sub_100007604((atomic_uchar *)(v11 + 16), 1, 0);
  swift_release();
  if (v13)
  {
    uint64_t v12 = 0;
    *(unsigned char *)(v3 + 184) = 0;
  }
  return v12;
}

uint64_t sub_1001A973C()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  BOOL v4 = __OFSUB__(v3, v2);
  uint64_t v5 = v3 - v2;
  if (v5 < 0 != v4) {
    v5 += *(void *)(*(void *)(v0 + 104) + 16);
  }
  BOOL v4 = __OFSUB__(v5, 1);
  BOOL v6 = v5 - 1 < 0;
  uint64_t v7 = v5 - 1;
  if (v6 == v4)
  {
    *(void *)(v0 + 128) = v7;
    *(unsigned char *)(v0 + 136) = 0;
  }
  return result;
}

uint64_t sub_1001A97A0(uint64_t a1, char a2)
{
  if (a2) {
    *(unsigned char *)(v2 + 200) = 0;
  }
  sub_10008C918();
  sub_1001AA794(a1);
  return swift_endAccess();
}

uint64_t sub_1001A97E8(uint64_t a1)
{
  sub_1001AB8D8((void *)(v1 + 32), &v10);
  sub_1001AB8D8(&v10, &v11);
  if (v11 >> 62)
  {
    if (v11 >> 62 == 1)
    {
      int v6 = *(_DWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x14);
      uint64_t v8 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v7 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      int v9 = *(_DWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      *(_DWORD *)a1 = *(_DWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      *(_DWORD *)(a1 + 4) = v6;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
      *(_DWORD *)(a1 + 24) = v9;
      return 28;
    }
    else
    {
      v11 &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t result = sub_10024F670();
      __break(1u);
    }
  }
  else
  {
    int v3 = *(_DWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x14);
    uint64_t v4 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    *(_DWORD *)a1 = *(_DWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    *(_DWORD *)(a1 + 4) = v3;
    *(void *)(a1 + 8) = v4;
    return 16;
  }
  return result;
}

BOOL sub_1001A98C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  double v4 = __chkstk_darwin(a1, v1);
  int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v3 + 16))(v6, v4);
  if (swift_dynamicCast())
  {
    int v7 = v11[6];
    swift_bridgeObjectRelease();
    BOOL v9 = v7 == 40 || v7 == 65;
  }
  else
  {
    BOOL v9 = 0;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
  return v9;
}

uint64_t sub_1001A99E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t), uint64_t i)
{
  uint64_t v72 = 0;
  sub_1001AAC7C(a1, (uint64_t)v73);
  unint64_t v16 = v74;
  BOOL v17 = v75;
  uint64_t v63 = v73[0];
  uint64_t v58 = v73[1];
  sub_1000458B4((uint64_t)&v76, (uint64_t)v77, &qword_1003174E8);
  sub_10001B078((uint64_t)a1);
  sub_1000458B4((uint64_t)v77, (uint64_t)&v87, &qword_1003174E8);
  unint64_t v18 = v87;
  if (HIBYTE(v87) != 2)
  {
    unint64_t v67 = v16;
    uint64_t v19 = 0;
    uint64_t v22 = 0;
    while (1)
    {
      unint64_t v23 = *(void *)(v63 + 16);
      if (v17)
      {
        unint64_t v24 = v67;
        if ((v18 & 0x100000000000000) != 0) {
          uint64_t v25 = v18 - v67;
        }
        else {
          uint64_t v25 = v23 - v67 + v18;
        }
      }
      else
      {
        unint64_t v24 = v67;
        if ((v18 & 0x100000000000000) != 0)
        {
          unint64_t v26 = v67 - v18 + v23;
          BOOL v27 = __OFSUB__(0, v26);
          uint64_t v25 = -(uint64_t)v26;
          if (v27) {
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v25 = v18 - v67;
        }
      }
      if (v25 < 0) {
        goto LABEL_3;
      }
      if (v23 <= v24)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v28 = (uint64_t *)(v63 + 32 + (v24 << 6));
      if (!*v28) {
        goto LABEL_39;
      }
      uint64_t v29 = *v28;
      uint64_t v30 = (v23 + 0x1FFFFFFFFLL) & (v24 + 1);
      if (HIDWORD(v30)) {
        goto LABEL_41;
      }
      uint64_t v32 = v28[1];
      uint64_t v31 = v28[2];
      uint64_t v34 = v28[3];
      uint64_t v33 = v28[4];
      uint64_t v35 = v28[5];
      uint64_t v36 = v28[6];
      i = v28[7];
      v78[0] = *v28;
      v78[1] = v32;
      int v79 = v31;
      __int16 v80 = WORD2(v31);
      char v81 = BYTE6(v31);
      uint64_t v82 = v34;
      uint64_t v83 = v33;
      uint64_t v84 = v35;
      uint64_t v85 = v36;
      uint64_t v86 = i;
      if (__OFSUB__(qword_10030D368, v22)) {
        goto LABEL_35;
      }
      unint64_t v37 = (HIDWORD(v32) - v32);
      if (HIDWORD(v32) < v32) {
        goto LABEL_36;
      }
      if (qword_10030D368 - v22 < v37) {
        break;
      }
      if (v19 == 1024) {
        goto LABEL_3;
      }
      BOOL v27 = __OFADD__(v22, v37);
      uint64_t v38 = v22 + v37;
      if (v27) {
        goto LABEL_37;
      }
      uint64_t v66 = v38;
      unint64_t v67 = v30;
      BOOL v65 = v30 >= v58;
      uint64_t v39 = v29;
      uint64_t v40 = v34;
      uint64_t v70 = v36;
      uint64_t v69 = v32;
      uint64_t v41 = v39;
      uint64_t v42 = v35;
      uint64_t v43 = v33;
      swift_beginAccess();
      uint64_t v44 = *(void *)(v41 + 24) + (BYTE6(v31) | ((unint64_t)WORD2(v31) << 8)) + v69;
      sub_10003C290(v41, v69, v31, v40, v43, v42, v70);
      sub_1001A9E84(v44, v44 + v37, v41, a8, a9, &v72, v78, a6, a7, a2, a3, v37, a10, a11, a12, a4);
      uint64_t v45 = v43;
      BOOL v17 = v65;
      sub_10003BC24(v41, v69, v31, v40, v45, v42, v70);
      uint64_t v72 = ++v19;
      sub_1000458B4((uint64_t)v77, (uint64_t)&v87, &qword_1003174E8);
      uint64_t v22 = v66;
      unint64_t v18 = v87;
      if (HIBYTE(v87) == 2) {
        goto LABEL_3;
      }
    }
    uint64_t v71 = v35;
    sub_10003C290(v29, v32, v31, v34, v33, v35, v36);
    sub_100074F0C((uint64_t)v73);
    if (v19)
    {
      uint64_t v47 = sub_1001ABE7C();
      sub_10003BC24(v47, v48, v49, v50, v51, v71, v36);
      goto LABEL_4;
    }
    sub_100028EB4();
    swift_allocError();
    *(void *)uint64_t v52 = 0xD000000000000023;
    *(void *)(v52 + 8) = 0x80000001002828E0;
    *(_DWORD *)(v52 + 16) = 40;
    swift_willThrow();
    uint64_t v53 = sub_1001ABE7C();
    sub_10003BC24(v53, v54, v55, v56, v57, v71, v36);
    return i;
  }
  uint64_t v19 = 0;
LABEL_3:
  sub_100074F0C((uint64_t)v73);
LABEL_4:
  if (a4)
  {
    uint64_t v21 = a13(a4, v19);
    if (v68)
    {
      for (; v19; --v19)
      {
        a8 += 8;
        swift_unknownObjectRelease();
      }
    }
    else
    {
      for (i = v21; v19; --v19)
      {
        a8 += 8;
        swift_unknownObjectRelease();
      }
    }
    return i;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  sub_10003C4F8();
  sub_10003C6D8();
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

void sub_1001A9E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v20 = *a6;
  *(void *)(a4 + 8 * *a6) = a3;
  swift_unknownObjectRetain();
  if (!a8)
  {
    __break(1u);
    goto LABEL_18;
  }
  int v21 = sub_1001A97E8(a8 + (v20 << 7));
  if (!a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int v22 = v21;
  unint64_t v23 = (void *)(a10 + 16 * *a6);
  *unint64_t v23 = a1;
  v23[1] = a12;
  uint64_t v36 = sub_10007ACD0(*a6, a13, a14);
  uint64_t v37 = v24;
  uint64_t v25 = a7[5];
  if (v25 == 4) {
    goto LABEL_9;
  }
  uint64_t v26 = a7[6];
  uint64_t v27 = a7[4] >> 62;
  if (v27)
  {
    if (v27 != 1) {
      goto LABEL_9;
    }
    sub_10002F288(a7[6]);
    int v28 = sub_10007C3E8(v25);
    unsigned int v29 = 41;
    unsigned int v30 = 36;
  }
  else
  {
    sub_10002F288(a7[6]);
    int v28 = sub_10007C3E8(v25);
    unsigned int v29 = 0;
    unsigned int v30 = 3;
  }
  sub_1001A92B4(v29, v30, v28);
  sub_10003B918(v25, v26);
LABEL_9:
  sub_10007C520(v36, v37, 0);
  if (!a10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v33 = v32 - v31;
  if (!v31) {
    unint64_t v33 = 0;
  }
  if ((v33 & 0x8000000000000000) == 0 && !HIDWORD(v33) && (a12 & 0x8000000000000000) == 0 && !HIDWORD(a12))
  {
    uint64_t v34 = *a6;
    uint64_t v35 = a16 + 56 * *a6;
    *(void *)uint64_t v35 = a8 + (*a6 << 7);
    *(_DWORD *)(v35 + 8) = v22;
    *(void *)(v35 + 16) = a10 + 16 * v34;
    *(_DWORD *)(v35 + 24) = 1;
    *(void *)(v35 + 32) = v31;
    *(_DWORD *)(v35 + 40) = v33;
    *(_DWORD *)(v35 + 44) = 0;
    *(_DWORD *)(v35 + 48) = a12;
    return;
  }
LABEL_20:
  sub_10024F660();
  __break(1u);
}

void sub_1001AA0AC(uint64_t a1@<X8>)
{
  if (v1[1] == v1[2])
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    long long v9 = 0uLL;
LABEL_6:
    *(void *)a1 = v3;
    *(_OWORD *)(a1 + 8) = v9;
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v8;
    return;
  }
  uint64_t v10 = *v1;
  unsigned int v11 = sub_100032980(v10);
  if ((unint64_t)v11 >= *(void *)(v10 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v10 + ((unint64_t)v11 << 6);
    uint64_t v14 = *(void *)(v12 + 32);
    uint64_t v13 = v12 + 32;
    uint64_t v3 = v14;
    if (v14)
    {
      uint64_t v7 = *(void *)(v13 + 48);
      uint64_t v8 = *(void *)(v13 + 56);
      uint64_t v5 = *(void *)(v13 + 32);
      uint64_t v6 = *(void *)(v13 + 40);
      uint64_t v4 = *(void *)(v13 + 24);
      long long v15 = *(_OWORD *)(v13 + 8);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003BD08(v6, v7);
      long long v9 = v15;
      goto LABEL_6;
    }
  }
  __break(1u);
}

void sub_1001AA19C()
{
  sub_1001AB7E8(&v15);
  uint64_t v1 = v15;
  if (!(void)v15) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(v0 + 40);
  BOOL v3 = __OFSUB__(v2, 1);
  uint64_t v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = *((void *)&v15 + 1);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  uint64_t v10 = v19;
  uint64_t v9 = v20;
  uint64_t v11 = HIDWORD(*((void *)&v15 + 1));
  *(void *)(v0 + 40) = v4;
  unsigned int v12 = v11 - v5;
  if (v11 < v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v0 + 48);
  BOOL v3 = __OFSUB__(v13, v12);
  uint64_t v14 = v13 - v12;
  if (v3)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  *(void *)(v0 + 48) = v14;
  if (v7)
  {
    swift_retain();
    sub_10003BC24(v1, v5, v6, v7, v8, v10, v9);
    swift_errorRetain();
  }
  else
  {
    sub_10003BC24(v1, v5, v6, 0, v8, v10, v9);
  }
}

void sub_1001AA2AC(uint64_t a1)
{
  sub_100030FA4(a1);
  uint64_t v3 = *(void *)(v1 + 40);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(void *)(v1 + 40) = v5;
  unsigned int v6 = *(_DWORD *)(a1 + 8);
  unsigned int v7 = *(_DWORD *)(a1 + 12);
  BOOL v8 = v7 >= v6;
  unsigned int v9 = v7 - v6;
  if (!v8) {
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(v1 + 48);
  BOOL v4 = __OFADD__(v10, v9);
  uint64_t v11 = v10 + v9;
  if (!v4)
  {
    *(void *)(v1 + 48) = v11;
    return;
  }
LABEL_8:
  __break(1u);
}

uint64_t sub_1001AA308(uint64_t a1, uint64_t a2)
{
  sub_100035FDC();
  swift_bridgeObjectRelease();
  uint64_t v42 = a1;
  if (__OFSUB__(a1, 1)) {
    goto LABEL_49;
  }
  if (((a1 - 1) & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v50 = v44[6];
    unint64_t v5 = v44[1];
    int64_t v6 = v44[2];
    uint64_t v7 = *v44;
    uint64_t v41 = v44[5];
    unint64_t v51 = v41 ^ 0x8000000000000000;
    BOOL v8 = (unsigned int *)(a2 + 48);
    uint64_t v9 = v42;
    int64_t v43 = v6;
    while (1)
    {
      if (v6 == v5)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        break;
      }
      if ((v5 & 0x8000000000000000) != 0 || HIDWORD(v5)) {
        goto LABEL_53;
      }
      unint64_t v10 = *(void *)(v7 + 16);
      if (v5 >= v10) {
        goto LABEL_41;
      }
      uint64_t v11 = v7 + (v5 << 6);
      uint64_t v13 = *(void *)(v11 + 32);
      uint64_t v12 = v11 + 32;
      if (!v13) {
        goto LABEL_51;
      }
      unsigned int v14 = *(_DWORD *)(v12 + 8);
      unsigned int v15 = *(_DWORD *)(v12 + 12);
      BOOL v16 = v15 >= v14;
      unsigned int v17 = v15 - v14;
      if (!v16) {
        goto LABEL_42;
      }
      unsigned int v19 = *v8;
      uint64_t v18 = v8 + 14;
      if (v17 < v19) {
        goto LABEL_43;
      }
      if ((v44[4] & 1) == 0)
      {
        uint64_t v20 = v44[3];
        BOOL v21 = v20 < 1;
        uint64_t v22 = v20 - 1;
        char v23 = v21;
        if (v21) {
          uint64_t v22 = 0;
        }
        v44[3] = v22;
        *((unsigned char *)v44 + 32) = v23;
      }
      if (v6 >= (uint64_t)v5) {
        unint64_t v10 = 0;
      }
      if ((uint64_t)(v6 - v5 + v10) < 1) {
        goto LABEL_44;
      }
      uint64_t v48 = v9;
      uint64_t v49 = v18;
      uint64_t v24 = *(void *)v12;
      if (!*(void *)v12) {
        goto LABEL_52;
      }
      uint64_t v25 = v4;
      uint64_t v26 = *(void *)(v12 + 8);
      uint64_t v46 = *(void *)(v12 + 16);
      uint64_t v27 = *(void *)(v12 + 24);
      uint64_t v28 = *(void *)(v12 + 32);
      uint64_t v29 = *(void *)(v12 + 40);
      uint64_t v30 = *(void *)(v12 + 48);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v47 = v29;
      sub_10003BD08(v29, v30);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v31 = v7;
      }
      else
      {
        sub_10011FD1C();
        uint64_t v31 = v32;
      }
      if (v5 >= *(void *)(v31 + 16)) {
        goto LABEL_45;
      }
      uint64_t v7 = v31;
      unint64_t v33 = (uint64_t *)(v31 + (v5 << 6));
      sub_10003BC24(v33[4], v33[5], v33[6], v33[7], v33[8], v33[9], v33[10]);
      *((_OWORD *)v33 + 4) = 0u;
      *((_OWORD *)v33 + 5) = 0u;
      *((_OWORD *)v33 + 2) = 0u;
      *((_OWORD *)v33 + 3) = 0u;
      if (!v51) {
        goto LABEL_46;
      }
      unsigned int v34 = HIDWORD(v26) - v26;
      if (HIDWORD(v26) < v26) {
        goto LABEL_47;
      }
      BOOL v35 = __OFSUB__(v50, v34);
      uint64_t v36 = v50 - v34;
      if (v35) {
        goto LABEL_48;
      }
      uint64_t v50 = v36;
      uint64_t v45 = *(void *)(v7 + 16);
      if (v27)
      {
        swift_retain();
        sub_10003BC24(v24, v26, v46, v27, v28, v47, v30);
        if (!v25)
        {
          uint64_t v4 = v27;
LABEL_37:
          int64_t v6 = v43;
          uint64_t v38 = v48;
          BOOL v8 = v49;
          uint64_t v39 = v45;
          goto LABEL_38;
        }
        uint64_t v4 = v25;
        sub_1001AB83C(v25);
        sub_1001AB83C(v27);
        swift_retain();
        uint64_t v37 = swift_retain();
        sub_100031E30(v37);
        sub_1001AB7A8(v27);
        swift_release();
        swift_release_n();
        swift_errorRelease();
      }
      else
      {
        sub_10003BC24(v24, v26, v46, 0, v28, v47, v30);
        uint64_t v4 = v25;
        if (!v25) {
          goto LABEL_37;
        }
        swift_retain();
        swift_errorRetain();
      }
      int64_t v6 = v43;
      uint64_t v38 = v48;
      BOOL v8 = v49;
      uint64_t v39 = v45;
      swift_release();
      swift_errorRelease();
LABEL_38:
      unint64_t v5 = (v39 - 1) & (v5 + 1);
      --v51;
      uint64_t v9 = v38 - 1;
      if (!v9)
      {
        v44[5] = v41 - v42;
        v44[6] = v50;
        uint64_t *v44 = v7;
        v44[1] = v5;
        return v4;
      }
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

void sub_1001AA6FC(uint64_t a1)
{
  if (v1[1] == v1[2])
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = *v1;
  unsigned int v4 = sub_100032980(*v1);
  if ((unint64_t)v4 >= *(void *)(v3 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = v3 + ((unint64_t)v4 << 6);
  uint64_t v7 = *(void *)(v5 + 32);
  uint64_t v6 = v5 + 32;
  if (v7)
  {
    unsigned int v9 = *(_DWORD *)(v6 + 8);
    unsigned int v8 = *(_DWORD *)(v6 + 12);
    BOOL v10 = v8 >= v9;
    uint64_t v11 = v8 - v9;
    if (v10)
    {
      if (v11 >= a1)
      {
        sub_1001AA19C();
        return;
      }
      goto LABEL_11;
    }
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001AA794(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  int64_t v5 = v1[2];
  uint64_t v49 = sub_10024F390();
  sub_10024EAC0();
  if (v5 == v4)
  {
LABEL_33:
    uint64_t v27 = v49;
    uint64_t v28 = *(void *)(v49 + 16);
    if (v28)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = 0;
      uint64_t v30 = a1;
      do
      {
        uint64_t v31 = *(void *)(v27 + 8 * v29 + 32);
        uint64_t v32 = *(void *)(v31 + 40);
        uint64_t ObjectType = swift_getObjectType();
        unsigned int v34 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 16);
        swift_retain();
        swift_errorRetain();
        if (v34(ObjectType, v32))
        {
          uint64_t v35 = sub_1001FB400(v30, 1);
          CallbackList._run()();
          sub_10003C350(v35);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v47 = v30;
          char v48 = 1;
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = v31;
          sub_1000458B4((uint64_t)&v47, v36 + 24, qword_10030ECB8);
          uint64_t v37 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v32 + 24);
          swift_retain();
          swift_errorRetain();
          v37(sub_1000B733C, v36, ObjectType, v32);
          uint64_t v30 = a1;
          swift_release();
        }
        swift_errorRelease();
        swift_release();
        ++v29;
      }
      while (v28 != v29);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v1[5];
    uint64_t v7 = v1[6];
    int64_t v39 = v5;
    uint64_t v40 = v1;
    while (1)
    {
      if ((v2[4] & 1) == 0)
      {
        uint64_t v8 = v2[3];
        BOOL v9 = v8 < 1;
        uint64_t v10 = v8 - 1;
        char v11 = v9;
        if (v9) {
          uint64_t v10 = 0;
        }
        v2[3] = v10;
        *((unsigned char *)v2 + 32) = v11;
      }
      uint64_t v12 = v5 - v4;
      if (v5 < (uint64_t)v4) {
        v12 += *(void *)(v3 + 16);
      }
      if (v12 < 1) {
        break;
      }
      if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4)) {
        goto LABEL_49;
      }
      unint64_t v13 = *(void *)(v3 + 16);
      if (v4 >= v13) {
        goto LABEL_42;
      }
      unsigned int v14 = (void *)(v3 + (v4 << 6));
      uint64_t v15 = v14[4];
      if (!v15) {
        goto LABEL_48;
      }
      if (v5 >= (uint64_t)v4) {
        unint64_t v13 = 0;
      }
      if ((uint64_t)(v5 - v4 + v13) < 1) {
        goto LABEL_43;
      }
      uint64_t v46 = v7;
      uint64_t v16 = v6;
      uint64_t v17 = v14[5];
      uint64_t v18 = v14[7];
      uint64_t v19 = v3;
      uint64_t v20 = v14[9];
      uint64_t v21 = v14[10];
      uint64_t v42 = v14[6];
      uint64_t v43 = v14[8];
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v44 = v21;
      uint64_t v45 = v20;
      uint64_t v22 = v21;
      uint64_t v3 = v19;
      sub_10003BD08(v20, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10011FD1C();
        uint64_t v3 = v23;
      }
      if (v4 >= *(void *)(v3 + 16)) {
        goto LABEL_44;
      }
      uint64_t v24 = (uint64_t *)(v3 + (v4 << 6));
      sub_10003BC24(v24[4], v24[5], v24[6], v24[7], v24[8], v24[9], v24[10]);
      *((_OWORD *)v24 + 4) = 0u;
      *((_OWORD *)v24 + 5) = 0u;
      *((_OWORD *)v24 + 2) = 0u;
      *((_OWORD *)v24 + 3) = 0u;
      --v6;
      if (__OFSUB__(v16, 1)) {
        goto LABEL_45;
      }
      unsigned int v25 = HIDWORD(v17) - v17;
      if (HIDWORD(v17) < v17) {
        goto LABEL_46;
      }
      uint64_t v7 = v46 - v25;
      if (__OFSUB__(v46, v25)) {
        goto LABEL_47;
      }
      uint64_t v26 = *(void *)(v3 + 16);
      if (v18)
      {
        swift_retain_n();
        sub_10024EA70();
        if (*(void *)(v49 + 16) >= *(void *)(v49 + 24) >> 1) {
          sub_10024EAD0();
        }
        sub_10024EB10();
        sub_10024EAC0();
        sub_10003BC24(v15, v17, v42, v18, v43, v45, v44);
        swift_release();
        uint64_t v2 = v40;
      }
      else
      {
        sub_10003BC24(v15, v17, v42, 0, v43, v45, v44);
        uint64_t v2 = v40;
      }
      unint64_t v4 = (v26 - 1) & (v4 + 1);
      int64_t v5 = v39;
      if (v4 == v39)
      {
        v2[5] = v6;
        v2[6] = v7;
        *uint64_t v2 = v3;
        v2[1] = v39;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  return result;
}

unint64_t sub_1001AAC28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if ((a1 & 0x100000000000000) != 0)
  {
    if ((a2 & 0x100000000000000) != 0) {
      return a2 - (unint64_t)a1;
    }
    else {
      return v3 - a1 + a2;
    }
  }
  else if ((a2 & 0x100000000000000) != 0)
  {
    uint64_t v5 = a1 - (unint64_t)a2 + v3;
    unint64_t result = -v5;
    if (__OFSUB__(0, v5)) {
      __break(1u);
    }
  }
  else
  {
    return a2 - (unint64_t)a1;
  }
  return result;
}

uint64_t sub_1001AAC7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  long long v3 = *(_OWORD *)(a1 + 1);
  uint64_t v4 = a1[3];
  char v5 = *((unsigned char *)a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 5);
  long long v14 = *(_OWORD *)a1;
  long long v15 = *((_OWORD *)a1 + 1);
  char v16 = v5;
  if ((*((void *)&v14 + 1) & 0x8000000000000000) != 0 || (long long v12 = v3, v13 = v6, HIDWORD(*((void *)&v14 + 1))))
  {
    uint64_t result = sub_10024F660();
    __break(1u);
  }
  else
  {
    sub_1000458B4((uint64_t)&v15 + 8, (uint64_t)v17, &qword_10030C9F0);
    uint64_t result = sub_1000458B4((uint64_t)v17, (uint64_t)&v18, &qword_10030C9F0);
    if (v19)
    {
      uint64_t v9 = 0x200000000000000;
    }
    else
    {
      uint64_t v10 = v18;
      unsigned int v11 = sub_1001FBA50(result);
      uint64_t result = sub_1001A95B8(v11, v10, v14, *((uint64_t *)&v14 + 1), v15);
      uint64_t v9 = result & 0x1FFFFFFFFFFFFFFLL;
    }
    *(void *)a2 = v2;
    *(_OWORD *)(a2 + 8) = v12;
    *(void *)(a2 + 24) = v4;
    *(unsigned char *)(a2 + 32) = v5 & 1;
    *(_OWORD *)(a2 + 40) = v13;
    *(_DWORD *)(a2 + 56) = DWORD2(v14);
    *(_DWORD *)(a2 + 60) = 0x1FFFFFF;
    *(void *)(a2 + 64) = v9;
  }
  return result;
}

uint64_t sub_1001AAE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  sub_100030A88(0x10uLL);
  *(void *)(v10 + 104) = v16;
  *(void *)(v10 + 112) = v17;
  *(void *)(v10 + 120) = v18;
  *(void *)(v10 + 128) = 0;
  *(unsigned char *)(v10 + 136) = 1;
  *(void *)(v10 + 144) = 0;
  *(void *)(v10 + 152) = 0;
  *(_OWORD *)(v10 + 160) = xmmword_100267530;
  sub_100019524(&qword_100316FC8);
  uint64_t v19 = swift_bufferAllocate();
  sub_10000764C((unsigned char *)(v19 + 16), 1);
  *(void *)(v10 + 176) = swift_dynamicCastClassUnconditional();
  *(unsigned char *)(v10 + 184) = 1;
  *(void *)(v10 + 192) = 16;
  *(unsigned char *)(v10 + 200) = 1;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 48) = a3;
  *(void *)(v10 + 56) = a4;
  *(void *)(v10 + 64) = a5;
  *(void *)(v10 + 72) = a6;
  *(void *)(v10 + 32) = a7;
  *(void *)(v10 + 40) = a8;
  *(_OWORD *)(v10 + 80) = a9;
  *(void *)(v10 + 96) = a10;
  return v10;
}

uint64_t sub_1001AAF28()
{
  swift_beginAccess();
  long long v7 = *(_OWORD *)(v0 + 104);
  long long v8 = *(_OWORD *)(v0 + 120);
  char v9 = *(unsigned char *)(v0 + 136);
  sub_1000458B4((uint64_t)&v8 + 8, (uint64_t)v10, &qword_10030C9F0);
  uint64_t v1 = sub_1000458B4((uint64_t)v10, (uint64_t)&v11, &qword_10030C9F0);
  if (v12) {
    return 3;
  }
  uint64_t v3 = v11;
  unsigned int v4 = sub_1001FBA50(v1);
  uint64_t v5 = sub_1001A95B8(v4, v3, v7, *((uint64_t *)&v7 + 1), v8);
  uint64_t v6 = sub_1001FBA50(v5);
  return (uint64_t)sub_1001AAC28(v6 & 0x1FFFFFFFFFFFFFFLL, v5 & 0x1FFFFFFFFFFFFFFLL) > 0;
}

uint64_t sub_1001AB010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return sub_1001AB1F0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1001AB038(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  long long v6 = *(_OWORD *)(v2 + 120);
  v16[4] = *(_OWORD *)(v2 + 104);
  v16[5] = v6;
  v16[6] = *(_OWORD *)(v2 + 136);
  uint64_t v17 = *(void *)(v2 + 152);
  sub_1001AA0AC((uint64_t)v14);
  uint64_t result = sub_1000458B4((uint64_t)v14, (uint64_t)v15, &qword_10030A588);
  if (*(void *)&v15[0])
  {
    v16[0] = v15[0];
    v16[1] = v15[1];
    v16[2] = v15[2];
    uint64_t v16[3] = v15[3];
    __chkstk_darwin(result, v8);
    v13[2] = v16;
    v13[3] = a1;
    v13[4] = a2;
    uint64_t v10 = sub_1001A9400((void *(*)(uint64_t *__return_ptr, long long *, uint64_t))sub_1001AB87C, (uint64_t)v13, v9);
    if (v3)
    {
      uint64_t v12 = sub_1001AB3D4();
      swift_errorRelease();
    }
    else
    {
      uint64_t v12 = sub_1001AB224((uint64_t)v10, v11 & 1, 0, 0, 1);
    }
    sub_1001AB89C(v14);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001AB1BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1001AB1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t result = a8();
  if (v8) {
    return v10;
  }
  return result;
}

uint64_t sub_1001AB224(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_10008C918();
  if (a2)
  {
    if (a5) {
      sub_1001AA6FC(a1);
    }
    else {
      uint64_t v13 = sub_1001AA308(a1, a3);
    }
    uint64_t v10 = v13;
    uint64_t v11 = v14;
    uint64_t v12 = v15;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 2;
  }
  swift_endAccess();
  if (v5[19] < v5[20])
  {
    uint64_t v16 = v5[22];
    swift_retain();
    sub_10000764C((unsigned char *)(v16 + 16), 1);
    swift_release();
  }
  sub_1001AB314(v10, v11);
  sub_1001AB7A8(v10);
  return v12;
}

#error "1001AB3A8: call analysis failed (funcsize=48)"

uint64_t sub_1001AB3D4()
{
  swift_errorRetain();
  sub_100019524(&qword_100309768);
  if (!swift_dynamicCast()) {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  if (v9 == 65)
  {
    sub_10002F0C8();
    swift_allocError();
    uint64_t v2 = 8;
    goto LABEL_7;
  }
  if (v9 != 40)
  {
LABEL_5:
    swift_errorRelease();
    swift_willThrow();
    return swift_errorRetain();
  }
  sub_10002F0C8();
  swift_allocError();
  uint64_t v2 = 7;
LABEL_7:
  *(void *)uint64_t v1 = v2;
  *(unsigned char *)(v1 + 8) = 3;
  swift_beginAccess();
  sub_1001AA19C();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  int v8 = *(unsigned __int8 *)(v0 + 136);
  swift_endAccess();
  swift_errorRelease();
  sub_1001AB314(v5, v7);
  sub_1001AB7A8(v5);
  swift_errorRelease();
  return v8 ^ 1u;
}

uint64_t sub_1001AB548@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, unint64_t, void, void, void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = *(void *)a3;
  unint64_t v11 = *(void *)(a3 + 8);
  uint64_t v12 = *(unsigned int *)(a3 + 16);
  uint64_t v13 = *(unsigned __int16 *)(a3 + 20);
  uint64_t v14 = *(unsigned __int8 *)(a3 + 22);
  sub_10003BC9C(a3);
  uint64_t result = sub_10006E7B4(v10, v11, v12 | (v13 << 32) | (v14 << 48), a4, a5, a1, a2, (void *)a3);
  if (!v19)
  {
    *(void *)a6 = result;
    *(unsigned char *)(a6 + 8) = v16 & 1;
  }
  return result;
}

uint64_t sub_1001AB5F8()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1001AB620()
{
  sub_1001AB5F8();
  return _swift_deallocClassInstance(v0, 201, 7);
}

uint64_t type metadata accessor for PendingDatagramWritesManager()
{
  return self;
}

uint64_t initializeWithCopy for PendingDatagramWritesState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PendingDatagramWritesState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for PendingDatagramWritesState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for PendingDatagramWritesState()
{
  return &type metadata for PendingDatagramWritesState;
}

uint64_t sub_1001AB7A8(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_errorRelease();
  }
  return result;
}

double sub_1001AB7E8@<D0>(_OWORD *a1@<X8>)
{
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v1 + 24);
    BOOL v3 = v2 < 1;
    uint64_t v4 = v2 - 1;
    char v5 = v3;
    if (v3) {
      uint64_t v4 = 0;
    }
    *(void *)(v1 + 24) = v4;
    *(unsigned char *)(v1 + 32) = v5;
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  BOOL v8 = __OFSUB__(v7, v6);
  uint64_t v9 = v7 - v6;
  if (v9 < 0 != v8) {
    v9 += *(void *)(*(void *)v1 + 16);
  }
  if (v9 < 1)
  {
    double result = 0.0;
    a1[2] = 0u;
    a1[3] = 0u;
    *a1 = 0u;
    a1[1] = 0u;
  }
  else
  {
    sub_1001FA95C((uint64_t)a1);
  }
  return result;
}

uint64_t sub_1001AB83C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_1001AB87C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1001AB548(a1, a2, *(void *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, void, void, void))(v3 + 24), *(void *)(v3 + 32), a3);
}

uint64_t *sub_1001AB89C(uint64_t *a1)
{
  return a1;
}

void *sub_1001AB8D8(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1001AB934()
{
  swift_release();
  sub_10003C3F0(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t destroy for PendingDatagramWrite(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (*(unsigned char *)(a1 + 40) != 4 && (~*(void *)(a1 + 48) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for PendingDatagramWrite(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = a2 + 40;
  uint64_t v6 = *(unsigned __int8 *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6 == 4)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
    *(void *)(a1 + 56) = *(void *)(v5 + 16);
  }
  else
  {
    *(unsigned char *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    if ((~v7 & 0xF000000000000007) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v7;
      *(void *)(a1 + 56) = v8;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    }
  }
  return a1;
}

uint64_t assignWithCopy for PendingDatagramWrite(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  uint64_t v4 = (long long *)(a1 + 40);
  uint64_t v6 = (long long *)(a2 + 40);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40) == 4)
  {
    if (v5 == 4)
    {
      long long v7 = *v6;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
LABEL_14:
      *uint64_t v4 = v7;
      return a1;
    }
    *(unsigned char *)(a1 + 40) = v5;
    uint64_t v9 = *(void *)(a2 + 48);
    if ((~v9 & 0xF000000000000007) == 0)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      return a1;
    }
LABEL_10:
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_retain();
    return a1;
  }
  if (v5 != 4)
  {
    uint64_t v4 = (long long *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 48);
    *(unsigned char *)(a1 + 40) = v5;
    uint64_t v9 = *(void *)(a2 + 48);
    unint64_t v11 = v9 & 0xF000000000000007;
    if ((~v10 & 0xF000000000000007) != 0)
    {
      if (v11 != 0xF000000000000007)
      {
        *(void *)(a1 + 48) = v9;
        swift_retain();
        swift_release();
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        return a1;
      }
      sub_100090194(a1 + 48);
    }
    else if (v11 != 0xF000000000000007)
    {
      goto LABEL_10;
    }
    long long v7 = *(_OWORD *)(a2 + 48);
    goto LABEL_14;
  }
  sub_1001ABC6C(a1 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *uint64_t v4 = *v6;
  *(void *)(a1 + 56) = v8;
  return a1;
}

uint64_t sub_1001ABC6C(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_1003174F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for PendingDatagramWrite(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40) == 4) {
    goto LABEL_4;
  }
  if (v4 == 4)
  {
    sub_1001ABC6C(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    return a1;
  }
  uint64_t v5 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = v4;
  uint64_t v6 = *(void *)(a2 + 48);
  if ((~v5 & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *(void *)(a1 + 48) = v6;
      swift_release();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      return a1;
    }
    sub_100090194(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingDatagramWrite(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingDatagramWrite(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingDatagramWrite()
{
  return &type metadata for PendingDatagramWrite;
}

uint64_t sub_1001ABE7C()
{
  return v0;
}

uint64_t sub_1001ABE94(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9320;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001ABEE4(char a1)
{
  if (!a1) {
    return 0x65762D65726F7473;
  }
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  return 0xD000000000000015;
}

uint64_t sub_1001ABF54(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_100317520);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  unint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1001AC458();
  sub_10024FD40();
  char v16 = 0;
  sub_10024F940();
  if (!v2)
  {
    char v15 = 1;
    sub_10024F940();
    uint64_t v14 = *(void *)(v3 + 32);
    v13[15] = 2;
    sub_100019524(&qword_100317508);
    sub_1001AC4F0(&qword_100317528, (void (*)(void))sub_1001AC560);
    sub_10024F980();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_1001AC108@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_1003174F8);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  unint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1001AC458();
  sub_10024FD20();
  if (v2) {
    return sub_10001C2EC((uint64_t)a1);
  }
  sub_100019524(&qword_100317508);
  v14[15] = 2;
  sub_1001AC4F0(&qword_100317510, (void (*)(void))sub_1001AC4A4);
  sub_10024F870();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v5);
  uint64_t v12 = v15;
  uint64_t result = sub_10001C2EC((uint64_t)a1);
  *a2 = 3157553;
  a2[1] = 0xE300000000000000;
  a2[2] = 0x61502D6472696854;
  a2[3] = 0xEB00000000797472;
  a2[4] = v12;
  return result;
}

uint64_t sub_1001AC2D0(unsigned __int8 *a1, char *a2)
{
  return sub_1000F8B8C(*a1, *a2);
}

Swift::Int sub_1001AC2DC()
{
  return sub_1001D3968();
}

uint64_t sub_1001AC2E4(uint64_t a1)
{
  return sub_1000D0968(a1, *v1);
}

Swift::Int sub_1001AC2EC()
{
  return sub_1000D2B64();
}

uint64_t sub_1001AC2F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001ABE94(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001AC324@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001ABEE4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001AC350()
{
  return sub_1001ABEE4(*v0);
}

uint64_t sub_1001AC358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001ABEE0();
  *a1 = result;
  return result;
}

uint64_t sub_1001AC380(uint64_t a1)
{
  unint64_t v2 = sub_1001AC458();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001AC3BC(uint64_t a1)
{
  unint64_t v2 = sub_1001AC458();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1001AC3F8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001AC108(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1001AC440(void *a1)
{
  return sub_1001ABF54(a1);
}

unint64_t sub_1001AC458()
{
  unint64_t result = qword_100317500;
  if (!qword_100317500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317500);
  }
  return result;
}

unint64_t sub_1001AC4A4()
{
  unint64_t result = qword_100317518;
  if (!qword_100317518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317518);
  }
  return result;
}

uint64_t sub_1001AC4F0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(&qword_100317508);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001AC560()
{
  unint64_t result = qword_100317530;
  if (!qword_100317530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317530);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FetchSoftwareAddOnsResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AC678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSoftwareAddOnsResponse.CodingKeys()
{
  return &type metadata for FetchSoftwareAddOnsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchSoftwareAddOnsResponse()
{
  return &type metadata for FetchSoftwareAddOnsResponse;
}

unint64_t sub_1001AC6C4()
{
  unint64_t result = qword_100317538;
  if (!qword_100317538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317538);
  }
  return result;
}

unint64_t sub_1001AC714()
{
  unint64_t result = qword_100317540;
  if (!qword_100317540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317540);
  }
  return result;
}

unint64_t sub_1001AC764()
{
  unint64_t result = qword_100317548;
  if (!qword_100317548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317548);
  }
  return result;
}

uint64_t sub_1001AC7B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10024DBF0();
  sub_10001B550();
  uint64_t v4 = v3;
  __chkstk_darwin(v5, v6);
  sub_10002059C();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v11 = *(void *)(v10 + 176);
  char v12 = *(unsigned char *)(v10 + 184);
  id v13 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v13 setUnitsStyle:3];
  [v13 setAllowedUnits:4124];
  sub_100213A0C(v11, v12);
  Class isa = sub_10024DBC0().super.isa;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v15(v9, v2);
  id v16 = [v13 stringFromDateComponents:isa];

  uint64_t v47 = v15;
  uint64_t v48 = v2;
  if (v16)
  {
    uint64_t v17 = sub_10024E6B0();
    uint64_t v50 = v18;
    uint64_t v51 = v17;
  }
  else
  {

    uint64_t v50 = (void *)0xE000000000000000;
    uint64_t v51 = 0;
  }
  unint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1000F072C(v19);
  swift_bridgeObjectRelease();
  if (v20)
  {
    unint64_t v21 = *(void *)(v20 + 40);
    uint64_t v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0) {
      uint64_t v22 = *(void *)(v20 + 32) & 0xFFFFFFFFFFFFLL;
    }
    if (v22)
    {
      uint64_t v52 = *(void *)(v20 + 32);
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_11;
    }
    swift_release();
  }
  uint64_t v52 = sub_10020F734();
  unint64_t v21 = v23;
LABEL_11:
  memcpy(__dst, (const void *)(v1 + 32), sizeof(__dst));
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_10005148C();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v1 + 8);
  if (sub_100027094(v10) == 2)
  {
    uint64_t v28 = *(void *)(v27 + 176);
    char v29 = *(unsigned char *)(v27 + 184);
    id v30 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v30 setUnitsStyle:3];
    [v30 setAllowedUnits:4124];
    sub_100213A0C(v28, v29);
    Class v31 = sub_10024DBC0().super.isa;
    v47(v9, v48);
    id v32 = [v30 stringFromDateComponents:v31];

    if (v32)
    {
      uint64_t v49 = sub_10024E6B0();
      unsigned int v34 = v33;
    }
    else
    {

      uint64_t v49 = 0;
      unsigned int v34 = (void *)0xE000000000000000;
    }
    unint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v37 = sub_1000F072C(v36);
    swift_bridgeObjectRelease();
    uint64_t v38 = v24;
    int64_t v39 = v26;
    if (v37)
    {
      uint64_t v41 = *(void *)(v37 + 32);
      unint64_t v40 = *(void *)(v37 + 40);
      uint64_t v42 = HIBYTE(v40) & 0xF;
      if ((v40 & 0x2000000000000000) == 0) {
        uint64_t v42 = v41 & 0xFFFFFFFFFFFFLL;
      }
      if (v42)
      {
        swift_bridgeObjectRetain();
        swift_release();
LABEL_23:
        sub_10024F330(149);
        v44._countAndFlagsBits = 0xD00000000000001ALL;
        sub_100020658(v44, (uint64_t)"Do you want to upgrade to ");
        v60._countAndFlagsBits = v52;
        v60._object = (void *)v21;
        sub_10024E800(v60);
        swift_bridgeObjectRelease();
        sub_1001AD454();
        v61._countAndFlagsBits = v51;
        v61._object = v50;
        sub_10024E800(v61);
        swift_bridgeObjectRelease();
        v62._countAndFlagsBits = 544497952;
        v62._object = (void *)0xE400000000000000;
        sub_10024E800(v62);
        v63._countAndFlagsBits = v38;
        v63._object = v39;
        sub_10024E800(v63);
        swift_bridgeObjectRelease();
        v45._countAndFlagsBits = 0xD000000000000056;
        sub_100020658(v45, (uint64_t)"? Your upgrade will start now. You'll receive a refund for the remaining time of your ");
        v64._countAndFlagsBits = v49;
        v64._object = v34;
        sub_10024E800(v64);
        swift_bridgeObjectRelease();
        sub_1001AD474((uint64_t)" subscription to ");
        v65._countAndFlagsBits = v41;
        v65._object = (void *)v40;
        sub_10024E800(v65);
        goto LABEL_24;
      }
      swift_release();
    }
    uint64_t v41 = sub_10020F734();
    unint64_t v40 = v43;
    goto LABEL_23;
  }
  sub_10024F330(162);
  v35._countAndFlagsBits = 0xD00000000000002BLL;
  sub_100020658(v35, (uint64_t)"Do you want to modify your subscription to ");
  v54._countAndFlagsBits = v52;
  v54._object = (void *)v21;
  sub_10024E800(v54);
  swift_bridgeObjectRelease();
  sub_1001AD454();
  v55._countAndFlagsBits = v51;
  v55._object = v50;
  sub_10024E800(v55);
  swift_bridgeObjectRelease();
  v56._countAndFlagsBits = 544497952;
  v56._object = (void *)0xE400000000000000;
  sub_10024E800(v56);
  v57._countAndFlagsBits = v24;
  v57._object = v26;
  sub_10024E800(v57);
  swift_bridgeObjectRelease();
  v58._object = (void *)0x8000000100282AF0;
  v58._countAndFlagsBits = 0x1000000000000065;
  sub_10024E800(v58);
  v59._countAndFlagsBits = sub_1001ACCB0();
  sub_10024E800(v59);
LABEL_24:
  swift_bridgeObjectRelease();
  v66._countAndFlagsBits = 46;
  v66._object = (void *)0xE100000000000000;
  sub_10024E800(v66);
  return 0;
}

uint64_t sub_1001ACCB0()
{
  uint64_t v0 = sub_10024E030();
  sub_10001B550();
  uint64_t v2 = v1;
  __chkstk_darwin(v3, v4);
  sub_10002059C();
  uint64_t v7 = v6 - v5;
  sub_1000D9478(4);
  if (v8) {
    sub_10024E020();
  }
  else {
    sub_10024DF60();
  }
  if (qword_100308CE8 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_10030B088;
  Class isa = sub_10024DFB0().super.isa;
  id v11 = [v9 stringFromDate:isa];

  uint64_t v12 = sub_10024E6B0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v0);
  return v12;
}

unint64_t sub_1001ACDE8(char a1)
{
  uint64_t v3 = sub_10024DBF0();
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = *(void *)(v1 + 8);
  if (sub_100027094(*(void *)(v1 + 24)) == 2)
  {
    if ((a1 & 1) == 0) {
      return 0xD000000000000064;
    }
    uint64_t v15 = *(void *)(v11 + 176);
    char v16 = *(unsigned char *)(v11 + 184);
    id v17 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v17 setUnitsStyle:3];
    [v17 setAllowedUnits:4124];
    sub_100213A0C(v15, v16);
    Class isa = sub_10024DBC0().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
    id v19 = [v17 stringFromDateComponents:isa];

    if (v19)
    {
      uint64_t v20 = sub_10024E6B0();
      uint64_t v22 = v21;
    }
    else
    {

      uint64_t v20 = 0;
      uint64_t v22 = (void *)0xE000000000000000;
    }
    unint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1000F072C(v23);
    swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v26 = *(void *)(v24 + 32);
      unint64_t v25 = *(void *)(v24 + 40);
      uint64_t v27 = HIBYTE(v25) & 0xF;
      if ((v25 & 0x2000000000000000) == 0) {
        uint64_t v27 = v26 & 0xFFFFFFFFFFFFLL;
      }
      if (v27)
      {
        swift_bridgeObjectRetain();
        swift_release();
LABEL_15:
        sub_10024F330(106);
        v29._countAndFlagsBits = 0xD000000000000054;
        sub_100020658(v29, (uint64_t)"Your upgrade will start now. You'll receive a refund for the remaining time of your ");
        v30._countAndFlagsBits = v20;
        v30._object = v22;
        sub_10024E800(v30);
        swift_bridgeObjectRelease();
        sub_1001AD474((uint64_t)" subscription to ");
        v14._countAndFlagsBits = v26;
        v14._object = (void *)v25;
        goto LABEL_16;
      }
      swift_release();
    }
    uint64_t v26 = sub_10020F734();
    unint64_t v25 = v28;
    goto LABEL_15;
  }
  sub_10024F330(78);
  v13._countAndFlagsBits = 0xD00000000000004BLL;
  sub_100020658(v13, (uint64_t)"Your new subscription will start when your current subscription expires on ");
  v14._countAndFlagsBits = sub_1001ACCB0();
LABEL_16:
  sub_10024E800(v14);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  sub_10024E800(v31);
  return 0;
}

uint64_t destroy for SubscriptionModificationContext(id *a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SubscriptionModificationContext(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  a1[10] = *(void *)(a2 + 80);
  a1[11] = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  a1[12] = *(void *)(a2 + 96);
  a1[13] = v10;
  id v11 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionModificationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubscriptionModificationContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionModificationContext(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionModificationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionModificationContext()
{
  return &type metadata for SubscriptionModificationContext;
}

void sub_1001AD454()
{
  v1._countAndFlagsBits = 0x20726F6620;
  v1._object = (void *)0xE500000000000000;
  sub_10024E800(v1);
}

void sub_1001AD474(uint64_t a1@<X8>)
{
  v2._countAndFlagsBits = 0xD000000000000011;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_10024E800(v2);
}

void *sub_1001AD494(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = sub_10024DDC0();
  uint64_t v6 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a3 + 16);
  id v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    unint64_t v21 = _swiftEmptyArrayStorage;
    sub_100038A48();
    id v11 = v21;
    uint64_t v16 = v6 + 32;
    uint64_t v12 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v13 = *v12;
      v20[0] = *(v12 - 1);
      v20[1] = v13;
      swift_bridgeObjectRetain();
      v18(v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      unint64_t v21 = v11;
      unint64_t v14 = v11[2];
      if (v14 >= v11[3] >> 1)
      {
        sub_100038A48();
        id v11 = v21;
      }
      v12 += 2;
      v11[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v9, v17);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v11;
}

void *sub_1001AD660(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    unint64_t v14 = _swiftEmptyArrayStorage;
    sub_100039138(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    for (uint64_t i = a3 + 32; ; i += 80)
    {
      a1(v13, i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      unint64_t v14 = v6;
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1)
      {
        sub_100039138((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v6 = v14;
      }
      _OWORD v6[2] = v11 + 1;
      memcpy(&v6[10 * v11 + 4], v13, 0x50uLL);
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t (**ChannelOptions.socketOption.unsafeMutableAddressor())()
{
  return &static ChannelOptions.socketOption;
}

uint64_t (**ChannelOptions.socket.unsafeMutableAddressor())()
{
  return &static ChannelOptions.socket;
}

ASOctaneSupportXPCService::ChannelOptions::Storage __swiftcall ChannelOptions.Storage.init()()
{
  return (ASOctaneSupportXPCService::ChannelOptions::Storage)sub_100035E7C(0, 2, 0, &_swiftEmptyArrayStorage);
}

uint64_t (**ChannelOptions.tcpOption.unsafeMutableAddressor())()
{
  return &static ChannelOptions.tcpOption;
}

uint64_t ChannelOptions.Storage.append<A>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v29 = 0;
  uint64_t v9 = *v4;
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a1;
  v19[5] = &v29;
  v19[6] = a2;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1001AD660((void (*)(void *__return_ptr, uint64_t))sub_1001AE378, (uint64_t)v19, v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v4 = (uint64_t)v10;
  if ((v29 & 1) == 0)
  {
    uint64_t v27 = a3;
    uint64_t v12 = sub_1000709B8(v26);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v12, a1, a3);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v25 = AssociatedTypeWitness;
    unint64_t v14 = sub_1000709B8(v24);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v14, a2, AssociatedTypeWitness);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(void *)(v15 + 24) = a4;
    sub_10003B908(v26, v20);
    sub_10003B908(v24, v21);
    uint64_t v22 = sub_1001AE3A4;
    uint64_t v23 = v15;
    sub_10003B908(v20, __src);
    sub_10003B908(v21, &__src[2]);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1001AE3A4;
    *(void *)(v16 + 24) = v15;
    *(void *)&__src[4] = sub_10016AC88;
    *((void *)&__src[4] + 1) = v16;
    sub_100034718();
    uint64_t v17 = *(void *)(*v4 + 16);
    sub_1000349F4();
    uint64_t v18 = *v4;
    *(void *)(v18 + 16) = v17 + 1;
    uint64_t result = (uint64_t)memcpy((void *)(v18 + 80 * v17 + 32), __src, 0x50uLL);
    *uint64_t v4 = v18;
  }
  return result;
}

uint64_t ChannelOptions.Storage.applyAllChannelOptions(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1001AE3E4(a1, a3, ObjectType, a2);
}

ASOctaneSupportXPCService::ChannelOptions::Types::WriteBufferWaterMark __swiftcall ChannelOptions.Types.WriteBufferWaterMark.init(low:high:)(Swift::Int low, Swift::Int high)
{
  if (low < 1 || high < low) {
    __break(1u);
  }
  result.high = high;
  result.low = low;
  return result;
}

unint64_t ChannelOptions.Types.SocketOption.name.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t ChannelOptions.Types.SocketOption.name.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*ChannelOptions.Types.SocketOption.level.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *v1;
  return sub_1001ADA7C;
}

uint64_t sub_1001ADA7C(uint64_t result)
{
  **(_DWORD **)ASOctaneSupportXPCService::ChannelOptions::Types::WriteBufferWaterMark result = *(_DWORD *)(result + 8);
  return result;
}

_DWORD *(*ChannelOptions.Types.SocketOption.name.modify(uint64_t a1))(_DWORD *result)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_1001ADAB8;
}

_DWORD *sub_1001ADAB8(_DWORD *result)
{
  *(_DWORD *)(*(void *)result + 4) = result[2];
  return result;
}

void static ChannelOptions.socket.getter()
{
}

uint64_t sub_1001ADAE4(uint64_t a1)
{
  return (a1 << 32) | 0xFFFF;
}

void static ChannelOptions.socketOption.getter()
{
}

uint64_t sub_1001ADB08(uint64_t a1)
{
  return (a1 << 32) | 6;
}

void static ChannelOptions.tcpOption.getter()
{
}

uint64_t ChannelOptions.Storage._storage.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*sub_1001ADB5C())(uint64_t a1, uint64_t a2)
{
  sub_1001AEF88();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = v0;
  v4[4] = v3;
  v4[5] = v2;
  swift_unknownObjectRetain();
  return sub_1001AEEFC;
}

uint64_t sub_1001ADBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a2;
  uint64_t v23 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = __chkstk_darwin(AssociatedTypeWitness, v11);
  unint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  __chkstk_darwin(v12, v16);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  sub_1000318C8(a1, (uint64_t)v25);
  swift_dynamicCast();
  sub_1000318C8(v22, (uint64_t)v24);
  swift_dynamicCast();
  uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t))(v23 + 64))(v18, v14, a5, a6, ObjectType);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, a5);
  return v20;
}

uint64_t sub_1001ADDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v40 = a7;
  uint64_t v38 = a2;
  uint64_t v39 = a6;
  unsigned int v34 = a3;
  uint64_t v35 = a4;
  uint64_t v9 = sub_10024F030();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v61 = *(void *)(a5 - 8);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000318C8(a1, (uint64_t)v57);
  sub_1000318C8(a1 + 32, (uint64_t)v58);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v59 = *(void *)(a1 + 64);
  uint64_t v17 = v59;
  uint64_t v60 = v18;
  sub_10003B908(v57, v53);
  sub_10003B908(v58, v54);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v18;
  Swift::String v55 = sub_10016AC80;
  uint64_t v56 = v19;
  sub_1000318C8((uint64_t)v53, (uint64_t)v48);
  sub_1000318C8((uint64_t)v54, (uint64_t)v49);
  uint64_t v50 = sub_10016AC80;
  uint64_t v51 = v19;
  sub_10003B908(v48, v52);
  swift_retain();
  sub_10001C2EC((uint64_t)v49);
  sub_1000318C8((uint64_t)v52, (uint64_t)v48);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1000195B4((uint64_t)v13, 1, 1, a5);
    sub_10001C2EC((uint64_t)v52);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v37);
    uint64_t v24 = v40;
LABEL_6:
    sub_10003B908(v53, v48);
    sub_10003B908(v54, v49);
    Swift::String v31 = v55;
    uint64_t v32 = v56;
    uint64_t v50 = v55;
    uint64_t v51 = v56;
    sub_10003B908(v48, &v43);
    sub_10003B908(v49, v45);
    uint64_t v46 = v31;
    uint64_t v47 = v32;
    sub_10003B908(&v43, (_OWORD *)v24);
    sub_10003B908(v45, (_OWORD *)(v24 + 32));
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v31;
    *(void *)(result + 24) = v32;
    goto LABEL_7;
  }
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  sub_1000195B4((uint64_t)v13, 0, 1, a5);
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v16, v13, a5);
  uint64_t v22 = v39;
  char v23 = sub_10024E680();
  uint64_t v24 = v40;
  if ((v23 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, a5);
    sub_10001C2EC((uint64_t)v52);
    goto LABEL_6;
  }
  *uint64_t v20 = 1;
  uint64_t v44 = a5;
  uint64_t v25 = sub_1000709B8((uint64_t *)&v43);
  uint64_t v26 = v61;
  (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v25, v16, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = AssociatedTypeWitness;
  unint64_t v28 = sub_1000709B8((uint64_t *)&v41);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v28, v21, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v16, a5);
  sub_10001C2EC((uint64_t)v52);
  sub_1001AEF08((uint64_t)v53);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a5;
  *(void *)(v29 + 24) = v22;
  sub_10003B908(&v43, v48);
  sub_10003B908(&v41, v49);
  uint64_t v50 = (uint64_t (*(*)(uint64_t, uint64_t))())sub_1001AEF84;
  uint64_t v51 = v29;
  sub_10003B908(v48, (_OWORD *)v24);
  sub_10003B908(v49, (_OWORD *)(v24 + 32));
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1001AEF84;
  *(void *)(result + 24) = v29;
LABEL_7:
  *(void *)(v24 + 64) = sub_10016B5C0;
  *(void *)(v24 + 72) = result;
  return result;
}

uint64_t sub_1001AE2B0@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void)@<X1>, uint64_t (**a3)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v4 = a2(*a1, a1[1]);
  uint64_t v6 = v5;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v4;
  *(void *)(result + 24) = v6;
  *a3 = sub_1001AEEBC;
  a3[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))result;
  return result;
}

void sub_1001AE324()
{
  sub_1001AEF88();
  uint64_t ObjectType = swift_getObjectType();
  sub_1001AEB8C(v3, v2, v1, ObjectType, v0);
}

uint64_t sub_1001AE378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001ADDE8(a1, *(void *)(v2 + 32), *(unsigned char **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t (*sub_1001AE3A4())(uint64_t a1, uint64_t a2)
{
  return sub_1001ADB5C();
}

uint64_t sub_1001AE3AC()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AE3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(a4 + 8) + 80))(ObjectType);
  uint64_t v10 = v9;
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = EventLoop.makePromise<A>(of:file:line:)((uint64_t)&type metadata for ()[8], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 368, v11, (uint64_t)&type metadata for ()[8], v10);
  swift_unknownObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = 0;
  swift_bridgeObjectRetain();
  sub_1001AEB8C(v13, v12, a1, a3, a4);
  swift_release();
  return v12;
}

unint64_t sub_1001AE4DC(uint64_t a1)
{
  unint64_t result = sub_1001AE504();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE504()
{
  unint64_t result = qword_100317568;
  if (!qword_100317568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317568);
  }
  return result;
}

unint64_t sub_1001AE550(uint64_t a1)
{
  unint64_t result = sub_1001AE578();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE578()
{
  unint64_t result = qword_100317588;
  if (!qword_100317588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317588);
  }
  return result;
}

unint64_t sub_1001AE5C4(uint64_t a1)
{
  unint64_t result = sub_1001AE5EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE5EC()
{
  unint64_t result = qword_1003175A8;
  if (!qword_1003175A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003175A8);
  }
  return result;
}

unint64_t sub_1001AE638(uint64_t a1)
{
  unint64_t result = sub_1001AE660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE660()
{
  unint64_t result = qword_1003175C8;
  if (!qword_1003175C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003175C8);
  }
  return result;
}

unint64_t sub_1001AE6AC(uint64_t a1)
{
  unint64_t result = sub_1001AE6D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE6D4()
{
  unint64_t result = qword_1003175E8;
  if (!qword_1003175E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003175E8);
  }
  return result;
}

unint64_t sub_1001AE720(uint64_t a1)
{
  unint64_t result = sub_1001AE748();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE748()
{
  unint64_t result = qword_100317608;
  if (!qword_100317608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317608);
  }
  return result;
}

unint64_t sub_1001AE794(uint64_t a1)
{
  unint64_t result = sub_1001AE7BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE7BC()
{
  unint64_t result = qword_100317628;
  if (!qword_100317628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317628);
  }
  return result;
}

unint64_t sub_1001AE808(uint64_t a1)
{
  unint64_t result = sub_1001AE830();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE830()
{
  unint64_t result = qword_100317648;
  if (!qword_100317648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317648);
  }
  return result;
}

unint64_t sub_1001AE87C(uint64_t a1)
{
  unint64_t result = sub_1001AE8A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE8A4()
{
  unint64_t result = qword_100317668;
  if (!qword_100317668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317668);
  }
  return result;
}

unint64_t sub_1001AE8F0(uint64_t a1)
{
  unint64_t result = sub_1001AE918();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE918()
{
  unint64_t result = qword_100317688;
  if (!qword_100317688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317688);
  }
  return result;
}

unint64_t sub_1001AE964(uint64_t a1)
{
  unint64_t result = sub_1001AE98C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AE98C()
{
  unint64_t result = qword_1003176A8;
  if (!qword_1003176A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003176A8);
  }
  return result;
}

unint64_t sub_1001AE9D8(uint64_t a1)
{
  unint64_t result = sub_1001AEA00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AEA00()
{
  unint64_t result = qword_1003176C8;
  if (!qword_1003176C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003176C8);
  }
  return result;
}

unint64_t sub_1001AEA4C(uint64_t a1)
{
  unint64_t result = sub_1001AEA74();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AEA74()
{
  unint64_t result = qword_1003176E8;
  if (!qword_1003176E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003176E8);
  }
  return result;
}

void type metadata accessor for ChannelOptions.Types()
{
}

void type metadata accessor for ChannelOptions.Types.SocketOption()
{
}

void type metadata accessor for ChannelOptions.Types.AllocatorOption()
{
}

void type metadata accessor for ChannelOptions.Types.RecvAllocatorOption()
{
}

void type metadata accessor for ChannelOptions.Types.AutoReadOption()
{
}

void type metadata accessor for ChannelOptions.Types.WriteSpinOption()
{
}

void type metadata accessor for ChannelOptions.Types.MaxMessagesPerReadOption()
{
}

void type metadata accessor for ChannelOptions.Types.BacklogOption()
{
}

void type metadata accessor for ChannelOptions.Types.DatagramVectorReadMessageCountOption()
{
}

void type metadata accessor for ChannelOptions.Types.ExplicitCongestionNotificationsOption()
{
}

void type metadata accessor for ChannelOptions.Types.WriteBufferWaterMark()
{
}

void type metadata accessor for ChannelOptions.Types.WriteBufferWaterMarkOption()
{
}

void type metadata accessor for ChannelOptions.Types.ConnectTimeoutOption()
{
}

void type metadata accessor for ChannelOptions.Types.AllowRemoteHalfClosureOption()
{
}

void type metadata accessor for ChannelOptions.Types.ReceivePacketInfo()
{
}

void type metadata accessor for ChannelOptions()
{
}

void type metadata accessor for ChannelOptions.Storage()
{
}

void sub_1001AEB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v17)(long long *__return_ptr, long long *);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  long long v21;
  uint64_t v22;
  uint64_t v23;
  long long v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  long long v29;
  uint64_t v30;
  _OWORD v31[3];
  long long v32;
  uint64_t v33;
  long long v34;
  void (*v35)(long long *__return_ptr, long long *);
  _OWORD v36[2];
  _OWORD v37[2];

  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  unint64_t v16 = *(void *)(v14 + 16);
  if (v15 != v16)
  {
    if (v15 >= v16)
    {
      __break(1u);
      return;
    }
    sub_1001AEDD4(v14 + 80 * v15 + 32, (uint64_t)&v32);
    *(void *)(a1 + 24) = v15 + 1;
    if (v33)
    {
      sub_10003B908(&v32, &v21);
      sub_10003B908(&v34, &v24);
      uint64_t v17 = v35;
      sub_10003B908(&v21, &v29);
      sub_10003B908(&v24, v31);
      sub_10003B908(&v29, v37);
      sub_10003B908(v31, v36);
      *(void *)&uint64_t v32 = a3;
      *((void *)&v32 + 1) = a5;
      swift_retain();
      swift_unknownObjectRetain();
      v17(&v29, &v32);
      swift_unknownObjectRelease();
      ((void (*)(long long *__return_ptr, _OWORD *, _OWORD *))v29)(&v32, v37, v36);
      swift_release();
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = a1;
      v18[3] = a2;
      v18[4] = a3;
      v18[5] = a5;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_10016AA94;
      *(void *)(v19 + 24) = v18;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_1001B78FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelOption.swift", 115, 2, 378, (uint64_t)sub_100092E78, v19);
      swift_release();
      swift_release();
      sub_10002DDEC(a2);
      swift_release();
      swift_release_n();
      sub_10001C2EC((uint64_t)v36);
      sub_10001C2EC((uint64_t)v37);
      return;
    }
  }
  sub_1000B44D0(0, 0, a2, v9, v10, v11, v12, v13, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, *((uint64_t *)&v24 + 1), v25, v26, v27, v28,
    v29,
    *((uint64_t *)&v29 + 1),
    v30);
}

uint64_t sub_1001AEDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030A598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AEE3C()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001AEE84()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AEEBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10016A088(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1001AEEC4()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001AEEFC(uint64_t a1, uint64_t a2)
{
  return sub_1001ADBD0(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t sub_1001AEF08(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030A598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t _s25ASOctaneSupportXPCService14ChannelOptionsV5TypesO12SocketOptionV5level4nameAGs5Int32V_AKtcfC_0(unsigned int a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

ValueMetadata *type metadata accessor for SystemImageRoute()
{
  return &type metadata for SystemImageRoute;
}

unint64_t sub_1001AEFB8()
{
  return 0xD000000000000017;
}

void sub_1001AEFD4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_100161540(0x6D614E6567616D69, 0xE900000000000065, *(void *)(a1 + 96));
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v10 = sub_100212134();
    uint64_t v11 = sub_100161540(0x726F6C6F63, 0xE500000000000000, v10);
    if (v12) {
      char v13 = sub_1000EF2FC(v11, v12);
    }
    else {
      char v13 = 9;
    }
    uint64_t v20 = sub_100161540(0x746867696577, 0xE600000000000000, v10);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    if (!v22 || (uint64_t v2 = sub_1000EEF50(v20, v22), v2 == 4)) {
      uint64_t v2 = 0;
    }
    if (qword_100308D00 != -1) {
      swift_once();
    }
    char v23 = (os_unfair_lock_s *)*((void *)off_10030BD50 + 2);
    os_unfair_lock_lock(v23);
    uint64_t v37 = v8;
    uint64_t v38 = v9;
    uint64_t v39 = 0x4008000000000000;
    uint64_t v40 = 3;
    char v41 = v2;
    uint64_t v42 = 0x4059000000000000;
    char v43 = v13;
    swift_bridgeObjectRetain();
    id v24 = sub_1000EF4B4();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    if (v26 >> 60 == 15)
    {
      *(double *)&long long v27 = sub_1001AF310();
      long long v30 = v27;
      uint64_t v28 = 25;
    }
    else
    {
      sub_1000473AC((uint64_t)v24, v26);
      sub_1000CBAF8((uint64_t)v24, v26, 0x76732F6567616D69, 0xED00006C6D782B67, (uint64_t)&v31);
      long long v30 = v31;
      uint64_t v2 = v32;
      uint64_t v3 = v33;
      unint64_t v4 = v34 | ((unint64_t)v35 << 32) | ((unint64_t)v36 << 48);
      sub_10003F7F4((uint64_t)v24, v26);
      uint64_t v28 = 3;
    }
    ASOctaneSupportXPCService::HTTPVersion v29 = HTTPVersion.init(major:minor:)(1, 1);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = 0;
    *(void *)(v17 + 32) = v28;
    *(ASOctaneSupportXPCService::HTTPVersion *)(v17 + 40) = v29;
    os_unfair_lock_unlock(v23);
    swift_bridgeObjectRelease();
    long long v18 = v30;
  }
  else
  {
    unsigned int v14 = HTTPVersion.init(major:minor:)(1, 1);
    Swift::UInt16 v15 = v14;
    unsigned int v16 = HIWORD(v14);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v17 = swift_allocObject();
    *(double *)&long long v18 = sub_1001AF310();
    *(_OWORD *)(v19 + 16) = v18;
    *(void *)(v19 + 32) = 21;
    *(_WORD *)(v19 + 40) = v15;
    *(_WORD *)(v19 + 42) = v16;
  }
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 16) = 2;
  *(_OWORD *)(a2 + 24) = v18;
  *(void *)(a2 + 40) = v2;
  *(void *)(a2 + 48) = v3;
  *(_DWORD *)(a2 + 56) = v4;
  *(unsigned char *)(a2 + 62) = BYTE6(v4);
  *(_WORD *)(a2 + 60) = WORD2(v4);
}

unint64_t sub_1001AF2A8()
{
  return 0xD000000000000017;
}

double sub_1001AF2C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1001AEFD4(a1, (uint64_t)v5);
  long long v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  a2[2] = v6[0];
  double result = *(double *)((char *)v6 + 15);
  *(_OWORD *)((char *)a2 + 47) = *(_OWORD *)((char *)v6 + 15);
  return result;
}

double sub_1001AF310()
{
  return 0.0;
}

void *sub_1001AF324@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v46 = a3;
  uint64_t v4 = sub_100019524(&qword_10030C100);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[3];
  uint64_t v45 = a1[2];
  Swift::UInt16 v15 = (int *)type metadata accessor for PurchaseConfiguration();
  unsigned int v16 = (char *)a1 + v15[7];
  char v17 = v16[8];
  uint64_t v44 = v14;
  if (v17)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  else
  {
    *(void *)&v77[0] = *(void *)v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10024F9E0();
    uint64_t v41 = v19;
    uint64_t v42 = v18;
  }
  if (*((unsigned char *)a1 + v15[11]) == 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v20 = (uint64_t *)((char *)a1 + v15[10]);
    uint64_t v21 = *v20;
    uint64_t v39 = v20[1];
    uint64_t v40 = v21;
    swift_bridgeObjectRetain();
  }
  sub_10006B8F0(v12, v13, (uint64_t)v11);
  uint64_t v22 = sub_10024E0A0();
  int v23 = sub_10001FA0C((uint64_t)v11, 1, v22);
  uint64_t v43 = v12;
  if (v23 == 1)
  {
    sub_1000DC380((uint64_t)v11, &qword_10030C100);
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v24 = sub_10024E050();
    uint64_t v36 = v25;
    uint64_t v37 = v24;
    sub_10007A8C4();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v22);
  }
  sub_1001B2A94((uint64_t)a1 + v15[6], (uint64_t)v7);
  if (sub_10001FA0C((uint64_t)v7, 1, v22) == 1)
  {
    swift_release();
    sub_1000DC380((uint64_t)v7, &qword_10030C100);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v27 = sub_10024E050();
    uint64_t v28 = v29;
    swift_release();
    sub_10007A8C4();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v22);
  }
  uint64_t v31 = sub_10017EE78(1u);
  uint64_t v33 = v32;
  char v51 = 1;
  char v50 = 1;
  char v49 = 1;
  char v48 = 1;
  char v47 = 1;
  uint64_t v52 = 0;
  char v53 = 1;
  uint64_t v54 = 0;
  long long v55 = 0u;
  char v56 = 1;
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  char v65 = 1;
  char v66 = 1;
  uint64_t v68 = 0;
  long long v67 = 0u;
  char v69 = 1;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  char v76 = 1;
  debugOnly(_:)(&v52);
  memset(v77, 0, 64);
  *(void *)&v77[4] = v43;
  *((void *)&v77[4] + 1) = v13;
  memset(&v77[5], 0, 17);
  *(_OWORD *)((char *)&v77[6] + 8) = 0u;
  *(_OWORD *)((char *)&v77[7] + 8) = 0u;
  *((void *)&v77[8] + 1) = v45;
  *(void *)&v77[9] = v44;
  *(_OWORD *)((char *)&v77[9] + 8) = 0u;
  *(_OWORD *)((char *)&v77[10] + 8) = 0u;
  *(_OWORD *)((char *)&v77[11] + 8) = 0u;
  BYTE8(v77[12]) = 2;
  v77[13] = 0u;
  *(void *)&v77[14] = v42;
  *((void *)&v77[14] + 1) = v41;
  v77[15] = 0u;
  v77[16] = xmmword_100267E00;
  memset(&v77[17], 0, 128);
  *(void *)&v77[25] = v40;
  *((void *)&v77[25] + 1) = v39;
  memset(&v77[26], 0, 64);
  *(void *)&v77[30] = v37;
  *((void *)&v77[30] + 1) = v36;
  *(void *)&v77[31] = v27;
  *((void *)&v77[31] + 1) = v28;
  *(void *)&v77[32] = v31;
  *((void *)&v77[32] + 1) = v33;
  LOBYTE(v77[33]) = 2;
  *(_OWORD *)((char *)&v77[33] + 8) = 0u;
  BYTE8(v77[34]) = 2;
  sub_1000DBF98((uint64_t)&v52, (uint64_t)&v77[35], &qword_10030A860);
  sub_100181A8C((uint64_t)a1);
  return memcpy(v46, v77, 0x369uLL);
}

uint64_t sub_1001AF734()
{
  uint64_t v1 = sub_10024FCD0();
  sub_10001B550();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  sub_10002059C();
  uint64_t v8 = v7 - v6;
  uint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  *((void *)&v31 + 1) = &type metadata for InAppBuyRequest;
  uint64_t v29 = swift_allocObject();
  memcpy((void *)(v29 + 16), v0, 0x369uLL);
  sub_1000C0148(v0);
  sub_10024FC80();
  sub_10024FCC0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v1);
  sub_10024F5B0();
  swift_release();
  swift_retain();
  sub_10024F740();
  while (v32)
  {
    uint64_t v9 = v29;
    uint64_t v10 = v30;
    v27[0] = v29;
    v27[1] = v30;
    sub_10003B908(&v31, &v28);
    sub_1001B4668();
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      sub_10001C2EC((uint64_t)v26);
      if (qword_100308D88 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_10034C0B0;
      if (*(void *)(qword_10034C0B0 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v12 = sub_10011ED00();
        uint64_t v13 = v9;
        uint64_t v14 = v10;
        if (v15)
        {
          unsigned int v16 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v12);
          uint64_t v13 = *v16;
          uint64_t v14 = v16[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = v9;
        uint64_t v14 = v10;
      }
      if (qword_100308D40 != -1) {
        swift_once();
      }
      sub_1000D4104(v13, v14, qword_10034C078);
      if (v17)
      {
        sub_1001B4668();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          sub_1001B4648();
          sub_10024E800(v24);
          goto LABEL_32;
        }
        sub_1001B4668();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          sub_1001B4648();
          if (LOBYTE(v24._countAndFlagsBits)) {
            v18._countAndFlagsBits = 0x4C4452445453;
          }
          else {
            v18._countAndFlagsBits = 1363432531;
          }
          if (LOBYTE(v24._countAndFlagsBits)) {
            uint64_t v19 = (void *)0xE600000000000000;
          }
          else {
            uint64_t v19 = (void *)0xE400000000000000;
          }
LABEL_31:
          v18._object = v19;
          sub_10024E800(v18);
LABEL_32:
          swift_bridgeObjectRelease();
          v35._countAndFlagsBits = 38;
          v35._object = (void *)0xE100000000000000;
          sub_10024E800(v35);
          sub_10024E800(v25);
        }
        else
        {
          sub_1001B4668();
          swift_bridgeObjectRelease();
          if (swift_dynamicCast())
          {
            sub_1001B4648();
            if (LOBYTE(v24._countAndFlagsBits)) {
              v18._countAndFlagsBits = 1702195828;
            }
            else {
              v18._countAndFlagsBits = 0x65736C6166;
            }
            if (LOBYTE(v24._countAndFlagsBits)) {
              uint64_t v19 = (void *)0xE400000000000000;
            }
            else {
              uint64_t v19 = (void *)0xE500000000000000;
            }
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRelease();
        sub_1000DC380((uint64_t)v27, &qword_10030BB58);
        goto LABEL_34;
      }
      sub_1000DC380((uint64_t)v27, &qword_10030BB58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000DC380((uint64_t)v27, &qword_10030BB58);
      sub_10001C2EC((uint64_t)v26);
    }
LABEL_34:
    sub_10024F740();
  }
  swift_release_n();
  uint64_t v20 = v33;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10024E790();
  uint64_t v22 = swift_bridgeObjectRelease();
  if (v21 >= 1)
  {
    sub_1001FB29C(v22);
    swift_bridgeObjectRelease();
    return v33;
  }
  return v20;
}

void sub_1001AFBC8()
{
  sub_1000DBF98(v0 + 224, (uint64_t)v22, &qword_10030AA30);
  sub_1000DBF98((uint64_t)v22, (uint64_t)&v23, &qword_10030AA30);
  uint64_t v1 = v24;
  if (!v24) {
    return;
  }
  uint64_t v2 = v23;
  sub_1001B46B0();
  if (!v4) {
    return;
  }
  if ((v1 & 0x1000000000000000) != 0)
  {
    sub_1000562D8((uint64_t)v22);
    sub_1001A4F88(v2, v1, 10);
    sub_1001A4FA0((uint64_t)v22);
    return;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v2 & 0x1000000000000000) != 0) {
      uint64_t v5 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v5 = (unsigned __int8 *)sub_10024F3E0();
    }
    sub_1001A4F58(v5, v3);
    return;
  }
  sub_1001B4684();
  if (v8)
  {
    if (!v6) {
      goto LABEL_57;
    }
    if (v6 != 1)
    {
      sub_1001B45E0();
      if (!(!v8 & v10) && v11 != 2)
      {
        sub_1001A6038();
        if (!(!v8 & v10) && v12 != 3)
        {
          sub_1001A6074();
          do
          {
            sub_100028C7C();
            if (!v8 & v10) {
              break;
            }
            sub_1001A6024();
            if (!v8) {
              break;
            }
            if (__OFADD__(v14, v13)) {
              break;
            }
            sub_1001A6044();
          }
          while (!v8);
        }
      }
    }
  }
  else
  {
    if (v7 == 45)
    {
      if (v6)
      {
        if (v6 != 1)
        {
          sub_1001B45E0();
          if (!(!v8 & v10) && v9 != 2)
          {
            sub_1001A60F4();
            if (!(!v8 & v10) && v19 != 3)
            {
              sub_1001A6074();
              do
              {
                sub_100028C7C();
                if (!v8 & v10) {
                  break;
                }
                sub_1001A6024();
                if (!v8) {
                  break;
                }
                if (__OFSUB__(v21, v20)) {
                  break;
                }
                sub_1001A6044();
              }
              while (!v8);
            }
          }
        }
        return;
      }
      __break(1u);
LABEL_57:
      __break(1u);
      return;
    }
    if (v6)
    {
      sub_1001A6038();
      if (!(!v8 & v10) && v15 != 1)
      {
        sub_1001B45E0();
        if (!(!v8 & v10) && v16 != 2)
        {
          do
          {
            sub_100028C7C();
            if (!v8 & v10) {
              break;
            }
            sub_1001A6024();
            if (!v8) {
              break;
            }
            if (__OFADD__(v18, v17)) {
              break;
            }
            sub_1001A6044();
          }
          while (!v8);
        }
      }
    }
  }
}

void sub_1001AFE20()
{
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 224);
    sub_1001B46B0();
    if (v4)
    {
      if ((v1 & 0x1000000000000000) == 0)
      {
        if ((v1 & 0x2000000000000000) == 0)
        {
          if ((v2 & 0x1000000000000000) != 0) {
            uint64_t v5 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v5 = (unsigned __int8 *)sub_10024F3E0();
          }
          sub_1001A4F70(v5, v3);
          char v7 = v6 & 1;
LABEL_48:
          swift_bridgeObjectRetain();
          if ((v7 & 1) == 0)
          {
LABEL_49:
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_60;
        }
        sub_1001B4684();
        if (v10)
        {
          if (!v8)
          {
LABEL_63:
            __break(1u);
            return;
          }
          if (v8 == 1) {
            goto LABEL_33;
          }
          sub_1001B45E0();
          if (!v10 && v13) {
            goto LABEL_33;
          }
          unsigned int v16 = v15;
          if (v14 != 2)
          {
            sub_1001A6038();
            if (!v10 && v13) {
              goto LABEL_33;
            }
            unint64_t v19 = 10 * v16 + v18;
            if (v17 != 3)
            {
              sub_1001A6074();
              while (1)
              {
                sub_100028C7C();
                if (!v10 && v13) {
                  goto LABEL_33;
                }
                if (!is_mul_ok(v19, v20)) {
                  goto LABEL_33;
                }
                BOOL v13 = __CFADD__(10 * v19, v21);
                unint64_t v19 = 10 * v19 + v21;
                if (v13) {
                  goto LABEL_33;
                }
                char v7 = 0;
                sub_1001A6044();
                if (v10) {
                  goto LABEL_48;
                }
              }
            }
          }
        }
        else
        {
          if (v9 == 45)
          {
            if (v8)
            {
              if (v8 != 1)
              {
                sub_1001B45E0();
                if ((v10 || !v13) && !v12)
                {
                  if (v11 == 2)
                  {
                    char v7 = 0;
                    goto LABEL_48;
                  }
                  sub_1001A60F4();
                  if ((v10 || !v13) && is_mul_ok(v31, 0xAuLL))
                  {
                    unint64_t v33 = 10 * v31;
                    unint64_t v34 = v33 - v32;
                    if (v33 >= v32)
                    {
                      if (v30 == 3) {
                        goto LABEL_47;
                      }
                      sub_1001A6074();
                      while (1)
                      {
                        sub_100028C7C();
                        if (!v10 && v13) {
                          break;
                        }
                        if (!is_mul_ok(v34, v35)) {
                          break;
                        }
                        BOOL v13 = 10 * v34 >= v36;
                        unint64_t v34 = 10 * v34 - v36;
                        if (!v13) {
                          break;
                        }
                        char v7 = 0;
                        sub_1001A6044();
                        if (v10) {
                          goto LABEL_48;
                        }
                      }
                    }
                  }
                }
              }
LABEL_33:
              char v7 = 1;
              goto LABEL_48;
            }
            __break(1u);
            goto LABEL_63;
          }
          if (!v8) {
            goto LABEL_33;
          }
          sub_1001A6038();
          if (!v10 && v13) {
            goto LABEL_33;
          }
          unsigned int v24 = v23;
          if (v22 != 1)
          {
            sub_1001B45E0();
            if (!v10 && v13) {
              goto LABEL_33;
            }
            unint64_t v27 = 10 * v24 + v26;
            if (v25 != 2)
            {
              while (1)
              {
                sub_100028C7C();
                if (!v10 && v13) {
                  goto LABEL_33;
                }
                if (!is_mul_ok(v27, v28)) {
                  goto LABEL_33;
                }
                BOOL v13 = __CFADD__(10 * v27, v29);
                unint64_t v27 = 10 * v27 + v29;
                if (v13) {
                  goto LABEL_33;
                }
                char v7 = 0;
                sub_1001A6044();
                if (v10) {
                  goto LABEL_48;
                }
              }
            }
          }
        }
LABEL_47:
        char v7 = 0;
        goto LABEL_48;
      }
      swift_bridgeObjectRetain_n();
      sub_1001A4FCC(v2, v1, 10);
      char v38 = v37;
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0) {
        goto LABEL_49;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
LABEL_60:
    sub_1001A3CE4(v2, v1);
  }
}

uint64_t sub_1001B00D8(char a1)
{
  if (a1) {
    return 0x4C4452445453;
  }
  else {
    return 1363432531;
  }
}

uint64_t sub_1001B0104(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9388;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001B0158(char *a1, char *a2)
{
  return sub_1000FAA9C(*a1, *a2);
}

Swift::Int sub_1001B0164()
{
  return sub_1001D3974();
}

uint64_t sub_1001B016C()
{
  return sub_1000D1B30();
}

Swift::Int sub_1001B0174()
{
  return sub_1000D3460();
}

uint64_t sub_1001B017C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001B0104(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001B01AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001B00D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001B01D8()
{
  return sub_10024EA50();
}

uint64_t sub_1001B0238()
{
  return sub_10024EA00();
}

uint64_t sub_1001B0288()
{
  uint64_t result = sub_10024E510();
  qword_10034C0B0 = result;
  return result;
}

uint64_t sub_1001B02C4()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

uint64_t sub_1001B031C()
{
  return 37;
}

unint64_t sub_1001B0324(char a1)
{
  unint64_t result = 1935959649;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x756F636341707061;
      break;
    case 2:
      unint64_t result = 0x496D616441707061;
      break;
    case 3:
      unint64_t result = 0x64697344707061;
      break;
    case 4:
      unint64_t result = 0x7256747845707061;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 6580578;
      break;
    case 7:
      unint64_t result = 1936881250;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000020;
      break;
    case 10:
    case 24:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 1684632935;
      break;
    case 12:
      unint64_t result = 0x6E4F707041534F69;
      break;
    case 13:
      unint64_t result = 0x636E7973626BLL;
      break;
    case 14:
      unint64_t result = 0x6D614E726566666FLL;
      break;
    case 15:
      unint64_t result = 0x646F43726566666FLL;
      break;
    case 16:
      unint64_t result = 0x66664F636F486461;
      break;
    case 17:
      unint64_t result = 0x79654B636F486461;
      break;
    case 18:
      unint64_t result = 0x6E6F4E636F486461;
      break;
    case 19:
      unint64_t result = 0x676953636F486461;
      break;
    case 20:
      unint64_t result = 0x6D6954636F486461;
      break;
    case 21:
      unint64_t result = 0xD000000000000013;
      break;
    case 22:
      unint64_t result = 26480;
      break;
    case 23:
      unint64_t result = 0x6563697270;
      break;
    case 25:
      unint64_t result = 0x54746375646F7270;
      break;
    case 26:
      unint64_t result = 0x797469746E617571;
      break;
    case 27:
      unint64_t result = 0x7975626572;
      break;
    case 28:
      unint64_t result = 0x41656C62616C6173;
      break;
    case 29:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 30:
      unint64_t result = 0xD000000000000012;
      break;
    case 31:
      unint64_t result = 0xD000000000000014;
      break;
    case 32:
      unint64_t result = 0x686F4365726F7473;
      break;
    case 33:
      unint64_t result = 0xD000000000000015;
      break;
    case 34:
      unint64_t result = 0x704F626557736168;
      break;
    case 35:
      unint64_t result = 1682534515;
      break;
    case 36:
      unint64_t result = 6580598;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B0794(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_100317710);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10002059C();
  uint64_t v12 = v11 - v10;
  sub_10001C2A8(a1, a1[3]);
  sub_1001B2750();
  sub_10024FD40();
  sub_10024F8D0();
  if (!v2)
  {
    sub_1001B4550(1);
    sub_1001B4550(2);
    sub_1001B4550(3);
    sub_1001B4550(4);
    sub_1001B4550(5);
    sub_10024F940();
    sub_1001B4550(7);
    sub_1001B4550(8);
    sub_1000DBF98(v3 + 528, (uint64_t)&v17, &qword_10030ED60);
    sub_1001B46C4((uint64_t)&v17);
    sub_1001B2834();
    sub_1001B45F4();
    sub_1000DBF98(v3 + 96, (uint64_t)&v16, &qword_10030ED60);
    sub_1001B46C4((uint64_t)&v16);
    sub_1001B45F4();
    sub_1001B4550(11);
    sub_1001B4550(12);
    sub_1001B4550(13);
    sub_1001B4550(14);
    sub_1001B4550(15);
    sub_1001B4550(16);
    sub_1001B4550(17);
    sub_1001B4550(18);
    sub_1001B4550(19);
    sub_1001B4550(20);
    sub_1001B4550(21);
    sub_1001B4550(22);
    sub_1001B4550(23);
    sub_1000DBF98(v3 + 200, (uint64_t)&v15, &qword_100317720);
    sub_1001B46C4((uint64_t)&v15);
    sub_1001B2880();
    sub_10024F910();
    sub_1001B4550(25);
    sub_1001B4550(26);
    sub_1001B4550(27);
    sub_1001B4550(28);
    sub_1001B4550(29);
    sub_1001B4550(30);
    sub_1001B4550(31);
    sub_1001B4550(32);
    sub_1000DBF98(v3 + 552, (uint64_t)&v14, &qword_10030ED60);
    sub_1001B46C4((uint64_t)&v14);
    sub_1001B45F4();
    sub_1001B4550(34);
    sub_1001B4550(35);
    sub_1001B4550(36);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v12, v5);
}

uint64_t *sub_1001B0C4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v121 = sub_100019524(&qword_1003176F0);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = v10 - v9;
  memset(v126, 0, 64);
  v126[5] = 0u;
  LOBYTE(v126[6]) = 2;
  *(_OWORD *)((char *)&v126[6] + 8) = 0u;
  *(_OWORD *)((char *)&v126[7] + 8) = 0u;
  *(_OWORD *)((char *)&v126[8] + 8) = 0u;
  *(_OWORD *)((char *)&v126[9] + 8) = 0u;
  *(_OWORD *)((char *)&v126[10] + 8) = 0u;
  *(_OWORD *)((char *)&v126[11] + 8) = 0u;
  BYTE8(v126[12]) = 2;
  bzero(&v126[13], 0x90uLL);
  memset(&v126[25], 0, 128);
  LOBYTE(v126[33]) = 2;
  *(_OWORD *)((char *)&v126[33] + 8) = 0u;
  BYTE8(v126[34]) = 2;
  sub_10016C624(v127);
  v128 = &v126[35];
  sub_1000DBF98((uint64_t)v127, (uint64_t)&v126[35], &qword_10030A860);
  uint64_t v122 = (uint64_t)a1;
  sub_10001C2A8(a1, a1[3]);
  sub_1001B2750();
  sub_10024FD20();
  if (v2)
  {
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000DBF98((uint64_t)v128, (uint64_t)v124, &qword_10030A860);
    return sub_1000C12F4(v124);
  }
  else
  {
    v120 = a2;
    uint64_t v12 = sub_1001B45B0();
    uint64_t v14 = v13;
    *(void *)&v126[0] = v12;
    *((void *)&v126[0] + 1) = v13;
    sub_1001B4698(1);
    uint64_t v15 = sub_1001B45B0();
    uint64_t v17 = v16;
    uint64_t v119 = v12;
    *(void *)&v126[31] = v15;
    *((void *)&v126[31] + 1) = v16;
    uint64_t v18 = v15;
    swift_bridgeObjectRetain();
    uint64_t v117 = v18;
    uint64_t v118 = v14;
    *(void *)&v126[1] = sub_1001B45B0();
    *((void *)&v126[1] + 1) = v19;
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    uint64_t v115 = v20;
    *(void *)&v126[2] = sub_1001B45B0();
    *((void *)&v126[2] + 1) = v21;
    uint64_t v116 = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1001B45B0();
    uint64_t v114 = v23;
    *(void *)&v126[3] = v22;
    *((void *)&v126[3] + 1) = v23;
    sub_1001B4698(5);
    uint64_t v24 = sub_1001B45B0();
    uint64_t v112 = v22;
    uint64_t v113 = v25;
    *(void *)&v126[21] = v24;
    *((void *)&v126[21] + 1) = v25;
    uint64_t v26 = v24;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10024F830();
    uint64_t v110 = v26;
    uint64_t v111 = v28;
    uint64_t v29 = v27;
    *(void *)&v126[4] = v27;
    *((void *)&v126[4] + 1) = v28;
    sub_1001B4698(7);
    uint64_t v108 = sub_1001B45B0();
    uint64_t v109 = v30;
    *(void *)&v126[5] = v108;
    *((void *)&v126[5] + 1) = v30;
    sub_1001B4698(8);
    uint64_t v31 = sub_1001B45B0();
    *(void *)&v126[30] = v31;
    *((void *)&v126[30] + 1) = v32;
    uint64_t v33 = v32;
    sub_1001B279C();
    uint64_t v107 = v33;
    swift_bridgeObjectRetain();
    sub_10024F800();
    LOBYTE(v126[33]) = 6;
    sub_1001B461C();
    LOBYTE(v126[6]) = 6;
    uint64_t v105 = sub_1001B4590();
    uint64_t v106 = v34;
    *(void *)&v126[22] = v105;
    *((void *)&v126[22] + 1) = v34;
    swift_bridgeObjectRetain();
    uint64_t v103 = sub_1001B4590();
    uint64_t v104 = v35;
    *(void *)&v126[23] = v103;
    *((void *)&v126[23] + 1) = v35;
    swift_bridgeObjectRetain();
    uint64_t v101 = sub_1001B4590();
    uint64_t v102 = v36;
    *((void *)&v126[7] + 1) = v101;
    *(void *)&v126[8] = v36;
    swift_bridgeObjectRetain();
    uint64_t v99 = sub_1001B4590();
    uint64_t v100 = v37;
    *((void *)&v126[8] + 1) = v99;
    *(void *)&v126[9] = v37;
    swift_bridgeObjectRetain();
    uint64_t v97 = sub_1001B4590();
    uint64_t v98 = v38;
    *(void *)&v126[32] = v97;
    *((void *)&v126[32] + 1) = v38;
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_1001B4590();
    uint64_t v96 = v39;
    *(void *)&v126[25] = v95;
    *((void *)&v126[25] + 1) = v39;
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1001B4590();
    uint64_t v94 = v40;
    *(void *)&v126[26] = v93;
    *((void *)&v126[26] + 1) = v40;
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_1001B4590();
    uint64_t v92 = v41;
    *(void *)&v126[27] = v91;
    *((void *)&v126[27] + 1) = v41;
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_1001B4590();
    uint64_t v90 = v42;
    *(void *)&v126[28] = v89;
    *((void *)&v126[28] + 1) = v42;
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_1001B4590();
    uint64_t v88 = v43;
    *(void *)&v126[29] = v87;
    *((void *)&v126[29] + 1) = v43;
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_1001B4590();
    uint64_t v86 = v44;
    *((void *)&v126[9] + 1) = v85;
    *(void *)&v126[10] = v44;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1001B4590();
    uint64_t v84 = v45;
    *((void *)&v126[10] + 1) = v83;
    *(void *)&v126[11] = v45;
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_1001B4590();
    uint64_t v82 = v46;
    *((void *)&v126[11] + 1) = v81;
    *(void *)&v126[12] = v46;
    sub_1001B27E8();
    swift_bridgeObjectRetain();
    sub_10024F800();
    BYTE8(v126[12]) = 23;
    uint64_t v79 = sub_1001B4590();
    uint64_t v80 = v47;
    *(void *)&v126[13] = v79;
    *((void *)&v126[13] + 1) = v47;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1001B4590();
    uint64_t v78 = v48;
    *(void *)&v126[14] = v77;
    *((void *)&v126[14] + 1) = v48;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1001B4590();
    uint64_t v76 = v49;
    *(void *)&v126[16] = v75;
    *((void *)&v126[16] + 1) = v49;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1001B4590();
    uint64_t v74 = v50;
    *(void *)&v126[17] = v73;
    *((void *)&v126[17] + 1) = v50;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1001B4590();
    uint64_t v72 = v51;
    *(void *)&v126[18] = v71;
    *((void *)&v126[18] + 1) = v51;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1001B4590();
    uint64_t v70 = v52;
    *(void *)&v126[19] = v69;
    *((void *)&v126[19] + 1) = v52;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1001B4590();
    uint64_t v68 = v53;
    *(void *)&v126[20] = v67;
    *((void *)&v126[20] + 1) = v53;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1001B4590();
    uint64_t v66 = v54;
    *(void *)&v126[15] = v65;
    *((void *)&v126[15] + 1) = v54;
    LOBYTE(v123[0]) = 33;
    swift_bridgeObjectRetain();
    sub_1001B461C();
    BYTE8(v126[34]) = 32;
    uint64_t v64 = sub_1001B4590();
    uint64_t v56 = v55;
    *((void *)&v126[6] + 1) = v64;
    *(void *)&v126[7] = v55;
    LOBYTE(v124[0]) = 35;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1001B4590();
    uint64_t v63 = v57;
    *((void *)&v126[33] + 1) = v62;
    *(void *)&v126[34] = v57;
    char v125 = 36;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1001B45B0();
    uint64_t v59 = v58;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v121);
    v123[0] = v119;
    v123[2] = *(void *)&v126[1];
    v123[4] = *(void *)&v126[2];
    v123[6] = v112;
    v123[8] = v29;
    v123[10] = v108;
    v123[11] = v109;
    *(void *)&v126[24] = v61;
    *((void *)&v126[24] + 1) = v59;
    v123[1] = v118;
    v123[3] = v115;
    v123[5] = v116;
    v123[7] = v114;
    v123[9] = v111;
    LOBYTE(v123[12]) = 6;
    v123[13] = v64;
    v123[14] = v56;
    v123[15] = v101;
    v123[16] = v102;
    v123[17] = v99;
    v123[18] = v100;
    v123[19] = v85;
    v123[20] = v86;
    v123[21] = v83;
    v123[22] = v84;
    v123[23] = v81;
    v123[24] = v82;
    LOBYTE(v123[25]) = 23;
    v123[26] = v79;
    v123[27] = v80;
    v123[28] = v77;
    v123[29] = v78;
    v123[30] = v65;
    v123[31] = v66;
    v123[32] = v75;
    v123[33] = v76;
    v123[34] = v73;
    v123[35] = v74;
    v123[36] = v71;
    v123[37] = v72;
    v123[38] = v69;
    v123[39] = v70;
    v123[40] = v67;
    v123[41] = v68;
    v123[42] = v110;
    v123[43] = v113;
    v123[44] = v105;
    v123[45] = v106;
    v123[46] = v103;
    v123[47] = v104;
    v123[48] = v61;
    v123[49] = v59;
    v123[50] = v95;
    v123[51] = v96;
    v123[52] = v93;
    v123[53] = v94;
    v123[54] = v91;
    v123[55] = v92;
    v123[56] = v89;
    v123[57] = v90;
    v123[58] = v87;
    v123[59] = v88;
    v123[60] = v31;
    v123[61] = v107;
    v123[62] = v117;
    v123[63] = v17;
    v123[64] = v97;
    v123[65] = v98;
    LOBYTE(v123[66]) = 6;
    v123[67] = v62;
    v123[68] = v63;
    LOBYTE(v123[69]) = 32;
    sub_1000DBF98((uint64_t)v127, (uint64_t)&v123[70], &qword_10030A860);
    swift_bridgeObjectRetain();
    sub_1000C0148(v123);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001C2EC(v122);
    memcpy(v124, v126, 0x369uLL);
    sub_1000C0BBC(v124);
    return (uint64_t *)memcpy(v120, v123, 0x369uLL);
  }
}

uint64_t sub_1001B2558(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FAEBC(*a1, *a2);
}

Swift::Int sub_1001B2564()
{
  return sub_1001D3980(*v0);
}

uint64_t sub_1001B256C(uint64_t a1)
{
  return sub_1000D1DE0(a1, *v1);
}

Swift::Int sub_1001B2574(uint64_t a1)
{
  return sub_1000D3690(a1, *v1);
}

uint64_t sub_1001B257C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001B02C4();
  *a1 = result;
  return result;
}

unint64_t sub_1001B25AC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001B0324(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001B25D8()
{
  return sub_1001B0790(*v0);
}

uint64_t sub_1001B25E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001B0318();
  *a1 = result;
  return result;
}

uint64_t sub_1001B2608@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001B031C();
  *a1 = result;
  return result;
}

uint64_t sub_1001B2630(uint64_t a1)
{
  unint64_t v2 = sub_1001B2750();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001B266C(uint64_t a1)
{
  unint64_t v2 = sub_1001B2750();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t *sub_1001B26A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1001B0C4C(a1, v5);
  if (!v2) {
    return (uint64_t *)memcpy(a2, v5, 0x369uLL);
  }
  return result;
}

uint64_t sub_1001B26FC(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1001B0794(a1);
}

unint64_t sub_1001B2750()
{
  unint64_t result = qword_1003176F8;
  if (!qword_1003176F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003176F8);
  }
  return result;
}

unint64_t sub_1001B279C()
{
  unint64_t result = qword_100317700;
  if (!qword_100317700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317700);
  }
  return result;
}

unint64_t sub_1001B27E8()
{
  unint64_t result = qword_100317708;
  if (!qword_100317708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317708);
  }
  return result;
}

unint64_t sub_1001B2834()
{
  unint64_t result = qword_100317718;
  if (!qword_100317718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317718);
  }
  return result;
}

unint64_t sub_1001B2880()
{
  unint64_t result = qword_100317728;
  if (!qword_100317728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317728);
  }
  return result;
}

uint64_t sub_1001B28CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 600) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, 889, 7);
}

uint64_t sub_1001B2A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030C100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for PricingParameters(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B2BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PricingParameters()
{
  return &type metadata for PricingParameters;
}

uint64_t getEnumTagSinglePayload for InAppBuyRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDC)
  {
    if (a2 + 36 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 36) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 37;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v5 = v6 - 37;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for InAppBuyRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    *unint64_t result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B2D54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 36;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppBuyRequest.CodingKeys()
{
  return &type metadata for InAppBuyRequest.CodingKeys;
}

uint64_t destroy for InAppBuyRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 584);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InAppBuyRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v39 = *(void *)(a2 + 176);
  uint64_t v40 = v12;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v38 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v37 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v14 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  uint64_t v26 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  uint64_t v15 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  uint64_t v27 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  uint64_t v17 = *(void *)(a2 + 304);
  uint64_t v16 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = v17;
  uint64_t v28 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  uint64_t v18 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  uint64_t v29 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v19 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  uint64_t v30 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  uint64_t v20 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  uint64_t v21 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  uint64_t v22 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  uint64_t v31 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v32 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  uint64_t v33 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  uint64_t v23 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  uint64_t v24 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v24;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 112) = v9;
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 144) = v11;
  *(void *)(a1 + 160) = v40;
  *(void *)(a1 + 176) = v39;
  *(void *)(a1 + 192) = v13;
  *(void *)(a1 + 216) = v38;
  *(void *)(a1 + 232) = v37;
  *(void *)(a1 + 248) = v14;
  *(void *)(a1 + 264) = v26;
  *(void *)(a1 + 280) = v15;
  *(void *)(a1 + 296) = v27;
  *(void *)(a1 + 312) = v16;
  *(void *)(a1 + 328) = v28;
  *(void *)(a1 + 344) = v18;
  *(void *)(a1 + 360) = v29;
  *(void *)(a1 + 376) = v19;
  *(void *)(a1 + 392) = v30;
  *(void *)(a1 + 408) = v20;
  *(void *)(a1 + 424) = v21;
  *(void *)(a1 + 440) = v22;
  *(void *)(a1 + 456) = v31;
  *(void *)(a1 + 472) = v32;
  *(void *)(a1 + 488) = v33;
  *(void *)(a1 + 504) = v23;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  uint64_t v35 = (void *)(a2 + 560);
  uint64_t v36 = (void *)(a1 + 560);
  uint64_t v34 = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34 == 1)
  {
    memcpy(v36, v35, 0x139uLL);
  }
  else
  {
    *uint64_t v36 = *v35;
    *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = v34;
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(void *)(a1 + 640) = *(void *)(a2 + 640);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(void *)(a1 + 656) = *(void *)(a2 + 656);
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(_WORD *)(a1 + 736) = *(_WORD *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *(void *)(a1 + 792) = *(void *)(a2 + 792);
    *(void *)(a1 + 800) = *(void *)(a2 + 800);
    *(void *)(a1 + 808) = *(void *)(a2 + 808);
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    *(void *)(a1 + 824) = *(void *)(a2 + 824);
    *(void *)(a1 + 832) = *(void *)(a2 + 832);
    *(void *)(a1 + 840) = *(void *)(a2 + 840);
    *(void *)(a1 + 848) = *(void *)(a2 + 848);
    *(void *)(a1 + 856) = *(void *)(a2 + 856);
    *(void *)(a1 + 864) = *(void *)(a2 + 864);
    *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for InAppBuyRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  uint64_t v4 = (void *)(a1 + 560);
  uint64_t v5 = (uint64_t *)(a2 + 560);
  uint64_t v6 = *(void *)(a2 + 584);
  if (*(void *)(a1 + 584) != 1)
  {
    if (v6 != 1)
    {
      uint64_t v10 = *v5;
      *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
      *uint64_t v4 = v10;
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 592);
      *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
      *(void *)(a1 + 592) = v11;
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      *(void *)(a1 + 624) = *(void *)(a2 + 624);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
      *(unsigned char *)(a1 + 737) = *(unsigned char *)(a2 + 737);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 760);
      *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
      *(void *)(a1 + 760) = v12;
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 856) = *(void *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
      return a1;
    }
    sub_1000468B4(a1 + 560);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 560), (const void *)(a2 + 560), 0x139uLL);
    return a1;
  }
  uint64_t v7 = *v5;
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *uint64_t v4 = v7;
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  uint64_t v8 = *(void *)(a2 + 592);
  *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
  *(void *)(a1 + 592) = v8;
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
  *(unsigned char *)(a1 + 737) = *(unsigned char *)(a2 + 737);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  uint64_t v9 = *(void *)(a2 + 760);
  *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
  *(void *)(a1 + 760) = v9;
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *initializeWithTake for InAppBuyRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x369uLL);
}

uint64_t assignWithTake for InAppBuyRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v34;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  if (*(void *)(a1 + 584) != 1)
  {
    uint64_t v35 = *(void *)(a2 + 584);
    if (v35 != 1)
    {
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = v35;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      *(void *)(a1 + 624) = *(void *)(a2 + 624);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 736) = *(_WORD *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 856) = *(void *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
      return a1;
    }
    sub_1000468B4(a1 + 560);
  }
  memcpy((void *)(a1 + 560), (const void *)(a2 + 560), 0x139uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for InAppBuyRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 873))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 72);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InAppBuyRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 872) = 0;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 873) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 873) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppBuyRequest()
{
  return &type metadata for InAppBuyRequest;
}

unint64_t sub_1001B43C8()
{
  unint64_t result = qword_100317730;
  if (!qword_100317730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317730);
  }
  return result;
}

unint64_t sub_1001B4418()
{
  unint64_t result = qword_100317738;
  if (!qword_100317738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317738);
  }
  return result;
}

unint64_t sub_1001B4468()
{
  unint64_t result = qword_100317740;
  if (!qword_100317740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317740);
  }
  return result;
}

unint64_t sub_1001B44B8()
{
  unint64_t result = qword_100317748;
  if (!qword_100317748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317748);
  }
  return result;
}

unint64_t sub_1001B4504()
{
  unint64_t result = qword_100317750;
  if (!qword_100317750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317750);
  }
  return result;
}

uint64_t sub_1001B4550@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 69) = a1;
  return sub_10024F8D0();
}

uint64_t sub_1001B4574()
{
  return v0;
}

uint64_t sub_1001B4590()
{
  return sub_10024F7C0();
}

uint64_t sub_1001B45B0()
{
  return sub_10024F7C0();
}

uint64_t sub_1001B45C8()
{
  return v0;
}

uint64_t sub_1001B45F4()
{
  return sub_10024F910();
}

uint64_t sub_1001B461C()
{
  return sub_10024F800();
}

void sub_1001B4648()
{
  *(void *)(v2 - 248) = v1;
  *(void *)(v2 - 240) = v0;
  v4._countAndFlagsBits = 61;
  v4._object = (void *)0xE100000000000000;
  sub_10024E800(v4);
}

uint64_t sub_1001B4668()
{
  *(void *)(v4 - 248) = v2;
  *(void *)(v4 - 240) = v3;
  return sub_1000318C8(v0, v1);
}

uint64_t sub_1001B4698@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 1424) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001B46C4(uint64_t a1)
{
  return sub_1000DBF98(a1, v2 - 69, v1);
}

BOOL sub_1001B46DC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9770;
  v6._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_1001B4724()
{
  return 0x676F6C616964;
}

uint64_t sub_1001B4738(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D97A8;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

unint64_t sub_1001B4784(char a1)
{
  unint64_t result = 0xD000000000000041;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000030;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD000000000000036;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1001B4874@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1001B46DC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1001B48AC(void *a1@<X8>)
{
  *a1 = 0x676F6C616964;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1001B48C4()
{
  return sub_10024EA50();
}

uint64_t sub_1001B4924()
{
  return sub_10024EA00();
}

uint64_t sub_1001B4974(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000F8904(*a1, *a2);
}

Swift::Int sub_1001B4980()
{
  return sub_1001D39A8(*v0);
}

uint64_t sub_1001B4988(uint64_t a1)
{
  return sub_1000D07C0(a1, *v1);
}

Swift::Int sub_1001B4990(uint64_t a1)
{
  return sub_1000D2AC0(a1, *v1);
}

uint64_t sub_1001B4998@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001B4738(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001B49C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001B4784(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001B49F4()
{
  return sub_10024EA50();
}

uint64_t sub_1001B4A54()
{
  return sub_10024EA00();
}

uint64_t sub_1001B4AA4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9888;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001B4AF4(char a1)
{
  uint64_t result = 0x6449676F6C616964;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x497463656A627573;
      break;
    case 4:
      uint64_t result = 0x707954746E657665;
      break;
    case 5:
      uint64_t result = 0x72556E6F69746361;
      break;
    case 6:
      uint64_t result = 0x54746E657645746DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B4BF8(char a1)
{
  uint64_t result = 0x6449676F6C616964;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x497463656A627573;
      break;
    case 4:
      uint64_t result = 0x707954746E657665;
      break;
    case 5:
      uint64_t result = 0x72556E6F69746361;
      break;
    case 6:
      uint64_t result = 0x54746E657645746DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001B4CFC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100019524(&qword_100317778);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1001B5528();
  sub_10024FD40();
  sub_1000458B4(v3, (uint64_t)&v17, &qword_100317780);
  sub_1000458B4((uint64_t)&v17, (uint64_t)v13, &qword_100317780);
  char v14 = 0;
  sub_1001B560C();
  sub_1001B5EF8();
  if (!v2)
  {
    sub_1001B5EB4(1);
    sub_1000458B4(v3 + 24, (uint64_t)v16, &qword_10030AA38);
    sub_1000458B4((uint64_t)v16, (uint64_t)v13, &qword_10030AA38);
    char v14 = 2;
    sub_100019524(&qword_100309410);
    sub_10001FC58((unint64_t *)&qword_100309418);
    sub_10024F910();
    sub_1001B5EB4(3);
    sub_1000458B4(v3 + 48, (uint64_t)&v15, &qword_100317790);
    sub_1000458B4((uint64_t)&v15, (uint64_t)v13, &qword_100317790);
    char v14 = 4;
    sub_1001B5658();
    sub_1001B5EF8();
    sub_1001B5EB4(5);
    sub_1001B5EB4(6);
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_1001B4F5C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_100317758);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1001B5528();
  sub_10024FD20();
  if (v2)
  {
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v39 = 0;
    sub_1001B5574();
    sub_1001B5F34();
    sub_10024F800();
    int v12 = v37;
    LOBYTE(v37) = 1;
    uint64_t v13 = sub_1001B5ED8();
    uint64_t v15 = v14;
    uint64_t v36 = v13;
    sub_100019524(&qword_100309410);
    char v39 = 2;
    sub_10001FC58(&qword_100309438);
    swift_bridgeObjectRetain();
    sub_10024F800();
    int v38 = v12;
    uint64_t v35 = a2;
    uint64_t v16 = v37;
    LOBYTE(v37) = 3;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1001B5ED8();
    uint64_t v19 = v18;
    uint64_t v34 = v17;
    char v39 = 4;
    sub_1001B55C0();
    swift_bridgeObjectRetain();
    sub_1001B5F34();
    sub_10024F800();
    uint64_t v33 = v7;
    int v32 = v37;
    LOBYTE(v37) = 5;
    uint64_t v20 = sub_1001B5ED8();
    uint64_t v22 = v21;
    uint64_t v31 = v20;
    LOBYTE(v37) = 6;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1001B5ED8();
    uint64_t v25 = v24;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v33 = v23;
    v26(v11, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v35;
    *uint64_t v35 = v38;
    *((void *)v28 + 1) = v36;
    *((void *)v28 + 2) = v15;
    uint64_t v29 = v34;
    *((void *)v28 + 3) = v16;
    *((void *)v28 + 4) = v29;
    *((void *)v28 + 5) = v19;
    v28[48] = v32;
    *((void *)v28 + 7) = v31;
    *((void *)v28 + 8) = v22;
    *((void *)v28 + 9) = v33;
    *((void *)v28 + 10) = v25;
  }
  return result;
}

uint64_t sub_1001B5360(unsigned __int8 *a1, char *a2)
{
  return sub_1000F891C(*a1, *a2);
}

Swift::Int sub_1001B536C()
{
  return sub_1001D39C0(*v0);
}

uint64_t sub_1001B5374(uint64_t a1)
{
  return sub_1000D07D8(a1, *v1);
}

Swift::Int sub_1001B537C(uint64_t a1)
{
  return sub_1000D2AD8(a1, *v1);
}

uint64_t sub_1001B5384@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001B4AA4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001B53B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001B4AF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001B53E0()
{
  return sub_1001B4BF8(*v0);
}

uint64_t sub_1001B53E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001B4AF0();
  *a1 = result;
  return result;
}

uint64_t sub_1001B5410(uint64_t a1)
{
  unint64_t v2 = sub_1001B5528();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001B544C(uint64_t a1)
{
  unint64_t v2 = sub_1001B5528();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1001B5488@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1001B4F5C(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x58uLL);
  }
  return result;
}

uint64_t sub_1001B54D4(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1001B4CFC(a1);
}

unint64_t sub_1001B5528()
{
  unint64_t result = qword_100317760;
  if (!qword_100317760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317760);
  }
  return result;
}

unint64_t sub_1001B5574()
{
  unint64_t result = qword_100317768;
  if (!qword_100317768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317768);
  }
  return result;
}

unint64_t sub_1001B55C0()
{
  unint64_t result = qword_100317770;
  if (!qword_100317770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317770);
  }
  return result;
}

unint64_t sub_1001B560C()
{
  unint64_t result = qword_100317788;
  if (!qword_100317788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317788);
  }
  return result;
}

unint64_t sub_1001B5658()
{
  unint64_t result = qword_100317798;
  if (!qword_100317798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317798);
  }
  return result;
}

unsigned char *sub_1001B56A4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001B5740);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for Metrics.EventType()
{
}

unsigned char *sub_1001B5774(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B5840);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for Metrics.DialogID()
{
}

unsigned char *storeEnumTagSinglePayload for Metrics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B5940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metrics.CodingKeys()
{
  return &type metadata for Metrics.CodingKeys;
}

uint64_t sub_1001B5978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B59CC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001B5A5C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1001B5B34(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t sub_1001B5B3C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B5BC4(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 88))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001B5C18(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for Metrics()
{
}

unint64_t sub_1001B5C90()
{
  unint64_t result = qword_1003177A0;
  if (!qword_1003177A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177A0);
  }
  return result;
}

unint64_t sub_1001B5CE0()
{
  unint64_t result = qword_1003177A8;
  if (!qword_1003177A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177A8);
  }
  return result;
}

unint64_t sub_1001B5D30()
{
  unint64_t result = qword_1003177B0;
  if (!qword_1003177B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177B0);
  }
  return result;
}

unint64_t sub_1001B5D80()
{
  unint64_t result = qword_1003177B8;
  if (!qword_1003177B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177B8);
  }
  return result;
}

unint64_t sub_1001B5DD0()
{
  unint64_t result = qword_1003177C0;
  if (!qword_1003177C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177C0);
  }
  return result;
}

unint64_t sub_1001B5E1C()
{
  unint64_t result = qword_1003177C8;
  if (!qword_1003177C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177C8);
  }
  return result;
}

unint64_t sub_1001B5E68()
{
  unint64_t result = qword_1003177D0;
  if (!qword_1003177D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003177D0);
  }
  return result;
}

uint64_t sub_1001B5EB4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_10024F8D0();
}

uint64_t sub_1001B5ED8()
{
  return sub_10024F7C0();
}

uint64_t sub_1001B5EF8()
{
  return sub_10024F910();
}

uint64_t sub_1001B5F1C()
{
  return v0;
}

void sub_1001B5F48()
{
  sub_1001B771C();
  if (sub_10024E220(v4, v5, v6) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (sub_10024E220(v3, v2, v1) == -1)
      {
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v8 = v0 == 9 || v0 == 14;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v9, (uint64_t)"fcntl(descriptor:command:value:)");
      }
    }
  }
}

void sub_1001B5FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
LABEL_18:
    __break(1u);
    return;
  }
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a3 > 0x7FFFFFFF) {
    goto LABEL_16;
  }
  sub_1001B7758();
  while (1)
  {
    int v3 = sub_1001B7764();
    if (writev(v3, v4, v5) != -1) {
      break;
    }
    int v6 = sub_10024E210();
    if (v6 != 4)
    {
      if (v6 == 35) {
        return;
      }
      if (v6 != 9 && v6 != 14)
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v8, (uint64_t)"writev(descriptor:iovecs:)");
        return;
      }
      goto LABEL_17;
    }
  }
}

void sub_1001B60D4()
{
  sub_1001B771C();
  if (read(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (read(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v8 = v0 == 9 || v0 == 14;
        if (v8)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v9, (uint64_t)"read(descriptor:pointer:size:)");
        }
      }
    }
  }
}

void sub_1001B6190()
{
  sub_1001B771C();
  if (write(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (write(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v8 = v0 == 9 || v0 == 14;
        if (v8)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v9, (uint64_t)"write(descriptor:pointer:size:)");
        }
      }
    }
  }
}

void sub_1001B624C()
{
  sub_1001B77B0();
  if (pread(v1, v2, v3, v4) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v10)
    {
      while (1)
      {
        int v5 = sub_1001B77C8();
        if (pread(v5, v6, v7, v8) != -1) {
          break;
        }
        int v9 = sub_10024E210();
        if (v9 != 4)
        {
          int v0 = v9;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v10 = v0 == 9 || v0 == 14;
        if (v10)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v11, (uint64_t)"pread(descriptor:pointer:size:offset:)");
        }
      }
    }
  }
}

void sub_1001B6308()
{
  sub_1001B77A0();
  if (ftruncate(v3, v4) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v6)
    {
      while (ftruncate(v2, v1) == -1)
      {
        int v5 = sub_10024E210();
        if (v5 != 4)
        {
          int v0 = v5;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v6 = v0 == 9 || v0 == 14;
      if (v6)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v7, (uint64_t)"ftruncate(descriptor:size:)");
      }
    }
  }
}

void sub_1001B63A8()
{
  sub_1001B7758();
  if (lseek(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (lseek(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v8 = v0 == 9 || v0 == 14;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v9, (uint64_t)"lseek(descriptor:offset:whence:)");
      }
    }
  }
}

void sub_1001B6454()
{
  sub_1001B77B0();
  if (pwrite(v1, v2, v3, v4) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v10)
    {
      while (1)
      {
        int v5 = sub_1001B77C8();
        if (pwrite(v5, v6, v7, v8) != -1) {
          break;
        }
        int v9 = sub_10024E210();
        if (v9 != 4)
        {
          int v0 = v9;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v10 = v0 == 9 || v0 == 14;
        if (v10)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v11, (uint64_t)"pwrite(descriptor:pointer:size:offset:)");
        }
      }
    }
  }
}

void sub_1001B6510()
{
  sub_1001B771C();
  if (accept(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (accept(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 != 35)
      {
        BOOL v8 = v0 == 9 || v0 == 14;
        if (v8)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v9, (uint64_t)"accept(descriptor:addr:len:)");
        }
      }
    }
  }
}

uint64_t sub_1001B65E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
  socklen_t v5 = a3;
  if (HIDWORD(a3)) {
    goto LABEL_15;
  }
  sub_1001B77A0();
  uint64_t result = bind(v6, v7, v5);
  if (result != -1) {
    return result;
  }
  int v9 = sub_10024E210();
  if (v9 != 4)
  {
LABEL_8:
    if (v9 != 9 && v9 != 14)
    {
      sub_100028EB4();
      sub_1000290D0();
      return sub_1001B7730(v12, (uint64_t)"bind(descriptor:ptr:bytes:)");
    }
    __break(1u);
LABEL_15:
    sub_10003C4F8();
    uint64_t result = sub_10024F660();
    __break(1u);
    return result;
  }
  while (1)
  {
    uint64_t result = bind(v4, v3, v5);
    if (result != -1) {
      return result;
    }
    int v10 = sub_10024E210();
    if (v10 != 4)
    {
      int v9 = v10;
      goto LABEL_8;
    }
  }
}

uint64_t sub_1001B6718(uint64_t a1, uint64_t a2, socklen_t a3)
{
  sub_1001B7758();
  if (connect(v6, v7, v8) != -1)
  {
LABEL_2:
    char v9 = 1;
    return v9 & 1;
  }
  uint64_t result = sub_10024E210();
  int v11 = result;
  if (result == 4)
  {
    while (connect(v4, v3, a3) == -1)
    {
      uint64_t result = sub_10024E210();
      if (result != 4)
      {
        int v11 = result;
        goto LABEL_7;
      }
    }
    goto LABEL_2;
  }
LABEL_7:
  if (v11 != 9 && v11 != 14)
  {
    sub_100028EB4();
    sub_1000290D0();
    sub_10015D264(v13, (uint64_t)"connect(descriptor:addr:size:)");
    *(_DWORD *)(v14 + 16) = v11;
    swift_willThrow();
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      if (v18 == 36)
      {
        swift_bridgeObjectRelease();
        swift_errorRelease();
        char v9 = 0;
        return v9 & 1;
      }
      sub_1000290D0();
      *(void *)uint64_t v15 = v16;
      *(void *)(v15 + 8) = v17;
      *(_DWORD *)(v15 + 16) = v18;
      swift_willThrow();
    }
    swift_errorRelease();
    return v9 & 1;
  }
  __break(1u);
  return result;
}

void sub_1001B6890()
{
  sub_1001B771C();
  if (getpeername(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (getpeername(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v8 = v0 == 9 || v0 == 14;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v9, (uint64_t)"getpeername(socket:address:addressLength:)");
      }
    }
  }
}

void sub_1001B6934()
{
  sub_1001B771C();
  if (getsockname(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (getsockname(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v8 = v0 == 9 || v0 == 14;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v9, (uint64_t)"getsockname(socket:address:addressLength:)");
      }
    }
  }
}

uint64_t sub_1001B69D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, socklen_t *a5)
{
  sub_1001B77DC();
  uint64_t result = getsockopt(v6, v7, v8, v9, v10);
  if (result == -1)
  {
    uint64_t result = sub_10024E210();
    int v12 = result;
    if (result == 4)
    {
      while (1)
      {
        int v13 = sub_1001B77C8();
        uint64_t result = getsockopt(v13, v14, v15, v16, a5);
        if (result != -1) {
          break;
        }
        uint64_t result = sub_10024E210();
        if (result != 4)
        {
          int v12 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v12 == 9 || v12 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        return sub_1001B7774(v18, (uint64_t)"getsockopt(socket:level:optionName:optionValue:optionLen:)");
      }
    }
  }
  return result;
}

void sub_1001B6A90(int a1, int a2)
{
  if (listen(a1, a2) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v6)
    {
      while (listen(a1, a2) == -1)
      {
        int v5 = sub_10024E210();
        if (v5 != 4)
        {
          int v2 = v5;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v6 = v2 == 9 || v2 == 14;
      if (v6)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v7, (uint64_t)"listen(descriptor:backlog:)");
      }
    }
  }
}

void sub_1001B6B38()
{
  sub_1001B7758();
  if (recvmsg(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (recvmsg(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v8 = v0 == 9 || v0 == 14;
        if (v8)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v9, (uint64_t)"recvmsg(descriptor:msgHdr:flags:)");
        }
      }
    }
  }
}

void sub_1001B6BFC()
{
  sub_1001B7758();
  if (sendmsg(v1, v2, v3) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (1)
      {
        int v4 = sub_1001B7764();
        if (sendmsg(v4, v5, v6) != -1) {
          break;
        }
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v0 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v8 = v0 == 9 || v0 == 14;
        if (v8)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v9, (uint64_t)"sendmsg(descriptor:msgHdr:flags:)");
        }
      }
    }
  }
}

uint64_t sub_1001B6CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, socklen_t a5)
{
  sub_1001B77DC();
  uint64_t result = setsockopt(v6, v7, v8, v9, v10);
  if (result == -1)
  {
    uint64_t result = sub_10024E210();
    int v12 = result;
    if (result == 4)
    {
      while (1)
      {
        int v13 = sub_1001B77C8();
        uint64_t result = setsockopt(v13, v14, v15, v16, a5);
        if (result != -1) {
          break;
        }
        uint64_t result = sub_10024E210();
        if (result != 4)
        {
          int v12 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v12 == 9 || v12 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        return sub_1001B7774(v18, (uint64_t)"setsockopt(socket:level:optionName:optionValue:optionLen:)");
      }
    }
  }
  return result;
}

uint64_t sub_1001B6D78(int a1, unsigned __int8 a2)
{
  int v3 = a2;
  while (1)
  {
    uint64_t result = shutdown(a1, v3);
    if (result != -1) {
      break;
    }
    uint64_t result = sub_10024E210();
    if (result != 4)
    {
      if (result == 9 || result == 14)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        return sub_1000290A8(v6, (uint64_t)"shutdown(descriptor:how:)");
      }
      return result;
    }
  }
  return result;
}

void sub_1001B6E08()
{
  sub_1001B771C();
  if (socket(v4, v5, v6) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v8)
    {
      while (socket(v3, v2, v1) == -1)
      {
        int v7 = sub_10024E210();
        if (v7 != 4)
        {
          int v0 = v7;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v8 = v0 == 9 || v0 == 14;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v9, (uint64_t)"socket(domain:type:protocol:)");
      }
    }
  }
}

void sub_1001B6EB4(int a1, msghdr *a2, unsigned int a3, int a4)
{
  if (sub_10000CEC0(a1, a2, a3, a4) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v10)
    {
      while (sub_10000CEC0(a1, a2, a3, a4) == -1)
      {
        int v9 = sub_10024E210();
        if (v9 != 4)
        {
          int v4 = v9;
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      if (v4 == 35)
      {
        sub_1000F0E94();
      }
      else
      {
        BOOL v10 = v4 == 9 || v4 == 14;
        if (v10)
        {
          __break(1u);
        }
        else
        {
          sub_100028EB4();
          sub_1000290D0();
          sub_1000290A8(v11, (uint64_t)"sendmmsg(sockfd:msgvec:vlen:flags:)");
        }
      }
    }
  }
}

off_t sub_1001B6F90(int a1, int a2, off_t a3, off_t a4)
{
  while (1)
  {
    v18[0] = a4;
    int v8 = sendfile(a2, a1, a3, v18, 0, 0);
    off_t v9 = v18[0];
    if (v8 != -1) {
      break;
    }
    int v10 = sub_10024E210();
    if (v10 != 4)
    {
      if (v10 == 9 || v10 == 14) {
        __break(1u);
      }
      sub_100028EB4();
      uint64_t v12 = sub_1000290D0();
      sub_1001B7730(v13, (uint64_t)"sendfile(descriptor:fd:offset:count:)");
      uint64_t v20 = v12;
      swift_errorRetain();
      sub_100019524(&qword_100309768);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        off_t v14 = v18[1];
        int v15 = v19;
        if (v19 == 35)
        {
          swift_bridgeObjectRelease();
          swift_errorRelease();
          return v9;
        }
        off_t v9 = v18[0];
        sub_1000290D0();
        *(void *)uint64_t v16 = v9;
        *(void *)(v16 + 8) = v14;
        *(_DWORD *)(v16 + 16) = v15;
        swift_willThrow();
      }
      swift_errorRelease();
      return v9;
    }
  }
  return v9;
}

void sub_1001B7130()
{
  sub_1001B5F48();
  if (!v0) {
    sub_1001B5F48();
  }
}

uint64_t sub_1001B723C(uint64_t a1, uint64_t a2, stat *a3)
{
  uint64_t v4 = sub_10024E730();
  int v5 = stat((const char *)(v4 + 32), a3);
  uint64_t result = swift_release();
  if (v5 == -1)
  {
    uint64_t result = sub_10024E210();
    int v7 = result;
    if (result == 4)
    {
      while (1)
      {
        uint64_t v8 = sub_10024E730();
        int v9 = stat((const char *)(v8 + 32), a3);
        uint64_t result = swift_release();
        if (v9 != -1) {
          break;
        }
        uint64_t result = sub_10024E210();
        if (result != 4)
        {
          int v7 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v7 == 9 || v7 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        return sub_1001B7730(v11, (uint64_t)"stat(pathname:outStat:)");
      }
    }
  }
  return result;
}

uint64_t sub_1001B732C()
{
  uint64_t v0 = sub_10024E730();
  int v1 = unlink((const char *)(v0 + 32));
  uint64_t result = swift_release();
  if (v1 == -1)
  {
    uint64_t result = sub_10024E210();
    int v3 = result;
    if (result == 4)
    {
      while (1)
      {
        uint64_t v4 = sub_10024E730();
        int v5 = unlink((const char *)(v4 + 32));
        uint64_t result = swift_release();
        if (v5 != -1) {
          break;
        }
        uint64_t result = sub_10024E210();
        if (result != 4)
        {
          int v3 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v3 == 9 || v3 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_10015D264(v7, (uint64_t)"unlink(pathname:)");
        *(_DWORD *)(v8 + 16) = v3;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1001B741C(int a1, const kevent *a2, int a3, kevent *a4, int a5, const timespec *a6)
{
  uint64_t result = kevent(a1, a2, a3, a4, a5, a6);
  if (result == -1)
  {
    uint64_t result = sub_10024E210();
    int v13 = result;
    if (result == 4)
    {
      while (1)
      {
        uint64_t result = kevent(a1, a2, a3, a4, a5, a6);
        if (result != -1) {
          break;
        }
        uint64_t result = sub_10024E210();
        if (result != 4)
        {
          int v13 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v13 == 9 || v13 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_10015D264(v15, (uint64_t)"kevent(kq:changelist:nchanges:eventlist:nevents:timeout:)");
        *(_DWORD *)(v16 + 16) = v13;
        return swift_willThrow();
      }
    }
  }
  return result;
}

void sub_1001B7504()
{
  if (kqueue() == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v2)
    {
      while (kqueue() == -1)
      {
        int v1 = sub_10024E210();
        if (v1 != 4)
        {
          int v0 = v1;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v2 = v0 == 9 || v0 == 14;
      if (v2)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        *(void *)uint64_t v3 = 0x292865756575716BLL;
        *(void *)(v3 + 8) = 0xE800000000000000;
        *(_DWORD *)(v3 + 16) = v0;
        swift_willThrow();
      }
    }
  }
}

void sub_1001B75A8()
{
  sub_1001B77A0();
  if (fstat(v3, v4) == -1)
  {
    sub_10024E210();
    sub_1001B7710();
    if (v6)
    {
      while (fstat(v2, v1) == -1)
      {
        int v5 = sub_10024E210();
        if (v5 != 4)
        {
          int v0 = v5;
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      BOOL v6 = v0 == 9 || v0 == 14;
      if (v6)
      {
        __break(1u);
      }
      else
      {
        sub_100028EB4();
        sub_1000290D0();
        sub_1000290A8(v7, (uint64_t)"fstat(descriptor:outStat:)");
      }
    }
  }
}

void sub_1001B7648()
{
  dword_10034C0B8 = 0;
}

void sub_1001B7660()
{
  dword_10034C0BC = 3;
}

void sub_1001B7678()
{
  dword_10034C0C0 = 2;
}

void sub_1001B7690()
{
  dword_10034C0C4 = 1;
}

void sub_1001B76A8()
{
  dword_10034C0C8 = 3;
}

void sub_1001B76C0()
{
  dword_10034C0D4 = 61;
}

void sub_1001B76D8()
{
  dword_10034C0D8 = 46;
}

ValueMetadata *type metadata accessor for NIOFcntlFailedError()
{
  return &type metadata for NIOFcntlFailedError;
}

ValueMetadata *type metadata accessor for NIOFailedToSetSocketNonBlockingError()
{
  return &type metadata for NIOFailedToSetSocketNonBlockingError;
}

uint64_t sub_1001B7730@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(void *)(a1 + 8) = (a2 - 32) | 0x8000000000000000;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_willThrow();
}

uint64_t sub_1001B7764()
{
  return v0;
}

uint64_t sub_1001B7774@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = 0xD00000000000003ALL;
  *(void *)(a1 + 8) = (a2 - 32) | 0x8000000000000000;
  *(_DWORD *)(a1 + 16) = v2;
  return swift_willThrow();
}

uint64_t sub_1001B77C8()
{
  return v0;
}

uint64_t sub_1001B77F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 88);
  sub_100019524(&qword_10030AE38);
  uint64_t v11 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = sub_10013F1AC(v9, 0, 255, a1, a2, a3, a4, v11, ObjectType, v10);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_unknownObjectRetain();
  sub_10012F1A8();
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_1001B78FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_10004F2C8();
  *(void *)(v8 + 16) = a5;
  *(void *)(v8 + 24) = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012E40C();
  swift_release();
  return swift_retain();
}

uint64_t sub_1001B7994()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_100019524(&qword_1003110B8);
  swift_allocObject();
  uint64_t v3 = sub_1001840EC(v1, v2, 0, 0, 255);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_unknownObjectRetain();
  sub_10012FC68();
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1001B7AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1001B7C90(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10012FD88);
}

uint64_t sub_1001B7AB8()
{
  sub_1001B9940();
  if ((char *)sub_100019524(&qword_10030A528) == &type metadata for ()[8])
  {
    swift_retain();
    sub_100019524(&qword_100317948);
    sub_100019524(&qword_100317950);
    swift_dynamicCast();
    *(_OWORD *)(sub_10004F2C8() + 16) = v11;
    swift_retain();
    swift_retain();
    sub_10012E40C();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    sub_100019524(&qword_1003110B0);
    uint64_t v7 = swift_allocObject();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = sub_10013F7A8(v5, 0, 0, 255, v4, v3, v2, v1, v7, ObjectType, v6);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_unknownObjectRetain();
    sub_10012E904();
    swift_release();
    swift_release();
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_1001B7C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1001B7C90(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100131AB0);
}

uint64_t sub_1001B7C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1001B9940();
  uint64_t v15 = *(void *)(v7 + 32);
  uint64_t v14 = *(void *)(v7 + 40);
  sub_100019524(&qword_10030AE38);
  uint64_t v16 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = sub_10013F1AC(v15, 0, 255, v11, v10, v9, v8, v16, ObjectType, v14);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_unknownObjectRetain();
  a7(v7, v18, v7, a5, a6);
  swift_release();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_1001B7D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004F2C8();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_retain();
}

uint64_t sub_1001B7E30(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1001B7E70()
{
  uint64_t result = sub_1000DBFF8((uint64_t)&off_1002D6068);
  qword_1003177D8 = result;
  return result;
}

uint64_t sub_1001B7E98()
{
  *(void *)(v0 + 136) = 0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(void *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 24) = 0u;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v0 + 16) = 0;
  sub_100141040();
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  __n128 v9 = *(__n128 *)(v0 + 88);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(void *)(v0 + 120) = 0;
  sub_1001B9928(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  return v0;
}

uint64_t sub_1001B7F48(uint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v4 = ChannelHandlerContext.remoteAddress.getter();
  if ((~v4 & 0xF000000000000007) == 0) {
    goto LABEL_22;
  }
  uint64_t v5 = v4;
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      uint64_t v6 = *(void *)((v4 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      *(void *)&long long v157 = *(void *)((v4 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      *((void *)&v157 + 1) = v6;
      swift_retain();
      uint64_t v7 = sub_1000ECF00(30, &v157, 0x2EuLL);
      goto LABEL_6;
    }
    sub_10002F2A0(v4);
LABEL_22:
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10024E1F0();
    sub_10001B0E8(v31, (uint64_t)qword_10034C0E0);
    uint64_t v28 = sub_10024E1D0();
    os_log_type_t v32 = sub_10024EE10();
    if (!os_log_type_enabled(v28, v32)) {
      goto LABEL_27;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v32, "Blocking request from unknown remote", v33, 2u);
LABEL_26:
    swift_slowDealloc();
LABEL_27:

LABEL_28:
    sub_100141040();
    __n128 v34 = sub_1001B98E0();
    *(_OWORD *)((char *)v2 + 24) = v35;
    *(_OWORD *)((char *)v2 + 40) = v35;
    *(_OWORD *)((char *)v2 + 56) = v35;
    *(_OWORD *)((char *)v2 + 72) = v35;
    *(_OWORD *)((char *)v2 + 88) = v35;
    *(_OWORD *)((char *)v2 + 104) = v35;
    *((void *)v2 + 15) = 0;
    sub_1001B9928(v36, v37, v38, v39, v40, v41, v42, v43, v34);
    sub_1001B9580();
    sub_1001B8B50(a1);
    return swift_release();
  }
  LODWORD(v157) = *(_DWORD *)(v4 + 20);
  swift_retain();
  uint64_t v7 = sub_1000ECF00(2, &v157, 0x10uLL);
LABEL_6:
  uint64_t v9 = v7;
  unint64_t v10 = v8;
  sub_10002F2A0(v5);
  sub_10002F2A0(v5);
  swift_bridgeObjectRetain();
  if (qword_100308DD8 != -1) {
    swift_once();
  }
  sub_1000D4104(v9, v10, qword_1003177D8);
  char v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10024E1F0();
    sub_10001B0E8(v27, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10024E1D0();
    os_log_type_t v29 = sub_10024EE10();
    if (!os_log_type_enabled(v28, v29))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_28;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v157 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000F3F3C(v9, v10, (uint64_t *)&v157);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Blocking request from external remote: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  sub_100019524(&qword_10030A518);
  sub_10003301C();
  uint64_t v15 = v13;
  uint64_t v17 = v16;
  unint64_t v18 = v14;
  if (HIBYTE(v14))
  {
    if (HIBYTE(v14) != 1)
    {
      uint64_t v156 = v13;
      sub_100141040();
      uint64_t v61 = *((void *)v2 + 5);
      if (v61)
      {
        uint64_t v62 = *((void *)v2 + 14);
        uint64_t v64 = *((void *)v2 + 12);
        uint64_t v63 = *((void *)v2 + 13);
        uint64_t v153 = v18;
        uint64_t v65 = *((void *)v2 + 11);
        uint64_t v141 = *((void *)v2 + 15);
        uint64_t v142 = *((void *)v2 + 10);
        uint64_t v66 = *((void *)v2 + 8);
        uint64_t v67 = *((void *)v2 + 7);
        uint64_t v145 = *((void *)v2 + 9);
        uint64_t v147 = *((void *)v2 + 6);
        uint64_t v150 = v17;
        unint64_t v68 = *((void *)v2 + 4);
        *(void *)&long long v157 = *((void *)v2 + 3);
        *((void *)&v157 + 1) = v68;
        uint64_t v143 = v157;
        unint64_t v144 = v68;
        uint64_t v158 = v61;
        *(void *)&long long v159 = v147;
        *((void *)&v159 + 1) = v67;
        uint64_t v160 = v66;
        unsigned __int8 v161 = v145;
        uint64_t v162 = v142;
        *(void *)&long long v163 = v65;
        uint64_t v69 = v65;
        *((void *)&v163 + 1) = v64;
        uint64_t v164 = v63;
        unsigned int v165 = v62;
        unsigned __int8 v167 = BYTE6(v62);
        unsigned __int16 v166 = WORD2(v62);
        uint64_t v168 = v141;
        sub_100065924(v157, v68);
        swift_unknownObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_100065938(v142, v69, v64);
        swift_bridgeObjectRetain();
        sub_1001B93D0((uint64_t)&v157);
        __n128 v70 = sub_1001B98E0();
        *(_OWORD *)((char *)v2 + 24) = v71;
        *(_OWORD *)((char *)v2 + 40) = v71;
        *(_OWORD *)((char *)v2 + 56) = v71;
        *(_OWORD *)((char *)v2 + 72) = v71;
        *((void *)v2 + 15) = 0;
        *(_OWORD *)((char *)v2 + 88) = v71;
        *(_OWORD *)((char *)v2 + 104) = v71;
        sub_1001B9928(v72, v73, v74, v75, v76, v77, v78, v79, v70);
        sub_1001B8B50(a1);
        sub_10003C488(v156, v150, v153, 2);
        swift_release();
        return sub_1001B9804(v143, v144, v61, v147, v67, v66, v145, v142, v69, v64);
      }
      uint64_t v80 = v156;
      uint64_t v81 = v17;
      uint64_t v82 = v18;
      char v83 = 2;
      return sub_10003C488(v80, v81, v82, v83);
    }
    unint64_t v2 = ByteBuffer._Storage.bytes.modify();
    if (!*(void *)(v19 + 16) || (uint64_t v20 = v19, !*(void *)(v19 + 72)))
    {
LABEL_50:
      ((void (*)(long long *, void))v2)(&v157, 0);
      uint64_t v80 = v15;
      uint64_t v81 = v17;
      uint64_t v82 = v18;
      char v83 = 1;
      return sub_10003C488(v80, v81, v82, v83);
    }
    Swift::UInt32 v21 = *(_DWORD *)(v19 + 84);
    swift_beginAccess();
    if (HIDWORD(v17) < v17)
    {
      __break(1u);
    }
    else
    {
      uint64_t v22 = *(void *)(v15 + 24) + ((v18 >> 24) & 0xFFFF00 | BYTE6(v18)) + v17;
      int v23 = ByteBuffer._setBytes(_:at:)(v22, v22 + (HIDWORD(v17) - v17), v21);
      int v24 = *(_DWORD *)(v20 + 84);
      BOOL v25 = __CFADD__(v24, v23);
      int v26 = v24 + v23;
      if (!v25)
      {
        *(_DWORD *)(v20 + 84) = v26;
        goto LABEL_50;
      }
    }
    __break(1u);
    goto LABEL_116;
  }
  uint64_t v45 = *(unsigned int *)(v13 + 48);
  uint64_t v155 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001D5270(v45, v17, v18);
  *((unsigned char *)v2 + 16) = (v46 & 1) == 0;
  uint64_t v47 = *(void *)(v17 + 16);
  if (v47)
  {
    unint64_t v152 = v18;
    uint64_t v146 = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v149 = v17;
    uint64_t v48 = (uint64_t *)(v17 + 56);
    uint64_t v49 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v51 = *(v48 - 3);
      unint64_t v50 = *(v48 - 2);
      uint64_t v53 = *(v48 - 1);
      uint64_t v52 = *v48;
      if ((v50 & 0x1000000000000000) != 0
        || ((v50 & 0x2000000000000000) != 0
          ? (uint64_t v55 = HIBYTE(v50) & 0xF,
             *(void *)&long long v157 = *(v48 - 3),
             *((void *)&v157 + 1) = v50 & 0xFFFFFFFFFFFFFFLL,
             uint64_t v54 = &v157)
          : (v51 & 0x1000000000000000) == 0
          ? (uint64_t v54 = (long long *)sub_10024F3E0())
          : (long long *)(uint64_t v54 = (long long *)((v50 & 0xFFFFFFFFFFFFFFFLL) + 32), v55 = v51 & 0xFFFFFFFFFFFFLL),
            char v56 = sub_1001D5F9C(v54, v55, 0x2D746E65746E6F63, 0xEE006874676E656CLL),
            (v56 & 0xFE) == 2))
      {
        char v56 = sub_1001D60B0(0x2D746E65746E6F63uLL, 0xEE006874676E656CLL, v51, v50);
      }
      if (v56)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100034BF0();
          uint64_t v49 = v59;
        }
        unint64_t v57 = v49[2];
        if (v57 >= v49[3] >> 1)
        {
          sub_100034BF0();
          uint64_t v49 = v60;
        }
        _OWORD v49[2] = v57 + 1;
        uint64_t v58 = &v49[2 * v57];
        void v58[4] = v53;
        v58[5] = v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v48 += 4;
      --v47;
    }
    while (v47);
    uint64_t v17 = v149;
    swift_bridgeObjectRelease_n();
    a1 = v146;
    unint64_t v18 = v152;
  }
  else
  {
    uint64_t v49 = _swiftEmptyArrayStorage;
  }
  if (v49[2])
  {
    uint64_t v85 = v49[4];
    unint64_t v84 = v49[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v86 = HIBYTE(v84) & 0xF;
    uint64_t v87 = v85 & 0xFFFFFFFFFFFFLL;
    if ((v84 & 0x2000000000000000) != 0 ? HIBYTE(v84) & 0xF : v85 & 0xFFFFFFFFFFFFLL)
    {
      if ((v84 & 0x1000000000000000) != 0)
      {
        uint64_t v90 = sub_1001A4F88(v85, v84, 10);
        LOBYTE(v49) = v140;
LABEL_90:
        swift_bridgeObjectRelease();
        uint64_t v92 = 0;
        uint64_t v93 = 0;
        if ((v49 & 1) == 0 && v90 >= 1)
        {
          sub_1000AE91C();
          uint64_t v104 = v103;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v106 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v104 + 16))(ObjectType, v104);
          uint64_t v108 = v107;
          uint64_t v109 = v17;
          uint64_t v111 = v110;
          uint64_t v113 = v112;
          swift_unknownObjectRelease();
          type metadata accessor for ByteBuffer._Storage();
          uint64_t v114 = v111;
          uint64_t v17 = v109;
          uint64_t v92 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v90, v106, v108, v114, v113);
          uint64_t v93 = *(unsigned int *)(v92 + 16);
        }
        goto LABEL_93;
      }
      if ((v84 & 0x2000000000000000) == 0)
      {
        if ((v85 & 0x1000000000000000) != 0)
        {
          uint64_t v89 = (unsigned __int8 *)((v84 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_61:
          uint64_t v90 = (uint64_t)sub_1001A4F58(v89, v87);
          LOBYTE(v49) = v91 & 1;
          goto LABEL_90;
        }
LABEL_116:
        uint64_t v89 = (unsigned __int8 *)sub_10024F3E0();
        goto LABEL_61;
      }
      *(void *)&long long v157 = v85;
      *((void *)&v157 + 1) = v84 & 0xFFFFFFFFFFFFFFLL;
      if (v85 == 43)
      {
        if (!v86) {
          goto LABEL_118;
        }
        if (v86 == 1) {
          goto LABEL_87;
        }
        sub_100067DD4();
        if (!v96 && v25) {
          goto LABEL_87;
        }
        uint64_t v90 = v98;
        if (v97 != 2)
        {
          sub_100067DD4();
          if (!v96 && v25) {
            goto LABEL_87;
          }
          uint64_t v90 = 10 * v90 + v100;
          if (v99 != 3)
          {
            while (1)
            {
              sub_100028C7C();
              if (!v96 && v25) {
                goto LABEL_87;
              }
              sub_1001B9904();
              if (!v96) {
                goto LABEL_87;
              }
              uint64_t v90 = v102 + v101;
              if (__OFADD__(v102, v101)) {
                goto LABEL_87;
              }
              sub_1001B9918();
              if (v96) {
                goto LABEL_90;
              }
            }
          }
        }
      }
      else
      {
        if (v85 == 45)
        {
          if (v86)
          {
            if (v86 == 1) {
              goto LABEL_87;
            }
            sub_100067DD4();
            if (!v96 && v25) {
              goto LABEL_87;
            }
            if (v94 == 2)
            {
              LOBYTE(v49) = 0;
              uint64_t v90 = -(uint64_t)v95;
              goto LABEL_90;
            }
            if ((BYTE2(v85) - 48) > 9u) {
              goto LABEL_87;
            }
            uint64_t v90 = -10 * v95 - (BYTE2(v85) - 48);
            if (v94 != 3)
            {
              while (1)
              {
                sub_100028C7C();
                if (!v96 && v25) {
                  goto LABEL_87;
                }
                sub_1001B9904();
                if (!v96) {
                  goto LABEL_87;
                }
                uint64_t v90 = v139 - v138;
                if (__OFSUB__(v139, v138)) {
                  goto LABEL_87;
                }
                sub_1001B9918();
                if (v96) {
                  goto LABEL_90;
                }
              }
            }
            goto LABEL_89;
          }
          __break(1u);
LABEL_118:
          __break(1u);
        }
        if (!v86 || (v85 - 48) > 9u)
        {
LABEL_87:
          uint64_t v90 = 0;
          LOBYTE(v49) = 1;
          goto LABEL_90;
        }
        uint64_t v90 = (v85 - 48);
        if (v86 != 1)
        {
          sub_100067DD4();
          if (!v96 && v25) {
            goto LABEL_87;
          }
          uint64_t v90 = 10 * (v85 - 48) + v135;
          if (v134 != 2)
          {
            while (1)
            {
              sub_100028C7C();
              if (!v96 && v25) {
                goto LABEL_87;
              }
              sub_1001B9904();
              if (!v96) {
                goto LABEL_87;
              }
              uint64_t v90 = v137 + v136;
              if (__OFADD__(v137, v136)) {
                goto LABEL_87;
              }
              sub_1001B9918();
              if (v96) {
                goto LABEL_90;
              }
            }
          }
        }
      }
LABEL_89:
      LOBYTE(v49) = 0;
      goto LABEL_90;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v92 = 0;
  uint64_t v93 = 0;
LABEL_93:
  uint64_t v115 = *(void *)(*(void *)(a1 + 32) + 56);
  uint64_t v116 = swift_unknownObjectRetain();
  sub_100212648(v116, v115, v155, v17, v18, v92, 0, v93, (uint64_t)&v157);
  uint64_t v117 = v158;
  long long v151 = v159;
  long long v154 = v157;
  uint64_t v118 = v160;
  uint64_t v119 = v161;
  uint64_t v120 = v162;
  long long v148 = v163;
  uint64_t v121 = v164;
  uint64_t v122 = v17;
  unint64_t v123 = v165 | ((unint64_t)(v166 | (v167 << 16)) << 32);
  uint64_t v124 = v168;
  sub_10003C488(v155, v122, v18, 0);
  sub_100141040();
  uint64_t v125 = *((void *)v2 + 3);
  unint64_t v126 = *((void *)v2 + 4);
  uint64_t v127 = *((void *)v2 + 5);
  uint64_t v128 = *((void *)v2 + 6);
  uint64_t v129 = *((void *)v2 + 7);
  uint64_t v130 = *((void *)v2 + 8);
  uint64_t v131 = *((void *)v2 + 9);
  uint64_t v132 = *((void *)v2 + 10);
  long long v133 = *(_OWORD *)((char *)v2 + 88);
  *(_OWORD *)((char *)v2 + 24) = v154;
  *((void *)v2 + 5) = v117;
  *((_OWORD *)v2 + 3) = v151;
  *((void *)v2 + 8) = v118;
  *((void *)v2 + 9) = v119;
  *((void *)v2 + 10) = v120;
  *(_OWORD *)((char *)v2 + 88) = v148;
  *((void *)v2 + 13) = v121;
  *((void *)v2 + 14) = v123;
  *((void *)v2 + 15) = v124;
  return sub_1001B9804(v125, v126, v127, v128, v129, v130, v131, v132, v133, *((uint64_t *)&v133 + 1));
}

uint64_t sub_1001B8B50(uint64_t a1)
{
  uint64_t v3 = sub_10004F2C8();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  swift_retain();
  sub_1001B77F0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/HTTPHandler.swift", 104, 2, 83);
  swift_release();
  uint64_t v4 = sub_10004F2C8();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  swift_retain();
  sub_1001B7D9C((uint64_t)sub_1001B9798, v4);
  swift_release();
  swift_release();
  uint64_t v5 = sub_10004F2C8();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10012DE30();
  swift_release();
  return swift_release();
}

uint64_t sub_1001B8CB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 32);
  __int16 v4 = *(_WORD *)(a1 + 36);
  char v5 = *(unsigned char *)(a1 + 38);
  uint64_t v12 = sub_100019524(&qword_10030A1F8);
  v7[0] = v1;
  v7[1] = v2;
  char v10 = v5;
  __int16 v9 = v4;
  int v8 = v3;
  char v11 = 1;
  char v13 = 2;
  swift_retain();
  ChannelHandlerContext.write(_:promise:)((uint64_t)v7, 0);
  return sub_10003908C((uint64_t)v7);
}

uint64_t sub_1001B8D44(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v5 = a3;
  uint64_t v10 = sub_100019524(&qword_10030A1F8);
  v7[0] = a1;
  v7[1] = a2;
  int v8 = v5;
  int v9 = 0;
  char v11 = 2;
  swift_retain();
  swift_bridgeObjectRetain();
  ChannelHandlerContext.write(_:promise:)((uint64_t)v7, 0);
  return sub_10003908C((uint64_t)v7);
}

uint64_t sub_1001B8DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned __int8 v31 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v32 = *(void *)(a1 + 24);
  unint64_t v33 = *(void *)(a1 + 48);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 62);
  unsigned int v9 = *(unsigned __int16 *)(a1 + 60);
  uint64_t v10 = *(unsigned int *)(a1 + 56);
  uint64_t v35 = v5;
  uint64_t v30 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  unsigned __int8 v29 = sub_100032B9C();
  uint64_t v11 = sub_10003A870(&v35);
  if (*(void *)(v35 + 16) < v11)
  {
    __break(1u);
    goto LABEL_24;
  }
  sub_10003ABA4();
  if (v7)
  {
    v36[0] = v32;
    v36[1] = v6;
    v36[2] = v7;
    v36[3] = v33;
    unint64_t v12 = v10 | ((unint64_t)(v9 | (v8 << 16)) << 32);
    int v37 = v12;
    __int16 v38 = WORD2(v12);
    char v39 = BYTE6(v12);
    unint64_t v34 = HIDWORD(v33);
    sub_100065938(v32, v6, v7);
    swift_retain();
    a3 = (uint64_t)&v34;
    uint64_t v5 = sub_10024F9E0();
    uint64_t v8 = v13;
    if ((sub_1000304DC(0x2D746E65746E6F63uLL, 0xEE006874676E656CLL) & 1) == 0)
    {
      a3 = v35;
      swift_bridgeObjectRetain();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_5;
      }
      goto LABEL_25;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    a3 = sub_1000351A8(0, *(void *)(a3 + 16) + 1, 1, a3);
LABEL_5:
    unint64_t v15 = *(void *)(a3 + 16);
    unint64_t v14 = *(void *)(a3 + 24);
    if (v15 >= v14 >> 1) {
      a3 = sub_1000351A8(v14 > 1, v15 + 1, 1, a3);
    }
    *(void *)(a3 + 16) = v15 + 1;
    uint64_t v16 = a3 + 32 * v15;
    strcpy((char *)(v16 + 32), "content-length");
    *(unsigned char *)(v16 + 47) = -18;
    *(void *)(v16 + 48) = v5;
    *(void *)(v16 + 56) = v8;
    uint64_t v35 = a3;
    unsigned __int8 v17 = sub_100032B9C();
    swift_bridgeObjectRelease();
    if ((v17 | v29)) {
      unsigned __int8 v18 = 2;
    }
    else {
      unsigned __int8 v18 = v31;
    }
    if (!v6)
    {
      uint64_t v26 = v32;
LABEL_21:
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1001B8D44(v30, a3, v18);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1001B8CB0((uint64_t)v36);
      swift_release();
      sub_100045868(v26, v6, v7);
      goto LABEL_22;
    }
    a3 = 0x2D746E65746E6F63;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100032B9C();
    unsigned __int8 v20 = v19;
    __chkstk_darwin(v19, v21);
    uint64_t v22 = sub_10003A870(&v35);
    if (*(void *)(v35 + 16) < v22)
    {
      __break(1u);
    }
    else
    {
      a3 = (uint64_t)&v35;
      sub_10003ABA4();
      if ((sub_1000304DC(0x2D746E65746E6F63uLL, 0xEC00000065707974) & 1) == 0)
      {
        a3 = v35;
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_14:
          unint64_t v24 = *(void *)(a3 + 16);
          unint64_t v23 = *(void *)(a3 + 24);
          if (v24 >= v23 >> 1) {
            a3 = sub_1000351A8(v23 > 1, v24 + 1, 1, a3);
          }
          *(void *)(a3 + 16) = v24 + 1;
          uint64_t v25 = a3 + 32 * v24;
          strcpy((char *)(v25 + 32), "content-type");
          *(unsigned char *)(v25 + 45) = 0;
          *(_WORD *)(v25 + 46) = -5120;
          uint64_t v26 = v32;
          *(void *)(v25 + 48) = v32;
          *(void *)(v25 + 56) = v6;
          unsigned __int8 v27 = sub_100032B9C();
          swift_bridgeObjectRelease();
          if ((v27 | v20)) {
            unsigned __int8 v18 = 2;
          }
          goto LABEL_21;
        }
LABEL_28:
        a3 = sub_1000351A8(0, *(void *)(a3 + 16) + 1, 1, a3);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  sub_1001B8D44(v30, v5, v31);
LABEL_22:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B9314()
{
  uint64_t v4 = sub_100019524(&qword_10030A1F8);
  memset(v2, 0, sizeof(v2));
  char v3 = 2;
  char v5 = 2;
  sub_100032844();
  ChannelHandlerContext.writeAndFlush(_:promise:)((uint64_t)v2, v0);
  swift_release();
  return sub_10003908C((uint64_t)v2);
}

uint64_t sub_1001B9398(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) == 1) {
    return ChannelHandlerContext.close(mode:promise:)(2, 0);
  }
  return result;
}

uint64_t sub_1001B93D0(uint64_t a1)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v1 + 136);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(a1, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1000CB5C8(0x6E756F6620746F4ELL, 0xE900000000000064, 6, (uint64_t)v15);
    uint64_t v6 = v15[1];
    uint64_t v7 = v15[2];
    uint64_t v14 = v15[0];
    unsigned int v8 = HTTPVersion.init(major:minor:)(1, 1);
    Swift::UInt16 v9 = v8;
    unsigned int v10 = HIWORD(v8);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = 25;
    *(_WORD *)(v11 + 40) = v9;
    *(_WORD *)(v11 + 42) = v10;
    swift_getObjectType();
    EventLoop.makeSucceededFuture<A>(_:file:line:)();
    uint64_t v5 = v12;
    swift_bridgeObjectRelease();
    swift_release();
    sub_100045868(v14, v6, v7);
  }
  return v5;
}

uint64_t sub_1001B9580()
{
  sub_1000CB5C8(0xD000000000000024, 0x8000000100283070, 6, (uint64_t)v10);
  uint64_t v0 = v10[1];
  uint64_t v1 = v10[2];
  uint64_t v9 = v10[0];
  unsigned int v2 = HTTPVersion.init(major:minor:)(1, 1);
  Swift::UInt16 v3 = v2;
  unsigned int v4 = HIWORD(v2);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(void *)(v5 + 32) = 24;
  *(_WORD *)(v5 + 40) = v3;
  *(_WORD *)(v5 + 42) = v4;
  swift_getObjectType();
  swift_unknownObjectRetain();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_100045868(v9, v0, v1);
  return v7;
}

uint64_t sub_1001B9700()
{
  sub_1001B9928(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(__n128 *)(v0 + 88));
  sub_100098A10(v0 + 128);
  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t type metadata accessor for HTTPHandler()
{
  return self;
}

uint64_t sub_1001B978C(uint64_t a1)
{
  return sub_1001B8DC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B9798()
{
  return sub_1001B9314();
}

uint64_t sub_1001B97A4(uint64_t a1)
{
  return sub_1001B9398(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001B97AC(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  return sub_1001B7E30(*(void *)a1, *(unsigned char *)(a1 + 8), a2);
}

uint64_t sub_1001B97C4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B97FC(uint64_t a1)
{
  return sub_1001B97AC(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1001B9804(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a3)
  {
    sub_100045854(result, a2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    sub_100045868(a8, a9, a10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001B98AC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

__n128 sub_1001B98E0()
{
  return *(__n128 *)(v0 + 88);
}

uint64_t sub_1001B9928(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  return sub_1001B9804(a1, a2, a3, a4, a5, a6, a7, a8, a9.n128_i64[0], a9.n128_i64[1]);
}

unint64_t sub_1001B9958()
{
  unint64_t result = qword_100317958;
  if (!qword_100317958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317958);
  }
  return result;
}

uint64_t sub_1001B99A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15)
{
  sub_10024E450();
  sub_10001B550();
  __chkstk_darwin(v22, v23);
  sub_1000589AC();
  sub_10024E4C0();
  sub_10001B550();
  __chkstk_darwin(v24, v25);
  sub_1000589AC();
  uint64_t v26 = sub_100019524(&qword_100317960);
  __chkstk_darwin(v26 - 8, v27);
  sub_1001BCE64();
  sub_10024E490();
  sub_10001B550();
  uint64_t v56 = v29;
  uint64_t v57 = v28;
  __chkstk_darwin(v28, v30);
  sub_1000589AC();
  uint64_t v55 = v31;
  uint64_t v32 = sub_1001BB51C(a3, a4, *a15, a15[1], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  if (v33 >> 60 == 15) {
    goto LABEL_4;
  }
  uint64_t v34 = v32;
  unint64_t v35 = v33;
  uint64_t v36 = sub_10024DE60();
  if (v37 >> 60 != 15)
  {
    uint64_t v40 = v36;
    unint64_t v41 = v37;
    sub_100056270((uint64_t)(a15 + 4), (uint64_t)v60);
    sub_100056270((uint64_t)v60, (uint64_t)&v61);
    unint64_t v42 = v62;
    if (v62)
    {
      uint64_t v43 = v61;
      if (qword_100308DE0 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_10024E1F0();
      sub_10001B0E8(v44, (uint64_t)qword_10034C0E0);
      uint64_t v45 = sub_10024E1D0();
      os_log_type_t v46 = sub_10024EE30();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Attempting legacy verification for offer signing key generated in Xcode 11", v47, 2u);
        swift_slowDealloc();
      }

      char v38 = sub_1001BB724(v40, v41, v34, v35, v43, v42);
      sub_1001BCE94();
    }
    else
    {
      uint64_t v58 = v40;
      unint64_t v59 = v41;
      sub_1000473AC(v40, v41);
      sub_10003F860();
      sub_10024E470();
      sub_1000195B4(v15, 0, 1, v57);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v55, v15, v57);
      uint64_t v48 = sub_10024DE60();
      if (v49 >> 60 == 15)
      {
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
        sub_1001BCE94();
        goto LABEL_3;
      }
      uint64_t v50 = v48;
      unint64_t v51 = v49;
      sub_1000473AC(v48, v49);
      sub_10003F7A8();
      sub_10024E3F0();
      sub_10024E3E0();
      sub_10003FDC8();
      v52();
      uint64_t v58 = v34;
      unint64_t v59 = v35;
      char v38 = sub_10024E4A0();
      sub_10003F7F4(v50, v51);
      sub_1001BCE94();
      sub_10003FDC8();
      v53();
      sub_10003FDC8();
      v54();
    }
    sub_1001BCEF4();
    return v38 & 1;
  }
LABEL_3:
  sub_1001BCEF4();
LABEL_4:
  char v38 = 0;
  return v38 & 1;
}

uint64_t sub_1001BA0B0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v181 = a5;
  unint64_t v183 = a4;
  unint64_t v182 = a3;
  uint64_t v177 = a2;
  uint64_t v176 = a1;
  uint64_t v174 = sub_10024E490();
  sub_10001B550();
  uint64_t v173 = v6;
  __chkstk_darwin(v7, v8);
  v175 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  v172 = (char *)&v157 - v12;
  uint64_t v179 = sub_10024E4C0();
  sub_10001B550();
  uint64_t v14 = v13;
  __chkstk_darwin(v15, v16);
  unsigned __int8 v18 = (char *)&v157 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v157 - v21;
  sub_10024E6F0();
  sub_10001B550();
  uint64_t v184 = v23;
  __chkstk_darwin(v24, v25);
  sub_1001BCE64();
  uint64_t v186 = sub_10024E6B0();
  uint64_t v187 = v26;
  sub_10024F2E0();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  uint64_t v178 = v14;
  if (v192)
  {
    if (sub_1001BCD34())
    {
      uint64_t v27 = v186;
      uint64_t v28 = v187;
      goto LABEL_6;
    }
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
  }
  uint64_t v28 = 0xE300000000000000;
  uint64_t v27 = 3157553;
LABEL_6:
  uint64_t v185 = v27;
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v29;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  v180 = v22;
  if (v192)
  {
    int v30 = sub_1001BCD34();
    BOOL v31 = v30 == 0;
    if (v30) {
      unint64_t v32 = v186;
    }
    else {
      unint64_t v32 = 0;
    }
    if (v31) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = v187;
    }
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    unint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  unint64_t v34 = sub_1001BBDD8(v32, v33, 0, 0, 0);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v47 & 1;
  }
  uint64_t v36 = v35;
  unint64_t v171 = v34;
  swift_bridgeObjectRelease();
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v37;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    int v38 = swift_dynamicCast();
    uint64_t v39 = sub_1001BCE7C(v38);
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    uint64_t v39 = 0;
    char v40 = 1;
  }
  uint64_t v170 = sub_1001BCD54(v39, v40, 2);
  uint64_t v41 = v36;
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v42;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    int v43 = sub_1001BCD34();
    BOOL v44 = v43 == 0;
    if (v43) {
      unint64_t v45 = v186;
    }
    else {
      unint64_t v45 = 0;
    }
    if (v44) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = v187;
    }
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    unint64_t v45 = 0;
    uint64_t v46 = 0;
  }
  unint64_t v168 = sub_1001BBDD8(v45, v46, 3, 0, 0);
  uint64_t v169 = v49;
  swift_bridgeObjectRelease();
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v50;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    int v51 = sub_1001BCD34();
    uint64_t v52 = sub_1001BCE7C(v51);
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    uint64_t v52 = 0;
    char v53 = 1;
  }
  uint64_t v159 = sub_1001BCD54(v52, v53, 6);
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v54;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    sub_1001BCD34();
    sub_1001BCEAC();
    uint64_t v165 = v55;
    int v57 = v56 ^ 1;
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    uint64_t v165 = 0;
    int v57 = 1;
  }
  LODWORD(v166) = v57;
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v58;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    sub_1001BCD34();
    sub_1001BCEAC();
    uint64_t v161 = v59;
    int v61 = v60 ^ 1;
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    uint64_t v161 = 0;
    int v61 = 1;
  }
  int v160 = v61;
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v62;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    sub_1001BCD34();
    sub_1001BCEAC();
    uint64_t v163 = v63;
    int v65 = v64 ^ 1;
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    uint64_t v163 = 0;
    int v65 = 1;
  }
  int v164 = v65;
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v66;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    int v67 = sub_1001BCD34();
    unint64_t v68 = v186;
    if (!v67) {
      unint64_t v68 = 0;
    }
    unint64_t v158 = v68;
    if (v67) {
      uint64_t v69 = v187;
    }
    else {
      uint64_t v69 = 0;
    }
    uint64_t v167 = v69;
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    unint64_t v158 = 0;
    uint64_t v167 = 0;
  }
  uint64_t v190 = sub_10024E6B0();
  uint64_t v191 = v70;
  sub_10003FC14();
  sub_1001BCD70();
  sub_10003F6F4((uint64_t)&v188);
  if (v192)
  {
    int v71 = sub_1001BCD34();
    if (v71) {
      uint64_t v72 = v186;
    }
    else {
      uint64_t v72 = 0;
    }
    int v73 = v71 ^ 1;
  }
  else
  {
    sub_10018E29C((uint64_t)&v190, (uint64_t *)&unk_100319510);
    uint64_t v72 = 0;
    int v73 = 1;
  }
  int v162 = v73;
  NSString v74 = sub_10024E6A0();
  uint64_t v75 = (char *)objc_msgSend(v74, "skan_version");

  if ((unint64_t)(v75 - 200) < 2)
  {
    sub_1001BCF0C();
    uint64_t v77 = sub_1001BCD54(v165, v166, 1);
    sub_1001BCD54(v163, v164, 4);
    uint64_t v78 = sub_1001BC73C(v185, v28, v171, v41, v77, v170, v168, v169);
LABEL_79:
    uint64_t v91 = v78;
    unint64_t v93 = v79;
LABEL_80:
    swift_bridgeObjectRelease();
    goto LABEL_81;
  }
  if (v75 == (char *)400)
  {
    uint64_t v94 = sub_1001BCD54(v161, v160, 10);
    uint64_t v95 = sub_1001BCD54(v72, v162, 5);
    uint64_t v96 = v95;
    if (v181 == 4)
    {
      uint64_t v181 = v95;
      uint64_t v166 = v94;
      uint64_t v129 = sub_1001BBDD8(v158, v167, 11, 0, 0);
      uint64_t v131 = v130;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001BCF0C();
      uint64_t v126 = sub_1001BCD54(v163, v164, 4);
      uint64_t v181 = v96;
      uint64_t v188 = v126;
      uint64_t v129 = sub_10024F9E0();
      uint64_t v131 = v132;
    }
    uint64_t v133 = sub_1001BCD8C();
    uint64_t v185 = sub_1001BC594(v133, v134, v135, v136, v137, v138, v139, v140, v129, v131);
    unint64_t v142 = v141;
    swift_bridgeObjectRelease();
    unint64_t v93 = v142;
    uint64_t v91 = v185;
    goto LABEL_80;
  }
  if (v75 == (char *)202 || v75 == (char *)300)
  {
    sub_1001BCF0C();
    sub_1001BCD54(v165, v166, 1);
    sub_1001BCD54(v163, v164, 4);
    sub_1001BCD54(v72, v162, 5);
    uint64_t v97 = sub_1001BCD8C();
    uint64_t v78 = sub_1001BC8C0(v97, v98, v99, v100, v101, v102, v103, v104);
    goto LABEL_79;
  }
  if (v75 != (char *)100)
  {
    sub_1001BCE34();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_82:
    swift_bridgeObjectRelease();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_10024E1F0();
    sub_10001B0E8(v109, (uint64_t)qword_10034C0E0);
    uint64_t v110 = sub_10024E1D0();
    os_log_type_t v111 = sub_10024EDF0();
    if (os_log_type_enabled(v110, v111))
    {
      *(_WORD *)sub_10003FD28() = 0;
      sub_10018E5C8((void *)&_mh_execute_header, v112, v113, "SKAdNetwork signature verification: Unable to compose digest.");
      sub_10003FBCC();
    }

    char v47 = 0;
    return v47 & 1;
  }
  swift_bridgeObjectRelease();
  sub_1001BCF0C();
  uint64_t v76 = v41;
  uint64_t v80 = sub_1001BCD54(v165, v166, 1);
  if ((v162 & 1) == 0)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v81 = sub_10024E1F0();
    sub_10001B0E8(v81, (uint64_t)qword_10034C0E0);
    uint64_t v82 = sub_10024E1D0();
    os_log_type_t v83 = sub_10024EDF0();
    if (os_log_type_enabled(v82, v83))
    {
      *(_WORD *)sub_10003FD28() = 0;
      sub_1001BCF3C((void *)&_mh_execute_header, v84, v85, "SKAdNetwork signature verification: Found fidelity type specified for unsupported version");
      sub_10003FBCC();
    }

    uint64_t v76 = v41;
  }
  if ((v164 & 1) == 0)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_10024E1F0();
    sub_10001B0E8(v86, (uint64_t)qword_10034C0E0);
    uint64_t v87 = sub_10024E1D0();
    os_log_type_t v88 = sub_10024EDF0();
    if (os_log_type_enabled(v87, v88))
    {
      *(_WORD *)sub_10003FD28() = 0;
      sub_1001BCF3C((void *)&_mh_execute_header, v89, v90, "SKAdNetwork signature verification: Found source app id specified for unsupported version");
      sub_10003FBCC();
    }

    uint64_t v76 = v41;
  }
  uint64_t v91 = sub_1001BC450(v171, v76, v80, v170, v168, v169);
  unint64_t v93 = v92;
LABEL_81:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024E6E0();
  uint64_t v105 = sub_10024E6C0();
  unint64_t v107 = v106;
  sub_10003FDC8();
  v108();
  if (v107 >> 60 == 15) {
    goto LABEL_82;
  }
  uint64_t v185 = v91;
  if (qword_100308DE0 != -1) {
    swift_once();
  }
  uint64_t v114 = sub_10024E1F0();
  uint64_t v115 = sub_10001B0E8(v114, (uint64_t)qword_10034C0E0);
  swift_bridgeObjectRetain();
  unint64_t v116 = v93;
  uint64_t v117 = sub_10024E1D0();
  os_log_type_t v118 = sub_10024EDF0();
  BOOL v119 = os_log_type_enabled(v117, v118);
  uint64_t v181 = v115;
  if (v119)
  {
    uint64_t v120 = sub_10003FD90();
    uint64_t v184 = v105;
    uint64_t v121 = (uint8_t *)v120;
    uint64_t v122 = sub_10003FD78();
    unint64_t v171 = v107;
    uint64_t v188 = v122;
    *(_DWORD *)uint64_t v121 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v190 = sub_1000F3F3C(v185, v116, &v188);
    sub_10024F100();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v117, v118, "Composed digest: %s", v121, 0xCu);
    swift_arrayDestroy();
    unint64_t v107 = v171;
    sub_10003FBCC();
    uint64_t v105 = v184;
    sub_10003FBCC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v123 = sub_10024DE60();
  sub_1001BC21C(v123, v124, 8, 0xD000000000000037, 0x8000000100283480, &v188);
  sub_1001BCF24();
  unint64_t v125 = v189;
  uint64_t v185 = v188;
  sub_1000473AC(v188, v189);
  sub_10003F7A8();
  sub_10024E4B0();
  unint64_t v183 = v125;
  uint64_t v184 = v105;
  (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v180, v18, v179);
  uint64_t v127 = sub_10024DE60();
  sub_1001BC21C(v127, v128, 7, 0xD00000000000003DLL, 0x80000001002834C0, &v188);
  sub_1001BCF24();
  uint64_t v177 = v188;
  unint64_t v182 = v189;
  sub_1000473AC(v188, v189);
  sub_10003F860();
  sub_10024E470();
  (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v172, v175, v174);
  uint64_t v188 = v184;
  unint64_t v189 = v107;
  if (sub_10024E4A0())
  {
    sub_10003F7F4(v184, v107);
    sub_1001BCE14();
    sub_1001BCEBC();
    uint64_t v143 = sub_1001BCDF0();
    v144(v143);
    uint64_t v145 = sub_1001BCDC8();
    v146(v145);
    char v47 = 1;
  }
  else
  {
    uint64_t v147 = sub_10024E1D0();
    os_log_type_t v148 = sub_10024EDF0();
    if (os_log_type_enabled(v147, v148))
    {
      *(_WORD *)sub_10003FD28() = 0;
      sub_10018E5C8((void *)&_mh_execute_header, v149, v150, "Verification failed");
      sub_10003FBCC();
    }

    sub_1001B9958();
    uint64_t v151 = sub_1000290D0();
    sub_1001BCF5C(v151, v152);
    sub_10003F7F4(v184, v107);
    sub_1001BCE14();
    sub_1001BCEBC();
    uint64_t v153 = sub_1001BCDF0();
    v154(v153);
    uint64_t v155 = sub_1001BCDC8();
    v156(v155);
  }
  return v47 & 1;
}

uint64_t sub_1001BB51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v31 = a13;
  uint64_t v32 = a7;
  uint64_t v29 = a11;
  uint64_t v30 = a5;
  uint64_t v27 = a9;
  uint64_t v28 = a3;
  uint64_t v19 = sub_10024E6F0();
  uint64_t v33 = *(void *)(v19 - 8);
  uint64_t v34 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019524(&qword_1003090E8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100257720;
  *(void *)(v23 + 32) = a1;
  *(void *)(v23 + 40) = a2;
  *(void *)(v23 + 48) = v28;
  *(void *)(v23 + 56) = a4;
  *(void *)(v23 + 64) = v30;
  *(void *)(v23 + 72) = a6;
  *(void *)(v23 + 80) = v32;
  *(void *)(v23 + 88) = a8;
  *(void *)(v23 + 96) = v27;
  *(void *)(v23 + 104) = a10;
  *(void *)(v23 + 112) = v29;
  *(void *)(v23 + 120) = a12;
  *(void *)(v23 + 128) = v31;
  *(void *)(v23 + 136) = a14;
  uint64_t v35 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  sub_10024E5C0();
  swift_bridgeObjectRelease();
  sub_10024E6E0();
  uint64_t v24 = sub_10024E6C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v34);
  return v24;
}

BOOL sub_1001BB724(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  SecKeyRef v8 = sub_1001BB7EC(a5, a6);
  if (v8)
  {
    SecKeyRef v9 = v8;
    type metadata accessor for ECDSASignatureVerifier();
    swift_initStackObject();
    ECDSASignatureVerifier.init(publicKey:)((uint64_t)v9);
    uint64_t v10 = v9;
    BOOL v11 = ECDSASignatureVerifier.verify(data:signature:)(a3, a4);
    swift_release();
  }
  else
  {
    return 0;
  }
  return v11;
}

SecKeyRef sub_1001BB7EC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_10024DE60();
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = v6;
    unint64_t v8 = v5;
    switch(v6 >> 62)
    {
      case 1uLL:
        LODWORD(v9) = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5)) {
          goto LABEL_24;
        }
        uint64_t v9 = (int)v9;
        goto LABEL_7;
      case 2uLL:
        uint64_t v11 = *(void *)(v5 + 16);
        uint64_t v10 = *(void *)(v5 + 24);
        BOOL v12 = __OFSUB__(v10, v11);
        uint64_t v9 = v10 - v11;
        if (!v12) {
          goto LABEL_7;
        }
        goto LABEL_25;
      case 3uLL:
        goto LABEL_12;
      default:
        uint64_t v9 = BYTE6(v6);
LABEL_7:
        if (v9 <= 49)
        {
LABEL_12:
          sub_10003F7F4(v5, v6);
          return 0;
        }
        uint64_t v13 = sub_10024DF30();
        if (__OFSUB__(v13, 49))
        {
          __break(1u);
        }
        else if (sub_10024DF30() >= v13 - 49)
        {
          uint64_t v40 = sub_10024DED0();
          unint64_t v38 = v14;
          sub_100019524(&qword_10030E938);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_100256170;
          *(void *)(inited + 32) = kSecAttrKeyType;
          type metadata accessor for CFString(0);
          *(void *)(inited + 40) = kSecAttrKeyTypeEC;
          uint64_t v39 = v8;
          *(void *)(inited + 64) = v16;
          *(void *)(inited + 72) = kSecAttrKeyClass;
          *(void *)(inited + 104) = v16;
          *(void *)(inited + 80) = kSecAttrKeyClassPublic;
          sub_1001BCB98((unint64_t *)&qword_1003091C0, type metadata accessor for CFString);
          CFStringRef v17 = (id)kSecAttrKeyType;
          CFStringRef v18 = (id)kSecAttrKeyTypeEC;
          CFStringRef v19 = (id)kSecAttrKeyClass;
          CFStringRef v20 = (id)kSecAttrKeyClassPublic;
          unint64_t v8 = v38;
          sub_10024E510();
          CFErrorRef error = 0;
          CFDataRef isa = sub_10024DEF0().super.isa;
          CFDictionaryRef v22 = sub_10024E4E0().super.isa;
          swift_bridgeObjectRelease();
          SecKeyRef v23 = SecKeyCreateWithData(isa, v22, &error);

          if (v23)
          {
            sub_10003F808(v40, v38);
            sub_10003F7F4(v39, v7);
            return v23;
          }
          uint64_t v2 = v39;
          if (qword_100308DE0 == -1)
          {
LABEL_16:
            uint64_t v25 = sub_10024E1F0();
            sub_10001B0E8(v25, (uint64_t)qword_10034C0E0);
            swift_bridgeObjectRetain();
            sub_1000473AC(v40, v8);
            swift_bridgeObjectRetain();
            sub_1000473AC(v40, v8);
            uint64_t v26 = sub_10024E1D0();
            os_log_type_t v27 = sub_10024EE10();
            if (os_log_type_enabled(v26, v27))
            {
              os_log_type_t v36 = v27;
              log = v26;
              uint64_t v28 = swift_slowAlloc();
              uint64_t v41 = swift_slowAlloc();
              *(_DWORD *)uint64_t v28 = 136315650;
              swift_beginAccess();
              CFErrorRef v29 = error;
              if (error)
              {
                type metadata accessor for CFError(0);
                sub_1001BCB98(&qword_10030C4F8, type metadata accessor for CFError);
                uint64_t v30 = sub_10024FB80();
                unint64_t v32 = v31;
              }
              else
              {
                uint64_t v30 = 0;
                unint64_t v32 = 0xE000000000000000;
              }
              sub_1000F3F3C(v30, v32, &v41);
              sub_10024F100();
              swift_bridgeObjectRelease();
              *(_WORD *)(v28 + 12) = 2080;
              swift_bridgeObjectRetain();
              sub_1000F3F3C(a1, a2, &v41);
              sub_10024F100();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v28 + 22) = 2080;
              sub_1000473AC(v40, v8);
              uint64_t v33 = sub_10024DE40();
              unint64_t v35 = v34;
              sub_10003F808(v40, v8);
              sub_1000F3F3C(v33, v35, &v41);
              sub_10024F100();
              swift_bridgeObjectRelease();
              sub_10003F808(v40, v8);
              sub_10003F808(v40, v8);
              _os_log_impl((void *)&_mh_execute_header, log, v36, "    Key creation failed with error: %s\n    Attempted DER Container: %s\n    Attempted Key Data: %s", (uint8_t *)v28, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              sub_10003F7F4(v39, v7);

              sub_10003F808(v40, v8);
            }
            else
            {
              sub_10003F808(v40, v8);
              sub_10003F7F4(v2, v7);
              swift_bridgeObjectRelease_n();
              sub_10003F808(v40, v8);
              sub_10003F808(v40, v8);
            }
            return 0;
          }
LABEL_26:
          swift_once();
          goto LABEL_16;
        }
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
    }
  }
  return 0;
}

unint64_t sub_1001BBDD8(unint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a5)
    {
      a1 = a5;
    }
    else
    {
      LOBYTE(v16) = a3;
      sub_1001B9958();
      a4 = sub_10024FB80();
      a1 = v8;
    }
    uint64_t v9 = qword_100308DE0;
    swift_bridgeObjectRetain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10024E1F0();
    sub_10001B0E8(v10, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10024E1D0();
    os_log_type_t v12 = sub_10024EE10();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a4, a1, &v16);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1001B9958();
    swift_allocError();
    *unint64_t v14 = a3;
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1001BC014(uint64_t a1, char a2, char a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    if (a5)
    {
      unint64_t v8 = a5;
    }
    else
    {
      LOBYTE(v17) = a3;
      sub_1001B9958();
      a4 = sub_10024FB80();
      unint64_t v8 = v9;
    }
    uint64_t v10 = qword_100308DE0;
    swift_bridgeObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10024E1F0();
    sub_10001B0E8(v11, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain();
    os_log_type_t v12 = sub_10024E1D0();
    os_log_type_t v13 = sub_10024EE10();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)sub_10003FD90();
      uint64_t v17 = sub_10003FD78();
      *(_DWORD *)unint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a4, v8, &v17);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s", v14, 0xCu);
      swift_arrayDestroy();
      sub_10003FBCC();
      sub_10003FBCC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1001B9958();
    sub_1000290D0();
    *uint64_t v15 = a3;
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1001BC21C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  if (a2 >> 60 == 15)
  {
    if (a5)
    {
      unint64_t v8 = a5;
    }
    else
    {
      LOBYTE(v17) = a3;
      sub_1001B9958();
      a4 = sub_10024FB80();
      unint64_t v8 = v10;
    }
    uint64_t v11 = qword_100308DE0;
    swift_bridgeObjectRetain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10024E1F0();
    sub_10001B0E8(v12, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain();
    os_log_type_t v13 = sub_10024E1D0();
    os_log_type_t v14 = sub_10024EE10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      sub_1000F3F3C(a4, v8, &v17);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1001B9958();
    swift_allocError();
    *uint64_t v16 = a3;
    return swift_willThrow();
  }
  else
  {
    *a6 = a1;
    a6[1] = a2;
    return sub_1000473AC(a1, a2);
  }
}

uint64_t sub_1001BC450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100019524(&qword_1003090E8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1002642A0;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  *(void *)(v10 + 48) = sub_10024F9E0();
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = sub_10024F9E0();
  *(void *)(v10 + 72) = v12;
  *(void *)(v10 + 80) = a5;
  *(void *)(v10 + 88) = a6;
  swift_bridgeObjectRetain();
  *(void *)(v10 + 96) = sub_10024F9E0();
  *(void *)(v10 + 104) = v13;
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  uint64_t v14 = sub_10024E5C0();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1001BC594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100019524(&qword_1003090E8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1002576F0;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  *(void *)(v15 + 48) = a3;
  *(void *)(v15 + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v15 + 64) = sub_10024F9E0();
  *(void *)(v15 + 72) = v16;
  *(void *)(v15 + 80) = sub_10024F9E0();
  *(void *)(v15 + 88) = v17;
  *(void *)(v15 + 96) = a7;
  *(void *)(v15 + 104) = a8;
  *(void *)(v15 + 112) = a9;
  *(void *)(v15 + 120) = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v15 + 128) = sub_10024F9E0();
  *(void *)(v15 + 136) = v18;
  *(void *)(v15 + 144) = sub_10024F9E0();
  *(void *)(v15 + 152) = v19;
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  uint64_t v20 = sub_10024E5C0();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1001BC73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019524(&qword_1003090E8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100257720;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  *(void *)(v14 + 48) = a3;
  *(void *)(v14 + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v14 + 64) = sub_10024F9E0();
  *(void *)(v14 + 72) = v15;
  *(void *)(v14 + 80) = sub_10024F9E0();
  *(void *)(v14 + 88) = v16;
  *(void *)(v14 + 96) = a7;
  *(void *)(v14 + 104) = a8;
  swift_bridgeObjectRetain();
  *(void *)(v14 + 112) = sub_10024F9E0();
  *(void *)(v14 + 120) = v17;
  *(void *)(v14 + 128) = sub_10024F9E0();
  *(void *)(v14 + 136) = v18;
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  uint64_t v19 = sub_10024E5C0();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1001BC8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019524(&qword_1003090E8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1002576F0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  *(void *)(v14 + 48) = a3;
  *(void *)(v14 + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v14 + 64) = sub_10024F9E0();
  *(void *)(v14 + 72) = v15;
  *(void *)(v14 + 80) = sub_10024F9E0();
  *(void *)(v14 + 88) = v16;
  *(void *)(v14 + 96) = a7;
  *(void *)(v14 + 104) = a8;
  swift_bridgeObjectRetain();
  *(void *)(v14 + 112) = sub_10024F9E0();
  *(void *)(v14 + 120) = v17;
  *(void *)(v14 + 128) = sub_10024F9E0();
  *(void *)(v14 + 136) = v18;
  *(void *)(v14 + 144) = sub_10024F9E0();
  *(void *)(v14 + 152) = v19;
  sub_100019524(&qword_100309410);
  sub_10003F8AC();
  uint64_t v20 = sub_10024E5C0();
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1001BCA70(char a1)
{
  unint64_t result = 0xD000000000000043;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000041;
      break;
    case 2:
      unint64_t result = 0xD000000000000041;
      break;
    case 3:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000048;
      break;
    case 6:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000039;
      break;
    case 9:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000047;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001BCB90()
{
  return sub_1001BCA70(*v0);
}

uint64_t sub_1001BCB98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SKANSignatureError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BCCACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SKANSignatureError()
{
  return &type metadata for SKANSignatureError;
}

unint64_t sub_1001BCCE8()
{
  unint64_t result = qword_100317968[0];
  if (!qword_100317968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100317968);
  }
  return result;
}

uint64_t sub_1001BCD34()
{
  return swift_dynamicCast();
}

uint64_t sub_1001BCD54(uint64_t a1, char a2, char a3)
{
  return sub_1001BC014(a1, a2, a3, 0, 0);
}

double sub_1001BCD70()
{
  return sub_1001616DC(v1 - 160, v0);
}

uint64_t sub_1001BCD8C()
{
  return *(void *)(v0 - 240);
}

uint64_t sub_1001BCDC8()
{
  return *(void *)(v0 - 280);
}

uint64_t sub_1001BCDF0()
{
  return *(void *)(v0 - 344);
}

uint64_t sub_1001BCE14()
{
  uint64_t v2 = *(void *)(v0 - 304);
  unint64_t v3 = *(void *)(v0 - 264);
  return sub_10003F808(v2, v3);
}

uint64_t sub_1001BCE34()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BCE4C(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_1001BCE7C(int a1)
{
  if (a1) {
    return *(void *)(v1 - 176);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001BCE94()
{
  return sub_10003F7F4(v0, v1);
}

uint64_t sub_1001BCEBC()
{
  uint64_t v2 = *(void *)(v0 - 240);
  unint64_t v3 = *(void *)(v0 - 256);
  return sub_10003F808(v2, v3);
}

void sub_1001BCED4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1001BCEF4()
{
  return sub_10003F7F4(v1, v0);
}

uint64_t sub_1001BCF0C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BCF24()
{
  return sub_10003F7F4(v1, v0);
}

void sub_1001BCF3C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1001BCF5C(uint64_t a1, unsigned char *a2)
{
  *a2 = 7;
  return swift_willThrow();
}

uint64_t sub_1001BCF7C()
{
  sub_100019524(&qword_100313A38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100268770;
  *(void *)(inited + 32) = 0x6853796C696D6166;
  *(void *)(inited + 40) = 0xEF656C6261657261;
  *(NSNumber *)(inited + 48) = sub_10024EB60();
  *(void *)(inited + 56) = 0xD000000000000014;
  *(void *)(inited + 64) = 0x8000000100283500;
  sub_1000184A4(0, qword_10030ED68);
  *(NSNumber *)(inited + 72) = sub_10024EF30(0);
  strcpy((char *)(inited + 80), "hasPromoOffer");
  *(_WORD *)(inited + 94) = -4864;
  *(NSNumber *)(inited + 96) = sub_10024EF30(0);
  *(void *)(inited + 104) = 0xD000000000000011;
  *(void *)(inited + 112) = 0x8000000100283520;
  if (*(void *)(v0 + 56) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  *(NSNumber *)(inited + 120) = sub_10024EC50();
  *(void *)(inited + 128) = 0xD000000000000015;
  *(void *)(inited + 136) = 0x8000000100283540;
  *(NSNumber *)(inited + 144) = sub_10024EF40(0);
  *(void *)(inited + 152) = 1701869940;
  *(void *)(inited + 160) = 0xE400000000000000;
  NSString v2 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  *(void *)(inited + 168) = v2;
  sub_1000184A4(0, (unint64_t *)&qword_100313A30);
  uint64_t v3 = sub_10024E510();
  type metadata accessor for OctaneSubscription();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    swift_retain();
    Class isa = sub_10024EB60().super.super.isa;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10020D504((uint64_t)isa, 0xD000000000000014, 0x8000000100283500, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    if (*(void *)(v5 + 144) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_10024F6F0();
      swift_bridgeObjectRelease();
    }
    Class v8 = sub_10024EC50().super.super.isa;
    uint64_t v9 = swift_isUniquelyReferenced_nonNull_native();
    sub_10020D504((uint64_t)v8, 0xD000000000000015, 0x8000000100283540, v9);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v3;
}

unint64_t sub_1001BD2F8(char a1)
{
  if (a1) {
    return 0xD000000000000021;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_1001BD334(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1001BD35C(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v48 = a5;
  uint64_t v49 = a8;
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  sub_10002F9C8();
  uint64_t v47 = v9;
  __chkstk_darwin(v10, v11);
  sub_1000589AC();
  uint64_t v57 = v12;
  swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  uint64_t v58 = v13;
  uint64_t v16 = __chkstk_darwin(v14, v15);
  int v51 = (char *)&v43 - v17;
  __chkstk_darwin(v16, v18);
  sub_1000589AC();
  uint64_t v52 = v19;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  uint64_t v50 = v21;
  __chkstk_darwin(v22, v23);
  sub_1000AC748();
  uint64_t v46 = v24;
  sub_1000AC774();
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v43 - v27;
  uint64_t v29 = sub_10024EC90();
  if (!v29) {
    return sub_10024EAF0();
  }
  Swift::Int v30 = v29;
  uint64_t v44 = AssociatedTypeWitness;
  uint64_t v61 = sub_10024F500();
  uint64_t v53 = sub_10024F510();
  sub_10024F440(v30);
  unint64_t v45 = v28;
  uint64_t result = sub_10024EC80();
  if (v30 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v32 = (void (**)(char *))(v58 + 16);
    uint64_t v54 = v58 + 8;
    uint64_t v58 = a6;
    uint64_t v33 = v51;
    unint64_t v34 = v45;
    while (1)
    {
      unint64_t v35 = (void (*)(char *, void))sub_10024ED50();
      (*v32)(v33);
      v35(v60, 0);
      uint64_t v36 = v59;
      v55(v33, v57);
      if (v36) {
        break;
      }
      uint64_t v59 = 0;
      uint64_t v37 = sub_1001BEC0C();
      v38(v37);
      sub_10024F4D0();
      sub_10024ECB0();
      if (!--v30)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v46, v34, v44);
        sub_10024F2B0();
        uint64_t v39 = sub_1001BECD0();
        v40(v39);
        return v61;
      }
    }
    uint64_t v41 = sub_1001BEC0C();
    v42(v41);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v44);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v49, v57, v48);
  }
  return result;
}

uint64_t Heap.init()()
{
  sub_10024EAF0();
  return sub_10024F430();
}

uint64_t Heap.remove(value:)()
{
  uint64_t v1 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v10 - v6;
  v10[1] = *v0;
  sub_10024F510();
  swift_getWitnessTable();
  sub_10024ED40();
  int v8 = v11;
  if ((v11 & 1) == 0)
  {
    Heap._remove(index:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v1);
  }
  return v8 ^ 1u;
}

void Heap.append(_:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v24 = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  sub_10002F9C8();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_1000AC748();
  uint64_t v23 = v8;
  sub_1000AC774();
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, v1, v3);
  uint64_t v14 = sub_10024F510();
  uint64_t v22 = v12;
  v20[1] = v14;
  sub_10024F4D0();
  if (v13 >= 1)
  {
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v15 = v23;
    do
    {
      uint64_t v16 = v22;
      _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
      unint64_t v17 = v13 - 1;
      _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
      char v18 = sub_10024E5D0();
      uint64_t v19 = *v21;
      (*v21)(v15, v3);
      v19((uint64_t)v16, v3);
      if ((v18 & 1) == 0) {
        break;
      }
      unint64_t v25 = (unint64_t)(v13 - 1) >> 1;
      uint64_t v26 = v13;
      swift_getWitnessTable();
      sub_1001BEC40();
      sub_10024E650();
      uint64_t v13 = (unint64_t)(v13 - 1) >> 1;
    }
    while (v17 > 1);
  }
  sub_10003C8C8();
}

void Heap.removeRoot()()
{
}

uint64_t Heap.comparator(_:_:)()
{
  return sub_10024E5D0() & 1;
}

Swift::Int __swiftcall Heap.parentIndex(_:)(Swift::Int result)
{
  if (!__OFSUB__(result, 1)) {
    return (result - 1) / 2;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall Heap.leftIndex(_:)(Swift::Int result)
{
  if (result + 0x4000000000000000 >= 0) {
    return (2 * result) | 1;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall Heap.rightIndex(_:)(Swift::Int result)
{
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL v1 = __OFADD__(2 * result, 2);
  uint64_t result = 2 * result + 2;
  if (v1) {
LABEL_5:
  }
    __break(1u);
  return result;
}

Swift::Void __swiftcall Heap._heapify(_:)(Swift::Int a1)
{
  sub_10003C984();
  Swift::Int v2 = v1;
  uint64_t v27 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  sub_10002F9C8();
  uint64_t v6 = v5;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v24 - v12;
  if (v11 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v14 = Heap.rightIndex(_:)(v2);
  uint64_t v15 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  if (__OFSUB__(v15, 1))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  Swift::Int v26 = v14;
  Swift::Int v16 = v2;
  if (v15 - 1 >= ((2 * v2) | 1))
  {
    sub_1001BEC98();
    sub_1001BEC98();
    int v25 = sub_1001BECB0();
    unint64_t v17 = *(void (**)(uint64_t))(v6 + 8);
    uint64_t v18 = sub_1001BECD0();
    v17(v18);
    ((void (*)(char *, uint64_t))v17)(v13, v4);
    if (v25) {
      Swift::Int v16 = (2 * v2) | 1;
    }
    else {
      Swift::Int v16 = v2;
    }
  }
  uint64_t v19 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  if (__OFSUB__(v19, 1)) {
    goto LABEL_16;
  }
  Swift::Int v20 = v26;
  if (v19 - 1 >= v26)
  {
    sub_1001BEC98();
    sub_1001BEC98();
    char v21 = sub_1001BECB0();
    uint64_t v22 = *(void (**)(uint64_t))(v6 + 8);
    uint64_t v23 = sub_1001BECD0();
    v22(v23);
    ((void (*)(char *, uint64_t))v22)(v13, v4);
    if (v21) {
      Swift::Int v16 = v20;
    }
  }
  if (v16 != v2)
  {
    Swift::Int v28 = v16;
    Swift::Int v29 = v2;
    sub_10024F510();
    swift_getWitnessTable();
    sub_1001BEC40();
    sub_10024E650();
    Heap._heapify(_:)(v16);
  }
  sub_10003C8C8();
}

void Heap._heapRootify(index:key:)()
{
  sub_10003C984();
  Swift::Int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int64_t v7 = v6;
  uint64_t v8 = *(void *)(v2 + 16);
  sub_10002F9C8();
  uint64_t v10 = v9;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v26 - v17;
  swift_retain();
  _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
  uint64_t v29 = *(void *)(v3 + 24);
  LOBYTE(v3) = sub_10024E5D0();
  swift_release();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v28 = v10 + 8;
  v27(v18, v8);
  if (v3)
  {
    sub_10024F670();
    __break(1u);
  }
  else
  {
    uint64_t v19 = sub_10024F510();
    sub_10024F470();
    uint64_t v20 = *v1;
    unint64_t v21 = sub_1001BECD0();
    sub_100117F14(v21, v22);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 24))(v20+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v7, v5, v8);
    uint64_t v26 = v19;
    debugOnly(_:)(v19);
    if (v7 >= 1)
    {
      do
      {
        swift_retain();
        _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
        unint64_t v23 = v7 - 1;
        _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
        char v24 = sub_10024E5D0();
        swift_release();
        int v25 = v27;
        v27(v15, v8);
        v25(v18, v8);
        if ((v24 & 1) == 0) {
          break;
        }
        unint64_t v30 = (unint64_t)(v7 - 1) >> 1;
        int64_t v31 = v7;
        swift_getWitnessTable();
        sub_1001BEC40();
        sub_10024E650();
        int64_t v7 = (unint64_t)(v7 - 1) >> 1;
      }
      while (v23 > 1);
    }
    sub_10003C8C8();
  }
}

void Heap._remove(index:)()
{
  sub_10003C984();
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v2 + 16);
  sub_10002F9C8();
  uint64_t v10 = v9;
  __chkstk_darwin(v11, v12);
  sub_1000AC748();
  uint64_t v44 = v13;
  sub_1000AC774();
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v39 - v16;
  sub_1000AC774();
  __chkstk_darwin(v18, v19);
  unint64_t v21 = (char *)&v39 - v20;
  swift_retain();
  _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  sub_1001BEC80();
  if (v1 >= 1)
  {
    uint64_t v41 = v3;
    uint64_t v42 = v21;
    uint64_t v43 = v7;
    sub_1001BEC28();
    swift_retain();
    _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
    sub_1001BEC80();
    uint64_t v22 = v0;
    uint64_t v23 = v10;
    if (v1 == 1)
    {
LABEL_5:
      sub_10024F510();
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_1001BEC50();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v8);
LABEL_6:
      uint64_t v26 = v43;
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v43, v42, v8);
      sub_1000195B4(v26, 0, 1, v8);
      sub_10003C8C8();
      return;
    }
    sub_1001BEC28();
    swift_retain();
    _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
    sub_1001BEC80();
    if (__OFSUB__(v1, 1))
    {
      __break(1u);
    }
    else
    {
      sub_1001BEC28();
      char v24 = sub_10024E680();
      int v25 = *(void (**)(void))(v10 + 8);
      sub_10017EBA0();
      v25();
      sub_10017EBA0();
      v25();
      if (v24) {
        goto LABEL_5;
      }
      uint64_t v32 = *v22;
      swift_retain();
      unint64_t v40 = v5;
      _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
      swift_retain();
      uint64_t v33 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
      swift_release();
      if (!__OFSUB__(v33, 1))
      {
        _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
        char v34 = sub_10024E5D0();
        swift_release();
        sub_10017EBA0();
        v25();
        sub_10017EBA0();
        v25();
        swift_retain();
        _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
        sub_1001BEC80();
        BOOL v35 = __OFSUB__(v32, 1);
        if ((v34 & 1) == 0)
        {
          if (!v35)
          {
            sub_1001BEC28();
            Heap._heapRootify(index:key:)();
            sub_10017EBA0();
            v25();
            sub_10024F510();
            swift_getWitnessTable();
            swift_getWitnessTable();
            sub_1001BEC50();
            sub_10017EBA0();
            v25();
            goto LABEL_6;
          }
          goto LABEL_22;
        }
        if (!v35)
        {
          sub_1001BEC28();
          uint64_t v36 = sub_10024F510();
          sub_10024F470();
          uint64_t v37 = *v22;
          Swift::Int v38 = v40;
          sub_100117F14(v40, *v22);
          (*(void (**)(unint64_t, char *, uint64_t))(v23 + 40))(v37+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v38, v17, v8);
          debugOnly(_:)(v36);
          swift_getWitnessTable();
          swift_getWitnessTable();
          sub_10024EDD0();
          sub_10017EBA0();
          v25();
          Heap._heapify(_:)(v38);
          goto LABEL_6;
        }
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  sub_10003C8C8();
  sub_1000195B4(v27, v28, v29, v30);
}

void Heap.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0();
  if (v6 >= 1)
  {
    uint64_t v52 = a1;
    __chkstk_darwin(v6, v7);
    _OWORD v45[2] = a2;
    v45[3] = a3;
    uint64_t v8 = sub_10024F510();
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v11 = sub_1001BD35C((void (*)(char *, uint64_t))sub_1001BEB9C, (uint64_t)v45, v8, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
    swift_release();
    int64_t v12 = *(void *)(v11 + 16);
    int64_t v51 = v12;
    if (v12)
    {
      uint64_t v52 = (uint64_t)_swiftEmptyArrayStorage;
      sub_1000393D4(0, v12, 0);
      uint64_t v13 = (void *)v52;
      uint64_t v14 = v11;
      uint64_t v15 = v11 + 40;
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_10024E790();
        swift_bridgeObjectRelease();
        uint64_t v52 = (uint64_t)v13;
        unint64_t v18 = v13[2];
        unint64_t v17 = v13[3];
        if (v18 >= v17 >> 1)
        {
          sub_1000393D4((char *)(v17 > 1), v18 + 1, 1);
          uint64_t v13 = (void *)v52;
        }
        v15 += 16;
        v13[2] = v18 + 1;
        v13[v18 + 4] = v16;
        --v12;
      }
      while (v12);
      uint64_t v11 = v14;
      int64_t v12 = v51;
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
    }
    Swift::Int v19 = sub_1000B41A8(v13);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      uint64_t v47 = a1;
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      if (v12)
      {
        uint64_t v54 = _swiftEmptyArrayStorage;
        sub_1000389BC();
        uint64_t v22 = 0;
        uint64_t v23 = v54;
        uint64_t v46 = v11;
        uint64_t v50 = (char *)(v11 + 32);
        do
        {
          char v24 = (uint64_t *)&v50[16 * v22];
          uint64_t v26 = *v24;
          int v25 = (void *)v24[1];
          swift_bridgeObjectRetain_n();
          uint64_t v27 = sub_10024E790();
          uint64_t v28 = v25;
          while (v27 < v19)
          {
            if (sub_10024E790())
            {
              uint64_t v52 = v26;
              unint64_t v53 = (unint64_t)v28;
              v56._countAndFlagsBits = sub_1001BEC74();
              sub_10024E800(v56);
            }
            else
            {
              uint64_t v52 = 32;
              unint64_t v53 = 0xE100000000000000;
              v55._countAndFlagsBits = v26;
              v55._object = v28;
              sub_10024E800(v55);
              swift_bridgeObjectRelease();
            }
            uint64_t v26 = v52;
            uint64_t v28 = (void *)v53;
            uint64_t v27 = sub_10024E790();
          }
          swift_bridgeObjectRelease();
          uint64_t v54 = v23;
          unint64_t v29 = v23[2];
          if (v29 >= v23[3] >> 1)
          {
            sub_1000389BC();
            uint64_t v23 = v54;
          }
          ++v22;
          v23[2] = v29 + 1;
          uint64_t v30 = &v23[2 * v29];
          v30[4] = v26;
          v30[5] = v28;
        }
        while (v22 != v51);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = _swiftEmptyArrayStorage;
      }
      uint64_t v52 = 10;
      unint64_t v53 = 0xE100000000000000;
      v57._countAndFlagsBits = sub_1001BEC74();
      uint64_t v46 = sub_10024E8D0(v57, v19);
      int64_t v31 = v23[2];
      uint64_t v50 = v32;
      int64_t v51 = v31;
      if (!v31)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v63._countAndFlagsBits = 10;
        v63._object = (void *)0xE100000000000000;
        sub_10024E800(v63);
        return;
      }
      Swift::Int v33 = 0;
      char v34 = (void **)(v23 + 5);
      while (1)
      {
        uint64_t v36 = (uint64_t)*(v34 - 1);
        BOOL v35 = *v34;
        swift_bridgeObjectRetain();
        sub_1001BEA34(v33, v47, v19, v48, v49);
        Swift::Int v38 = v37;
        v58._countAndFlagsBits = sub_1001BEC74();
        v59._countAndFlagsBits = sub_10024E8D0(v58, v39);
        sub_10024E800(v59);
        swift_bridgeObjectRelease();
        v60._countAndFlagsBits = v36;
        v60._object = v35;
        sub_10024E800(v60);
        swift_bridgeObjectRelease();
        v61._countAndFlagsBits = sub_1001BEC74();
        v62._countAndFlagsBits = sub_10024E8D0(v61, v38);
        sub_10024E800(v62);
        swift_bridgeObjectRelease();
        double v40 = log2((double)(v33 + 1));
        double v41 = v40;
        if ((~*(void *)&v40 & 0x7FF0000000000000) == 0) {
          break;
        }
        if (v40 <= -9.22337204e18) {
          goto LABEL_38;
        }
        if (v40 >= 9.22337204e18) {
          goto LABEL_39;
        }
        Swift::Int v42 = v33 + 2;
        double v43 = log2((double)(v33 + 2));
        if ((~*(void *)&v43 & 0x7FF0000000000000) == 0) {
          goto LABEL_40;
        }
        if (v43 <= -9.22337204e18) {
          goto LABEL_41;
        }
        if (v43 >= 9.22337204e18) {
          goto LABEL_42;
        }
        if (*(uint64_t *)&v41 == *(uint64_t *)&v43)
        {
          v44._countAndFlagsBits = v46;
          v44._object = v50;
        }
        else
        {
          v44._countAndFlagsBits = 10;
          v44._object = (void *)0xE100000000000000;
        }
        sub_10024E800(v44);
        v34 += 2;
        ++v33;
        if (v42 - 1 == v51) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1001BE964@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v3 = __chkstk_darwin(a1, a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_10024E700();
  *a2 = result;
  a2[1] = v7;
  return result;
}

Swift::Int sub_1001BEA34(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = (2 * result) | 1;
  Swift::Int v10 = Heap.rightIndex(_:)(result);
  if (v9 >= _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0()) {
    goto LABEL_7;
  }
  uint64_t result = sub_1001BEA34(v9, a2, a3, a4, a5);
  Swift::Int v12 = result + v11;
  if (__OFADD__(result, v11))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  Swift::Int v13 = v12 + a3;
  if (!__OFADD__(v12, a3)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_7:
  Swift::Int v13 = 0;
LABEL_8:
  if (v10 >= _s25ASOctaneSupportXPCService4HeapV19underestimatedCountSivg_0()) {
    return v13;
  }
  uint64_t result = sub_1001BEA34(v10, a2, a3, a4, a5);
  if (!__OFADD__(result, v14))
  {
    if (__OFADD__(result + v14, a3)) {
      __break(1u);
    }
    return v13;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1001BEB24(uint64_t a1)
{
  Heap.debugDescription.getter(*v1, *(void *)(a1 + 16), *(void *)(a1 + 24));
}

void HeapIterator.next()()
{
  type metadata accessor for Heap();
  Heap.removeRoot()();
}

uint64_t sub_1001BEB84(uint64_t a1)
{
  return Heap.underestimatedCount.getter(*v1, *(void *)(a1 + 16));
}

uint64_t sub_1001BEB9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001BE964(a1, a2);
}

uint64_t type metadata accessor for Heap()
{
  return sub_10002F7A4();
}

uint64_t sub_1001BEBD4()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for HeapIterator()
{
  return sub_10002F7A4();
}

uint64_t sub_1001BEC0C()
{
  return v0;
}

uint64_t sub_1001BEC28()
{
  return _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
}

uint64_t sub_1001BEC40()
{
  return v0 - 88;
}

uint64_t sub_1001BEC50()
{
  return sub_10024EDD0();
}

uint64_t sub_1001BEC74()
{
  return 32;
}

uint64_t sub_1001BEC80()
{
  return swift_release();
}

uint64_t sub_1001BEC98()
{
  return _s25ASOctaneSupportXPCService4HeapVyxSicig_0();
}

uint64_t sub_1001BECB0()
{
  return sub_10024E5D0();
}

uint64_t sub_1001BECD0()
{
  return v0;
}

void *sub_1001BECDC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10024F6F0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)sub_10024F380() : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1001BEE04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v8 = (id)sub_10024F380();
LABEL_7:
        uint64_t v9 = v8;
        unint64_t v10 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_20;
        }
        if (sub_1000D427C() == a2 && v11 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_15:
          sub_10024F400();
          sub_10024F490();
          sub_10024F4A0();
          sub_10024F420();
          goto LABEL_16;
        }
        char v13 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v13) {
          goto LABEL_15;
        }

LABEL_16:
        ++v7;
        if (v10 == v6) {
          goto LABEL_22;
        }
      }
      if (v7 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v6 = sub_10024F6F0();
      if (!v6) {
        goto LABEL_22;
      }
    }
    id v8 = *(id *)(a1 + 8 * v7 + 32);
    goto LABEL_7;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1001BEFA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = a1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      unint64_t v9 = 0;
      uint64_t v17 = v7 & 0xFFFFFFFFFFFFFF8;
      unint64_t v18 = v7 & 0xC000000000000001;
      while (v18)
      {
        unint64_t v10 = v7;
        id v11 = (id)sub_10024F380();
LABEL_7:
        unint64_t v7 = (unint64_t)v11;
        unint64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_20;
        }
        if (sub_1000D427C() == a4 && v13 == a5)
        {
          swift_bridgeObjectRelease();
LABEL_15:
          sub_10024F400();
          sub_10024F490();
          sub_10024F4A0();
          sub_10024F420();
          goto LABEL_16;
        }
        char v15 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_15;
        }

LABEL_16:
        ++v9;
        unint64_t v7 = v10;
        if (v12 == v8) {
          goto LABEL_22;
        }
      }
      if (v9 < *(void *)(v17 + 16)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v8 = sub_10024F6F0();
      if (!v8) {
        goto LABEL_22;
      }
    }
    unint64_t v10 = v7;
    id v11 = *(id *)(v7 + 8 * v9 + 32);
    goto LABEL_7;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001BF15C(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D6908;
  v7._object = a2;
  Swift::Int v4 = sub_10024F790(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001BF1B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6580578 && a2 == 0xE300000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E726566666FLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001BF29C(char a1)
{
  if (a1) {
    return 0x6D614E726566666FLL;
  }
  else {
    return 6580578;
  }
}

uint64_t sub_1001BF2D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = sub_100019524(&qword_100317B78);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1001C1CB0();
  sub_10024FD40();
  char v15 = 0;
  sub_10024F940();
  if (!v5)
  {
    char v14 = 1;
    sub_10024F940();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1001BF444(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100317B68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  sub_10001C2A8(a1, a1[3]);
  sub_1001C1CB0();
  sub_10024FD20();
  if (v1)
  {
    sub_10001C2EC((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_10024F830();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_10024F830();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1001BF64C()
{
  return sub_1001BF29C(*v0);
}

uint64_t sub_1001BF654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001BF1B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001BF67C(uint64_t a1)
{
  unint64_t v2 = sub_1001C1CB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BF6B8(uint64_t a1)
{
  unint64_t v2 = sub_1001C1CB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BF6F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001BF444(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1001BF724(void *a1)
{
  return sub_1001BF2D0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1001BF744@<X0>(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100212134();
  uint64_t v6 = sub_100161540(0x6E6F69746361, 0xE600000000000000, v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v8) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = (void *)0xE000000000000000;
  }
  char v11 = sub_1001BF15C(v9, v10);
  if (v11 == 2)
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10024E1F0();
    sub_10001B0E8(v13, (uint64_t)qword_10034C0E0);
    char v14 = (void *)sub_10024E1D0();
    os_log_type_t v15 = sub_10024EE10();
    if (sub_1000C200C(v15))
    {
      uint64_t v16 = (_WORD *)sub_10003FD28();
      sub_1000C2158(v16);
      sub_1000C20B0((void *)&_mh_execute_header, v17, v18, "Invalid action");
      sub_1000C211C();
    }

    sub_1000CB5C8(0x2064696C61766E49, 0xEE006E6F69746361, 6, (uint64_t)&v27);
    uint64_t v19 = v27;
    char v20 = v28;
    uint64_t v21 = v29;
    uint64_t v22 = v30;
    unint64_t v23 = v31 | ((unint64_t)WORD2(v31) << 32) | ((unint64_t)BYTE6(v31) << 48);
    sub_100022D68();
    sub_1001C1F5C();
    uint64_t result = sub_100022D50();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 21;
    *(_WORD *)(result + 40) = (_WORD)v14;
    *(_WORD *)(result + 42) = v2;
    char v25 = 2;
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  else
  {
    if (v11) {
      sub_1001C02AC(a1, (uint64_t)&v27);
    }
    else {
      sub_1001BF940((uint64_t)a1, v12);
    }
    uint64_t v19 = v30;
    char v20 = v31;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    unint64_t v23 = v34 | ((unint64_t)(v35 | (v36 << 16)) << 32);
    uint64_t result = v27;
    uint64_t v26 = v28;
    char v25 = v29;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v26;
  *(unsigned char *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 62) = BYTE6(v23);
  *(_WORD *)(a2 + 60) = WORD2(v23);
  *(_DWORD *)(a2 + 56) = v23;
  return result;
}

void sub_1001BF940(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_100216970();
  sub_1000458B4((uint64_t)v85, (uint64_t)v116, &qword_10030ED40);
  sub_1000458B4((uint64_t)v116, (uint64_t)v117, &qword_10030ED40);
  if (sub_1000BFAD4((uint64_t)v117) != 1)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1000F2780(v8, (uint64_t)__src);
    memcpy(__dst, __src, 0x139uLL);
    debugOnly(_:)(__dst);
    sub_1000458B4((uint64_t)v86, (uint64_t)v77, &qword_10030A860);
    sub_1000C12F4(v77);
    sub_1000458B4((uint64_t)__dst, (uint64_t)v86, &qword_10030A860);
  }
  sub_1000458B4((uint64_t)v85, (uint64_t)__dst, &qword_10030ED40);
  sub_1000458B4((uint64_t)__dst, (uint64_t)v77, &qword_10030ED40);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (sub_1000BFAD4((uint64_t)v77) == 1 || (uint64_t v10 = v80) == 0)
  {
    if (qword_100308DE0 == -1) {
      goto LABEL_20;
    }
    goto LABEL_54;
  }
  uint64_t v11 = v79;
  Swift::String v62 = (void *)(v2 + 88);
  sub_10001C2A8((void *)(v2 + 88), *(void *)(v2 + 112));
  sub_1001C15F0(__dst, sub_1001C17EC);
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1000A118C();
  unint64_t v13 = (unint64_t)sub_1001BEE04(v12, v11, v10);
  if ((v13 & 0x8000000000000000) != 0 || (v13 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (uint64_t)sub_1000192E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  __src[0] = v14;
  sub_1001C0828(__src);
  swift_bridgeObjectRelease();
  uint64_t v15 = __src[0];
  if ((__src[0] & 0x8000000000000000) == 0 && (__src[0] & 0x4000000000000000) == 0)
  {
    uint64_t v16 = *(void *)(__src[0] + 16);
    swift_retain();
    if (v16) {
      goto LABEL_11;
    }
LABEL_30:
    sub_1001C1F78();
    sub_1001C15F0(__dst, sub_1000BFCE0);
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_10024E1F0();
    sub_10001B0E8(v34, (uint64_t)qword_10034C0E0);
    uint64_t v26 = (void *)sub_10024E1D0();
    os_log_type_t v35 = sub_10024EE10();
    uint64_t v9 = _swiftEmptyArrayStorage;
    if (!sub_1000C200C(v35)) {
      goto LABEL_35;
    }
    unsigned __int8 v36 = (_WORD *)sub_10003FD28();
    sub_1000C2158(v36);
    int64_t v31 = "Failed to find latest deferred transaction to confirm in-app buy request";
    goto LABEL_34;
  }
  swift_retain();
  uint64_t v16 = sub_10024F6F0();
  if (!v16) {
    goto LABEL_30;
  }
LABEL_11:
  if ((v15 & 0xC000000000000001) != 0) {
    id v17 = (id)sub_10024F380();
  }
  else {
    id v17 = *(id *)(v15 + 32);
  }
  uint64_t v18 = v17;
  sub_1000D847C();
  sub_1000ACC78();
  if (v19)
  {
LABEL_15:
    sub_1001C1F78();
    id v20 = v18;
    sub_1000D63A4(1u);
    type metadata accessor for AllSetDialog();
    swift_allocObject();
    uint64_t v21 = sub_100150F8C();
    char v65 = 1;
    int v64 = *(_DWORD *)v67;
    HIBYTE(v64) = v67[3];
    int v63 = *(_DWORD *)&v66[3];
    LOBYTE(v63) = v66[3];
    sub_1000458B4((uint64_t)v84, (uint64_t)&v70, &qword_10030A860);
    uint64_t v61 = v21;
    if (sub_1000C066C((uint64_t)&v70) == 1)
    {
LABEL_16:
      sub_1001C15F0(__dst, sub_1000BFCE0);
      uint64_t v22 = 0;
      goto LABEL_17;
    }
    if (v74 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v44 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v44 & 1) == 0)
      {
        sub_1000458B4((uint64_t)v84, (uint64_t)__src, &qword_10030A860);
        if ((__src[39] & 1) == 0) {
          goto LABEL_48;
        }
        goto LABEL_47;
      }
    }
    uint64_t v45 = v83;
    if (v83)
    {
      uint64_t v46 = v82;
      swift_bridgeObjectRetain();
      sub_1001C15F0(__dst, sub_1000BFCE0);
      sub_100019524(&qword_10030A3E8);
      uint64_t v47 = *(void *)(type metadata accessor for IAPTransaction() - 8);
      unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_100255FB0;
      uint64_t v49 = (void *)swift_allocObject();
      _OWORD v49[2] = v3;
      v49[3] = v46;
      v49[4] = v45;
      id v50 = v20;
      swift_retain();
      sub_1001F99F0(v50, (void (*)(void *))sub_1001C1C94, v23 + v48);
      swift_bridgeObjectRelease();
      uint64_t v24 = 0;
      uint64_t v22 = *(void *)(v23 + 16);
      char v65 = 0;
      goto LABEL_42;
    }
    sub_1000458B4((uint64_t)v84, (uint64_t)__src, &qword_10030A860);
    if (LOBYTE(__src[39]) != 1) {
      goto LABEL_48;
    }
LABEL_47:
    if ((sub_10024FA60() & 1) == 0) {
      goto LABEL_16;
    }
LABEL_48:
    uint64_t v22 = v78;
    if (v78)
    {
      uint64_t v23 = v81;
      if (v81)
      {
        sub_10001C2A8(v62, *(void *)(v3 + 112));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000A021C();
        uint64_t v24 = v59;
        unint64_t v51 = v60;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1001C15F0(__dst, sub_1000BFCE0);
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        goto LABEL_43;
      }
      sub_1001C15F0(__dst, sub_1000BFCE0);
      uint64_t v22 = 0;
      goto LABEL_18;
    }
    sub_1001C15F0(__dst, sub_1000BFCE0);
LABEL_17:
    uint64_t v23 = 0;
LABEL_18:
    uint64_t v24 = 0;
LABEL_42:
    unint64_t v51 = 0xF000000000000000;
LABEL_43:
    sub_10001C2A8(v62, *(void *)(v3 + 112));
    sub_1001C1F90();
    v91[1] = 0;
    v91[0] = 0;
    v91[2] = _swiftEmptyArrayStorage;
    __int16 v92 = 0;
    int v93 = v68;
    __int16 v94 = v69;
    sub_1001C1F20();
    uint64_t v95 = v52;
    uint64_t v96 = v53;
    uint64_t v97 = v22;
    char v98 = v65;
    *(_DWORD *)uint64_t v99 = v64;
    *(_DWORD *)&v99[3] = *(_DWORD *)&v67[3];
    uint64_t v100 = v23;
    uint64_t v101 = v24;
    unint64_t v102 = v51;
    uint64_t v9 = v54;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v105 = v3;
    long long v106 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long v109 = 0u;
    char v110 = 22;
    *(_DWORD *)os_log_type_t v111 = *(_DWORD *)v66;
    *(_DWORD *)&v111[3] = v63;
    uint64_t v112 = 0;
    uint64_t v113 = 0;
    uint64_t v114 = v61;
    char v115 = 2;
    sub_1000636BC(v91);
    sub_1001C13C8(v91, v5, (uint64_t)&v87);
    uint64_t v55 = v88;
    uint64_t v56 = v89;
    uint64_t v57 = v90;
    sub_10006382C(v91);

    unint64_t v37 = v55 | (v56 << 32) | (v57 << 48);
    unsigned int v58 = sub_100022D68();
    Swift::UInt16 v39 = v58;
    unsigned int v40 = HIWORD(v58);
    sub_10006382C(v91);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v41 = sub_100022D50();
    uint64_t v42 = v41;
    *(void *)(v41 + 16) = 0;
    *(void *)(v41 + 24) = 0;
    uint64_t v43 = 3;
    goto LABEL_36;
  }

  if (v16 == 1) {
    goto LABEL_30;
  }
  uint64_t v32 = 5;
  while (1)
  {
    id v33 = (v15 & 0xC000000000000001) != 0 ? (id)sub_10024F380() : *(id *)(v15 + 8 * v32);
    uint64_t v18 = v33;
    uint64_t v9 = (void *)(v32 - 3);
    if (__OFADD__(v32 - 4, 1)) {
      break;
    }
    sub_1000D847C();
    sub_1000ACC78();
    if (v19) {
      goto LABEL_15;
    }

    ++v32;
    if (v9 == (void *)v16) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_54:
  swift_once();
LABEL_20:
  uint64_t v25 = sub_10024E1F0();
  sub_10001B0E8(v25, (uint64_t)qword_10034C0E0);
  uint64_t v26 = (void *)sub_10024E1D0();
  os_log_type_t v27 = sub_10024EE10();
  if (sub_1000C200C(v27))
  {
    uint64_t v28 = (_WORD *)sub_10003FD28();
    sub_1000C2158(v28);
    int64_t v31 = "Failed to decode in-app buy request";
LABEL_34:
    sub_1000C20B0((void *)&_mh_execute_header, v29, v30, v31);
    sub_1000C211C();
  }
LABEL_35:

  sub_1001C1EF0((uint64_t)&v70);
  unint64_t v37 = v71 | ((unint64_t)v72 << 32) | ((unint64_t)v73 << 48);
  unsigned int v38 = sub_100022D68();
  Swift::UInt16 v39 = v38;
  unsigned int v40 = HIWORD(v38);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v41 = sub_100022D50();
  uint64_t v42 = v41;
  *(void *)(v41 + 16) = 0;
  *(void *)(v41 + 24) = 0;
  uint64_t v43 = 21;
LABEL_36:
  *(void *)(v41 + 32) = v43;
  *(_WORD *)(v41 + 40) = v39;
  *(_WORD *)(v41 + 42) = v40;
  sub_1000458B4((uint64_t)v85, (uint64_t)__src, &qword_10030ED40);
  sub_1001C15F0(__src, sub_1000BFCE0);
  *(void *)uint64_t v7 = v42;
  *(void *)(v7 + 8) = v9;
  sub_1001C1FB0();
  *(_DWORD *)(v7 + 56) = v37;
  *(unsigned char *)(v7 + 62) = BYTE6(v37);
  *(_WORD *)(v7 + 60) = WORD2(v37);
}

void sub_1001C02AC(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1002179AC();
  uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v12 = v7;
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    uint64_t v3 = v10;
    uint64_t v15 = (void *)(v2 + 88);
    sub_10001C2A8((void *)(v2 + 88), *(void *)(v2 + 112));
    unint64_t v16 = sub_1000A118C();
    uint64_t v17 = v12;
    uint64_t v18 = 0;
    unint64_t v19 = (unint64_t)sub_1001BEFA4(v16, v17, v13, v14, v3);
    if ((v19 & 0x8000000000000000) != 0 || (v19 & 0x4000000000000000) != 0) {
      goto LABEL_34;
    }
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    while (1)
    {
      __dst[0] = v20;
      sub_1001C0828(__dst);
      if (v18)
      {
        swift_release();
        __break(1u);
        return;
      }
      uint64_t v43 = v15;
      swift_bridgeObjectRelease();
      uint64_t v18 = __dst[0];
      if (__dst[0] < 0 || (__dst[0] & 0x4000000000000000) != 0)
      {
        uint64_t v15 = (void *)v11;
        swift_retain();
        uint64_t v21 = sub_10024F6F0();
        if (!v21) {
          break;
        }
      }
      else
      {
        uint64_t v15 = (void *)v11;
        uint64_t v21 = *(void *)(__dst[0] + 16);
        swift_retain();
        if (!v21) {
          break;
        }
      }
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)sub_10024F380();
      }
      else {
        id v22 = *(id *)(v18 + 32);
      }
      uint64_t v23 = v22;
      sub_1000D847C();
      sub_1000ACC78();
      if (v24)
      {
LABEL_13:
        uint64_t v11 = (uint64_t)v15;
        sub_1001C1F78();
        id v25 = v23;
        sub_1000D63A4(2u);
        sub_10001C2A8(v43, *(void *)(v4 + 112));
        sub_1001C1F90();
        __src[0] = 0uLL;
        *(void *)&__src[1] = v15;
        WORD4(__src[1]) = 0;
        sub_1001C1F20();
        *(void *)&__src[2] = v26;
        *((void *)&__src[2] + 1) = v27;
        *(void *)&__src[3] = 0;
        BYTE8(__src[3]) = v4;
        __src[4] = 0uLL;
        _OWORD __src[5] = 0xF000000000000000;
        *(void *)&__src[6] = 0;
        *((void *)&__src[6] + 1) = v4;
        memset(&__src[7], 0, 64);
        LOBYTE(__src[11]) = 7;
        __src[12] = 0uLL;
        *((void *)&__src[11] + 1) = 0;
        LOBYTE(__src[13]) = v4;
        memcpy(__dst, __src, 0xD1uLL);
        sub_1000636BC(__src);
        sub_1001C13C8(__dst, a1, (uint64_t)&v45);
        uint64_t v28 = v46;
        uint64_t v3 = v47;
        uint64_t v29 = v48;
        sub_10006382C(__src);

        sub_10006382C(__src);
        unint64_t v30 = v28 | (v3 << 32) | (v29 << 48);
        sub_100022D68();
        sub_1001C1F5C();
        uint64_t v31 = sub_100022D50();
        *(void *)(v31 + 16) = 0;
        *(void *)(v31 + 24) = 0;
        uint64_t v32 = 3;
        goto LABEL_32;
      }

      if (v21 == 1) {
        break;
      }
      uint64_t v11 = 5;
      while (1)
      {
        id v39 = (v18 & 0xC000000000000001) != 0 ? (id)sub_10024F380() : *(id *)(v18 + 8 * v11);
        uint64_t v23 = v39;
        uint64_t v3 = v11 - 3;
        if (__OFADD__(v11 - 4, 1)) {
          break;
        }
        sub_1000D847C();
        sub_1000ACC78();
        if (v24) {
          goto LABEL_13;
        }

        ++v11;
        if (v3 == v21) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_34:
      swift_bridgeObjectRetain();
      uint64_t v20 = (uint64_t)sub_1000192E8();
      swift_bridgeObjectRelease();
    }
LABEL_26:
    sub_1001C1F78();
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_10024E1F0();
    sub_10001B0E8(v40, (uint64_t)qword_10034C0E0);
    uint64_t v28 = sub_10024E1D0();
    os_log_type_t v41 = sub_10024EE10();
    uint64_t v11 = (uint64_t)v15;
    if (sub_1000C200C(v41))
    {
      uint64_t v42 = (_WORD *)sub_10003FD28();
      sub_1000C2158(v42);
      unsigned int v38 = "Failed to find latest deferred transaction to cancel in-app buy request";
      goto LABEL_30;
    }
  }
  else
  {
    if (qword_100308DE0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_10024E1F0();
    sub_10001B0E8(v33, (uint64_t)qword_10034C0E0);
    uint64_t v28 = sub_10024E1D0();
    os_log_type_t v34 = sub_10024EE10();
    if (sub_1000C200C(v34))
    {
      os_log_type_t v35 = (_WORD *)sub_10003FD28();
      sub_1000C2158(v35);
      unsigned int v38 = "Failed to decode cancel purchase request";
LABEL_30:
      sub_1000C20B0((void *)&_mh_execute_header, v36, v37, v38);
      sub_1000C211C();
    }
  }

  sub_1001C1EF0((uint64_t)__dst);
  unint64_t v30 = LODWORD(__dst[4]) | ((unint64_t)WORD2(__dst[4]) << 32) | ((unint64_t)BYTE6(__dst[4]) << 48);
  sub_100022D68();
  sub_1001C1F5C();
  uint64_t v31 = sub_100022D50();
  *(void *)(v31 + 16) = 0;
  *(void *)(v31 + 24) = 0;
  uint64_t v32 = 21;
LABEL_32:
  *(void *)(v31 + 32) = v32;
  *(_WORD *)(v31 + 40) = v28;
  *(_WORD *)(v31 + 42) = v3;
  *(void *)a2 = v31;
  *(void *)(a2 + 8) = v11;
  sub_1001C1FB0();
  *(unsigned char *)(a2 + 62) = BYTE6(v30);
  *(_WORD *)(a2 + 60) = WORD2(v30);
  *(_DWORD *)(a2 + 56) = v30;
}

uint64_t sub_1001C06D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CheddarTransaction();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1000D428C();
  uint64_t v14 = v13;
  sub_10001C2A8(a2 + 6, a2[9]);
  uint64_t v20 = sub_10008AEB4(2uLL, v12, v14, v15, v16, v17, v18, v19);
  LOBYTE(v12) = v21;
  swift_bridgeObjectRelease();
  id v22 = a1;
  swift_bridgeObjectRetain();
  sub_100155BB8(v22, a3, a4, v20, v12 & 1, v11);
  sub_10001C2A8(a2 + 11, a2[14]);
  sub_1002186D8();
  return sub_100158814((uint64_t)v11);
}

uint64_t type metadata accessor for ConfirmPurchaseEngagementHelperRoute()
{
  return self;
}

uint64_t sub_1001C0828(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10011FCCC();
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1001C08A4(v6);
  return sub_10024F420();
}

void sub_1001C08A4(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = sub_10024F9C0(v4);
  if (v5 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4) {
        sub_1001C0F90(0, v4, 1, a1);
      }
      return;
    }
    goto LABEL_131;
  }
  Swift::Int v6 = v5;
  uint64_t v7 = sub_1001DC8A0(v4 / 2);
  char v115 = v8;
  uint64_t v118 = v7;
  uint64_t v112 = v4;
  char v110 = a1;
  if (v4 <= 0)
  {
LABEL_95:
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
    unint64_t v47 = _swiftEmptyArrayStorage[2];
LABEL_96:
    uint64_t v100 = v11;
    if (v47 < 2)
    {
LABEL_107:
      swift_bridgeObjectRelease();
      if (v4 >= -1) {
        goto LABEL_108;
      }
      goto LABEL_135;
    }
    uint64_t v101 = *v110;
    while (1)
    {
      unint64_t v102 = v47 - 2;
      if (v47 < 2) {
        break;
      }
      if (!v101) {
        goto LABEL_139;
      }
      Swift::Int v4 = v47 - 1;
      uint64_t v103 = v100;
      uint64_t v104 = *(void *)&v100[16 * v102 + 32];
      uint64_t v105 = *(void *)&v100[16 * v47 + 24];
      sub_1001C1074((void **)(v101 + 8 * v104), (id *)(v101 + 8 * *(void *)&v100[16 * v47 + 16]), v101 + 8 * v105, v115);
      if (v2) {
        goto LABEL_93;
      }
      if (v105 < v104) {
        goto LABEL_126;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v103 = sub_1001C1388((uint64_t)v103);
      }
      if (v102 >= *((void *)v103 + 2)) {
        goto LABEL_127;
      }
      long long v106 = &v103[16 * v102 + 32];
      *(void *)long long v106 = v104;
      *((void *)v106 + 1) = v105;
      unint64_t v107 = *((void *)v103 + 2);
      if (v47 > v107) {
        goto LABEL_128;
      }
      memmove(&v103[16 * v4 + 32], &v103[16 * v47 + 32], 16 * (v107 - v47));
      uint64_t v100 = v103;
      *((void *)v103 + 2) = v107 - 1;
      unint64_t v47 = v107 - 1;
      Swift::Int v4 = v112;
      if (v107 <= 2) {
        goto LABEL_107;
      }
    }
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return;
  }
  Swift::Int v111 = v6;
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v109 = *a1 - 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v113 = v12;
    if (v9 < v4)
    {
      uint64_t v13 = v11;
      uint64_t v14 = v2;
      uint64_t v15 = *(void **)(v10 + 8 * v12);
      id v16 = *(id *)(v10 + 8 * v9);
      id v17 = v15;
      double v18 = sub_1000D453C();
      double v19 = sub_1000D453C();

      Swift::Int v12 = v113;
      Swift::Int v9 = v113 + 2;
      if (v113 + 2 < v4)
      {
        Swift::Int v20 = v113;
        while (1)
        {
          uint64_t v21 = v10 + 8 * v20;
          id v22 = *(void **)(v21 + 8);
          id v23 = *(id *)(v21 + 16);
          id v24 = v22;
          double v25 = sub_1000D453C();
          double v26 = sub_1000D453C();

          if (v19 < v18 == v26 >= v25) {
            break;
          }
          Swift::Int v27 = v20 + 3;
          ++v20;
          if (v27 >= v4)
          {
            Swift::Int v9 = v4;
            goto LABEL_11;
          }
        }
        Swift::Int v9 = v20 + 2;
LABEL_11:
        Swift::Int v12 = v113;
      }
      uint64_t v2 = v14;
      if (v19 >= v18)
      {
        uint64_t v11 = v13;
      }
      else
      {
        if (v9 < v12) {
          goto LABEL_132;
        }
        uint64_t v11 = v13;
        if (v12 < v9)
        {
          uint64_t v28 = (uint64_t *)(v109 + 8 * v9);
          Swift::Int v29 = v9;
          Swift::Int v30 = v12;
          uint64_t v31 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v30 != --v29)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v32 = *v31;
              *uint64_t v31 = *v28;
              *uint64_t v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
      }
    }
    if (v9 < v4)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_130;
      }
      if (v9 - v12 < v111)
      {
        if (__OFADD__(v12, v111)) {
          goto LABEL_133;
        }
        if (v12 + v111 >= v4) {
          Swift::Int v33 = v4;
        }
        else {
          Swift::Int v33 = v12 + v111;
        }
        if (v33 < v12) {
          goto LABEL_134;
        }
        if (v9 != v33)
        {
          long long v108 = v11;
          uint64_t v116 = v2;
          uint64_t v34 = v109 + 8 * v9;
          do
          {
            Swift::Int v35 = v33;
            uint64_t v36 = *(void **)(v10 + 8 * v9);
            Swift::Int v37 = v12;
            uint64_t v38 = v34;
            do
            {
              id v39 = *(void **)v38;
              id v40 = v36;
              id v41 = v39;
              double v42 = sub_1000D453C();
              double v43 = sub_1000D453C();

              if (v43 >= v42) {
                break;
              }
              if (!v10) {
                goto LABEL_136;
              }
              char v44 = *(void **)v38;
              uint64_t v36 = *(void **)(v38 + 8);
              *(void *)uint64_t v38 = v36;
              *(void *)(v38 + 8) = v44;
              v38 -= 8;
              ++v37;
            }
            while (v9 != v37);
            ++v9;
            v34 += 8;
            Swift::Int v33 = v35;
            Swift::Int v12 = v113;
          }
          while (v9 != v35);
          Swift::Int v9 = v35;
          uint64_t v2 = v116;
          uint64_t v11 = v108;
        }
      }
    }
    if (v9 < v12) {
      goto LABEL_129;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1001C1290(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v46 = *((void *)v11 + 2);
    unint64_t v45 = *((void *)v11 + 3);
    unint64_t v47 = v46 + 1;
    uint64_t v117 = v2;
    if (v46 >= v45 >> 1) {
      uint64_t v11 = sub_1001C1290((char *)(v45 > 1), v46 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v47;
    unsigned __int8 v48 = v11 + 32;
    uint64_t v49 = &v11[16 * v46 + 32];
    *(void *)uint64_t v49 = v12;
    *((void *)v49 + 1) = v9;
    if (v46) {
      break;
    }
    unint64_t v47 = 1;
LABEL_87:
    Swift::Int v4 = v112;
    uint64_t v2 = v117;
    if (v9 >= v112) {
      goto LABEL_96;
    }
  }
  Swift::Int v114 = v9;
  while (1)
  {
    Swift::Int v50 = v47 - 1;
    if (v47 >= 4)
    {
      uint64_t v55 = &v48[16 * v47];
      uint64_t v56 = *((void *)v55 - 8);
      uint64_t v57 = *((void *)v55 - 7);
      BOOL v61 = __OFSUB__(v57, v56);
      uint64_t v58 = v57 - v56;
      if (v61) {
        goto LABEL_114;
      }
      uint64_t v60 = *((void *)v55 - 6);
      uint64_t v59 = *((void *)v55 - 5);
      BOOL v61 = __OFSUB__(v59, v60);
      uint64_t v53 = v59 - v60;
      char v54 = v61;
      if (v61) {
        goto LABEL_115;
      }
      unint64_t v62 = v47 - 2;
      int v63 = &v48[16 * v47 - 32];
      uint64_t v65 = *(void *)v63;
      uint64_t v64 = *((void *)v63 + 1);
      BOOL v61 = __OFSUB__(v64, v65);
      uint64_t v66 = v64 - v65;
      if (v61) {
        goto LABEL_116;
      }
      BOOL v61 = __OFADD__(v53, v66);
      uint64_t v67 = v53 + v66;
      if (v61) {
        goto LABEL_118;
      }
      if (v67 >= v58)
      {
        uint64_t v85 = &v48[16 * v50];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v61 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v61) {
          goto LABEL_124;
        }
        BOOL v78 = v53 < v88;
        goto LABEL_76;
      }
    }
    else
    {
      if (v47 != 3)
      {
        uint64_t v79 = *((void *)v11 + 4);
        uint64_t v80 = *((void *)v11 + 5);
        BOOL v61 = __OFSUB__(v80, v79);
        uint64_t v72 = v80 - v79;
        char v73 = v61;
        goto LABEL_70;
      }
      uint64_t v52 = *((void *)v11 + 4);
      uint64_t v51 = *((void *)v11 + 5);
      BOOL v61 = __OFSUB__(v51, v52);
      uint64_t v53 = v51 - v52;
      char v54 = v61;
    }
    if (v54) {
      goto LABEL_117;
    }
    unint64_t v62 = v47 - 2;
    int v68 = &v48[16 * v47 - 32];
    uint64_t v70 = *(void *)v68;
    uint64_t v69 = *((void *)v68 + 1);
    BOOL v71 = __OFSUB__(v69, v70);
    uint64_t v72 = v69 - v70;
    char v73 = v71;
    if (v71) {
      goto LABEL_119;
    }
    char v74 = &v48[16 * v50];
    uint64_t v76 = *(void *)v74;
    uint64_t v75 = *((void *)v74 + 1);
    BOOL v61 = __OFSUB__(v75, v76);
    uint64_t v77 = v75 - v76;
    if (v61) {
      goto LABEL_121;
    }
    if (__OFADD__(v72, v77)) {
      goto LABEL_123;
    }
    if (v72 + v77 >= v53)
    {
      BOOL v78 = v53 < v77;
LABEL_76:
      if (v78) {
        Swift::Int v50 = v62;
      }
      goto LABEL_78;
    }
LABEL_70:
    if (v73) {
      goto LABEL_120;
    }
    uint64_t v81 = &v48[16 * v50];
    uint64_t v83 = *(void *)v81;
    uint64_t v82 = *((void *)v81 + 1);
    BOOL v61 = __OFSUB__(v82, v83);
    uint64_t v84 = v82 - v83;
    if (v61) {
      goto LABEL_122;
    }
    if (v84 < v72) {
      goto LABEL_87;
    }
LABEL_78:
    Swift::Int v89 = v50 - 1;
    if (v50 - 1 >= v47)
    {
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    uint64_t v90 = v10;
    if (!v10) {
      goto LABEL_137;
    }
    uint64_t v91 = v11;
    __int16 v92 = &v48[16 * v89];
    int v93 = v48;
    uint64_t v94 = *(void *)v92;
    uint64_t v95 = v93;
    Swift::Int v4 = v50;
    uint64_t v96 = &v93[16 * v50];
    uint64_t v97 = *((void *)v96 + 1);
    uint64_t v98 = v90;
    sub_1001C1074((void **)(v90 + 8 * *(void *)v92), (id *)(v90 + 8 * *(void *)v96), v90 + 8 * v97, v115);
    if (v117) {
      break;
    }
    if (v97 < v94) {
      goto LABEL_111;
    }
    if ((unint64_t)v4 > *((void *)v91 + 2)) {
      goto LABEL_112;
    }
    *(void *)__int16 v92 = v94;
    *(void *)&v95[16 * v89 + 8] = v97;
    unint64_t v99 = *((void *)v91 + 2);
    if (v4 >= v99) {
      goto LABEL_113;
    }
    unsigned __int8 v48 = v95;
    uint64_t v11 = v91;
    unint64_t v47 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v4));
    *((void *)v91 + 2) = v99 - 1;
    uint64_t v10 = v98;
    Swift::Int v9 = v114;
    if (v99 <= 2) {
      goto LABEL_87;
    }
  }
  uint64_t v2 = v117;
LABEL_93:
  swift_bridgeObjectRelease();
  if (v112 < -1)
  {
    __break(1u);
    goto LABEL_95;
  }
LABEL_108:
  *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_10024EAC0();
  swift_bridgeObjectRelease();
}

void sub_1001C0F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v8 = *(void **)(v6 + 8 * v4);
      uint64_t v9 = a1;
      uint64_t v10 = v7;
      do
      {
        uint64_t v11 = *(void **)v10;
        id v12 = v8;
        id v13 = v11;
        double v14 = sub_1000D453C();
        double v15 = sub_1000D453C();

        if (v15 >= v14) {
          break;
        }
        if (!v6)
        {
          __break(1u);
          return;
        }
        id v16 = *(void **)v10;
        uint64_t v8 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v8;
        *(void *)(v10 + 8) = v16;
        v10 -= 8;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1001C1074(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_100037D0C(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    if (v7 >= v6 || v10 < 8)
    {
      id v12 = &v4[v11];
    }
    else
    {
      id v23 = (id *)(a3 - 8);
      id v12 = &v4[v11];
      uint64_t v36 = v4;
      do
      {
        Swift::Int v37 = v23 + 1;
        double v25 = v12 - 1;
        id v24 = *(v12 - 1);
        unint64_t v26 = (unint64_t)v12;
        uint64_t v28 = v6 - 1;
        Swift::Int v27 = *(v6 - 1);
        id v29 = v24;
        id v30 = v27;
        double v31 = sub_1000D453C();
        double v32 = sub_1000D453C();

        if (v32 >= v31)
        {
          BOOL v33 = v37 != (id *)v26 || (unint64_t)v23 >= v26;
          uint64_t v28 = v25;
          unint64_t v26 = (unint64_t)v25;
        }
        else
        {
          BOOL v33 = v37 != v6 || v23 >= v6;
          --v6;
        }
        uint64_t v4 = v36;
        if (v33) {
          *id v23 = *v28;
        }
        --v23;
        id v12 = (void **)v26;
      }
      while (v6 > v7 && v26 > (unint64_t)v36);
    }
  }
  else
  {
    sub_100037D0C(a1, a2 - a1, a4);
    id v12 = &v4[v9];
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        double v14 = *v4;
        id v15 = *v6;
        id v16 = v14;
        double v17 = sub_1000D453C();
        double v18 = sub_1000D453C();

        if (v18 < v17) {
          break;
        }
        double v19 = v4;
        BOOL v20 = v7 == v4++;
        if (!v20) {
          goto LABEL_11;
        }
LABEL_12:
        ++v7;
        if (v4 >= v12 || (unint64_t)v6 >= a3) {
          goto LABEL_17;
        }
      }
      double v19 = v6;
      BOOL v20 = v7 == v6++;
      if (v20) {
        goto LABEL_12;
      }
LABEL_11:
      *uint64_t v7 = *v19;
      goto LABEL_12;
    }
LABEL_17:
    uint64_t v6 = v7;
  }
  sub_100037D0C(v4, v12 - v4, v6);
  return 1;
}

char *sub_1001C1290(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100019524(&qword_100317B60);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v12 = v10 + 32;
  id v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1001C1388(uint64_t a1)
{
  return sub_1001C1290(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1001C139C(char *__src, uint64_t a2, char *__dst)
{
  if (__dst != __src || &__src[16 * a2] <= __dst) {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

double sub_1001C13C8@<D0>(void *a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001C1594(a2, &v16);
  sub_1001C1594(&v16, &v17);
  memcpy(__dst, a1, sizeof(__dst));
  if (v17.n128_u64[1])
  {
    sub_10024DCC0();
    swift_allocObject();
    sub_1000636BC(a1);
    sub_10024DCB0();
    sub_100064368();
    sub_10024DCA0();
    swift_release();
    uint64_t v5 = sub_1001C1F40();
  }
  else
  {
    sub_10024DA00();
    swift_allocObject();
    sub_1000636BC(a1);
    sub_10024D9F0();
    sub_100064368();
    sub_10024D9E0();
    swift_release();
    uint64_t v5 = sub_1001C1F40();
    uint64_t v7 = 0xD000000000000010;
  }
  sub_1000CBAF8(v5, v6, v7, v8, v9);
  sub_10006382C(a1);
  uint64_t v10 = MEMORY[0x10];
  int v11 = MEMORY[0x20];
  __int16 v12 = MEMORY[0x24];
  char v13 = MEMORY[0x26];
  double result = MEMORY[0x18];
  *(_OWORD *)a3 = MEMORY[0];
  *(void *)(a3 + 16) = v10;
  *(double *)(a3 + 24) = result;
  *(_DWORD *)(a3 + 32) = v11;
  *(_WORD *)(a3 + 36) = v12;
  *(unsigned char *)(a3 + 38) = v13;
  return result;
}

__n128 *sub_1001C1594(__n128 *a1, __n128 *a2)
{
  return a2;
}

#error "1001C17C4: call analysis failed (funcsize=127)"

void sub_1001C17EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a10)
  {
    uint64_t v73 = STACK[0x468];
    uint64_t v72 = STACK[0x460];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100045AC0(a71, a72, v72, v73);
  }
}

uint64_t sub_1001C1C54()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001C1C94(void *a1)
{
  return sub_1001C06D0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

ValueMetadata *type metadata accessor for ConfirmPurchaseEngagementHelperRoute.CancelRequest()
{
  return &type metadata for ConfirmPurchaseEngagementHelperRoute.CancelRequest;
}

unint64_t sub_1001C1CB0()
{
  unint64_t result = qword_100317B70;
  if (!qword_100317B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317B70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConfirmPurchaseEngagementHelperRoute.CancelRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C1DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmPurchaseEngagementHelperRoute.CancelRequest.CodingKeys()
{
  return &type metadata for ConfirmPurchaseEngagementHelperRoute.CancelRequest.CodingKeys;
}

unint64_t sub_1001C1E04()
{
  unint64_t result = qword_100317B80;
  if (!qword_100317B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317B80);
  }
  return result;
}

unint64_t sub_1001C1E54()
{
  unint64_t result = qword_100317B88;
  if (!qword_100317B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317B88);
  }
  return result;
}

unint64_t sub_1001C1EA4()
{
  unint64_t result = qword_100317B90;
  if (!qword_100317B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317B90);
  }
  return result;
}

unint64_t sub_1001C1EF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CB5C8(0x7571657220646142, 0xEB00000000747365, 6, a1);
}

uint64_t sub_1001C1F40()
{
  return v0;
}

uint64_t sub_1001C1F5C()
{
  return type metadata accessor for HTTPResponseHead._Storage();
}

uint64_t sub_1001C1F78()
{
  return swift_release_n();
}

uint64_t sub_1001C1F90()
{
  return sub_1000A1278(v0, 1);
}

void sub_1001C1FB0()
{
  *(unsigned char *)(v0 + 16) = 2;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v4;
}

ValueMetadata *type metadata accessor for DisableSubscriptionRequest()
{
  return &type metadata for DisableSubscriptionRequest;
}

uint64_t destroy for EditSubscriptionsHelperResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EditSubscriptionsHelperResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EditSubscriptionsHelperResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EditSubscriptionsHelperResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditSubscriptionsHelperResponse(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EditSubscriptionsHelperResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditSubscriptionsHelperResponse()
{
  return &type metadata for EditSubscriptionsHelperResponse;
}

uint64_t sub_1001C2308(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001002835B0 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001002835D0 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001002835F0 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100283610 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v5 = a1 == 0x6D61726150797562 && a2 == 0xE900000000000073;
    if (v5 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000100283630 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      BOOL v6 = a1 == 0x4964657269707865 && a2 == 0xED0000747361506ELL;
      if (v6 || (sub_10024FA60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0x746361736E617274 && a2 == 0xED000044496E6F69)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        char v8 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if (v8) {
          return 7;
        }
        else {
          return 8;
        }
      }
    }
  }
}

unint64_t sub_1001C266C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6D61726150797562;
      break;
    case 6:
      unint64_t result = 0x4964657269707865;
      break;
    case 7:
      unint64_t result = 0x746361736E617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001C2784(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100317B98);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v10 = v9 - v8;
  sub_10001C2A8(a1, a1[3]);
  sub_1001C3308();
  sub_10024FD40();
  sub_10024F8D0();
  if (!v1)
  {
    sub_1000EA868();
    sub_1000EA868();
    sub_1000EA868();
    sub_1000EA868();
    sub_10024F950();
    sub_10024F950();
    sub_10024F8D0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t sub_1001C2974@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_100317BC0);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10002059C();
  uint64_t v12 = v11 - v10;
  sub_10001C2A8(a1, a1[3]);
  sub_1001C3308();
  sub_10024FD20();
  if (v2) {
    return sub_10001C2EC((uint64_t)a1);
  }
  uint64_t v13 = sub_10024F7C0();
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1001C3770();
  uint64_t v26 = v13;
  sub_100052BF0();
  uint64_t v30 = v13;
  uint64_t v24 = sub_1001C3770();
  sub_100052BF0();
  uint64_t v29 = v13;
  uint64_t v23 = sub_1001C3770();
  sub_100052BF0();
  uint64_t v28 = v13;
  uint64_t v22 = sub_1001C3770();
  sub_100052BF0();
  uint64_t v27 = v13;
  char v21 = sub_10024F840();
  LOBYTE(v13) = sub_10024F840();
  uint64_t v16 = sub_10024F7C0();
  uint64_t v18 = v17;
  uint64_t v20 = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v5);
  swift_bridgeObjectRetain();
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v26;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = v29;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v28;
  *(void *)(a2 + 64) = v22;
  *(void *)(a2 + 72) = v27;
  *(unsigned char *)(a2 + 80) = v21 & 1;
  *(unsigned char *)(a2 + 81) = v13 & 1;
  *(void *)(a2 + 88) = v20;
  *(void *)(a2 + 96) = v18;
  return result;
}

uint64_t sub_1001C2E08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746361736E617274 && a2 == 0xED000044496E6F69)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10024FA60();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1001C2EB4()
{
  return 0x746361736E617274;
}

uint64_t sub_1001C2ED8(void *a1)
{
  uint64_t v2 = sub_100019524(&qword_100317BB8);
  sub_10001B550();
  uint64_t v4 = v3;
  __chkstk_darwin(v5, v6);
  sub_10002059C();
  uint64_t v9 = v8 - v7;
  sub_10001C2A8(a1, a1[3]);
  sub_1001C3354();
  sub_10024FD40();
  sub_10024F940();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v9, v2);
}

uint64_t sub_1001C2FE4(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100317BA8);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = (uint64_t)sub_10001C2A8(a1, a1[3]);
  sub_1001C3354();
  sub_10024FD20();
  if (!v1)
  {
    uint64_t v11 = sub_10024F830();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
  }
  sub_10001C2EC((uint64_t)a1);
  return v11;
}

unint64_t sub_1001C310C()
{
  return sub_1001C266C(*v0);
}

uint64_t sub_1001C3114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C2308(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C313C(uint64_t a1)
{
  unint64_t v2 = sub_1001C3308();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C3178(uint64_t a1)
{
  unint64_t v2 = sub_1001C3308();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1001C31B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1001C2974(a1, (uint64_t)__src);
  if (!v2) {
    return memcpy(a2, __src, 0x68uLL);
  }
  return result;
}

uint64_t sub_1001C3200(void *a1)
{
  return sub_1001C2784(a1);
}

uint64_t sub_1001C321C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C2E08(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1001C3248(uint64_t a1)
{
  unint64_t v2 = sub_1001C3354();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C3284(uint64_t a1)
{
  unint64_t v2 = sub_1001C3354();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001C32C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001C2FE4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1001C32EC(void *a1)
{
  return sub_1001C2ED8(a1);
}

unint64_t sub_1001C3308()
{
  unint64_t result = qword_100317BA0;
  if (!qword_100317BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BA0);
  }
  return result;
}

unint64_t sub_1001C3354()
{
  unint64_t result = qword_100317BB0;
  if (!qword_100317BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DisableSubscriptionRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001C343CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisableSubscriptionRequest.CodingKeys()
{
  return &type metadata for DisableSubscriptionRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EditSubscriptionsHelperResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C3540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditSubscriptionsHelperResponse.CodingKeys()
{
  return &type metadata for EditSubscriptionsHelperResponse.CodingKeys;
}

unint64_t sub_1001C357C()
{
  unint64_t result = qword_100317BC8;
  if (!qword_100317BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BC8);
  }
  return result;
}

unint64_t sub_1001C35CC()
{
  unint64_t result = qword_100317BD0;
  if (!qword_100317BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BD0);
  }
  return result;
}

unint64_t sub_1001C361C()
{
  unint64_t result = qword_100317BD8;
  if (!qword_100317BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BD8);
  }
  return result;
}

unint64_t sub_1001C366C()
{
  unint64_t result = qword_100317BE0;
  if (!qword_100317BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BE0);
  }
  return result;
}

unint64_t sub_1001C36BC()
{
  unint64_t result = qword_100317BE8;
  if (!qword_100317BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317BE8);
  }
  return result;
}

unint64_t sub_1001C370C()
{
  unint64_t result = qword_100317BF0[0];
  if (!qword_100317BF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100317BF0);
  }
  return result;
}

uint64_t sub_1001C3758()
{
  return v0;
}

uint64_t sub_1001C3770()
{
  return sub_10024F830();
}

uint64_t MarkedCircularBuffer.init(initialCapacity:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = CircularBuffer.init(initialCapacity:)(a1);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  return result;
}

uint64_t MarkedCircularBuffer.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CircularBuffer.first.getter(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(a1 + 16), a2);
}

uint64_t MarkedCircularBuffer.removeFirst()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_10024F030();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v9 - v6;
  MarkedCircularBuffer.popFirst()();
  uint64_t result = sub_10001FA0C((uint64_t)v7, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 32))(a2, v7, v3);
  }
  __break(1u);
  return result;
}

BOOL MarkedCircularBuffer.isEmpty.getter()
{
  uint64_t v0 = sub_1001C551C();
  return CircularBuffer.isEmpty.getter(v0, v1, v2);
}

BOOL MarkedCircularBuffer.hasMark.getter()
{
  return (*(unsigned char *)(v0 + 32) & 1) == 0;
}

void MarkedCircularBuffer.append(_:)()
{
  type metadata accessor for CircularBuffer();
  CircularBuffer.append(_:)();
}

Swift::Void __swiftcall MarkedCircularBuffer.mark()()
{
  uint64_t v1 = sub_1001C551C();
  uint64_t v4 = CircularBuffer.count.getter(v1, v2, v3);
  if (v4 >= 1)
  {
    *(void *)(v0 + 24) = v4 - 1;
    *(unsigned char *)(v0 + 32) = 0;
  }
}

uint64_t MarkedCircularBuffer.count.getter()
{
  uint64_t v0 = sub_1001C551C();
  return CircularBuffer.count.getter(v0, v1, v2);
}

unint64_t MarkedCircularBuffer.markedElementIndex.getter(uint64_t a1)
{
  sub_1001C3B20(v1 + 24, (uint64_t)v8);
  sub_1001C3B20((uint64_t)v8, (uint64_t)&v9);
  if (v10) {
    return 0x200000000000000;
  }
  unint64_t v4 = MarkedCircularBuffer.startIndex.getter(a1);
  unsigned int v5 = sub_1001C5420(v4);
  unint64_t v7 = MarkedCircularBuffer.index(_:offsetBy:)(v5, v6);
  return v7 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v7) != 0) << 56);
}

uint64_t MarkedCircularBuffer.startIndex.getter(uint64_t a1)
{
  return sub_1001C3C84(a1, (uint64_t (*)(void, void, void, void))CircularBuffer.startIndex.getter);
}

unint64_t MarkedCircularBuffer.distance(from:to:)(uint64_t a1, uint64_t a2)
{
  return CircularBuffer.distance(from:to:)(a1 & 0x1FFFFFFFFFFFFFFLL, a2 & 0x1FFFFFFFFFFFFFFLL);
}

uint64_t MarkedCircularBuffer.subscript.getter(uint64_t a1, uint64_t a2)
{
  return CircularBuffer.subscript.getter(a1 & 0x1FFFFFFFFFFFFFFLL, *v2, v2[1], v2[2], *(void *)(a2 + 16));
}

uint64_t MarkedCircularBuffer.index(after:)(uint64_t a1, uint64_t a2)
{
  return sub_1001C4EB4(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void))CircularBuffer.index(after:));
}

uint64_t MarkedCircularBuffer._buffer.getter()
{
  return swift_retain();
}

uint64_t MarkedCircularBuffer._buffer.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_release();
  *uint64_t v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t MarkedCircularBuffer._markedIndexOffset.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t MarkedCircularBuffer._markedIndexOffset.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t MarkedCircularBuffer.popFirst()()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + 24);
    BOOL v2 = v1 < 1;
    uint64_t v3 = v1 - 1;
    char v4 = v2;
    if (v2) {
      uint64_t v3 = 0;
    }
    *(void *)(v0 + 24) = v3;
    *(unsigned char *)(v0 + 32) = v4;
  }
  type metadata accessor for CircularBuffer();
  return CircularBuffer.popFirst()();
}

uint64_t sub_1001C3B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030C9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void MarkedCircularBuffer.description.getter()
{
}

BOOL MarkedCircularBuffer.isMarked(index:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = MarkedCircularBuffer.endIndex.getter(a2);
  BOOL result = static CircularBuffer.Index.< infix(_:_:)(a1 & 0x1FFFFFFFFFFFFFFLL, v5 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v5) != 0) << 56));
  if (result)
  {
    sub_1001C3B20(v2 + 24, (uint64_t)v13);
    sub_1001C3B20((uint64_t)v13, (uint64_t)&v14);
    if (v15)
    {
      char v7 = 0;
    }
    else
    {
      uint64_t v8 = v14;
      unsigned int v9 = MarkedCircularBuffer.startIndex.getter(a2);
      unint64_t v10 = MarkedCircularBuffer.index(_:offsetBy:)(v9, v8);
      unint64_t v11 = sub_1001C5420(v10);
      char v7 = static CircularBuffer.Index.== infix(_:_:)(v11, v12);
    }
    return v7 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MarkedCircularBuffer.endIndex.getter(uint64_t a1)
{
  return sub_1001C3C84(a1, (uint64_t (*)(void, void, void, void))CircularBuffer.endIndex.getter);
}

uint64_t sub_1001C3C84(uint64_t a1, uint64_t (*a2)(void, void, void, void))
{
  return a2(*v2, v2[1], v2[2], *(void *)(a1 + 16)) & 0x1FFFFFFFFFFFFFFLL;
}

unint64_t MarkedCircularBuffer.index(_:offsetBy:)(unsigned int a1, uint64_t a2)
{
  return CircularBuffer.index(_:offsetBy:)(a1, a2, *v2, v2[1], v2[2]) & 0x1FFFFFFFFFFFFFFLL;
}

uint64_t MarkedCircularBuffer.markedElement.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MarkedCircularBuffer.markedElementIndex.getter(a1);
  uint64_t v6 = *(void *)(a1 + 16);
  type metadata accessor for CircularBuffer.Index();
  sub_10024F030();
  return sub_1000C68EC((void (*)(uint64_t, uint64_t))sub_1001C3DE4, v6, v4, a2);
}

uint64_t sub_1001C3D84(unsigned int *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = 0x100000000000000;
  if (!*((unsigned char *)a1 + 7)) {
    uint64_t v3 = 0;
  }
  return CircularBuffer.subscript.getter(v3 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1, *a2, a2[1], a2[2], a3);
}

uint64_t sub_1001C3DE4(unsigned int *a1)
{
  return sub_1001C3D84(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t MarkedCircularBuffer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  sub_10002F9C8();
  uint64_t v6 = v5;
  double v9 = __chkstk_darwin(v7, v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v9);
  type metadata accessor for CircularBuffer();
  CircularBuffer.subscript.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
}

void (*MarkedCircularBuffer.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x60uLL);
  *a1 = v7;
  v7[5] = a2;
  v7[6] = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[7] = v3;
  v7[8] = v8;
  sub_10002F9C8();
  *(void *)(v9 + 72) = v10;
  size_t v12 = *(void *)(v11 + 64);
  v7[10] = malloc(v12);
  v7[11] = malloc(v12);
  long long v13 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v3;
  *((_OWORD *)v7 + 1) = v13;
  *((unsigned char *)v7 + 32) = *(unsigned char *)(v3 + 32);
  MarkedCircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3);
  return sub_1001C3FAC;
}

void sub_1001C3FAC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v4 = *(void **)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v5 = v2[6];
    uint64_t v6 = v2[5] & 0x1FFFFFFFFFFFFFFLL;
    uint64_t v7 = sub_10011850C();
    v8(v7);
    MarkedCircularBuffer.subscript.setter((uint64_t)v3, v6, v5);
    uint64_t v9 = sub_100118544();
    v10(v9);
  }
  else
  {
    MarkedCircularBuffer.subscript.setter(*(void *)(*(void *)a1 + 88), v2[5] & 0x1FFFFFFFFFFFFFFLL, v2[6]);
  }
  free(v4);
  free(v3);
  free(v2);
}

unint64_t MarkedCircularBuffer.subscript.getter(uint64_t a1, uint64_t a2)
{
  return CircularBuffer.subscript.getter(a1 & 0x1FFFFFFFFFFFFFFLL, a2 & 0x1FFFFFFFFFFFFFFLL, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16));
}

uint64_t MarkedCircularBuffer.subscript.setter(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = a4;
  uint64_t v11 = HIBYTE(a4) & 1;
  uint64_t v89 = a6;
  uint64_t v12 = *(void *)(a6 + 16);
  sub_10024F030();
  sub_10002F9C8();
  uint64_t v82 = v14;
  uint64_t v83 = v13;
  __chkstk_darwin(v13, v15);
  uint64_t v81 = (uint64_t)&v80 - v16;
  sub_10002F9C8();
  uint64_t v18 = v17;
  __chkstk_darwin(v19, v20);
  uint64_t v88 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v90 = (char *)&v80 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v80 - v27;
  uint64_t v29 = swift_retain();
  unint64_t v30 = CircularBuffer.startIndex.getter(v29, a2, a3);
  swift_release();
  char v92 = HIBYTE(v30) & 1;
  uint64_t v91 = a5 & 0x1FFFFFFFFFFFFFFLL;
  unint64_t v31 = a2;
  uint64_t v32 = a2;
  unint64_t v33 = a3;
  unint64_t v34 = CircularBuffer.endIndex.getter(a1, v32, a3);
  if (sub_1001C54D4(v34))
  {
    uint64_t v35 = v31;
  }
  else
  {
    uint64_t v84 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v85 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v86 = v18 + 8;
    uint64_t v35 = v31;
    while (1)
    {
      uint64_t v36 = a1;
      Swift::Int v37 = v90;
      uint64_t v38 = sub_1001C54BC();
      CircularBuffer.subscript.getter(v38, v39, v40, v41, v42);
      swift_retain();
      unsigned int v43 = sub_1001C54BC();
      unint64_t v48 = v33;
      unint64_t v49 = CircularBuffer.index(after:)(v43, v44, v45, v46, v47);
      swift_release();
      char v92 = HIBYTE(v49) & 1;
      (*v85)(v28, v37, v12);
      uint64_t v50 = (v11 & 1) != 0 ? 0x100000000000000 : 0;
      unint64_t v51 = v50 & 0xFF00000000000000 | v7 & 0xFFFFFFFFFFFFFFLL;
      if (static CircularBuffer.Index.== infix(_:_:)(v51, v91)) {
        break;
      }
      (*v84)(v88, v28, v12);
      type metadata accessor for CircularBuffer();
      uint64_t v52 = v87;
      CircularBuffer.subscript.setter();
      uint64_t v53 = v52[3];
      char v54 = *((unsigned char *)v52 + 32);
      uint64_t v93 = *v52;
      long long v94 = *(_OWORD *)(v52 + 1);
      uint64_t v95 = v53;
      char v96 = v54;
      swift_retain();
      unint64_t v7 = MarkedCircularBuffer.index(after:)(v51, v89);
      swift_release();
      LOBYTE(v11) = HIBYTE(v7) != 0;
      uint64_t v55 = sub_1001C5440();
      v56(v55);
      unint64_t v57 = CircularBuffer.endIndex.getter(v36, v35, v48);
      a1 = v36;
      unint64_t v33 = v48;
      if (sub_1001C54D4(v57)) {
        goto LABEL_11;
      }
    }
    uint64_t v58 = sub_1001C5440();
    v59(v58);
    a1 = v36;
    unint64_t v33 = v48;
  }
LABEL_11:
  unint64_t v60 = CircularBuffer.endIndex.getter(a1, v35, v33);
  if ((sub_1001C54D4(v60) & 1) == 0) {
    goto LABEL_17;
  }
  sub_1000195B4(v81, 1, 1, v12);
  uint64_t v61 = sub_1001C54F0();
  v62(v61);
  if (v11) {
    uint64_t v63 = 0x100000000000000;
  }
  else {
    uint64_t v63 = 0;
  }
  char v64 = static CircularBuffer.Index.== infix(_:_:)(v63 & 0xFF00000000000000 | v7 & 0xFFFFFFFFFFFFFFLL, v91);
  uint64_t result = swift_release();
  if ((v64 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    uint64_t v66 = v81;
    uint64_t v67 = sub_1001C54A4();
    CircularBuffer.subscript.getter(v67, v68, v69, v70, v71);
    swift_retain();
    unsigned int v72 = sub_1001C54A4();
    char v77 = CircularBuffer.index(after:)(v72, v73, v74, v75, v76) >> 56;
    swift_release();
    char v92 = v77 & 1;
    sub_1000195B4(v66, 0, 1, v12);
    uint64_t v78 = sub_1001C54F0();
    v79(v78);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

void (*MarkedCircularBuffer.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x60uLL);
  *a1 = v9;
  v9[10] = a4;
  v9[11] = v4;
  v9[8] = a2;
  v9[9] = a3;
  long long v10 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v4;
  *((_OWORD *)v9 + 1) = v10;
  *((unsigned char *)v9 + 32) = *(unsigned char *)(v4 + 32);
  v9[5] = MarkedCircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3 & 0x1FFFFFFFFFFFFFFLL);
  v9[6] = v11;
  v9[7] = v12;
  return sub_1001C4510;
}

void sub_1001C4510(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v4 = swift_retain();
    sub_1001C5480(v4);
    swift_release();
  }
  else
  {
    sub_1001C5480(v3);
  }
  free(v2);
}

void sub_1001C4594(uint64_t a1@<X8>)
{
}

void sub_1001C45AC(uint64_t a1@<X8>)
{
}

void sub_1001C45C4(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1();
  sub_1001184F4(v3);
  *(_WORD *)(a2 + 4) = v4;
  if (v5) {
    char v6 = 0;
  }
  else {
    char v6 = 1;
  }
  sub_100118918(v6);
}

void (*sub_1001C45FC(void *a1, unsigned int *a2, uint64_t a3))(uint64_t a1)
{
  unint64_t v7 = malloc(0x50uLL);
  *a1 = v7;
  uint64_t v8 = *a2;
  uint64_t v9 = *((unsigned __int16 *)a2 + 2);
  uint64_t v10 = *((unsigned __int8 *)a2 + 6);
  int v11 = *((unsigned __int8 *)a2 + 7);
  long long v12 = *(_OWORD *)(v3 + 16);
  *unint64_t v7 = *(_OWORD *)v3;
  v7[1] = v12;
  *((unsigned char *)v7 + 32) = *(unsigned char *)(v3 + 32);
  BOOL v13 = v11 == 0;
  uint64_t v14 = 0x100000000000000;
  if (v13) {
    uint64_t v14 = 0;
  }
  *((void *)v7 + 9) = sub_1001C46F0((void *)v7 + 5, v14 | (v10 << 48) | (v9 << 32) | v8, a3);
  return sub_1001C46A8;
}

void sub_1001C46A8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  (*(void (**)(void))(*(void *)a1 + 72))();
  free(v1);
}

void (*sub_1001C46F0(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v5 = *(void *)(a3 + 16);
  *a1 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  a1[1] = v6;
  a1[2] = malloc(*(void *)(v6 + 64));
  MarkedCircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3);
  return sub_100114310;
}

unint64_t sub_1001C47A8@<X0>(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = a1[2];
  uint64_t v4 = *((unsigned __int16 *)a1 + 6);
  uint64_t v5 = *((unsigned __int8 *)a1 + 14);
  int v6 = *((unsigned __int8 *)a1 + 15);
  uint64_t v7 = 0x100000000000000;
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v8 = 0x100000000000000;
  }
  else {
    uint64_t v8 = 0;
  }
  unint64_t v9 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | v8;
  if (!v6) {
    uint64_t v7 = 0;
  }
  unint64_t result = MarkedCircularBuffer.subscript.getter(v9, v3 | (v4 << 32) | (v5 << 48) | v7);
  *a2 = result;
  a2[1] = v11;
  a2[2] = v12;
  return result;
}

void sub_1001C4844(uint64_t a1@<X8>)
{
}

void sub_1001C485C(uint64_t a1)
{
}

uint64_t sub_1001C4874(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v3 = 0x100000000000000;
  if (!*((unsigned char *)a2 + 7)) {
    uint64_t v3 = 0;
  }
  return MarkedCircularBuffer.subscript.setter(a1, v3 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2, a3);
}

void (*sub_1001C48A0(void *a1, unsigned int *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x60uLL);
  *a1 = v7;
  v7[5] = v3;
  v7[6] = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[7] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[8] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[9] = malloc(v10);
  v7[10] = malloc(v10);
  uint64_t v11 = *a2;
  *((_DWORD *)v7 + 9) = v11;
  uint64_t v12 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 17) = v12;
  uint64_t v13 = *((unsigned __int8 *)a2 + 6);
  *((unsigned char *)v7 + 33) = v13;
  int v14 = *((unsigned __int8 *)a2 + 7);
  *((unsigned char *)v7 + 88) = v14;
  long long v15 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v3;
  *((_OWORD *)v7 + 1) = v15;
  *((unsigned char *)v7 + 32) = *(unsigned char *)(v3 + 32);
  BOOL v16 = v14 == 0;
  uint64_t v17 = 0x100000000000000;
  if (v16) {
    uint64_t v17 = 0;
  }
  MarkedCircularBuffer.subscript.getter(v17 | (v13 << 48) | (v12 << 32) | v11, a3);
  return sub_1001C49C4;
}

void sub_1001C49C4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  int v3 = *((unsigned __int8 *)*a1 + 88);
  uint64_t v4 = *((unsigned __int8 *)*a1 + 33);
  uint64_t v5 = *((unsigned __int16 *)*a1 + 17);
  uint64_t v6 = *((unsigned int *)*a1 + 9);
  uint64_t v7 = (void *)(*a1)[9];
  uint64_t v8 = (void *)(*a1)[10];
  if (a2)
  {
    uint64_t v9 = v2[6];
    BOOL v10 = v3 == 0;
    uint64_t v11 = 0x100000000000000;
    if (v10) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = v11 | (v4 << 48) | (v5 << 32) | v6;
    uint64_t v13 = sub_10011850C();
    v14(v13);
    MarkedCircularBuffer.subscript.setter((uint64_t)v7, v12, v9);
    uint64_t v15 = sub_100118544();
    v16(v15);
  }
  else
  {
    BOOL v10 = v3 == 0;
    uint64_t v17 = 0x100000000000000;
    if (v10) {
      uint64_t v17 = 0;
    }
    MarkedCircularBuffer.subscript.setter((*a1)[10], v17 | (v4 << 48) | (v5 << 32) | v6, v2[6]);
  }
  free(v8);
  free(v7);
  free(v2);
}

uint64_t sub_1001C4AA0(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v3 = 0x100000000000000;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v4 = 0x100000000000000;
  }
  else {
    uint64_t v4 = 0;
  }
  if (!*((unsigned char *)a2 + 15)) {
    uint64_t v3 = 0;
  }
  return MarkedCircularBuffer.subscript.setter(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | v4, a2[2] | ((unint64_t)*((unsigned __int16 *)a2 + 6) << 32) | ((unint64_t)*((unsigned __int8 *)a2+ 14) << 48) | v3, a3);
}

void (*sub_1001C4B04(void *a1, unsigned int *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x60uLL);
  *a1 = v7;
  v7[8] = v3;
  v7[9] = a3;
  uint64_t v8 = *a2;
  *((_DWORD *)v7 + 9) = v8;
  uint64_t v9 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 17) = v9;
  uint64_t v10 = *((unsigned __int8 *)a2 + 6);
  *((unsigned char *)v7 + 33) = v10;
  int v11 = *((unsigned __int8 *)a2 + 7);
  *((unsigned char *)v7 + 86) = v11;
  uint64_t v12 = a2[2];
  *((_DWORD *)v7 + 20) = v12;
  uint64_t v13 = *((unsigned __int16 *)a2 + 6);
  *((_WORD *)v7 + 42) = v13;
  uint64_t v14 = *((unsigned __int8 *)a2 + 14);
  *((unsigned char *)v7 + 87) = v14;
  int v15 = *((unsigned __int8 *)a2 + 15);
  *((unsigned char *)v7 + 88) = v15;
  uint64_t v16 = v8 | (v9 << 32) | (v10 << 48);
  uint64_t v17 = 0x100000000000000;
  long long v18 = *(_OWORD *)(v3 + 16);
  if (v11) {
    uint64_t v19 = 0x100000000000000;
  }
  else {
    uint64_t v19 = 0;
  }
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v3;
  *((_OWORD *)v7 + 1) = v18;
  if (!v15) {
    uint64_t v17 = 0;
  }
  *((unsigned char *)v7 + 32) = *(unsigned char *)(v3 + 32);
  v7[5] = MarkedCircularBuffer.subscript.getter(v16 | v19, v12 | (v13 << 32) | (v14 << 48) | v17);
  v7[6] = v20;
  v7[7] = v21;
  return sub_1001C4BFC;
}

void sub_1001C4BFC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v4 = swift_retain();
    sub_1001C545C(v4);
    swift_release();
  }
  else
  {
    sub_1001C545C(v3);
  }
  free(v2);
}

uint64_t sub_1001C4CC0()
{
  return sub_10024E670();
}

__n128 sub_1001C4D44@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  long long v5 = *(_OWORD *)(v2 + 16);
  v15[0] = *(_OWORD *)v2;
  __n128 v14 = (__n128)v15[0];
  v15[1] = v5;
  unsigned __int8 v16 = *(unsigned char *)(v2 + 32);
  unsigned __int8 v6 = v16;
  unint64_t v7 = *(void *)(v2 + 16);
  unint64_t v8 = *(void *)(v2 + 24);
  swift_retain();
  unint64_t v9 = MarkedCircularBuffer.startIndex.getter(a1);
  LODWORD(a1) = v9;
  unint64_t v10 = HIDWORD(v9);
  unint64_t v11 = HIWORD(v9);
  BOOL v12 = HIBYTE(v9) != 0;
  sub_100074F0C((uint64_t)v15);
  __n128 result = v14;
  *a2 = v14;
  a2[1].n128_u64[0] = v7;
  a2[1].n128_u64[1] = v8;
  a2[2].n128_u8[0] = v6;
  a2[2].n128_u32[1] = a1;
  a2[2].n128_u16[4] = v10;
  a2[2].n128_u8[10] = v11;
  a2[2].n128_u8[11] = v12;
  return result;
}

uint64_t sub_1001C4DF4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_1001C4E48(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Collection._copyToContiguousArray()(a1, WitnessTable);
}

uint64_t MarkedCircularBuffer.index(before:)(uint64_t a1, uint64_t a2)
{
  return sub_1001C4EB4(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void))CircularBuffer.index(before:));
}

uint64_t sub_1001C4EB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void))
{
  return a3(a1 & 0x1FFFFFFFFFFFFFFLL, *v3, v3[1], v3[2], *(void *)(a2 + 16)) & 0x1FFFFFFFFFFFFFFLL;
}

uint64_t sub_1001C4EEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4F08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4F24()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4F40()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4F5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4F78()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4F94()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C4FF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C5018()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001C507C()
{
  return swift_getWitnessTable();
}

void sub_1001C5098(uint64_t a1@<X8>)
{
}

void sub_1001C50B0(uint64_t a1@<X8>)
{
  sub_1001C5404();
  uint64_t v3 = sub_1001C5508(v2);
  uint64_t v5 = v4(v3);
  sub_1001184F4(v5);
  *(_WORD *)(a1 + 4) = v6;
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_100118918(v8);
}

void sub_1001C50F0(uint64_t a1)
{
}

void sub_1001C5108(uint64_t a1)
{
  sub_1001C5404();
  uint64_t v3 = sub_1001C5508(v2);
  uint64_t v5 = v4(v3);
  sub_1001184F4(v5);
  *(_WORD *)(a1 + 4) = v6;
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_100118918(v8);
}

void sub_1001C5148(uint64_t a1@<X8>)
{
  sub_1001C5404();
  if (v5) {
    int v4 = 0;
  }
  unint64_t v6 = MarkedCircularBuffer.index(_:offsetBy:)(v4 | v3, v2);
  sub_1001184F4(v6);
  *(_WORD *)(a1 + 4) = v7;
  if (v5) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_100118918(v8);
}

uint64_t sub_1001C5190()
{
  swift_getWitnessTable();
  return sub_10024EC70();
}

unint64_t sub_1001C5214(unsigned int *a1, unsigned int *a2)
{
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v2 = 0x100000000000000;
  }
  else {
    uint64_t v2 = 0;
  }
  unint64_t v3 = v2 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v4 = 0x100000000000000;
  }
  else {
    uint64_t v4 = 0;
  }
  return MarkedCircularBuffer.distance(from:to:)(v3, v4 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

uint64_t sub_1001C5264(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  return a1;
}

uint64_t sub_1001C52AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t sub_1001C5314(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_1001C5364(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001C53A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MarkedCircularBuffer()
{
  return sub_10002F7A4();
}

unint64_t sub_1001C5420(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t sub_1001C5440()
{
  return v0;
}

uint64_t sub_1001C545C(uint64_t a1)
{
  return MarkedCircularBuffer.subscript.setter(a1, v3, v1, v4, v5, v2);
}

uint64_t sub_1001C5480(uint64_t a1)
{
  return MarkedCircularBuffer.subscript.setter(a1, v2, v3, v4, v5, v1);
}

uint64_t sub_1001C54A4()
{
  return v0;
}

uint64_t sub_1001C54BC()
{
  return v0;
}

uint64_t sub_1001C54D4(uint64_t a1)
{
  return static CircularBuffer.Index.== infix(_:_:)(v1, a1 & 0x1FFFFFFFFFFFFFFLL);
}

uint64_t sub_1001C54F0()
{
  return v0;
}

uint64_t sub_1001C5508@<X0>(uint64_t a1@<X8>)
{
  return v3 | (v2 << 48) | (v1 << 32) | a1;
}

uint64_t sub_1001C551C()
{
  return *(void *)v0;
}

__n128 sub_1001C5530@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = a3;
  __n128 v30 = (__n128)a1[1];
  long long v31 = *a1;
  uint64_t v28 = *((void *)a1 + 5);
  uint64_t v29 = *((void *)a1 + 4);
  uint64_t v26 = *((void *)a1 + 7);
  uint64_t v27 = *((void *)a1 + 6);
  if (a5)
  {
    v34[0] = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100022B0C();
    sub_1001DE6F0(v34);
    sub_100022B28();
    uint64_t v15 = v34[0];
    if (a2 < 0 || (a2 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = (uint64_t)sub_1000192E8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v34[0] = v18;
    sub_1001C57AC(v34);
    swift_bridgeObjectRelease();
    a4 = 0;
    a2 = v34[0];
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  sub_1000931C0(2, (uint64_t)v33);
  sub_10008C6C8((uint64_t)v33, (uint64_t)v34);
  if (!v34[1])
  {
    swift_release();
    goto LABEL_11;
  }
  char v19 = v35;
  sub_10008C730(v33);
  swift_release();
  if ((v19 & 1) == 0)
  {
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    uint64_t v20 = 0;
    char v23 = 1;
    goto LABEL_12;
  }
  swift_retain();
  uint64_t v20 = sub_100093788(2);
  uint64_t v25 = a7;
  char v22 = v21;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  char v23 = v22 & 1;
  a7 = v25;
LABEL_12:
  __n128 result = v30;
  *(_OWORD *)a9 = v31;
  *(__n128 *)(a9 + 16) = v30;
  *(void *)(a9 + 32) = v29;
  *(void *)(a9 + 40) = v28;
  *(void *)(a9 + 48) = v27;
  *(void *)(a9 + 56) = v26;
  *(void *)(a9 + 64) = a2;
  *(void *)(a9 + 72) = v15;
  *(void *)(a9 + 80) = a4;
  *(unsigned char *)(a9 + 88) = a5 & 1;
  *(void *)(a9 + 96) = a6;
  *(void *)(a9 + 104) = a7;
  *(void *)(a9 + 112) = a8;
  *(void *)(a9 + 120) = a10;
  *(void *)(a9 + 128) = a11;
  *(void *)(a9 + 136) = v20;
  *(unsigned char *)(a9 + 144) = v23;
  return result;
}

uint64_t sub_1001C57AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10011FCCC();
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1001C5828(v6);
  return sub_10024F420();
}

void sub_1001C5828(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = sub_10024F9C0(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        sub_1001C6008(0, v3, 1, a1);
      }
      return;
    }
    goto LABEL_184;
  }
  Swift::Int v5 = v4;
  uint64_t v6 = sub_1001DC8A0(v3 / 2);
  uint64_t v132 = v7;
  uint64_t v135 = v6;
  unint64_t v124 = a1;
  if (v3 <= 0)
  {
LABEL_148:
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
    unint64_t v68 = _swiftEmptyArrayStorage[2];
LABEL_149:
    if (v68 < 2)
    {
LABEL_160:
      swift_bridgeObjectRelease();
      if (v3 >= -1) {
        goto LABEL_161;
      }
      goto LABEL_188;
    }
    uint64_t v117 = *v124;
    while (1)
    {
      unint64_t v118 = v68 - 2;
      if (v68 < 2) {
        break;
      }
      if (!v117) {
        goto LABEL_192;
      }
      uint64_t v119 = *(void *)&v10[16 * v118 + 32];
      uint64_t v120 = *(void *)&v10[16 * v68 + 24];
      sub_1001C615C((void **)(v117 + 8 * v119), (id *)(v117 + 8 * *(void *)&v10[16 * v68 + 16]), v117 + 8 * v120, v132);
      if (v1) {
        goto LABEL_146;
      }
      if (v120 < v119) {
        goto LABEL_179;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v10 = sub_1001C1388((uint64_t)v10);
      }
      if (v118 >= *((void *)v10 + 2)) {
        goto LABEL_180;
      }
      uint64_t v121 = &v10[16 * v118 + 32];
      *(void *)uint64_t v121 = v119;
      *((void *)v121 + 1) = v120;
      unint64_t v122 = *((void *)v10 + 2);
      if (v68 > v122) {
        goto LABEL_181;
      }
      memmove(&v10[16 * v68 + 16], &v10[16 * v68 + 32], 16 * (v122 - v68));
      *((void *)v10 + 2) = v122 - 1;
      unint64_t v68 = v122 - 1;
      if (v122 <= 2) {
        goto LABEL_160;
      }
    }
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
LABEL_183:
    __break(1u);
LABEL_184:
    __break(1u);
LABEL_185:
    __break(1u);
LABEL_186:
    __break(1u);
LABEL_187:
    __break(1u);
LABEL_188:
    __break(1u);
LABEL_189:
    __break(1u);
LABEL_190:
    __break(1u);
LABEL_191:
    __break(1u);
LABEL_192:
    __break(1u);
    return;
  }
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v123 = *a1 - 8;
  unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v133 = v3;
  Swift::Int v125 = v5;
  uint64_t v134 = *a1;
  while (1)
  {
    Swift::Int v11 = v8;
    Swift::Int v12 = v8 + 1;
    Swift::Int v129 = v8;
    if (v8 + 1 < v3)
    {
      uint64_t v126 = v10;
      uint64_t v13 = *(void **)(v9 + 8 * v8);
      id v14 = *(id *)(v9 + 8 * v12);
      id v15 = v13;
      uint64_t v16 = sub_1000D939C(15);
      if (v17) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = 0;
      }
      if (v17) {
        unint64_t v19 = v17;
      }
      else {
        unint64_t v19 = 0xE000000000000000;
      }
      uint64_t v20 = sub_1000D939C(15);
      if (v21) {
        uint64_t v22 = v20;
      }
      else {
        uint64_t v22 = 0;
      }
      if (v21) {
        unint64_t v23 = v21;
      }
      else {
        unint64_t v23 = 0xE000000000000000;
      }
      if (v18 == v22 && v19 == v23) {
        int v25 = 0;
      }
      else {
        int v25 = sub_10024FA60();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      Swift::Int v12 = v11 + 2;
      Swift::Int v3 = v133;
      uint64_t v9 = v134;
      if (v11 + 2 < v133)
      {
        while (1)
        {
          uint64_t v26 = v9 + 8 * v11;
          uint64_t v27 = *(void **)(v26 + 8);
          id v28 = *(id *)(v26 + 16);
          id v29 = v27;
          uint64_t v30 = sub_1000D939C(15);
          uint64_t v32 = v31 ? v30 : 0;
          unint64_t v33 = v31 ? v31 : 0xE000000000000000;
          uint64_t v34 = sub_1000D939C(15);
          uint64_t v36 = v35 ? v34 : 0;
          unint64_t v37 = v35 ? v35 : 0xE000000000000000;
          BOOL v38 = v32 == v36 && v33 == v37;
          int v39 = v38 ? 0 : sub_10024FA60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if ((v25 ^ v39)) {
            break;
          }
          Swift::Int v40 = v11 + 3;
          ++v11;
          Swift::Int v3 = v133;
          uint64_t v9 = v134;
          if (v40 >= v133)
          {
            Swift::Int v12 = v133;
            goto LABEL_46;
          }
        }
        Swift::Int v12 = v11 + 2;
        Swift::Int v3 = v133;
        uint64_t v9 = v134;
      }
LABEL_46:
      Swift::Int v5 = v125;
      if (v25)
      {
        Swift::Int v11 = v129;
        if (v12 < v129) {
          goto LABEL_185;
        }
        if (v129 >= v12)
        {
          unint64_t v10 = v126;
        }
        else
        {
          uint64_t v41 = (uint64_t *)(v123 + 8 * v12);
          Swift::Int v42 = v12;
          Swift::Int v43 = v129;
          uint64_t v44 = (uint64_t *)(v9 + 8 * v129);
          unint64_t v10 = v126;
          do
          {
            if (v43 != --v42)
            {
              if (!v9) {
                goto LABEL_191;
              }
              uint64_t v45 = *v44;
              uint64_t *v44 = *v41;
              *uint64_t v41 = v45;
            }
            ++v43;
            --v41;
            ++v44;
          }
          while (v43 < v42);
        }
      }
      else
      {
        unint64_t v10 = v126;
        Swift::Int v11 = v129;
      }
    }
    if (v12 < v3)
    {
      if (__OFSUB__(v12, v11)) {
        goto LABEL_183;
      }
      if (v12 - v11 < v5)
      {
        if (__OFADD__(v11, v5)) {
          goto LABEL_186;
        }
        if (v11 + v5 >= v3) {
          Swift::Int v46 = v3;
        }
        else {
          Swift::Int v46 = v11 + v5;
        }
        if (v46 < v11) {
          goto LABEL_187;
        }
        if (v12 != v46)
        {
          uint64_t v127 = v10;
          Swift::Int v128 = v46;
          uint64_t v47 = v123 + 8 * v12;
          do
          {
            unint64_t v48 = *(void **)(v9 + 8 * v12);
            Swift::Int v49 = v11;
            uint64_t v130 = v47;
            uint64_t v50 = v47;
            while (1)
            {
              Swift::Int v51 = v12;
              uint64_t v52 = *(void **)v50;
              id v53 = v48;
              id v54 = v52;
              uint64_t v55 = sub_1000D939C(15);
              uint64_t v57 = v56 ? v55 : 0;
              unint64_t v58 = v56 ? v56 : 0xE000000000000000;
              uint64_t v59 = sub_1000D939C(15);
              uint64_t v61 = v60 ? v59 : 0;
              unint64_t v62 = v60 ? v60 : 0xE000000000000000;
              if (v57 == v61 && v58 == v62) {
                break;
              }
              char v64 = sub_10024FA60();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v64 & 1) == 0) {
                goto LABEL_89;
              }
              uint64_t v9 = v134;
              if (!v134) {
                goto LABEL_189;
              }
              Swift::Int v12 = v51;
              uint64_t v65 = *(void **)v50;
              unint64_t v48 = *(void **)(v50 + 8);
              *(void *)uint64_t v50 = v48;
              *(void *)(v50 + 8) = v65;
              v50 -= 8;
              if (v51 == ++v49) {
                goto LABEL_90;
              }
            }

            swift_bridgeObjectRelease_n();
LABEL_89:
            uint64_t v9 = v134;
            Swift::Int v12 = v51;
LABEL_90:
            ++v12;
            Swift::Int v11 = v129;
            uint64_t v47 = v130 + 8;
          }
          while (v12 != v128);
          Swift::Int v12 = v128;
          Swift::Int v3 = v133;
          Swift::Int v5 = v125;
          unint64_t v10 = v127;
        }
      }
    }
    if (v12 < v11) {
      goto LABEL_182;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v10 = sub_1001C1290(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v67 = *((void *)v10 + 2);
    unint64_t v66 = *((void *)v10 + 3);
    unint64_t v68 = v67 + 1;
    uint64_t v9 = v134;
    if (v67 >= v66 >> 1)
    {
      uint64_t v116 = sub_1001C1290((char *)(v66 > 1), v67 + 1, 1, v10);
      uint64_t v9 = v134;
      unint64_t v10 = v116;
    }
    *((void *)v10 + 2) = v68;
    uint64_t v69 = v10 + 32;
    uint64_t v70 = &v10[16 * v67 + 32];
    *(void *)uint64_t v70 = v11;
    *((void *)v70 + 1) = v12;
    Swift::Int v131 = v12;
    if (v67) {
      break;
    }
    unint64_t v68 = 1;
LABEL_140:
    Swift::Int v8 = v131;
    if (v131 >= v3) {
      goto LABEL_149;
    }
  }
  while (1)
  {
    unint64_t v71 = v68 - 1;
    if (v68 >= 4)
    {
      uint64_t v76 = &v69[16 * v68];
      uint64_t v77 = *((void *)v76 - 8);
      uint64_t v78 = *((void *)v76 - 7);
      BOOL v82 = __OFSUB__(v78, v77);
      uint64_t v79 = v78 - v77;
      if (v82) {
        goto LABEL_167;
      }
      uint64_t v81 = *((void *)v76 - 6);
      uint64_t v80 = *((void *)v76 - 5);
      BOOL v82 = __OFSUB__(v80, v81);
      uint64_t v74 = v80 - v81;
      char v75 = v82;
      if (v82) {
        goto LABEL_168;
      }
      unint64_t v83 = v68 - 2;
      uint64_t v84 = &v69[16 * v68 - 32];
      uint64_t v86 = *(void *)v84;
      uint64_t v85 = *((void *)v84 + 1);
      BOOL v82 = __OFSUB__(v85, v86);
      uint64_t v87 = v85 - v86;
      if (v82) {
        goto LABEL_169;
      }
      BOOL v82 = __OFADD__(v74, v87);
      uint64_t v88 = v74 + v87;
      if (v82) {
        goto LABEL_171;
      }
      if (v88 >= v79)
      {
        long long v106 = &v69[16 * v71];
        uint64_t v108 = *(void *)v106;
        uint64_t v107 = *((void *)v106 + 1);
        BOOL v82 = __OFSUB__(v107, v108);
        uint64_t v109 = v107 - v108;
        if (v82) {
          goto LABEL_177;
        }
        BOOL v99 = v74 < v109;
        goto LABEL_129;
      }
    }
    else
    {
      if (v68 != 3)
      {
        uint64_t v100 = *((void *)v10 + 4);
        uint64_t v101 = *((void *)v10 + 5);
        BOOL v82 = __OFSUB__(v101, v100);
        uint64_t v93 = v101 - v100;
        char v94 = v82;
        goto LABEL_123;
      }
      uint64_t v73 = *((void *)v10 + 4);
      uint64_t v72 = *((void *)v10 + 5);
      BOOL v82 = __OFSUB__(v72, v73);
      uint64_t v74 = v72 - v73;
      char v75 = v82;
    }
    if (v75) {
      goto LABEL_170;
    }
    unint64_t v83 = v68 - 2;
    uint64_t v89 = &v69[16 * v68 - 32];
    uint64_t v91 = *(void *)v89;
    uint64_t v90 = *((void *)v89 + 1);
    BOOL v92 = __OFSUB__(v90, v91);
    uint64_t v93 = v90 - v91;
    char v94 = v92;
    if (v92) {
      goto LABEL_172;
    }
    uint64_t v95 = &v69[16 * v71];
    uint64_t v97 = *(void *)v95;
    uint64_t v96 = *((void *)v95 + 1);
    BOOL v82 = __OFSUB__(v96, v97);
    uint64_t v98 = v96 - v97;
    if (v82) {
      goto LABEL_174;
    }
    if (__OFADD__(v93, v98)) {
      goto LABEL_176;
    }
    if (v93 + v98 >= v74)
    {
      BOOL v99 = v74 < v98;
LABEL_129:
      if (v99) {
        unint64_t v71 = v83;
      }
      goto LABEL_131;
    }
LABEL_123:
    if (v94) {
      goto LABEL_173;
    }
    unint64_t v102 = &v69[16 * v71];
    uint64_t v104 = *(void *)v102;
    uint64_t v103 = *((void *)v102 + 1);
    BOOL v82 = __OFSUB__(v103, v104);
    uint64_t v105 = v103 - v104;
    if (v82) {
      goto LABEL_175;
    }
    if (v105 < v93) {
      goto LABEL_140;
    }
LABEL_131:
    unint64_t v110 = v71 - 1;
    if (v71 - 1 >= v68)
    {
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
    if (!v9) {
      goto LABEL_190;
    }
    Swift::Int v111 = &v69[16 * v110];
    uint64_t v112 = *(void *)v111;
    Swift::Int v113 = &v69[16 * v71];
    uint64_t v114 = *((void *)v113 + 1);
    sub_1001C615C((void **)(v9 + 8 * *(void *)v111), (id *)(v9 + 8 * *(void *)v113), v9 + 8 * v114, v132);
    if (v1) {
      break;
    }
    if (v114 < v112) {
      goto LABEL_164;
    }
    if (v71 > *((void *)v10 + 2)) {
      goto LABEL_165;
    }
    *(void *)Swift::Int v111 = v112;
    *(void *)&v69[16 * v110 + 8] = v114;
    unint64_t v115 = *((void *)v10 + 2);
    if (v71 >= v115) {
      goto LABEL_166;
    }
    unint64_t v68 = v115 - 1;
    memmove(&v69[16 * v71], v113 + 16, 16 * (v115 - 1 - v71));
    *((void *)v10 + 2) = v115 - 1;
    Swift::Int v3 = v133;
    uint64_t v9 = v134;
    if (v115 <= 2) {
      goto LABEL_140;
    }
  }
  Swift::Int v3 = v133;
LABEL_146:
  swift_bridgeObjectRelease();
  if (v3 < -1)
  {
    __break(1u);
    goto LABEL_148;
  }
LABEL_161:
  *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_10024EAC0();
  swift_bridgeObjectRelease();
}

uint64_t sub_1001C6008(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v25 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v6 = *(void **)(v25 + 8 * v4);
      uint64_t v7 = v23;
      uint64_t v24 = v5;
      while (1)
      {
        Swift::Int v8 = *(void **)v5;
        id v9 = v6;
        id v10 = v8;
        uint64_t v11 = sub_1000D939C(15);
        uint64_t v13 = v12 ? v11 : 0;
        unint64_t v14 = v12 ? v12 : 0xE000000000000000;
        uint64_t v15 = sub_1000D939C(15);
        uint64_t v17 = v16 ? v15 : 0;
        unint64_t v18 = v16 ? v16 : 0xE000000000000000;
        if (v13 == v17 && v14 == v18) {
          break;
        }
        char v20 = sub_10024FA60();

        swift_bridgeObjectRelease();
        __n128 result = swift_bridgeObjectRelease();
        if (v20)
        {
          if (!v25)
          {
            __break(1u);
            return result;
          }
          unint64_t v21 = *(void **)v5;
          uint64_t v6 = *(void **)(v5 + 8);
          *(void *)uint64_t v5 = v6;
          *(void *)(v5 + 8) = v21;
          v5 -= 8;
          if (v4 != ++v7) {
            continue;
          }
        }
        goto LABEL_25;
      }

      __n128 result = swift_bridgeObjectRelease_n();
LABEL_25:
      ++v4;
      uint64_t v5 = v24 + 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1001C615C(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_100037D0C(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    unint64_t v12 = &v4[v11];
    if (v7 >= a2 || v10 < 8)
    {
      unint64_t v31 = a2;
      goto LABEL_74;
    }
    unint64_t v33 = (void **)(a3 - 8);
    unint64_t v31 = a2;
    uint64_t v55 = v7;
    unint64_t v56 = v4;
    while (1)
    {
      unint64_t v60 = (unint64_t)v12;
      uint64_t v34 = v12 - 1;
      unint64_t v58 = v31;
      uint64_t v36 = *(v31 - 1);
      unint64_t v35 = v31 - 1;
      id v37 = *(v12 - 1);
      id v38 = v36;
      uint64_t v39 = sub_1000D939C(15);
      if (v40) {
        uint64_t v41 = v39;
      }
      else {
        uint64_t v41 = 0;
      }
      unint64_t v42 = 0xE000000000000000;
      if (v40) {
        unint64_t v43 = v40;
      }
      else {
        unint64_t v43 = 0xE000000000000000;
      }
      uint64_t v44 = sub_1000D939C(15);
      if (v45) {
        uint64_t v46 = v44;
      }
      else {
        uint64_t v46 = 0;
      }
      if (v45) {
        unint64_t v42 = v45;
      }
      if (v41 == v46 && v43 == v42) {
        char v48 = 0;
      }
      else {
        char v48 = sub_10024FA60();
      }
      Swift::Int v49 = v33 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v48)
      {
        uint64_t v4 = v56;
        BOOL v50 = v49 != v58 || v33 >= v58;
        unint64_t v58 = v35;
        Swift::Int v51 = v55;
        unint64_t v12 = (void **)v60;
        if (!v50) {
          goto LABEL_70;
        }
      }
      else
      {
        BOOL v52 = v49 != (void **)v60 || (unint64_t)v33 >= v60;
        unint64_t v35 = v34;
        unint64_t v12 = v34;
        Swift::Int v51 = v55;
        uint64_t v4 = v56;
        if (!v52) {
          goto LABEL_70;
        }
      }
      *unint64_t v33 = *v35;
LABEL_70:
      --v33;
      unint64_t v31 = v58;
      if (v58 <= v51 || v12 <= v4) {
        goto LABEL_74;
      }
    }
  }
  sub_100037D0C(a1, a2 - a1, a4);
  unint64_t v12 = &v4[v9];
  if ((unint64_t)a2 < a3 && v8 >= 8)
  {
    unint64_t v14 = a2;
    unint64_t v57 = a3;
    uint64_t v59 = &v4[v9];
    while (1)
    {
      uint64_t v15 = *v4;
      id v16 = *v14;
      id v17 = v15;
      uint64_t v18 = sub_1000D939C(15);
      uint64_t v20 = v19 ? v18 : 0;
      unint64_t v21 = v19 ? v19 : 0xE000000000000000;
      uint64_t v22 = sub_1000D939C(15);
      uint64_t v24 = v23 ? v22 : 0;
      unint64_t v25 = v23 ? v23 : 0xE000000000000000;
      if (v20 == v24 && v21 == v25) {
        break;
      }
      char v27 = sub_10024FA60();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        goto LABEL_26;
      }
      id v28 = v14;
      BOOL v29 = v7 == v14++;
LABEL_27:
      unint64_t v12 = v59;
      if (!v29) {
        *uint64_t v7 = *v28;
      }
      ++v7;
      if (v4 >= v59 || (unint64_t)v14 >= v57) {
        goto LABEL_34;
      }
    }

    swift_bridgeObjectRelease_n();
LABEL_26:
    id v28 = v4;
    BOOL v29 = v7 == v4++;
    goto LABEL_27;
  }
LABEL_34:
  unint64_t v31 = v7;
LABEL_74:
  sub_100037D0C(v4, v12 - v4, v31);
  return 1;
}

uint64_t sub_1001C6444()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001C64D8(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v13 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001C6624(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)a2 + 13);
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *((void *)a2 + 21);
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  *(void *)(a1 + 192) = *((void *)a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(void *)(a1 + 208) = *((void *)a2 + 26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *((void *)a2 + 27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1001C680C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE0uLL);
}

uint64_t sub_1001C6814(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001C693C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 224))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001C697C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 224) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 224) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for PaymentSheetInfo()
{
}

void *sub_1001C6A00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __src[1] = 0x65726F7453707041;
  __src[2] = 0xE800000000000000;
  __src[6] = 7368801;
  __src[7] = 0xE300000000000000;
  __src[13] = 0;
  LOBYTE(__src[14]) = 1;
  memset(&__src[15], 0, 32);
  __src[21] = 0;
  __src[22] = 0;
  LOBYTE(__src[23]) = 2;
  __src[24] = 0;
  LOBYTE(__src[25]) = 1;
  LOWORD(__src[0]) = 0;
  BYTE2(__src[0]) = 0;
  __src[26] = 0;
  __src[27] = 0;
  uint64_t v4 = *(void *)(a1 + 88);
  unsigned int v5 = *(unsigned __int8 *)(v4 + 112);
  if (v5 >= 2)
  {
    if (v5 == 2 || (*(unsigned char *)(v4 + 32) & 1) == 0)
    {
      unint64_t v7 = 0xEC0000006E6F6974;
      unint64_t v8 = 0x7069726373627553;
    }
    else
    {
      unint64_t v7 = 0x8000000100283650;
      unint64_t v8 = 0xD00000000000001DLL;
    }
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
    unint64_t v7 = 0xEF65736168637275;
    unint64_t v8 = 0x50207070412D6E49;
  }
  LOBYTE(__src[3]) = v6;
  type metadata accessor for AppIconRoute();
  unint64_t v9 = sub_10006ACC8(*(void *)(a1 + 56), *(void **)(a1 + 64));
  uint64_t v11 = sub_1001CF778(v9, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  __src[4] = v11;
  _OWORD __src[5] = v13;
  memcpy(__dst, (const void *)(a1 + 112), sizeof(__dst));
  __src[9] = __dst[6];
  __src[10] = __dst[7];
  __src[11] = __dst[2];
  __src[12] = __dst[3];
  *(_OWORD *)&__src[19] = xmmword_10025D3E0;
  type metadata accessor for OctaneSubscription();
  uint64_t v14 = swift_dynamicCastClass();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v14)
  {
    sub_100097DDC();
    sub_10024EFA0(v15);
    id v17 = v16;
    [v16 doubleValue];
    uint64_t v19 = v18;

    __src[13] = v19;
    LOBYTE(__src[14]) = 0;
    sub_10020F78C();
    if (*(unsigned char *)(v4 + 112) == 3) {
      uint64_t v20 = 1;
    }
    else {
      uint64_t v20 = *(void *)(a1 + 304);
    }
    if (v20 <= 1) {
      Swift::Int v21 = 1;
    }
    else {
      Swift::Int v21 = v20;
    }
    sub_10024EFF0((NSDecimal *)v20, v21);
    sub_10024EFB0();
    __src[15] = sub_1000512DC();
    __src[16] = v22;
  }
  id v23 = [self standardUserDefaults];
  NSString v24 = sub_10024E6A0();
  unsigned __int8 v25 = [v23 BOOLForKey:v24];

  if ((v25 & 1) == 0) {
    LOBYTE(__src[25]) = 0;
  }
  unint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1000F072C(v26);
  swift_bridgeObjectRelease();
  if (v27)
  {
    uint64_t v29 = *(void *)(v27 + 32);
    unint64_t v28 = *(void *)(v27 + 40);
    uint64_t v30 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0) {
      uint64_t v30 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_25;
    }
    swift_release();
  }
  uint64_t v29 = sub_10020F734();
  unint64_t v28 = v31;
LABEL_25:
  v37._countAndFlagsBits = v29;
  v37._object = (void *)v28;
  sub_10024E800(v37);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = 0x6567616D69252520;
  v38._object = (void *)0xEC0000002525305FLL;
  sub_10024E800(v38);
  if (v25) {
    LOBYTE(__src[23]) = 1;
  }
  else {
    __src[27] = &off_1002D66D0;
  }
  sub_100019524(&qword_1003090E8);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10025EED0;
  *(void *)(v32 + 32) = 0;
  *(void *)(v32 + 40) = 0xE000000000000000;
  uint64_t v33 = *(void *)(a1 + 48);
  *(void *)(v32 + 48) = *(void *)(a1 + 40);
  *(void *)(v32 + 56) = v33;
  *(void *)(v32 + 64) = v8;
  *(void *)(v32 + 72) = v7;
  __src[8] = v32;
  swift_bridgeObjectRetain();
  sub_1001C9E80((void *)a1);
  sub_1000C1174(a1);
  return memcpy(a2, __src, 0xE0uLL);
}

BOOL sub_1001C6E00(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9950;
  return sub_1001C7A28(a1, a2, v2);
}

uint64_t sub_1001C6E0C()
{
  return 1954047348;
}

BOOL sub_1001C6E1C(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9988;
  return sub_1001C7A28(a1, a2, v2);
}

uint64_t sub_1001C6E28()
{
  return 0x65646F6358;
}

BOOL sub_1001C6E48@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9950;
  BOOL result = sub_1001C7A28(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_1001C6E88(void *a1@<X8>)
{
}

uint64_t sub_1001C6E98()
{
  return sub_10024EA50();
}

uint64_t sub_1001C6EF8()
{
  return sub_10024EA00();
}

BOOL sub_1001C6F54@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9988;
  BOOL result = sub_1001C7A28(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_1001C6F94(void *a1@<X8>)
{
}

uint64_t sub_1001C6FA8()
{
  return sub_10024EA50();
}

uint64_t sub_1001C7008()
{
  return sub_10024EA00();
}

uint64_t sub_1001C7058(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001C7130(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 1701869940;
  }
}

void sub_1001C715C()
{
  sub_1000EA9CC();
  sub_100019524(&qword_100317D60);
  sub_10001B550();
  __chkstk_darwin(v1, v2);
  sub_100025F70();
  sub_1001CDC28();
  sub_100025FCC();
  sub_1001CDC74();
  sub_10024F910();
  if (!v0)
  {
    sub_1001CDCC0();
    sub_10024F910();
  }
  sub_100025FB0();
  v3();
  sub_1000EA994();
}

void sub_1001C72A0()
{
  sub_1000EA9CC();
  uint64_t v1 = v0;
  sub_100019524(&qword_100317E20);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_1001CF3C0();
  sub_1001CDC28();
  sub_10024FD20();
  sub_1001CE1F4();
  sub_1001CF6D0();
  sub_1001CE240();
  sub_1001CF6D0();
  sub_100025FB0();
  v4();
  sub_10001C2EC(v1);
  sub_1000EA994();
}

uint64_t sub_1001C7414()
{
  return sub_1001C7130(*v0);
}

uint64_t sub_1001C741C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C7058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C7444(uint64_t a1)
{
  unint64_t v2 = sub_1001CDC28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C7480(uint64_t a1)
{
  unint64_t v2 = sub_1001CDC28();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001C74BC(unsigned char *a1@<X8>)
{
  sub_1001C72A0();
  if (!v1)
  {
    *a1 = v3 & 1;
    a1[1] = HIBYTE(v3) & 1;
  }
}

void sub_1001C74F4()
{
}

uint64_t sub_1001C7528(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726564616568 && a2 == 0xE600000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001C7608(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 0x726564616568;
  }
}

void sub_1001C7638()
{
  sub_1000EA748();
  v12[0] = v1;
  v12[1] = v2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_100019524(&qword_100317D88);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(v4, v4[3]);
  sub_1001CDD58();
  sub_10024FD40();
  sub_10024F8D0();
  if (!v0) {
    sub_10024F8D0();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v5);
  sub_1000EA730();
}

void sub_1001C7774()
{
  sub_1000EA748();
  uint64_t v2 = v1;
  sub_100019524(&qword_100317E18);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1001CF3C0();
  sub_1001CDD58();
  sub_1001CF408();
  if (v0)
  {
    sub_1001CF470();
  }
  else
  {
    sub_10024F7C0();
    sub_10024F7C0();
    uint64_t v5 = sub_1001CF6B0();
    v6(v5);
    sub_10001C2EC(v2);
  }
  sub_1000EA730();
}

uint64_t sub_1001C78C8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v4._rawValue = &off_1002D99C0;
  v6._object = a2;
  sub_10024F790(v4, v6);
  sub_10001B63C();
  if (v2 >= 4) {
    return 4;
  }
  else {
    return v2;
  }
}

unint64_t sub_1001C790C(char a1)
{
  unint64_t result = 0x69614D6563697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x6275536563697270;
      break;
    case 3:
      unint64_t result = 0x746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001C79A8(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9A40;
  return sub_1001C9B88(a1, a2, v2);
}

uint64_t sub_1001C79B4(char a1)
{
  if (a1) {
    return 0x656772616CLL;
  }
  else {
    return 0x6C616D726F6ELL;
  }
}

uint64_t sub_1001C79E4(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9A90;
  return sub_1001C9B88(a1, a2, v2);
}

uint64_t sub_1001C79F0(char a1)
{
  if (a1) {
    return 2036429415;
  }
  else {
    return 0x6B63616C62;
  }
}

BOOL sub_1001C7A1C(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9AE0;
  return sub_1001C7A28(a1, a2, v2);
}

BOOL sub_1001C7A28(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  sub_1001CF758(a1, a2, a3);
  sub_10001B63C();
  return v3 != 0;
}

uint64_t sub_1001C7A54()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1001C7A68()
{
  return sub_1001C7608(*v0);
}

uint64_t sub_1001C7A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C7528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C7A98(uint64_t a1)
{
  unint64_t v2 = sub_1001CDD58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C7AD4(uint64_t a1)
{
  unint64_t v2 = sub_1001CDD58();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001C7B10(void *a1@<X8>)
{
  sub_1001C7774();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

void sub_1001C7B40()
{
}

uint64_t sub_1001C7B60(unsigned __int8 *a1, char *a2)
{
  return sub_1000FB9CC(*a1, *a2);
}

Swift::Int sub_1001C7B6C()
{
  return sub_1001D39F8(*v0);
}

uint64_t sub_1001C7B74(uint64_t a1)
{
  return sub_1000D2634(a1, *v1);
}

Swift::Int sub_1001C7B7C(uint64_t a1)
{
  return sub_1000D3B98(a1, *v1);
}

uint64_t sub_1001C7B84@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C78C8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001C7BB4()
{
  char v1 = sub_1000621E4();
  unint64_t result = sub_1001C790C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001C7BDC()
{
  return sub_10024EA50();
}

uint64_t sub_1001C7C3C()
{
  return sub_10024EA00();
}

uint64_t sub_1001C7C8C(char *a1, char *a2)
{
  return sub_1000FB940(*a1, *a2);
}

Swift::Int sub_1001C7C98()
{
  return sub_1001D3A10();
}

uint64_t sub_1001C7CA0()
{
  return sub_1000D25D0();
}

Swift::Int sub_1001C7CA8()
{
  return sub_1000D3B30();
}

uint64_t sub_1001C7CB0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9A40;
  uint64_t result = sub_1001C9B88(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1001C7CE8()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1001C79B4(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001C7D10()
{
  return sub_10024EA50();
}

uint64_t sub_1001C7D70()
{
  return sub_10024EA00();
}

uint64_t sub_1001C7DC0(char *a1, char *a2)
{
  return sub_1000FB8B8(*a1, *a2);
}

Swift::Int sub_1001C7DCC()
{
  return sub_1001D3A1C();
}

uint64_t sub_1001C7DD4()
{
  return sub_1000D2570();
}

Swift::Int sub_1001C7DDC()
{
  return sub_1000D3ACC();
}

uint64_t sub_1001C7DE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9A90;
  uint64_t result = sub_1001C9B88(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1001C7E1C()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1001C79F0(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001C7E44()
{
  return sub_10024EA50();
}

uint64_t sub_1001C7EA4()
{
  return sub_10024EA00();
}

BOOL sub_1001C7F00@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9AE0;
  BOOL result = sub_1001C7A28(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_1001C7F40(void *a1@<X8>)
{
}

uint64_t sub_1001C7F54()
{
  return sub_10024EA50();
}

uint64_t sub_1001C7FB4()
{
  return sub_10024EA00();
}

void sub_1001C8004()
{
  sub_1000EA9CC();
  uint64_t v2 = v1;
  sub_100019524(&qword_100317DD8);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_100025F70();
  sub_1001CDFE0();
  sub_100025FCC();
  sub_1001CE02C();
  sub_1001CF5DC();
  if (!v0)
  {
    if ((v2 & 0x100) != 0)
    {
      char v6 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
      {
        sub_1001CF5D0();
        sub_1001CE078();
        sub_1001CF5DC();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if ((v2 & 0x10000) != 0)
    {
      char v7 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
      {
        sub_1001CE0C4();
        sub_1001CF5DC();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if ((v2 & 0x1000000) != 0) {
      sub_10024F940();
    }
    if ((v2 & 0x100000000) == 0)
    {
      sub_1001CE110();
      sub_10024F980();
    }
  }
  sub_100025FB0();
  v5();
  sub_1000EA994();
}

uint64_t sub_1001C8250(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1000CC324() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1702521203 && a2 == 0xE400000000000000;
    if (v6 || (sub_1000CC324() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1684828002 && a2 == 0xE400000000000000;
      if (v7 || (sub_1000CC324() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
        if (v8 || (sub_1000CC324() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x42676E6963617073 && a2 == 0xED000065726F6665)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1000CC324();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1001C8414(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 1702521203;
      break;
    case 2:
      uint64_t result = 1684828002;
      break;
    case 3:
      uint64_t result = 0x726F6C6F63;
      break;
    case 4:
      uint64_t result = 0x42676E6963617073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001C84AC()
{
  return sub_1001C8414(*v0);
}

uint64_t sub_1001C84B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C8250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C84DC(uint64_t a1)
{
  unint64_t v2 = sub_1001CDFE0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C8518(uint64_t a1)
{
  unint64_t v2 = sub_1001CDFE0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001C8554()
{
}

uint64_t sub_1001C85C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001C869C(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0x65756C6176;
  }
}

void sub_1001C86C8()
{
  sub_1000EA748();
  sub_1001CF698(v2, v3, v4, v5);
  sub_100019524(&qword_100317F10);
  sub_10001B550();
  __chkstk_darwin(v6, v7);
  sub_10001C2A8(v0, v0[3]);
  sub_1001CEF50();
  sub_1001CF724();
  sub_1001CF444();
  if (!v1)
  {
    sub_1001CF5D0();
    sub_1001CE078();
    sub_1001CF614();
  }
  uint64_t v8 = sub_1001CF554();
  v9(v8);
  sub_1000EA730();
}

void sub_1001C87B8()
{
  sub_1000EA9CC();
  uint64_t v2 = v1;
  sub_100019524(&qword_100317F30);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1001CF3C0();
  sub_1001CEF50();
  sub_1001CF408();
  if (v0)
  {
    sub_10001C2EC(v2);
  }
  else
  {
    sub_1001CF56C();
    sub_1001CF5D0();
    unint64_t v5 = sub_1001CEFE8();
    swift_bridgeObjectRetain();
    sub_1001CF49C();
    uint64_t v6 = sub_100067DF4();
    v7(v6);
    if (v5) {
      swift_bridgeObjectRelease();
    }
    sub_1001CF470();
  }
  sub_1001CF680();
  sub_1000EA994();
}

uint64_t sub_1001C88E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10024FA60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001C89CC(char a1)
{
  if (a1) {
    return 0x656C797473;
  }
  else {
    return 0x65756C6176;
  }
}

void sub_1001C89F4()
{
  sub_1000EA748();
  sub_1001CF698(v2, v3, v4, v5);
  sub_100019524(&qword_100317F00);
  sub_10001B550();
  __chkstk_darwin(v6, v7);
  sub_10001C2A8(v0, v0[3]);
  sub_1001CEF04();
  sub_1001CF724();
  sub_1001CF444();
  if (!v1)
  {
    sub_1001CF5D0();
    sub_1001CE02C();
    sub_1001CF614();
  }
  uint64_t v8 = sub_1001CF554();
  v9(v8);
  sub_1000EA730();
}

void sub_1001C8AE0()
{
  sub_1000EA9CC();
  uint64_t v2 = v1;
  sub_100019524(&qword_100317F20);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  sub_1001CF3C0();
  sub_1001CEF04();
  sub_1001CF408();
  if (v0)
  {
    sub_10001C2EC(v2);
  }
  else
  {
    sub_1001CF56C();
    sub_1001CF5D0();
    unint64_t v5 = sub_1001CEF9C();
    swift_bridgeObjectRetain();
    sub_1001CF49C();
    uint64_t v6 = sub_100067DF4();
    v7(v6);
    if (v5) {
      swift_bridgeObjectRelease();
    }
    sub_1001CF470();
  }
  sub_1001CF680();
  sub_1000EA994();
}

uint64_t sub_1001C8C0C()
{
  return sub_1001C869C(*v0);
}

uint64_t sub_1001C8C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C85C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C8C3C(uint64_t a1)
{
  unint64_t v2 = sub_1001CEF50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C8C78(uint64_t a1)
{
  unint64_t v2 = sub_1001CEF50();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001C8CB4(uint64_t a1@<X8>)
{
  sub_1001C87B8();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5 & 1;
  }
}

void sub_1001C8CE8()
{
}

uint64_t sub_1001C8D08()
{
  return sub_1001C89CC(*v0);
}

uint64_t sub_1001C8D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C88E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C8D38(uint64_t a1)
{
  unint64_t v2 = sub_1001CEF04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C8D74(uint64_t a1)
{
  unint64_t v2 = sub_1001CEF04();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001C8DB0(uint64_t a1@<X8>)
{
  sub_1001C8AE0();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5;
  }
}

void sub_1001C8DE0()
{
}

uint64_t sub_1001C8E00(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_10001C2A8(a1, a1[3]);
  uint64_t v5 = sub_10024FD30();
  if (a4 >> 6)
  {
    sub_1001CF530(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15, v16, v17[0], v18, v19, v20);
    if (a4 >> 6 == 1) {
      sub_1001CE1A8();
    }
    else {
      sub_1001CE15C();
    }
    sub_10024FAC0();
  }
  else
  {
    sub_100051B64((uint64_t)v17, v20);
    sub_10024FA90();
  }
  return sub_10001C2EC((uint64_t)v17);
}

uint64_t sub_1001C8F0C(void *a1)
{
  return sub_1001C8E00(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

void sub_1001C8F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000EA748();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v21;
  unsigned __int8 v25 = v20;
  uint64_t v27 = v26;
  sub_1000CE8A4(v25, (uint64_t)&v108);
  uint64_t v28 = sub_100019524(&qword_100317DA0);
  sub_10001B550();
  uint64_t v93 = v29;
  __chkstk_darwin(v30, v31);
  uint64_t v97 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v86 - v35;
  __chkstk_darwin(v37, v38);
  unint64_t v40 = (char *)&v86 - v39;
  sub_10001C2A8(v27, v27[3]);
  unint64_t v95 = sub_1001CDDF0();
  sub_10024FD40();
  uint64_t v91 = v25;
  sub_1000CE8A4(v25, (uint64_t)&v109);
  uint64_t v99 = v28;
  uint64_t v96 = v40;
  switch((v112 >> 4) & 3)
  {
    case 1:
      v112 &= 0xCFu;
      uint64_t v46 = v110;
      long long v104 = v109;
      LOBYTE(v101) = 0;
      sub_100019524(&qword_10030AA30);
      sub_1001CDF0C(&qword_100317DC0, &qword_10030AA30);
      sub_1001CF4E0();
      sub_10024F980();
      if (v21) {
        goto LABEL_3;
      }
      *(void *)&long long v104 = v46;
      sub_1001CF6F0();
      sub_100019524(&qword_100317DC8);
      sub_1001CDF68(&qword_100317DD0, &qword_100317DC8, (void (*)(void))sub_1001CDEC0);
      sub_1001CF4E0();
      goto LABEL_25;
    case 2:
      v112 &= 0xCFu;
      uint64_t v47 = v109;
      LOBYTE(v104) = 2;
      sub_10024F8C0();
      sub_1001CF6F0();
      sub_10024F8B0();
      uint64_t v48 = *(void *)(v47 + 16);
      if (!v48) {
        goto LABEL_16;
      }
      uint64_t v88 = v36;
      BOOL v92 = (void (**)(void))(v93 + 8);
      swift_bridgeObjectRetain();
      uint64_t v87 = v47;
      Swift::Int v49 = (unsigned __int8 *)(v47 + 64);
      while (2)
      {
        uint64_t v100 = v24;
        uint64_t v94 = v48;
        uint64_t v50 = *((void *)v49 - 4);
        uint64_t v51 = *((void *)v49 - 3);
        uint64_t v52 = *((void *)v49 - 2);
        uint64_t v53 = *((void *)v49 - 1);
        unsigned int v54 = *v49;
        sub_100051B64((uint64_t)&v104, v106);
        uint64_t v98 = v51;
        sub_1001CD4D4(v50, v51, v52, v53, v54);
        sub_10024F9F0();
        int v55 = (v54 >> 4) & 3;
        if (v55)
        {
          uint64_t v56 = v98;
          uint64_t v89 = v53;
          LODWORD(v90) = v54;
          uint64_t v57 = v99;
          uint64_t v24 = v100;
          if (v55 != 1)
          {
            sub_1001CF500(v50, v98, v52, (uint64_t)&a10);
            sub_1001CF42C();
            sub_1001CDE74();
            swift_allocError();
            unsigned char *v81 = 0;
            swift_willThrow();
            uint64_t v61 = *v92;
            uint64_t v82 = sub_1001CF744((uint64_t)&a18);
            ((void (*)(uint64_t))v61)(v82);
            uint64_t v83 = sub_1001CF744((uint64_t)&a9);
            ((void (*)(uint64_t))v61)(v83);
            unint64_t v62 = v96;
            uint64_t v63 = v57;
LABEL_29:
            ((void (*)(char *, uint64_t))v61)(v62, v63);
            goto LABEL_33;
          }
          uint64_t v101 = v50;
          uint64_t v102 = v98;
          HIBYTE(a10) = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100019524(&qword_10030AA30);
          sub_1001CDF0C(&qword_100317DC0, &qword_10030AA30);
          sub_1001CF710();
          sub_10024F980();
          if (!v24)
          {
            swift_bridgeObjectRelease();
            uint64_t v101 = v52;
            HIBYTE(a10) = 1;
            sub_100019524(&qword_100317DC8);
            sub_1001CDF68(&qword_100317DD0, &qword_100317DC8, (void (*)(void))sub_1001CDEC0);
            sub_1001CF710();
            sub_10024F980();
            sub_1001CF500(v50, v56, v52, (uint64_t)&a10);
            sub_10003FDC8();
            v58();
            swift_bridgeObjectRelease();
            uint64_t v28 = v57;
            goto LABEL_14;
          }
          swift_bridgeObjectRelease();
          sub_1001CF500(v50, v56, v52, (uint64_t)&a10);
          uint64_t v84 = *v92;
          sub_1001CF3B0();
          v84();
          sub_1001CF42C();
          sub_1001CF3B0();
          v84();
          sub_1001CF3B0();
          v84();
        }
        else
        {
          uint64_t v90 = v50;
          uint64_t v101 = v50;
          uint64_t v102 = v98;
          HIBYTE(a10) = 0;
          swift_bridgeObjectRetain();
          sub_1001CD0A0(v52, v53, v54);
          sub_100019524(&qword_10030AA30);
          sub_1001CDF0C(&qword_100317DC0, &qword_10030AA30);
          uint64_t v28 = v99;
          uint64_t v59 = v100;
          sub_10024F980();
          uint64_t v24 = v59;
          if (!v59)
          {
            swift_bridgeObjectRelease();
            uint64_t v101 = v52;
            uint64_t v102 = v53;
            char v103 = v54;
            HIBYTE(a10) = 1;
            sub_1001CDEC0();
            sub_1001CF6FC();
            sub_10024F980();
            sub_1001CF5F8(v90, v98);
            sub_10003FDC8();
            v60();
            sub_1001CF590();
LABEL_14:
            v49 += 40;
            uint64_t v48 = v94 - 1;
            if (v94 == 1)
            {
              sub_1001CF42C();
              unint64_t v40 = v96;
              uint64_t v47 = v87;
LABEL_16:
              uint64_t v101 = v47;
              HIBYTE(a10) = 1;
              sub_100019524(&qword_100317CE0);
              sub_1001CDF68(&qword_100317CE8, &qword_100317CE0, (void (*)(void))sub_1001CCFD0);
              sub_1001CF6FC();
              sub_10024F980();
              uint64_t v61 = *(void (**)(void))(v93 + 8);
              sub_1001CF3A0();
              v61();
              unint64_t v62 = v40;
              uint64_t v63 = v28;
              goto LABEL_29;
            }
            continue;
          }
          sub_1001CF590();
          sub_1001CF5F8(v90, v98);
          uint64_t v85 = *v92;
          sub_1001CF3A0();
          v85();
          sub_1001CF42C();
          sub_1001CF3A0();
          v85();
          ((void (*)(char *, uint64_t))v85)(v96, v28);
        }
        break;
      }
      swift_bridgeObjectRelease();
LABEL_33:
      sub_10001C2EC((uint64_t)&v104);
LABEL_34:
      sub_1000EA730();
      return;
    case 3:
      uint64_t v100 = v21;
      v112 &= 0xCFu;
      uint64_t v64 = v109;
      sub_1001CF6F0();
      swift_bridgeObjectRetain();
      sub_10024F8B0();
      uint64_t v65 = *(void *)(v64 + 16);
      if (!v65) {
        goto LABEL_22;
      }
      unint64_t v66 = (unsigned __int8 *)(v64 + 64);
      while (2)
      {
        unsigned int v67 = *v66;
        if ((v67 & 0x30) != 0)
        {
          sub_1001CF42C();
          sub_1001CDE74();
          swift_allocError();
          *uint64_t v77 = 1;
          swift_willThrow();
          uint64_t v78 = sub_1001CF354();
          v79(v78);
        }
        else
        {
          uint64_t v68 = *((void *)v66 - 4);
          uint64_t v69 = *((void *)v66 - 3);
          uint64_t v70 = *((void *)v66 - 1);
          uint64_t v101 = *((void *)v66 - 2);
          uint64_t v71 = v101;
          uint64_t v102 = v70;
          char v103 = v67;
          uint64_t v98 = v107;
          sub_100051B64((uint64_t)&v104, v106);
          sub_1001CD4D4(v68, v69, v71, v70, v67);
          sub_1001CD0A0(v71, v70, v67);
          sub_1001CDEC0();
          uint64_t v72 = v100;
          sub_10024FA00();
          uint64_t v100 = v72;
          if (!v72)
          {
            v66 += 40;
            sub_1001CF65C();
            sub_1001CD0CC(v71, v70, v67);
            if (!--v65)
            {
LABEL_22:
              sub_1001CF42C();
              uint64_t v73 = sub_1001CF354();
              v74(v73);
              goto LABEL_33;
            }
            continue;
          }
          sub_1001CF65C();
          sub_1001CF42C();
          sub_10003FDC8();
          v80();
          sub_1001CD0CC(v71, v70, v67);
        }
        goto LABEL_33;
      }
    default:
      char v41 = v112 & 0xCF;
      v112 &= 0xCFu;
      uint64_t v42 = v110;
      uint64_t v43 = v111;
      long long v104 = v109;
      LOBYTE(v101) = 0;
      sub_100019524(&qword_10030AA30);
      sub_1001CDF0C(&qword_100317DC0, &qword_10030AA30);
      sub_10024F980();
      if (v21)
      {
LABEL_3:
        uint64_t v44 = sub_1001CF354();
        v45(v44);
      }
      else
      {
        *(void *)&long long v104 = v42;
        *((void *)&v104 + 1) = v43;
        char v105 = v41;
        sub_1001CF6F0();
        sub_1001CDEC0();
LABEL_25:
        sub_10024F980();
        uint64_t v75 = sub_1001CF354();
        v76(v75);
      }
      goto LABEL_34;
  }
}

uint64_t sub_1001C99B8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v4._rawValue = &off_1002D9B18;
  v6._object = a2;
  sub_10024F790(v4, v6);
  sub_10001B63C();
  if (v2 >= 3) {
    return 3;
  }
  else {
    return v2;
  }
}

uint64_t sub_1001C9A00(char a1)
{
  if (!a1) {
    return sub_1001CF51C();
  }
  if (a1 == 1) {
    return 0x65756C6176;
  }
  return 0x7475626972747461;
}

uint64_t sub_1001C9A4C(unsigned __int8 *a1, char *a2)
{
  return sub_1000FBB40(*a1, *a2);
}

Swift::Int sub_1001C9A58()
{
  return sub_1001D3A80();
}

uint64_t sub_1001C9A60(uint64_t a1)
{
  return sub_1000D26F8(a1, *v1);
}

Swift::Int sub_1001C9A68()
{
  return sub_1000D3BB0();
}

uint64_t sub_1001C9A70@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C99B8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001C9AA0()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1001C9A00(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001C9AC8()
{
  return sub_1001C9A00(*v0);
}

uint64_t sub_1001C9AD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001C99FC();
  *a1 = result;
  return result;
}

void sub_1001C9AF8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1001C9B04(uint64_t a1)
{
  unint64_t v2 = sub_1001CDDF0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C9B40(uint64_t a1)
{
  unint64_t v2 = sub_1001CDDF0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001C9B7C(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9B80;
  return sub_1001C9B88(a1, a2, v2);
}

uint64_t sub_1001C9B88(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  sub_1001CF758(a1, a2, a3);
  sub_10001B63C();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001C9BC0(char a1)
{
  if (a1) {
    return 0x6269726373627553;
  }
  else {
    return 7954768;
  }
}

void sub_1001C9BF4(uint64_t a1)
{
  sub_1000CE8A4(v1, (uint64_t)var48);
  sub_1001C8F2C(a1, v3, v4, v5, v6, v7, v8, v9, v10, var48[0], var48[1], var48[2], var48[3], var48[4], var48[5], var48[6], var48[7], var48[8], var48[9],
    var48[10]);
}

uint64_t sub_1001C9C44(char *a1, char *a2)
{
  return sub_1000FACB4(*a1, *a2);
}

Swift::Int sub_1001C9C50()
{
  return sub_1001D3A8C();
}

uint64_t sub_1001C9C58()
{
  return sub_1000D1C78();
}

Swift::Int sub_1001C9C60()
{
  return sub_1000D35B4();
}

uint64_t sub_1001C9C68@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9B80;
  uint64_t result = sub_1001C9B88(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1001C9CA0()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_1001C9BC0(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1001C9CC8()
{
  return sub_10024EA50();
}

uint64_t sub_1001C9D28()
{
  return sub_10024EA00();
}

BOOL sub_1001C9D78(uint64_t a1)
{
  return a1 != 2;
}

BOOL sub_1001C9D90@<W0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1001C9D78(*a1);
  *a2 = result;
  return result;
}

void sub_1001C9DC4(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1001C9DD0()
{
  return sub_10024EA60();
}

uint64_t sub_1001C9E30()
{
  return sub_10024EA10();
}

uint64_t sub_1001C9E80(void *a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v1 + 200);
  if (v4 == 1)
  {
    sub_100019524(&qword_10030A470);
    uint64_t v5 = (void *)swift_allocObject();
    *((_OWORD *)v5 + 1) = xmmword_100255FB0;
    *((_OWORD *)v5 + 2) = xmmword_1002690E0;
    v5[6] = 0xD000000000000050;
    v5[7] = 0x8000000100283670;
    *((unsigned char *)v5 + 64) = 0;
    uint64_t v6 = (void *)a1[24];
    if (v6)
    {
      uint64_t v79 = v1;
      uint64_t v7 = a1[25];
      uint64_t v8 = a1[26];
      uint64_t v10 = a1[27];
      uint64_t v9 = a1[28];
      uint64_t v12 = a1[29];
      uint64_t v11 = a1[30];
      uint64_t v14 = a1[31];
      uint64_t v13 = a1[32];
      uint64_t v16 = a1[33];
      uint64_t v15 = a1[34];
      uint64_t v18 = a1[35];
      uint64_t v17 = a1[36];
      uint64_t v19 = a1[37];
      uint64_t v96 = a1[24];
      uint64_t v97 = v7;
      uint64_t v98 = v8;
      uint64_t v99 = v10;
      uint64_t v100 = v9;
      uint64_t v101 = v12;
      uint64_t v102 = v11;
      uint64_t v103 = v14;
      uint64_t v104 = v13;
      uint64_t v105 = v16;
      uint64_t v106 = v15;
      uint64_t v107 = v18;
      uint64_t v77 = v6;
      uint64_t v108 = v17;
      uint64_t v109 = v19;
      id v20 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_1001ACDE8(1);
      uint64_t v23 = v22;
      unint64_t v24 = v5[2];
      if (v24 >= v5[3] >> 1)
      {
        sub_100035494();
        uint64_t v5 = v66;
      }
      _OWORD v5[2] = v24 + 1;
      unsigned __int8 v25 = &v5[5 * v24];
      *((_OWORD *)v25 + 2) = xmmword_1002690F0;
      v25[6] = v21;
      v25[7] = v23;
      *((unsigned char *)v25 + 64) = 0;
      sub_10009856C(v77);
      uint64_t v2 = v79;
      LOBYTE(v4) = 1;
    }
  }
  else
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  uint64_t v26 = a1[11];
  type metadata accessor for OctaneSubscription();
  uint64_t v27 = swift_dynamicCastClass();
  if (v27)
  {
    uint64_t v28 = v27;
    swift_retain();
    uint64_t v29 = sub_1001CA568(v28, a1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (v4)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100035494();
        uint64_t v5 = v67;
      }
      unint64_t v31 = v5[2];
      if (v31 >= v5[3] >> 1)
      {
        sub_100035494();
        uint64_t v5 = v68;
      }
      _OWORD v5[2] = v31 + 1;
      uint64_t v32 = &v5[5 * v31];
      v32[4] = v29;
      v32[5] = 0;
      v32[6] = 0;
      v32[7] = 0;
      *((unsigned char *)v32 + 64) = 32;
      swift_release();
      goto LABEL_42;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100035494();
      uint64_t v5 = v69;
    }
    unint64_t v35 = v5[2];
    if (v35 >= v5[3] >> 1)
    {
      sub_100035494();
      uint64_t v5 = v70;
    }
    _OWORD v5[2] = v35 + 1;
    uint64_t v36 = &v5[5 * v35];
    void v36[4] = v29;
    v36[5] = 0;
    v36[6] = 0;
    v36[7] = 0;
    *((unsigned char *)v36 + 64) = 48;
    swift_release();
  }
  else
  {
    if (v4) {
      goto LABEL_42;
    }
    sub_100019524(&qword_10030A470);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100256170;
    sub_10020F78C();
    if (*(unsigned char *)(v26 + 112) == 3) {
      uint64_t v34 = 1;
    }
    else {
      uint64_t v34 = a1[38];
    }
    if (v34 <= 1) {
      Swift::Int v37 = 1;
    }
    else {
      Swift::Int v37 = v34;
    }
    sub_10024EFF0((NSDecimal *)v34, v37);
    sub_10024EFB0();
    memcpy(__dst, a1 + 14, sizeof(__dst));
    uint64_t v38 = sub_1000512DC();
    *(void *)(v33 + 32) = 0;
    *(void *)(v33 + 40) = 0;
    *(void *)(v33 + 48) = v38;
    *(void *)(v33 + 56) = v39;
    *(unsigned char *)(v33 + 64) = 0x80;
    *(void *)(v33 + 72) = 0;
    *(void *)(v33 + 80) = 0;
    *(_OWORD *)(v33 + 88) = xmmword_100269100;
    *(unsigned char *)(v33 + 104) = -126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100035494();
      uint64_t v5 = v73;
    }
    unint64_t v40 = v5[2];
    if (v40 >= v5[3] >> 1)
    {
      sub_100035494();
      uint64_t v5 = v74;
    }
    _OWORD v5[2] = v40 + 1;
    char v41 = &v5[5 * v40];
    v41[4] = v33;
    v41[5] = 0;
    v41[6] = 0;
    v41[7] = 0;
    *((unsigned char *)v41 + 64) = 48;
  }
  uint64_t v42 = (void *)a1[24];
  if (v42)
  {
    uint64_t v80 = v2;
    uint64_t v43 = a1[25];
    uint64_t v44 = a1[26];
    uint64_t v46 = a1[27];
    uint64_t v45 = a1[28];
    uint64_t v48 = a1[29];
    uint64_t v47 = a1[30];
    uint64_t v50 = a1[31];
    uint64_t v49 = a1[32];
    uint64_t v52 = a1[33];
    uint64_t v51 = a1[34];
    uint64_t v54 = a1[35];
    uint64_t v53 = a1[36];
    uint64_t v55 = a1[37];
    uint64_t v82 = v42;
    uint64_t v83 = v43;
    uint64_t v84 = v44;
    uint64_t v85 = v46;
    uint64_t v86 = v45;
    uint64_t v87 = v48;
    uint64_t v88 = v47;
    uint64_t v89 = v50;
    uint64_t v90 = v49;
    uint64_t v91 = v52;
    uint64_t v92 = v51;
    uint64_t v93 = v54;
    uint64_t v94 = v53;
    uint64_t v95 = v55;
    uint64_t v78 = v42;
    id v56 = v42;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001ACDE8(v4);
    uint64_t v57 = sub_10006B820();
    uint64_t v59 = v58;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100035494();
      uint64_t v5 = v71;
    }
    unint64_t v60 = v5[2];
    uint64_t v61 = v78;
    if (v60 >= v5[3] >> 1)
    {
      sub_100035494();
      uint64_t v5 = v72;
      uint64_t v61 = v78;
    }
    _OWORD v5[2] = v60 + 1;
    unint64_t v62 = &v5[5 * v60];
    v62[4] = 0;
    v62[5] = 0;
    v62[6] = v57;
    v62[7] = v59;
    *((unsigned char *)v62 + 64) = 0;
    sub_10009856C(v61);
    uint64_t v2 = v80;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100035494();
      uint64_t v5 = v75;
    }
    unint64_t v63 = v5[2];
    if (v63 >= v5[3] >> 1)
    {
      sub_100035494();
      uint64_t v5 = v76;
    }
    _OWORD v5[2] = v63 + 1;
    uint64_t v64 = &v5[5 * v63];
    v64[4] = 0;
    v64[5] = 0;
    v64[6] = 0xD000000000000050;
    v64[7] = 0x8000000100283670;
    *((unsigned char *)v64 + 64) = 0;
  }
LABEL_42:
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 208) = v5;
  return result;
}

uint64_t sub_1001CA568(uint64_t a1, void *a2)
{
  uint64_t v221 = sub_10024E030();
  unint64_t v199 = *(void *)(v221 - 8);
  __chkstk_darwin(v221, v4);
  v224 = (char *)&v178 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_10024E0F0();
  __chkstk_darwin(v216, v6);
  v215 = (char *)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_10024EF60();
  uint64_t v232 = *(void *)(v214 - 8);
  __chkstk_darwin(v214, v8);
  v213 = (char *)&v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100019524(&qword_10030B090);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v212 = (uint64_t)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v202 = (uint64_t)&v178 - v19;
  uint64_t v223 = sub_10024DBF0();
  uint64_t v20 = *(void *)(v223 - 8);
  __chkstk_darwin(v223, v21);
  v222 = (char *)&v178 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  uint64_t v201 = v23;
  *(void *)(v23 + 16) = _swiftEmptyArrayStorage;
  v228 = (uint64_t *)(v23 + 16);
  uint64_t v24 = *(void *)(a1 + 176);
  char v25 = *(unsigned char *)(a1 + 184);
  uint64_t v26 = a2[11];
  sub_10020F78C();
  if (*(unsigned char *)(v26 + 112) == 3) {
    uint64_t v27 = 1;
  }
  else {
    uint64_t v27 = a2[38];
  }
  if (v27 <= 1) {
    Swift::Int v28 = 1;
  }
  else {
    Swift::Int v28 = v27;
  }
  sub_10024EFF0((NSDecimal *)v27, v28);
  sub_10024EFB0();
  memcpy(v244, a2 + 14, sizeof(v244));
  v220 = a2;
  uint64_t v210 = a2[13];
  uint64_t v29 = sub_1000512DC();
  uint64_t v31 = v30;
  id v32 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v32 setUnitsStyle:3];
  [v32 setAllowedUnits:4124];
  uint64_t v33 = v222;
  sub_100213A0C(v24, v25);
  Class isa = sub_10024DBC0().super.isa;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v20 + 8);
  unint64_t v35 = v20 + 8;
  unint64_t v211 = v35;
  v209 = v36;
  v36(v33, v223);
  id v37 = [v32 stringFromDateComponents:isa];

  if (v37)
  {
    uint64_t v38 = sub_10024E6B0();
    uint64_t v40 = v39;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v40 = 0xE000000000000000;
  }
  if (v24 == 1)
  {
    uint64_t v245 = v38;
    v246 = (void *)v40;
    uint64_t v238 = 32;
    unint64_t v239 = 0xE100000000000000;
    sub_10001DAC0();
    uint64_t v41 = sub_10024F130();
    swift_bridgeObjectRelease();
    uint64_t v245 = sub_10006BFC0(1, v41);
    v246 = v42;
    BOOL v247 = v43;
    uint64_t v248 = v44;
    sub_100019524(&qword_10030BF68);
    sub_10001B0A4((unint64_t *)&qword_10030BF70, &qword_10030BF68);
    uint64_t v38 = sub_10024E5C0();
    uint64_t v40 = v45;
    swift_unknownObjectRelease();
  }

  uint64_t v46 = v220;
  uint64_t v180 = sub_1001CC104(v29, v31, v38, v40, v24 != 1);
  uint64_t v181 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = (void *)v46[24];
  uint64_t v49 = v46[26];
  uint64_t v50 = v46[27];
  uint64_t v178 = (void *)v46[25];
  uint64_t v179 = v50;
  uint64_t v51 = v46[28];
  BOOL v186 = v49;
  uint64_t v187 = v51;
  uint64_t v52 = v46[30];
  uint64_t v188 = v46[29];
  uint64_t v189 = v52;
  uint64_t v190 = v46[31];
  uint64_t v191 = v48;
  uint64_t v53 = v46[32];
  uint64_t v184 = v46[33];
  uint64_t v185 = v53;
  uint64_t v54 = v46[34];
  uint64_t v55 = v46[35];
  uint64_t v182 = v46[36];
  uint64_t v183 = v54;
  uint64_t v192 = v46[37];
  uint64_t v193 = v55;
  uint64_t v56 = v221;
  if (v48)
  {
    sub_1000D9478(4);
    uint64_t v57 = v228;
    uint64_t v58 = (char *)v199;
    if (v59)
    {
      uint64_t v60 = 1;
    }
    else
    {
      sub_10024DF60();
      uint64_t v60 = 0;
    }
  }
  else
  {
    uint64_t v60 = 1;
    uint64_t v57 = v228;
    uint64_t v58 = (char *)v199;
  }
  sub_1000195B4(v202, v60, 1, v56);
  sub_100019524(&qword_100317D18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002576E0;
  sub_1000458B4((uint64_t)(v46 + 12), (uint64_t)&v243, &qword_100309D38);
  sub_1000458B4((uint64_t)&v243, (uint64_t)&v259, &qword_100309D38);
  *(void *)(inited + 32) = v259;
  sub_1000458B4((uint64_t)(v46 + 2), (uint64_t)&v242, &qword_100317D20);
  sub_1000458B4((uint64_t)&v242, (uint64_t)&v260, &qword_100317D20);
  *(void *)(inited + 40) = v260;
  sub_1000458B4((uint64_t)(v46 + 3), (uint64_t)&v241, &qword_100317D28);
  sub_1000458B4((uint64_t)&v241, (uint64_t)&v261, &qword_100317D28);
  *(void *)(inited + 48) = v261;
  sub_1000458B4((uint64_t)(v46 + 4), (uint64_t)&v240, &qword_100317D30);
  sub_1000458B4((uint64_t)&v240, (uint64_t)&v262, &qword_100317D30);
  *(void *)(inited + 56) = v262;
  uint64_t v245 = inited;
  sub_10024EAC0();
  unint64_t v62 = (void *)v245;
  uint64_t v245 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v63 = v62[4];
  sub_10001B078((uint64_t)&v243);
  sub_10001B078((uint64_t)&v242);
  sub_10001B078((uint64_t)&v241);
  sub_10001B078((uint64_t)&v240);
  if (v63)
  {
    swift_retain();
    sub_10024EA70();
    if (*(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10024EAD0();
    }
    sub_10024EB10();
    sub_10024EAC0();
    uint64_t v58 = (char *)v199;
  }
  if (v62[5])
  {
    swift_retain();
    sub_10024EA70();
    if (*(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10024EAD0();
    }
    sub_10024EB10();
    sub_10024EAC0();
    uint64_t v58 = (char *)v199;
  }
  if (v62[6])
  {
    swift_retain();
    sub_10024EA70();
    if (*(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10024EAD0();
    }
    sub_10024EB10();
    sub_10024EAC0();
    uint64_t v58 = (char *)v199;
  }
  if (v62[7])
  {
    swift_retain();
    sub_10024EA70();
    if (*(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v245 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10024EAD0();
    }
    sub_10024EB10();
    sub_10024EAC0();
    uint64_t v58 = (char *)v199;
  }
  unint64_t v64 = v245;
  swift_bridgeObjectRelease();
  uint64_t v200 = swift_allocBox();
  unint64_t v66 = v65;
  sub_1000C0AF4(v202, (uint64_t)v17);
  if (sub_10001FA0C((uint64_t)v17, 1, v56) == 1)
  {
    sub_10024E010();
    sub_10018E29C((uint64_t)v17, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    (*((void (**)(unint64_t, char *, uint64_t))v58 + 4))(v66, v17, v56);
  }
  unint64_t v219 = v64;
  if (v64 >> 62) {
    goto LABEL_128;
  }
  uint64_t v67 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_38:
  uint64_t v217 = v67;
  unint64_t v218 = v66;
  if (v67)
  {
    if (v67 >= 1)
    {
      int v204 = *((unsigned __int8 *)v46 + 312);
      uint64_t v207 = v244[2];
      unint64_t v208 = v64 & 0xC000000000000001;
      uint64_t v206 = v244[3];
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v58 = 0;
      v205 = (void (**)(char *, uint64_t))(v232 + 8);
      v203 = (void (**)(char *, unint64_t, uint64_t))(v199 + 16);
      long long v197 = xmmword_100269120;
      long long v196 = xmmword_100256170;
      long long v198 = xmmword_100269110;
      while (1)
      {
        if (v208)
        {
          uint64_t v68 = sub_10024F380();
        }
        else
        {
          uint64_t v68 = *(void *)(v64 + 8 * (void)v58 + 32);
          swift_retain();
        }
        uint64_t v69 = sub_100175300();
        int v231 = v70;
        uint64_t v71 = *(void *)(v68 + 48);
        if (*(unsigned char *)(v68 + 56)) {
          uint64_t v71 = 1;
        }
        uint64_t v229 = v71;
        uint64_t v232 = v69;
        uint64_t v72 = v212;
        sub_1000195B4(v212, 1, 1, v216);
        swift_bridgeObjectRetain();
        sub_10024EFC0();
        uint64_t v74 = v73;
        sub_10018E29C(v72, &qword_10030B090);
        uint64_t v230 = v68;
        if ((v74 & 0x100000000) != 0) {
          sub_10024EF80(v75, 0.0);
        }
        v227 = v58 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10024E0B0();
        uint64_t v76 = v213;
        sub_10024EF50();
        sub_100051C10();
        uint64_t v77 = v214;
        sub_10024EFD0();
        (*v205)(v76, v77);
        swift_bridgeObjectRelease();
        uint64_t v78 = (uint64_t)v246;
        uint64_t v226 = v245;
        char v79 = 1;
        uint64_t v46 = (void *)v230;
        uint64_t v80 = v232;
        switch(*(unsigned char *)(v230 + 57))
        {
          case 2:
            break;
          default:
            char v79 = sub_10024FA60();
            break;
        }
        swift_bridgeObjectRelease();
        id v81 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
        [v81 setUnitsStyle:3];
        [v81 setAllowedUnits:4124];
        uint64_t v82 = v222;
        sub_100213A0C(v80, v231);
        Class v83 = sub_10024DBC0().super.isa;
        v209(v82, v223);
        id v84 = [v81 stringFromDateComponents:v83];

        uint64_t v58 = v227;
        if (v84)
        {
          uint64_t v85 = sub_10024E6B0();
          unint64_t v66 = v86;

          if (v79) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v85 = 0;
          unint64_t v66 = 0xE000000000000000;
          if (v79)
          {
LABEL_54:
            if (v80 == 1)
            {
              uint64_t v245 = v85;
              v246 = (void *)v66;
              uint64_t v236 = 32;
              unint64_t v237 = 0xE100000000000000;
              sub_10001DAC0();
              uint64_t v87 = sub_10024F130();
              swift_bridgeObjectRelease();
              uint64_t v88 = *(void *)(v87 + 16);
              uint64_t v245 = v87;
              v246 = (void *)(v87 + 32);
              BOOL v247 = v88 != 0;
              uint64_t v248 = (2 * v88) | 1;
              sub_100019524(&qword_10030BF68);
              sub_10001B0A4((unint64_t *)&qword_10030BF70, &qword_10030BF68);
              uint64_t v85 = sub_10024E5C0();
              unint64_t v66 = v89;
              swift_bridgeObjectRelease();
            }
          }
        }

        char v90 = *(unsigned char *)(v225 + 200);
        if (v90)
        {
          uint64_t v245 = v85;
          v246 = (void *)v66;
          sub_10001DAC0();
          uint64_t v91 = sub_10024F140();
        }
        else
        {
          uint64_t v91 = sub_10024E710();
        }
        unint64_t v35 = v91;
        uint64_t v57 = v92;
        swift_bridgeObjectRelease();
        uint64_t v56 = *(void *)(*v228 + 16) != 0;
        switch(*((unsigned char *)v46 + 57))
        {
          case 1:
            swift_bridgeObjectRelease();
            if (v90)
            {
              uint64_t v245 = v35;
              v246 = v57;
              v263._countAndFlagsBits = 0x6565724620;
              v263._object = (void *)0xE500000000000000;
              sub_10024E800(v263);
              uint64_t v93 = v245;
              uint64_t v94 = v246;
              uint64_t v57 = v228;
              swift_beginAccess();
              uint64_t v95 = *v57;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_100035494();
                uint64_t v95 = v143;
              }
              uint64_t v56 = v221;
              unint64_t v35 = *(void *)(v95 + 16);
              if (v35 >= *(void *)(v95 + 24) >> 1)
              {
                sub_100035494();
                uint64_t v95 = v144;
              }
              *(void *)(v95 + 16) = v35 + 1;
              uint64_t v96 = v95 + 40 * v35;
              long long v97 = v197;
              goto LABEL_78;
            }
            swift_bridgeObjectRelease();
            uint64_t v245 = sub_1001CC264(v232, v231);
            v246 = v112;
            v269._countAndFlagsBits = 0x7274206565726620;
            v269._object = (void *)0xEB000000006C6169;
            sub_10024E800(v269);
            uint64_t v57 = (uint64_t *)v245;
            Swift::Int v113 = v246;
            unint64_t v35 = v201;
            uint64_t v114 = sub_1001CC300(v201, v202);
            unint64_t v66 = v115;
            uint64_t v116 = v228;
            swift_beginAccess();
            if (__OFADD__(*(void *)(*(void *)(v35 + 16) + 16), 2)) {
              goto LABEL_126;
            }
            goto LABEL_87;
          case 2:
            uint64_t v98 = v229 * v232;
            if (v90)
            {
              if ((unsigned __int128)(v229 * (__int128)v232) >> 64 != v98 >> 63) {
                goto LABEL_125;
              }
              uint64_t v99 = sub_100213DA0(v231);
              uint64_t v101 = v99;
              uint64_t v102 = v100;
              if (v98 != 1)
              {
                uint64_t v245 = v99;
                v246 = v100;
                v264._countAndFlagsBits = 115;
                v264._object = (void *)0xE100000000000000;
                sub_10024E800(v264);
                uint64_t v101 = v245;
                uint64_t v102 = v246;
              }
              sub_100019524(&qword_10030A468);
              uint64_t v103 = swift_allocObject();
              *(_OWORD *)(v103 + 16) = v196;
              uint64_t v236 = v98;
              uint64_t v245 = sub_10024F9E0();
              v246 = v104;
              v265._countAndFlagsBits = 32;
              v265._object = (void *)0xE100000000000000;
              sub_10024E800(v265);
              v266._countAndFlagsBits = v101;
              v266._object = v102;
              sub_10024E800(v266);
              swift_bridgeObjectRelease();
              uint64_t v105 = v246;
              *(void *)(v103 + 32) = v245;
              *(void *)(v103 + 40) = v105;
              *(unsigned char *)(v103 + 48) = 0;
              uint64_t v106 = sub_1001CC104(v226, v78, v35, (uint64_t)v57, v232 != 1);
              uint64_t v108 = v107;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)(v103 + 56) = v106;
              *(void *)(v103 + 64) = v108;
              *(unsigned char *)(v103 + 72) = 65;
              uint64_t v57 = v228;
              swift_beginAccess();
              sub_10003467C();
              uint64_t v109 = *(void *)(*v57 + 16);
              sub_100034994();
              uint64_t v110 = *v57;
              *(void *)(v110 + 16) = v109 + 1;
              uint64_t v111 = v110 + 40 * v109;
              *(_OWORD *)(v111 + 32) = v198;
              *(void *)(v111 + 48) = v103;
              *(void *)(v111 + 56) = 0;
              *(unsigned char *)(v111 + 64) = 16;
              uint64_t *v57 = v110;
              swift_endAccess();
              goto LABEL_88;
            }
            uint64_t v194 = (unsigned __int128)(v229 * (__int128)v232) >> 64;
            uint64_t v195 = v229 * v232;
            uint64_t v117 = sub_1001CC104(v226, v78, v35, (uint64_t)v57, v232 != 1);
            uint64_t v119 = v118;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v35 = v56 | 0x80;
            uint64_t v57 = v228;
            swift_beginAccess();
            sub_10003467C();
            uint64_t v120 = *(void *)(*v57 + 16);
            sub_100034994();
            uint64_t v121 = *v57;
            *(void *)(v121 + 16) = v120 + 1;
            uint64_t v122 = v121 + 40 * v120;
            *(void *)(v122 + 32) = 0;
            *(void *)(v122 + 40) = 0;
            *(void *)(v122 + 48) = v117;
            *(void *)(v122 + 56) = v119;
            *(unsigned char *)(v122 + 64) = v56 | 0x80;
            uint64_t *v57 = v121;
            swift_endAccess();
            uint64_t v56 = v221;
            if (*(void *)(v121 + 16) == 1 && sub_10001FA0C(v202, 1, v221) == 1)
            {
              if (v194 != v195 >> 63) {
                goto LABEL_130;
              }
              uint64_t v245 = sub_1001CC264(v195, v231);
              v246 = v123;
              v270._countAndFlagsBits = 0x726566666F20;
              v270._object = (void *)0xE600000000000000;
              sub_10024E800(v270);
              uint64_t v124 = v245;
              Swift::Int v125 = v246;
              swift_beginAccess();
              sub_10003467C();
              uint64_t v126 = *(void *)(*v57 + 16);
              sub_100034994();
              uint64_t v127 = *v57;
              *(void *)(v127 + 16) = v126 + 1;
              uint64_t v128 = v127 + 40 * v126;
              *(void *)(v128 + 32) = 0;
              *(void *)(v128 + 40) = 0;
              *(void *)(v128 + 48) = v124;
              *(void *)(v128 + 56) = v125;
              *(unsigned char *)(v128 + 64) = -126;
              uint64_t *v57 = v127;
            }
            else
            {
              unint64_t v35 = v201;
              uint64_t v135 = sub_1001CC300(v201, v202);
              uint64_t v137 = v136;
              swift_beginAccess();
              sub_10003467C();
              uint64_t v138 = *(void *)(*(void *)(v35 + 16) + 16);
              sub_100034994();
              uint64_t v139 = *(void *)(v35 + 16);
              *(void *)(v139 + 16) = v138 + 1;
              uint64_t v140 = v139 + 40 * v138;
              *(void *)(v140 + 32) = 0;
              *(void *)(v140 + 40) = 0;
              *(void *)(v140 + 48) = v135;
              *(void *)(v140 + 56) = v137;
              *(unsigned char *)(v140 + 64) = -126;
              *(void *)(v35 + 16) = v139;
            }
            goto LABEL_90;
          case 3:
            if (v90)
            {
              uint64_t v245 = v226;
              v246 = (void *)v78;
              v267._countAndFlagsBits = 0x20726F6620;
              v267._object = (void *)0xE500000000000000;
              sub_10024E800(v267);
              v268._countAndFlagsBits = v35;
              v268._object = v57;
              sub_10024E800(v268);
              swift_bridgeObjectRelease();
              uint64_t v93 = v245;
              uint64_t v94 = v246;
              uint64_t v57 = v228;
              swift_beginAccess();
              uint64_t v95 = *v57;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_100035494();
                uint64_t v95 = v145;
              }
              uint64_t v56 = v221;
              unint64_t v35 = *(void *)(v95 + 16);
              if (v35 >= *(void *)(v95 + 24) >> 1)
              {
                sub_100035494();
                uint64_t v95 = v146;
              }
              *(void *)(v95 + 16) = v35 + 1;
              uint64_t v96 = v95 + 40 * v35;
              long long v97 = v198;
LABEL_78:
              *(_OWORD *)(v96 + 32) = v97;
              *(void *)(v96 + 48) = v93;
              *(void *)(v96 + 56) = v94;
              *(unsigned char *)(v96 + 64) = 65;
              uint64_t *v57 = v95;
LABEL_90:
              swift_endAccess();
            }
            else
            {
              uint64_t v245 = v226;
              v246 = (void *)v78;
              v271._countAndFlagsBits = 0x20726F6620;
              v271._object = (void *)0xE500000000000000;
              sub_10024E800(v271);
              v272._countAndFlagsBits = v35;
              v272._object = v57;
              sub_10024E800(v272);
              swift_bridgeObjectRelease();
              uint64_t v57 = (uint64_t *)v245;
              Swift::Int v113 = v246;
              unint64_t v35 = v201;
              uint64_t v114 = sub_1001CC300(v201, v202);
              unint64_t v66 = v129;
              uint64_t v116 = v228;
              swift_beginAccess();
              if (__OFADD__(*(void *)(*(void *)(v35 + 16) + 16), 2)) {
                goto LABEL_127;
              }
LABEL_87:
              sub_1000828E8();
              swift_bridgeObjectRetain();
              sub_10003467C();
              uint64_t v130 = *(void *)(*v116 + 16);
              sub_100034994();
              uint64_t v131 = *v116;
              *(void *)(v131 + 16) = v130 + 1;
              uint64_t v132 = v131 + 40 * v130;
              *(void *)(v132 + 32) = 0;
              *(void *)(v132 + 40) = 0;
              *(void *)(v132 + 48) = v57;
              *(void *)(v132 + 56) = v113;
              *(unsigned char *)(v132 + 64) = v56 | 0x80;
              *uint64_t v116 = v131;
              swift_bridgeObjectRetain();
              sub_10003467C();
              unint64_t v35 = *(void *)(*v116 + 16);
              sub_100034994();
              uint64_t v133 = *v116;
              *(void *)(v133 + 16) = v35 + 1;
              uint64_t v134 = v133 + 40 * v35;
              uint64_t v46 = (void *)v230;
              *(void *)(v134 + 32) = 0;
              *(void *)(v134 + 40) = 0;
              *(void *)(v134 + 48) = v114;
              *(void *)(v134 + 56) = v66;
              *(unsigned char *)(v134 + 64) = -126;
              *uint64_t v116 = v133;
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v57 = v116;
LABEL_88:
              uint64_t v56 = v221;
            }
            uint64_t v141 = v232 * v229;
            unint64_t v66 = v218;
            if ((unsigned __int128)(v232 * (__int128)v229) >> 64 != (v232 * v229) >> 63)
            {
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              swift_bridgeObjectRetain();
              unint64_t v64 = v219;
              uint64_t v67 = sub_10024F6F0();
              goto LABEL_38;
            }
            uint64_t v142 = (uint64_t)v224;
            (*v203)(v224, v218, v56);
            sub_1001EF934(v141, v231, v204, v142);
            swift_beginAccess();
            sub_10024E000();
            swift_endAccess();
            swift_release();
            uint64_t v67 = v217;
            unint64_t v64 = v219;
            uint64_t v46 = v220;
            if ((char *)v217 == v58) {
              goto LABEL_93;
            }
            break;
          default:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v57 = v228;
            goto LABEL_88;
        }
      }
    }
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_93:
  swift_bridgeObjectRelease();
  unint64_t v35 = v199;
  uint64_t v58 = v224;
  if (v191)
  {
    uint64_t v147 = v179;
    uint64_t v245 = (uint64_t)v191;
    v246 = v178;
    BOOL v247 = v186;
    uint64_t v248 = v179;
    uint64_t v249 = v187;
    uint64_t v250 = v188;
    uint64_t v251 = v189;
    uint64_t v252 = v190;
    uint64_t v253 = v185;
    uint64_t v254 = v184;
    uint64_t v255 = v183;
    uint64_t v256 = v193;
    uint64_t v257 = v182;
    uint64_t v258 = v192;
    LODWORD(v232) = *(unsigned __int8 *)(v225 + 200);
    id v148 = v191;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v232 != 1 || sub_100027094(v147) != 2)
    {
      uint64_t v155 = 0x676E697472617453;
      swift_bridgeObjectRelease();
      if (sub_100027094(v147) == 2)
      {
        uint64_t v156 = 0xEE007961646F7420;
        sub_10009856C(v191);
      }
      else
      {
        uint64_t v236 = 0x676E697472617453;
        unint64_t v237 = 0xE900000000000020;
        v274._countAndFlagsBits = sub_1001ACCB0();
        sub_10024E800(v274);
        swift_bridgeObjectRelease();
        sub_10009856C(v191);
        uint64_t v155 = v236;
        uint64_t v156 = v237;
      }
      goto LABEL_111;
    }
    sub_10009856C(v191);
    unint64_t v66 = v218;
    uint64_t v67 = v217;
    unint64_t v35 = v199;
    uint64_t v58 = v224;
  }
  swift_bridgeObjectRelease();
  if (v67)
  {
    uint64_t v234 = 0x676E697472617453;
    unint64_t v235 = 0xE900000000000020;
    swift_beginAccess();
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v58, v66, v56);
    if (qword_100308CE8 == -1)
    {
LABEL_99:
      uint64_t v149 = (void *)qword_10030B088;
      Class v150 = sub_10024DFB0().super.isa;
      id v151 = [v149 stringFromDate:v150];

      uint64_t v152 = sub_10024E6B0();
      long long v154 = v153;

      (*(void (**)(char *, uint64_t))(v35 + 8))(v58, v56);
      v273._countAndFlagsBits = v152;
      v273._object = v154;
      sub_10024E800(v273);
      swift_bridgeObjectRelease();
      uint64_t v155 = v234;
      uint64_t v156 = v235;
      goto LABEL_111;
    }
LABEL_131:
    swift_once();
    goto LABEL_99;
  }
  if (*(unsigned char *)(v225 + 200))
  {
    uint64_t v155 = 0;
    uint64_t v156 = 0;
  }
  else
  {
    if (*((unsigned char *)v46 + 313)) {
      uint64_t v155 = 0x676E697472617453;
    }
    else {
      uint64_t v155 = 0;
    }
    if (*((unsigned char *)v46 + 313)) {
      uint64_t v156 = 0xEE007961646F7420;
    }
    else {
      uint64_t v156 = 0;
    }
  }
LABEL_111:
  uint64_t v158 = v180;
  uint64_t v157 = v181;
  if (*(unsigned char *)(v225 + 200))
  {
    sub_100019524(&qword_10030A468);
    uint64_t v159 = swift_allocObject();
    *(_OWORD *)(v159 + 16) = xmmword_100255FB0;
    *(void *)(v159 + 32) = v158;
    *(void *)(v159 + 40) = v157;
    *(unsigned char *)(v159 + 48) = 65;
    uint64_t v233 = v159;
    if (v156)
    {
      sub_10003B974(0, 0, v155, v156, 0);
      uint64_t v160 = v233;
      unint64_t v161 = *(void *)(v233 + 16);
      if (v161 >= 2)
      {
        swift_beginAccess();
        sub_10003467C();
        uint64_t v162 = *(void *)(*v57 + 16);
        sub_100034994();
        uint64_t v163 = *v57;
        *(void *)(v163 + 16) = v162 + 1;
        uint64_t v164 = v163 + 40 * v162;
        *(_OWORD *)(v164 + 32) = xmmword_100269130;
        *(void *)(v164 + 48) = v160;
        *(void *)(v164 + 56) = 0;
        char v165 = 16;
LABEL_117:
        *(unsigned char *)(v164 + 64) = v165;
LABEL_121:
        uint64_t *v57 = v163;
        swift_endAccess();
        goto LABEL_122;
      }
      if (!v161)
      {
        swift_bridgeObjectRelease();
        goto LABEL_122;
      }
    }
    else
    {
      uint64_t v160 = v159;
    }
    uint64_t v171 = *(void *)(v160 + 32);
    uint64_t v172 = *(void *)(v160 + 40);
    unsigned __int8 v173 = *(unsigned char *)(v160 + 48);
    sub_1001CD0A0(v171, v172, v173);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_10003467C();
    uint64_t v174 = *(void *)(*v57 + 16);
    sub_100034994();
    uint64_t v163 = *v57;
    *(void *)(v163 + 16) = v174 + 1;
    uint64_t v175 = v163 + 40 * v174;
    *(_OWORD *)(v175 + 32) = xmmword_100269130;
    *(void *)(v175 + 48) = v171;
    *(void *)(v175 + 56) = v172;
    *(unsigned char *)(v175 + 64) = v173;
    goto LABEL_121;
  }
  swift_beginAccess();
  char v166 = (*(void *)(*v57 + 16) != 0) | 0x80;
  swift_beginAccess();
  sub_10003467C();
  uint64_t v167 = *(void *)(*v57 + 16);
  sub_100034994();
  uint64_t v168 = *v57;
  *(void *)(v168 + 16) = v167 + 1;
  uint64_t v169 = v168 + 40 * v167;
  *(void *)(v169 + 32) = 0;
  *(void *)(v169 + 40) = 0;
  *(void *)(v169 + 48) = v158;
  *(void *)(v169 + 56) = v157;
  *(unsigned char *)(v169 + 64) = v166;
  uint64_t *v57 = v168;
  swift_endAccess();
  if (v156)
  {
    swift_beginAccess();
    sub_10003467C();
    uint64_t v170 = *(void *)(*v57 + 16);
    sub_100034994();
    uint64_t v163 = *v57;
    *(void *)(v163 + 16) = v170 + 1;
    uint64_t v164 = v163 + 40 * v170;
    *(void *)(v164 + 32) = 0;
    *(void *)(v164 + 40) = 0;
    *(void *)(v164 + 48) = v155;
    *(void *)(v164 + 56) = v156;
    char v165 = -126;
    goto LABEL_117;
  }
LABEL_122:
  sub_10018E29C(v202, (uint64_t *)&unk_10030FD70);
  swift_beginAccess();
  uint64_t v176 = *(void *)(v201 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  return v176;
}

uint64_t sub_1001CC104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    v7._countAndFlagsBits = 0x7972657665;
  }
  else {
    v7._countAndFlagsBits = 7497072;
  }
  if (a5) {
    uint64_t v8 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v8 = (void *)0xE300000000000000;
  }
  v7._object = v8;
  sub_10024E800(v7);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  sub_10024E800(v13);
  sub_100019524(&qword_1003090E8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100256170;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 48) = sub_10024E710();
  *(void *)(v9 + 56) = v10;
  swift_bridgeObjectRetain();
  sub_100019524(&qword_100309410);
  sub_10001B0A4((unint64_t *)&qword_10030A740, &qword_100309410);
  uint64_t v11 = sub_10024E5C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1001CC264(uint64_t a1, char a2)
{
  uint64_t v7 = sub_10024F9E0();
  v8._countAndFlagsBits = 45;
  v8._object = (void *)0xE100000000000000;
  sub_10024E800(v8);
  sub_100213DA0(a2);
  uint64_t v3 = sub_10024E710();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = v3;
  v9._object = v5;
  sub_10024E800(v9);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1001CC300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x676E697472617453;
  uint64_t v5 = sub_10024E030();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  Swift::String v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v10 - 8, v11);
  Swift::String v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = swift_projectBox();
  swift_beginAccess();
  uint64_t v15 = *(void *)(*(void *)(a1 + 16) + 16);
  sub_1000C0AF4(a2, (uint64_t)v13);
  if (v15 || sub_10001FA0C((uint64_t)v13, 1, v5) != 1)
  {
    sub_10018E29C((uint64_t)v13, (uint64_t *)&unk_10030FD70);
    uint64_t v24 = 0x676E697472617453;
    unint64_t v25 = 0xE900000000000020;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v9, v14, v5);
    if (qword_100308CE8 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_10030B088;
    Class isa = sub_10024DFB0().super.isa;
    id v18 = [v16 stringFromDate:isa];

    uint64_t v19 = sub_10024E6B0();
    uint64_t v21 = v20;

    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    v26._countAndFlagsBits = v19;
    v26._object = v21;
    sub_10024E800(v26);
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    sub_10018E29C((uint64_t)v13, (uint64_t *)&unk_10030FD70);
  }
  return v4;
}

uint64_t sub_1001CC598()
{
  unint64_t v0 = sub_10024FB00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

uint64_t sub_1001CC5F0()
{
  return 18;
}

unint64_t sub_1001CC5F8(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F74736575716572;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0x49656C62616C6173;
      break;
    case 6:
      unint64_t result = 0x437972746E756F63;
      break;
    case 7:
      unint64_t result = 0x79636E6572727563;
      break;
    case 8:
      unint64_t result = 0x6563697270;
      break;
    case 9:
      unint64_t result = 0x5079616C70736964;
      break;
    case 10:
      unint64_t result = 0x48746E756F636361;
      break;
    case 11:
      unint64_t result = 0x746E6F4365736163;
      break;
    case 12:
      unint64_t result = 0x53746E656D796170;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0x6365536563697270;
      break;
    case 15:
      unint64_t result = 0x65566E6769736564;
      break;
    case 16:
      unint64_t result = 0x7473694C78656C66;
      break;
    case 17:
      unint64_t result = 0x73656C797473;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1001CC854()
{
  sub_1000EA9CC();
  sub_100019524(&qword_100317C78);
  sub_10001B550();
  __chkstk_darwin(v2, v3);
  sub_100025F70();
  sub_1001CCE54();
  sub_100025FCC();
  sub_1000458B4(v0, (uint64_t)v11, &qword_100317C88);
  sub_1001CF4C8((uint64_t)v11);
  sub_1001CCEA0();
  sub_1001CF3E4();
  if (!v1)
  {
    sub_1001CF5AC(1);
    sub_1000458B4(v0 + 24, (uint64_t)&v10, &qword_100317C98);
    sub_1001CF4C8((uint64_t)&v10);
    sub_1001CCEEC();
    sub_1001CF3E4();
    sub_1001CF330(3);
    sub_1001CF5AC(4);
    sub_1000458B4(v0 + 64, (uint64_t)v9, &qword_10030AA38);
    sub_1001CF4C8((uint64_t)v9);
    sub_100019524(&qword_100309410);
    sub_1001CDF0C((unint64_t *)&qword_100309418, &qword_100309410);
    sub_1001CF374();
    sub_1001CF330(6);
    sub_1001CF330(7);
    sub_10024F8F0();
    sub_1001CF330(9);
    sub_1001CF330(10);
    sub_1001CF330(11);
    sub_1001CF330(12);
    sub_10024F8E0();
    sub_1000458B4(v0 + 192, (uint64_t)&v8, &qword_100317CA8);
    sub_1001CF4C8((uint64_t)&v8);
    sub_100019524(&qword_100317CB0);
    sub_1001CDF68(&qword_100317CB8, &qword_100317CB0, (void (*)(void))sub_1001CCF38);
    sub_1001CF374();
    sub_1000458B4(v0 + 200, (uint64_t)&v7, &qword_100317CC8);
    sub_1001CF4C8((uint64_t)&v7);
    sub_1001CCF84();
    sub_1001CF3E4();
    sub_1000458B4(v0 + 208, (uint64_t)v6, &qword_100317CD8);
    sub_1001CF4C8((uint64_t)v6);
    sub_100019524(&qword_100317CE0);
    sub_1001CDF68(&qword_100317CE8, &qword_100317CE0, (void (*)(void))sub_1001CCFD0);
    sub_1001CF374();
    sub_1000458B4(v0 + 216, (uint64_t)&v5, &qword_100317CF8);
    sub_1001CF4C8((uint64_t)&v5);
    sub_100019524(&qword_100317D00);
    sub_1001CDF68(&qword_100317D08, &qword_100317D00, (void (*)(void))sub_1001CD01C);
    sub_10024F910();
  }
  sub_100025FB0();
  v4();
  sub_1000EA994();
}

uint64_t sub_1001CCCB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FAD44(*a1, *a2);
}

Swift::Int sub_1001CCCC0()
{
  return sub_1001D3AD4(*v0);
}

uint64_t sub_1001CCCC8(uint64_t a1)
{
  return sub_1000D1D08(a1, *v1);
}

Swift::Int sub_1001CCCD0(uint64_t a1)
{
  return sub_1000D3660(a1, *v1);
}

uint64_t sub_1001CCCD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001CC598();
  *a1 = result;
  return result;
}

unint64_t sub_1001CCD08()
{
  char v1 = sub_1000621E4();
  unint64_t result = sub_1001CC5F8(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

unint64_t sub_1001CCD30()
{
  return sub_1001CC850(*v0);
}

uint64_t sub_1001CCD38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001CC5EC();
  *a1 = result;
  return result;
}

uint64_t sub_1001CCD60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001CC5F0();
  *a1 = result;
  return result;
}

uint64_t sub_1001CCD88(uint64_t a1)
{
  unint64_t v2 = sub_1001CCE54();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001CCDC4(uint64_t a1)
{
  unint64_t v2 = sub_1001CCE54();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1001CCE00()
{
  memcpy(v1, v0, sizeof(v1));
  sub_1001CC854();
}

unint64_t sub_1001CCE54()
{
  unint64_t result = qword_100317C80;
  if (!qword_100317C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317C80);
  }
  return result;
}

unint64_t sub_1001CCEA0()
{
  unint64_t result = qword_100317C90;
  if (!qword_100317C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317C90);
  }
  return result;
}

unint64_t sub_1001CCEEC()
{
  unint64_t result = qword_100317CA0;
  if (!qword_100317CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317CA0);
  }
  return result;
}

unint64_t sub_1001CCF38()
{
  unint64_t result = qword_100317CC0;
  if (!qword_100317CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317CC0);
  }
  return result;
}

unint64_t sub_1001CCF84()
{
  unint64_t result = qword_100317CD0;
  if (!qword_100317CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317CD0);
  }
  return result;
}

unint64_t sub_1001CCFD0()
{
  unint64_t result = qword_100317CF0;
  if (!qword_100317CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317CF0);
  }
  return result;
}

unint64_t sub_1001CD01C()
{
  unint64_t result = qword_100317D10;
  if (!qword_100317D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D10);
  }
  return result;
}

uint64_t sub_1001CD068()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CD0A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001CD0BC(uint64_t a1)
{
  return sub_1001CD0CC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1001CD0CC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001CD0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1001CD0A0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1001CD130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1001CD0A0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1001CD0CC(v6, v7, v8);
  return a1;
}

uint64_t sub_1001CD188(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1001CD0CC(v4, v5, v6);
  return a1;
}

uint64_t sub_1001CD1D0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3E && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 61;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
      if (v2 >= 0x3D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1001CD218(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 62;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1001CD26C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_1001CD278(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1001CD288(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 3 | (a2 << 6);
  return result;
}

void type metadata accessor for FlexListBox.Value()
{
}

uint64_t getEnumTagSinglePayload for PaymentSheetInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEF)
  {
    if (a2 + 17 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 17) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 18;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v5 = v6 - 18;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PaymentSheetInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CD3FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentSheetInfo.CodingKeys()
{
  return &type metadata for PaymentSheetInfo.CodingKeys;
}

uint64_t sub_1001CD434(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t sub_1001CD448(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 5))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
      BOOL v4 = v3 >= 2;
      int v2 = v3 - 2;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001CD484(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for FlexListBox.Style()
{
}

uint64_t sub_1001CD4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  switch((a5 >> 4) & 3)
  {
    case 1u:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2u:
    case 3u:
LABEL_6:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      unsigned __int8 v6 = a5;
      swift_bridgeObjectRetain();
      uint64_t result = sub_1001CD0A0(a3, a4, v6);
      break;
  }
  return result;
}

uint64_t sub_1001CD588(uint64_t a1)
{
  return sub_1001CD59C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t sub_1001CD59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  switch((a5 >> 4) & 3)
  {
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
    case 3u:
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      unsigned __int8 v6 = a5;
      swift_bridgeObjectRelease();
      uint64_t result = sub_1001CD0CC(a3, a4, v6);
      break;
  }
  return result;
}

uint64_t sub_1001CD654(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 32);
  sub_1001CD4D4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1001CD6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 32);
  sub_1001CD4D4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned int v12 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1001CD59C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1001CD72C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned int v9 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1001CD59C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1001CD778(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 33))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 32) & 0xC | (*(unsigned __int8 *)(a1 + 32) >> 4) & 3) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1001CD7C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 4 * ((((-a2 >> 2) & 3) - 4 * a2) & 0xF);
    }
  }
  return result;
}

uint64_t sub_1001CD81C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 32) >> 4) & 3;
}

uint64_t sub_1001CD828(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0xCFu;
  return result;
}

uint64_t sub_1001CD838(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 0xC3 | (16 * (a2 & 3));
  return result;
}

void type metadata accessor for FlexListBox()
{
}

void type metadata accessor for PaymentSheetInfo.DesignVersion()
{
}

uint64_t sub_1001CD870(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001CD8C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for HeadValueEntry()
{
}

void type metadata accessor for PaymentSheetInfo.ConfirmationTitle()
{
}

_WORD *sub_1001CD934(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1001CD940(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if ((a2 + 0xFFFF) < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        return 0;
      }
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
  }
  return 0;
}

uint64_t sub_1001CD9B0(uint64_t result, int a2, int a3)
{
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if ((a3 + 0xFFFF) < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    unsigned int v6 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 1;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v6;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)(result + 2) = v6;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001CDA64);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for Title()
{
}

unint64_t sub_1001CDA9C()
{
  unint64_t result = qword_100317D38;
  if (!qword_100317D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D38);
  }
  return result;
}

unint64_t sub_1001CDAEC()
{
  unint64_t result = qword_100317D40;
  if (!qword_100317D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D40);
  }
  return result;
}

unint64_t sub_1001CDB3C()
{
  unint64_t result = qword_100317D48;
  if (!qword_100317D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D48);
  }
  return result;
}

unint64_t sub_1001CDB8C()
{
  unint64_t result = qword_100317D50;
  if (!qword_100317D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D50);
  }
  return result;
}

unint64_t sub_1001CDBDC()
{
  unint64_t result = qword_100317D58;
  if (!qword_100317D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D58);
  }
  return result;
}

unint64_t sub_1001CDC28()
{
  unint64_t result = qword_100317D68;
  if (!qword_100317D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D68);
  }
  return result;
}

unint64_t sub_1001CDC74()
{
  unint64_t result = qword_100317D70;
  if (!qword_100317D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D70);
  }
  return result;
}

unint64_t sub_1001CDCC0()
{
  unint64_t result = qword_100317D78;
  if (!qword_100317D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D78);
  }
  return result;
}

unint64_t sub_1001CDD0C()
{
  unint64_t result = qword_100317D80;
  if (!qword_100317D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D80);
  }
  return result;
}

unint64_t sub_1001CDD58()
{
  unint64_t result = qword_100317D90;
  if (!qword_100317D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D90);
  }
  return result;
}

unint64_t sub_1001CDDA4()
{
  unint64_t result = qword_100317D98;
  if (!qword_100317D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317D98);
  }
  return result;
}

unint64_t sub_1001CDDF0()
{
  unint64_t result = qword_100317DA8;
  if (!qword_100317DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DA8);
  }
  return result;
}

uint64_t sub_1001CDE3C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1001CDE74()
{
  unint64_t result = qword_100317DB0;
  if (!qword_100317DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DB0);
  }
  return result;
}

unint64_t sub_1001CDEC0()
{
  unint64_t result = qword_100317DB8;
  if (!qword_100317DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DB8);
  }
  return result;
}

uint64_t sub_1001CDF0C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001CDF68(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001CDFE0()
{
  unint64_t result = qword_100317DE0;
  if (!qword_100317DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DE0);
  }
  return result;
}

unint64_t sub_1001CE02C()
{
  unint64_t result = qword_100317DE8;
  if (!qword_100317DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DE8);
  }
  return result;
}

unint64_t sub_1001CE078()
{
  unint64_t result = qword_100317DF0;
  if (!qword_100317DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DF0);
  }
  return result;
}

unint64_t sub_1001CE0C4()
{
  unint64_t result = qword_100317DF8;
  if (!qword_100317DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317DF8);
  }
  return result;
}

unint64_t sub_1001CE110()
{
  unint64_t result = qword_100317E00;
  if (!qword_100317E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E00);
  }
  return result;
}

unint64_t sub_1001CE15C()
{
  unint64_t result = qword_100317E08;
  if (!qword_100317E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E08);
  }
  return result;
}

unint64_t sub_1001CE1A8()
{
  unint64_t result = qword_100317E10;
  if (!qword_100317E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E10);
  }
  return result;
}

unint64_t sub_1001CE1F4()
{
  unint64_t result = qword_100317E28;
  if (!qword_100317E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E28);
  }
  return result;
}

unint64_t sub_1001CE240()
{
  unint64_t result = qword_100317E30;
  if (!qword_100317E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E30);
  }
  return result;
}

unsigned char *sub_1001CE28C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CE358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for FlexListBox.Style.CodingKeys()
{
}

void type metadata accessor for PaymentSheetError()
{
}

unsigned char *sub_1001CE398(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CE464);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for FlexListBox.CodingKeys()
{
}

ValueMetadata *type metadata accessor for HeadValueEntry.CodingKeys()
{
  return &type metadata for HeadValueEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for Title.CodingKeys()
{
  return &type metadata for Title.CodingKeys;
}

uint64_t sub_1001CE4BC(uint64_t a1, uint64_t a2)
{
  sub_1001CF638(a1, a2);
  return v2;
}

void type metadata accessor for FlexListBox.Value.StyledString()
{
}

void type metadata accessor for FlexListBox.Value.AttributedString()
{
}

void type metadata accessor for FlexListBox.Style.Padding()
{
}

void type metadata accessor for FlexListBox.Style.Color()
{
}

void type metadata accessor for FlexListBox.Style.Size()
{
}

unsigned char *sub_1001CE524(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CE5F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for FlexListBox.Style.Name()
{
}

void type metadata accessor for Title.Value()
{
}

uint64_t sub_1001CE630(unsigned int *a1, int a2)
{
  if (!a2) {
    return static _UInt24.min.getter();
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_1001CE67C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001CE718);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for Title.TitleType()
{
}

unint64_t sub_1001CE750()
{
  unint64_t result = qword_100317E38;
  if (!qword_100317E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E38);
  }
  return result;
}

unint64_t sub_1001CE7A0()
{
  unint64_t result = qword_100317E40;
  if (!qword_100317E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E40);
  }
  return result;
}

unint64_t sub_1001CE7F0()
{
  unint64_t result = qword_100317E48;
  if (!qword_100317E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E48);
  }
  return result;
}

unint64_t sub_1001CE840()
{
  unint64_t result = qword_100317E50;
  if (!qword_100317E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E50);
  }
  return result;
}

unint64_t sub_1001CE890()
{
  unint64_t result = qword_100317E58;
  if (!qword_100317E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E58);
  }
  return result;
}

unint64_t sub_1001CE8E0()
{
  unint64_t result = qword_100317E60;
  if (!qword_100317E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E60);
  }
  return result;
}

unint64_t sub_1001CE930()
{
  unint64_t result = qword_100317E68;
  if (!qword_100317E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E68);
  }
  return result;
}

unint64_t sub_1001CE980()
{
  unint64_t result = qword_100317E70;
  if (!qword_100317E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E70);
  }
  return result;
}

unint64_t sub_1001CE9D0()
{
  unint64_t result = qword_100317E78;
  if (!qword_100317E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E78);
  }
  return result;
}

unint64_t sub_1001CEA20()
{
  unint64_t result = qword_100317E80;
  if (!qword_100317E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E80);
  }
  return result;
}

unint64_t sub_1001CEA70()
{
  unint64_t result = qword_100317E88;
  if (!qword_100317E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E88);
  }
  return result;
}

unint64_t sub_1001CEAC0()
{
  unint64_t result = qword_100317E90;
  if (!qword_100317E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E90);
  }
  return result;
}

unint64_t sub_1001CEB10()
{
  unint64_t result = qword_100317E98;
  if (!qword_100317E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317E98);
  }
  return result;
}

unint64_t sub_1001CEB60()
{
  unint64_t result = qword_100317EA0;
  if (!qword_100317EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EA0);
  }
  return result;
}

unint64_t sub_1001CEBB0()
{
  unint64_t result = qword_100317EA8;
  if (!qword_100317EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EA8);
  }
  return result;
}

unint64_t sub_1001CEC00()
{
  unint64_t result = qword_100317EB0;
  if (!qword_100317EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EB0);
  }
  return result;
}

unint64_t sub_1001CEC50()
{
  unint64_t result = qword_100317EB8;
  if (!qword_100317EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EB8);
  }
  return result;
}

unint64_t sub_1001CECA0()
{
  unint64_t result = qword_100317EC0;
  if (!qword_100317EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EC0);
  }
  return result;
}

unint64_t sub_1001CECF0()
{
  unint64_t result = qword_100317EC8;
  if (!qword_100317EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EC8);
  }
  return result;
}

unint64_t sub_1001CED3C()
{
  unint64_t result = qword_100317ED0;
  if (!qword_100317ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317ED0);
  }
  return result;
}

unint64_t sub_1001CED88()
{
  unint64_t result = qword_100317ED8;
  if (!qword_100317ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317ED8);
  }
  return result;
}

unint64_t sub_1001CEDD4()
{
  unint64_t result = qword_100317EE0;
  if (!qword_100317EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EE0);
  }
  return result;
}

unint64_t sub_1001CEE20()
{
  unint64_t result = qword_100317EE8;
  if (!qword_100317EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EE8);
  }
  return result;
}

unint64_t sub_1001CEE6C()
{
  unint64_t result = qword_100317EF0;
  if (!qword_100317EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EF0);
  }
  return result;
}

unint64_t sub_1001CEEB8()
{
  unint64_t result = qword_100317EF8;
  if (!qword_100317EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317EF8);
  }
  return result;
}

unint64_t sub_1001CEF04()
{
  unint64_t result = qword_100317F08;
  if (!qword_100317F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F08);
  }
  return result;
}

unint64_t sub_1001CEF50()
{
  unint64_t result = qword_100317F18;
  if (!qword_100317F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F18);
  }
  return result;
}

unint64_t sub_1001CEF9C()
{
  unint64_t result = qword_100317F28;
  if (!qword_100317F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F28);
  }
  return result;
}

unint64_t sub_1001CEFE8()
{
  unint64_t result = qword_100317F38;
  if (!qword_100317F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F38);
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexListBox.Value.AttributedString.CodingKeys()
{
  return &type metadata for FlexListBox.Value.AttributedString.CodingKeys;
}

unsigned char *_s25ASOctaneSupportXPCService14HeadValueEntryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CF110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexListBox.Value.StyledString.CodingKeys()
{
  return &type metadata for FlexListBox.Value.StyledString.CodingKeys;
}

unint64_t sub_1001CF14C()
{
  unint64_t result = qword_100317F40;
  if (!qword_100317F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F40);
  }
  return result;
}

unint64_t sub_1001CF19C()
{
  unint64_t result = qword_100317F48;
  if (!qword_100317F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F48);
  }
  return result;
}

unint64_t sub_1001CF1EC()
{
  unint64_t result = qword_100317F50;
  if (!qword_100317F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F50);
  }
  return result;
}

unint64_t sub_1001CF23C()
{
  unint64_t result = qword_100317F58;
  if (!qword_100317F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F58);
  }
  return result;
}

unint64_t sub_1001CF28C()
{
  unint64_t result = qword_100317F60;
  if (!qword_100317F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F60);
  }
  return result;
}

unint64_t sub_1001CF2DC()
{
  unint64_t result = qword_100317F68;
  if (!qword_100317F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100317F68);
  }
  return result;
}

uint64_t sub_1001CF330@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_10024F8D0();
}

uint64_t sub_1001CF354()
{
  return v0;
}

uint64_t sub_1001CF374()
{
  return sub_10024F910();
}

void *sub_1001CF3C0()
{
  return sub_10001C2A8(v0, v0[3]);
}

uint64_t sub_1001CF3E4()
{
  return sub_10024F910();
}

uint64_t sub_1001CF408()
{
  return sub_10024FD20();
}

uint64_t sub_1001CF42C()
{
  uint64_t v2 = *(void *)(v0 - 312);
  return sub_1001CDE3C(v2);
}

uint64_t sub_1001CF444()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_10024F940();
}

uint64_t sub_1001CF470()
{
  sub_10001C2EC(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001CF49C()
{
  return sub_10024F870();
}

uint64_t sub_1001CF4C8(uint64_t a1)
{
  return sub_1000458B4(a1, v2 - 128, v1);
}

uint64_t sub_1001CF4E0()
{
  return v0 - 208;
}

uint64_t sub_1001CF500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a4 - 256);
  unsigned int v7 = *(_DWORD *)(v4 - 320);
  return sub_1001CD59C(a1, a2, a3, v6, v7);
}

uint64_t sub_1001CF51C()
{
  return 0x726564616568;
}

uint64_t sub_1001CF530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = a15;
  return sub_100051B64((uint64_t)&a12, v16);
}

uint64_t sub_1001CF554()
{
  return v0;
}

uint64_t sub_1001CF56C()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_10024F830();
}

uint64_t sub_1001CF590()
{
  return sub_1001CD0CC(v1, v2, v0);
}

uint64_t sub_1001CF5AC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_10024F940();
}

void sub_1001CF5D0()
{
  *(unsigned char *)(v0 - 67) = 1;
}

uint64_t sub_1001CF5DC()
{
  return sub_10024F980();
}

uint64_t sub_1001CF5F8(uint64_t a1, uint64_t a2)
{
  return sub_1001CD59C(a1, a2, v3, v4, v2);
}

uint64_t sub_1001CF614()
{
  return sub_10024F980();
}

uint64_t sub_1001CF638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001CF65C()
{
  return sub_1001CD59C(v3, v4, v2, v1, v0);
}

uint64_t sub_1001CF680()
{
  return v0;
}

void sub_1001CF698(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(v4 - 72) = a4;
}

uint64_t sub_1001CF6B0()
{
  return v0;
}

void sub_1001CF6C8(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = v2;
}

uint64_t sub_1001CF6D0()
{
  return sub_10024F800();
}

void sub_1001CF6F0()
{
  *(unsigned char *)(v0 - 232) = 1;
}

uint64_t sub_1001CF6FC()
{
  return v0 - 232;
}

uint64_t sub_1001CF710()
{
  return v0 - 232;
}

uint64_t sub_1001CF724()
{
  return sub_10024FD40();
}

uint64_t sub_1001CF744@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

Swift::Int sub_1001CF758(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  return sub_10024F790(a3, v6);
}

uint64_t sub_1001CF778(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = 47;
  v6._object = (void *)0xE100000000000000;
  if (sub_10024E8B0(v6))
  {
    uint64_t v5 = sub_1001CF8F0();
  }
  else
  {
    uint64_t v5 = sub_1001CF8F0();
    v7._countAndFlagsBits = 47;
    v7._object = (void *)0xE100000000000000;
    sub_10024E800(v7);
  }
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  sub_10024E800(v8);
  return v5;
}

uint64_t sub_1001CF7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(sub_10008A5FC(a1, a2) + 120);
  swift_retain();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v3;
}

uint64_t sub_1001CF858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for OctaneLocale();
  uint64_t result = sub_1000EFD68();
  if (result)
  {
    Swift::String v7 = (void *)result;
    sub_10008A5FC(a3, a4);
    uint64_t v8 = sub_1000FEC44(v7);
    swift_release();
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1001CF8F0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[4];
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v1;
  v5._object = v2;
  sub_10024E800(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  sub_10024E800(v6);
  uint64_t v3 = *(os_unfair_lock_s **)(v0[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  os_unfair_lock_unlock(v3);
  swift_release();
  v7._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v7);
  swift_bridgeObjectRelease();
  return 0x2F2F3A70747468;
}

int64x2_t sub_1001CF9CC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v7 = type metadata accessor for AppInformationResponse(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8, v9);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100019524(&qword_10030A3B0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (void *)((char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v27 = a3;
    uint64_t v28 = a4;
    uint64_t v30 = _swiftEmptyArrayStorage;
    sub_100038E18(0, v17, 0);
    uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
    v26[1] = a1;
    uint64_t v19 = a1 + ((v18 + 32) & ~v18);
    uint64_t v20 = *(void *)(v8 + 72);
    uint64_t v21 = v30;
    do
    {
      sub_1001D04E0(v19, (uint64_t)v11);
      sub_1001D04E0((uint64_t)v11, (uint64_t)v16 + *(int *)(v12 + 56));
      *uint64_t v16 = 1936748641;
      v16[1] = 0xE400000000000000;
      v16[2] = 0;
      uint64_t v16[3] = 0xE000000000000000;
      sub_1001D0544((uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100038E18(0, v21[2] + 1, 1);
        uint64_t v21 = v30;
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_100038E18(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v30;
      }
      _OWORD v21[2] = v23 + 1;
      sub_1000458B4((uint64_t)v16, (uint64_t)v21+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v23, &qword_10030A3B0);
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a3 = v27;
    a4 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v24 = v29;
  *(void *)a4 = v21;
  *(void *)(a4 + 8) = v24;
  *(void *)(a4 + 24) = 0;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 16) = a3;
  int64x2_t result = vdupq_n_s64(1uLL);
  *(int64x2_t *)(a4 + 40) = result;
  return result;
}

uint64_t sub_1001CFC68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AppInformationResponse(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  uint64_t v12 = &v26[-v11];
  sub_100065878(a1);
  sub_1000451A4(a1, (uint64_t)v27);
  sub_1000458B4((uint64_t)v27, (uint64_t)v32, &qword_10030A858);
  if (sub_100048738((uint64_t)v32) == 1)
  {
    sub_1000CB5C8(0x2064696C61766E49, 0xEF74736575716572, 6, (uint64_t)v33);
    uint64_t v13 = v33[0];
    uint64_t v14 = v33[1];
    uint64_t v15 = v33[2];
    uint64_t v16 = v33[3];
    unint64_t v17 = LODWORD(v33[4]) | ((unint64_t)WORD2(v33[4]) << 32) | ((unint64_t)BYTE6(v33[4]) << 48);
    uint64_t v18 = 21;
  }
  else
  {
    memcpy(v33, v32, 0x189uLL);
    sub_1001CFF18(v33, v12);
    sub_1001D04E0((uint64_t)v12, (uint64_t)v8);
    uint64_t v19 = sub_1001D0010(v33);
    uint64_t v21 = v20;
    sub_100019524(qword_100318068);
    unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100255FB0;
    sub_1001D04E0((uint64_t)v8, v23 + v22);
    sub_1001CF9CC(v23, v19, v21, (uint64_t)v28);
    sub_1001D0544((uint64_t)v8);
    sub_1002180FC();
    uint64_t v13 = v28[7];
    uint64_t v14 = v28[8];
    uint64_t v15 = v28[9];
    uint64_t v16 = v28[10];
    unint64_t v17 = v29 | ((unint64_t)v30 << 32) | ((unint64_t)v31 << 48);
    sub_1001D0174(v27);
    sub_1001D0544((uint64_t)v12);
    uint64_t v18 = 3;
  }
  ASOctaneSupportXPCService::HTTPVersion v24 = HTTPVersion.init(major:minor:)(1, 1);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = v18;
  *(ASOctaneSupportXPCService::HTTPVersion *)(result + 40) = v24;
  *(void *)a2 = result;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 16) = 2;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v15;
  *(void *)(a2 + 48) = v16;
  *(unsigned char *)(a2 + 62) = BYTE6(v17);
  *(_WORD *)(a2 + 60) = WORD2(v17);
  *(_DWORD *)(a2 + 56) = v17;
  return result;
}

uint64_t sub_1001CFF18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_10001C2A8((void *)(v3 + 48), *(void *)(v3 + 72));
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = sub_1001CF858(*(void *)(a1[6] + 16), *(void *)(a1[6] + 24), v6, v7);
  sub_10001C2A8((void *)(v3 + 48), *(void *)(v3 + 72));
  uint64_t v9 = sub_1001CF7FC(v6, v7);
  uint64_t v11 = v10;
  if (v8)
  {
    uint64_t v12 = *(void *)(v8 + 40);
    uint64_t v13 = *(void *)(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  sub_100022D94(v9, v11, v12, v13, a2);
  return swift_release();
}

uint64_t sub_1001D0010(uint64_t *a1)
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 0;
  }
  sub_10024F330(19);
  swift_bridgeObjectRelease();
  strcpy((char *)v6, "/v1/catalog/");
  BYTE5(v6[1]) = 0;
  HIWORD(v6[1]) = -5120;
  uint64_t v3 = *a1;
  uint64_t v2 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v3;
  v7._object = v2;
  sub_10024E800(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x737070612FLL;
  v8._object = (void *)0xE500000000000000;
  sub_10024E800(v8);
  uint64_t v4 = sub_1001CF778(v6[0], (void *)v6[1]);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001D0100()
{
  return sub_100098A10(v0 + 88);
}

uint64_t sub_1001D0108()
{
  uint64_t v0 = sub_100094D84();
  sub_100098A10(v0 + 88);
  return _swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for AppInformationRoute()
{
  return self;
}

uint64_t *sub_1001D0174(uint64_t *a1)
{
  return a1;
}

void sub_1001D0218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100045DA0(a11, a12, a13, a14);
  }
}

uint64_t sub_1001D04E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppInformationResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D0544(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppInformationResponse(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D05A0(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return sub_10024F320();
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(void *)uint64_t v4 = a1;
    uint64_t v5 = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v2 = v4;
  }
  else if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v2 = (const char *)sub_10024F3E0();
  }
  return pthread_setname_np(v2);
}

uint64_t sub_1001D0660(void *a1)
{
  uint64_t v1 = (void (*)(void **))a1[2];
  uint64_t v3 = a1[4];
  uint64_t v2 = a1[5];
  swift_bridgeObjectRetain();
  swift_retain();
  pthread_t v4 = pthread_self();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1001D0758(0x7FFFFFFFFFFFFFFFLL);
    uint64_t v5 = sub_10024E740();
    sub_1001D05A0(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for NIOThread();
  Swift::String v7 = (void *)swift_allocObject();
  v7[3] = v2;
  v7[4] = v4;
  void v7[2] = v3;
  uint64_t v9 = v7;
  v1(&v9);
  swift_release();
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_1001D0758(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10024E7C0();
    uint64_t v1 = sub_10024E920();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_1001D081C(const char *a1)
{
  return pthread_setname_np(a1);
}

uint64_t sub_1001D0844(uint64_t a1, uint64_t a2)
{
  return RemovableChannelHandler.removeHandler(context:removalToken:)(a1, a2);
}

uint64_t RemovableChannelHandler.removeHandler(context:removalToken:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = ChannelHandlerContext.handler.getter();
  uint64_t result = swift_unknownObjectRelease();
  if (v4 == v2) {
    return ChannelHandlerContext.leavePipeline(removalToken:)(a2);
  }
  __break(1u);
  return result;
}

void _ChannelInboundHandler.channelRegistered(context:)()
{
}

void _ChannelInboundHandler.channelUnregistered(context:)()
{
}

void _ChannelInboundHandler.channelActive(context:)()
{
}

void _ChannelInboundHandler.channelReadComplete(context:)()
{
}

void _ChannelInboundHandler.channelWritabilityChanged(context:)()
{
}

uint64_t sub_1001D0978(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.register(promise:)(a2);
}

uint64_t _ChannelOutboundHandler.register(context:promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1001D0E24(a1, a2);
  return ChannelHandlerContext.register(promise:)(v2);
}

uint64_t sub_1001D09C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ChannelHandlerContext.bind(to:promise:)(a2, a3);
}

uint64_t _ChannelOutboundHandler.bind(context:to:promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1001D0E14(a1, a2);
  return ChannelHandlerContext.bind(to:promise:)(v2, v3);
}

uint64_t sub_1001D0A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ChannelHandlerContext.connect(to:promise:)(a2, a3);
}

uint64_t _ChannelOutboundHandler.connect(context:to:promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1001D0E14(a1, a2);
  return ChannelHandlerContext.connect(to:promise:)(v2, v3);
}

void _ChannelOutboundHandler.flush(context:)()
{
}

uint64_t _ChannelOutboundHandler.close(context:mode:promise:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ChannelHandlerContext.close(mode:promise:)(a2, a3);
}

uint64_t sub_1001D0AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ChannelHandlerContext.triggerUserOutboundEvent(_:promise:)(a2, a3);
}

uint64_t _ChannelOutboundHandler.triggerUserOutboundEvent(context:event:promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1001D0E14(a1, a2);
  return ChannelHandlerContext.triggerUserOutboundEvent(_:promise:)(v2, v3);
}

void _ChannelInboundHandler.channelInactive(context:)()
{
}

uint64_t sub_1001D0B44()
{
  return ChannelHandlerContext.fireChannelRead(_:)();
}

uint64_t _ChannelInboundHandler.channelRead(context:data:)(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.fireChannelRead(_:)();
}

uint64_t sub_1001D0B94()
{
  return ChannelHandlerContext.fireUserInboundEventTriggered(_:)();
}

uint64_t _ChannelInboundHandler.userInboundEventTriggered(context:event:)(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.fireUserInboundEventTriggered(_:)();
}

void _ChannelOutboundHandler.read(context:)()
{
}

uint64_t sub_1001D0C0C()
{
  return ChannelHandlerContext.fireErrorCaught(_:)();
}

uint64_t _ChannelInboundHandler.errorCaught(context:error:)(uint64_t a1, uint64_t a2)
{
  return ChannelHandlerContext.fireErrorCaught(_:)();
}

void sub_1001D0C58()
{
}

void sub_1001D0C70()
{
}

void sub_1001D0C88()
{
}

void sub_1001D0CA0()
{
}

void sub_1001D0CB8()
{
}

uint64_t sub_1001D0CD0(uint64_t a1, uint64_t a2)
{
  return _ChannelInboundHandler.errorCaught(context:error:)(a1, a2);
}

uint64_t sub_1001D0CE8(uint64_t a1, uint64_t a2)
{
  return _ChannelOutboundHandler.register(context:promise:)(a1, a2);
}

uint64_t sub_1001D0D00(uint64_t a1, uint64_t a2)
{
  return _ChannelOutboundHandler.bind(context:to:promise:)(a1, a2);
}

uint64_t sub_1001D0D18(uint64_t a1, uint64_t a2)
{
  return _ChannelOutboundHandler.connect(context:to:promise:)(a1, a2);
}

void sub_1001D0D30()
{
}

void sub_1001D0D48()
{
}

uint64_t sub_1001D0D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _ChannelOutboundHandler.close(context:mode:promise:)(a1, a2, a3);
}

uint64_t sub_1001D0D78(uint64_t a1, uint64_t a2)
{
  return _ChannelOutboundHandler.triggerUserOutboundEvent(context:event:promise:)(a1, a2);
}

uint64_t sub_1001D0D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ChannelHandlerContext.write(_:promise:)(a2, a3);
}

uint64_t _ChannelOutboundHandler.write(context:data:promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1001D0E14(a1, a2);
  return ChannelHandlerContext.write(_:promise:)(v2, v3);
}

void sub_1001D0DE4()
{
}

uint64_t sub_1001D0DFC(uint64_t a1, uint64_t a2)
{
  return _ChannelInboundHandler.userInboundEventTriggered(context:event:)(a1, a2);
}

uint64_t sub_1001D0E14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001D0E24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001D0E30()
{
  uint64_t v0 = sub_10024E1F0();
  sub_100051A3C(v0, qword_10034C0E0);
  sub_10001B0E8(v0, (uint64_t)qword_10034C0E0);
  return sub_10024E1E0();
}

uint64_t sub_1001D0EA4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001D0F04(uint64_t result)
{
  uint64_t v3 = *v1;
  if ((_BYTE)result)
  {
    if (result == 1)
    {
      uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v3 + 872) + 96))(0, *(void *)(v3 + 864));
      if (!v2) {
        *((unsigned char *)v1 + *(void *)(*v1 + 896)) = 1;
      }
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)(v3 + 872) + 96))(1, *(void *)(v3 + 864));
    if (!v2) {
      *((unsigned char *)v1 + *(void *)(*v1 + 904)) = 1;
    }
  }
  return result;
}

char *sub_1001D0FF4()
{
  uint64_t v0 = sub_10002AA1C();
  swift_release();
  swift_release();
  return v0;
}

BOOL sub_1001D1054()
{
  sub_10002A0B0();
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_1001D2544();
  EventLoop.assertInEventLoop(file:line:)(v2, v3, v4, 96, v5, v1);
  swift_unknownObjectRelease();
  return sub_10002A68C();
}

uint64_t sub_1001D10C0()
{
  sub_10002FC68();
  uint64_t v2 = *(void *)(*(void *)(v0 + *(void *)(v1 + 912)) + 112);
  swift_retain();
  uint64_t v3 = sub_100007640((unsigned char *)(v2 + 16));
  swift_release();
  return v3;
}

uint64_t sub_1001D1118()
{
  sub_10002FC68();
  uint64_t v1 = (void *)swift_retain();
  return sub_1001EB248((uint64_t)v1, v1, sub_1001D2480, v0, (void (*)(void, void))sub_1001D249C, v0, sub_1001D24B8, v0) & 0x101;
}

void sub_1001D119C()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  sub_10002A0B0();
  uint64_t v5 = v4;
  swift_getObjectType();
  sub_1001D2544();
  EventLoop.assertInEventLoop(file:line:)(v6, v7, v8, 102, v9, v5);
  swift_unknownObjectRelease();
  sub_1001D2550();
  uint64_t v11 = v0 + *(void *)(v10 + 168);
  swift_beginAccess();
  uint64_t v48 = v11;
  sub_100027788(v11, (uint64_t)v41);
  uint64_t v12 = v46;
  sub_10001C2A8(v41, v45);
  sub_10002A7B8();
  uint64_t v13 = (*(uint64_t (**)(void))(v12 + 8))();
  sub_10001C2EC((uint64_t)v41);
  sub_1001D2550();
  uint64_t v15 = *(void *)(v14 + 176);
  uint64_t v16 = *(void *)(v0 + v15);
  if (v16)
  {
    if (sub_1001D1054()
      && (uint64_t v38 = *(void *)(*(void *)v0 + 896),
          uint64_t v39 = *(void *)(*(void *)v0 + 152),
          (*(unsigned char *)(v0 + v38) & 1) == 0))
    {
      uint64_t v36 = v15;
      uint64_t v37 = v16;
      BOOL v18 = v16 == 1;
      unint64_t v19 = 1;
      while (1)
      {
        BOOL v40 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v20 = sub_10006C75C(*(_DWORD *)(v13 + 16));
          swift_release();
          uint64_t v13 = v20;
        }
        uint64_t v21 = *(unsigned int *)(v13 + 16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v22 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v21 << 32, v21);
          swift_release();
          LODWORD(v21) = *(_DWORD *)(v22 + 16);
          uint64_t v13 = v22;
        }
        swift_beginAccess();
        uint64_t v23 = v2;
        uint64_t v24 = sub_1001D226C(*(void *)(v13 + 24), *(void *)(v13 + 24) + v21, v3);
        if (v2 || (v25 & 1) == 0) {
          break;
        }
        uint64_t v26 = v24;
        if (v24 <= 0)
        {
          if (*(unsigned char *)(v3 + v38) != 1) {
            goto LABEL_4;
          }
          *(unsigned char *)(v3 + v39) = 0;
          sub_10002CE30();
          break;
        }
        uint64_t v27 = v48;
        swift_beginAccess();
        uint64_t v28 = *(void *)(v27 + 24);
        uint64_t v29 = *(void *)(v27 + 32);
        sub_100051B64(v27, v28);
        char v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v26, v28, v29);
        swift_endAccess();
        *(unsigned char *)(v3 + v39) = 0;
        uint64_t v31 = sub_10002A7BC();
        v41[0] = v13;
        v41[1] = v26 << 32;
        char v44 = 0;
        __int16 v43 = 0;
        int v42 = v21;
        char v47 = 0;
        uint64_t v32 = *(void *)(v31 + 56);
        uint64_t ObjectType = swift_getObjectType();
        EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", 117, 2, 1157, ObjectType, v32);
        if (sub_1000B05F8())
        {
          swift_retain();
          sub_1000B13A4();
          swift_release();
        }
        else
        {
          swift_retain();
        }
        swift_release();
        sub_10003908C((uint64_t)v41);
        if (v21 < v26)
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v21 != v26) {
          break;
        }
        if ((v30 & 1) != 0 && v19 < *(void *)(v3 + v36))
        {
          sub_100027788(v48, (uint64_t)v41);
          uint64_t v34 = v46;
          sub_10001C2A8(v41, v45);
          sub_10002A7B8();
          uint64_t v35 = (*(uint64_t (**)(void))(v34 + 8))();
          swift_release();
          sub_10001C2EC((uint64_t)v41);
          uint64_t v13 = v35;
        }
        uint64_t v2 = v23;
        if (v40) {
          break;
        }
        if (v19 == -1) {
          goto LABEL_33;
        }
        if (sub_1001D1054())
        {
          BOOL v18 = ++v19 == v37;
          if ((*(unsigned char *)(v3 + v38) & 1) == 0) {
            continue;
          }
        }
        goto LABEL_4;
      }
    }
    else
    {
LABEL_4:
      sub_10002F0C8();
      swift_allocError();
      sub_1000CA830(v17, 6);
    }
    swift_release();
  }
  else
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
}

BOOL sub_1001D1600()
{
  sub_10002FC68();
  uint64_t v2 = *(void *)(v0 + *(void *)(v1 + 912));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 48) & 1) == 0;
}

#error "1001D1704: call analysis failed (funcsize=123)"

uint64_t sub_1001D1854()
{
  return sub_1001EB8CC();
}

uint64_t sub_1001D1888()
{
  sub_10002FC68();
  return sub_1001EB85C(v0, 1);
}

uint64_t sub_1001D18C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a2;
  uint64_t v41 = a1;
  swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  v38[2] = v7;
  __chkstk_darwin(v8, v9);
  sub_10002F9C8();
  uint64_t v11 = v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A0B0();
  uint64_t v17 = v16;
  swift_getObjectType();
  sub_1001D2544();
  EventLoop.assertInEventLoop(file:line:)(v18, v19, v20, 38, v21, v17);
  swift_unknownObjectRelease();
  if (sub_1001D1054())
  {
    v38[0] = a4;
    uint64_t v22 = v39;
    uint64_t v23 = v41;
    (*(void (**)(char *))(v11 + 16))(v15);
    if (sub_1001D2510())
    {
      uint64_t v24 = sub_1001D24D4();
      v25(v24);
      sub_1001D24F0();
      sub_10002FDAC();
      *(unsigned char *)(v4 + *(void *)(v26 + 888)) = v27;
    }
    else if (sub_1001D2510())
    {
      sub_10002FDAC();
      uint64_t v31 = *(void *)(v4 + *(void *)(v30 + 912));
      uint64_t v32 = sub_1001D24D4();
      v33(v32);
      sub_1001D24F0();
      *(void *)(v31 + 128) = v40;
    }
    else if (sub_1001D2510())
    {
      sub_10002FDAC();
      uint64_t v35 = *(void *)(v4 + *(void *)(v34 + 912));
      uint64_t v36 = sub_1001D24D4();
      v37(v36);
      sub_1001D24F0();
      *(_OWORD *)(v35 + 96) = v40;
    }
    else
    {
      sub_10002B5B0(v23, v22, a3);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, a3);
  }
  else
  {
    sub_10002F0C8();
    swift_allocError();
    return sub_1000CA830(v28, 2);
  }
}

uint64_t sub_1001D1B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002F9C8();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A0B0();
  uint64_t v14 = v13;
  swift_getObjectType();
  sub_1001D2544();
  EventLoop.assertInEventLoop(file:line:)(v15, v16, v17, 57, v18, v14);
  swift_unknownObjectRelease();
  if (!sub_1001D1054())
  {
    sub_10002F0C8();
    swift_allocError();
    return sub_1000CA830(v19, 2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a1, a2);
  if (sub_1001D2510())
  {
    LOBYTE(v21) = *(unsigned char *)(v3 + *(void *)(*(void *)v3 + 888));
    sub_1001D2528();
  }
  else if (sub_1001D2510())
  {
    *(void *)&long long v21 = *(void *)(*(void *)(v3 + *(void *)(*(void *)v3 + 912)) + 128);
    sub_1001D2528();
  }
  else
  {
    if (!sub_1001D2510())
    {
      sub_10002BE38(a1, a2, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, a2);
    }
    long long v21 = *(_OWORD *)(*(void *)(v3 + *(void *)(*(void *)v3 + 912)) + 96);
    sub_1001D2528();
  }
  swift_dynamicCast();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, a2);
}

uint64_t sub_1001D1DF8()
{
  sub_10002FC68();
  if (*(unsigned char *)(v0 + *(void *)(v1 + 896))) {
    return 0;
  }
  else {
    return sub_10002C1DC();
  }
}

void sub_1001D1E24()
{
  sub_10002FC68();
  if ((*(unsigned char *)(v0 + *(void *)(v1 + 896)) & 1) == 0) {
    sub_10002CC74();
  }
}

void sub_1001D1E4C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  if (!a2)
  {
    if (*((unsigned char *)v3 + *(void *)(v7 + 904)) == 1)
    {
      if (!a3) {
        return;
      }
      sub_10002F0C8();
      uint64_t v10 = sub_1000290D0();
      uint64_t v11 = 4;
      goto LABEL_9;
    }
    (*(void (**)(void))(v7 + 1016))(0);
    sub_1001D2550();
    sub_1001EB85C(a1, 0);
    sub_10002CAA0();
    if (a3) {
      sub_1000B44D0(0, 0, a3, v28, v29, v30, v31, v32, v38, v39, v40, (uint64_t)v41, v42, v43, v44, v45, v46, v47, v48,
    }
        v49,
        vars0,
        vars8);
    sub_10002A7BC();
    uint64_t v41 = &type metadata for ChannelEvent;
    LOBYTE(v38) = 1;
LABEL_31:
    ChannelPipeline.fireUserInboundEventTriggered(_:)((uint64_t)&v38);
    swift_release();
    sub_10001C2EC((uint64_t)&v38);
    return;
  }
  if (a2 == 1)
  {
    uint64_t v8 = *(void *)(v7 + 896);
    if (*((unsigned char *)v4 + v8) == 1)
    {
      if (!a3) {
        return;
      }
      sub_10002F0C8();
      uint64_t v10 = sub_1000290D0();
      uint64_t v11 = 5;
LABEL_9:
      *(void *)uint64_t v9 = v11;
      *(unsigned char *)(v9 + 8) = 3;
      swift_errorRetain();
      sub_1000B44D0(v10, 1, a3, v12, v13, v14, v15, v16, v38, v39, v40, (uint64_t)v41, v42, v43, v44, v45, v46, v47, v48,
        v49,
        vars0,
        vars8);
      swift_errorRelease();
      swift_errorRelease();
      return;
    }
    uint64_t v43 = a1;
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      if (v39 == 3 && v38 == 6)
      {
        *((unsigned char *)v4 + v8) = 1;
        swift_errorRelease();
        goto LABEL_28;
      }
      sub_100044A90(v38, v39);
    }
    swift_errorRelease();
    sub_1001D2550();
    (*(void (**)(uint64_t))(v27 + 1016))(1);
LABEL_28:
    sub_10002CE30();
    if (a3) {
      sub_1000B44D0(0, 0, a3, v33, v34, v35, v36, v37, v38, v39, v40, (uint64_t)v41, v42, v43, v44, v45, v46, v47, v48,
    }
        v49,
        vars0,
        vars8);
    sub_10002A7BC();
    uint64_t v41 = &type metadata for ChannelEvent;
    LOBYTE(v38) = 0;
    goto LABEL_31;
  }
  uint64_t v17 = *(void *)(v7 + 880);
  uint64_t v18 = *(void *)((char *)v3 + v17);
  if (v18)
  {
    *(void *)((char *)v4 + v17) = 0;
    sub_10002F2C8();
    uint64_t v19 = sub_1000290D0();
    *uint64_t v20 = 1;
    swift_errorRetain();
    sub_1000B44D0(v19, 1, v18, v21, v22, v23, v24, v25, v38, v39, v40, (uint64_t)v41, v42, v43, v44, v45, v46, v47, v48,
      v49,
      vars0,
      vars8);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  sub_10002CF80(a1, 2, a3);
}

uint64_t sub_1001D21B0()
{
  sub_10002FC68();
  swift_release();
  sub_10002FC68();
  return swift_release();
}

uint64_t sub_1001D2200()
{
  uint64_t v0 = sub_1001D0FF4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for BaseStreamSocketChannel()
{
  return sub_10002F7A4();
}

uint64_t sub_1001D226C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)a3 + 872) + 48))(a1, a2, *(void *)(*(void *)a3 + 864));
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1001D22EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  if (a1)
  {
    if (a2 - a1 >= 1) {
      return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)a3 + 872) + 32))(a1, a2, *(void *)(*(void *)a3 + 864));
    }
  }
  return result;
}

uint64_t sub_1001D2384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)a3 + 872) + 40))(a1, a2, *(void *)(*(void *)a3 + 864));
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1001D2404(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = __OFSUB__(a3, a2);
  uint64_t v6 = a3 - a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(*(void *)a4 + 872) + 72))(result, a2, v6, *(void *)(*(void *)a4 + 864));
    if (v4) {
      return v7;
    }
  }
  return result;
}

uint64_t sub_1001D2480(uint64_t a1, uint64_t a2)
{
  return sub_1001D22EC(a1, a2, v2);
}

uint64_t sub_1001D249C(uint64_t a1, uint64_t a2)
{
  return sub_1001D2384(a1, a2, v2);
}

uint64_t sub_1001D24B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001D2404(a1, a2, a3, v3);
}

uint64_t sub_1001D24D4()
{
  return v0;
}

uint64_t sub_1001D24F0()
{
  return swift_dynamicCast();
}

uint64_t sub_1001D2510()
{
  return swift_dynamicCast();
}

uint64_t sub_1001D2528()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1001D2560(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x444970756F7267 && a2 == 0xE700000000000000;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65736E6F43646964 && a2 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1001D26BC(char a1)
{
  if (!a1) {
    return 0x4449656C646E7562;
  }
  if (a1 == 1) {
    return 0x444970756F7267;
  }
  return 0x65736E6F43646964;
}

uint64_t sub_1001D2718(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_1003181E8);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v10 = v9 - v8;
  sub_10001C2A8(a1, a1[3]);
  sub_1001D3174();
  sub_10024FD40();
  sub_10024F940();
  if (!v1)
  {
    sub_10024F940();
    sub_10024F8E0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t sub_1001D2870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100019524(&qword_1003181D8);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_10002059C();
  sub_10001C2A8(a1, a1[3]);
  sub_1001D3174();
  sub_10024FD20();
  if (v2) {
    return sub_10001C2EC((uint64_t)a1);
  }
  uint64_t v7 = sub_10024F830();
  uint64_t v9 = v8;
  uint64_t v18 = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10024F830();
  uint64_t v12 = v11;
  uint64_t v16 = v10;
  swift_bridgeObjectRetain();
  uint64_t v17 = v12;
  LOBYTE(v12) = sub_10024F7D0();
  uint64_t v13 = sub_10001C7E0();
  v14(v13);
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v17;
  *(unsigned char *)(a2 + 32) = v12;
  return result;
}

uint64_t sub_1001D2A94()
{
  return sub_1001D26BC(*v0);
}

uint64_t sub_1001D2A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001D2560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001D2AC4(uint64_t a1)
{
  unint64_t v2 = sub_1001D3174();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D2B00(uint64_t a1)
{
  unint64_t v2 = sub_1001D3174();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1001D2B3C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001D2870(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1001D2B84(void *a1)
{
  return sub_1001D2718(a1);
}

double sub_1001D2B9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  sub_1002176C8(v13);
  sub_1001D30D4((uint64_t)v13, (uint64_t)v14);
  if (*((void *)&v14[0] + 1))
  {
    long long v16 = v14[0];
    long long v17 = v14[1];
    char v18 = v15;
    a1 = v4;
    LOWORD(v4) = 0;
    sub_1001D2F38((uint64_t)&v16);
    long long v19 = v16;
    sub_1001A4FA0((uint64_t)&v19);
    long long v12 = v17;
    sub_1001A4FA0((uint64_t)&v12);
    sub_100022D68();
    sub_1001D33B4();
    uint64_t v8 = sub_100022D50();
    uint64_t v9 = sub_1001D33D0(v8);
    uint64_t v10 = 3;
  }
  else
  {
    sub_100022D68();
    sub_1001D33B4();
    uint64_t v7 = sub_100022D50();
    uint64_t v9 = sub_1001D33D0(v7);
    uint64_t v10 = 21;
  }
  *(void *)(v9 + 32) = v10;
  *(_WORD *)(v9 + 40) = v4;
  *(_WORD *)(v9 + 42) = v3;
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 16) = 2;
  double result = 0.0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a2 + 55) = 0;
  return result;
}

uint64_t sub_1001D2F38(uint64_t a1)
{
  uint64_t v3 = sub_10024E030();
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v10 = v9 - v8;
  sub_10001C2A8((void *)(v1 + 88), *(void *)(v1 + 112));
  sub_10024E010();
  uint64_t v11 = (void *)sub_10009DC4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
  if (v11)
  {
    sub_100027788(v1 + 88, (uint64_t)v14);
    sub_10001C2A8(v14, v14[3]);
    sub_1000A2634(v11, *(unsigned char *)(a1 + 32) & 1);

    return sub_10001C2EC((uint64_t)v14);
  }
  else
  {
    sub_100022A5C();
    swift_allocError();
    *uint64_t v13 = 0;
    v13[1] = 0;
    void v13[2] = 25;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for PriceIncreaseHelperRoute()
{
  return self;
}

uint64_t sub_1001D30D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_1003181D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D313C(uint64_t (*a1)(void))
{
  return a1();
}

ValueMetadata *type metadata accessor for PriceIncreaseHelperRoute.Request()
{
  return &type metadata for PriceIncreaseHelperRoute.Request;
}

unint64_t sub_1001D3174()
{
  unint64_t result = qword_1003181E0;
  if (!qword_1003181E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003181E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PriceIncreaseHelperRoute.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001D328CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceIncreaseHelperRoute.Request.CodingKeys()
{
  return &type metadata for PriceIncreaseHelperRoute.Request.CodingKeys;
}

unint64_t sub_1001D32C8()
{
  unint64_t result = qword_1003181F0;
  if (!qword_1003181F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003181F0);
  }
  return result;
}

unint64_t sub_1001D3318()
{
  unint64_t result = qword_1003181F8;
  if (!qword_1003181F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003181F8);
  }
  return result;
}

unint64_t sub_1001D3368()
{
  unint64_t result = qword_100318200;
  if (!qword_100318200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318200);
  }
  return result;
}

uint64_t sub_1001D33B4()
{
  return type metadata accessor for HTTPResponseHead._Storage();
}

uint64_t sub_1001D33D0(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

Swift::Int sub_1001D33DC()
{
  return sub_1000D3C6C();
}

Swift::Int sub_1001D33E8(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_10001D594);
}

Swift::Int sub_1001D3400()
{
  return sub_1000D2DE4();
}

Swift::Int sub_1001D340C()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D341C(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_10002628C);
}

Swift::Int sub_1001D3434()
{
  return sub_1000D2EA4();
}

Swift::Int sub_1001D3440(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100052014);
}

Swift::Int sub_1001D345C(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D1DF8);
}

Swift::Int sub_1001D3474()
{
  return sub_1000D36C4();
}

Swift::Int sub_1001D3480(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_10005C8FC);
}

Swift::Int sub_1001D3498(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100062AE8);
}

Swift::Int sub_1001D34B0(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D2890);
}

Swift::Int sub_1001D34C8(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100087FF8);
}

Swift::Int sub_1001D34E0(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100093A3C);
}

Swift::Int sub_1001D34F8(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100098EB0);
}

Swift::Int sub_1001D3510(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000C5C38);
}

Swift::Int sub_1001D352C(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000CBEC4);
}

Swift::Int sub_1001D3544()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D3564(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D2238);
}

Swift::Int sub_1001D357C(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000CCAF4);
}

Swift::Int sub_1001D3594()
{
  return sub_1000D354C();
}

Swift::Int sub_1001D35A0()
{
  return sub_1000D34C4();
}

Swift::Int sub_1001D35AC(unsigned __int8 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D35F0(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D240C);
}

Swift::Int sub_1001D360C(char a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3658(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000E44E0);
}

Swift::Int sub_1001D3670(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000E5EBC);
}

Swift::Int sub_1001D3688()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D36A0()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D36BC()
{
  return sub_1001D3F14();
}

Swift::Int sub_1001D36C8()
{
  return sub_1000D2E50();
}

Swift::Int sub_1001D36D4(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000F73D4);
}

Swift::Int sub_1001D36EC(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1000FCEC8);
}

Swift::Int sub_1001D3704(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D1D20);
}

Swift::Int sub_1001D371C()
{
  return sub_1001D3F14();
}

Swift::Int sub_1001D3728()
{
  return sub_1000D29E8();
}

Swift::Int sub_1001D3734(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100111C34);
}

Swift::Int sub_1001D374C(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100147644);
}

Swift::Int sub_1001D3764()
{
  return sub_1001D3F1C();
}

Swift::Int sub_1001D3784()
{
  return sub_1000D3854();
}

Swift::Int sub_1001D3790(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001503D4);
}

Swift::Int sub_1001D37A8(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100152BBC);
}

Swift::Int sub_1001D37C0()
{
  return sub_1000D33B0();
}

Swift::Int sub_1001D37CC(unsigned __int8 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3810()
{
  return sub_1000D32AC();
}

Swift::Int sub_1001D381C()
{
  return sub_1000D331C();
}

Swift::Int sub_1001D3828(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100156BF0);
}

Swift::Int sub_1001D3840(uint64_t a1, unint64_t a2)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3894(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_10016C4D8);
}

Swift::Int sub_1001D38AC()
{
  return sub_1000D30B0();
}

Swift::Int sub_1001D38B8(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D14D8);
}

Swift::Int sub_1001D38D0()
{
  return sub_1001D3F1C();
}

Swift::Int sub_1001D38F0()
{
  return sub_1000D31E4();
}

Swift::Int sub_1001D38FC()
{
  return sub_1000D3018();
}

Swift::Int sub_1001D3908()
{
  return sub_1000D3158();
}

Swift::Int sub_1001D3914()
{
  return sub_1000D2C24();
}

Swift::Int sub_1001D3920(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_10017A79C);
}

Swift::Int sub_1001D3938(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001878C0);
}

Swift::Int sub_1001D3950(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001A4744);
}

Swift::Int sub_1001D3968()
{
  return sub_1000D2B64();
}

Swift::Int sub_1001D3974()
{
  return sub_1000D3460();
}

Swift::Int sub_1001D3980(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001B0324);
}

Swift::Int sub_1001D3998()
{
  return sub_1001D3F24();
}

Swift::Int sub_1001D39A8(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001B4784);
}

Swift::Int sub_1001D39C0(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001B4AF4);
}

Swift::Int sub_1001D39D8()
{
  return sub_1001D3F14();
}

Swift::Int sub_1001D39E4()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D39F8(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D2634);
}

Swift::Int sub_1001D3A10()
{
  return sub_1000D3B30();
}

Swift::Int sub_1001D3A1C()
{
  return sub_1000D3ACC();
}

Swift::Int sub_1001D3A28()
{
  return sub_1001D3F24();
}

Swift::Int sub_1001D3A38()
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3A80()
{
  return sub_1000D3BB0();
}

Swift::Int sub_1001D3A8C()
{
  return sub_1000D35B4();
}

Swift::Int sub_1001D3A98()
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3AD4(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001CC5F8);
}

Swift::Int sub_1001D3AEC(Swift::UInt32 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3B2C(char a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3B6C(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001EEF4C);
}

Swift::Int sub_1001D3B84(unsigned __int8 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3BC4(unsigned __int8 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3C08(unsigned __int8 a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3C4C(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_1001F9D3C);
}

Swift::Int sub_1001D3C64()
{
  return sub_1000D2CA0();
}

Swift::Int sub_1001D3C70()
{
  return sub_1000D2D08();
}

Swift::Int sub_1001D3C7C()
{
  return sub_1000D2F98();
}

Swift::Int sub_1001D3C88()
{
  return sub_1000D2F10();
}

Swift::Int sub_1001D3C94(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D20B8);
}

Swift::Int sub_1001D3CAC(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_10020FD7C);
}

Swift::Int sub_1001D3CC4(uint64_t a1)
{
  return sub_1001D3CDC(a1, (void (*)(unsigned char *, uint64_t))sub_1000D2030);
}

Swift::Int sub_1001D3CDC(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_1001D3EFC();
  a2(v5, a1);
  return sub_10024FC70();
}

Swift::Int sub_1001D3D24(uint64_t a1)
{
  return sub_1001D3D3C(a1, (void (*)(uint64_t))sub_100213DA0);
}

Swift::Int sub_1001D3D3C(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3D90(Swift::UInt a1)
{
  return sub_10024FC70();
}

Swift::Int sub_1001D3DD0()
{
  return sub_1001D3AEC(*v0);
}

uint64_t sub_1001D3DEC(uint64_t a1)
{
  return sub_1001D3E44(a1, &qword_100308DB8, &dword_10034C0CC, &dword_10034C0F8);
}

uint64_t sub_1001D3E18(uint64_t a1)
{
  return sub_1001D3E44(a1, &qword_100308DC8, &dword_10034C0D4, &dword_10034C0FC);
}

uint64_t sub_1001D3E44(uint64_t a1, void *a2, _DWORD *a3, _DWORD *a4)
{
  if (*a2 != -1) {
    uint64_t result = swift_once();
  }
  *a4 = *a3;
  return result;
}

ValueMetadata *type metadata accessor for UnixDomainSocketPathWrongType()
{
  return &type metadata for UnixDomainSocketPathWrongType;
}

ValueMetadata *_s10SocketTypeVMa()
{
  return &_s10SocketTypeVN;
}

unint64_t sub_1001D3EB0()
{
  unint64_t result = qword_100318208;
  if (!qword_100318208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318208);
  }
  return result;
}

uint64_t sub_1001D3EFC()
{
  return sub_10024FC00();
}

Swift::Int sub_1001D3F14()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D3F1C()
{
  return sub_1001D3A38();
}

Swift::Int sub_1001D3F24()
{
  return sub_1001D3A38();
}

uint64_t sub_1001D3F2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_10024FA60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
    if (v6 || (sub_10024FA60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1001D40A4(char a1)
{
  if (!a1) {
    return 0x7470697263736564;
  }
  if (a1 == 1) {
    return 0x4E79616C70736964;
  }
  return 0x656C61636F6CLL;
}

uint64_t sub_1001D4108()
{
  return sub_1001D40A4(*v0);
}

uint64_t sub_1001D4110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001D3F2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001D4138(uint64_t a1)
{
  unint64_t v2 = sub_1001D4770();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D4174(uint64_t a1)
{
  unint64_t v2 = sub_1001D4770();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001D41B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1001D41E0()
{
  sub_1001D41B0();
  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for OctaneLocalization()
{
  return self;
}

uint64_t sub_1001D4238(void *a1)
{
  uint64_t v2 = v1;
  sub_100019524(&qword_100318330);
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_10001C2A8(a1, a1[3]);
  sub_1001D4770();
  sub_10024FD40();
  uint64_t v6 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_1001D49F4();
  if (v6 || (swift_bridgeObjectRelease(), uint64_t v7 = *(void *)(v2 + 32), swift_bridgeObjectRetain(), sub_1001D49F4(), v7))
  {
    uint64_t v8 = sub_10005728C();
    v9(v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for OctaneLocale();
    sub_1001D47BC(&qword_100318338);
    sub_10024F980();
    uint64_t v11 = sub_10005728C();
    return v12(v11);
  }
}

uint64_t sub_1001D43E0(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1001D4430(a1);
  return v2;
}

void *sub_1001D4430(void *a1)
{
  sub_100019524(&qword_100318318);
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_10001C2A8(a1, a1[3]);
  sub_1001D4770();
  sub_10024FD20();
  if (v2)
  {
    type metadata accessor for OctaneLocalization();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v1[2] = sub_10024F830();
    v1[3] = v6;
    v1[4] = sub_10024F830();
    v1[5] = v7;
    type metadata accessor for OctaneLocale();
    sub_1001D47BC(&qword_100318328);
    sub_10024F870();
    uint64_t v9 = sub_1001CF6B0();
    v10(v9);
    v1[6] = v11;
  }
  sub_10001C2EC((uint64_t)a1);
  return v1;
}

uint64_t sub_1001D4648@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001D43E0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001D4674(void *a1)
{
  return sub_1001D4238(a1);
}

uint64_t sub_1001D4698(uint64_t a1, uint64_t a2)
{
  type metadata accessor for OctaneLocale();
  if ((sub_1000F09D0(*(void **)(a1 + 48), *(void **)(a2 + 48)) & 1) == 0) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (v5 = sub_10024FA60(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
    {
      return 1;
    }
    else
    {
      return sub_10024FA60();
    }
  }
  return result;
}

uint64_t sub_1001D474C(uint64_t *a1, uint64_t *a2)
{
  return sub_1001D4698(*a1, *a2) & 1;
}

unint64_t sub_1001D4770()
{
  unint64_t result = qword_100318320;
  if (!qword_100318320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318320);
  }
  return result;
}

uint64_t sub_1001D47BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for OctaneLocale();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OctaneLocalization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001D48CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneLocalization.CodingKeys()
{
  return &type metadata for OctaneLocalization.CodingKeys;
}

unint64_t sub_1001D4908()
{
  unint64_t result = qword_100318340;
  if (!qword_100318340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318340);
  }
  return result;
}

unint64_t sub_1001D4958()
{
  unint64_t result = qword_100318348;
  if (!qword_100318348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318348);
  }
  return result;
}

unint64_t sub_1001D49A8()
{
  unint64_t result = qword_100318350;
  if (!qword_100318350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318350);
  }
  return result;
}

uint64_t sub_1001D49F4()
{
  return sub_10024F940();
}

void HTTPResponseHead.isKeepAlive.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
}

Swift::Void __swiftcall HTTPHeaders.replaceOrAdd(name:value:)(Swift::String name, Swift::String value)
{
  sub_10003C7F0();
  sub_1001E1F04();
  swift_bridgeObjectRetain();
  sub_1001E1918();
  sub_1000DD7B8();
  if (v4) {
    sub_1001E1BC4();
  }
  swift_bridgeObjectRetain();
  sub_1001E1918();
  uint64_t v6 = sub_1000DD7B8();
  if (v4) {
    sub_1001E1BC4();
  }
  __chkstk_darwin(v6, v7);
  if (*(void *)(*v3 + 16) < sub_10003A870(v3))
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_10003ABA4();
  if (sub_1000304DC(v5, v2))
  {
LABEL_11:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003461C();
  uint64_t v8 = *(void *)(*v3 + 16);
  sub_100034934();
  sub_1001E19F8();
  sub_1001E1918();
  sub_1000DD7B8();
  if (v8) {
    sub_1001E1BC4();
  }
  sub_10003C780();
}

void *HTTPVersion.http1_1.unsafeMutableAddressor()
{
  return &static HTTPVersion.http1_1;
}

void HTTPResponseHead.init(version:status:headers:)()
{
  sub_10003C7F0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  __int16 v7 = v6;
  unsigned int v8 = HIWORD(v6);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v9 = sub_100022D50();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v3;
  *(void *)(v9 + 32) = v1;
  *(_WORD *)(v9 + 40) = v7;
  *(_WORD *)(v9 + 42) = v8;
  sub_10003C780();
}

uint64_t sub_1001D4BB0(uint64_t a1)
{
  uint64_t v9 = sub_10024EC40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1001F1AF0(&v8, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    sub_10001B63C();
  }
  return v1;
}

void sub_1001D4C5C()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v2 = sub_10024E140();
  sub_10002F9C8();
  uint64_t v4 = v3;
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  long long v12 = (char *)v20 - v11;
  sub_1001E16B4();
  v20[1] = sub_10024EC40();
  uint64_t v13 = *(void *)(v1 + 16);
  if (v13)
  {
    long long v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v14 = v4 + 16;
    char v15 = v16;
    unint64_t v17 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    v20[0] = v1;
    uint64_t v18 = v1 + v17;
    uint64_t v19 = *(void *)(v14 + 56);
    do
    {
      v15(v9, v18, v2);
      sub_1001F1C7C((uint64_t)v12, v9);
      (*(void (**)(char *, uint64_t))(v14 - 8))(v12, v2);
      v18 += v19;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001B63C();
  }
  sub_10003C8C8();
}

uint64_t sub_1001D4DB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1001E1820();
  uint64_t v8 = sub_10024EC40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = a1 + i;
      sub_1001F204C(&v7, *(unsigned __int8 *)(v5 + 32));
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    sub_10001B63C();
  }
  return v2;
}

uint64_t sub_1001D4E44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1001E1668();
  uint64_t v8 = sub_10024EC40();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      char v5 = *(unsigned char *)(a1 + i + 32);
      sub_1001F2368(&v7, v5);
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    sub_10001B63C();
  }
  return v2;
}

void static HTTPRequestHead.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a4 + 16);
  unint64_t v9 = *(void *)(a4 + 24);
  unint64_t v10 = HTTPMethod.rawValue.getter(v6, v7);
  uint64_t v12 = v11;
  if (v10 == HTTPMethod.rawValue.getter(v8, v9) && v12 == v13)
  {
    sub_10006B3D4(v6, v7);
    sub_10006B3D4(v8, v9);
    sub_1000ACBA0();
    sub_10006B3E8(v8, v9);
    sub_10006B3E8(v6, v7);
  }
  else
  {
    sub_10008436C();
    char v15 = sub_10024FA60();
    sub_10006B3D4(v6, v7);
    sub_10006B3D4(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10006B3E8(v8, v9);
    sub_10006B3E8(v6, v7);
    if ((v15 & 1) == 0)
    {
LABEL_17:
      sub_10002FD48();
      return;
    }
  }
  BOOL v16 = *(void *)(a1 + 32) == *(void *)(a4 + 32) && *(void *)(a1 + 40) == *(void *)(a4 + 40);
  if (!v16 && (sub_10024FA60() & 1) == 0) {
    goto LABEL_17;
  }
  if (*(unsigned __int16 *)(a1 + 48) != *(unsigned __int16 *)(a4 + 48)
    || *(unsigned __int16 *)(a1 + 50) != *(unsigned __int16 *)(a4 + 50))
  {
    goto LABEL_17;
  }
  sub_10002FD48();
  static HTTPHeaders.== infix(_:_:)(v18, v19, v20);
}

void static HTTPResponseHead.== infix(_:_:)()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 + 16);
  unint64_t v6 = *(void *)(v4 + 32);
  uint64_t v7 = v1[2];
  unint64_t v8 = v1[4];
  if (v6 >= 0x3C)
  {
    if (v8 < 0x3C || v5 != v7) {
      goto LABEL_19;
    }
    BOOL v12 = *(void *)(v4 + 24) == v1[3] && v6 == v8;
    if (!v12 && (sub_10024FA60() & 1) == 0) {
      goto LABEL_19;
    }
  }
  else if (v8 >= 0x3C {
         || (uint64_t v9 = HTTPResponseStatus.code.getter(v5, v0, v6), v9 != HTTPResponseStatus.code.getter(v7, v10, v8)))
  }
  {
LABEL_19:
    sub_10003C8C8();
    return;
  }
  if (*(unsigned __int16 *)(v4 + 40) != *((unsigned __int16 *)v2 + 20)
    || *(unsigned __int16 *)(v4 + 42) != *((unsigned __int16 *)v2 + 21))
  {
    goto LABEL_19;
  }
  sub_10003C8C8();
  static HTTPHeaders.== infix(_:_:)(v14, v15, v16);
}

uint64_t HTTPResponseHead.status.getter()
{
  uint64_t v0 = sub_1001E1DDC();
  sub_1001DF060(v0, v1, v2);
  return sub_1001E1DDC();
}

uint64_t static HTTPResponseStatus.== infix(_:_:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a3 < 0x3C)
  {
    if (a6 <= 0x3B)
    {
      uint64_t v8 = HTTPResponseStatus.code.getter(a1, a2, a3);
      return v8 == HTTPResponseStatus.code.getter(a4, v9, a6);
    }
    return 0;
  }
  if (a6 < 0x3C || a1 != a4) {
    return 0;
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }
  return sub_10024FA60();
}

uint64_t HTTPResponseHead.version.getter(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1001D5270(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  void *(*v27)(void *__return_ptr, void, void);
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  char v32;
  char v33;
  char v34;
  void *v35;
  void v36[2];
  int v37;
  void *v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  if (a3 > 1u)
  {
    sub_10003C984();
    int v5 = v4;
    HTTPHeaders.subscript.getter();
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v37 = v5;
      v36[1] = v6;
      uint64_t v8 = (unint64_t *)(v6 + 56);
      BOOL v39 = 2;
      sub_1001E1D8C();
      while (1)
      {
        uint64_t v11 = *(v8 - 3);
        unint64_t v12 = *(v8 - 2);
        unint64_t v14 = *(v8 - 1);
        unint64_t v13 = *v8;
        uint64_t v42 = (uint64_t)v3;
        uint64_t v43 = 0xE500000000000000;
        __chkstk_darwin(v9, v10);
        v36[-2] = &v42;
        if ((v13 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain_n();
          unsigned __int8 v20 = 3;
        }
        else if ((v13 & 0x2000000000000000) != 0)
        {
          uint64_t v3 = v36;
          uint64_t v40 = v14;
          uint64_t v41 = v13 & 0xFFFFFFFFFFFFFFLL;
          swift_bridgeObjectRetain_n();
          sub_1001E1D8C();
          unsigned __int8 v20 = sub_1001E1D68(v21, v22, v23, v24, v25, v26, v27);
        }
        else
        {
          uint64_t v38 = v36;
          if ((v14 & 0x1000000000000000) != 0)
          {
            uint64_t v15 = (void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
            uint64_t v3 = (void *)(v14 & 0xFFFFFFFFFFFFLL);
          }
          else
          {
            uint64_t v15 = (void *)sub_10024F3E0();
            uint64_t v3 = v35;
          }
          swift_bridgeObjectRetain_n();
          unsigned __int8 v20 = sub_1001E1D68(v15, (uint64_t)v3, v16, v17, v18, v19, (void *(*)(void *__return_ptr, void, void))sub_10003C3CC);
          sub_1001E1D8C();
        }
        if ((v20 & 0xFE) == 2) {
          unsigned __int8 v20 = sub_1001E1D44();
        }
        uint64_t v28 = swift_bridgeObjectRelease();
        if (v20)
        {
          uint64_t v9 = swift_bridgeObjectRelease();
          uint64_t v30 = 1;
        }
        else
        {
          uint64_t v42 = 0x696C612D7065656BLL;
          uint64_t v43 = 0xEA00000000006576;
          __chkstk_darwin(v28, v29);
          v36[-2] = &v42;
          sub_1001DF0A8((void *(*)(void *__return_ptr, void, void))sub_1001E18B4, (uint64_t)&v36[-4], v11, v12, v14, v13);
          sub_1001E1D38();
          if (v32)
          {
            uint64_t v33 = sub_1001E1D44();
            uint64_t v9 = swift_bridgeObjectRelease();
            if ((v33 & 1) == 0) {
              goto LABEL_21;
            }
          }
          else
          {
            uint64_t v34 = v31;
            uint64_t v9 = swift_bridgeObjectRelease();
            if ((v34 & 1) == 0) {
              goto LABEL_21;
            }
          }
          uint64_t v30 = v39 != 2;
        }
        BOOL v39 = v30;
LABEL_21:
        v8 += 4;
        if (!--v7)
        {
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_26:
    sub_10003C8C8();
  }
}

Swift::Void __swiftcall HTTPHeaders.remove(name:)(Swift::String name)
{
  swift_bridgeObjectRetain();
  sub_1001E1BD0();
  char v2 = sub_100032B9C();
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2) {
    sub_1001E1BC4();
  }
  __chkstk_darwin(v3, v4);
  if (*(void *)(*v1 + 16) < sub_10003A870(v1)) {
    __break(1u);
  }
  else {
    sub_10003ABA4();
  }
}

Swift::Void __swiftcall HTTPHeaders.add(contentsOf:)(ASOctaneSupportXPCService::HTTPHeaders contentsOf)
{
  int keepAliveState = contentsOf.keepAliveState;
  swift_bridgeObjectRetain();
  sub_1001D6E5C();
  if (keepAliveState == 2) {
    sub_1001E1BC4();
  }
}

uint64_t HTTPRequestHead.version.getter(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void HTTPRequestHead.isKeepAlive.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
}

Swift::Void __swiftcall HTTPHeaders.add(name:value:)(Swift::String name, Swift::String value)
{
  sub_1001E1F04();
  if (sub_1000304DC(v3, v4))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10003461C();
    uint64_t v5 = *(void *)(*(void *)v2 + 16);
    sub_100034934();
    sub_1001E19F8();
    sub_1001E1918();
    sub_1000DD7B8();
    if (v5) {
      sub_1001E1BC4();
    }
  }
}

uint64_t sub_1001D56F0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result < *(void *)(v2 + 24) || *(void *)(v2 + 32) < result) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1001D5714(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  if (v5 < a3 || v4 > a3 || v4 > result || v5 < result)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v9 = a3 - result;
  if (__OFSUB__(a3, result))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v11 = __OFADD__(result, a2);
  result += a2;
  if (v11) {
    goto LABEL_29;
  }
  if (result < v4 || v5 < result) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1001D578C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = a3 - result;
  if (a3 > result)
  {
    while ((unint64_t)(~result + a3) <= 0x7FFFFFFFFFFFFFFELL)
    {
      if (v4 == ++v3) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  if (a3 < result)
  {
    unint64_t v5 = ~a3 + result;
    if (v5 >= (result ^ 0x8000000000000000)) {
      unint64_t v5 = result ^ 0x8000000000000000;
    }
    unint64_t v6 = 0x8000000000000000;
    if (v5 < 0x8000000000000000) {
      unint64_t v6 = v5;
    }
    while ((v5 & 0x8000000000000000) == 0)
    {
      if ((result ^ 0x8000000000000000) == v6) {
        goto LABEL_34;
      }
      if (v4 == --v3)
      {
LABEL_13:
        if (a2 > 0)
        {
          if ((v3 & 0x8000000000000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_20;
        }
        if (v3 >= 1) {
          goto LABEL_26;
        }
        goto LABEL_24;
      }
    }
    goto LABEL_33;
  }
  if (a2 > 0)
  {
LABEL_19:
    if (v3 >= (unint64_t)a2)
    {
LABEL_20:
      uint64_t v7 = 0;
      while ((result ^ 0x7FFFFFFFFFFFFFFFuLL) > a2 - 1)
      {
        if (++v7 >= a2) {
          goto LABEL_30;
        }
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    return 0;
  }
LABEL_24:
  if (v3 > a2) {
    return 0;
  }
LABEL_26:
  if ((a2 & 0x8000000000000000) == 0) {
    return result;
  }
  uint64_t v7 = 0;
  while ((result ^ 0x8000000000000000) > ~a2)
  {
    if (--v7 <= a2)
    {
LABEL_30:
      result += v7;
      return result;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1001D58A8(uint64_t a1)
{
  return sub_1001D58D8(a1, (uint64_t (*)(void))sub_1000351A8);
}

uint64_t sub_1001D58C0(uint64_t a1)
{
  return sub_1001D58D8(a1, (uint64_t (*)(void))sub_100035E48);
}

uint64_t sub_1001D58D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || a1 > *(void *)(v5 + 24) >> 1)
  {
    uint64_t result = a2();
    uint64_t v5 = result;
  }
  *uint64_t v2 = v5;
  return result;
}

void *sub_1001D5944(void *(*a1)(uint64_t *__return_ptr, void *, uint64_t), uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LOBYTE(v10) = 3;
    return (void *)v10;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    uint64_t v7 = HIBYTE(a4) & 0xF;
    v9[0] = a3;
    v9[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v6 = v9;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v6 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v7 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v6 = (void *)sub_10024F3E0();
  }
  uint64_t result = a1(&v10, v6, v7);
  if (!v4) {
    return (void *)v10;
  }
  return result;
}

void HTTPHeaders.subscript.getter()
{
  sub_10003C984();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0[2];
  if (v5)
  {
    unint64_t v6 = v0;
    swift_bridgeObjectRetain_n();
    uint64_t v76 = v6;
    uint64_t v7 = v6 + 7;
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v10 = *(v7 - 3);
      unint64_t v9 = *(v7 - 2);
      uint64_t v11 = *(v7 - 1);
      uint64_t v12 = *v7;
      if ((v9 & 0x1000000000000000) != 0
        || ((v9 & 0x2000000000000000) != 0
          ? (v14 = HIBYTE(v9) & 0xF, v77 = *(v7 - 3), v78 = v9 & 0xFFFFFFFFFFFFFFLL, unint64_t v13 = &v77)
          : (v10 & 0x1000000000000000) == 0
          ? (unint64_t v13 = (uint64_t *)sub_10024F3E0())
          : (uint64_t *)(unint64_t v13 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32), v14 = v10 & 0xFFFFFFFFFFFFLL),
            sub_1001D5FB4(v13, v14, v4, v2),
            sub_1001E1D38(),
            v24))
      {
        char v15 = sub_1001E1EAC();
      }
      if (v15)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001E19C8();
          sub_100034BF0();
          uint64_t v8 = v20;
        }
        unint64_t v17 = v8[2];
        unint64_t v16 = v8[3];
        uint64_t v18 = v8;
        if (v17 >= v16 >> 1)
        {
          sub_1001E1A28(v16);
          sub_100034BF0();
          uint64_t v18 = v21;
        }
        off_t v18[2] = v17 + 1;
        uint64_t v8 = v18;
        uint64_t v19 = &v18[2 * v17];
        v19[4] = v11;
        v19[5] = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v7 += 4;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = v8[2];
  if (!v22)
  {
LABEL_60:
    swift_bridgeObjectRelease();
LABEL_61:
    sub_10003C8C8();
    return;
  }
  uint64_t v75 = v8;
  BOOL v24 = sub_10024E710() == 0x6B6F6F632D746573 && v23 == 0xEA00000000006569;
  if (v24)
  {
    swift_bridgeObjectRelease();
LABEL_56:
    uint64_t v77 = (uint64_t)_swiftEmptyArrayStorage;
    sub_100038D58();
    uint64_t v58 = v77;
    char v59 = v75 + 5;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_10024E920();
      uint64_t v62 = v61;
      uint64_t v64 = v63;
      uint64_t v66 = v65;
      swift_bridgeObjectRelease();
      uint64_t v77 = v58;
      unint64_t v67 = *(void *)(v58 + 16);
      if (v67 >= *(void *)(v58 + 24) >> 1)
      {
        sub_100038D58();
        uint64_t v58 = v77;
      }
      v59 += 2;
      *(void *)(v58 + 16) = v67 + 1;
      uint64_t v68 = (void *)(v58 + 32 * v67);
      v68[4] = v60;
      v68[5] = v62;
      v68[6] = v64;
      v68[7] = v66;
      --v22;
    }
    while (v22);
    goto LABEL_60;
  }
  char v25 = sub_10024FA60();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_56;
  }
  uint64_t v71 = v75[2];
  if (!v71) {
    goto LABEL_60;
  }
  int v70 = v75 + 4;
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  uint64_t v29 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v76 = v29;
    uint64_t v30 = &v70[2 * v28];
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    uint64_t v77 = 44;
    uint64_t v78 = 0xE100000000000000;
    __chkstk_darwin(v26, v27);
    v69[2] = &v77;
    swift_bridgeObjectRetain_n();
    uint64_t v33 = sub_1001DCA88(0x7FFFFFFFFFFFFFFFLL, 1u, sub_100081864, (uint64_t)v69, v31, v32);
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      unint64_t v73 = v32;
      uint64_t v74 = v28;
      uint64_t v77 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100038D58();
      uint64_t v35 = (void *)v77;
      uint64_t v72 = v33;
      uint64_t v36 = v33 + 56;
      do
      {
        unint64_t v37 = *(void *)(v36 - 24);
        unint64_t v38 = *(void *)(v36 - 16);
        swift_bridgeObjectRetain();
        unint64_t v39 = sub_1001D9ABC(v37, v38);
        uint64_t v41 = v40;
        uint64_t v43 = v42;
        uint64_t v45 = v44;
        swift_bridgeObjectRelease();
        uint64_t v77 = (uint64_t)v35;
        unint64_t v46 = v35[2];
        if (v46 >= v35[3] >> 1)
        {
          sub_100038D58();
          uint64_t v35 = (void *)v77;
        }
        v35[2] = v46 + 1;
        uint64_t v47 = &v35[4 * v46];
        v47[4] = v39;
        v47[5] = v41;
        v47[6] = v43;
        v47[7] = v45;
        v36 += 32;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v74;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = _swiftEmptyArrayStorage;
    }
    uint64_t v48 = v35[2];
    uint64_t v49 = v76;
    uint64_t v50 = v76[2];
    if (__OFADD__(v50, v48)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native() && v50 + v48 <= v49[3] >> 1)
    {
      uint64_t v29 = v49;
    }
    else
    {
      sub_100034CD4();
      uint64_t v29 = v51;
    }
    if (v35[2])
    {
      uint64_t v52 = v29[2];
      if ((v29[3] >> 1) - v52 < v48) {
        goto LABEL_64;
      }
      unint64_t v53 = (unint64_t)&v29[4 * v52 + 4];
      if ((unint64_t)(v35 + 4) < v53 + 32 * v48 && v53 < (unint64_t)&v35[4 * v48 + 4]) {
        goto LABEL_66;
      }
      swift_arrayInitWithCopy();
      if (v48)
      {
        uint64_t v55 = v29[2];
        BOOL v56 = __OFADD__(v55, v48);
        uint64_t v57 = v55 + v48;
        if (v56) {
          goto LABEL_65;
        }
        v29[2] = v57;
      }
    }
    else if (v48)
    {
      goto LABEL_63;
    }
    ++v28;
    uint64_t v26 = swift_bridgeObjectRelease();
    if (v28 == v71)
    {
      sub_1000ACBA0();
      goto LABEL_61;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  sub_10003C4F8();
  sub_10003C760();
  sub_10003C598();
  __break(1u);
}

uint64_t sub_1001D5F9C(unsigned char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1001D5FB4(a1, a2, a3, a4);
}

uint64_t sub_1001D5FB4(unsigned char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0) {
    return 2;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v12[0] = a3;
    v12[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    if ((HIBYTE(a4) & 0xF) == a2)
    {
      if (!a2) {
        return 1;
      }
      if (((*a1 ^ a3) & 0xDF) == 0)
      {
        uint64_t v9 = 1;
        while (a2 != v9)
        {
          if (v9 >= a2)
          {
            __break(1u);
            goto LABEL_17;
          }
          unsigned __int8 v10 = a1[v9];
          unsigned __int8 v11 = *((unsigned char *)v12 + v9++);
          if (((v11 ^ v10) & 0xDF) != 0) {
            return 0;
          }
        }
        return 1;
      }
    }
    return 0;
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v6 = (unsigned char *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v7 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
LABEL_17:
    unint64_t v6 = (unsigned char *)sub_10024F3E0();
  }
  sub_100098A38(v6, v7, a1, a2, (char *)v12);
  return LOBYTE(v12[0]);
}

unint64_t sub_1001D60B0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v24 = v6;
  uint64_t v7 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a2) & 0xF;
  }
  uint64_t v32 = 4 * v6;
  uint64_t v27 = 4 << v7;
  unint64_t v28 = v8;
  uint64_t v20 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v21 = a4 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v26 = 4 * v8;
  uint64_t v9 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  uint64_t v22 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v11 = 15;
  unint64_t v12 = 15;
  while (1)
  {
    unint64_t v13 = v12 >> 14;
    BOOL v14 = v12 >> 14 == v32;
    if (v12 >> 14 == v32)
    {
      unsigned __int8 v15 = 0;
      goto LABEL_29;
    }
    unint64_t result = v12;
    if ((v12 & 0xC) == v27) {
      unint64_t result = sub_1000F44B4(v12, a3, a4);
    }
    unint64_t v17 = result >> 16;
    if (result >> 16 >= v24) {
      goto LABEL_51;
    }
    if ((a4 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_10024E890();
      unsigned __int8 v15 = result;
    }
    else if ((a4 & 0x2000000000000000) != 0)
    {
      unint64_t v30 = a3;
      uint64_t v31 = v21;
      unsigned __int8 v15 = *((unsigned char *)&v30 + v17);
    }
    else
    {
      unint64_t result = v20;
      if ((a3 & 0x1000000000000000) == 0) {
        unint64_t result = sub_10024F3E0();
      }
      unsigned __int8 v15 = *(unsigned char *)(result + v17);
    }
    if ((v12 & 0xC) == v27)
    {
      unint64_t result = sub_1000F44B4(v12, a3, a4);
      unint64_t v12 = result;
      if ((a4 & 0x1000000000000000) == 0)
      {
LABEL_24:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_29;
      }
    }
    else if ((a4 & 0x1000000000000000) == 0)
    {
      goto LABEL_24;
    }
    if (v24 <= v12 >> 16) {
      goto LABEL_53;
    }
    unint64_t v12 = sub_10024E860();
LABEL_29:
    if (v26 == v11 >> 14) {
      return v14;
    }
    unint64_t result = v11;
    if ((v11 & 0xC) == v10) {
      unint64_t result = sub_1000F44B4(v11, a1, a2);
    }
    unint64_t v18 = result >> 16;
    if (result >> 16 >= v28) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_10024E890();
      unsigned __int8 v19 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      unint64_t v30 = a1;
      uint64_t v31 = v23;
      unsigned __int8 v19 = *((unsigned char *)&v30 + v18);
    }
    else
    {
      unint64_t result = v22;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_10024F3E0();
      }
      unsigned __int8 v19 = *(unsigned char *)(result + v18);
    }
    if ((v11 & 0xC) == v10)
    {
      unint64_t result = sub_1000F44B4(v11, a1, a2);
      unint64_t v11 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_41:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_46;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_41;
    }
    if (v28 <= v11 >> 16) {
      goto LABEL_52;
    }
    unint64_t v11 = sub_10024E860();
LABEL_46:
    if (v13 == v32 || ((v19 ^ v15) & 0xDF) != 0) {
      return 0;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

unint64_t sub_1001D63B4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v9 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(a2) & 0xF;
  }
  uint64_t v23 = 4 << v9;
  unint64_t v27 = v10;
  uint64_t v25 = 4 * v10;
  unint64_t v29 = a1;
  uint64_t v11 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v11) = 1;
  }
  uint64_t v12 = 4 << v11;
  uint64_t v21 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a2 & 0xFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = 15;
  while (1)
  {
    unint64_t v14 = a3 ^ a4;
    if ((a3 ^ a4) >= 0x4000)
    {
      unint64_t result = sub_10024F0A0();
      unsigned __int8 v15 = result;
      if ((a3 & 0xC) == v23)
      {
        unint64_t result = sub_1000F44B4(a3, a5, a6);
        a3 = result;
      }
      if ((a6 & 0x1000000000000000) != 0)
      {
        if (v20 <= a3 >> 16) {
          goto LABEL_42;
        }
        a3 = sub_10024E860();
      }
      else
      {
        a3 = (a3 & 0xFFFFFFFFFFFF0000) + 65540;
      }
      if (v25 == v13 >> 14) {
        goto LABEL_37;
      }
    }
    else
    {
      if (v25 == v13 >> 14)
      {
        uint64_t v19 = 1;
        goto LABEL_38;
      }
      unsigned __int8 v15 = 0;
    }
    unint64_t result = v13;
    if ((v13 & 0xC) == v12) {
      unint64_t result = sub_1000F44B4(v13, v29, a2);
    }
    unint64_t v17 = result >> 16;
    if (result >> 16 >= v27) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_10024E890();
      unsigned __int8 v18 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v28[0] = v29;
      v28[1] = v22;
      unsigned __int8 v18 = *((unsigned char *)v28 + v17);
    }
    else
    {
      unint64_t result = v21;
      if ((v29 & 0x1000000000000000) == 0) {
        unint64_t result = sub_10024F3E0();
      }
      unsigned __int8 v18 = *(unsigned char *)(result + v17);
    }
    if ((v13 & 0xC) == v12)
    {
      unint64_t result = sub_1000F44B4(v13, v29, a2);
      unint64_t v13 = result;
      if ((a2 & 0x1000000000000000) != 0)
      {
LABEL_30:
        if (v27 <= v13 >> 16) {
          goto LABEL_41;
        }
        unint64_t v13 = sub_10024E860();
        goto LABEL_32;
      }
    }
    else if ((a2 & 0x1000000000000000) != 0)
    {
      goto LABEL_30;
    }
    unint64_t v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_32:
    if (v14 < 0x4000 || ((v18 ^ v15) & 0xDF) != 0)
    {
LABEL_37:
      uint64_t v19 = 0;
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *HTTPHeaders.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  sub_1001E1CE4();
  uint64_t v7 = (uint64_t *)(v3 + 56);
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v22 = v4;
  do
  {
    uint64_t v10 = *(v7 - 3);
    unint64_t v9 = *(v7 - 2);
    uint64_t v11 = *(v7 - 1);
    uint64_t v12 = *v7;
    if ((v9 & 0x1000000000000000) != 0
      || ((v9 & 0x2000000000000000) != 0
        ? (v14 = HIBYTE(v9) & 0xF, v23[0] = *(v7 - 3), v23[1] = v9 & 0xFFFFFFFFFFFFFFLL, unint64_t v13 = v23)
        : (v10 & 0x1000000000000000) == 0
        ? (unint64_t v13 = (unsigned char *)sub_10024F3E0())
        : (unsigned char *)(unint64_t v13 = (unsigned char *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32), v14 = v10 & 0xFFFFFFFFFFFFLL),
          sub_1001D5FB4(v13, v14, v5, v4),
          sub_1001E1D38(),
          v16))
    {
      char v15 = sub_1001E1EAC();
    }
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001E19C8();
        sub_100034BF0();
        uint64_t v8 = v19;
      }
      unint64_t v17 = v8[2];
      if (v17 >= v8[3] >> 1)
      {
        sub_100034BF0();
        uint64_t v8 = v20;
      }
      void v8[2] = v17 + 1;
      unsigned __int8 v18 = &v8[2 * v17];
      v18[4] = v11;
      v18[5] = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v4 = v22;
    }
    v7 += 4;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease_n();
  return v8;
}

Swift::String_optional __swiftcall HTTPHeaders.first(name:)(Swift::String name)
{
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    sub_1001E1CE4();
    uint64_t v6 = v2 + 56;
    while (1)
    {
      unint64_t v8 = *(void *)(v6 - 24);
      unint64_t v7 = *(void *)(v6 - 16);
      if ((v7 & 0x1000000000000000) != 0
        || ((v7 & 0x2000000000000000) != 0
          ? (v10 = HIBYTE(v7) & 0xF, v16[0] = *(void *)(v6 - 24), v16[1] = v7 & 0xFFFFFFFFFFFFFFLL, unint64_t v9 = v16)
          : (v8 & 0x1000000000000000) == 0
          ? (unint64_t v9 = (unsigned char *)sub_10024F3E0())
          : (unsigned char *)(unint64_t v9 = (unsigned char *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32), v10 = v8 & 0xFFFFFFFFFFFFLL),
            sub_1001D5FB4(v9, v10, v4, v3),
            sub_1001E1D38(),
            v12))
      {
        char v11 = sub_1001D60B0(v4, v3, v8, v7);
      }
      if (v11) {
        break;
      }
      v6 += 32;
      if (!--v5)
      {
        sub_1000ACBA0();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1000ACBA0();
  }
LABEL_16:
  sub_10002FD48();
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t sub_1001D68DC()
{
  return sub_1001D6CA4();
}

void sub_1001D68F4()
{
  sub_1001E195C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001E1B28() || (sub_1001E1BB8(), !(v6 ^ v4 | v5)))
  {
    sub_1001E1C74();
    sub_10003525C();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1001E1948();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v8 = sub_1001E19D8();
  sub_1001DD710(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1001E1BAC();
  if (!v4)
  {
    *(void *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1001D69A0()
{
  sub_1001E195C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001E1B28() || (sub_1001E1BB8(), !(v6 ^ v4 | v5)))
  {
    sub_1001E1C74();
    sub_100034DF4();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1001E1948();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001DD14C();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1001E1BAC();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

#error "1001D6B40: call analysis failed (funcsize=140)"

uint64_t sub_1001D6C8C()
{
  return sub_1001D6CA4();
}

uint64_t sub_1001D6CA4()
{
  sub_10003C7F0();
  uint64_t v3 = v2;
  unint64_t v4 = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v0 >> 62)
  {
    sub_1001E1E6C();
    uint64_t v6 = sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v6, v5))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = *v0;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v0 = v7;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
    {
      uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v6 + v5 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_12;
      }
    }
  }
  if (v7 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10024F390();
    swift_bridgeObjectRelease();
    *uint64_t v0 = v10;
    uint64_t v9 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_12:
    uint64_t result = v3(v9 + 8 * *(void *)(v9 + 16) + 32, (*(void *)(v9 + 24) >> 1) - *(void *)(v9 + 16), v4);
    if (v12 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_10024F6F0();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    uint64_t v13 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v14 = __OFADD__(v13, v12);
    uint64_t v15 = v13 + v12;
    if (v14)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
  }
  swift_bridgeObjectRelease();
  sub_10003C780();
  return sub_10024EAC0();
}

void sub_1001D6E5C()
{
  sub_1001E195C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001E1B28() || (sub_1001E1BB8(), !(v6 ^ v4 | v5)))
  {
    sub_1001E1C74();
    uint64_t v2 = sub_1000351A8(v7, v8, v9, v10);
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1001E1948();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = sub_1001E19D8();
  sub_1001DD660(v11, v12);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *unint64_t v1 = v2;
    return;
  }
  sub_1001E1BAC();
  if (!v4)
  {
    *(void *)(v2 + 16) = v13;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1001D6F04()
{
  sub_1001E195C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001E1B28() || (sub_1001E1BB8(), !(v6 ^ v4 | v5)))
  {
    sub_1001E1C74();
    sub_100034BF0();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1001E1948();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001E19D8();
  sub_1001DE2D4();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *unint64_t v1 = v2;
    return;
  }
  sub_1001E1BAC();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1001D6FAC()
{
  sub_1001E195C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001E1B28() || (sub_1001E1BB8(), !(v6 ^ v4 | v5)))
  {
    sub_100035E48();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1001E1948();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001E19D8();
  sub_1001DDEBC();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *unint64_t v1 = v2;
    return;
  }
  sub_1001E1BAC();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1001D7058()
{
  sub_10003C7F0();
  if ((v2 & 0x1000000000000000) != 0)
  {
    Swift::Int v3 = sub_10024E850();
  }
  else if ((v2 & 0x2000000000000000) != 0)
  {
    Swift::Int v3 = HIBYTE(v2) & 0xF;
  }
  else
  {
    Swift::Int v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = *v0;
  uint64_t v5 = *(void *)(*v0 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v0 = v4;
    if (!isUniquelyReferenced_nonNull_native || *(void *)(v4 + 24) >> 1 < v5 + v3)
    {
      sub_100035E48();
      uint64_t v4 = v7;
      *uint64_t v0 = v7;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_10024F340();
    if (v9) {
      goto LABEL_19;
    }
    uint64_t v10 = v8;
    sub_1000ACBA0();
    if (v10 >= v3)
    {
      if (v10 < 1)
      {
LABEL_14:
        *uint64_t v0 = v4;
        sub_10003C780();
        return;
      }
      uint64_t v11 = *(void *)(v4 + 16);
      BOOL v12 = __OFADD__(v11, v10);
      uint64_t v13 = v11 + v10;
      if (!v12)
      {
        *(void *)(v4 + 16) = v13;
        goto LABEL_14;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_1001D7174()
{
  sub_1001E195C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001E1B28() || (sub_1001E1BB8(), !(v6 ^ v4 | v5)))
  {
    sub_1001E1C74();
    sub_100034B40();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1001E1948();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001E19D8();
  sub_1001DCFC0();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1001E1BAC();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t HTTPRequestHead.uri.getter()
{
  return sub_100094D44();
}

uint64_t HTTPRequestHead.method.getter()
{
  uint64_t v0 = sub_100094D44();
  sub_10006B3D4(v0, v1);
  return sub_100094D44();
}

unint64_t HTTPMethod.rawValue.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 5522759;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v2 = 5526864;
      break;
    case 2uLL:
      unint64_t v2 = 4997953;
      break;
    case 3uLL:
      unint64_t v2 = 1145128264;
      break;
    case 4uLL:
      unint64_t v2 = 1414745936;
      break;
    case 5uLL:
      unint64_t v2 = 1498435395;
      break;
    case 6uLL:
      unint64_t v2 = 1262702412;
      break;
    case 7uLL:
      unint64_t v2 = 1163284301;
      break;
    case 8uLL:
      unint64_t v2 = 1145981250;
      break;
    case 9uLL:
      unint64_t v2 = 1263421772;
      break;
    case 0xAuLL:
      unint64_t v2 = 0x4843544150;
      break;
    case 0xBuLL:
      unint64_t v3 = 1128354388;
      goto LABEL_18;
    case 0xCuLL:
      unint64_t v2 = 0x4C4F434B4DLL;
      break;
    case 0xDuLL:
      uint64_t v4 = 17741;
      goto LABEL_17;
    case 0xEuLL:
      uint64_t v4 = 21840;
LABEL_17:
      unint64_t v3 = v4 & 0xFFFFFFFF0000FFFFLL | 0x47520000;
LABEL_18:
      unint64_t v2 = v3 & 0xFFFF0000FFFFFFFFLL | 0x4500000000;
      break;
    case 0xFuLL:
      unint64_t v2 = 0x594649544F4ELL;
      break;
    case 0x10uLL:
      unint64_t v2 = 0x484352414553;
      break;
    case 0x11uLL:
      unint64_t v2 = 0x4B434F4C4E55;
      break;
    case 0x12uLL:
      unint64_t v2 = 0x444E49424552;
      break;
    case 0x13uLL:
      unint64_t v2 = 0x444E49424E55;
      break;
    case 0x14uLL:
      unint64_t v2 = 0x54524F504552;
      break;
    case 0x15uLL:
      unint64_t v2 = 0x4554454C4544;
      break;
    case 0x16uLL:
      unint64_t v2 = 0x4B4E494C4E55;
      break;
    case 0x17uLL:
      unint64_t v2 = 0x5443454E4E4F43;
      break;
    case 0x18uLL:
      unint64_t v2 = 0x4843524145534DLL;
      break;
    case 0x19uLL:
      unint64_t v2 = 0x534E4F4954504FLL;
      break;
    case 0x1AuLL:
      unint64_t v2 = 0x444E4946504F5250;
      break;
    case 0x1BuLL:
      unint64_t v2 = 0x54554F4B43454843;
      break;
    case 0x1CuLL:
      unint64_t v2 = 0x43544150504F5250;
      break;
    case 0x1DuLL:
      unint64_t v2 = 0x4249524353425553;
      break;
    case 0x1EuLL:
      unint64_t v2 = 0x444E454C41434B4DLL;
      break;
    case 0x1FuLL:
      unint64_t v2 = 0x4956495443414B4DLL;
      break;
    case 0x20uLL:
      unint64_t v2 = 0x5243534255534E55;
      break;
    case 0x21uLL:
      unint64_t v2 = 0x454352554F53;
      break;
    default:
      unint64_t v2 = a1;
      break;
  }
  sub_10006B3D4(a1, a2);
  return v2;
}

ASOctaneSupportXPCService::HTTPVersion __swiftcall HTTPVersion.init(major:minor:)(Swift::Int major, Swift::Int minor)
{
  if (major < 0) {
    goto LABEL_6;
  }
  if ((unint64_t)major >= 0x10000)
  {
LABEL_7:
    sub_10003C4F8();
    sub_10003C6D8();
    goto LABEL_8;
  }
  if (minor < 0)
  {
LABEL_6:
    sub_10003C4F8();
    sub_10003C6E8();
LABEL_8:
    ASOctaneSupportXPCService::HTTPVersion v2 = (ASOctaneSupportXPCService::HTTPVersion)sub_10003C850();
    __break(1u);
    return v2;
  }
  if ((unint64_t)minor >= 0x10000) {
    goto LABEL_7;
  }
  return (ASOctaneSupportXPCService::HTTPVersion)(minor | (major << 16));
}

Swift::Bool __swiftcall HTTPHeaders.contains(name:)(Swift::String name)
{
  uint64_t v4 = *(void *)(v1 + 16);
  if (!v4) {
    return 0;
  }
  sub_1001E1EF8();
  for (uint64_t i = (unint64_t *)(v5 + 40); ; i += 4)
  {
    unint64_t v7 = *(i - 1);
    unint64_t v8 = *i;
    if ((*i & 0x1000000000000000) != 0
      || ((v8 & 0x2000000000000000) != 0
        ? (v10 = HIBYTE(v8) & 0xF, v14[0] = *(i - 1), v14[1] = v8 & 0xFFFFFFFFFFFFFFLL, char v9 = v14)
        : (v7 & 0x1000000000000000) == 0
        ? (char v9 = (unsigned char *)sub_10024F3E0())
        : (unsigned char *)(char v9 = (unsigned char *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32), v10 = v7 & 0xFFFFFFFFFFFFLL),
          sub_1001D5FB4(v9, v10, v3, v2),
          sub_1001E1D38(),
          v12))
    {
      char v11 = sub_1001D60B0(v3, v2, v7, v8);
    }
    if (v11) {
      break;
    }
    if (!--v4) {
      return 0;
    }
  }
  return 1;
}

uint64_t HTTPVersion.major.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HTTPVersion.minor.getter(uint64_t result)
{
  return (unsigned __int16)result;
}

unint64_t HTTPResponseStatus.mayHaveResponseBody.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 0x3C) {
    return (unint64_t)(HTTPResponseStatus.code.getter(a1, a2, a3) - 200) < 0xFFFFFFFFFFFFFF9CLL;
  }
  else {
    return (0xFFFFFFFFFFFFF78uLL >> a3) & 1;
  }
}

uint64_t HTTPResponseStatus.code.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 <= 0x3B) {
    return qword_10026B270[a3];
  }
  return result;
}

uint64_t HTTPResponseStatus.reasonPhrase.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3)
  {
    case 1uLL:
    case 0x21uLL:
    case 0x28uLL:
    case 0x34uLL:
      sub_1001E1AAC();
      break;
    case 6uLL:
    case 0x1CuLL:
    case 0x25uLL:
    case 0x2DuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x36uLL:
      sub_1001E197C();
      break;
    case 0xEuLL:
    case 0x22uLL:
    case 0x2BuLL:
    case 0x2EuLL:
      sub_1001E1ABC();
      break;
    case 0x11uLL:
    case 0x19uLL:
    case 0x1BuLL:
    case 0x32uLL:
    case 0x3AuLL:
      sub_1001E1D2C();
      break;
    case 0x13uLL:
    case 0x14uLL:
    case 0x1AuLL:
    case 0x26uLL:
      sub_1001E1ACC();
      break;
    default:
      break;
  }
  sub_1001DF060(a1, a2, a3);
  return sub_100094D44();
}

uint64_t sub_1001D7EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(_DWORD *)(v5 + 48) = a5;
  return v5;
}

uint64_t sub_1001D7EC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  int v5 = *(_DWORD *)(v0 + 48);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  *(_DWORD *)(v6 + 48) = v5;
  sub_10006B3D4(v1, v2);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1001D7F58()
{
  sub_10006B3E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001D7F80()
{
  uint64_t v0 = sub_1001D7F58();
  return _swift_deallocClassInstance(v0, 52, 7);
}

uint64_t HTTPRequestHead.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HTTPRequestHead.headers.setter(uint64_t a1, char a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(unsigned char *)(v2 + 16) = a2;
  return result;
}

uint64_t HTTPRequestHead.method.setter()
{
  if ((sub_1001E1E8C() & 1) == 0)
  {
    uint64_t v0 = sub_1001D7EC4();
    sub_1001E1B94(v0);
  }
  uint64_t v1 = sub_1001E1D9C();
  return sub_10006B3E8(v1, v2);
}

uint64_t (*HTTPRequestHead.method.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  unint64_t v4 = *(void *)(*(void *)v1 + 24);
  *a1 = v3;
  a1[1] = v4;
  sub_10006B3D4(v3, v4);
  return sub_1001D80B4;
}

uint64_t sub_1001D80B4(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = sub_10008436C();
    sub_10006B3D4(v2, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = sub_1001D7EC4();
      sub_1001E1B94(v4);
    }
    uint64_t v5 = sub_1001E1D9C();
    sub_10006B3E8(v5, v6);
    uint64_t v7 = sub_10008436C();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = sub_1001D7EC4();
      sub_1001E1B94(v9);
    }
    uint64_t v7 = sub_1001E1D9C();
  }
  return sub_10006B3E8(v7, v8);
}

uint64_t HTTPRequestHead.uri.setter()
{
  if ((sub_1001E1E8C() & 1) == 0)
  {
    uint64_t v3 = sub_1001D7EC4();
    sub_1001E1B94(v3);
  }
  uint64_t v4 = *v2;
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*HTTPRequestHead.uri.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  *a1 = *(void *)(*(void *)v1 + 32);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1001D81E8;
}

uint64_t sub_1001D81E8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (uint64_t *)a1[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = sub_1001D7EC4();
      sub_1001E1B94(v5);
    }
    uint64_t v6 = *v4;
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = sub_1001D7EC4();
      sub_1001E1B94(v7);
    }
    uint64_t v8 = *v4;
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v2;
  }
  return swift_bridgeObjectRelease();
}

uint64_t HTTPRequestHead.version.setter(int a1)
{
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    *(void *)uint64_t v1 = sub_1001D7EC4();
    uint64_t result = swift_release();
  }
  *(_DWORD *)(*(void *)v1 + 48) = a1;
  return result;
}

uint64_t (*HTTPRequestHead.version.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)v1 + 48);
  return sub_1001D830C;
}

uint64_t sub_1001D830C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)a1;
  __int16 v2 = *(_WORD *)(a1 + 10);
  __int16 v3 = *(_WORD *)(a1 + 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    *uint64_t v1 = sub_1001D7EC4();
    uint64_t result = swift_release();
  }
  uint64_t v5 = *v1;
  *(_WORD *)(v5 + 48) = v3;
  *(_WORD *)(v5 + 50) = v2;
  return result;
}

void HTTPRequestHead.init(version:method:uri:headers:)()
{
  sub_10003C7F0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  int v9 = v8;
  type metadata accessor for HTTPRequestHead._Storage();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v3;
  *(void *)(v10 + 40) = v1;
  *(_DWORD *)(v10 + 48) = v9;
  sub_10003C780();
}

uint64_t HTTPRequestHead.init(version:method:uri:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for HTTPRequestHead._Storage();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = a3;
  *(void *)(result + 32) = a4;
  *(void *)(result + 40) = a5;
  *(_DWORD *)(result + 48) = a1;
  return result;
}

uint64_t static HTTPHeaders.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v132 = a3;
  uint64_t v147 = *(void *)(a1 + 16);
  if (v147 != *(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t v128 = a1;
  uint64_t v3 = sub_1001D967C(a1);
  uint64_t v4 = v3[2];
  if (v4)
  {
    sub_1001E1D08();
    uint64_t v5 = v149;
    uint64_t v6 = v3 + 5;
    do
    {
      uint64_t v7 = sub_10024E710();
      uint64_t v9 = v8;
      uint64_t v149 = v5;
      unint64_t v10 = v5[2];
      if (v10 >= v5[3] >> 1)
      {
        sub_1001E1C50();
        uint64_t v5 = v149;
      }
      v6 += 2;
      _OWORD v5[2] = v10 + 1;
      char v11 = &v5[2 * v10];
      v11[4] = v7;
      v11[5] = v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = sub_1001D4BB0((uint64_t)v5);
  uint64_t v13 = sub_1001D967C(v132);
  uint64_t v14 = v13[2];
  if (v14)
  {
    sub_1001E1D08();
    uint64_t v15 = v149;
    uint64_t v16 = v13 + 5;
    uint64_t v17 = v128;
    do
    {
      uint64_t v18 = sub_10024E710();
      uint64_t v20 = v19;
      uint64_t v149 = v15;
      unint64_t v21 = v15[2];
      if (v21 >= v15[3] >> 1)
      {
        sub_1001E1C50();
        uint64_t v15 = v149;
      }
      v16 += 2;
      _OWORD v15[2] = v21 + 1;
      unint64_t v22 = &v15[2 * v21];
      v22[4] = v18;
      void v22[5] = v20;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
    uint64_t v17 = v128;
  }
  uint64_t v23 = sub_1001D4BB0((uint64_t)v15);
  char v24 = sub_1001DA338(v12, v23);
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v25 = 0;
  uint64_t v124 = v12 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(v12 + 56);
  int64_t v125 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v143 = v132 + 32;
  uint64_t v144 = v17 + 32;
  uint64_t v136 = (char *)&v149 + 1;
  uint64_t v131 = v148;
  uint64_t v127 = v12;
  if (!v28) {
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v129 = (v28 - 1) & v28;
  uint64_t v130 = v25;
  for (unint64_t i = __clz(__rbit64(v28)) | (v25 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v31 << 6))
  {
    uint64_t v34 = (unint64_t *)(*(void *)(v12 + 48) + 16 * i);
    unint64_t v35 = v34[1];
    uint64_t v36 = HIBYTE(v35) & 0xF;
    uint64_t v145 = v36;
    unint64_t v146 = *v34;
    if (v147)
    {
      uint64_t v139 = (v35 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v141 = v35 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v137 = *v34 & 0xFFFFFFFFFFFFLL;
      HIDWORD(v135) = *v34;
      swift_bridgeObjectRetain_n();
      uint64_t v37 = swift_bridgeObjectRetain();
      unint64_t v45 = v146;
      uint64_t v46 = 0;
      uint64_t v133 = v36 - 1;
      uint64_t v47 = _swiftEmptyArrayStorage;
      int v48 = 223;
      while (1)
      {
        uint64_t v49 = (unint64_t *)(v144 + 32 * v46);
        unint64_t v51 = *v49;
        unint64_t v50 = v49[1];
        unint64_t v52 = v49[2];
        unint64_t v53 = v49[3];
        if ((v50 & 0x1000000000000000) != 0) {
          goto LABEL_87;
        }
        if ((v50 & 0x2000000000000000) == 0) {
          break;
        }
        uint64_t v149 = (void *)*v49;
        uint64_t v150 = v50 & 0xFFFFFFFFFFFFFFLL;
        if ((v35 & 0x1000000000000000) != 0) {
          goto LABEL_87;
        }
        uint64_t v59 = HIBYTE(v50) & 0xF;
        if ((v35 & 0x2000000000000000) == 0)
        {
          uint64_t v38 = v137;
          uint64_t v37 = v139;
          if ((v45 & 0x1000000000000000) == 0)
          {
            sub_1001E1ECC();
            sub_1001E1B10();
          }
          if (v59 != v38)
          {
LABEL_84:
            BOOL v61 = 0;
            goto LABEL_93;
          }
          if (v59)
          {
            sub_1001E1B00();
            if (!v63) {
              goto LABEL_84;
            }
            uint64_t v60 = v59 - 1;
            while (v60)
            {
              sub_1001E1BEC();
              if (v62) {
                goto LABEL_86;
              }
            }
          }
          goto LABEL_85;
        }
        sub_1001E1EE4(v37, v38, v39, v40, v41, v42, v43, v44, v124, v125, v126, v127, v128, v129, v130, (uint64_t)v131, v132, v133, v135,
          (uint64_t)v136,
          v137,
          v139,
          v141);
        if (v64) {
          BOOL v61 = 1;
        }
        else {
          BOOL v61 = 0;
        }
        if (v64) {
          BOOL v67 = v65 == 0;
        }
        else {
          BOOL v67 = 1;
        }
        if (!v67)
        {
          if (((v45 ^ v51) & v66) != 0) {
            goto LABEL_84;
          }
          uint64_t v68 = v133;
          while (v68)
          {
            sub_1001E1DC4();
            if (v69) {
              goto LABEL_84;
            }
          }
          goto LABEL_85;
        }
LABEL_86:
        if ((v61 & 2) != 0) {
          goto LABEL_87;
        }
LABEL_93:
        if (v61) {
          goto LABEL_94;
        }
LABEL_99:
        int v48 = 223;
        unint64_t v45 = v146;
LABEL_100:
        if (++v46 == v147)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v12 = v127;
          uint64_t v36 = HIBYTE(v35) & 0xF;
          goto LABEL_103;
        }
      }
      unint64_t v54 = v49[2];
      if ((v51 & 0x1000000000000000) != 0)
      {
        uint64_t v55 = (unsigned __int8 *)((v50 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v56 = v51 & 0xFFFFFFFFFFFFLL;
        if ((v35 & 0x1000000000000000) != 0) {
          goto LABEL_91;
        }
      }
      else
      {
        sub_10024F3E0();
        sub_1001E1B10();
        uint64_t v55 = (unsigned __int8 *)v37;
        uint64_t v56 = v38;
        if ((v35 & 0x1000000000000000) != 0)
        {
LABEL_91:
          unint64_t v52 = v54;
LABEL_87:
          uint64_t v37 = sub_1001D60B0(v45, v35, v51, v50);
          if (v37) {
            goto LABEL_94;
          }
          goto LABEL_99;
        }
      }
      if ((v35 & 0x2000000000000000) == 0)
      {
        uint64_t v38 = v137;
        uint64_t v37 = v139;
        if ((v45 & 0x1000000000000000) == 0)
        {
          sub_1001E1ECC();
          sub_1001E1B10();
        }
        if (v56 != v38) {
          goto LABEL_100;
        }
        if (v56 < 0) {
          goto LABEL_199;
        }
        if (v56)
        {
          sub_1001E1B00();
          if (!v63) {
            goto LABEL_100;
          }
          uint64_t v57 = v56 - 1;
          unint64_t v52 = v54;
          while (v57)
          {
            sub_1001E1DEC();
            if (v58) {
              goto LABEL_100;
            }
          }
        }
        else
        {
          unint64_t v52 = v54;
        }
LABEL_94:
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001E19C8();
          sub_100034BF0();
          uint64_t v47 = v75;
        }
        unint64_t v73 = v47[2];
        unint64_t v72 = v47[3];
        if (v73 >= v72 >> 1)
        {
          sub_1001E1A28(v72);
          sub_100034BF0();
          uint64_t v47 = v76;
        }
        v47[2] = v73 + 1;
        uint64_t v74 = &v47[2 * v73];
        v74[4] = v52;
        v74[5] = v53;
        swift_bridgeObjectRelease();
        uint64_t v37 = swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      uint64_t v149 = (void *)v45;
      uint64_t v150 = v141;
      BOOL v61 = v56 == v145;
      BOOL v63 = v56 != v145 || v145 == 0;
      if (v63) {
        goto LABEL_68;
      }
      if (((*v55 ^ HIDWORD(v135)) & v48) != 0)
      {
        BOOL v61 = 0;
LABEL_68:
        unint64_t v52 = v54;
        goto LABEL_93;
      }
      uint64_t v70 = v133;
      unint64_t v52 = v54;
      while (v70)
      {
        sub_1001E1E04();
        if (v71) {
          goto LABEL_84;
        }
      }
LABEL_85:
      BOOL v61 = 1;
      goto LABEL_86;
    }
    swift_bridgeObjectRetain();
    uint64_t v47 = _swiftEmptyArrayStorage;
LABEL_103:
    uint64_t v149 = v47;
    swift_bridgeObjectRetain();
    sub_1001DE6F0((uint64_t *)&v149);
    swift_bridgeObjectRelease();
    uint64_t v77 = v149;
    if (v147)
    {
      uint64_t v126 = (uint64_t)v149;
      uint64_t v140 = (v35 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v142 = v35 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v138 = v146 & 0xFFFFFFFFFFFFLL;
      HIDWORD(v135) = v146;
      uint64_t v78 = swift_bridgeObjectRetain_n();
      unint64_t v86 = v146;
      uint64_t v87 = 0;
      uint64_t v134 = v36 - 1;
      uint64_t v88 = _swiftEmptyArrayStorage;
      int v89 = 223;
      while (1)
      {
        char v90 = (unint64_t *)(v143 + 32 * v87);
        unint64_t v91 = *v90;
        unint64_t v92 = v90[1];
        unint64_t v93 = v90[2];
        unint64_t v94 = v90[3];
        if ((v92 & 0x1000000000000000) != 0)
        {
LABEL_156:
          uint64_t v78 = sub_1001D60B0(v86, v35, v91, v92);
          if (v78) {
            goto LABEL_162;
          }
          goto LABEL_167;
        }
        if ((v92 & 0x2000000000000000) == 0)
        {
          if ((v91 & 0x1000000000000000) != 0)
          {
            uint64_t v95 = (unsigned __int8 *)((v92 & 0xFFFFFFFFFFFFFFFLL) + 32);
            uint64_t v96 = v91 & 0xFFFFFFFFFFFFLL;
            if ((v35 & 0x1000000000000000) != 0) {
              goto LABEL_156;
            }
          }
          else
          {
            sub_10024F3E0();
            sub_1001E1B10();
            uint64_t v95 = (unsigned __int8 *)v78;
            uint64_t v96 = v79;
            if ((v35 & 0x1000000000000000) != 0) {
              goto LABEL_156;
            }
          }
          if ((v35 & 0x2000000000000000) == 0)
          {
            uint64_t v79 = v138;
            uint64_t v78 = v140;
            if ((v86 & 0x1000000000000000) == 0)
            {
              sub_1001E1ECC();
              sub_1001E1B10();
            }
            if (v96 != v79) {
              goto LABEL_168;
            }
            if (v96 < 0) {
              goto LABEL_200;
            }
            if (v96)
            {
              sub_1001E1B00();
              if (!v63) {
                goto LABEL_168;
              }
              uint64_t v97 = v96 - 1;
              while (v97)
              {
                sub_1001E1DEC();
                if (v98) {
                  goto LABEL_168;
                }
              }
            }
LABEL_162:
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1001E19C8();
              sub_100034BF0();
              uint64_t v88 = v115;
            }
            unint64_t v113 = v88[2];
            unint64_t v112 = v88[3];
            if (v113 >= v112 >> 1)
            {
              sub_1001E1A28(v112);
              sub_100034BF0();
              uint64_t v88 = v116;
            }
            v88[2] = v113 + 1;
            uint64_t v114 = &v88[2 * v113];
            v114[4] = v93;
            v114[5] = v94;
            swift_bridgeObjectRelease();
            uint64_t v78 = swift_bridgeObjectRelease();
            goto LABEL_167;
          }
          uint64_t v149 = (void *)v86;
          uint64_t v150 = v142;
          BOOL v101 = v96 == v145;
          if (v96 != v145 || v145 == 0) {
            goto LABEL_155;
          }
          if (((*v95 ^ HIDWORD(v135)) & v89) != 0) {
            goto LABEL_153;
          }
          uint64_t v104 = v134;
          while (v104)
          {
            sub_1001E1E04();
            if (v105) {
              goto LABEL_153;
            }
          }
          goto LABEL_154;
        }
        uint64_t v149 = (void *)*v90;
        uint64_t v150 = v92 & 0xFFFFFFFFFFFFFFLL;
        if ((v35 & 0x1000000000000000) != 0) {
          goto LABEL_156;
        }
        uint64_t v99 = HIBYTE(v92) & 0xF;
        if ((v35 & 0x2000000000000000) == 0) {
          break;
        }
        sub_1001E1EE4(v78, v79, v80, v81, v82, v83, v84, v85, v124, v125, v126, v127, v128, v129, v130, (uint64_t)v131, v132, v134, v135,
          (uint64_t)v136,
          v138,
          v140,
          v142);
        if (v106) {
          BOOL v101 = 1;
        }
        else {
          BOOL v101 = 0;
        }
        if (v106) {
          BOOL v109 = v107 == 0;
        }
        else {
          BOOL v109 = 1;
        }
        if (!v109)
        {
          if (((v86 ^ v91) & v108) != 0) {
            goto LABEL_153;
          }
          uint64_t v110 = v134;
          while (v110)
          {
            sub_1001E1DC4();
            if (v111) {
              goto LABEL_153;
            }
          }
LABEL_154:
          BOOL v101 = 1;
        }
LABEL_155:
        if ((v101 & 2) != 0) {
          goto LABEL_156;
        }
LABEL_161:
        if (v101) {
          goto LABEL_162;
        }
LABEL_167:
        int v89 = 223;
        unint64_t v86 = v146;
LABEL_168:
        if (++v87 == v147)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = v127;
          uint64_t v77 = (void *)v126;
          goto LABEL_171;
        }
      }
      uint64_t v79 = v138;
      uint64_t v78 = v140;
      if ((v86 & 0x1000000000000000) == 0)
      {
        sub_1001E1ECC();
        sub_1001E1B10();
      }
      if (v99 != v79)
      {
LABEL_153:
        BOOL v101 = 0;
        goto LABEL_161;
      }
      if (v99)
      {
        sub_1001E1B00();
        if (!v63) {
          goto LABEL_153;
        }
        uint64_t v100 = v99 - 1;
        while (v100)
        {
          sub_1001E1BEC();
          if (v102) {
            goto LABEL_155;
          }
        }
      }
      goto LABEL_154;
    }
    uint64_t v88 = _swiftEmptyArrayStorage;
LABEL_171:
    swift_bridgeObjectRelease();
    uint64_t v149 = v88;
    swift_bridgeObjectRetain();
    sub_1001DE6F0((uint64_t *)&v149);
    swift_bridgeObjectRelease();
    uint64_t v117 = v149;
    unint64_t v118 = v77[2];
    if (v118 != v149[2])
    {
LABEL_195:
      swift_release();
      swift_release();
      swift_release();
      return 0;
    }
    if (v118 && v77 != v149)
    {
      BOOL v119 = v77[4] == v149[4] && v77[5] == v149[5];
      if (!v119 && (sub_10024FA60() & 1) == 0) {
        goto LABEL_195;
      }
      if (v118 != 1) {
        break;
      }
    }
LABEL_188:
    swift_release();
    swift_release();
    unint64_t v28 = v129;
    uint64_t v25 = v130;
    if (v129) {
      goto LABEL_20;
    }
LABEL_21:
    BOOL v30 = __OFADD__(v25, 1);
    int64_t v31 = v25 + 1;
    if (v30) {
      goto LABEL_201;
    }
    if (v31 >= v125)
    {
LABEL_197:
      swift_release();
      return 1;
    }
    unint64_t v32 = *(void *)(v124 + 8 * v31);
    if (!v32)
    {
      int64_t v33 = v31 + 1;
      if (v31 + 1 >= v125) {
        goto LABEL_197;
      }
      unint64_t v32 = *(void *)(v124 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = v31 + 2;
        if (v31 + 2 >= v125) {
          goto LABEL_197;
        }
        unint64_t v32 = *(void *)(v124 + 8 * v33);
        if (!v32)
        {
          int64_t v33 = v31 + 3;
          if (v31 + 3 >= v125) {
            goto LABEL_197;
          }
          unint64_t v32 = *(void *)(v124 + 8 * v33);
          if (!v32)
          {
            while (1)
            {
              int64_t v31 = v33 + 1;
              if (__OFADD__(v33, 1)) {
                goto LABEL_202;
              }
              if (v31 >= v125) {
                goto LABEL_197;
              }
              unint64_t v32 = *(void *)(v124 + 8 * v31);
              ++v33;
              if (v32) {
                goto LABEL_31;
              }
            }
          }
        }
      }
      int64_t v31 = v33;
    }
LABEL_31:
    uint64_t v129 = (v32 - 1) & v32;
    uint64_t v130 = v31;
  }
  uint64_t v120 = 0;
  unint64_t v121 = 1;
  while (v121 < v118)
  {
    BOOL v122 = v77[v120 + 6] == v117[v120 + 6] && v77[v120 + 7] == v117[v120 + 7];
    if (!v122 && (sub_10024FA60() & 1) == 0) {
      goto LABEL_195;
    }
    ++v121;
    v120 += 2;
    if (v118 == v121) {
      goto LABEL_188;
    }
  }
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1001D8E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001D9614(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))static HTTPRequestHead.== infix(_:_:));
}

void static HTTPPart.__derived_enum_equals(_:_:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v58 = v2;
  uint64_t v59 = v3;
  sub_10002F9C8();
  uint64_t v53 = v4;
  __chkstk_darwin(v5, v6);
  sub_1000589AC();
  uint64_t v50 = v7;
  sub_10002F9C8();
  uint64_t v55 = v8;
  __chkstk_darwin(v9, v10);
  sub_1000589AC();
  uint64_t v54 = v11;
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  uint64_t v51 = v14;
  uint64_t v52 = v13;
  v49[1] = v15;
  uint64_t v62 = v15;
  uint64_t v63 = v14;
  type metadata accessor for HTTPPart();
  sub_10002F9C8();
  uint64_t v17 = v16;
  __chkstk_darwin(v18, v19);
  unint64_t v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)v49 - v24;
  __chkstk_darwin(v26, v27);
  unint64_t v29 = (char *)v49 - v28;
  swift_getTupleTypeMetadata2();
  sub_10002F9C8();
  uint64_t v57 = v30;
  __chkstk_darwin(v31, v32);
  unint64_t v35 = (void *)((char *)v49 + *(int *)(v34 + 48) - v33);
  uint64_t v56 = v17;
  uint64_t v36 = *(void (**)(void))(v17 + 16);
  sub_1001E19E8();
  v36();
  sub_1001E19E8();
  v36();
  sub_10008436C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_1001E19E8();
      v36();
      uint64_t v42 = *(void *)v21;
      uint64_t v43 = v21[8];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v44 = *v35;
        if (v42)
        {
          if (v44)
          {
            swift_bridgeObjectRetain();
            uint64_t v45 = swift_bridgeObjectRetain();
            static HTTPHeaders.== infix(_:_:)(v45, v43, v44);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_16;
          }
        }
        else if (!v44)
        {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1001E19E8();
    v36();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = v53;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v53 + 32))(v50, v35, v52);
      sub_10024E680();
      uint64_t v39 = *(void (**)(void))(v38 + 8);
      sub_1001E1E30();
      v39();
      sub_1001E1E30();
      v39();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v52);
    }
  }
  else
  {
    uint64_t v40 = v54;
    uint64_t v41 = v55;
    sub_1001E19E8();
    v36();
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v1);
    }
    else
    {
      uint64_t v46 = v1;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v41 + 32))(v40, v35, v1);
      sub_10024E680();
      uint64_t v47 = *(void (**)(void))(v41 + 8);
      sub_1001E1E30();
      v47();
      ((void (*)(char *, uint64_t))v47)(v29, v46);
    }
  }
LABEL_16:
  sub_10008436C();
  sub_1001E1E30();
  v48();
  sub_10003C8C8();
}

void sub_1001D92B8()
{
}

uint64_t sub_1001D92C8()
{
  sub_100186FF0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
  return _swift_deallocClassInstance(v0, 44, 7);
}

uint64_t HTTPResponseHead.status.setter()
{
  sub_10003C984();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v7 = *(void *)(*(void *)v0 + 16);
    uint64_t v8 = *(void *)(*(void *)v0 + 24);
    unint64_t v9 = *(void *)(*(void *)v0 + 32);
    int v10 = *(_DWORD *)(*(void *)v0 + 40);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v11 = sub_100022D50();
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v9;
    *(_DWORD *)(v11 + 40) = v10;
    *(void *)uint64_t v0 = v11;
    sub_1001DF060(v7, v8, v9);
    swift_release();
  }
  uint64_t v12 = *(void **)v0;
  void v12[2] = v6;
  v12[3] = v4;
  v12[4] = v2;
  sub_10003C8C8();
  return sub_100186FF0(v13, v14, v15);
}

uint64_t (*HTTPResponseHead.status.modify(uint64_t *a1))()
{
  a1[3] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  unint64_t v5 = *(void *)(*(void *)v1 + 32);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1001DF060(v3, v4, v5);
  return sub_1001D9408;
}

uint64_t sub_1001D9408()
{
  sub_10003C984();
  if (v1)
  {
    sub_1001DF060(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001E1CB0();
      uint64_t v2 = sub_100022D50();
      sub_1001E1A3C(v2);
    }
    uint64_t v3 = sub_1001E1C80();
    sub_100186FF0(v3, v4, v5);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001E1CB0();
      uint64_t v6 = sub_100022D50();
      sub_1001E1A3C(v6);
    }
    sub_1001E1C80();
  }
  sub_10003C8C8();
  return sub_100186FF0(v7, v8, v9);
}

void HTTPResponseHead.version.setter()
{
  sub_10003C7F0();
  int v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(*(void *)v0 + 16);
    uint64_t v4 = *(void *)(*(void *)v0 + 24);
    unint64_t v5 = *(void *)(*(void *)v0 + 32);
    int v6 = *(_DWORD *)(*(void *)v0 + 40);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v7 = sub_100022D50();
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v4;
    *(void *)(v7 + 32) = v5;
    *(_DWORD *)(v7 + 40) = v6;
    *(void *)uint64_t v0 = v7;
    sub_1001DF060(v3, v4, v5);
    swift_release();
  }
  *(_DWORD *)(*(void *)v0 + 40) = v2;
  sub_10003C780();
}

void (*HTTPResponseHead.version.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)v1 + 40);
  return sub_1001D9564;
}

void sub_1001D9564()
{
  sub_10003C7F0();
  uint64_t v1 = *v0;
  __int16 v2 = *((_WORD *)v0 + 5);
  __int16 v3 = *((_WORD *)v0 + 4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v4 = *(void *)(*v1 + 16);
    uint64_t v5 = *(void *)(*v1 + 24);
    unint64_t v6 = *(void *)(*v1 + 32);
    int v7 = *(_DWORD *)(*v1 + 40);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v8 = sub_100022D50();
    *(void *)(v8 + 16) = v4;
    *(void *)(v8 + 24) = v5;
    *(void *)(v8 + 32) = v6;
    *(_DWORD *)(v8 + 40) = v7;
    *uint64_t v1 = v8;
    sub_1001DF060(v4, v5, v6);
    swift_release();
  }
  uint64_t v9 = *v1;
  *(_WORD *)(v9 + 40) = v3;
  *(_WORD *)(v9 + 42) = v2;
  sub_10003C780();
}

uint64_t sub_1001D95FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001D9614(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))static HTTPResponseHead.== infix(_:_:));
}

uint64_t sub_1001D9614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t HTTPHeaders.description.getter()
{
  sub_100019524(&qword_10030A578);
  return sub_10024EAB0();
}

void *sub_1001D967C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1000389BC();
    __int16 v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v6 >= v7 >> 1) {
        sub_1000389BC();
      }
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v6 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v6];
      v8[4] = v5;
      v8[5] = v4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void HTTPHeaders.add<A>(contentsOf:)()
{
  sub_10003C984();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_10002F9C8();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  uint64_t v32 = v13;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = *(void *)(*(void *)v0 + 16);
  uint64_t v19 = sub_10024E940();
  BOOL v20 = __OFADD__(v18, v19);
  uint64_t v21 = v18 + v19;
  if (!v20)
  {
    sub_1001D58D8(v21, (uint64_t (*)(void))sub_1000351A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, v5, v3);
    sub_10024E930();
    swift_getAssociatedConformanceWitness();
    uint64_t v33 = v17;
    sub_10024F0E0();
    unint64_t v22 = v35;
    if (!v35)
    {
LABEL_8:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, AssociatedTypeWitness);
      sub_10003C8C8();
      return;
    }
    unint64_t v23 = v34;
    uint64_t v24 = v36;
    uint64_t v25 = v37;
    while ((sub_1000304DC(v23, v22) & 1) == 0)
    {
      uint64_t v26 = AssociatedTypeWitness;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003461C();
      uint64_t v27 = *(void *)(*(void *)v1 + 16);
      sub_100034934();
      uint64_t v28 = *(void *)v1;
      *(void *)(v28 + 16) = v27 + 1;
      unint64_t v29 = (void *)(v28 + 32 * v27);
      v29[4] = v23;
      v29[5] = v22;
      v29[6] = v24;
      v29[7] = v25;
      *(void *)uint64_t v1 = v28;
      swift_bridgeObjectRetain();
      sub_1001E1BD0();
      char v30 = sub_100032B9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v30) {
        v1[8] = 2;
      }
      uint64_t AssociatedTypeWitness = v26;
      sub_10024F0E0();
      unint64_t v23 = v34;
      unint64_t v22 = v35;
      uint64_t v24 = v36;
      uint64_t v25 = v37;
      if (!v35) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001D99E8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x1000000000000000) != 0)
  {
    Swift::Int v8 = sub_10024E850();
    if ((a2 & 0x1000000000000000) == 0)
    {
LABEL_6:
      if ((a2 & 0x2000000000000000) != 0) {
        uint64_t v9 = HIBYTE(a2) & 0xF;
      }
      else {
        uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
      }
      goto LABEL_9;
    }
  }
  else
  {
    if ((a6 & 0x2000000000000000) != 0) {
      Swift::Int v8 = HIBYTE(a6) & 0xF;
    }
    else {
      Swift::Int v8 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t v9 = sub_10024E850();
LABEL_9:
  if (v8 != v9) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_100032B9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

unint64_t sub_1001D9ABC(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  unint64_t v3 = a1;
  unint64_t v4 = a1 >> 14;
  unint64_t v5 = a2 >> 14;
  swift_bridgeObjectRetain();
  if (v4 != v2 >> 14)
  {
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_10024F0C0();
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      BOOL v10 = v7 == 32 && v9 == 0xE100000000000000;
      if (v10
        || (sub_10024FA60() & 1) != 0
        || (v7 == 9 ? (BOOL v11 = v9 == 0xE100000000000000) : (BOOL v11 = 0),
            v11
         || (sub_10024FA60() & 1) != 0
         || (v7 == 13 ? (BOOL v12 = v9 == 0xE100000000000000) : (BOOL v12 = 0),
             v12
          || (sub_10024FA60() & 1) != 0
          || (v7 == 10 ? (BOOL v13 = v9 == 0xE100000000000000) : (BOOL v13 = 0),
              v13 || (sub_10024FA60() & 1) != 0 || (v7 == 2573 ? (BOOL v14 = v9 == 0xE200000000000000) : (BOOL v14 = 0), v14)))))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v15 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          goto LABEL_77;
        }
      }
      unint64_t v16 = sub_10024F090();
      if (v17) {
        unint64_t v16 = v2;
      }
      if (v5 < v16 >> 14)
      {
        __break(1u);
        goto LABEL_75;
      }
      unint64_t v3 = sub_10024F0D0();
      unint64_t v2 = v18;
      swift_bridgeObjectRelease();
      unint64_t v4 = v3 >> 14;
      unint64_t v5 = v2 >> 14;
    }
    while (v3 >> 14 != v2 >> 14);
  }
  while (v4 != v5)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_10024F080();
      uint64_t v19 = sub_10024F0C0();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      BOOL v22 = v19 == 32 && v21 == 0xE100000000000000;
      if (v22
        || (sub_10024FA60() & 1) != 0
        || (v19 == 9 ? (BOOL v23 = v21 == 0xE100000000000000) : (BOOL v23 = 0),
            v23
         || (sub_10024FA60() & 1) != 0
         || (v19 == 13 ? (BOOL v24 = v21 == 0xE100000000000000) : (BOOL v24 = 0),
             v24
          || (sub_10024FA60() & 1) != 0
          || (v19 == 10 ? (BOOL v25 = v21 == 0xE100000000000000) : (BOOL v25 = 0),
              v25 || (sub_10024FA60() & 1) != 0 || (v19 == 2573 ? (BOOL v26 = v21 == 0xE200000000000000) : (BOOL v26 = 0), v26)))))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v27 = sub_10024FA60();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          return v3;
        }
      }
      if (__OFSUB__(sub_10024F0B0(), 1)) {
        break;
      }
      uint64_t v28 = sub_10024F090();
      if (v29) {
        unint64_t v30 = v2;
      }
      else {
        unint64_t v30 = v28;
      }
      if (v4 > v30 >> 14) {
        goto LABEL_76;
      }
      unint64_t v3 = sub_10024F0D0();
      unint64_t v2 = v31;
      swift_bridgeObjectRelease();
      unint64_t v4 = v3 >> 14;
      if (v3 >> 14 == v2 >> 14) {
        return v3;
      }
    }
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    unint64_t v4 = v3 >> 14;
    unint64_t v5 = v2 >> 14;
  }
  return v3;
}

uint64_t sub_1001D9EC8()
{
  return HTTPHeaders.description.getter();
}

void sub_1001D9ED0(uint64_t a1@<X8>)
{
  HTTPHeaders.init(dictionaryLiteral:)();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = 2;
}

uint64_t HTTPHeaders.capacity.getter(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 1;
}

Swift::Void __swiftcall HTTPHeaders.reserveCapacity(_:)(Swift::Int a1)
{
  uint64_t v3 = *v1;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      Swift::Int v5 = a1;
    }
    else {
      Swift::Int v5 = *(void *)(v3 + 16);
    }
    uint64_t v3 = sub_1000351A8(isUniquelyReferenced_nonNull_native, v5, 0, v3);
  }
  *uint64_t v1 = v3;
}

uint64_t sub_1001D9F70(void *a1, void *a2)
{
  return sub_1002017A8(*a1, *a2);
}

BOOL sub_1001D9F7C(uint64_t *a1, uint64_t *a2)
{
  return sub_1000805BC(*a1, *a2);
}

BOOL sub_1001D9F88(uint64_t *a1, uint64_t *a2)
{
  return sub_10007C5B8(*a1, *a2);
}

ASOctaneSupportXPCService::HTTPHeaders::Index __swiftcall HTTPHeaders.index(before:)(ASOctaneSupportXPCService::HTTPHeaders::Index before)
{
  BOOL v1 = __OFSUB__(before.base, 1);
  result.base = before.base - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

unint64_t HTTPHeaders.subscript.getter(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1001E1DDC();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DA004(uint64_t result, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t v4 = 0;
    while ((result ^ 0x8000000000000000) > ~a2)
    {
      if (--v4 <= a2)
      {
        result += v4;
        return result;
      }
    }
    goto LABEL_12;
  }
  if (a2)
  {
    unint64_t v2 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v3 = a2 - 1;
    while (v2 > v3)
    {
      ++result;
      if (!--a2) {
        return result;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

ASOctaneSupportXPCService::HTTPHeaders::Index sub_1001DA060@<X0>(ASOctaneSupportXPCService::HTTPHeaders::Index *a1@<X0>, ASOctaneSupportXPCService::HTTPHeaders::Index *a2@<X8>)
{
  result.base = HTTPHeaders.index(before:)((ASOctaneSupportXPCService::HTTPHeaders::Index)a1->base).base;
  a2->base = result.base;
  return result;
}

void *sub_1001DA08C(void *result)
{
  if (!__OFSUB__(*result, 1)) {
    return sub_1001E1E3C(result, *result - 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DA0A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1001DA004(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001DA0D4(uint64_t *a1, uint64_t *a2)
{
  return sub_100018A24(*a1, *a2);
}

uint64_t sub_1001DA0E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Heap.endIndex.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1001DA114(uint64_t result, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)v2 + 16))
  {
    uint64_t v4 = (void *)result;
    Swift::Int v5 = (void *)(*(void *)v2 + 32 * v3);
    uint64_t v6 = v5[5];
    uint64_t v7 = v5[6];
    uint64_t v8 = v5[7];
    *uint64_t v4 = v5[4];
    v4[1] = v6;
    v4[2] = v7;
    v4[3] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_10008436C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DA198()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001DA1D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10007B00C(*a1, a1[1], *v2);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_1001DA218@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10007B174();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

BOOL sub_1001DA250()
{
  return sub_10007AA7C(*v0);
}

uint64_t sub_1001DA25C()
{
  return Heap.endIndex.getter(*v0);
}

uint64_t sub_1001DA268@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1001D578C(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1001DA2A8(uint64_t *a1, uint64_t *a2)
{
  return sub_10007AB18(*a1, *a2, a2[1]);
}

uint64_t sub_1001DA2C0(uint64_t *a1, uint64_t *a2)
{
  return sub_1000738C8(*a1, *a2, a2[1]);
}

uint64_t sub_1001DA2D8(uint64_t *a1, uint64_t *a2)
{
  return sub_10007AB90(*a1, a1[1], *a2, a2[1]);
}

void *sub_1001DA2F4(void *result)
{
  if (!__OFADD__(*result, 1)) {
    return sub_1001E1E3C(result, *result + 1);
  }
  __break(1u);
  return result;
}

void sub_1001DA308(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = 0;
}

void *sub_1001DA320()
{
  return sub_10007AC9C(*v0);
}

uint64_t sub_1001DA32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007AA98(a1, a2, a3, *(void *)v3, *(unsigned __int8 *)(v3 + 8));
}

uint64_t sub_1001DA338(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v30 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v32 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = result;
    unint64_t v16 = (uint64_t *)(*(void *)(result + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_10024FC00();
    swift_bridgeObjectRetain();
    sub_10024E780();
    Swift::Int v19 = sub_10024FC70();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v22 = *(void *)(a2 + 48);
    BOOL v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (sub_10024FA60() & 1) == 0)
    {
      uint64_t v25 = ~v20;
      for (unint64_t j = v21 + 1; ; unint64_t j = v27 + 1)
      {
        uint64_t v27 = j & v25;
        if (((*(void *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v22 + 16 * v27);
        BOOL v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (sub_10024FA60() & 1) != 0) {
          goto LABEL_30;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t result = v15;
    int64_t v3 = v32;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v31) {
        return 1;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v3 + 3;
        if (v3 + 3 >= v31) {
          return 1;
        }
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v3 + 4;
          if (v3 + 4 >= v31) {
            return 1;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v32 = v13;
  }
  uint64_t v14 = v3 + 5;
  if (v3 + 5 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1001DA5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 40;
    uint64_t v4 = (unsigned char *)(a2 + 72);
    do
    {
      unint64_t v5 = *(void *)(v3 - 8);
      unint64_t v6 = *(void *)v3;
      uint64_t v7 = *(void *)(v3 + 8);
      uint64_t v8 = *(void *)(v3 + 16);
      uint64_t v9 = *(void *)(v3 + 24);
      unint64_t v10 = *((void *)v4 - 5);
      uint64_t v11 = *((void *)v4 - 3);
      uint64_t v12 = *((void *)v4 - 2);
      uint64_t v41 = v7;
      uint64_t v42 = *(void *)v3;
      if (*(unsigned char *)(v3 + 32))
      {
        if ((*v4 & 1) == 0) {
          return 0;
        }
        uint64_t v39 = *(void *)(v3 + 24);
        sub_1000C430C(v5, v6, v7, v8, v9, 1);
        sub_1001E1C98();
        sub_1000C430C(v13, v14, v15, v16, v17, v18);
        char v37 = sub_1001DA810(v5, v10);
        sub_1001E1C98();
        sub_1000C42CC(v19, v20, v21, v22, v23, v24);
        sub_1000C42CC(v5, v42, v41, v8, v39, 1);
        if ((v37 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*v4) {
          return 0;
        }
        uint64_t v38 = *((void *)v4 - 1);
        uint64_t v25 = *((void *)v4 - 4);
        BOOL v26 = v7 == v11 && v8 == v12;
        BOOL v27 = v26 && v5 >> 16 == v10 >> 16;
        if (!v27 || v6 >> 16 != *((void *)v4 - 4) >> 16)
        {
          uint64_t v40 = *(void *)(v3 + 24);
          uint64_t v29 = *(void *)(v3 + 16);
          unint64_t v30 = *(void *)(v3 - 8);
          uint64_t v31 = *(void *)(v3 + 8);
          char v32 = sub_10024F9D0();
          uint64_t v9 = v40;
          uint64_t v7 = v31;
          unint64_t v5 = v30;
          uint64_t v8 = v29;
          unint64_t v6 = v42;
          if ((v32 & 1) == 0) {
            return 0;
          }
        }
        uint64_t v33 = v6;
        uint64_t v34 = v9;
        sub_1000C430C(v5, v33, v7, v8, v9, 0);
        sub_1000C430C(v10, v25, v11, v12, v38, 0);
        char v36 = sub_1001DA810(v34, v38);
        sub_1000C42CC(v10, v25, v11, v12, v38, 0);
        sub_1000C42CC(v5, v42, v41, v8, v34, 0);
        if ((v36 & 1) == 0) {
          return 0;
        }
      }
      v3 += 48;
      v4 += 48;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1001DA810(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 40;
    uint64_t v4 = (unsigned __int8 *)(a2 + 72);
    while (2)
    {
      unint64_t v5 = *(void *)(v3 - 8);
      unint64_t v6 = *(void *)v3;
      uint64_t v8 = *(void *)(v3 + 8);
      uint64_t v7 = *(void *)(v3 + 16);
      uint64_t v9 = *(unsigned __int8 *)(v3 + 32);
      unint64_t v10 = *((void *)v4 - 5);
      unint64_t v11 = *((void *)v4 - 4);
      uint64_t v13 = *((void *)v4 - 3);
      uint64_t v12 = *((void *)v4 - 2);
      uint64_t v14 = *((void *)v4 - 1);
      v3 += 48;
      int v16 = *v4;
      v4 += 48;
      int v15 = v16;
      unint64_t v17 = v5 >> 16;
      unint64_t v18 = v6 >> 16;
      unint64_t v19 = v10 >> 16;
      unint64_t v20 = v11 >> 16;
      switch(v9)
      {
        case 1:
          if (v15 != 1) {
            return 0;
          }
          goto LABEL_9;
        case 2:
          if (v15 != 2) {
            return 0;
          }
          uint64_t v24 = sub_1001E1DAC();
          uint64_t v70 = v26;
          uint64_t v71 = v25;
          uint64_t v73 = v27;
          sub_1000C424C(v24, v28, v29, v30, v31, 2u);
          uint64_t v32 = sub_1001E1C08();
          sub_1000C424C(v32, v33, v34, v35, v36, v37);
          char v68 = sub_1001DA5E0(v5, v10);
          uint64_t v38 = sub_1001E1C08();
          sub_1000C3DB4(v38, v39, v40, v41, v42, v43);
          sub_1000C3DB4(v5, v6, v71, v73, v70, 2u);
          if ((v68 & 1) == 0) {
            return 0;
          }
          goto LABEL_37;
        case 3:
          uint64_t v72 = v8;
          uint64_t v74 = v7;
          if (v15 != 3) {
            return 0;
          }
          BOOL v44 = v8 == v13 && v7 == v12;
          BOOL v45 = v44 && v17 == v19;
          BOOL v46 = v45 && v18 == v20;
          if (!v46 && (sub_10024F9D0() & 1) == 0) {
            return 0;
          }
          uint64_t v47 = sub_1001E1DAC();
          uint64_t v69 = v6;
          uint64_t v49 = v48;
          sub_1000C424C(v47, v50, v51, v52, v53, 3u);
          uint64_t v54 = sub_1001E1C24();
          sub_1000C424C(v54, v55, v56, v57, v58, v59);
          char v67 = sub_1001DA810(v49, v14);
          uint64_t v60 = sub_1001E1C24();
          sub_1000C3DB4(v60, v61, v62, v63, v64, v65);
          sub_1000C3DB4(v5, v69, v72, v74, v49, 3u);
          if ((v67 & 1) == 0) {
            return 0;
          }
          goto LABEL_37;
        default:
          if (v15) {
            return 0;
          }
LABEL_9:
          BOOL v23 = v8 == v13 && v7 == v12 && v17 == v19 && v18 == v20;
          if (!v23 && (sub_10024F9D0() & 1) == 0) {
            return 0;
          }
LABEL_37:
          if (!--v2) {
            return 1;
          }
          continue;
      }
    }
  }
  return 1;
}

uint64_t sub_1001DAA30(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v4) {
    return 1;
  }
  sub_1001E1EF8();
  if (v5 == v6) {
    return 1;
  }
  uint64_t result = v3[4];
  if (result != v2[4] || v3[5] != v2[5])
  {
    char v9 = sub_10024FA60();
    uint64_t result = 0;
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  if (v4 == 1) {
    return 1;
  }
  unint64_t v10 = v3 + 7;
  unint64_t v11 = v2 + 7;
  unint64_t v12 = 1;
  while (v12 < v4)
  {
    uint64_t result = *(v10 - 1);
    if (result != *(v11 - 1) || *v10 != *v11)
    {
      uint64_t result = sub_10024FA60();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v12;
    v10 += 2;
    v11 += 2;
    if (v4 == v12) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DAAFC(uint64_t a1, uint64_t *a2)
{
  return static HTTPHeaders.== infix(_:_:)(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

unint64_t sub_1001DAB14(uint64_t a1, uint64_t a2)
{
  return sub_1000FBEE8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

unint64_t HTTPVersion.major.setter(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    sub_10003C6E8();
  }
  else
  {
    if (result < 0x10000)
    {
      *(_WORD *)(v1 + 2) = result;
      return result;
    }
    sub_10003C4F8();
    sub_10003C6D8();
  }
  uint64_t result = sub_10003C850();
  __break(1u);
  return result;
}

unint64_t (*HTTPVersion.major.modify(void *a1))(unint64_t *a1, char a2)
{
  *a1 = *(unsigned __int16 *)(v1 + 2);
  a1[1] = v1;
  return sub_1001DABD0;
}

unint64_t sub_1001DABD0(unint64_t *a1, char a2)
{
  unint64_t result = *a1;
  if (a2) {
    return HTTPVersion.major.setter(result);
  }
  if ((result & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    sub_10003C6E8();
  }
  else
  {
    if (result < 0x10000)
    {
      *(_WORD *)(a1[1] + 2) = result;
      return result;
    }
    sub_10003C4F8();
    sub_10003C6D8();
  }
  unint64_t result = sub_10003C850();
  __break(1u);
  return result;
}

unint64_t HTTPVersion.minor.setter(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    sub_10003C6E8();
  }
  else
  {
    if (result < 0x10000)
    {
      *uint64_t v1 = result;
      return result;
    }
    sub_10003C4F8();
    sub_10003C6D8();
  }
  unint64_t result = sub_10003C850();
  __break(1u);
  return result;
}

unint64_t (*HTTPVersion.minor.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = *v1;
  a1[1] = v1;
  return sub_1001DAD1C;
}

unint64_t sub_1001DAD1C(uint64_t a1, char a2)
{
  unint64_t result = *(void *)a1;
  if (a2) {
    return HTTPVersion.minor.setter(result);
  }
  if ((result & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    sub_10003C6E8();
  }
  else
  {
    if (result < 0x10000)
    {
      **(_WORD **)(a1 + 8) = result;
      return result;
    }
    sub_10003C4F8();
    sub_10003C6D8();
  }
  unint64_t result = sub_10003C850();
  __break(1u);
  return result;
}

void *HTTPVersion.http3.unsafeMutableAddressor()
{
  return &static HTTPVersion.http3;
}

uint64_t static HTTPVersion.http3.getter()
{
  return 196608;
}

void *HTTPVersion.http2.unsafeMutableAddressor()
{
  return &static HTTPVersion.http2;
}

uint64_t static HTTPVersion.http1_1.getter()
{
  return 65537;
}

void *HTTPVersion.http1_0.unsafeMutableAddressor()
{
  return &static HTTPVersion.http1_0;
}

uint64_t static HTTPVersion.http1_0.getter()
{
  return 0x10000;
}

void *HTTPVersion.http0_9.unsafeMutableAddressor()
{
  return &static HTTPVersion.http0_9;
}

unint64_t HTTPParserError.debugDescription.getter(char a1)
{
  unint64_t result = 0xD000000000000026;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000037;
      break;
    case 5:
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
    case 9:
    case 10:
    case 11:
      unint64_t result = 0x2064696C61766E69;
      break;
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0xD000000000000015;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 16:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 17:
      unint64_t result = 0xD000000000000020;
      break;
    case 18:
      unint64_t result = 0xD000000000000026;
      break;
    case 19:
      unint64_t result = 0xD000000000000017;
      break;
    case 20:
      unint64_t result = 0xD000000000000030;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD000000000000020;
      break;
    case 23:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001DB034()
{
  return HTTPParserError.debugDescription.getter(*v0);
}

uint64_t sub_1001DB03C()
{
  return RemoveAfterUpgradeStrategy.hashValue.getter(*v0);
}

uint64_t HTTPResponseStatus.init(statusCode:reasonPhrase:)(uint64_t result)
{
  if (!(!v2 & v1))
  {
    switch(result)
    {
      case 400:
      case 401:
      case 402:
      case 403:
      case 404:
      case 405:
      case 406:
      case 407:
      case 408:
      case 409:
      case 410:
      case 411:
      case 412:
      case 413:
      case 414:
      case 415:
      case 416:
      case 417:
      case 418:
      case 421:
      case 422:
      case 423:
      case 424:
      case 426:
      case 428:
      case 429:
      case 431:
      case 451:
        goto LABEL_6;
      case 419:
      case 420:
      case 425:
      case 427:
      case 430:
      case 432:
      case 433:
      case 434:
      case 435:
      case 436:
      case 437:
      case 438:
      case 439:
      case 440:
      case 441:
      case 442:
      case 443:
      case 444:
      case 445:
      case 446:
      case 447:
      case 448:
      case 449:
      case 450:
        goto LABEL_11;
      default:
        JUMPOUT(0);
    }
  }
  switch(result)
  {
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 307:
    case 308:
      goto LABEL_6;
    case 306:
      goto LABEL_11;
    default:
      if (result == 226)
      {
        swift_bridgeObjectRelease();
        return variable initialization expression of ClientOverride.requestBundleVersion();
      }
      else if (result == 101 || result == 102 || result == 100)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return variable initialization expression of ClientOverride.requestBundleVersion();
      }
      else
      {
LABEL_11:
        if (result < 0)
        {
          sub_10003C4F8();
          sub_10003C6E8();
          sub_10003C850();
          __break(1u);
          swift_bridgeObjectRelease();
          return variable initialization expression of ClientOverride.requestBundleVersion();
        }
      }
      return result;
  }
}

uint64_t sub_1001DB754(uint64_t a1, uint64_t a2)
{
  return static HTTPResponseStatus.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t HTTPRequestHead.description.getter(uint64_t a1)
{
  sub_10024F330(67);
  v5._object = (void *)0x8000000100283FF0;
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  sub_10024E800(v5);
  sub_10024F5C0();
  v6._countAndFlagsBits = 0x22203A697275202CLL;
  v6._object = (void *)0xE800000000000000;
  sub_10024E800(v6);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v2;
  v7._object = v3;
  sub_10024E800(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x6973726576202C22;
  v8._object = (void *)0xEC000000203A6E6FLL;
  sub_10024E800(v8);
  v9._countAndFlagsBits = HTTPVersion.description.getter();
  sub_10024E800(v9);
  swift_bridgeObjectRelease();
  sub_1001E1A80();
  swift_bridgeObjectRetain();
  sub_100019524(&qword_10030A578);
  v10._countAndFlagsBits = sub_10024EAB0();
  sub_10024E800(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 32032;
  v11._object = (void *)0xE200000000000000;
  sub_10024E800(v11);
  return 0;
}

uint64_t sub_1001DB8EC()
{
  return HTTPRequestHead.description.getter(*v0);
}

uint64_t HTTPResponseHead.description.getter()
{
  sub_10024F330(57);
  v1._object = (void *)0x8000000100284010;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  sub_10024E800(v1);
  v2._countAndFlagsBits = HTTPVersion.description.getter();
  sub_10024E800(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x737574617473202CLL;
  v3._object = (void *)0xEA0000000000203ALL;
  sub_10024E800(v3);
  sub_10024F5C0();
  sub_1001E1A80();
  swift_bridgeObjectRetain();
  sub_100019524(&qword_10030A578);
  v4._countAndFlagsBits = sub_10024EAB0();
  sub_10024E800(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 32032;
  v5._object = (void *)0xE200000000000000;
  sub_10024E800(v5);
  return 0;
}

uint64_t sub_1001DBA2C()
{
  return HTTPResponseHead.description.getter();
}

uint64_t HTTPVersion.description.getter()
{
  v1._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 46;
  v2._object = (void *)0xE100000000000000;
  sub_10024E800(v2);
  v3._countAndFlagsBits = sub_10024F9E0();
  sub_10024E800(v3);
  swift_bridgeObjectRelease();
  return 0x2F50545448;
}

uint64_t sub_1001DBAFC()
{
  return HTTPVersion.description.getter();
}

uint64_t HTTPMethod.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 5522759 && a2 == 0xE300000000000000;
  if (v2 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v6 = a1 == 5526864 && a2 == 0xE300000000000000;
  if (v6 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v7 = a1 == 4997953 && a2 == 0xE300000000000000;
  if (v7 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v8 = a1 == 1145128264 && a2 == 0xE400000000000000;
  if (v8 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v9 = a1 == 1414745936 && a2 == 0xE400000000000000;
  if (v9 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v10 = a1 == 1498435395 && a2 == 0xE400000000000000;
  if (v10 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v11 = a1 == 1262702412 && a2 == 0xE400000000000000;
  if (v11 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v12 = a1 == 1163284301 && a2 == 0xE400000000000000;
  if (v12 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v13 = a1 == 1145981250 && a2 == 0xE400000000000000;
  if (v13 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v14 = a1 == 1263421772 && a2 == 0xE400000000000000;
  if (v14 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v15 = a1 == 0x4843544150 && a2 == 0xE500000000000000;
  if (v15 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v16 = a1 == 0x4543415254 && a2 == 0xE500000000000000;
  if (v16 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v17 = a1 == 0x4C4F434B4DLL && a2 == 0xE500000000000000;
  if (v17 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v18 = a1 == 0x454752454DLL && a2 == 0xE500000000000000;
  if (v18 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v19 = a1 == 0x4547525550 && a2 == 0xE500000000000000;
  if (v19 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v20 = a1 == 0x594649544F4ELL && a2 == 0xE600000000000000;
  if (v20 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v21 = a1 == 0x484352414553 && a2 == 0xE600000000000000;
  if (v21 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v22 = a1 == 0x4B434F4C4E55 && a2 == 0xE600000000000000;
  if (v22 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v23 = a1 == 0x444E49424552 && a2 == 0xE600000000000000;
  if (v23 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v24 = a1 == 0x444E49424E55 && a2 == 0xE600000000000000;
  if (v24 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v25 = a1 == 0x54524F504552 && a2 == 0xE600000000000000;
  if (v25 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v26 = a1 == 0x4554454C4544 && a2 == 0xE600000000000000;
  if (v26 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v27 = a1 == 0x4B4E494C4E55 && a2 == 0xE600000000000000;
  if (v27 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v28 = a1 == 0x5443454E4E4F43 && a2 == 0xE700000000000000;
  if (v28 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v29 = a1 == 0x4843524145534DLL && a2 == 0xE700000000000000;
  if (v29 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v30 = a1 == 0x534E4F4954504FLL && a2 == 0xE700000000000000;
  if (v30 || (sub_1001E18E8() & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v31 = a1 == 0x444E4946504F5250 && a2 == 0xE800000000000000;
  if (v31
    || (sub_1001E18E8() & 1) != 0
    || (a1 == 0x54554F4B43454843 ? (BOOL v32 = a2 == 0xE800000000000000) : (BOOL v32 = 0),
        v32
     || (sub_1001E18E8() & 1) != 0
     || (a1 == 0x43544150504F5250 ? (BOOL v33 = a2 == 0xE900000000000048) : (BOOL v33 = 0),
         v33
      || (sub_1001E18E8() & 1) != 0
      || (a1 == 0x4249524353425553 ? (BOOL v34 = a2 == 0xE900000000000045) : (BOOL v34 = 0),
          v34
       || (sub_1001E18E8() & 1) != 0
       || (a1 == 0x444E454C41434B4DLL ? (BOOL v35 = a2 == 0xEA00000000005241) : (BOOL v35 = 0),
           v35
        || (sub_1001E18E8() & 1) != 0
        || (a1 == 0x4956495443414B4DLL ? (BOOL v36 = a2 == 0xEA00000000005954) : (BOOL v36 = 0),
            v36
         || (sub_1001E18E8() & 1) != 0
         || (a1 == 0x5243534255534E55 ? (BOOL v37 = a2 == 0xEB00000000454249) : (BOOL v37 = 0),
             v37
          || (sub_1001E18E8() & 1) != 0
          || (a1 == 0x454352554F53 ? (BOOL v38 = a2 == 0xE600000000000000) : (BOOL v38 = 0), v38 || (sub_1001E18E8() & 1) != 0))))))))
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  return sub_100094D44();
}

uint64_t sub_1001DC5AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = HTTPMethod.init(rawValue:)(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1001DC5DC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HTTPMethod.rawValue.getter(*(void *)v1, *(void *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001DC608()
{
  v1._countAndFlagsBits = 0x2D746E65746E6F63;
  v1._object = (void *)0xEE006874676E656CLL;
  Swift::String_optional v3 = HTTPHeaders.first(name:)(v1);
  uint64_t result = v3.value._countAndFlagsBits;
  if (!v3.value._object) {
    return 0;
  }
  unint64_t v4 = ((unint64_t)v3.value._object >> 56) & 0xF;
  uint64_t v5 = v3.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (((uint64_t)v3.value._object & 0x2000000000000000) != 0) {
    unint64_t v6 = ((unint64_t)v3.value._object >> 56) & 0xF;
  }
  else {
    unint64_t v6 = v3.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (((uint64_t)v3.value._object & 0x1000000000000000) == 0)
  {
    if (((uint64_t)v3.value._object & 0x2000000000000000) == 0)
    {
      if ((v3.value._countAndFlagsBits & 0x1000000000000000) != 0) {
        BOOL v7 = (unsigned __int8 *)(((uint64_t)v3.value._object & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        BOOL v7 = (unsigned __int8 *)sub_10024F3E0();
      }
      uint64_t v8 = (uint64_t)sub_1001A4F58(v7, v5);
      char v0 = v9 & 1;
      goto LABEL_47;
    }
    if (LOBYTE(v3.value._countAndFlagsBits) == 43)
    {
      if (!v4) {
        goto LABEL_62;
      }
      if (v4 == 1) {
        goto LABEL_33;
      }
      sub_100067DD4();
      if (!v14 & v13) {
        goto LABEL_33;
      }
      uint64_t v8 = v16;
      if (v15 != 2)
      {
        sub_100067DD4();
        if (!v14 & v13) {
          goto LABEL_33;
        }
        uint64_t v8 = 10 * v8 + v18;
        if (v17 != 3)
        {
          while (1)
          {
            sub_100028C7C();
            if (!v14 & v13) {
              goto LABEL_33;
            }
            sub_10016D574();
            if (!v14) {
              goto LABEL_33;
            }
            uint64_t v8 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              goto LABEL_33;
            }
            sub_100028CA4();
            if (v14) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      if (LOBYTE(v3.value._countAndFlagsBits) == 45)
      {
        if (v4)
        {
          if (v4 != 1)
          {
            sub_100067DD4();
            if (!(!v14 & v13))
            {
              if (v11 == 2)
              {
                char v0 = 0;
                uint64_t v8 = -(uint64_t)v12;
                goto LABEL_47;
              }
              if ((v10 - 48) <= 9u)
              {
                uint64_t v8 = -10 * v12 - (v10 - 48);
                if (v11 == 3) {
                  goto LABEL_46;
                }
                while (1)
                {
                  sub_100028C7C();
                  if (!v14 & v13) {
                    break;
                  }
                  sub_10016D574();
                  if (!v14) {
                    break;
                  }
                  uint64_t v8 = v26 - v25;
                  if (__OFSUB__(v26, v25)) {
                    break;
                  }
                  sub_100028CA4();
                  if (v14) {
                    goto LABEL_47;
                  }
                }
              }
            }
          }
LABEL_33:
          uint64_t v8 = 0;
          char v0 = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      if (!v4 || (LOBYTE(v3.value._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v8 = (LOBYTE(v3.value._countAndFlagsBits) - 48);
      if (v4 != 1)
      {
        sub_100067DD4();
        if (!v14 & v13) {
          goto LABEL_33;
        }
        uint64_t v8 = 10 * (LOBYTE(v3.value._countAndFlagsBits) - 48) + v22;
        if (v21 != 2)
        {
          while (1)
          {
            sub_100028C7C();
            if (!v14 & v13) {
              goto LABEL_33;
            }
            sub_10016D574();
            if (!v14) {
              goto LABEL_33;
            }
            uint64_t v8 = v24 + v23;
            if (__OFADD__(v24, v23)) {
              goto LABEL_33;
            }
            sub_100028CA4();
            if (v14) {
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_46:
    char v0 = 0;
    goto LABEL_47;
  }
  uint64_t v8 = sub_1001A4F88(v3.value._countAndFlagsBits, (uint64_t)v3.value._object, 10);
  char v0 = v27;
LABEL_47:
  swift_bridgeObjectRelease();
  if (v0) {
    return 0;
  }
  else {
    return v8;
  }
}

void *sub_1001DC894(uint64_t a1)
{
  return sub_1001DC938(a1);
}

uint64_t sub_1001DC8A0(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_10003C4F8();
    uint64_t result = sub_1000DD1D0();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for Transaction();
    uint64_t result = sub_10024EB00();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1001DC928(uint64_t a1)
{
  return sub_1001DC938(a1);
}

void *sub_1001DC938(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_10003C4F8();
    uint64_t result = (void *)sub_1000DD1D0();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)sub_10024EB00();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1001DC9AC(uint64_t a1)
{
  return sub_1001DC9C4(a1, &qword_1003185D0);
}

void *sub_1001DC9B8(uint64_t a1)
{
  return sub_1001DC9C4(a1, (uint64_t *)&unk_100319510);
}

void *sub_1001DC9C4(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_10003C4F8();
    uint64_t result = (void *)sub_1000DD1D0();
    __break(1u);
  }
  else if (a1)
  {
    sub_100019524(a2);
    uint64_t result = (void *)sub_10024EB00();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1001DCA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_10024FA60() & 1;
  }
}

uint64_t sub_1001DCA88(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0)
  {
    sub_10003C4F8();
    goto LABEL_40;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v42 = v10 + 16;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1001DCEB8(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    char v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_36:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v41 = a1;
  unint64_t v48 = 4 * v12;
  char v13 = _swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_10024E8F0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_10024E7A0();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_10024E920();
      uint64_t v43 = v23;
      uint64_t v44 = v22;
      uint64_t v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001E19C8();
        sub_100034CD4();
        char v13 = v28;
      }
      unint64_t v25 = v13[2];
      if (v25 >= v13[3] >> 1)
      {
        sub_100034CD4();
        char v13 = v29;
      }
      void v13[2] = v25 + 1;
      uint64_t v26 = &v13[4 * v25];
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(void *)uint64_t v42 = v13;
    }
    uint64_t v27 = sub_10024E7A0();
    unint64_t v14 = v27;
    *(void *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && v13[2] == v41) {
      break;
    }
    unint64_t v15 = v27;
    unint64_t v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v27;
  unint64_t v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_10024E920();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    sub_100034584();
    uint64_t v38 = *(void *)(*(void *)v42 + 16);
    sub_100034898();
    char v13 = *(void **)v42;
    void v13[2] = v38 + 1;
    uint64_t v39 = &v13[4 * v38];
    v39[4] = v31;
    v39[5] = v33;
    v39[6] = v35;
    v39[7] = v37;
    *(void *)uint64_t v42 = v13;
    goto LABEL_35;
  }
LABEL_38:
  sub_10003C4F8();
LABEL_40:
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t sub_1001DCEB8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_10024E920();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_100034584();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_100034898();
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    unint64_t v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    _OWORD v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t sub_1001DCFC0()
{
  sub_1001E1970();
  if (v3 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  if (v2 + 8 * v1 > v0 && v0 + 8 * v1 > v2)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD070()
{
  return sub_1001DD14C();
}

uint64_t sub_1001DD07C()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1ADC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD11C(uint64_t a1, uint64_t a2)
{
  return sub_1001DD8A0(a1, a2);
}

uint64_t sub_1001DD134()
{
  return sub_1001DD418();
}

uint64_t sub_1001DD140()
{
  return sub_1001DD14C();
}

uint64_t sub_1001DD14C()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1CD4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD1EC()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1CD4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD294(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E19AC();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_1003185E0);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD344(uint64_t a1, uint64_t a2)
{
  return sub_1001DE444(a1, a2);
}

uint64_t sub_1001DD35C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E198C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030CA08);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD40C()
{
  return sub_1001DD418();
}

uint64_t sub_1001DD418()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1CD4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD4B8(uint64_t a1, uint64_t a2)
{
  return sub_1001DE444(a1, a2);
}

uint64_t sub_1001DD4D4(uint64_t a1, uint64_t a2)
{
  return sub_1001DD4EC(a1, a2);
}

uint64_t sub_1001DD4E0(uint64_t a1, uint64_t a2)
{
  return sub_1001DD4EC(a1, a2);
}

uint64_t sub_1001DD4EC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E198C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(v3);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD598(uint64_t a1, uint64_t a2)
{
  return sub_1001DE594(a1, a2);
}

uint64_t sub_1001DD5A4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1B5C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030A588);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD654(uint64_t a1, uint64_t a2)
{
  return sub_1001DE01C(a1, a2);
}

uint64_t sub_1001DD660(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1B78();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030A578);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD710(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  if (a3 + 48 * a2 > a1 && a1 + 48 * a2 > a3)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030A450);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD7D8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1B40();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030CA00);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD888(uint64_t a1, uint64_t a2)
{
  return sub_1001DD8A0(a1, a2);
}

uint64_t sub_1001DD8A0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1AF0();
  v3(0);
  sub_1001E1E1C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DD96C(uint64_t a1, uint64_t a2)
{
  return sub_1001DE444(a1, a2);
}

uint64_t sub_1001DD984()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1C40();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDA30(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1AF0();
  sub_100019524(&qword_10030A3B0);
  sub_1001E1E1C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDAFC()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1E58();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDB9C()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1C40();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDC48(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1AF0();
  if (v4 + 72 * v3 > v2 && v2 + 72 * v3 > v4)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030A550);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDD08(uint64_t a1, uint64_t a2)
{
  return sub_1001DE594(a1, a2);
}

uint64_t sub_1001DDD14(uint64_t a1, uint64_t a2)
{
  return sub_1001DE444(a1, a2);
}

uint64_t sub_1001DDD2C(uint64_t a1, uint64_t a2)
{
  return sub_1001DE228(a1, a2);
}

uint64_t sub_1001DDD38(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1AF0();
  if (v4 + 80 * v3 > v2 && v2 + 80 * v3 > v4)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_10030A598);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDDF8(uint64_t a1, uint64_t a2)
{
  return sub_1001DE228(a1, a2);
}

uint64_t sub_1001DDE04(uint64_t a1, uint64_t a2)
{
  return sub_1001DE228(a1, a2);
}

uint64_t sub_1001DDE10()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1C40();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

void *sub_1001DDEBC()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = (void *)sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1E44();
  if (!v6 & v5) {
    BOOL v7 = v4 > (unint64_t)v3;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return memcpy(v3, v1, v2);
}

uint64_t sub_1001DDF54()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1ADC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DDFF8(uint64_t a1, uint64_t a2)
{
  return sub_1001DE444(a1, a2);
}

uint64_t sub_1001DE010(uint64_t a1, uint64_t a2)
{
  return sub_1001DE01C(a1, a2);
}

uint64_t sub_1001DE01C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1B78();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(v3);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE0CC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E198C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_100319600);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE17C()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1ADC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE21C(uint64_t a1, uint64_t a2)
{
  return sub_1001DE228(a1, a2);
}

uint64_t sub_1001DE228(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E19AC();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(v3);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE2D4()
{
  sub_1001E1970();
  if (v3 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  if (v2 + 16 * v1 > v0 && v0 + 16 * v1 > v2)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

void *sub_1001DE380(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = (void *)sub_10003C598();
    __break(1u);
    return result;
  }
  if (&__dst[8 * a2] > __src && &__src[8 * a2] > __dst)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return memcpy(__dst, __src, 8 * a2);
}

uint64_t sub_1001DE42C(uint64_t a1, uint64_t a2)
{
  return sub_1001DE444(a1, a2);
}

uint64_t sub_1001DE444(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1B40();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  v3(0);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE4F4()
{
  sub_1001E1970();
  if (v0 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1E58();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE594(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E1B5C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(v3);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE640(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10003C4F8();
    sub_10003C770();
LABEL_11:
    uint64_t result = sub_10003C598();
    __break(1u);
    return result;
  }
  sub_1001E19AC();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10003C4F8();
    sub_10003C760();
    goto LABEL_11;
  }
  sub_100019524(&qword_100310F60);
  sub_1001E1904();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1001DE6F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FCBC();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1001DE75C(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1001DE75C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_10024F9C0(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1001DEDCC(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_1001DC938(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  unint64_t v93 = a1;
  if (v3 <= 0)
  {
    int v98 = (char *)_swiftEmptyArrayStorage;
    unint64_t v31 = _swiftEmptyArrayStorage[2];
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)&v98[16 * v86 + 32];
      uint64_t v89 = *(void *)&v98[16 * v31 + 24];
      uint64_t result = sub_1001DEE94((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)&v98[16 * v31 + 16]), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1001C1388((uint64_t)v98);
        uint64_t v87 = (char *)result;
      }
      if (v86 >= *((void *)v87 + 2)) {
        goto LABEL_140;
      }
      char v90 = &v87[16 * v86 + 32];
      *(void *)char v90 = v88;
      *((void *)v90 + 1) = v89;
      unint64_t v91 = *((void *)v87 + 2);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove(&v87[16 * v31 + 16], &v87[16 * v31 + 32], 16 * (v91 - v31));
      int v98 = v87;
      *((void *)v87 + 2) = v91 - 1;
      unint64_t v31 = v91 - 1;
      Swift::Int v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  int v98 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      Swift::Int v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      unint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_10024FA60();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        Swift::Int v19 = v15 + 1;
        Swift::Int v7 = v15;
        Swift::Int v15 = v19;
      }
      while (v19 < v3);
      Swift::Int v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_10024FA60();
    int v14 = result;
    Swift::Int v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    Swift::Int v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      Swift::Int v22 = v15;
      Swift::Int v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    Swift::Int v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      Swift::Int v27 = v3;
    }
    else {
      Swift::Int v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      BOOL v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      BOOL v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        Swift::Int v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_10024FA60();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      Swift::Int v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001C1290(0, *((void *)v28 + 2) + 1, 1, v28);
      BOOL v28 = (char *)result;
    }
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1001C1290((char *)(v29 > 1), v30 + 1, 1, v28);
      BOOL v28 = (char *)result;
    }
    *((void *)v28 + 2) = v31;
    uint64_t v32 = v28 + 32;
    uint64_t v33 = (Swift::Int *)&v28[16 * v30 + 32];
    *uint64_t v33 = v9;
    v33[1] = v7;
    int v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    Swift::Int v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      uint64_t v39 = &v32[2 * v31];
      uint64_t v40 = *(v39 - 8);
      uint64_t v41 = *(v39 - 7);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(v39 - 6);
      uint64_t v43 = *(v39 - 5);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = &v32[2 * v31 - 4];
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = &v32[2 * v34];
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *((void *)v28 + 4);
        uint64_t v64 = *((void *)v28 + 5);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *((void *)v28 + 4);
      uint64_t v35 = *((void *)v28 + 5);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = &v32[2 * v31 - 4];
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    uint64_t v58 = &v32[2 * v34];
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    unsigned __int8 v65 = &v32[2 * v34];
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = &v32[2 * v73];
    uint64_t v75 = *v74;
    uint64_t v76 = &v32[2 * v34];
    uint64_t v77 = v76[1];
    uint64_t result = sub_1001DEE94((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *((void *)v98 + 2)) {
      goto LABEL_125;
    }
    uint64_t *v74 = v75;
    v32[2 * v73 + 1] = v77;
    unint64_t v78 = *((void *)v98 + 2);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    BOOL v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove(&v32[2 * v34], v76 + 2, 16 * (v78 - 1 - v34));
    *((void *)v98 + 2) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001DEDCC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_10024FA60();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1001DEE94(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_100037C6C(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    char v18 = (char *)(a3 - 16);
    while (1)
    {
      Swift::Int v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (sub_10024FA60() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)char v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_100037C6C(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_10024FA60() & 1) != 0) {
        break;
      }
      Swift::Int v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    Swift::Int v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_100037C6C(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

uint64_t type metadata accessor for HTTPResponseHead._Storage()
{
  return self;
}

uint64_t sub_1001DF060(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 0x3C) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001DF074@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1001D5FB4(a1, a2, *(void *)a3, *(void *)(a3 + 8));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1001DF0A8(void *(*a1)(void *__return_ptr, void, void), uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  if ((a6 & 0x1000000000000000) != 0) {
    return 3;
  }
  if ((a6 & 0x2000000000000000) != 0)
  {
    uint64_t v12 = HIBYTE(a6) & 0xF;
    v14[0] = a5;
    v14[1] = a6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = (void *)sub_10024F3E0();
  }
  return (uint64_t)sub_1001DF170(v11, v12, a3, a4, a5, a6, a1);
}

void *sub_1001DF170(void *result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, void *(*a7)(void *__return_ptr, void, void))
{
  void *(*v18)(void *__return_ptr, void, void);
  unint64_t v19;
  uint64_t v20;
  void *(*v21)(void *__return_ptr, void, void);
  void *(*v22)(void *__return_ptr, void, void);
  unint64_t v23;
  void *(*v24)(void *__return_ptr, void, void);
  void *v25;
  char *v26;
  void *(*v27)(void *__return_ptr, void, void);
  uint64_t v28;

  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  uint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    char v18 = a7;
    uint64_t result = (void *)sub_1000F44B4(a3, a5, a6);
    a7 = v18;
    unint64_t v16 = (unint64_t)result;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
    Swift::Int v27 = a7;
    Swift::Int v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      Swift::Int v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_34;
    }
    uint64_t result = (void *)sub_10024E880();
    uint64_t v17 = (char *)result;
    a7 = v27;
  }
  else
  {
    uint64_t v17 = (char *)(v16 >> 16);
  }
  if (v15 == v14)
  {
    uint64_t v20 = v11;
    BOOL v21 = a7;
    uint64_t result = (void *)sub_1000F44B4(v20, a5, a6);
    a7 = v21;
    unint64_t v11 = (unint64_t)result;
  }
  if ((a4 & 0xC) == v14)
  {
    BOOL v22 = a7;
    uint64_t result = (void *)sub_1000F44B4(a4, a5, a6);
    a7 = v22;
    a4 = (unint64_t)result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    uint64_t result = (void *)((a4 >> 16) - (v11 >> 16));
    goto LABEL_22;
  }
  BOOL v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    BOOL v23 = HIBYTE(a6) & 0xF;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_32;
  }
  if (v23 < a4 >> 16)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  uint64_t v24 = a7;
  uint64_t result = (void *)sub_10024E880();
  a7 = v24;
LABEL_22:
  if (__OFADD__(v17, result))
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v25 = result;
  if ((uint64_t)((char *)result + (unint64_t)v17) < (uint64_t)v17)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v12) {
    uint64_t v26 = &v17[(void)v12];
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t result = a7(&v28, v26, v25);
  if (!v7) {
    return (void *)v28;
  }
  return result;
}

uint64_t sub_1001DF37C(uint64_t *a1, uint64_t *a2)
{
  return sub_1001DCA44(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t type metadata accessor for HTTPRequestHead._Storage()
{
  return self;
}

uint64_t type metadata accessor for HTTPPart()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1001DF3E8()
{
  unint64_t result = qword_100318358;
  if (!qword_100318358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318358);
  }
  return result;
}

unint64_t sub_1001DF438()
{
  unint64_t result = qword_100318360;
  if (!qword_100318360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318360);
  }
  return result;
}

uint64_t sub_1001DF484()
{
  return sub_1001DF660(&qword_100318368, &qword_100318370, (void (*)(void))sub_1001DF4D4);
}

unint64_t sub_1001DF4D4()
{
  unint64_t result = qword_100318378;
  if (!qword_100318378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318378);
  }
  return result;
}

uint64_t sub_1001DF520()
{
  return sub_1001DF660(&qword_100318380, &qword_100318388, (void (*)(void))sub_1001DF4D4);
}

unint64_t sub_1001DF574()
{
  unint64_t result = qword_100318390;
  if (!qword_100318390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318390);
  }
  return result;
}

uint64_t sub_1001DF5C0()
{
  return sub_1001DF660(&qword_100318398, &qword_100318370, (void (*)(void))sub_1001DF438);
}

uint64_t sub_1001DF610()
{
  return sub_1001DF660(&qword_1003183A0, &qword_100318388, (void (*)(void))sub_1001DF438);
}

uint64_t sub_1001DF660(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001DF6D0()
{
  unint64_t result = qword_1003183A8;
  if (!qword_1003183A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003183A8);
  }
  return result;
}

unint64_t sub_1001DF720()
{
  unint64_t result = qword_1003183B0;
  if (!qword_1003183B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003183B0);
  }
  return result;
}

uint64_t sub_1001DF76C()
{
  return sub_10001B0A4(&qword_1003183B8, &qword_100318370);
}

uint64_t sub_1001DF7A8()
{
  return sub_10001B0A4(&qword_1003183C0, &qword_100318388);
}

uint64_t sub_1001DF7E4()
{
  return sub_10001B0A4(&qword_1003183C8, &qword_1003183D0);
}

unint64_t sub_1001DF824()
{
  unint64_t result = qword_1003183D8;
  if (!qword_1003183D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003183D8);
  }
  return result;
}

uint64_t destroy for HTTPRequestHead()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void type metadata accessor for HTTPRequestHead()
{
}

uint64_t sub_1001DF8CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1001DF9A0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  Swift::Int v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= *(void *)(v4 + 64)) {
    unint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v6 <= 9) {
    uint64_t v7 = 9;
  }
  else {
    uint64_t v7 = v6;
  }
  int v8 = *(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80);
  if ((unint64_t)(v7 + 1) <= 0x18 && (v8 & 0x1000F8) == 0)
  {
    unsigned int v11 = a2[v7];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_20;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_20;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_20;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_20:
          int v15 = (v14 | (v12 << (8 * v7))) + 3;
          unsigned int v11 = v14 + 3;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = a2[8];
      *(unsigned char *)(a1 + v7) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v11 == 1)
    {
      (*(void (**)(uint64_t))(v5 + 16))(a1);
      *((unsigned char *)v3 + v7) = 1;
    }
    else
    {
      (*(void (**)(uint64_t))(v4 + 16))(a1);
      *((unsigned char *)v3 + v7) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *Swift::Int v3 = *(void *)a2;
    Swift::Int v3 = (void *)(v10 + (((v8 & 0xF8 | 7u) + 16) & ~(unint64_t)(v8 & 0xF8 | 7u)));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1001DFBAC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  if (v3 <= 9) {
    unint64_t v3 = 9;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_14;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_14:
        int v8 = (v7 | (v5 << (8 * v3))) + 3;
        unsigned int v4 = v7 + 3;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (v4 == 1) {
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1001DFD1C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v5 <= 9) {
    uint64_t v6 = 9;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_15:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    *(unsigned char *)(a1 + v6) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v7 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    *(unsigned char *)(a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    *(unsigned char *)(a1 + v6) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1001DFEE0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v9 = *(void *)(v8 + 64);
    if (v9 <= *(void *)(v7 + 64)) {
      unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    if (v9 <= 9) {
      uint64_t v10 = 9;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 3;
          unsigned int v11 = v14 + 3;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11 == 1) {
        unint64_t v16 = *(void (**)(void))(v8 + 8);
      }
      else {
        unint64_t v16 = *(void (**)(void))(v7 + 8);
      }
      v16();
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_33;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_33:
          int v21 = (v20 | (v18 << (8 * v10))) + 3;
          unsigned int v17 = v20 + 3;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      a1[v10] = 2;
      swift_bridgeObjectRetain();
    }
    else if (v17 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v6);
      a1[v10] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
      a1[v10] = 0;
    }
  }
  return a1;
}

uint64_t sub_1001E01A4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v5 <= 9) {
    uint64_t v6 = 9;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_15:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    char v12 = 2;
  }
  else if (v7 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 32))(a1);
    char v12 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v12 = 0;
  }
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1001E0360(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v9 = *(void *)(v8 + 64);
    if (v9 <= *(void *)(v7 + 64)) {
      unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    if (v9 <= 9) {
      uint64_t v10 = 9;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 3;
          unsigned int v11 = v14 + 3;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11 == 1) {
        unint64_t v16 = *(void (**)(void))(v8 + 8);
      }
      else {
        unint64_t v16 = *(void (**)(void))(v7 + 8);
      }
      v16();
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_33;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_33:
          int v21 = (v20 | (v18 << (8 * v10))) + 3;
          unsigned int v17 = v20 + 3;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      char v22 = 2;
    }
    else if (v17 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v6);
      char v22 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
      char v22 = 0;
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_1001E061C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  uint64_t v5 = 9;
  if (v3 > 9) {
    uint64_t v5 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 < 2)
    {
LABEL_24:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_24;
  }
LABEL_16:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_1001E076C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  if (v5 <= 9) {
    unint64_t v5 = 9;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x1001E094CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1001E0974(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = 9;
  if (v2 > 9) {
    uint64_t v4 = v2;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_14;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 3;
        LODWORD(v5) = v8 + 3;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_1001E0A48(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 2)
  {
    unint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v7 + 64) > v6) {
      unint64_t v6 = *(void *)(v7 + 64);
    }
    if (v6 <= 9) {
      size_t v8 = 9;
    }
    else {
      size_t v8 = v6;
    }
    unsigned int v9 = a2 - 3;
    if (v8 < 4)
    {
      unsigned int v10 = v9 >> (8 * v8);
      int v11 = v9 & ~(-1 << (8 * v8));
      a1[v8] = v10 + 3;
      bzero(a1, v8);
      if (v8 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if (v8 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v8] = 3;
      bzero(a1, v8);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    if (v5 <= 9) {
      unint64_t v5 = 9;
    }
    a1[v5] = a2;
  }
}

uint64_t _s25ASOctaneSupportXPCService15HTTPRequestHeadVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s25ASOctaneSupportXPCService15HTTPRequestHeadVwca_0()
{
  sub_1001E1EF8();
  *(void *)uint64_t v1 = *v2;
  swift_retain();
  swift_release();
  *(void *)(v1 + 8) = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 16) = *(unsigned char *)(v0 + 16);
  return v1;
}

uint64_t _s25ASOctaneSupportXPCService15HTTPRequestHeadVwta_0()
{
  sub_1001E1EF8();
  swift_release();
  *(_OWORD *)uint64_t v1 = *(_OWORD *)v0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 16) = *(unsigned char *)(v0 + 16);
  return v1;
}

uint64_t _s25ASOctaneSupportXPCService15HTTPRequestHeadVwet_0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void *sub_1001E0CB0(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *((unsigned char *)result + 16) = 0;
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0) {
      *((unsigned char *)result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_1001E1E3C(result, (a2 - 1));
    }
    *((unsigned char *)result + 17) = 0;
    if (a2) {
      return sub_1001E1E3C(result, (a2 - 1));
    }
  }
  return result;
}

void type metadata accessor for HTTPResponseHead()
{
}

uint64_t initializeBufferWithCopyOfBuffer for HTTPHeaders(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPHeaders(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for HTTPHeaders(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPHeaders(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPHeaders(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for HTTPHeaders()
{
}

void type metadata accessor for HTTPHeaders.Index()
{
}

unint64_t destroy for HTTPMethod(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s25ASOctaneSupportXPCService10HTTPMethodOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for HTTPMethod(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HTTPMethod(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPMethod(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFDD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483614);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 33;
  if (v4 >= 0x23) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HTTPMethod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFDE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483614;
    if (a3 >= 0x7FFFFFDE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFDE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 33;
    }
  }
  return result;
}

void *sub_1001E1070(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for HTTPMethod()
{
}

_DWORD *initializeBufferWithCopyOfBuffer for HTTPVersion(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HTTPVersion(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HTTPVersion(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

void type metadata accessor for HTTPVersion()
{
}

uint64_t getEnumTagSinglePayload for HTTPParserError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE9)
  {
    if (a2 + 23 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 23) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 24;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v5 = v6 - 24;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HTTPParserError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E1250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

void type metadata accessor for HTTPParserError()
{
}

unint64_t destroy for HTTPResponseStatus(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s25ASOctaneSupportXPCService18HTTPResponseStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (v3 < 0xFFFFFFFF)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for HTTPResponseStatus(void *a1, void *a2)
{
  unint64_t v4 = a2[2];
  if (a1[2] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HTTPResponseStatus(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPResponseStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFC3 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483588);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 59;
  if (v4 >= 0x3D) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HTTPResponseStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFC4)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483588;
    if (a3 >= 0x7FFFFFC4) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFC4) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 59;
    }
  }
  return result;
}

uint64_t sub_1001E14D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1001E14E8(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[2] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for HTTPResponseStatus()
{
}

unsigned char *sub_1001E1518(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E15E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for KeepAliveState()
{
}

unint64_t sub_1001E161C()
{
  unint64_t result = qword_1003185B8;
  if (!qword_1003185B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003185B8);
  }
  return result;
}

unint64_t sub_1001E1668()
{
  unint64_t result = qword_1003185C0;
  if (!qword_1003185C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003185C0);
  }
  return result;
}

unint64_t sub_1001E16B4()
{
  unint64_t result = qword_1003185C8;
  if (!qword_1003185C8)
  {
    sub_10024E140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003185C8);
  }
  return result;
}

uint64_t sub_1001E1704()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  if (*v0 >> 62) {
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  for (unint64_t i = v1[1]; i != v3; unint64_t i = v1[1])
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = sub_10024F380();
    }
    else
    {
      if ((i & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_10024F6F0();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      if (i >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_16;
      }
      uint64_t v5 = *(void *)(v2 + 32 + 8 * i);
      swift_retain();
    }
    if (__OFADD__(i, 1)) {
      goto LABEL_17;
    }
    v1[1] = i + 1;
    uint64_t v7 = v5;
    if (((uint64_t (*)(uint64_t *))v1[2])(&v7)) {
      return v5;
    }
    swift_release();
  }
  return 0;
}

unint64_t sub_1001E1820()
{
  unint64_t result = qword_1003185D8;
  if (!qword_1003185D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003185D8);
  }
  return result;
}

uint64_t sub_1001E186C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E18A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E18B4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_10003C3CC(a1, a2, a3);
}

uint64_t sub_1001E18E8()
{
  return sub_10024FA60();
}

uint64_t sub_1001E1904()
{
  return v0;
}

uint64_t sub_1001E1918()
{
  return sub_100032B9C();
}

uint64_t sub_1001E19C8()
{
  return 0;
}

uint64_t sub_1001E19D8()
{
  return v0 + 32;
}

uint64_t sub_1001E19F8()
{
  uint64_t v7 = *v1;
  *(void *)(v7 + 16) = v2 + 1;
  size_t v8 = (void *)(v7 + 32 * v2);
  v8[4] = v3;
  v8[5] = v0;
  v8[6] = v5;
  v8[7] = v4;
  *unint64_t v1 = v7;
  return swift_bridgeObjectRetain();
}

BOOL sub_1001E1A28@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1001E1A3C(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v5;
  *uint64_t v4 = a1;
  sub_1001DF060(v1, v2, v3);
  return swift_release();
}

void sub_1001E1A80()
{
  v1._countAndFlagsBits = 0x726564616568202CLL;
  v1._object = (void *)0xEB00000000203A73;
  sub_10024E800(v1);
}

uint64_t sub_1001E1B28()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1001E1B94(uint64_t a1)
{
  *Swift::String v1 = a1;
  return swift_release();
}

void sub_1001E1BC4()
{
  *(unsigned char *)(v0 + 8) = 2;
}

uint64_t sub_1001E1BD0()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_1001E1C08()
{
  return v0;
}

uint64_t sub_1001E1C24()
{
  return v0;
}

void sub_1001E1C50()
{
  sub_1000389BC();
}

uint64_t sub_1001E1C80()
{
  uint64_t v4 = *(void **)v3;
  uint64_t result = *(void *)(*(void *)v3 + 16);
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v0;
  return result;
}

uint64_t sub_1001E1CB0()
{
  return type metadata accessor for HTTPResponseHead._Storage();
}

uint64_t sub_1001E1CE4()
{
  return swift_bridgeObjectRetain_n();
}

void sub_1001E1D08()
{
  *(void *)(v1 - 112) = v0;
  sub_1000389BC();
}

unint64_t sub_1001E1D44()
{
  unint64_t v6 = *(void *)(v4 - 96);
  unint64_t v7 = *(void *)(v4 - 88);
  return sub_1001D63B4(v6, v7, v1, v2, v3, v0);
}

void *sub_1001E1D68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *(*a7)(void *__return_ptr, void, void))
{
  return sub_1001DF170(a1, a2, v8, v9, v10, v7, a7);
}

uint64_t sub_1001E1D9C()
{
  uint64_t v3 = *v2;
  uint64_t result = *(void *)(*v2 + 16);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v0;
  return result;
}

uint64_t sub_1001E1DAC()
{
  return v0;
}

uint64_t sub_1001E1DDC()
{
  return v0;
}

void *sub_1001E1E3C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_1001E1E6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001E1E8C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t sub_1001E1EAC()
{
  return sub_1001D60B0(v1, v0, v3, v2);
}

uint64_t sub_1001E1ECC()
{
  return sub_10024F3E0();
}

void sub_1001E1EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v24 - 128) = v23;
  *(void *)(v24 - 120) = a23;
}

uint64_t getEnumTagSinglePayload for RefundRequestResponse(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 3;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 3;
  if (*a1 < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RefundRequestResponse(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E207CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RefundRequestResponse()
{
  return &type metadata for RefundRequestResponse;
}

uint64_t sub_1001E20B4()
{
  return sub_10024EA60();
}

uint64_t sub_1001E2114()
{
  return sub_10024EA10();
}

uint64_t sub_1001E2164(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1001E28B8();
  unint64_t v5 = sub_1001E2904();
  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_1001E21BC(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_1003185F0);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_100026000();
  sub_10001C2A8(a1, a1[3]);
  sub_1001E24BC();
  sub_10024FD40();
  sub_1001E2508();
  sub_10024F910();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

unint64_t sub_1001E22C8(void *a1)
{
  uint64_t v4 = sub_100019524(&qword_100318608);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_100026000();
  unint64_t v9 = (unint64_t)sub_10001C2A8(a1, a1[3]);
  sub_1001E24BC();
  sub_10024FD20();
  if (v1)
  {
    sub_10001C2EC((uint64_t)a1);
  }
  else
  {
    sub_1001E2554();
    sub_10024F800();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
    unint64_t v9 = v11;
    sub_10001C2EC((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_1001E23FC(uint64_t a1)
{
  unint64_t v2 = sub_1001E24BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E2438(uint64_t a1)
{
  unint64_t v2 = sub_1001E24BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1001E2474@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001E22C8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001E24A0(void *a1)
{
  return sub_1001E21BC(a1);
}

unint64_t sub_1001E24BC()
{
  unint64_t result = qword_1003185F8;
  if (!qword_1003185F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003185F8);
  }
  return result;
}

unint64_t sub_1001E2508()
{
  unint64_t result = qword_100318600;
  if (!qword_100318600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318600);
  }
  return result;
}

unint64_t sub_1001E2554()
{
  unint64_t result = qword_100318610;
  if (!qword_100318610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318610);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RefundRequestResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001E263CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RefundRequestResponse.CodingKeys()
{
  return &type metadata for RefundRequestResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RefundRequestError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E2740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RefundRequestError()
{
  return &type metadata for RefundRequestError;
}

unint64_t sub_1001E277C()
{
  unint64_t result = qword_100318618;
  if (!qword_100318618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318618);
  }
  return result;
}

unint64_t sub_1001E27CC()
{
  unint64_t result = qword_100318620;
  if (!qword_100318620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318620);
  }
  return result;
}

unint64_t sub_1001E281C()
{
  unint64_t result = qword_100318628;
  if (!qword_100318628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318628);
  }
  return result;
}

unint64_t sub_1001E286C()
{
  unint64_t result = qword_100318630;
  if (!qword_100318630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318630);
  }
  return result;
}

unint64_t sub_1001E28B8()
{
  unint64_t result = qword_100318638;
  if (!qword_100318638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318638);
  }
  return result;
}

unint64_t sub_1001E2904()
{
  unint64_t result = qword_100318640;
  if (!qword_100318640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318640);
  }
  return result;
}

void *sub_1001E2950(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  unsigned int v7 = a4;
  unint64_t v9 = HIDWORD(a4);
  unint64_t v10 = (void *)(a3 + 24);
  unint64_t result = (void *)swift_beginAccess();
  if (v9 < v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *v10 + ((a5 >> 24) & 0xFFFF00 | BYTE6(a5)) + v7;
    unint64_t result = a1(&v13, v12, v12 + v9 - v7);
    if (!v5) {
      return (void *)v13;
    }
  }
  return result;
}

uint64_t HTTPDecoder.__allocating_init(leftOverBytesStrategy:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  HTTPDecoder.init(leftOverBytesStrategy:)(a1);
  return v2;
}

void sub_1001E2A40()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2];
  uint64_t v3 = v2 - v1;
  if (v2 < v1) {
    v3 += *(void *)(*v0 + 16);
  }
  if (v3 >= 1)
  {
    if (v2 == v1)
    {
      __break(1u);
    }
    else
    {
      sub_100032980(*v0);
      sub_100032A74();
      sub_100034274();
    }
  }
}

uint64_t sub_1001E2AE4(uint64_t result)
{
  if (result)
  {
    unint64_t result = *(void *)(result + 24);
    if (result) {
      return swift_retain();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E2AFC(char a1)
{
  *(_OWORD *)(v1 + 96) = 0u;
  *(void *)(v1 + 184) = 0;
  int v2 = a1 & 1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 73) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(unsigned char *)(v1 + 176) = 0;
  *(unsigned char *)(v1 + 192) = 1;
  *(void *)(v1 + 200) = 0;
  *(void *)(v1 + 208) = 0;
  *(int64x2_t *)(v1 + 216) = vdupq_n_s64(0xCAFBABEuLL);
  *(_DWORD *)(v1 + 232) = 0;
  *(unsigned char *)(v1 + 236) = 1;
  *(void *)(v1 + 240) = 0;
  sub_1000309F0(1uLL);
  *(void *)(v1 + 256) = v3;
  *(void *)(v1 + 264) = v4;
  *(void *)(v1 + 272) = v5;
  *(unsigned char *)(v1 + 248) = v2;
  sub_1000578C0();
  sub_100006CCC((_OWORD *)(v1 + 96));
  swift_endAccess();
  char v6 = *(unsigned char *)(v1 + 88);
  long long v7 = *(_OWORD *)(v1 + 72);
  long long v11 = *(_OWORD *)(v1 + 56);
  long long v12 = v7;
  char v13 = v6;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(unsigned char *)(v1 + 88) = 1;
  if (v6) {
    __break(1u);
  }
  sub_100006C88((uint64_t)&v11, v2);
  long long v8 = v12;
  *(_OWORD *)(v1 + 56) = v11;
  char v9 = v13;
  *(_OWORD *)(v1 + 72) = v8;
  *(unsigned char *)(v1 + 88) = v9;
  *(void *)(v1 + 144) = sub_1001E2CC8;
  *(void *)(v1 + 120) = sub_1001E2CF4;
  *(void *)(v1 + 128) = sub_1001E2D20;
  *(void *)(v1 + 112) = sub_1001E2D88;
  *(void *)(v1 + 104) = sub_1001E2E00;
  *(void *)(v1 + 168) = sub_1001E2E2C;
  *(void *)(v1 + 160) = sub_1001E5A90;
  *(void *)(v1 + 96) = sub_1001E2E94;
  *(void *)(v1 + 136) = sub_1001E2FE4;
  *(void *)(v1 + 152) = sub_1001E3030;
  return v1;
}

uint64_t sub_1001E2CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001E2D8C(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1001E34F0);
}

uint64_t sub_1001E2CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001E2D8C(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1001E3590);
}

uint64_t sub_1001E2D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001E2D8C(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1001E365C);
}

uint64_t sub_1001E2D4C(uint64_t a1)
{
  return 0;
}

uint64_t sub_1001E2D8C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  type metadata accessor for BetterHTTPParser();
  sub_1001E2AE4(a1);
  if (a2) {
    uint64_t v8 = a2 + a3;
  }
  else {
    uint64_t v8 = 0;
  }
  a4(a2, v8);
  swift_release();
  return 0;
}

uint64_t sub_1001E2E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001E2D8C(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1001E3718);
}

uint64_t sub_1001E2E2C(uint64_t a1)
{
  return sub_1001E2D4C(a1);
}

uint64_t sub_1001E2E44(uint64_t a1)
{
  type metadata accessor for BetterHTTPParser();
  uint64_t result = sub_1001E2AE4(a1);
  if (*(unsigned char *)(result + 176))
  {
    __break(1u);
  }
  else
  {
    *(unsigned char *)(result + 176) = 1;
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_1001E2E98(uint64_t a1)
{
  type metadata accessor for BetterHTTPParser();
  uint64_t result = sub_1001E2AE4(a1);
  if (a1)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(unsigned __int16 *)(a1 + 16);
    uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
    int v7 = *(_DWORD *)(a1 + 4);
    uint64_t v8 = *(void *)(a1 + 8);
    int v9 = *(_DWORD *)(a1 + 20);
    uint64_t v10 = *(void *)(a1 + 24);
    int v17 = *(_DWORD *)a1;
    int v6 = v17;
    int v18 = v7;
    uint64_t v19 = v8;
    __int16 v20 = v4;
    __int16 v21 = v5;
    int v22 = v9;
    uint64_t v23 = v10;
    unsigned int v16 = sub_1001E5A70((uint64_t)&v17);
    int v17 = v6;
    int v18 = v7;
    uint64_t v19 = v8;
    __int16 v20 = v4;
    __int16 v21 = v5;
    int v22 = v9;
    uint64_t v23 = v10;
    int v11 = sub_1001E5A78((uint64_t)&v17);
    int v17 = v6;
    int v18 = v7;
    uint64_t v19 = v8;
    __int16 v20 = v4;
    __int16 v21 = v5;
    int v22 = v9;
    uint64_t v23 = v10;
    uint64_t v12 = sub_1001E5A84((uint64_t)&v17);
    BOOL v13 = !sub_1000066BC(a1);
    unint64_t v14 = sub_1001E3880(v4, v5, v16, v11 != 0, v12, v13);
    if ((v14 & 0x100000000) != 0)
    {
      BOOL v15 = v14 != 0;
      swift_release();
    }
    else
    {
      *(_DWORD *)(v3 + 232) = v14;
      *(unsigned char *)(v3 + 236) = 0;
      swift_release();
      return 0xFFFFFFFFLL;
    }
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E2FE8(uint64_t a1)
{
  return 0;
}

uint64_t sub_1001E3034(uint64_t result, uint64_t a2, char a3)
{
  if (result)
  {
    uint64_t v4 = *(void *)(v3 + 216);
    if (v4)
    {
      *(void *)(v3 + 184) = result - v4;
      *(unsigned char *)(v3 + 192) = 0;
      *(unsigned char *)(v3 + 176) = a3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E305C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 200);
  *(void *)(result + 200) = 0;
  if (*(unsigned char *)(result + 192)) {
    goto LABEL_21;
  }
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 184);
  uint64_t v4 = v3 + v1;
  if (__OFADD__(v3, v1))
  {
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(result + 184) = 0;
  *(unsigned char *)(result + 192) = 1;
  if (v3 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)(result + 216);
  if (v5) {
    uint64_t v6 = *(void *)(result + 224) - v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6 < v4) {
    goto LABEL_19;
  }
  if (v4 < v3)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = result + 16;
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 40);
  if (!v8)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  if (v5) {
    uint64_t v9 = v5 + v3;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v5) {
    uint64_t v10 = v5 + v4;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = *(void *)(v2 + 48);
  sub_100051B64(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v10, v8, v11);
  return swift_endAccess();
}

uint64_t sub_1001E3174(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 200);
  *(void *)(result + 200) = 0;
  if (*(unsigned char *)(result + 192)) {
    goto LABEL_21;
  }
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 184);
  uint64_t v4 = v3 + v1;
  if (__OFADD__(v3, v1))
  {
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(result + 184) = 0;
  *(unsigned char *)(result + 192) = 1;
  if (v3 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)(result + 216);
  if (v5) {
    uint64_t v6 = *(void *)(result + 224) - v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6 < v4) {
    goto LABEL_19;
  }
  if (v4 < v3)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = result + 16;
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 40);
  if (!v8)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  if (v5) {
    uint64_t v9 = v5 + v3;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v5) {
    uint64_t v10 = v5 + v4;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = *(void *)(v2 + 48);
  sub_100051B64(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v10, v8, v11);
  return swift_endAccess();
}

void sub_1001E328C(uint64_t a1)
{
  sub_1001E5B00(a1);
  if (v4) {
    goto LABEL_15;
  }
  sub_1001E5B10();
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1001E5AF0();
  if (v2 < 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v1[27];
  if (v6) {
    uint64_t v7 = v1[28] - v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7 < v3) {
    goto LABEL_13;
  }
  if (v3 < v2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10008C918();
  if (v1[5])
  {
    sub_1001E5AC8();
    sub_1001E5AAC();
    uint64_t v8 = sub_1001E5A94();
    v9(v8);
    swift_endAccess();
    return;
  }
LABEL_16:
  __break(1u);
}

void sub_1001E3358(uint64_t a1)
{
  sub_1001E5B00(a1);
  if (v4) {
    goto LABEL_15;
  }
  sub_1001E5B10();
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1001E5AF0();
  if (v2 < 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v1[27];
  if (v6) {
    uint64_t v7 = v1[28] - v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7 < v3) {
    goto LABEL_13;
  }
  if (v3 < v2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10008C918();
  if (v1[5])
  {
    sub_1001E5AC8();
    sub_1001E5AAC();
    uint64_t v8 = sub_1001E5A94();
    v9(v8);
    swift_endAccess();
    return;
  }
LABEL_16:
  __break(1u);
}

void sub_1001E3424(uint64_t a1)
{
  sub_1001E5B00(a1);
  if (v4) {
    goto LABEL_15;
  }
  sub_1001E5B10();
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1001E5AF0();
  if (v2 < 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v1[27];
  if (v6) {
    uint64_t v7 = v1[28] - v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7 < v3) {
    goto LABEL_13;
  }
  if (v3 < v2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10008C918();
  if (v1[5])
  {
    sub_1001E5AC8();
    sub_1001E5AAC();
    uint64_t v8 = sub_1001E5A94();
    v9(v8);
    swift_endAccess();
    return;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1001E34F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    sub_100051B64(v2 + 16, *(void *)(v2 + 40));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, a2, v6, v7);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E3590(uint64_t result, uint64_t a2)
{
  char v3 = 5;
  uint64_t v5 = result;
  switch(*(unsigned char *)(v2 + 176))
  {
    case 1:
      goto LABEL_4;
    case 2:
      sub_1001E3358(v2);
      goto LABEL_4;
    case 3:
    case 5:
      goto LABEL_7;
    case 4:
      sub_1001E328C(v2);
LABEL_4:
      char v3 = 3;
      goto LABEL_6;
    case 6:
      sub_1001E3424(v2);
      char v3 = 5;
      goto LABEL_6;
    case 7:
LABEL_6:
      uint64_t result = sub_1001E3034(v5, a2, v3);
LABEL_7:
      uint64_t v6 = a2 - v5;
      if (!v5) {
        uint64_t v6 = 0;
      }
      uint64_t v7 = *(void *)(v2 + 200);
      BOOL v8 = __OFADD__(v7, v6);
      uint64_t v9 = v7 + v6;
      if (v8)
      {
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x1001E363CLL);
      }
      *(void *)(v2 + 200) = v9;
      return result;
    default:
      goto LABEL_12;
  }
}

uint64_t sub_1001E365C(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  switch(*(unsigned char *)(v2 + 176))
  {
    case 3:
      sub_1001E305C(v2);
      char v5 = 4;
      goto LABEL_4;
    case 4:
    case 6:
      goto LABEL_5;
    case 5:
      sub_1001E3174(v2);
      char v5 = 6;
LABEL_4:
      uint64_t result = sub_1001E3034(v4, a2, v5);
LABEL_5:
      uint64_t v6 = a2 - v4;
      if (!v4) {
        uint64_t v6 = 0;
      }
      uint64_t v7 = *(void *)(v2 + 200);
      BOOL v8 = __OFADD__(v7, v6);
      uint64_t v9 = v7 + v6;
      if (v8)
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x1001E36F8);
      }
      *(void *)(v2 + 200) = v9;
      return result;
    default:
      goto LABEL_10;
  }
}

uint64_t sub_1001E3718(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  switch(*(unsigned char *)(v2 + 176))
  {
    case 1:
      uint64_t result = sub_1001E3034(result, a2, 2);
      goto LABEL_3;
    case 2:
LABEL_3:
      uint64_t v5 = a2 - v4;
      if (!v4) {
        uint64_t v5 = 0;
      }
      uint64_t v6 = *(void *)(v2 + 200);
      BOOL v7 = __OFADD__(v6, v5);
      uint64_t v8 = v6 + v5;
      if (v7)
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x1001E379CLL);
      }
      *(void *)(v2 + 200) = v8;
      return result;
    default:
      goto LABEL_8;
  }
}

void sub_1001E37BC()
{
  if (*(unsigned char *)(v0 + 176)) {
    __break(1u);
  }
  else {
    *(unsigned char *)(v0 + 176) = 1;
  }
}

uint64_t sub_1001E37D4()
{
  int v1 = *(unsigned __int8 *)(v0 + 176);
  if (v1 != 6)
  {
    if (v1 == 7) {
      goto LABEL_5;
    }
    __break(1u);
  }
  sub_1001E3424(v0);
LABEL_5:
  *(unsigned char *)(v0 + 176) = 0;
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 40);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 48);
    sub_100051B64(v0 + 16, *(void *)(v0 + 40));
    (*(void (**)(uint64_t, uint64_t))(v4 + 64))(v3, v4);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1001E3880(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  switch(*(unsigned char *)(v6 + 176))
  {
    case 1:
      if (*(unsigned char *)(v6 + 248) == 1) {
        goto LABEL_6;
      }
      __break(1u);
LABEL_4:
      sub_1001E3358(v6);
LABEL_6:
      *(unsigned char *)(v6 + 176) = 7;
      if (*(unsigned char *)(v6 + 248) != 1)
      {
        BOOL v24 = 0;
        goto LABEL_30;
      }
      unsigned int v32 = a6;
      swift_beginAccess();
      sub_1001E2A40();
      uint64_t v15 = v14;
      swift_endAccess();
      if (!v15)
      {
        sub_1001E58BC();
        *(void *)(v6 + 240) = swift_allocError();
        swift_errorRelease();
        char v26 = 0;
        uint64_t v27 = 32;
        return v27 | ((unint64_t)(v26 & 1) << 32);
      }
      uint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      sub_10006B3D4(v17, v16);
      swift_bridgeObjectRelease();
      swift_release();
      if (HTTPMethod.rawValue.getter(v17, v16) == 1145128264 && v18 == 0xE400000000000000) {
        goto LABEL_27;
      }
      char v20 = sub_10024FA60();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_28;
      }
      if (HTTPMethod.rawValue.getter(v17, v16) == 0x5443454E4E4F43 && v21 == 0xE700000000000000)
      {
LABEL_27:
        swift_bridgeObjectRelease();
LABEL_28:
        sub_10006B3E8(v17, v16);
        BOOL v24 = 1;
        goto LABEL_29;
      }
      char v23 = sub_10024FA60();
      swift_bridgeObjectRelease();
      sub_10006B3E8(v17, v16);
      BOOL v24 = 1;
      if (v23)
      {
LABEL_29:
        a6 = v32;
        goto LABEL_30;
      }
      a6 = v32;
      if ((unint64_t)(a3 - 100) >= 0x64) {
        BOOL v24 = a3 == 204 || a3 == 304;
      }
LABEL_30:
      uint64_t v28 = v7 + 16;
      swift_beginAccess();
      uint64_t v29 = *(void *)(v7 + 40);
      if (!v29)
      {
LABEL_35:
        __break(1u);
        JUMPOUT(0x1001E3B68);
      }
      uint64_t v30 = *(void *)(v7 + 48);
      sub_100051B64(v28, v29);
      char v26 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(a1, a2, a4 & 1, a5, a3, a6, v29, v30);
      swift_endAccess();
      uint64_t v27 = 14;
      if (v26) {
        uint64_t v27 = v24;
      }
      return v27 | ((unint64_t)(v26 & 1) << 32);
    case 2:
      goto LABEL_4;
    case 4:
      sub_1001E328C(v6);
      goto LABEL_6;
    default:
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1001E3B88()
{
  long long v1 = *(_OWORD *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 72);
  char v3 = *(unsigned char *)(v0 + 88);
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(unsigned char *)(v0 + 88) = 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = v1;
    *(void *)(v0 + 72) = v2;
    *(void *)(v0 + 80) = v0;
    *(unsigned char *)(v0 + 88) = 0;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1001E3BC4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t result = *(void *)(v0 + 80);
  char v5 = *(unsigned char *)(v0 + 88);
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(unsigned char *)(v0 + 88) = 1;
  if (v5)
  {
    __break(1u);
  }
  else if (result)
  {
    uint64_t result = swift_release();
    *(void *)(v0 + 56) = v1;
    *(void *)(v0 + 64) = v2;
    *(void *)(v0 + 72) = v4;
    *(void *)(v0 + 80) = 233684719;
    *(unsigned char *)(v0 + 88) = 0;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E3C30(uint64_t a1, uint64_t a2, char a3)
{
  int v18 = 0;
  char v4 = *(unsigned char *)(v3 + 88);
  long long v5 = *(_OWORD *)(v3 + 72);
  long long v19 = *(_OWORD *)(v3 + 56);
  long long v20 = v5;
  char v21 = v4;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(unsigned char *)(v3 + 88) = 1;
  if (v4) {
LABEL_21:
  }
    __break(1u);
  sub_1001E3DC0((uint64_t)&v19, a1, a2, a3 & 1, v3, &v18, &v17);
  char v6 = v21;
  long long v7 = v20;
  *(_OWORD *)(v3 + 56) = v19;
  *(_OWORD *)(v3 + 72) = v7;
  *(unsigned char *)(v3 + 88) = v6;
  if (!v18)
  {
    if (*(unsigned char *)(v3 + 192))
    {
      uint64_t v12 = *(void *)(v3 + 208);
      uint64_t result = v12 + v17;
      if (!__OFADD__(v12, v17))
      {
        *(void *)(v3 + 208) = 0;
        return result;
      }
      __break(1u);
    }
    else
    {
      uint64_t result = *(void *)(v3 + 184);
      uint64_t v13 = v17 - result;
      if (!__OFSUB__(v17, result))
      {
        uint64_t v14 = *(void *)(v3 + 208);
        BOOL v15 = __OFADD__(v14, v13);
        uint64_t v16 = v14 + v13;
        if (!v15)
        {
          *(void *)(v3 + 208) = v16;
          *(void *)(v3 + 184) = 0;
          *(unsigned char *)(v3 + 192) = 0;
          return result;
        }
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(unsigned char *)(v3 + 236)) {
    int v8 = v18;
  }
  else {
    int v8 = *(_DWORD *)(v3 + 232);
  }
  if (v8 == 32 && *(void *)(v3 + 240))
  {
    swift_errorRetain();
    return swift_willThrow();
  }
  uint64_t result = sub_1001E3F24(v8);
  if (result != 24)
  {
    char v10 = result;
    sub_10003ACB8();
    swift_allocError();
    *uint64_t v11 = v10;
    return swift_willThrow();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E3DC0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, _DWORD *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v9 = result;
  if (a4)
  {
    swift_beginAccess();
    long long v17 = *(_OWORD *)(a5 + 112);
    long long v23 = *(_OWORD *)(a5 + 96);
    long long v24 = v17;
    long long v18 = *(_OWORD *)(a5 + 144);
    long long v25 = *(_OWORD *)(a5 + 128);
    long long v26 = v18;
    long long v27 = *(_OWORD *)(a5 + 160);
    uint64_t v16 = sub_1000037C4((unsigned int *)v9, (uint64_t)&v23, 0, 0);
LABEL_6:
    uint64_t v19 = *(void *)(v9 + 8);
    unsigned int v20 = *(_DWORD *)(v9 + 16);
    unsigned int v21 = *(_DWORD *)(v9 + 20);
    uint64_t v22 = *(void *)(v9 + 24);
    *(void *)&long long v23 = *(void *)v9;
    *((void *)&v23 + 1) = v19;
    *(void *)&long long v24 = __PAIR64__(v21, v20);
    *((void *)&v24 + 1) = v22;
    uint64_t result = sub_1001E58AC((uint64_t)&v23);
    *a6 = result;
    *a7 = v16;
    return result;
  }
  *(void *)(a5 + 216) = a2;
  *(void *)(a5 + 224) = a3;
  if (a2)
  {
    uint64_t v11 = *(void *)(a5 + 208);
    uint64_t v12 = a3 - a2 - v11;
    if (__OFSUB__(a3 - a2, v11)) {
      __break(1u);
    }
    uint64_t v13 = (unsigned __int8 *)(a2 + v11);
    swift_beginAccess();
    long long v14 = *(_OWORD *)(a5 + 112);
    long long v23 = *(_OWORD *)(a5 + 96);
    long long v24 = v14;
    long long v15 = *(_OWORD *)(a5 + 144);
    long long v25 = *(_OWORD *)(a5 + 128);
    long long v26 = v15;
    long long v27 = *(_OWORD *)(a5 + 160);
    uint64_t v16 = sub_1001E58B8((unsigned int *)v9, (uint64_t)&v23, v13, v12);
    *(int64x2_t *)(a5 + 216) = vdupq_n_s64(0xDAFBABEuLL);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E3F24(int a1)
{
  if ((a1 - 11) > 0x16) {
    return 24;
  }
  else {
    return byte_10026BC2E[a1 - 11];
  }
}

uint64_t sub_1001E3F48()
{
  sub_1001E5908(v0 + 16);
  swift_errorRelease();
  swift_release();
  return v0;
}

uint64_t sub_1001E3F78()
{
  uint64_t v0 = sub_1001E3F48();
  return _swift_deallocClassInstance(v0, 280, 7);
}

uint64_t HTTPDecoder<>.write(data:)(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (!HIBYTE(a3))
  {
    uint64_t v5 = result;
    sub_10008C918();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100030ED4(v5, a2, a3, v6, v7, v8, v9, v10, v11, v12);
    swift_endAccess();
    return sub_100039008(v5, a2, a3, 0);
  }
  return result;
}

uint64_t sub_1001E4030(uint64_t a1)
{
  return HTTPDecoder<>.write(data:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t HTTPDecoder.init(leftOverBytesStrategy:)(char a1)
{
  uint64_t v2 = v1;
  v1[2] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v4 = *v1;
  *(_OWORD *)(v1 + 3) = 0u;
  *(_OWORD *)(v1 + 5) = 0u;
  v1[7] = 0;
  *((unsigned char *)v1 + 64) = 2;
  v1[12] = 0;
  *((unsigned char *)v1 + 114) = 0;
  v1[9] = 0;
  v1[10] = 0;
  *(uint64_t *)((char *)v1 + 87) = 0;
  sub_10008C918();
  sub_1001D58A8(16);
  swift_endAccess();
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = sub_100019524(&qword_10030A518);
  if (v5 == v6)
  {
    char v8 = 0;
    goto LABEL_5;
  }
  uint64_t result = sub_100019524(&qword_10030A520);
  if (v5 == result)
  {
    char v8 = 1;
LABEL_5:
    *((unsigned char *)v2 + 113) = v8;
    type metadata accessor for BetterHTTPParser();
    swift_allocObject();
    v2[13] = sub_1001E2AFC(v5 != v6);
    *((unsigned char *)v2 + 112) = a1;
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BetterHTTPParser()
{
  return self;
}

uint64_t sub_1001E4190(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + 72);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 72);
  if (!v7) {
    goto LABEL_20;
  }
  int v8 = *(unsigned __int8 *)(v2 + 94);
  int v9 = *(unsigned __int16 *)(v2 + 92);
  uint64_t v10 = *(void *)(v2 + 80);
  uint64_t result = swift_beginAccess();
  if (HIDWORD(v10) < v10)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!a1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!*v5)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int v11 = a1 - v10 - (*(void *)(v7 + 24) + (v8 | (v9 << 8)));
  int v12 = *(_DWORD *)(v2 + 80);
  BOOL v13 = __CFADD__(v12, v11);
  unsigned int v14 = v12 + v11;
  if (v13) {
    goto LABEL_18;
  }
  if (*(_DWORD *)(v2 + 84) < v14)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_DWORD *)(v2 + 80) = v14;
  uint64_t v15 = *(void *)(v2 + 96);
  if (*(unsigned char *)(v2 + 113))
  {
    if (v15)
    {
      uint64_t result = sub_1000578C0();
      if (*v5)
      {
        swift_retain();
        uint64_t v16 = v2 + 72;
        ByteBuffer.readSlice(length:)(a2 - a1);
        sub_1001E5B40();
        long long v17 = &qword_10030A520;
LABEL_16:
        uint64_t v23 = sub_100019524(v17);
        v18[0] = a1;
        v18[1] = a2;
        int v19 = v16;
        char v21 = BYTE6(v16);
        __int16 v20 = WORD2(v16);
        char v22 = 1;
        char v24 = 2;
        ChannelHandlerContext.fireChannelRead(_:)();
        swift_release();
        return sub_10003908C((uint64_t)v18);
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    __break(1u);
    goto LABEL_26;
  }
  if (!v15)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = sub_1000578C0();
  if (*v5)
  {
    swift_retain();
    uint64_t v16 = v2 + 72;
    ByteBuffer.readSlice(length:)(a2 - a1);
    sub_1001E5B40();
    long long v17 = &qword_10030A518;
    goto LABEL_16;
  }
LABEL_27:
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_1001E4378()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10024E760();
    uint64_t v5 = v4;
    sub_10008C918();
    sub_10003461C();
    uint64_t v6 = *(void *)(v0[2] + 16);
    sub_100034934();
    uint64_t v7 = v0[2];
    *(void *)(v7 + 16) = v6 + 1;
    int v8 = (void *)(v7 + 32 * v6);
    v8[4] = v2;
    v8[5] = v1;
    v8[6] = v3;
    v8[7] = v5;
    swift_endAccess();
    v0[4] = 0;
    v0[5] = 0;
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E444C()
{
  *(void *)(v0 + 32) = sub_10024E760();
  *(void *)(v0 + 40) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E4490()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 3;
  swift_beginAccess();
  if (!v1[3])
  {
    *uint64_t v2 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1000578C0();
  if (!*v2) {
    goto LABEL_6;
  }
  uint64_t v4 = v1[5];
  if (v4)
  {
    uint64_t v5 = v1[4];
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10024E760();
    uint64_t v8 = v7;
    sub_10003461C();
    uint64_t v9 = *(void *)(*v2 + 16);
    sub_100034934();
    uint64_t v10 = *v2;
    *(void *)(v10 + 16) = v9 + 1;
    int v11 = (void *)(v10 + 32 * v9);
    v11[4] = v5;
    v11[5] = v4;
    v11[6] = v6;
    v11[7] = v8;
LABEL_6:
    swift_endAccess();
    v1[4] = 0;
    v1[5] = 0;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E45A8()
{
  *(void *)(v0 + 48) = sub_10024E760();
  *(void *)(v0 + 56) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E45EC(uint64_t result, Swift::Int a2, char a3, unsigned int a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = result;
  if (result != 1)
  {
    *(unsigned char *)(v6 + 114) = 1;
    if (*(void *)(v6 + 96))
    {
      sub_10003ACB8();
      swift_allocError();
      *uint64_t v23 = 5;
      swift_retain();
      ChannelHandlerContext.fireErrorCaught(_:)();
      swift_errorRelease();
      swift_release();
      return v8 == 1;
    }
    __break(1u);
    goto LABEL_15;
  }
  char v12 = *(unsigned char *)(v6 + 113);
  unsigned int v13 = HTTPVersion.init(major:minor:)(1, a2);
  int v14 = v13;
  if (v12)
  {
    unsigned int v15 = HIWORD(v13);
    uint64_t v16 = HTTPResponseStatus.init(statusCode:reasonPhrase:)(a5);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    sub_1001E5B20();
    uint64_t v21 = *(void *)(v7 + 16);
    type metadata accessor for HTTPResponseHead._Storage();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v16;
    *(void *)(v22 + 24) = v18;
    *(void *)(v22 + 32) = v20;
    *(_WORD *)(v22 + 40) = v14;
    *(_WORD *)(v22 + 42) = v15;
    uint64_t v36 = sub_100019524(&qword_10030A520);
    uint64_t v32 = v22;
    uint64_t v33 = v21;
    int v34 = a6;
    int v35 = 0;
    char v37 = 2;
    goto LABEL_8;
  }
  uint64_t result = sub_1001E486C(a4);
  uint64_t v25 = *(void *)(v7 + 56);
  if (v25)
  {
    uint64_t v26 = result;
    uint64_t v27 = v24;
    uint64_t v28 = *(void *)(v7 + 48);
    sub_1001E5B20();
    uint64_t v29 = *(void *)(v7 + 16);
    type metadata accessor for HTTPRequestHead._Storage();
    swift_allocObject();
    uint64_t v30 = sub_1001D7EA8(v26, v27, v28, v25, v14);
    uint64_t v36 = sub_100019524(&qword_10030A518);
    uint64_t v32 = v30;
    uint64_t v33 = v29;
    int v34 = a6;
    int v35 = 0;
    char v37 = 2;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRetain();
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0;
    swift_bridgeObjectRelease();
    sub_1000578C0();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      sub_10003ABA4();
    }
    else
    {
      *(void *)(v7 + 16) = sub_1001E59E0(0, *(void *)(*(void *)(v7 + 16) + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    uint64_t result = swift_endAccess();
    if (*(void *)(v7 + 96))
    {
      swift_retain();
      ChannelHandlerContext.fireChannelRead(_:)();
      swift_release();
      sub_10003908C((uint64_t)&v32);
      *(unsigned char *)(v7 + 64) = a3 & 1;
      return v8 == 1;
    }
LABEL_15:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E486C(unsigned int a1)
{
  if (a1 < 0x22) {
    return qword_10026BC48[a1];
  }
  sub_10024F330(25);
  v2._object = (void *)0x8000000100284350;
  v2._countAndFlagsBits = 0xD000000000000017;
  sub_10024E800(v2);
  type metadata accessor for http_method(0);
  sub_10024F5C0();
  uint64_t result = sub_10024F670();
  __break(1u);
  return result;
}

uint64_t sub_1001E4958()
{
  uint64_t v1 = v0;
  uint64_t result = swift_beginAccess();
  *(void *)(v0 + 24) = 0;
  char v3 = *(unsigned char *)(v0 + 113);
  uint64_t v4 = *(void *)(v0 + 96);
  if (v3)
  {
    if (!v4)
    {
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
    sub_100019524(&qword_10030A520);
    sub_1001E5AD8();
    swift_bridgeObjectRetain();
    swift_retain();
LABEL_6:
    ChannelHandlerContext.fireChannelRead(_:)();
    swift_release();
    uint64_t result = sub_10003908C((uint64_t)v7);
    int v5 = *(unsigned __int8 *)(v1 + 64);
    if (v5 != 2)
    {
      char v6 = v5 & 1;
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)(v1 + 114) = v6;
      *(unsigned char *)(v1 + 64) = 2;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
  if (v4)
  {
    sub_100019524(&qword_10030A518);
    sub_1001E5AD8();
    swift_retain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t HTTPDecoder.decoderAdded(context:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v0[13];
  v6[3] = v2;
  v6[4] = &off_1002EFB00;
  v6[0] = v1;
  sub_1001E4B00((uint64_t)v6, (uint64_t)v5);
  sub_1000578C0();
  swift_retain();
  sub_1001E4B68((uint64_t)v5, v3 + 16);
  swift_endAccess();
  return sub_1001E3B88();
}

uint64_t sub_1001E4B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100318648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E4B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100318648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t HTTPDecoder.decoderRemoved(context:)()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_1001E3BC4();
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  sub_1000578C0();
  sub_1001E4B68((uint64_t)v3, v1 + 16);
  return swift_endAccess();
}

uint64_t sub_1001E4C2C(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  swift_release();
  swift_retain();
  sub_1001E3C30(0, 0, 1);
  return sub_1001E4C98(v1);
}

uint64_t sub_1001E4C98(uint64_t a1)
{
  *(void *)(a1 + 96) = 0;
  return swift_release();
}

void *sub_1001E4CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  uint64_t v7 = *(unsigned __int16 *)(a2 + 20);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v9 = *(void *)a2;
  unint64_t v10 = *(void *)(a2 + 8);
  swift_beginAccess();
  *(void *)(v2 + 72) = v9;
  *(void *)(v2 + 80) = v10;
  *(unsigned char *)(v2 + 94) = v8;
  *(_WORD *)(v2 + 92) = v7;
  *(_DWORD *)(v2 + 88) = v6;
  swift_retain();
  swift_release();
  *(void *)(v2 + 96) = a1;
  swift_release();
  swift_retain();
  uint64_t result = sub_1001E2950((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1001E5A54, v2, v9, v10, v6 | (v7 << 32) | (v8 << 48));
  if (v3) {
    return (void *)sub_1001E4DB8((void *)v2);
  }
  int v12 = *(_DWORD *)(a2 + 8);
  BOOL v13 = __CFADD__(v12, result);
  unsigned int v14 = v12 + result;
  if (v13)
  {
    __break(1u);
  }
  else if (*(_DWORD *)(a2 + 12) >= v14)
  {
    *(_DWORD *)(a2 + 8) = v14;
    return (void *)sub_1001E4DB8((void *)v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E4DB8(void *a1)
{
  a1[9] = 0;
  a1[10] = 0;
  *(void *)((char *)a1 + 87) = 0;
  swift_release();
  a1[12] = 0;
  return swift_release();
}

uint64_t sub_1001E4E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1001E3C30(a1, a2, 0);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t HTTPDecoder.decode(context:buffer:)(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(v2 + 114) & 1) == 0) {
    sub_1001E4CA8(a1, a2);
  }
  return 1;
}

uint64_t HTTPDecoder.decodeLast(context:buffer:seenEOF:)(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v7 = result;
  if ((*(unsigned char *)(v3 + 114) & 1) == 0)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 8);
    unsigned int v9 = *(_DWORD *)(a2 + 12);
    if (v9 < v8) {
      goto LABEL_16;
    }
    if (v9 != v8)
    {
      uint64_t result = HTTPDecoder.decode(context:buffer:)(result, a2);
      if (v4) {
        return 1;
      }
    }
    if (a3)
    {
      uint64_t result = sub_1001E4C2C(v7);
      if (v4) {
        return 1;
      }
    }
  }
  uint64_t v10 = *(unsigned int *)(a2 + 8);
  uint64_t v11 = *(unsigned int *)(a2 + 12);
  if (v11 >= v10)
  {
    if (v11 != v10 && (a3 & 1) == 0)
    {
      if (*(unsigned char *)(v3 + 112))
      {
        if (*(unsigned char *)(v3 + 112) == 1)
        {
          uint64_t v12 = v10 | (v11 << 32);
          unint64_t v13 = *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48);
          unint64_t v14 = *(void *)a2 | 0x8000000000000000;
          sub_1000799F8();
          swift_allocError();
          *(void *)uint64_t v15 = v14;
          *(void *)(v15 + 8) = v12;
          *(void *)(v15 + 16) = v13;
          *(unsigned char *)(v15 + 30) = 0;
          *(_WORD *)(v15 + 28) = 0;
          *(_DWORD *)(v15 + 24) = 0;
          swift_retain();
          ChannelHandlerContext.fireErrorCaught(_:)();
          swift_errorRelease();
        }
      }
      else
      {
        int v16 = *(_DWORD *)(a2 + 16);
        __int16 v17 = *(_WORD *)(a2 + 20);
        uint64_t v18 = v10 | (v11 << 32);
        char v19 = *(unsigned char *)(a2 + 22);
        v20[0] = *(void *)a2;
        v20[1] = v18;
        char v23 = v19;
        __int16 v22 = v17;
        int v21 = v16;
        char v24 = 0;
        swift_retain();
        ChannelHandlerContext.fireChannelRead(_:)();
        sub_10003908C((uint64_t)v20);
      }
    }
    return 1;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t HTTPDecoder.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t HTTPDecoder.__deallocating_deinit()
{
  HTTPDecoder.deinit();
  return _swift_deallocClassInstance(v0, 115, 7);
}

uint64_t sub_1001E506C(uint64_t a1, uint64_t a2)
{
  return 1;
}

uint64_t sub_1001E5094(uint64_t a1, uint64_t a2, char a3)
{
  return 1;
}

uint64_t sub_1001E50BC()
{
  return HTTPDecoder.decoderRemoved(context:)();
}

uint64_t sub_1001E50E0()
{
  return HTTPDecoder.decoderAdded(context:)();
}

uint64_t sub_1001E5104(uint64_t a1, uint64_t a2)
{
  return sub_1001E4190(a1, a2);
}

uint64_t sub_1001E5128()
{
  return sub_1001E444C();
}

uint64_t sub_1001E514C()
{
  return sub_1001E4378();
}

uint64_t sub_1001E5170()
{
  return sub_1001E4490();
}

uint64_t sub_1001E5194()
{
  return sub_1001E45A8();
}

uint64_t sub_1001E51B8(uint64_t a1, Swift::Int a2, char a3, unsigned int a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_1001E45EC(a1, a2, a3, a4, a5, a6) & 1;
}

uint64_t sub_1001E51E0()
{
  return sub_1001E4958();
}

uint64_t NIOHTTPDecoderError.debugDescription.getter()
{
  return sub_10024E700();
}

unint64_t sub_1001E5214()
{
  unint64_t result = qword_100318650;
  if (!qword_100318650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318650);
  }
  return result;
}

unint64_t sub_1001E5260(uint64_t a1)
{
  unint64_t result = sub_1001E5288();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001E5288()
{
  unint64_t result = qword_100318678;
  if (!qword_100318678)
  {
    sub_10001B028(&qword_10030CA18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318678);
  }
  return result;
}

unint64_t sub_1001E52E0()
{
  unint64_t result = qword_1003186B8;
  if (!qword_1003186B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003186B8);
  }
  return result;
}

unint64_t sub_1001E5330()
{
  unint64_t result = qword_1003186C0;
  if (!qword_1003186C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003186C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HTTPDecoderKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E544CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for HTTPDecoderKind()
{
}

uint64_t sub_1001E5480()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HTTPDecoder()
{
  return sub_10002F7A4();
}

unsigned char *storeEnumTagSinglePayload for RemoveAfterUpgradeStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E55F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for RemoveAfterUpgradeStrategy()
{
}

void type metadata accessor for NIOHTTPDecoderError()
{
}

unsigned char *storeEnumTagSinglePayload for HTTPDecodingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E5700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPDecodingState()
{
  return &type metadata for HTTPDecodingState;
}

unsigned char *storeEnumTagSinglePayload for NIOHTTPDecoderError.BaseError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001E57D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NIOHTTPDecoderError.BaseError()
{
  return &type metadata for NIOHTTPDecoderError.BaseError;
}

unint64_t sub_1001E5810()
{
  unint64_t result = qword_1003189C8;
  if (!qword_1003189C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003189C8);
  }
  return result;
}

unint64_t sub_1001E5860()
{
  unint64_t result = qword_1003189D0;
  if (!qword_1003189D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003189D0);
  }
  return result;
}

uint64_t sub_1001E58AC(uint64_t a1)
{
  return *(unsigned char *)(a1 + 23) & 0x7F;
}

unint64_t sub_1001E58BC()
{
  unint64_t result = qword_1003189D8;
  if (!qword_1003189D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003189D8);
  }
  return result;
}

uint64_t sub_1001E5908(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_100318648);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1001E5968(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100019524((uint64_t *)&unk_10030FD80);
  unsigned int v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = (2 * ((uint64_t)(v5 - 32) / 8)) | 1;
  return v4;
}

void *sub_1001E59E0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100019524(&qword_100309300);
  unsigned int v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 32);
  return v4;
}

uint64_t sub_1001E5A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001E4E10(a1, a2, a3);
}

uint64_t sub_1001E5A70(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 20);
}

uint64_t sub_1001E5A78(uint64_t a1)
{
  return *(_DWORD *)(a1 + 20) >> 31;
}

uint64_t sub_1001E5A84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 22);
}

uint64_t sub_1001E5A94()
{
  return v0;
}

uint64_t sub_1001E5AAC()
{
  return sub_100051B64(v0, v1);
}

void sub_1001E5AF0()
{
  *(void *)(v0 + 184) = 0;
  *(unsigned char *)(v0 + 192) = 1;
}

uint64_t sub_1001E5B00(uint64_t result)
{
  *(void *)(result + 200) = 0;
  return result;
}

uint64_t sub_1001E5B20()
{
  return swift_beginAccess();
}

uint64_t sub_1001E5B40()
{
  return swift_endAccess();
}

void *sub_1001E5B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10024DB00();
  uint64_t v73 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100019524(&qword_100313A28);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v60 - v14;
  char v76 = 1;
  uint64_t v16 = *(void *)(a1 + 40);
  int v66 = *(unsigned __int8 *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_10024DB40();
  swift_bridgeObjectRelease();
  sub_1001E620C((uint64_t)v15, (uint64_t)v11);
  uint64_t v17 = sub_10024DB50();
  int v18 = sub_10001FA0C((uint64_t)v11, 1, v17);
  uint64_t v67 = v16;
  if (v18 == 1)
  {
    sub_1001E6274((uint64_t)v11);
    goto LABEL_92;
  }
  uint64_t v19 = sub_10024DB10();
  unint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v11, v17);
  if (!v19)
  {
LABEL_92:
    uint64_t v21 = 0;
    uint64_t v57 = 0;
    unint64_t v56 = 0;
LABEL_93:
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_1000F2780(v58, (uint64_t)v74);
    sub_1000457A8((uint64_t *)a1);
    sub_1001E6274((uint64_t)v15);
    char v59 = v76;
    char v75 = v76;
    *(void *)a2 = v21;
    *(unsigned char *)(a2 + 8) = v59;
    *(void *)(a2 + 16) = v57;
    *(void *)(a2 + 24) = v56;
    return memcpy((void *)(a2 + 32), v74, 0x139uLL);
  }
  uint64_t v72 = *(void *)(v19 + 16);
  if (!v72)
  {
    swift_bridgeObjectRelease();
    goto LABEL_92;
  }
  uint64_t v61 = v15;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v64 = 0;
  uint64_t v21 = 0;
  unint64_t v65 = 0;
  unint64_t v22 = 0;
  unint64_t v71 = v19 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
  uint64_t v69 = (void (**)(char *, uint64_t))(v73 + 8);
  uint64_t v70 = v73 + 16;
  v60[1] = (char *)v74 + 2;
  v60[2] = (char *)v74 + 3;
  uint64_t v68 = v19;
  while (v22 < *(void *)(v19 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v7, v71 + *(void *)(v73 + 72) * v22, v4);
    uint64_t v23 = sub_10024DAF0();
    if (v24)
    {
      uint64_t v25 = v23;
      unint64_t v26 = v24;
      uint64_t v27 = sub_10024DAE0();
      BOOL v29 = v27 == 0x746361736E617274 && v28 == 0xED000064496E6F69;
      if (!v29)
      {
        uint64_t v30 = v27;
        uint64_t v31 = v28;
        if ((sub_10024FA60() & 1) == 0)
        {
          if (v30 == 1684632935 && v31 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            (*v69)(v7, v4);
          }
          else
          {
            char v44 = sub_10024FA60();
            swift_bridgeObjectRelease();
            uint64_t v45 = sub_1001E62D4();
            v46(v45);
            if ((v44 & 1) == 0)
            {
              unint64_t result = (void *)swift_bridgeObjectRelease();
              goto LABEL_77;
            }
          }
          unint64_t result = (void *)swift_bridgeObjectRelease();
          uint64_t v64 = v25;
          unint64_t v65 = v26;
          goto LABEL_77;
        }
      }
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v34 = HIBYTE(v26) & 0xF;
      uint64_t v35 = v25 & 0xFFFFFFFFFFFFLL;
      if ((v26 & 0x2000000000000000) != 0) {
        uint64_t v36 = HIBYTE(v26) & 0xF;
      }
      else {
        uint64_t v36 = v25 & 0xFFFFFFFFFFFFLL;
      }
      if (!v36)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 0;
        char v51 = 1;
        goto LABEL_76;
      }
      if ((v26 & 0x1000000000000000) != 0)
      {
        uint64_t v38 = sub_1001A4FCC(v25, v26, 10);
        LOBYTE(v25) = v55;
        goto LABEL_73;
      }
      if ((v26 & 0x2000000000000000) == 0)
      {
        if ((v25 & 0x1000000000000000) != 0) {
          char v37 = (unsigned __int8 *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          char v37 = (unsigned __int8 *)sub_10024F3E0();
        }
        uint64_t v38 = (uint64_t)sub_1001A4F70(v37, v35);
        LOBYTE(v25) = v39 & 1;
LABEL_73:
        swift_bridgeObjectRelease();
        char v51 = v25 & 1;
        if (v25) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = v38;
        }
LABEL_76:
        uint64_t v52 = sub_1001E62D4();
        unint64_t result = (void *)v53(v52);
        char v76 = v51 & 1;
LABEL_77:
        uint64_t v19 = v68;
        goto LABEL_78;
      }
      v74[0] = v25;
      v74[1] = v26 & 0xFFFFFFFFFFFFFFLL;
      if (v25 == 43)
      {
        if (!v34) {
          goto LABEL_96;
        }
        if (v34 == 1 || (BYTE1(v25) - 48) > 9u) {
          goto LABEL_56;
        }
        uint64_t v38 = (BYTE1(v25) - 48);
        if (v34 != 2)
        {
          if ((BYTE2(v25) - 48) > 9u) {
            goto LABEL_56;
          }
          uint64_t v38 = 10 * (BYTE1(v25) - 48) + (BYTE2(v25) - 48);
          if (v34 != 3)
          {
            while (1)
            {
              sub_1001E6300();
              if (!v29 && v41) {
                goto LABEL_56;
              }
              sub_1001E62F0();
              if (!v29) {
                goto LABEL_56;
              }
              BOOL v41 = __CFADD__(10 * v38, v47);
              uint64_t v38 = 10 * v38 + v47;
              if (v41) {
                goto LABEL_56;
              }
              sub_100069330();
              if (v29) {
                goto LABEL_73;
              }
            }
          }
        }
      }
      else
      {
        if (v25 == 45)
        {
          if (!v34) {
            goto LABEL_95;
          }
          if (v34 != 1)
          {
            unsigned __int8 v40 = BYTE1(v25) - 48;
            if ((BYTE1(v25) - 48) <= 9u)
            {
              uint64_t v38 = 0;
              BOOL v41 = v40 == 0;
              unint64_t v42 = -(uint64_t)v40;
              if (!v41) {
                goto LABEL_57;
              }
              if (v34 == 2)
              {
                LOBYTE(v25) = 0;
                uint64_t v38 = v42;
                goto LABEL_73;
              }
              unsigned __int8 v49 = BYTE2(v25) - 48;
              if ((BYTE2(v25) - 48) <= 9u && is_mul_ok(v42, 0xAuLL))
              {
                unint64_t v50 = 10 * v42;
                uint64_t v38 = v50 - v49;
                if (v50 >= v49)
                {
                  if (v34 == 3) {
                    goto LABEL_72;
                  }
                  while (1)
                  {
                    sub_1001E6300();
                    if (!v29 && v41) {
                      break;
                    }
                    sub_1001E62F0();
                    if (!v29) {
                      break;
                    }
                    BOOL v41 = 10 * v38 >= (unint64_t)v54;
                    uint64_t v38 = 10 * v38 - v54;
                    if (!v41) {
                      break;
                    }
                    sub_100069330();
                    if (v29) {
                      goto LABEL_73;
                    }
                  }
                }
              }
            }
          }
LABEL_56:
          uint64_t v38 = 0;
LABEL_57:
          LOBYTE(v25) = 1;
          goto LABEL_73;
        }
        if (!v34 || (v25 - 48) > 9u) {
          goto LABEL_56;
        }
        uint64_t v38 = (v25 - 48);
        if (v34 != 1)
        {
          if ((BYTE1(v25) - 48) > 9u) {
            goto LABEL_56;
          }
          uint64_t v38 = 10 * (v25 - 48) + (BYTE1(v25) - 48);
          if (v34 != 2)
          {
            while (1)
            {
              sub_1001E6300();
              if (!v29 && v41) {
                goto LABEL_56;
              }
              sub_1001E62F0();
              if (!v29) {
                goto LABEL_56;
              }
              BOOL v41 = __CFADD__(10 * v38, v48);
              uint64_t v38 = 10 * v38 + v48;
              if (v41) {
                goto LABEL_56;
              }
              sub_100069330();
              if (v29) {
                goto LABEL_73;
              }
            }
          }
        }
      }
LABEL_72:
      LOBYTE(v25) = 0;
      goto LABEL_73;
    }
    uint64_t v32 = sub_1001E62D4();
    unint64_t result = (void *)v33(v32);
LABEL_78:
    if (++v22 == v72)
    {
      swift_bridgeObjectRelease();
      a1 = v62;
      a2 = v63;
      uint64_t v15 = v61;
      uint64_t v57 = v64;
      unint64_t v56 = v65;
      goto LABEL_93;
    }
  }
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_1001E620C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_100313A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E6274(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_100313A28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E62D4()
{
  return v0;
}

double sub_1001E6310(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_10024DCC0();
  sub_1001E6EE4();
  sub_10024DCB0();
  sub_1001E6F08();
  sub_1001E6D5C();
  uint64_t v6 = sub_10024DCA0();
  unint64_t v8 = v7;
  sub_1000473AC(v6, v7);
  sub_1001E6EFC();
  sub_1001E6ECC(v6, v8, v9, (uint64_t)v11);
  swift_release();
  sub_10003F808(v6, v8);
  sub_10003F7F4(a3, a4);
  return sub_1001E6E48();
}

double sub_1001E640C(long long *a1)
{
  uint64_t v10 = *((void *)a1 + 4);
  long long v1 = *a1;
  long long v9 = a1[1];
  long long v8 = v1;
  sub_10024DCC0();
  sub_1001E6EE4();
  sub_10024DCB0();
  sub_1001E6F08();
  sub_1001E6DA8();
  uint64_t v2 = sub_10024DCA0();
  unint64_t v4 = v3;
  sub_1000473AC(v2, v3);
  sub_1001E6EFC();
  sub_1001E6ECC(v2, v4, v5, (uint64_t)v7);
  swift_release();
  sub_10003F808(v2, v4);
  sub_1001A4FA0((uint64_t)&v8);
  sub_1001A4FA0((uint64_t)&v9);
  sub_10005D0C8((uint64_t)&v10);
  return sub_1001E6E48();
}

double sub_1001E6514@<D0>(uint64_t a1@<X8>)
{
  sub_10024DCC0();
  swift_allocObject();
  sub_10024DCB0();
  sub_10024DC90();
  sub_1001E6D10();
  uint64_t v2 = sub_10024DCA0();
  unint64_t v4 = v3;
  sub_1000473AC(v2, v3);
  sub_1000CBAF8(v2, v4, 0xD000000000000017, 0x8000000100278C50, (uint64_t)&v10);
  swift_release();
  sub_10003F808(v2, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v11;
  int v6 = v13;
  __int16 v7 = v14;
  char v8 = v15;
  double result = v12;
  *(_OWORD *)a1 = v10;
  *(void *)(a1 + 16) = v5;
  *(double *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 36) = v7;
  *(unsigned char *)(a1 + 38) = v8;
  return result;
}

double sub_1001E6654(uint64_t a1)
{
  return sub_1001E6688(a1, (void (*)(void))type metadata accessor for InAppCheckDownloadQueueCountResponse, &qword_100318AD0, (void (*)(uint64_t))type metadata accessor for InAppCheckDownloadQueueCountResponse);
}

double sub_1001E6688(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  sub_10024DCC0();
  sub_1001E6EE4();
  sub_10024DCB0();
  sub_1001E6F08();
  a2(0);
  sub_1001E6DF4(a3, a4);
  uint64_t v7 = sub_10024DCA0();
  unint64_t v9 = v8;
  sub_1000473AC(v7, v8);
  sub_1001E6EFC();
  sub_1001E6ECC(v7, v9, v10, (uint64_t)v12);
  swift_release();
  sub_10003F808(v7, v9);
  swift_release();
  return sub_1001E6E48();
}

double sub_1001E6790(uint64_t a1)
{
  return sub_1001E6688(a1, (void (*)(void))type metadata accessor for InAppPendingTransactionsResponse, &qword_100318AE0, (void (*)(uint64_t))type metadata accessor for InAppPendingTransactionsResponse);
}

double sub_1001E67C4(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  sub_10024DCC0();
  sub_1001E6EE4();
  sub_10024DCB0();
  sub_1001E6F08();
  sub_100064368();
  uint64_t v2 = sub_10024DCA0();
  unint64_t v4 = v3;
  sub_1000473AC(v2, v3);
  sub_1001E6EFC();
  sub_1001E6ECC(v2, v4, v5, (uint64_t)v8);
  swift_release();
  sub_10003F808(v2, v4);
  sub_10006382C(__src);
  return sub_1001E6E48();
}

__n128 sub_1001E68BC@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = v2;
  sub_100065878(a1);
  sub_1001E5B60((uint64_t)a1, (uint64_t)&v39);
  sub_1001E6B7C((uint64_t)&v39, (uint64_t)v49);
  sub_1001E6B7C((uint64_t)v49, (uint64_t)&v50);
  if (v51)
  {
    uint64_t done = type metadata accessor for InAppTransactionDoneResponse();
    uint64_t v18 = sub_1001E6F20(done, v11, v12, v13, v14, v15, v16, v17, v38.n128_i64[0], v38.n128_i64[1], v39, v40, v41, v42, v43, v44, v45, v46, v47);
    uint64_t v20 = sub_1000494D0(v18, v19, (uint64_t)_swiftEmptyArrayStorage);
    sub_1001E6BE4((uint64_t)&v39);
    sub_1001E6688(v20, (void (*)(void))type metadata accessor for InAppTransactionDoneResponse, &qword_100318AC0, (void (*)(uint64_t))type metadata accessor for InAppTransactionDoneResponse);
    sub_1001E6EB4();
    uint64_t v21 = 3;
LABEL_7:
    char v6 = v48[38];
    goto LABEL_8;
  }
  uint64_t v3 = v7 + 88;
  sub_10001C2A8((void *)(v7 + 88), *(void *)(v7 + 112));
  uint64_t v22 = sub_1000A0FFC();
  if (!v22)
  {
    sub_1001E6BE4((uint64_t)&v39);
    sub_1001E6514((uint64_t)v48);
    sub_1001E6EB4();
    uint64_t v21 = 25;
    goto LABEL_7;
  }
  uint64_t v23 = (void *)v22;
  uint64_t v7 = *sub_10001C2A8((void *)(v7 + 88), *(void *)(v7 + 112));
  sub_1000D6404(1);
  if (sub_1000A1278(v23, 0) == 4)
  {
    uint64_t v24 = type metadata accessor for InAppTransactionDoneResponse();
    uint64_t v32 = sub_1001E6F20(v24, v25, v26, v27, v28, v29, v30, v31, v38.n128_i64[0], v38.n128_i64[1], v39, v40, v41, v42, v43, v44, v45, v46, v47);
    sub_1000494D0(v32, v33, (uint64_t)_swiftEmptyArrayStorage);
    sub_1001E6BE4((uint64_t)&v39);
    uint64_t v34 = swift_retain();
    sub_1001E6688(v34, (void (*)(void))type metadata accessor for InAppTransactionDoneResponse, &qword_100318AC0, (void (*)(uint64_t))type metadata accessor for InAppTransactionDoneResponse);
    sub_1001E6E98();
    swift_release();

    uint64_t v21 = 3;
  }
  else
  {
    sub_1001E6BE4((uint64_t)&v39);
    sub_1001E6514((uint64_t)v48);
    sub_1001E6E98();

    uint64_t v21 = 21;
  }
LABEL_8:
  ASOctaneSupportXPCService::HTTPVersion v35 = HTTPVersion.init(major:minor:)(1, 1);
  type metadata accessor for HTTPResponseHead._Storage();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  *(void *)(v36 + 24) = 0;
  *(void *)(v36 + 32) = v21;
  *(ASOctaneSupportXPCService::HTTPVersion *)(v36 + 40) = v35;
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 16) = 2;
  __n128 result = v38;
  *(__n128 *)(a2 + 24) = v38;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v3;
  *(unsigned char *)(a2 + 62) = v6;
  *(_WORD *)(a2 + 60) = v5;
  *(_DWORD *)(a2 + 56) = v4;
  return result;
}

uint64_t type metadata accessor for InAppTransactionDoneRoute()
{
  return self;
}

uint64_t sub_1001E6B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030C9E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E6BE4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1001E6D10()
{
  unint64_t result = qword_100318AB8;
  if (!qword_100318AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318AB8);
  }
  return result;
}

unint64_t sub_1001E6D5C()
{
  unint64_t result = qword_100318AC8;
  if (!qword_100318AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318AC8);
  }
  return result;
}

unint64_t sub_1001E6DA8()
{
  unint64_t result = qword_100318AD8;
  if (!qword_100318AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318AD8);
  }
  return result;
}

uint64_t sub_1001E6DF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1001E6E48()
{
  uint64_t v2 = *(void *)(v1 + 16);
  int v3 = *(_DWORD *)(v1 + 32);
  __int16 v4 = *(_WORD *)(v1 + 36);
  char v5 = *(unsigned char *)(v1 + 38);
  double result = *(double *)(v1 + 24);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(void *)(v0 + 16) = v2;
  *(double *)(v0 + 24) = result;
  *(_DWORD *)(v0 + 32) = v3;
  *(_WORD *)(v0 + 36) = v4;
  *(unsigned char *)(v0 + 38) = v5;
  return result;
}

unint64_t sub_1001E6E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CB5C8(0, 0xE000000000000000, 6, a1);
}

__n128 sub_1001E6E98()
{
  return *(__n128 *)(v0 - 160);
}

__n128 sub_1001E6EB4()
{
  return *(__n128 *)(v0 - 160);
}

double sub_1001E6ECC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1000CBAF8(a1, a2, 0xD000000000000017, a3, a4);
}

uint64_t sub_1001E6EE4()
{
  return swift_allocObject();
}

uint64_t sub_1001E6F08()
{
  return sub_10024DC90();
}

uint64_t sub_1001E6F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return a19;
}

void *sub_1001E6F34(uint64_t a1)
{
  sub_1001538D0(a1, v38);
  uint64_t v1 = v38[0];
  unint64_t v2 = v38[4];
  uint64_t v29 = v38[1];
  int64_t v30 = (unint64_t)(v38[2] + 64) >> 6;
  int64_t v31 = v38[3];
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v3 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  unint64_t v4 = v3 | (v31 << 6);
  while (1)
  {
    char v9 = *(unsigned char *)(*(void *)(v1 + 48) + v4);
    sub_1000318C8(*(void *)(v1 + 56) + 32 * v4, (uint64_t)v36 + 8);
    LOBYTE(v36[0]) = v9;
    v34[0] = v36[0];
    v34[1] = v36[1];
    uint64_t v35 = v37;
    sub_1000318C8((uint64_t)v34 + 8, (uint64_t)v32 + 8);
    sub_10003B908((_OWORD *)((char *)v32 + 8), v33);
    unint64_t v10 = sub_100152BBC(v9);
    unint64_t v12 = v11;
    sub_1000318C8((uint64_t)v33, (uint64_t)v32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_10011ED00();
    uint64_t v16 = _swiftEmptyDictionarySingleton[2];
    BOOL v17 = (v15 & 1) == 0;
    Swift::Int v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    unint64_t v19 = v14;
    char v20 = v15;
    sub_100019524(&qword_100313718);
    if (sub_10024F630(isUniquelyReferenced_nonNull_native, v18))
    {
      unint64_t v21 = sub_10011ED00();
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_35;
      }
      unint64_t v19 = v21;
    }
    if (v20)
    {
      uint64_t v23 = (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v19);
      sub_10001C2EC((uint64_t)v23);
      sub_10003B908(v32, v23);
    }
    else
    {
      _swiftEmptyDictionarySingleton[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v24 = (unint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v19);
      *uint64_t v24 = v10;
      v24[1] = v12;
      sub_10003B908(v32, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v19));
      uint64_t v25 = _swiftEmptyDictionarySingleton[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_33;
      }
      _swiftEmptyDictionarySingleton[2] = v27;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001C2EC((uint64_t)v33);
    sub_1000DC380((uint64_t)v34, &qword_100313720);
    if (v2) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v5 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_34;
    }
    if (v5 >= v30) {
      goto LABEL_31;
    }
    unint64_t v6 = *(void *)(v29 + 8 * v5);
    int64_t v7 = v31 + 1;
    if (!v6)
    {
      int64_t v7 = v31 + 2;
      if (v31 + 2 >= v30) {
        goto LABEL_31;
      }
      unint64_t v6 = *(void *)(v29 + 8 * v7);
      if (!v6)
      {
        int64_t v7 = v31 + 3;
        if (v31 + 3 >= v30) {
          goto LABEL_31;
        }
        unint64_t v6 = *(void *)(v29 + 8 * v7);
        if (!v6)
        {
          int64_t v7 = v31 + 4;
          if (v31 + 4 >= v30) {
            goto LABEL_31;
          }
          unint64_t v6 = *(void *)(v29 + 8 * v7);
          if (!v6)
          {
            int64_t v7 = v31 + 5;
            if (v31 + 5 >= v30) {
              goto LABEL_31;
            }
            unint64_t v6 = *(void *)(v29 + 8 * v7);
            if (!v6)
            {
              int64_t v7 = v31 + 6;
              if (v31 + 6 >= v30) {
                goto LABEL_31;
              }
              unint64_t v6 = *(void *)(v29 + 8 * v7);
              if (!v6)
              {
                int64_t v8 = v31 + 7;
                while (v8 < v30)
                {
                  unint64_t v6 = *(void *)(v29 + 8 * v8++);
                  if (v6)
                  {
                    int64_t v7 = v8 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_31:
                swift_release();
                return _swiftEmptyDictionarySingleton;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v2 = (v6 - 1) & v6;
    unint64_t v4 = __clz(__rbit64(v6)) + (v7 << 6);
    int64_t v31 = v7;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  double result = (void *)sub_10024FB70();
  __break(1u);
  return result;
}

void *sub_1001E7294(uint64_t a1)
{
  sub_1001538D0(a1, v32);
  uint64_t v1 = v32[0];
  int64_t v31 = v32[3];
  unint64_t v2 = v32[4];
  uint64_t v29 = v32[1];
  int64_t v30 = (unint64_t)(v32[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v3 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  unint64_t v4 = v3 | (v31 << 6);
  while (1)
  {
    uint64_t v9 = *(void *)(*(void *)(v1 + 56) + 8 * v4);
    unint64_t v10 = sub_100152BBC(*(unsigned char *)(*(void *)(v1 + 48) + v4));
    unint64_t v12 = v11;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_10011ED00();
    uint64_t v16 = _swiftEmptyDictionarySingleton[2];
    BOOL v17 = (v15 & 1) == 0;
    Swift::Int v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    unint64_t v19 = v14;
    char v20 = v15;
    sub_100019524(&qword_100318AF8);
    if (sub_10024F630(isUniquelyReferenced_nonNull_native, v18))
    {
      unint64_t v21 = sub_10011ED00();
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_35;
      }
      unint64_t v19 = v21;
    }
    if (v20)
    {
      uint64_t v23 = _swiftEmptyDictionarySingleton[7];
      swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v19) = v9;
    }
    else
    {
      _swiftEmptyDictionarySingleton[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v24 = (unint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v19);
      *uint64_t v24 = v10;
      v24[1] = v12;
      *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v19) = v9;
      uint64_t v25 = _swiftEmptyDictionarySingleton[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_33;
      }
      _swiftEmptyDictionarySingleton[2] = v27;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v5 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_34;
    }
    if (v5 >= v30) {
      goto LABEL_31;
    }
    unint64_t v6 = *(void *)(v29 + 8 * v5);
    int64_t v7 = v31 + 1;
    if (!v6)
    {
      int64_t v7 = v31 + 2;
      if (v31 + 2 >= v30) {
        goto LABEL_31;
      }
      unint64_t v6 = *(void *)(v29 + 8 * v7);
      if (!v6)
      {
        int64_t v7 = v31 + 3;
        if (v31 + 3 >= v30) {
          goto LABEL_31;
        }
        unint64_t v6 = *(void *)(v29 + 8 * v7);
        if (!v6)
        {
          int64_t v7 = v31 + 4;
          if (v31 + 4 >= v30) {
            goto LABEL_31;
          }
          unint64_t v6 = *(void *)(v29 + 8 * v7);
          if (!v6)
          {
            int64_t v7 = v31 + 5;
            if (v31 + 5 >= v30) {
              goto LABEL_31;
            }
            unint64_t v6 = *(void *)(v29 + 8 * v7);
            if (!v6)
            {
              int64_t v7 = v31 + 6;
              if (v31 + 6 >= v30) {
                goto LABEL_31;
              }
              unint64_t v6 = *(void *)(v29 + 8 * v7);
              if (!v6)
              {
                int64_t v8 = v31 + 7;
                while (v8 < v30)
                {
                  unint64_t v6 = *(void *)(v29 + 8 * v8++);
                  if (v6)
                  {
                    int64_t v7 = v8 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_31:
                swift_release();
                return _swiftEmptyDictionarySingleton;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v2 = (v6 - 1) & v6;
    unint64_t v4 = __clz(__rbit64(v6)) + (v7 << 6);
    int64_t v31 = v7;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  double result = (void *)sub_10024FB70();
  __break(1u);
  return result;
}

void sub_1001E7578(uint64_t a1, char a2)
{
  sub_10007A6EC(a1, (uint64_t)v14, (uint64_t *)&unk_100319510);
  uint64_t v4 = v15;
  if (v15)
  {
    sub_10001C2A8(v14, v15);
    sub_10002F9C8();
    uint64_t v6 = v5;
    __chkstk_darwin(v7, v8);
    sub_10002059C();
    uint64_t v11 = v10 - v9;
    (*(void (**)(uint64_t))(v6 + 16))(v10 - v9);
    uint64_t v12 = sub_10024FA50();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
    sub_10001C2EC((uint64_t)v14);
  }
  else
  {
    uint64_t v12 = 0;
  }
  sub_100152BBC(a2);
  NSString v13 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  [v2 setValue:v12 forProperty:v13];
  swift_unknownObjectRelease();
}

void *sub_1001E76BC(uint64_t a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t a6, uint64_t a7, char a8, char a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, unsigned __int8 a15, uint64_t a16, char a17, uint64_t a18, char a19, char a20,char a21,unsigned __int8 a22,unsigned __int8 a23,uint64_t a24,unint64_t a25,uint64_t a26,char a27,char a28,uint64_t a29,uint64_t *a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,char a36,uint64_t a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,char a48,uint64_t a49,uint64_t a50,char a51)
{
  uint64_t v58 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v58 - 8, v59);
  sub_1001EADB8();
  __chkstk_darwin(v60, v61);
  sub_1001EADB8();
  __chkstk_darwin(v62, v63);
  sub_1000ACD10();
  sub_10011874C(v64);
  uint64_t v65 = sub_10024E030();
  sub_10002F9C8();
  uint64_t v183 = v66;
  __chkstk_darwin(v67, v68);
  sub_1000AC748();
  sub_1001EADB8();
  __chkstk_darwin(v69, v70);
  sub_1000ACA68();
  sub_1001EADB8();
  __chkstk_darwin(v71, v72);
  sub_1000ACD10();
  sub_10011874C(v73);
  uint64_t v74 = sub_100019524(&qword_10030C100);
  __chkstk_darwin(v74 - 8, v75);
  sub_10002059C();
  uint64_t v78 = v77 - v76;
  uint64_t v186 = sub_10024E0A0();
  sub_10002F9C8();
  uint64_t v179 = v79;
  __chkstk_darwin(v80, v81);
  sub_10002059C();
  sub_10011874C(v83 - v82);
  if (a2)
  {
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = a1;
    unint64_t v190 = a2;
    uint64_t v84 = sub_1001EADDC();
    sub_1002055E0(v84, 2);
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v191 = &type metadata for UInt;
    uint64_t v189 = a3;
    uint64_t v85 = sub_1001EADDC();
    sub_1002055E0(v85, 7);
  }
  if (a6)
  {
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = a5;
    unint64_t v190 = a6;
    uint64_t v86 = sub_1001EADDC();
    sub_1002055E0(v86, 9);
  }
  if ((a8 & 1) == 0)
  {
    uint64_t v191 = &type metadata for Double;
    uint64_t v189 = a7;
    uint64_t v87 = sub_1001EADDC();
    sub_1002055E0(v87, 11);
  }
  if (a9 != 4)
  {
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = 0x62616D75736E6F43;
    unint64_t v190 = 0xEA0000000000656CLL;
    uint64_t v88 = sub_1001EADDC();
    sub_1002055E0(v88, 16);
  }
  if (a10 != 4)
  {
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = 7959874;
    unint64_t v190 = 0xE300000000000000;
    uint64_t v89 = sub_1001EADDC();
    sub_1002055E0(v89, 0);
  }
  if ((a12 & 1) == 0)
  {
    uint64_t v191 = &type metadata for UInt;
    uint64_t v189 = a11;
    uint64_t v90 = sub_1001EADDC();
    sub_1002055E0(v90, 8);
  }
  if ((a14 & 1) == 0)
  {
    uint64_t v191 = &type metadata for Double;
    uint64_t v189 = a13;
    uint64_t v91 = sub_1001EADDC();
    sub_1002055E0(v91, 12);
  }
  if (a15 != 3)
  {
    uint64_t v191 = &type metadata for Int;
    uint64_t v189 = a15 - 1;
    uint64_t v92 = sub_1001EADDC();
    sub_1002055E0(v92, 1);
  }
  if ((a17 & 1) == 0)
  {
    uint64_t v191 = &type metadata for Double;
    uint64_t v189 = a16;
    uint64_t v93 = sub_1001EADDC();
    sub_1002055E0(v93, 3);
  }
  if ((a19 & 1) == 0)
  {
    uint64_t v191 = &type metadata for Double;
    uint64_t v189 = a18;
    uint64_t v94 = sub_1001EADDC();
    sub_1002055E0(v94, 4);
  }
  if (a20 != 2)
  {
    uint64_t v191 = &type metadata for Bool;
    LOBYTE(v189) = a20 & 1;
    uint64_t v95 = sub_1001EADDC();
    sub_1002055E0(v95, 5);
  }
  if (a21 != 2)
  {
    uint64_t v191 = &type metadata for Bool;
    LOBYTE(v189) = a21 & 1;
    uint64_t v96 = sub_1001EADDC();
    sub_1002055E0(v96, 6);
  }
  if (a22 != 22)
  {
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = sub_100098EB0(a22);
    unint64_t v190 = v97;
    uint64_t v98 = sub_1001EADDC();
    sub_1002055E0(v98, 10);
  }
  if (a23 != 5)
  {
    uint64_t v191 = &type metadata for Int;
    uint64_t v189 = a23;
    uint64_t v99 = sub_1001EADDC();
    sub_1002055E0(v99, 14);
  }
  if (a25)
  {
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = a24;
    unint64_t v190 = a25;
    uint64_t v100 = sub_1001EADDC();
    sub_1002055E0(v100, 15);
  }
  if ((a27 & 1) == 0)
  {
    uint64_t v191 = &type metadata for Int;
    uint64_t v189 = a26;
    uint64_t v101 = sub_1001EADDC();
    sub_1002055E0(v101, 13);
  }
  if (a28 != 2)
  {
    uint64_t v191 = &type metadata for Bool;
    LOBYTE(v189) = a28 & 1;
    uint64_t v102 = sub_1001EADDC();
    sub_1002055E0(v102, 17);
  }
  sub_1000DBF98(a29, (uint64_t)v192, &qword_10030FC28);
  if (v193 != 255)
  {
    sub_1000CE8A4(v192, (uint64_t)v194);
    uint64_t v103 = sub_1000D9C38();
    unint64_t v105 = v104;
    sub_1000E20D4(a29);
    uint64_t v191 = &type metadata for String;
    uint64_t v189 = v103;
    unint64_t v190 = v105;
    uint64_t v106 = sub_1001EADDC();
    sub_1002055E0(v106, 18);
  }
  sub_1000DBF98((uint64_t)a30, (uint64_t)&v189, &qword_100309EA0);
  if (v190)
  {
    sub_1001EB0C4(v189);
    *(void *)(v108 - 256) = v107;
    swift_bridgeObjectRetain();
    uint64_t v109 = sub_1001EADF4();
    sub_1002055E0(v109, 20);
    sub_1000DC3D8(a30);
  }
  if ((a32 & 1) == 0)
  {
    uint64_t v110 = sub_1001EADC8(a31);
    sub_1002055E0(v110, 21);
  }
  sub_10007A6EC(a33, v78, &qword_10030C100);
  sub_1001187A0(v78, 1, v186);
  if (v111)
  {
    sub_1000DC380(v78, &qword_10030C100);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 32))(v178, v78, v186);
    uint64_t v187 = sub_10024E050();
    unint64_t v188 = v112;
    uint64_t v113 = sub_1001EADF4();
    sub_1002055E0(v113, 22);
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v178, v186);
  }
  if ((a35 & 1) == 0)
  {
    uint64_t v114 = sub_1001EADC8(a34);
    sub_1002055E0(v114, 23);
  }
  if (a36 != 2)
  {
    LOBYTE(v187) = a36 & 1;
    uint64_t v115 = sub_1001EADF4();
    sub_1002055E0(v115, 24);
  }
  if ((a38 & 1) == 0)
  {
    uint64_t v116 = sub_1001EADC8(a37);
    sub_1002055E0(v116, 25);
  }
  if (a39 != 2)
  {
    uint64_t v117 = 3157553;
    if (a39) {
      uint64_t v117 = 3157554;
    }
    uint64_t v187 = v117;
    unint64_t v188 = 0xE300000000000000;
    uint64_t v118 = sub_1001EADF4();
    sub_1002055E0(v118, 26);
  }
  if (a40 != 2)
  {
    uint64_t v119 = sub_1001EADC8(a40 & 1);
    sub_1002055E0(v119, 27);
  }
  if (a42)
  {
    sub_1001EB0C4(a41);
    *(void *)(v120 - 256) = a42;
    uint64_t v121 = sub_1001EADF4();
    sub_1002055E0(v121, 28);
  }
  uint64_t v122 = a45;
  sub_10007A6EC(a43, v181, (uint64_t *)&unk_10030FD70);
  sub_1001187A0(v181, 1, v65);
  if (v111)
  {
    sub_1000DC380(v181, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    uint64_t v123 = sub_1001EAFDC();
    v124(v123);
    sub_10024DF70();
    uint64_t v187 = v125;
    uint64_t v126 = sub_1001EADF4();
    sub_1002055E0(v126, 30);
    uint64_t v127 = sub_1001EB030();
    v128(v127);
  }
  sub_10007A6EC(a44, v182, (uint64_t *)&unk_10030FD70);
  sub_1001187A0(v182, 1, v65);
  if (v111)
  {
    sub_1000DC380(v182, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    uint64_t v129 = sub_1001EAFDC();
    v130(v129);
    sub_10024DF70();
    uint64_t v187 = v131;
    uint64_t v132 = sub_1001EADF4();
    sub_1002055E0(v132, 29);
    uint64_t v133 = sub_1001EB030();
    v134(v133);
  }
  sub_10007A6EC(a45, v184, (uint64_t *)&unk_10030FD70);
  sub_1001187A0(v184, 1, v65);
  if (v111)
  {
    sub_1000DC380(v184, (uint64_t *)&unk_10030FD70);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 32))(v180, v184, v65);
    sub_10024DF70();
    uint64_t v187 = v135;
    uint64_t v136 = sub_1001EADF4();
    sub_1002055E0(v136, 33);
    (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v180, v65);
  }
  uint64_t v137 = a33;
  if ((a47 & 1) == 0)
  {
    uint64_t v138 = sub_1001EADC8(a46);
    sub_1002055E0(v138, 31);
  }
  if (a48 != 5)
  {
    uint64_t v139 = sub_1001EADC8(qword_10026BEB0[a48]);
    sub_1002055E0(v139, 32);
  }
  char v140 = a51;
  if (a49)
  {
    uint64_t v141 = *(void *)(a49 + 16);
    if (v141)
    {
      sub_1000389BC();
      uint64_t v142 = (unsigned __int8 *)(a49 + 64);
      do
      {
        uint64_t v144 = *((void *)v142 - 4);
        uint64_t v143 = *((void *)v142 - 3);
        uint64_t v146 = *((void *)v142 - 2);
        uint64_t v145 = (void *)*((void *)v142 - 1);
        int v147 = *v142;
        v142 += 40;
        switch(v147)
        {
          case 1:
            uint64_t v157 = sub_1001EAF2C(0x3A636F686461);
            sub_1000AC290(v157, v158, v159, v160, 1u);
            sub_1001EAED4();
            v195._countAndFlagsBits = 58;
            v195._object = (void *)0xE100000000000000;
            sub_10024E800(v195);
            v196._countAndFlagsBits = v146;
            v196._object = v145;
            sub_10024E800(v196);
            uint64_t v152 = v144;
            uint64_t v153 = v143;
            uint64_t v154 = v146;
            uint64_t v155 = (uint64_t)v145;
            unsigned __int8 v156 = 1;
            break;
          case 2:
            uint64_t v187 = 0x3A65646F63;
            uint64_t v161 = sub_1001EAE44(0xE500000000000000);
            sub_1000AC290(v161, v162, v163, v164, 2u);
            sub_1001EAED4();
            v197._countAndFlagsBits = 58;
            v197._object = (void *)0xE100000000000000;
            sub_10024E800(v197);
            v198._countAndFlagsBits = v146;
            v198._object = v145;
            sub_10024E800(v198);
            uint64_t v152 = v144;
            uint64_t v153 = v143;
            uint64_t v154 = v146;
            uint64_t v155 = (uint64_t)v145;
            unsigned __int8 v156 = 2;
            break;
          case 3:
            uint64_t v187 = 0x3A6B6361626E6977;
            uint64_t v165 = sub_1001EAE44(0xE800000000000000);
            sub_1000AC290(v165, v166, v167, v168, 3u);
            sub_1001EAED4();
            v199._countAndFlagsBits = 58;
            v199._object = (void *)0xE100000000000000;
            sub_10024E800(v199);
            v200._countAndFlagsBits = v146;
            v200._object = v145;
            sub_10024E800(v200);
            uint64_t v152 = v144;
            uint64_t v153 = v143;
            uint64_t v154 = v146;
            uint64_t v155 = (uint64_t)v145;
            unsigned __int8 v156 = 3;
            break;
          case 4:
            uint64_t v187 = 979661939;
            uint64_t v169 = sub_1001EAE44(0xE400000000000000);
            sub_1000AC290(v169, v170, v171, v172, 4u);
            sub_1001EAED4();
            uint64_t v152 = v144;
            uint64_t v153 = v143;
            uint64_t v154 = v146;
            uint64_t v155 = (uint64_t)v145;
            unsigned __int8 v156 = 4;
            break;
          default:
            uint64_t v148 = sub_1001EAF2C(0x3A6F72746E69);
            sub_1000AC290(v148, v149, v150, v151, 0);
            sub_1001EAED4();
            uint64_t v152 = v144;
            uint64_t v153 = v143;
            uint64_t v154 = v146;
            uint64_t v155 = (uint64_t)v145;
            unsigned __int8 v156 = 0;
            break;
        }
        sub_1000AC2FC(v152, v153, v154, v155, v156);
        unint64_t v173 = _swiftEmptyArrayStorage[2];
        if (v173 >= _swiftEmptyArrayStorage[3] >> 1) {
          sub_1000389BC();
        }
        _swiftEmptyArrayStorage[2] = v173 + 1;
        uint64_t v174 = (char *)&_swiftEmptyArrayStorage[2 * v173];
        *((void *)v174 + 4) = v187;
        *((void *)v174 + 5) = v188;
        --v141;
      }
      while (v141);
      swift_bridgeObjectRelease();
      uint64_t v137 = a33;
      char v140 = a51;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100019524(&qword_100309410);
    uint64_t v175 = sub_1001EADF4();
    sub_1002055E0(v175, 19);
    uint64_t v122 = a45;
  }
  if ((v140 & 1) == 0)
  {
    uint64_t v176 = sub_1001EADC8(a50);
    sub_1002055E0(v176, 34);
  }
  sub_1000DC380(v122, (uint64_t *)&unk_10030FD70);
  sub_1000DC380(a44, (uint64_t *)&unk_10030FD70);
  sub_1000DC380(a43, (uint64_t *)&unk_10030FD70);
  sub_1000DC380(v137, &qword_10030C100);
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1001E8464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1001E6F34(a1);
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v28 = a4;
    sub_1001EB130();
    uint64_t v9 = (char *)(a2 + 32);
    do
    {
      char v10 = *v9++;
      unint64_t v11 = sub_100152BBC(v10);
      uint64_t v13 = v12;
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      if (v14 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1000389BC();
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      _OWORD v15[4] = v11;
      v15[5] = v13;
      --v8;
    }
    while (v8);
    a4 = v28;
  }
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    sub_1001EB130();
    BOOL v17 = (char *)(a3 + 32);
    do
    {
      char v18 = *v17++;
      unint64_t v19 = sub_100152BBC(v18);
      uint64_t v21 = v20;
      unint64_t v22 = _swiftEmptyArrayStorage[2];
      if (v22 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1000389BC();
      }
      _swiftEmptyArrayStorage[2] = v22 + 1;
      uint64_t v23 = &_swiftEmptyArrayStorage[2 * v22];
      v23[4] = v19;
      v23[5] = v21;
      --v16;
    }
    while (v16);
  }
  uint64_t v24 = sub_1001E7294(a4);
  sub_1001EA54C((uint64_t)v7, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v24);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v26;
}

void *sub_1001E8600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v329 = a8;
  uint64_t v328 = a7;
  uint64_t v341 = a3;
  uint64_t v40 = sub_100019524((uint64_t *)&unk_10030FD70);
  uint64_t v41 = sub_10003C680(v40);
  uint64_t v330 = v42;
  __chkstk_darwin(v41, v43);
  sub_1001EADB8();
  uint64_t v46 = __chkstk_darwin(v44, v45);
  unint64_t v48 = (unint64_t)v327 - v47;
  __chkstk_darwin(v46, v49);
  sub_1001EADB8();
  __chkstk_darwin(v50, v51);
  sub_1000ACA68();
  sub_1001EADB8();
  __chkstk_darwin(v52, v53);
  sub_1000ACA68();
  sub_1001EADB8();
  __chkstk_darwin(v54, v55);
  sub_1000ACA68();
  sub_1001EADB8();
  __chkstk_darwin(v56, v57);
  sub_1000ACA68();
  sub_1001EADB8();
  uint64_t v60 = __chkstk_darwin(v58, v59);
  uint64_t v62 = (char *)v327 - v61;
  __chkstk_darwin(v60, v63);
  sub_1000ACD10();
  sub_10011874C(v64);
  uint64_t v65 = sub_100019524(&qword_10030C100);
  uint64_t v66 = sub_10003C680(v65);
  v327[1] = v67;
  __chkstk_darwin(v66, v68);
  sub_1000AC748();
  sub_1001EADB8();
  uint64_t v71 = __chkstk_darwin(v69, v70);
  uint64_t v73 = (char *)v327 - v72;
  __chkstk_darwin(v71, v74);
  sub_1000ACD10();
  sub_10011874C(v75);
  sub_100019524(&qword_100318B00);
  v327[2] = sub_1000AC21C();
  uint64_t v76 = sub_10024E510();
  uint64_t v77 = v76;
  if (a1)
  {
    sub_10007CB4C(a1);
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = v77;
    uint64_t v78 = sub_1001EAD8C();
    sub_10020D400(v78, 2, v79);
    sub_1001EAD98();
  }
  else
  {
    v337 = (void *)v76;
  }
  sub_1001EAE38();
  if (a2)
  {
    sub_10007CC30(a2);
    sub_1001EAEF0();
    sub_1001EAE1C();
    uint64_t v80 = sub_1001EAD78();
    sub_10020D400(v80, 7, v81);
    sub_1001EAD98();
  }
  if (v341)
  {
    sub_10007CB4C(v341);
    swift_bridgeObjectRelease();
    sub_1001EAE1C();
    uint64_t v82 = sub_1001EAD78();
    sub_10020D400(v82, 9, v83);
    sub_1001EAD98();
  }
  uint64_t v341 = v48;
  v340 = v62;
  v339 = v73;
  if (a4)
  {
    sub_10007CC3C(a4);
    swift_bridgeObjectRelease();
    sub_1001EAE1C();
    uint64_t v84 = sub_1001EAD78();
    sub_10020D400(v84, 11, v85);
    sub_1001EAD98();
  }
  uint64_t v86 = &type metadata for String;
  if (a5)
  {
    uint64_t v87 = *(void *)(a5 + 16);
    if (v87)
    {
      uint64_t v77 = 0xEA00000000006461;
      sub_1001EB064((uint64_t)_swiftEmptyArrayStorage);
      unint64_t v48 = 0;
      uint64_t v88 = v353;
      unint64_t v332 = (unint64_t)"Consumable";
      unint64_t v331 = (unint64_t)"NonRenewingSubscription";
      while (2)
      {
        unint64_t v89 = 0xEA0000000000656CLL;
        unint64_t v90 = 0x62616D75736E6F43;
        switch(*(unsigned char *)(a5 + v48 + 32))
        {
          case 1:
            sub_1001EAF08();
            goto LABEL_18;
          case 2:
            unint64_t v90 = 0xD000000000000017;
            unint64_t v89 = v332 | 0x8000000000000000;
            goto LABEL_18;
          case 3:
            unint64_t v89 = v331 | 0x8000000000000000;
            unint64_t v90 = 0xD000000000000015;
            goto LABEL_18;
          case 4:
            sub_1001EADE8();
            goto LABEL_19;
          default:
LABEL_18:
            v351 = &type metadata for String;
            uint64_t v348 = v90;
            unint64_t v349 = v89;
LABEL_19:
            v353 = v88;
            unint64_t v91 = v88[2];
            if (v91 >= v88[3] >> 1)
            {
              sub_1001EAEB0();
              uint64_t v88 = v353;
            }
            ++v48;
            v88[2] = v91 + 1;
            sub_1000DBF98((uint64_t)&v348, (uint64_t)&v88[4 * v91 + 4], (uint64_t *)&unk_100319510);
            uint64_t v86 = &type metadata for String;
            if (v87 != v48) {
              continue;
            }
            swift_bridgeObjectRelease();
            sub_1001EAE38();
            break;
        }
        break;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1001EAE1C();
    uint64_t v92 = sub_1001EAD78();
    sub_10020D400(v92, 16, v93);
    sub_1001EAD98();
  }
  uint64_t v94 = v328;
  if (a6)
  {
    uint64_t v95 = *(void *)(a6 + 16);
    if (v95)
    {
      sub_1001EAE8C((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v77 = 0;
      uint64_t v96 = v353;
      while (2)
      {
        unint64_t v97 = 0xE300000000000000;
        uint64_t v98 = 7959874;
        switch(*(unsigned char *)(a6 + v77 + 32))
        {
          case 1:
            sub_1000DDA5C();
            goto LABEL_33;
          case 2:
            sub_1001EAFF8();
            goto LABEL_33;
          case 3:
            sub_1000DD7A0();
            goto LABEL_33;
          case 4:
            sub_1001EADE8();
            goto LABEL_34;
          default:
LABEL_33:
            v351 = &type metadata for String;
            uint64_t v348 = v98;
            unint64_t v349 = v97;
LABEL_34:
            v353 = v96;
            unint64_t v48 = v96[2];
            if (v48 >= v96[3] >> 1)
            {
              sub_1001EAEB0();
              uint64_t v96 = v353;
            }
            ++v77;
            v96[2] = v48 + 1;
            sub_1000DBF98((uint64_t)&v348, (uint64_t)&v96[4 * v48 + 4], (uint64_t *)&unk_100319510);
            if (v95 != v77) {
              continue;
            }
            swift_bridgeObjectRelease();
            sub_1001EAE38();
            break;
        }
        break;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v96 = _swiftEmptyArrayStorage;
    }
    uint64_t v100 = (uint64_t)v337;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = v100;
    sub_10020D400((uint64_t)v96, 0, isUniquelyReferenced_nonNull_native);
    uint64_t v99 = (void *)v348;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v99 = v337;
  }
  uint64_t v102 = v329;
  if (v94)
  {
    sub_10007CC30(v94);
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v103 = sub_1001EAD78();
    sub_10020D400(v103, 8, v104);
    uint64_t v99 = (void *)v348;
    swift_bridgeObjectRelease();
  }
  if (v102)
  {
    sub_10007CC3C(v102);
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v105 = sub_1001EAD78();
    sub_10020D400(v105, 12, v106);
    sub_1001EAFC4();
  }
  else
  {
    uint64_t v86 = v99;
  }
  if (a9)
  {
    uint64_t v107 = *(void *)(a9 + 16);
    if (v107)
    {
      sub_1001EAE8C((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v77 = 0;
      uint64_t v108 = v353;
      do
      {
        uint64_t v109 = *(unsigned __int8 *)(a9 + v77 + 32);
        if (v109 == 3) {
          sub_1001EADE8();
        }
        else {
          sub_1001EB0F4(v109 - 1);
        }
        v353 = v108;
        unint64_t v48 = v108[2];
        if (v48 >= v108[3] >> 1)
        {
          sub_1001EAEB0();
          uint64_t v108 = v353;
        }
        ++v77;
        v108[2] = v48 + 1;
        sub_1000DBF98((uint64_t)&v348, (uint64_t)&v108[4 * v48 + 4], (uint64_t *)&unk_100319510);
      }
      while (v107 != v77);
      swift_bridgeObjectRelease();
      sub_1001EAE38();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v108 = _swiftEmptyArrayStorage;
    }
    char v110 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v86;
    sub_10020D400((uint64_t)v108, 1, v110);
    sub_1001EAFC4();
  }
  if (a10)
  {
    char v111 = sub_10007CC3C(a10);
    swift_bridgeObjectRelease();
    char v112 = sub_1001EB0DC();
    uint64_t v348 = (uint64_t)v86;
    sub_10020D400((uint64_t)v111, 3, v112);
    sub_1001EAF9C();
  }
  else
  {
    unint64_t v48 = (unint64_t)v86;
  }
  uint64_t v113 = (long long *)&type metadata for String;
  if (a11)
  {
    sub_10007CC3C(a11);
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v114 = sub_1001EB150();
    sub_10020D400(v114, 4, v115);
    sub_1001EAF9C();
  }
  if (a12)
  {
    sub_10007CC48(a12);
    swift_bridgeObjectRelease();
    sub_1001EB0AC();
    uint64_t v116 = sub_1001EB150();
    sub_10020D400(v116, 5, v117);
    sub_1001EAF9C();
  }
  if (a13)
  {
    uint64_t v118 = sub_10007CC48(a13);
    swift_bridgeObjectRelease();
    char v119 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = v48;
    sub_10020D400((uint64_t)v118, 6, v119);
    sub_1001EAF9C();
  }
  if (a14)
  {
    uint64_t v120 = *(void *)(a14 + 16);
    if (v120)
    {
      sub_1001EB064((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v121 = 0;
      while (2)
      {
        uint64_t v122 = *(unsigned __int8 *)(a14 + v121 + 32);
        unint64_t v123 = 0xE000000000000000;
        switch(*(unsigned char *)(a14 + v121 + 32))
        {
          case 1:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 808529970;
            goto LABEL_93;
          case 2:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 942878771;
            goto LABEL_93;
          case 3:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 858862899;
            goto LABEL_93;
          case 4:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 842216755;
            goto LABEL_93;
          case 5:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 892352307;
            goto LABEL_93;
          case 6:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 808597299;
            goto LABEL_93;
          case 7:
            unint64_t v123 = 0xE300000000000000;
            uint64_t v122 = 3616825;
            goto LABEL_93;
          case 8:
            unint64_t v123 = 0xE300000000000000;
            uint64_t v122 = 3223861;
            goto LABEL_93;
          case 9:
            uint64_t v122 = 3617589;
            goto LABEL_85;
          case 0xA:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 875900977;
            goto LABEL_93;
          case 0xB:
            unint64_t v123 = 0xE300000000000000;
            uint64_t v122 = 3485749;
            goto LABEL_93;
          case 0xC:
            uint64_t v122 = 3289397;
LABEL_85:
            unint64_t v123 = 0xE300000000000000;
            goto LABEL_93;
          case 0xD:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 808792113;
            goto LABEL_93;
          case 0xE:
            sub_1001EB0A0();
            uint64_t v122 = v125 | 0x34300000u;
            goto LABEL_93;
          case 0xF:
            sub_1001EB0A0();
            uint64_t v122 = v126 | 0x30300000u;
            goto LABEL_93;
          case 0x10:
            sub_1001EB0A0();
            uint64_t v122 = v124 | 0x31300000u;
            goto LABEL_93;
          case 0x11:
            sub_1001EB0A0();
            uint64_t v122 = v127 | 0x32300000u;
            goto LABEL_93;
          case 0x12:
            sub_1001EB0A0();
            uint64_t v122 = v128 | 0x33300000u;
            goto LABEL_93;
          case 0x13:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 892416309;
            goto LABEL_93;
          case 0x14:
            unint64_t v123 = 0xE400000000000000;
            uint64_t v122 = 960051513;
            goto LABEL_93;
          case 0x15:
            unint64_t v123 = 0xE500000000000000;
            uint64_t v122 = 0x3039393939;
            goto LABEL_93;
          case 0x16:
            sub_1001EADE8();
            goto LABEL_94;
          default:
LABEL_93:
            v351 = &type metadata for String;
            uint64_t v348 = v122;
            unint64_t v349 = v123;
LABEL_94:
            ++v121;
            sub_10007E560();
            uint64_t v129 = v353[2];
            sub_10007E600(v129);
            uint64_t v130 = sub_10007E668(v129, (uint64_t)&v348);
            debugOnly(_:)(v130);
            if (v120 == v121) {
              break;
            }
            continue;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    sub_1001EB0AC();
    uint64_t v348 = v48;
    uint64_t v131 = sub_1001EAD8C();
    sub_10020D400(v131, 10, v132);
    sub_1001EAF9C();
  }
  if (a15)
  {
    uint64_t v133 = *(void *)(a15 + 16);
    if (v133)
    {
      sub_1001EAE8C((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v77 = 0;
      do
      {
        uint64_t v134 = *(unsigned __int8 *)(a15 + v77 + 32);
        if (v134 == 5) {
          sub_1001EADE8();
        }
        else {
          sub_1001EB0F4(v134);
        }
        ++v77;
        sub_10007E560();
        uint64_t v135 = v353[2];
        sub_10007E600(v135);
        uint64_t v136 = sub_10007E668(v135, (uint64_t)&v348);
        debugOnly(_:)(v136);
      }
      while (v133 != v77);
      swift_bridgeObjectRelease();
      sub_1001EAE38();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1001EB0AC();
    uint64_t v348 = v48;
    uint64_t v137 = sub_1001EAD8C();
    sub_10020D400(v137, 14, v138);
    sub_1001EAF9C();
  }
  uint64_t v139 = (void *)a17;
  if (a16)
  {
    sub_10007CB4C(a16);
    sub_1001EAEF0();
    sub_1001EB0AC();
    uint64_t v348 = v48;
    uint64_t v140 = sub_1001EAD8C();
    sub_10020D400(v140, 15, v141);
    sub_1001EAF9C();
  }
  if (a17)
  {
    uint64_t v142 = sub_10007CD60(a17);
    swift_bridgeObjectRelease();
    char v143 = sub_1001EB0AC();
    uint64_t v348 = v48;
    sub_10020D400((uint64_t)v142, 13, v143);
    sub_1001EAE60();
  }
  else
  {
    uint64_t v139 = (void *)v48;
  }
  uint64_t v144 = a20;
  if (a18)
  {
    uint64_t v145 = v139;
    uint64_t v139 = sub_10007CC48(a18);
    swift_bridgeObjectRelease();
    char v146 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v145;
    sub_10020D400((uint64_t)v139, 17, v146);
    sub_1001EAE60();
  }
  if (a19)
  {
    uint64_t v147 = *(void *)(a19 + 16);
    if (v147)
    {
      unint64_t v332 = (unint64_t)a20;
      v337 = v139;
      uint64_t v148 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v148);
      uint64_t v77 = a19 + 64;
      do
      {
        int v149 = *(unsigned __int8 *)v77;
        if (v149 == 255)
        {
          sub_1001EADE8();
        }
        else
        {
          uint64_t v151 = *(void *)(v77 - 16);
          uint64_t v150 = *(void *)(v77 - 8);
          uint64_t v152 = *(void *)(v77 - 24);
          v353 = *(void **)(v77 - 32);
          uint64_t v354 = v152;
          uint64_t v355 = v151;
          uint64_t v356 = v150;
          char v357 = v149;
          uint64_t v153 = sub_1001EB088();
          sub_100148864(v153, v154, v155, v156, v157);
          uint64_t v158 = sub_1000D9C38();
          v351 = &type metadata for String;
          uint64_t v348 = v158;
          unint64_t v349 = v159;
          uint64_t v160 = sub_1001EB088();
          sub_1000DC32C(v160, v161, v162, v163, v164);
        }
        sub_10007E560();
        uint64_t v165 = *(void *)(v345 + 16);
        sub_10007E600(v165);
        uint64_t v166 = sub_10007E668(v165, (uint64_t)&v348);
        debugOnly(_:)(v166);
        v77 += 40;
        --v147;
      }
      while (v147);
      swift_bridgeObjectRelease();
      uint64_t v139 = v337;
      sub_1001EAE38();
      uint64_t v144 = (void *)v332;
    }
    else
    {
      sub_1001DC9B8(0);
      sub_1001EAEF0();
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v139;
    uint64_t v167 = sub_1001EAD8C();
    sub_10020D400(v167, 18, v168);
    sub_1001EAE60();
  }
  if (v144)
  {
    uint64_t v169 = v144[2];
    if (v169)
    {
      uint64_t v170 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v170);
      uint64_t v77 = (uint64_t)(v144 + 5);
      uint64_t v144 = v139;
      do
      {
        unint64_t v171 = *(void *)v77;
        if (*(void *)v77)
        {
          uint64_t v172 = *(void *)(v77 - 8);
          v351 = &type metadata for String;
          uint64_t v348 = v172;
          unint64_t v349 = v171;
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_1001EADE8();
        }
        sub_10007E560();
        uint64_t v173 = *(void *)(v345 + 16);
        sub_10007E600(v173);
        uint64_t v174 = sub_10007E668(v173, (uint64_t)&v348);
        debugOnly(_:)(v174);
        v77 += 80;
        --v169;
      }
      while (v169);
      uint64_t v139 = v144;
      swift_bridgeObjectRelease();
      sub_1001EAE38();
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v139;
    uint64_t v175 = sub_1001EAD8C();
    sub_10020D400(v175, 20, v176);
    sub_1001EAE60();
  }
  if (a21)
  {
    sub_10007CC3C(a21);
    sub_1001EAEF0();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v139;
    uint64_t v177 = sub_1001EAD8C();
    sub_10020D400(v177, 21, v178);
    sub_1001EAE60();
  }
  if (a22)
  {
    uint64_t v179 = a22[2];
    if (v179)
    {
      v337 = v139;
      *(void *)&long long v345 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_10007D2CC(v179);
      sub_1001EAE78();
      uint64_t v144 = a22;
      uint64_t v181 = (uint64_t)a22 + v180;
      uint64_t v77 = *(void *)(v182 + 72);
      uint64_t v183 = (uint64_t)v339;
      do
      {
        uint64_t v184 = v333;
        sub_10007A6EC(v181, v333, &qword_10030C100);
        sub_1000DBF98(v184, v183, &qword_10030C100);
        uint64_t v185 = v334;
        sub_10007A6EC(v183, v334, &qword_10030C100);
        uint64_t v186 = sub_10024E0A0();
        sub_1001187A0(v185, 1, v186);
        if (v187)
        {
          sub_1000DC380(v185, &qword_10030C100);
          sub_1001EADE8();
        }
        else
        {
          uint64_t v188 = sub_10024E050();
          v351 = &type metadata for String;
          uint64_t v348 = v188;
          unint64_t v349 = v189;
          sub_10007A8C4();
          (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v185, v186);
        }
        uint64_t v183 = (uint64_t)v339;
        sub_1000DC380((uint64_t)v339, &qword_10030C100);
        sub_10007E560();
        uint64_t v191 = *(void *)(v345 + 16);
        sub_10007E600(v191);
        uint64_t v192 = sub_10007E668(v191, (uint64_t)&v348);
        debugOnly(_:)(v192);
        v181 += v77;
        --v179;
      }
      while (v179);
      swift_bridgeObjectRelease();
      uint64_t v139 = v337;
      sub_1001EAE38();
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v139;
    uint64_t v193 = sub_1001EAD8C();
    sub_10020D400(v193, 22, v194);
    sub_1001EAFC4();
  }
  else
  {
    uint64_t v113 = (long long *)v139;
  }
  if (a23)
  {
    sub_10007CC3C(a23);
    sub_1001EAEF0();
    sub_1001EB0DC();
    uint64_t v348 = (uint64_t)v113;
    uint64_t v195 = sub_1001EAD8C();
    sub_10020D400(v195, 23, v196);
    sub_1001EAFC4();
  }
  if (a24)
  {
    uint64_t v144 = sub_10007CC48(a24);
    swift_bridgeObjectRelease();
    sub_1001EB0DC();
    uint64_t v197 = sub_1001EB164();
    sub_10020D400(v197, 24, v198);
    sub_1001EAFC4();
  }
  if (a25)
  {
    uint64_t v144 = sub_10007CC30(a25);
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v199 = sub_1001EB164();
    sub_10020D400(v199, 25, v200);
    sub_1001EAFC4();
  }
  if (a26)
  {
    uint64_t v201 = *(void *)(a26 + 16);
    if (v201)
    {
      uint64_t v77 = 3157553;
      uint64_t v202 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v202);
      uint64_t v203 = 0;
      do
      {
        int v204 = *(unsigned __int8 *)(a26 + v203 + 32);
        if (v204 == 2)
        {
          sub_1001EADE8();
        }
        else
        {
          v351 = &type metadata for String;
          if (v204) {
            uint64_t v205 = 3157554;
          }
          else {
            uint64_t v205 = 3157553;
          }
          uint64_t v348 = v205;
          unint64_t v349 = 0xE300000000000000;
        }
        ++v203;
        sub_10007E560();
        sub_1001EB100();
        uint64_t v206 = sub_10007E668((uint64_t)v144, (uint64_t)&v348);
        debugOnly(_:)(v206);
      }
      while (v201 != v203);
      swift_bridgeObjectRelease();
      sub_1001EAE38();
    }
    else
    {
      sub_1001DC9B8(0);
      sub_1001EAEF0();
    }
    sub_1001EB0DC();
    uint64_t v348 = (uint64_t)v113;
    uint64_t v207 = sub_1001EAD8C();
    sub_10020D400(v207, 26, v208);
    sub_1001EAFC4();
  }
  if (a27)
  {
    uint64_t v209 = *(void *)(a27 + 16);
    if (v209)
    {
      uint64_t v210 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v210);
      uint64_t v77 = 0;
      do
      {
        int v211 = *(unsigned __int8 *)(a27 + v77 + 32);
        if (v211 == 2) {
          sub_1001EADE8();
        }
        else {
          sub_1001EB0F4(v211 & 1);
        }
        ++v77;
        sub_10007E560();
        sub_1001EB100();
        uint64_t v212 = sub_10007E668((uint64_t)v144, (uint64_t)&v348);
        debugOnly(_:)(v212);
      }
      while (v209 != v77);
      swift_bridgeObjectRelease();
      sub_1001EAE38();
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    sub_1001EB0DC();
    uint64_t v348 = (uint64_t)v113;
    uint64_t v214 = sub_1001EAD8C();
    sub_10020D400(v214, 27, v215);
    v213 = (long long *)v348;
    swift_bridgeObjectRelease();
  }
  else
  {
    v213 = v113;
  }
  if (a28)
  {
    sub_10007CB4C(a28);
    sub_1001EAEF0();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v216 = sub_1001EAD78();
    sub_10020D400(v216, 28, v217);
    sub_1001EAD98();
  }
  else
  {
    v337 = v213;
  }
  uint64_t v218 = a31;
  unint64_t v219 = &type metadata for Double;
  v339 = (char *)a31;
  if (a29)
  {
    uint64_t v220 = *(void *)(a29 + 16);
    if (v220)
    {
      uint64_t v221 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EB014((uint64_t)v221);
      sub_1001EAE78();
      uint64_t v223 = a29 + v222;
      uint64_t v77 = *(void *)(v224 + 72);
      uint64_t v225 = (uint64_t)v340;
      do
      {
        uint64_t v226 = v335;
        sub_10007A6EC(v223, v335, (uint64_t *)&unk_10030FD70);
        sub_1000DBF98(v226, v225, (uint64_t *)&unk_10030FD70);
        uint64_t v227 = v336;
        sub_10007A6EC(v225, v336, (uint64_t *)&unk_10030FD70);
        uint64_t v228 = sub_10024E030();
        sub_1001187A0(v227, 1, v228);
        if (v187)
        {
          sub_1000DC380(v227, (uint64_t *)&unk_10030FD70);
          sub_1001EADE8();
        }
        else
        {
          sub_10024DF70();
          v351 = &type metadata for Double;
          uint64_t v348 = v229;
          sub_10007A8C4();
          (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v227, v228);
        }
        uint64_t v225 = (uint64_t)v340;
        sub_1000DC380((uint64_t)v340, (uint64_t *)&unk_10030FD70);
        v213 = &v345;
        sub_10007E560();
        uint64_t v231 = *(void *)(v345 + 16);
        sub_10007E600(v231);
        uint64_t v232 = sub_10007E668(v231, (uint64_t)&v348);
        debugOnly(_:)(v232);
        v223 += v77;
        --v220;
      }
      while (v220);
      swift_bridgeObjectRelease();
      sub_1001EAE38();
      uint64_t v218 = (uint64_t)v339;
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    sub_1001EAE1C();
    uint64_t v233 = sub_1001EAD78();
    sub_10020D400(v233, 30, v234);
    sub_1001EAD98();
  }
  uint64_t v235 = v342;
  v340 = (char *)a32;
  if (a30)
  {
    uint64_t v236 = *(void *)(a30 + 16);
    if (v236)
    {
      unint64_t v237 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EB014((uint64_t)v237);
      sub_1001EAE78();
      uint64_t v239 = a30 + v238;
      uint64_t v241 = *(void *)(v240 + 72);
      do
      {
        sub_1001EB048(v239, (uint64_t)v358);
        sub_1000DBF98((uint64_t)v213, v235, (uint64_t *)&unk_10030FD70);
        sub_10007A6EC(v235, v77, (uint64_t *)&unk_10030FD70);
        uint64_t v242 = sub_10024E030();
        sub_1001187A0(v77, 1, v242);
        if (v187)
        {
          sub_1000DC380(v77, (uint64_t *)&unk_10030FD70);
          sub_1001EADE8();
        }
        else
        {
          sub_10024DF70();
          v351 = &type metadata for Double;
          uint64_t v348 = v243;
          sub_10007A8C4();
          (*(void (**)(uint64_t, uint64_t))(v244 + 8))(v77, v242);
        }
        uint64_t v235 = v342;
        sub_1000DC380(v342, (uint64_t *)&unk_10030FD70);
        v213 = &v345;
        sub_10007E560();
        uint64_t v245 = *(void *)(v345 + 16);
        sub_10007E600(v245);
        uint64_t v246 = sub_10007E668(v245, (uint64_t)&v348);
        debugOnly(_:)(v246);
        v239 += v241;
        --v236;
      }
      while (v236);
      swift_bridgeObjectRelease();
      uint64_t v218 = (uint64_t)v339;
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    sub_1001EAE1C();
    uint64_t v247 = sub_1001EAD78();
    sub_10020D400(v247, 29, v248);
    sub_1001EAD98();
  }
  uint64_t v249 = (uint64_t)v340;
  if (v218)
  {
    uint64_t v250 = *(void *)(v218 + 16);
    if (v250)
    {
      uint64_t v251 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EB014((uint64_t)v251);
      sub_1001EAE78();
      uint64_t v253 = v218 + v252;
      uint64_t v255 = *(void *)(v254 + 72);
      uint64_t v256 = v341;
      do
      {
        sub_1001EB048(v253, (uint64_t)&v359);
        sub_1000DBF98((uint64_t)v213, v256, (uint64_t *)&unk_10030FD70);
        sub_1001EB048(v256, (uint64_t)&v360);
        uint64_t v257 = sub_10024E030();
        sub_1001187A0((uint64_t)v213, 1, v257);
        if (v187)
        {
          sub_1000DC380((uint64_t)v213, (uint64_t *)&unk_10030FD70);
          sub_1001EADE8();
        }
        else
        {
          sub_10024DF70();
          v351 = &type metadata for Double;
          uint64_t v348 = v258;
          sub_10007A8C4();
          (*(void (**)(long long *, uint64_t))(v259 + 8))(v213, v257);
        }
        uint64_t v256 = v341;
        sub_1000DC380(v341, (uint64_t *)&unk_10030FD70);
        v213 = &v345;
        sub_10007E560();
        uint64_t v260 = *(void *)(v345 + 16);
        sub_10007E600(v260);
        uint64_t v261 = sub_10007E668(v260, (uint64_t)&v348);
        debugOnly(_:)(v261);
        v253 += v255;
        --v250;
      }
      while (v250);
      swift_bridgeObjectRelease();
      uint64_t v249 = (uint64_t)v340;
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    sub_1001EAE1C();
    uint64_t v262 = sub_1001EAD78();
    sub_10020D400(v262, 33, v263);
    sub_1001EAE60();
  }
  else
  {
    unint64_t v219 = v337;
  }
  if (v249)
  {
    uint64_t v264 = *(void *)(v249 + 16);
    if (v264)
    {
      Swift::String v265 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v265);
      Swift::String v266 = (unsigned char *)(v249 + 40);
      Swift::String v267 = v219;
      do
      {
        if (*v266) {
          sub_1001EADE8();
        }
        else {
          sub_1001EB0F4(*((void *)v266 - 1));
        }
        sub_10007E560();
        uint64_t v268 = *(void *)(v345 + 16);
        sub_10007E600(v268);
        uint64_t v269 = sub_10007E668(v268, (uint64_t)&v348);
        debugOnly(_:)(v269);
        v266 += 16;
        --v264;
      }
      while (v264);
      unint64_t v219 = v267;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v219;
    uint64_t v270 = sub_1001EAD8C();
    sub_10020D400(v270, 31, v271);
    sub_1001EAE60();
  }
  if (a33)
  {
    uint64_t v272 = *(void *)(a33 + 16);
    if (v272)
    {
      Swift::String v273 = v219;
      Swift::String v274 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v274);
      uint64_t v275 = 0;
      while (2)
      {
        uint64_t v276 = *(unsigned __int8 *)(a33 + v275 + 32);
        switch(*(unsigned char *)(a33 + v275 + 32))
        {
          case 1:
            uint64_t v276 = 1;
            goto LABEL_230;
          case 2:
            uint64_t v276 = 2;
            goto LABEL_230;
          case 3:
            uint64_t v276 = 10;
            goto LABEL_230;
          case 4:
            uint64_t v276 = 11;
            goto LABEL_230;
          case 5:
            sub_1001EADE8();
            goto LABEL_231;
          default:
LABEL_230:
            sub_1001EB0F4(v276);
LABEL_231:
            ++v275;
            sub_10007E560();
            uint64_t v277 = *(void *)(v345 + 16);
            sub_10007E600(v277);
            uint64_t v278 = sub_10007E668(v277, (uint64_t)&v348);
            debugOnly(_:)(v278);
            if (v272 != v275) {
              continue;
            }
            swift_bridgeObjectRelease();
            unint64_t v219 = v273;
            break;
        }
        break;
      }
    }
    else
    {
      sub_1001DC9B8(0);
      swift_bridgeObjectRelease();
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v219;
    uint64_t v279 = sub_1001EAD8C();
    sub_10020D400(v279, 32, v280);
    sub_1001EAE60();
  }
  if (a34)
  {
    uint64_t v281 = *(void *)(a34 + 16);
    if (v281)
    {
      v282 = variable initialization expression of SelectableEventLoop.tasksCopy();
      sub_1001EAE00((uint64_t)v282);
      uint64_t v283 = 0;
      do
      {
        uint64_t v284 = *(void *)(a34 + 8 * v283 + 32);
        swift_bridgeObjectRetain();
        if (v284)
        {
          uint64_t v285 = sub_10024EAB0();
          v351 = &type metadata for String;
          uint64_t v348 = v285;
          unint64_t v349 = v286;
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1001EADE8();
        }
        ++v283;
        sub_10007E560();
        sub_1001EB100();
        uint64_t v287 = sub_10007E668(a33, (uint64_t)&v348);
        debugOnly(_:)(v287);
      }
      while (v281 != v283);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001DC9B8(0);
      sub_1001EAEF0();
    }
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v219;
    uint64_t v288 = sub_1001EAD8C();
    sub_10020D400(v288, 19, v289);
    sub_1001EAE60();
  }
  if (a35)
  {
    sub_10007CD60(a35);
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v348 = (uint64_t)v219;
    uint64_t v290 = sub_1001EAD8C();
    sub_10020D400(v290, 34, v291);
    sub_1001EAE60();
  }
  swift_bridgeObjectRetain();
  sub_1001DC9AC(0);
  sub_100019524((uint64_t *)&unk_10030FD90);
  v292 = (void *)sub_10024E510();
  sub_1001538D0((uint64_t)v219, &v348);
  v340 = (char *)v348;
  unint64_t v338 = v349;
  uint64_t v341 = (uint64_t)v351;
  uint64_t v293 = v352;
  v339 = (char *)((unint64_t)(v350 + 64) >> 6);
  v337 = v219;
  swift_bridgeObjectRetain();
  v294 = (SEL *)&unk_100306000;
  if (!v293) {
    goto LABEL_250;
  }
LABEL_249:
  sub_1001EB178();
  uint64_t v342 = v293;
  uint64_t v296 = v295 | (v341 << 6);
  while (1)
  {
    char v304 = *(unsigned char *)(*((void *)v340 + 6) + v296);
    uint64_t v305 = *(void *)(*((void *)v340 + 7) + 8 * v296);
    uint64_t v306 = *(void *)(v305 + 16);
    if (v306)
    {
      v347 = variable initialization expression of SelectableEventLoop.tasksCopy();
      swift_bridgeObjectRetain();
      sub_10007D2B4(v306);
      uint64_t v307 = v305 + 32;
      do
      {
        sub_10007A6EC(v307, (uint64_t)v344, (uint64_t *)&unk_100319510);
        sub_10007A6EC((uint64_t)v344, (uint64_t)&v345, (uint64_t *)&unk_100319510);
        if (v346)
        {
          sub_10003B908(&v345, v343);
          sub_10003B908(v343, &v345);
        }
        else
        {
          sub_1000DC380((uint64_t)&v345, (uint64_t *)&unk_100319510);
          id v308 = [objc_allocWithZone((Class)NSNull) v294[337]];
          uint64_t v346 = sub_1000184A4(0, &qword_100318AF0);
          *(void *)&long long v345 = v308;
        }
        sub_1000DC380((uint64_t)v344, (uint64_t *)&unk_100319510);
        sub_10007E548();
        uint64_t v309 = v347[2];
        sub_10007E5E8(v309);
        v310 = sub_10007E648(v309, &v345);
        debugOnly(_:)(v310);
        v307 += 32;
        --v306;
      }
      while (v306);
      v311 = v347;
    }
    else
    {
      swift_bridgeObjectRetain();
      v311 = sub_1001DC928(0);
    }
    char v312 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v345 = v292;
    unint64_t v313 = sub_10011ED60(v304);
    uint64_t v315 = v292[2];
    BOOL v316 = (v314 & 1) == 0;
    Swift::Int v317 = v315 + v316;
    if (__OFADD__(v315, v316))
    {
      __break(1u);
LABEL_292:
      __break(1u);
LABEL_293:
      __break(1u);
LABEL_294:
      sub_10024FB70();
      __break(1u);
      JUMPOUT(0x1001EA2D4);
    }
    unint64_t v318 = v313;
    char v319 = v314;
    sub_100019524(&qword_100318B08);
    BOOL v320 = sub_10024F630(v312, v317);
    v294 = (SEL *)&unk_100306000;
    if (v320)
    {
      unint64_t v321 = sub_10011ED60(v304);
      if ((v319 & 1) != (v322 & 1)) {
        goto LABEL_294;
      }
      unint64_t v318 = v321;
    }
    v292 = (void *)v345;
    if (v319)
    {
      uint64_t v323 = *(void *)(v345 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v323 + 8 * v318) = v311;
    }
    else
    {
      *(void *)(v345 + 8 * (v318 >> 6) + 64) |= 1 << v318;
      *(unsigned char *)(v292[6] + v318) = v304;
      *(void *)(v292[7] + 8 * v318) = v311;
      uint64_t v324 = v292[2];
      BOOL v301 = __OFADD__(v324, 1);
      uint64_t v325 = v324 + 1;
      if (v301) {
        goto LABEL_292;
      }
      v292[2] = v325;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v293 = v342;
    if (v342) {
      goto LABEL_249;
    }
LABEL_250:
    uint64_t v297 = v341 + 1;
    if (__OFADD__(v341, 1)) {
      goto LABEL_293;
    }
    if (v297 >= (uint64_t)v339) {
      break;
    }
    unint64_t v298 = *(void *)(v338 + 8 * v297);
    uint64_t v299 = v341 + 1;
    if (!v298)
    {
      sub_1001EAFB4();
      if (v300 == v301) {
        break;
      }
      sub_1001EAF50();
      if (!v298)
      {
        sub_1001EAFB4();
        if (v300 == v301) {
          break;
        }
        sub_1001EAF50();
        if (!v298)
        {
          sub_1001EAFB4();
          if (v300 == v301) {
            break;
          }
          sub_1001EAF50();
          if (!v298)
          {
            sub_1001EAFB4();
            if (v300 == v301) {
              break;
            }
            sub_1001EAF50();
            if (!v298)
            {
              uint64_t v299 = v302 + 5;
              if (v302 + 5 >= (uint64_t)v339) {
                break;
              }
              unint64_t v298 = *(void *)(v338 + 8 * v299);
              if (!v298)
              {
                uint64_t v303 = v341 + 7;
                do
                {
                  if (v303 >= (uint64_t)v339) {
                    goto LABEL_290;
                  }
                  unint64_t v298 = *(void *)(v338 + 8 * v303++);
                }
                while (!v298);
                uint64_t v299 = v303 - 1;
              }
            }
          }
        }
      }
    }
    uint64_t v342 = (v298 - 1) & v298;
    uint64_t v296 = __clz(__rbit64(v298)) + (v299 << 6);
    uint64_t v341 = v299;
  }
LABEL_290:
  swift_release();
  swift_bridgeObjectRelease_n();
  return v292;
}

id sub_1001EA370(char a1)
{
  return sub_1001EA4D0(a1, (SEL *)&selRef_isNullPredicateWithProperty_);
}

id sub_1001EA37C(uint64_t a1)
{
  return sub_1001EA454(a1, (SEL *)&selRef_predicateMatchingAnyPredicates_);
}

id sub_1001EA388(char a1, void *a2, unsigned __int8 a3)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_100152BBC(a1);
  NSString v7 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  sub_10001C2A8(a2, a2[3]);
  id v8 = [ObjCClassFromMetadata predicateWithProperty:v7 value:sub_10024FA50() comparisonType:a3 + 1];

  swift_unknownObjectRelease();
  sub_10001C2EC((uint64_t)a2);
  return v8;
}

id sub_1001EA448(uint64_t a1)
{
  return sub_1001EA454(a1, (SEL *)&selRef_predicateMatchingAllPredicates_);
}

id sub_1001EA454(uint64_t a1, SEL *a2)
{
  Class isa = sub_10024EA80().super.isa;
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), *a2, isa);

  return v4;
}

id sub_1001EA4C4(char a1)
{
  return sub_1001EA4D0(a1, (SEL *)&selRef_isNotNullPredicateWithProperty_);
}

id sub_1001EA4D0(char a1, SEL *a2)
{
  id v4 = self;
  sub_100152BBC(a1);
  NSString v5 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, *a2, v5);

  return v6;
}

void sub_1001EA54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v75 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v65 = a1 + 64;
  sub_1001EAF7C();
  unint64_t v7 = v6 & v5;
  int64_t v67 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_4;
  }
LABEL_2:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v11 = v10 | (v9 << 6);
LABEL_3:
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = (void *)(*(void *)(a1 + 48) + 16 * v11);
  uint64_t v14 = v13[1];
  *(void *)&long long v70 = *v13;
  *((void *)&v70 + 1) = v14;
  sub_1000318C8(v12 + 32 * v11, (uint64_t)v71);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1000DBF98((uint64_t)&v70, (uint64_t)&v72, &qword_100318AE8);
    uint64_t v18 = v73;
    if (!v73) {
      break;
    }
    uint64_t v19 = v72;
    sub_1000184A4(0, &qword_10030FDA0);
    sub_10003B908(&v74, &v70);
    id v20 = sub_1001EACE0(v19, v18, &v70);
    sub_10024EA70();
    if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1001EAF60();
    }
    sub_10024EB10();
    sub_10024EAC0();

    if (v7) {
      goto LABEL_2;
    }
LABEL_4:
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    if (v15 < v67)
    {
      unint64_t v16 = *(void *)(v65 + 8 * v15);
      if (v16) {
        goto LABEL_7;
      }
      int64_t v17 = v9 + 2;
      ++v9;
      if (v15 + 1 < v67)
      {
        unint64_t v16 = *(void *)(v65 + 8 * v17);
        if (v16) {
          goto LABEL_10;
        }
        int64_t v9 = v15 + 1;
        if (v15 + 2 < v67)
        {
          unint64_t v16 = *(void *)(v65 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_7;
          }
          int64_t v17 = v15 + 3;
          int64_t v9 = v15 + 2;
          if (v15 + 3 < v67)
          {
            unint64_t v16 = *(void *)(v65 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_71;
                }
                if (v15 >= v67)
                {
                  int64_t v9 = v67 - 1;
                  goto LABEL_21;
                }
                unint64_t v16 = *(void *)(v65 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_7;
                }
              }
            }
LABEL_10:
            int64_t v15 = v17;
LABEL_7:
            unint64_t v7 = (v16 - 1) & v16;
            unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
            int64_t v9 = v15;
            goto LABEL_3;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = 0;
    memset(v71, 0, sizeof(v71));
    long long v70 = 0u;
  }
  swift_release();
  uint64_t v21 = *(void *)(a2 + 16);
  if (v21)
  {
    unint64_t v22 = self;
    swift_bridgeObjectRetain();
    uint64_t v23 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v24 = sub_10024E6A0();
      swift_bridgeObjectRelease();
      id v25 = [v22 isNullPredicateWithProperty:v24];

      id v26 = v25;
      sub_10024EA70();
      sub_1001EB11C();
      if (v27) {
        sub_1001EAF60();
      }
      v23 += 16;
      sub_10024EB10();
      sub_10024EAC0();

      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    uint64_t v29 = self;
    swift_bridgeObjectRetain();
    uint64_t v30 = a3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v31 = sub_10024E6A0();
      swift_bridgeObjectRelease();
      id v32 = [v29 isNotNullPredicateWithProperty:v31];

      id v33 = v32;
      sub_10024EA70();
      if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1001EAF60();
      }
      v30 += 16;
      sub_10024EB10();
      sub_10024EAC0();

      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = a4 + 64;
  sub_1001EAF7C();
  uint64_t v36 = v35 & v34;
  int64_t v63 = (unint64_t)(v37 + 63) >> 6;
  uint64_t v38 = swift_bridgeObjectRetain();
  int64_t v39 = 0;
  while (v36)
  {
    sub_1001EB178();
    unint64_t v41 = v40 | (v39 << 6);
LABEL_56:
    uint64_t v45 = *(void *)(*(void *)(v38 + 56) + 8 * v41);
    uint64_t v46 = *(void *)(v45 + 16);
    if (v46)
    {
      uint64_t v66 = v36;
      int64_t v68 = v39;
      uint64_t v47 = (uint64_t *)(*(void *)(v38 + 48) + 16 * v41);
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      uint64_t v50 = v45 + 32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      do
      {
        sub_1000318C8(v50, (uint64_t)&v72);
        sub_1000318C8((uint64_t)&v72, (uint64_t)&v70);
        sub_1000184A4(0, &qword_100318AF0);
        if (swift_dynamicCast())
        {

          uint64_t v51 = self;
          NSString v52 = sub_10024E6A0();
          id v53 = [v51 isNullPredicateWithProperty:v52];
        }
        else
        {
          sub_1000184A4(0, &qword_10030FDA0);
          sub_1000318C8((uint64_t)&v72, (uint64_t)&v70);
          swift_bridgeObjectRetain();
          id v53 = sub_1001EACE0(v49, v48, &v70);
        }
        id v54 = v53;
        sub_10024EA70();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10024EAD0();
        }
        sub_10024EB10();
        sub_10024EAC0();

        sub_10001C2EC((uint64_t)&v72);
        v50 += 32;
        --v46;
      }
      while (v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000184A4(0, &qword_10030FDA8);
      sub_10007C9E8((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      id v57 = sub_1001EA454(v56, (SEL *)&selRef_predicateMatchingAnyPredicates_);
      sub_10024EA70();
      sub_1001EB11C();
      if (v27) {
        sub_1001EAF60();
      }
      sub_10024EB10();
      sub_10024EAC0();

      uint64_t v38 = a4;
      uint64_t v36 = v66;
      int64_t v39 = v68;
    }
  }
  int64_t v42 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_69;
  }
  if (v42 >= v63) {
    goto LABEL_67;
  }
  unint64_t v43 = *(void *)(v61 + 8 * v42);
  ++v39;
  if (v43) {
    goto LABEL_55;
  }
  int64_t v39 = v42 + 1;
  if (v42 + 1 >= v63) {
    goto LABEL_67;
  }
  unint64_t v43 = *(void *)(v61 + 8 * v39);
  if (v43) {
    goto LABEL_55;
  }
  int64_t v39 = v42 + 2;
  if (v42 + 2 >= v63) {
    goto LABEL_67;
  }
  unint64_t v43 = *(void *)(v61 + 8 * v39);
  if (v43)
  {
LABEL_55:
    uint64_t v36 = (v43 - 1) & v43;
    unint64_t v41 = __clz(__rbit64(v43)) + (v39 << 6);
    goto LABEL_56;
  }
  int64_t v44 = v42 + 3;
  if (v44 >= v63)
  {
LABEL_67:
    swift_release();
    sub_1000184A4(0, &qword_10030FDA8);
    sub_10007C9E8(v75);
    uint64_t v59 = v58;
    swift_bridgeObjectRelease();
    sub_1001EA454(v59, (SEL *)&selRef_predicateMatchingAllPredicates_);
    return;
  }
  unint64_t v43 = *(void *)(v61 + 8 * v44);
  if (v43)
  {
    int64_t v39 = v44;
    goto LABEL_55;
  }
  while (1)
  {
    int64_t v39 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v39 >= v63) {
      goto LABEL_67;
    }
    unint64_t v43 = *(void *)(v61 + 8 * v39);
    ++v44;
    if (v43) {
      goto LABEL_55;
    }
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

id sub_1001EACE0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  sub_10001C2A8(a3, a3[3]);
  uint64_t v5 = sub_10024FA50();
  id v6 = [(id)swift_getObjCClassFromMetadata() predicateWithProperty:v4 equalToValue:v5];
  swift_unknownObjectRelease();

  sub_10001C2EC((uint64_t)a3);
  return v6;
}

uint64_t sub_1001EAD78()
{
  *(void *)(v2 - 176) = v1;
  return v0;
}

uint64_t sub_1001EAD8C()
{
  return v0;
}

uint64_t sub_1001EAD98()
{
  *(void *)(v0 - 328) = *(void *)(v0 - 176);
  return swift_bridgeObjectRelease();
}

void sub_1001EADB8()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_1001EADC8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 288) = a1;
  return v1 - 288;
}

uint64_t sub_1001EADDC()
{
  return v0 - 248;
}

double sub_1001EADE8()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  return result;
}

uint64_t sub_1001EADF4()
{
  return v0 - 288;
}

uint64_t sub_1001EAE00(uint64_t a1)
{
  *(void *)(v2 - 216) = a1;
  return sub_10007D2CC(v1);
}

uint64_t sub_1001EAE1C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1001EAE44@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 280) = a1;
  return v1;
}

uint64_t sub_1001EAE60()
{
  return swift_bridgeObjectRelease();
}

void sub_1001EAE8C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  sub_100039218();
}

void sub_1001EAEB0()
{
  sub_100039218();
}

void sub_1001EAED4()
{
  v3._countAndFlagsBits = v1;
  v3._object = v0;
  sub_10024E800(v3);
}

uint64_t sub_1001EAEF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EAF2C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 288) = a1;
  *(void *)(v3 - 280) = v2;
  return v1;
}

uint64_t sub_1001EAF60()
{
  return sub_10024EAD0();
}

uint64_t sub_1001EAF9C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EAFC4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EAFDC()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_1001EB014(uint64_t a1)
{
  *(void *)(v2 - 216) = a1;
  return sub_10007D2CC(v1);
}

uint64_t sub_1001EB030()
{
  return v0;
}

uint64_t sub_1001EB048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_10007A6EC(a1, v4, v2);
}

void sub_1001EB064(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  sub_100039218();
}

uint64_t sub_1001EB088()
{
  return v0;
}

uint64_t sub_1001EB0AC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1001EB0C4(uint64_t a1@<X8>)
{
  *(void *)(v2 - 264) = v1;
  *(void *)(v2 - 288) = a1;
}

uint64_t sub_1001EB0DC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1001EB0F4(uint64_t a1@<X8>)
{
  *(void *)(v2 - 152) = v1;
  *(void *)(v2 - 176) = a1;
}

uint64_t sub_1001EB100()
{
  uint64_t v2 = *(void *)(*(void *)(v0 - 216) + 16);
  return sub_10007E600(v2);
}

void sub_1001EB130()
{
  sub_1000389BC();
}

uint64_t sub_1001EB150()
{
  *(void *)(v2 - 176) = v1;
  return v0;
}

uint64_t sub_1001EB164()
{
  *(void *)(v2 - 176) = v1;
  return v0;
}

void sub_1001EB18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v11 = *v5;
  sub_10003AFD0();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FD2C();
    uint64_t v11 = v12;
  }
  if ((unint64_t)a5 >= *(void *)(v11 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (uint64_t *)(v11 + 32 * a5);
    sub_10003BD68(v13[4], v13[5], v13[6], v13[7]);
    v13[4] = a1;
    void v13[5] = a2;
    v13[6] = a3 & 0xFFFFFFFFFFFFFFLL;
    v13[7] = a4;
    sub_10001B070();
    swift_release();
    *uint64_t v5 = v11;
  }
}

uint64_t sub_1001EB248(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, void (*a5)(void, void), uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v84 = a7;
  uint64_t v87 = a4;
  char v85 = a3;
  if (*(unsigned char *)(a1 + 136) == 1)
  {
    uint64_t v78 = a5;
    uint64_t v79 = a6;
    uint64_t v13 = *(void *)(a1 + 128);
    sub_10006FF20();
    if ((*(unsigned char *)(a1 + 48) & 1) == 0)
    {
      uint64_t v80 = a8;
      uint64_t v75 = 0;
      BOOL v76 = v13 == 0;
      uint64_t v82 = v13;
      char v83 = a2;
      uint64_t v77 = (long long *)(a2 + 2);
      while (2)
      {
        uint64_t v20 = *(void *)(a1 + 40);
        sub_10006FF20();
        while (1)
        {
          unint64_t v22 = *(void *)(a1 + 24);
          if ((v22 & 0x8000000000000000) != 0) {
            goto LABEL_85;
          }
          if (HIDWORD(v22)) {
            goto LABEL_87;
          }
          uint64_t v23 = *(void *)(a1 + 16);
          unint64_t v24 = *(void *)(v23 + 16);
          unint64_t v25 = v24 - 1;
          uint64_t v26 = (v24 - 1) & (v22 + v20);
          if (v26 < 0 != v21) {
            goto LABEL_85;
          }
          if (HIDWORD(v26)) {
            goto LABEL_87;
          }
          if (v26 >= v22) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = *(void *)(v23 + 16);
          }
          uint64_t v28 = v26 + v27 - v22;
          BOOL v21 = __OFADD__(v28, 1);
          uint64_t v29 = v28 + 1;
          if (v21)
          {
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
          if (v29) {
            break;
          }
LABEL_53:
          if (*(unsigned char *)(a1 + 136))
          {
            uint64_t v20 = *(void *)(a1 + 40);
            if ((*(unsigned char *)(a1 + 48) & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
        if (v29 == 1)
        {
          if (v22 == *(void *)(a1 + 32)) {
            goto LABEL_70;
          }
          if (v22 >= v24) {
            goto LABEL_72;
          }
          uint64_t v30 = v23 + 32 * v22;
          if (*(void *)(v30 + 56) == 1) {
            goto LABEL_78;
          }
          if ((*(void *)(v30 + 32) & 0x8000000000000000) != 0)
          {
LABEL_43:
            unint64_t v60 = a2[3];
            if ((v60 & 0x8000000000000000) != 0 || HIDWORD(v60)) {
              goto LABEL_88;
            }
            sub_1001ECDBC();
            if (v50) {
              goto LABEL_75;
            }
            uint64_t v63 = v62 + 32 * v61;
            uint64_t v66 = *(void *)(v63 + 32);
            uint64_t v64 = (void *)(v63 + 32);
            uint64_t v65 = v66;
            if (v64[3] == 1) {
              goto LABEL_83;
            }
            if ((v65 & 0x8000000000000000) == 0) {
              goto LABEL_84;
            }
            uint64_t v67 = v64[1];
            if (v67 < 0) {
              goto LABEL_76;
            }
            uint64_t v68 = v64[2];
            sub_10006FF20();
            if (*(unsigned char *)((v65 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) != 1)
            {
              sub_100028EB4();
              swift_allocError();
              *(void *)uint64_t v73 = 0xD00000000000001FLL;
              *(void *)(v73 + 8) = 0x800000010027B110;
              *(_DWORD *)(v73 + 16) = 9;
              sub_1001ECDD8();
              swift_willThrow();
LABEL_66:
              sub_1001ECE14();
              return swift_release();
            }
            char v81 = &v74;
            uint64_t v69 = *(unsigned int *)((v65 & 0x7FFFFFFFFFFFFFFFLL) + 0x14);
            sub_1001ECDD8();
            a2 = v83;
            swift_retain();
            uint64_t v70 = v84(v69, v68 & 0xFFFFFFFFFFFFFFLL, v67);
            if (v9)
            {
              swift_release();
              goto LABEL_66;
            }
            unsigned __int8 v46 = sub_1001EC4D4(1, v70, v71 & 1);
            swift_release();
            sub_1001ECE14();
            uint64_t v9 = 0;
            uint64_t v13 = v82;
LABEL_52:
            int v72 = v46;
            if (v46)
            {
              char v14 = v76;
              if (v72 == 2)
              {
                char v14 = 1;
                goto LABEL_4;
              }
              if (v76) {
                goto LABEL_4;
              }
              BOOL v50 = __CFADD__(v75++, 1);
              if (!v50)
              {
                if (*(unsigned char *)(a1 + 136) == 1 && (*(unsigned char *)(a1 + 48) & 1) == 0)
                {
                  BOOL v76 = v75 == v13;
                  continue;
                }
                goto LABEL_4;
              }
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              swift_release();
              goto LABEL_88;
            }
            goto LABEL_53;
          }
        }
        else
        {
          if (v22 >= v24) {
            goto LABEL_71;
          }
          uint64_t v31 = v23 + 32;
          id v32 = (void *)(v23 + 32 + 32 * v22);
          if (v32[3] == 1) {
            goto LABEL_79;
          }
          unint64_t v33 = v25 & (v22 + 1);
          if (HIDWORD(v33))
          {
LABEL_87:
            swift_release();
LABEL_88:
            sub_10003C4F8();
            uint64_t result = sub_10024F660();
            __break(1u);
            return result;
          }
          uint64_t v34 = (void *)(v31 + 32 * v33);
          if (v34[3] == 1) {
            goto LABEL_80;
          }
          if ((*v32 & 0x8000000000000000) != 0) {
            goto LABEL_43;
          }
          if ((*v34 & 0x8000000000000000) == 0)
          {
            long long v35 = v77[2];
            v86[1] = v77[1];
            v86[2] = v35;
            v86[0] = *v77;
            uint64_t v36 = a2[8];
            uint64_t v37 = a2[9];
            uint64_t v38 = a2[10];
            uint64_t v39 = a2[11];
            sub_10001B078((uint64_t)v86);
            uint64_t v40 = sub_1001EBA2C(v86, v36, v37, v38, v39, v78);
            if (v9)
            {
              sub_100074F0C((uint64_t)v86);
              return swift_release();
            }
            uint64_t v43 = v40;
            uint64_t v44 = v41;
            uint64_t v45 = v42 & 1;
            sub_100074F0C((uint64_t)v86);
            unsigned __int8 v46 = sub_1001EC4D4(v43, v44, v45);
            goto LABEL_52;
          }
        }
        break;
      }
      unint64_t v47 = a2[3];
      if ((v47 & 0x8000000000000000) != 0 || HIDWORD(v47)) {
        goto LABEL_88;
      }
      sub_1001ECDBC();
      if (v50) {
        goto LABEL_73;
      }
      uint64_t v51 = v49 + 32 * v48;
      uint64_t v54 = *(void *)(v51 + 32);
      NSString v52 = (void *)(v51 + 32);
      uint64_t v53 = v54;
      if (v52[3] == 1) {
        goto LABEL_81;
      }
      if (v53 < 0) {
        goto LABEL_82;
      }
      uint64_t v55 = v52[1];
      unint64_t v56 = v52[2];
      sub_10006FF20();
      if (HIDWORD(v55) < v55) {
        goto LABEL_74;
      }
      uint64_t v57 = *(void *)(v53 + 24) + ((v56 >> 24) & 0xFFFF00 | BYTE6(v56)) + v55;
      sub_10003AFD0();
      uint64_t v58 = v85(v57, v57 + (HIDWORD(v55) - v55));
      if (v9)
      {
        sub_10001B070();
        return swift_release();
      }
      a2 = v83;
      unsigned __int8 v46 = sub_1001EC4D4(1, v58, v59 & 1);
      sub_10001B070();
      uint64_t v13 = v82;
      goto LABEL_52;
    }
  }
LABEL_3:
  char v14 = 0;
LABEL_4:
  if (*(unsigned char *)(a1 + 120) == 1)
  {
    swift_release();
    int v15 = 0;
  }
  else
  {
    char v16 = v14;
    uint64_t v17 = *(void *)(a1 + 112);
    swift_retain();
    int v18 = sub_100007640((unsigned char *)(v17 + 16));
    char v14 = v16;
    swift_release();
    *(unsigned char *)(a1 + 120) = v18;
    swift_release();
    if (v18) {
      int v15 = 256;
    }
    else {
      int v15 = 0;
    }
  }
  return v15 | v14 & 1u;
}

#error "1001EB8A8: call analysis failed (funcsize=28)"

uint64_t sub_1001EB8CC()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  BOOL v4 = __OFSUB__(v3, v2);
  uint64_t v5 = v3 - v2;
  if (v5 < 0 != v4) {
    v5 += *(void *)(*(void *)(v0 + 16) + 16);
  }
  BOOL v4 = __OFSUB__(v5, 1);
  BOOL v6 = v5 - 1 < 0;
  uint64_t v7 = v5 - 1;
  if (v6 == v4)
  {
    *(void *)(v0 + 40) = v7;
    *(unsigned char *)(v0 + 48) = 0;
  }
  return result;
}

uint64_t sub_1001EB930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = v3;
  sub_1001ECE50();
  sub_10003AFD0();
  swift_retain();
  sub_1001EBEA4(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL);
  swift_endAccess();
  sub_10001B070();
  swift_release();
  if (v3[13] >= v3[7]) {
    return 1;
  }
  uint64_t v8 = v3[14];
  swift_retain();
  uint64_t v9 = 1;
  BOOL v10 = sub_100007604((atomic_uchar *)(v8 + 16), 1, 0);
  swift_release();
  if (v10)
  {
    uint64_t v9 = 0;
    *((unsigned char *)v4 + 120) = 0;
  }
  return v9;
}

uint64_t sub_1001EBA2C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, void))
{
  uint64_t v7 = v6;
  long long v36 = *a1;
  long long v37 = a1[1];
  char v38 = *((unsigned char *)a1 + 32);
  sub_1001C3B20((uint64_t)&v37 + 8, (uint64_t)v39);
  uint64_t v11 = sub_1001C3B20((uint64_t)v39, (uint64_t)&v40);
  if ((v41 & 1) == 0)
  {
    uint64_t v12 = v40;
    uint64_t v13 = sub_1001FBA50(v11);
    uint64_t v14 = sub_1001A95B4(v13 & 0x1FFFFFFFFFFFFFFLL, v12, v36, *((void *)&v36 + 1), v37);
    uint64_t v15 = sub_1001FBA50(v14);
    uint64_t v16 = sub_1001AAC24(v15 & 0x1FFFFFFFFFFFFFFLL, v14 & 0x1FFFFFFFFFFFFFFLL);
    if (__OFADD__(v16, 1)) {
      goto LABEL_47;
    }
    if (v16 + 1 >= 1024) {
      uint64_t v17 = 1024;
    }
    else {
      uint64_t v17 = v16 + 1;
    }
    if (v17 < 0)
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v17)
    {
      uint64_t v34 = a6;
      uint64_t v35 = v17;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v33 = a2;
      uint64_t v20 = (uint64_t *)(a2 + 8);
      while (v17 != v19)
      {
        if ((*((void *)&v36 + 1) & 0x8000000000000000) != 0) {
          goto LABEL_50;
        }
        if (HIDWORD(*((void *)&v36 + 1))) {
          goto LABEL_50;
        }
        uint64_t v21 = *(void *)(v36 + 16);
        uint64_t v22 = (v21 - 1) & (*((void *)&v36 + 1) + v19);
        if (v22 < 0 != __OFSUB__(v17, v19) || HIDWORD(v22)) {
          goto LABEL_50;
        }
        if (!v21) {
          goto LABEL_41;
        }
        uint64_t v23 = (uint64_t *)(v36 + 32 + 32 * v22);
        if (v23[3] == 1) {
          goto LABEL_48;
        }
        uint64_t v24 = *v23;
        if (*v23 < 0) {
          goto LABEL_29;
        }
        uint64_t v25 = v23[1];
        unint64_t v26 = v23[2];
        if (v19)
        {
          if (__OFSUB__(qword_10030D368, v18)) {
            goto LABEL_44;
          }
          unsigned int v27 = HIDWORD(v25) - v25;
          if (HIDWORD(v25) < v25) {
            goto LABEL_45;
          }
          if (qword_10030D368 - v18 < v27) {
            goto LABEL_29;
          }
        }
        else
        {
          unsigned int v27 = HIDWORD(v25) - v25;
          if (HIDWORD(v25) < v25) {
            goto LABEL_42;
          }
        }
        if (qword_10030D368 >= v27) {
          uint64_t v28 = v27;
        }
        else {
          uint64_t v28 = qword_10030D368;
        }
        BOOL v29 = __OFADD__(v18, v28);
        v18 += v28;
        if (v29) {
          goto LABEL_43;
        }
        uint64_t v42 = v19 + 1;
        swift_beginAccess();
        uint64_t v30 = *(void *)(v24 + 24) + ((v26 >> 24) & 0xFFFF00 | BYTE6(v26));
        *(void *)(a4 + 8 * v19) = v24;
        *(v20 - 1) = v30 + v25;
        *uint64_t v20 = v28;
        swift_unknownObjectRetain();
        uint64_t v17 = v35;
        v20 += 2;
        uint64_t v19 = v42;
        if (v35 == v42)
        {
          uint64_t v19 = v35;
LABEL_29:
          a6 = v34;
          uint64_t v7 = v6;
          a2 = v33;
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
  }
  uint64_t v19 = 0;
LABEL_31:
  if (a2)
  {
    a6(a2, v19);
    if (v7)
    {
      for (; v19; --v19)
      {
        a4 += 8;
        swift_unknownObjectRelease();
      }
    }
    else if (v19)
    {
      uint64_t v31 = v19;
      do
      {
        a4 += 8;
        swift_unknownObjectRelease();
        --v31;
      }
      while (v31);
    }
    return v19;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

void sub_1001EBD6C(Swift::Int a1)
{
  uint64_t v3 = *v1;
  unsigned int v4 = sub_1001FBA50(a1);
  if ((unint64_t)v4 >= *(void *)(v3 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = v3 + 32 * v4;
  uint64_t v6 = *(void *)(v5 + 56);
  if (v6 != 1)
  {
    unsigned int v7 = v4;
    uint64_t v8 = (uint64_t *)(v5 + 32);
    uint64_t v12 = *v8;
    uint64_t v13 = v8[1];
    unsigned int v14 = v8[2];
    unsigned __int8 v16 = BYTE6(v8[2]);
    unsigned __int16 v15 = WORD2(v8[2]);
    IOData.moveReaderIndex(forwardBy:)(a1);
    sub_10003AFD0();
    swift_retain();
    sub_1001EB18C(v12, v13, v14 | ((unint64_t)(v15 | (v16 << 16)) << 32), v6, v7);
    uint64_t v9 = v1[5];
    BOOL v10 = __OFSUB__(v9, a1);
    Swift::Int v11 = v9 - a1;
    if (!v10)
    {
      v1[5] = v11;
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

void sub_1001EBEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 & 0xFFFFFFFFFFFFFFLL;
  sub_10003114C();
  if ((a1 & 0x8000000000000000) == 0)
  {
    unsigned int v7 = HIDWORD(a2) - a2;
    if (HIDWORD(a2) < a2)
    {
      __break(1u);
      goto LABEL_9;
    }
    uint64_t v8 = v3[5];
    v3 += 5;
    BOOL v9 = __OFADD__(v8, v7);
    uint64_t v10 = v8 + v7;
    if (!v9) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v11 = FileRegion.readableBytes.getter(a1 & 0x7FFFFFFFFFFFFFFFLL, a2, v6);
  uint64_t v12 = v3[5];
  v3 += 5;
  uint64_t v10 = v12 + v11;
  if (!__OFADD__(v12, v11))
  {
LABEL_7:
    *uint64_t v3 = v10;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1001EBF24(uint64_t a1, Swift::Int a2, char a3)
{
  unsigned int v4 = v3;
  if ((a3 & 1) == 0 && !a2) {
    return 0;
  }
  if (a1 < 0)
  {
LABEL_59:
    __break(1u);
  }
  else
  {
    if (!a1) {
      return 0;
    }
    unint64_t v7 = v3[1];
    int64_t v6 = v3[2];
    if (v7 != v6)
    {
      uint64_t v5 = 0;
      uint64_t v8 = *v3;
      while ((v7 & 0x8000000000000000) == 0 && !HIDWORD(v7))
      {
        unint64_t v9 = *(void *)(v8 + 16);
        if (v7 >= v9)
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        uint64_t v10 = (void *)(v8 + 32 * v7);
        if (v10[7] == 1) {
          goto LABEL_61;
        }
        uint64_t v11 = v10 + 4;
        uint64_t v12 = v10[5];
        if (*v11 < 0)
        {
          if (v12 < 0) {
            goto LABEL_57;
          }
          uint64_t v14 = v12 - (v11[2] & 0xFFFFFFFFFFFFFFLL);
        }
        else
        {
          BOOL v13 = HIDWORD(v12) >= v12;
          uint64_t v14 = (HIDWORD(v12) - v12);
          if (!v13) {
            goto LABEL_55;
          }
        }
        Swift::Int v15 = a2 - v14;
        if (a2 < v14)
        {
          sub_1001EBD6C(a2);
          return v5;
        }
        if (__OFSUB__(a2, v14)) {
          goto LABEL_51;
        }
        if ((v4[4] & 1) == 0)
        {
          uint64_t v16 = v4[3];
          BOOL v17 = v16 < 1;
          uint64_t v18 = v16 - 1;
          char v19 = v17;
          if (v17) {
            uint64_t v18 = 0;
          }
          v4[3] = v18;
          *((unsigned char *)v4 + 32) = v19;
        }
        if (v6 >= (uint64_t)v7) {
          unint64_t v9 = 0;
        }
        if ((uint64_t)(v6 - v7 + v9) < 1) {
          goto LABEL_52;
        }
        Swift::Int v32 = v15;
        uint64_t v33 = a1;
        uint64_t v20 = v11[3];
        if (v20 == 1) {
          goto LABEL_62;
        }
        uint64_t v21 = *v11;
        uint64_t v22 = v11[1];
        uint64_t v23 = v11[2];
        sub_10003AFD0();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10011FD2C();
          uint64_t v8 = v24;
        }
        if (v7 >= *(void *)(v8 + 16)) {
          goto LABEL_53;
        }
        uint64_t v25 = (uint64_t *)(v8 + 32 * v7);
        sub_10003BD68(v25[4], v25[5], v25[6], v25[7]);
        v25[4] = 0;
        v25[5] = 0;
        v25[6] = 0;
        v25[7] = 1;
        *unsigned int v4 = v8;
        unint64_t v7 = (*(void *)(v8 + 16) - 1) & (v7 + 1);
        v4[1] = v7;
        if (v21 < 0)
        {
          if (v22 < 0) {
            goto LABEL_58;
          }
          uint64_t v26 = v22 - (v23 & 0xFFFFFFFFFFFFFFLL);
        }
        else
        {
          uint64_t v26 = (HIDWORD(v22) - v22);
          if (HIDWORD(v22) < v22) {
            goto LABEL_56;
          }
        }
        uint64_t v27 = v4[5];
        BOOL v28 = __OFSUB__(v27, v26);
        uint64_t v29 = v27 - v26;
        if (v28) {
          goto LABEL_54;
        }
        v4[5] = v29;
        swift_retain();
        sub_10003BD68(v21, v22, v23, v20);
        if (v20)
        {
          if (v5)
          {
            swift_retain_n();
            uint64_t v30 = swift_retain();
            sub_100031E30(v30);
            swift_release_n();
            swift_release_n();
          }
          else
          {
            uint64_t v5 = v20;
          }
        }
        a2 = v32;
        a1 = v33 - 1;
        if (v33 == 1) {
          return v5;
        }
        if (v7 == v6)
        {
          swift_release();
          __break(1u);
          return 0;
        }
      }
      goto LABEL_63;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t sub_1001EC248()
{
  unint64_t v2 = v0[1];
  int64_t v1 = v0[2];
  if (v2 == v1) {
    return 0;
  }
  uint64_t v23 = 0;
  uint64_t v24 = v0;
  uint64_t v4 = v0[5];
  uint64_t v5 = *v0;
  while (1)
  {
    if ((v0[4] & 1) == 0)
    {
      uint64_t v6 = v0[3];
      BOOL v7 = v6 < 1;
      uint64_t v8 = v6 - 1;
      char v9 = v7;
      if (v7) {
        uint64_t v8 = 0;
      }
      v0[3] = v8;
      *((unsigned char *)v0 + 32) = v9;
    }
    uint64_t v10 = v1 - v2;
    if (v1 < (uint64_t)v2) {
      v10 += *(void *)(v5 + 16);
    }
    if (v10 < 1) {
      break;
    }
    if ((v2 & 0x8000000000000000) != 0 || HIDWORD(v2)) {
      goto LABEL_44;
    }
    unint64_t v11 = *(void *)(v5 + 16);
    if (v2 >= v11) {
      goto LABEL_37;
    }
    uint64_t v12 = (void *)(v5 + 32 * v2);
    uint64_t v13 = v12[7];
    if (v13 == 1) {
      goto LABEL_43;
    }
    if (v1 >= (uint64_t)v2) {
      unint64_t v11 = 0;
    }
    if ((uint64_t)(v1 - v2 + v11) < 1) {
      goto LABEL_38;
    }
    uint64_t v14 = v12[4];
    uint64_t v15 = v12[5];
    uint64_t v16 = v12[6];
    sub_10003AFD0();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10011FD2C();
      uint64_t v5 = v17;
    }
    if (v2 >= *(void *)(v5 + 16)) {
      goto LABEL_39;
    }
    uint64_t v18 = (uint64_t *)(v5 + 32 * v2);
    sub_10003BD68(v18[4], v18[5], v18[6], v18[7]);
    v18[4] = 0;
    v18[5] = 0;
    v18[6] = 0;
    v18[7] = 1;
    uint64_t v19 = *(void *)(v5 + 16);
    if (v14 < 0)
    {
      if (v15 < 0) {
        goto LABEL_42;
      }
      uint64_t v20 = v15 - (v16 & 0xFFFFFFFFFFFFFFLL);
    }
    else
    {
      uint64_t v20 = (HIDWORD(v15) - v15);
      if (HIDWORD(v15) < v15) {
        goto LABEL_41;
      }
    }
    BOOL v21 = __OFSUB__(v4, v20);
    v4 -= v20;
    if (v21) {
      goto LABEL_40;
    }
    swift_retain();
    sub_10003BD68(v14, v15, v16, v13);
    if (v13)
    {
      if (v23)
      {
        swift_retain_n();
        uint64_t v22 = swift_retain();
        sub_100031E30(v22);
        swift_release_n();
        swift_release_n();
      }
      else
      {
        uint64_t v23 = v13;
      }
    }
    unint64_t v2 = (v19 - 1) & (v2 + 1);
    uint64_t v0 = v24;
    if (v2 == v1)
    {
      v24[5] = v4;
      *uint64_t v24 = v5;
      v24[1] = v1;
      return v23;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

#error "1001EC588: call analysis failed (funcsize=56)"

uint64_t sub_1001EC5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100030830(0x10uLL);
  *(void *)(v4 + 16) = v9;
  *(void *)(v4 + 24) = v10;
  *(void *)(v4 + 32) = v11;
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = 1;
  *(void *)(v4 + 56) = 0;
  *(_OWORD *)(v4 + 96) = xmmword_100267530;
  sub_100019524(&qword_100316FC8);
  uint64_t v12 = swift_bufferAllocate();
  sub_10000764C((unsigned char *)(v12 + 16), 1);
  *(void *)(v4 + 112) = swift_dynamicCastClassUnconditional();
  *(unsigned char *)(v4 + 120) = 1;
  *(void *)(v4 + 128) = 16;
  *(unsigned char *)(v4 + 136) = 1;
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = a4;
  return v4;
}

uint64_t sub_1001EC68C()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1001EC6B4()
{
  sub_1001EC68C();
  return _swift_deallocClassInstance(v0, 137, 7);
}

uint64_t type metadata accessor for PendingStreamWritesManager()
{
  return self;
}

uint64_t initializeWithCopy for PendingStreamWritesState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PendingStreamWritesState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for PendingStreamWritesState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingStreamWritesState(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingStreamWritesState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingStreamWritesState()
{
  return &type metadata for PendingStreamWritesState;
}

unint64_t sub_1001EC8C0()
{
  sub_10024F330(49);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 48)) {
    v1._countAndFlagsBits = 0x65736C6166;
  }
  else {
    v1._countAndFlagsBits = 1702195828;
  }
  if (*(unsigned char *)(v0 + 48)) {
    uint64_t v2 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v2 = (void *)0xE400000000000000;
  }
  v1._object = v2;
  sub_10024E800(v1);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  sub_10024E800(v8);
  sub_10024F330(33);
  v9._object = (void *)0x8000000100284470;
  v9._countAndFlagsBits = 0xD000000000000011;
  sub_10024E800(v9);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_retain();
  int v4 = sub_100007640((unsigned char *)(v3 + 16));
  swift_release();
  if (v4) {
    v5._countAndFlagsBits = 1702195828;
  }
  else {
    v5._countAndFlagsBits = 0x65736C6166;
  }
  if (v4) {
    uint64_t v6 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v6 = (void *)0xE500000000000000;
  }
  v5._object = v6;
  sub_10024E800(v5);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x6574617473202C29;
  v10._object = (void *)0xEA0000000000203ALL;
  sub_10024E800(v10);
  sub_10024F5C0();
  v11._countAndFlagsBits = 32032;
  v11._object = (void *)0xE200000000000000;
  sub_10024E800(v11);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  sub_10024E800(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD00000000000002DLL;
}

unint64_t sub_1001ECAD8()
{
  return sub_1001EC8C0();
}

uint64_t destroy for PendingStreamWrite()
{
  sub_10001B070();
  return swift_release();
}

uint64_t initializeWithCopy for PendingStreamWrite(uint64_t a1, uint64_t *a2)
{
  int v4 = *((_DWORD *)a2 + 4);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  char v7 = *((unsigned char *)a2 + 22);
  __int16 v8 = *((_WORD *)a2 + 10);
  sub_10003AFD0();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PendingStreamWrite(uint64_t a1, uint64_t *a2)
{
  int v4 = *((_DWORD *)a2 + 4);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  char v7 = *((unsigned char *)a2 + 22);
  __int16 v8 = *((_WORD *)a2 + 10);
  sub_10003AFD0();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  sub_10001B070();
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PendingStreamWrite(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  __int16 v5 = *(_WORD *)(a2 + 20);
  char v6 = *(unsigned char *)(a2 + 22);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 20) = v5;
  *(unsigned char *)(a1 + 22) = v6;
  sub_10001B070();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingStreamWrite(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingStreamWrite(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingStreamWrite()
{
  return &type metadata for PendingStreamWrite;
}

uint64_t sub_1001ECDD8()
{
  sub_10003AFD0();
  return sub_10003AFD0();
}

uint64_t sub_1001ECE14()
{
  sub_10001B070();
  return sub_10001B070();
}

uint64_t sub_1001ECE50()
{
  return swift_beginAccess();
}

Swift::Int sub_1001ECE74(Swift::Int result, Swift::Int a2)
{
  if (result == a2) {
    return swift_release();
  }
  Swift::Int v3 = result;
  if (a2 >= result)
  {
    while (v3 < a2)
    {
      ++v3;
      uint64_t result = sub_10024EF20();
      if (a2 == v3) {
        return swift_release();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t NIOThreadPool.runIfActive<A>(eventLoop:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = EventLoop.makePromise<A>(of:file:line:)(a5, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/NIOThreadPool.swift", 115, 2, 224, ObjectType, a5, a2);
  Swift::String v11 = (void *)swift_allocObject();
  v11[2] = a5;
  unsigned char v11[3] = v10;
  v11[4] = a3;
  v11[5] = a4;
  swift_retain();
  swift_retain();
  NIOThreadPool.submit(_:)((uint64_t)sub_1001EE5F8, (uint64_t)v11);
  swift_release();
  return v10;
}

uint64_t NIOThreadPool.shutdownGracefully(queue:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10024E2A0();
  sub_10001B550();
  uint64_t v36 = v5;
  __chkstk_darwin(v6, v7);
  sub_10002059C();
  uint64_t v32 = sub_10024EE80();
  sub_10001B550();
  uint64_t v9 = v8;
  __chkstk_darwin(v10, v11);
  sub_10002059C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10024EE60();
  __chkstk_darwin(v15, v16);
  sub_1001EEED0();
  sub_10024E2D0();
  sub_10001B550();
  uint64_t v35 = v17;
  __chkstk_darwin(v18, v19);
  sub_1000ACE78();
  dispatch_group_t v20 = dispatch_group_create();
  uint64_t v21 = *(void *)(v3 + 24);
  swift_retain();
  uint64_t v31 = sub_100172874(v21, v3, a1);
  sub_100051014();
  sub_10024E2C0();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_1000510D8((unint64_t *)&qword_10030B050, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100019524((uint64_t *)&unk_1003170E0);
  sub_100051120((unint64_t *)&qword_10030B058, (uint64_t *)&unk_1003170E0);
  sub_10024F280();
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v14, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  uint64_t v22 = (void *)sub_10024EEC0();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v31;
  char v41 = sub_1001EE640;
  uint64_t v42 = v23;
  aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_100018758;
  uint64_t v40 = &unk_1002F0028;
  uint64_t v24 = _Block_copy(&aBlock);
  uint64_t v30 = v20;
  sub_10024E2C0();
  sub_1000510D8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100019524(&qword_100309168);
  sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
  sub_10024F280();
  sub_10024EEB0();
  _Block_release(v24);

  uint64_t v25 = *(void (**)(void))(v36 + 8);
  sub_1000ACADC();
  v25();
  uint64_t v26 = *(void (**)(void))(v35 + 8);
  sub_1000ACADC();
  v26();
  swift_release();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a2;
  *(void *)(v27 + 24) = a3;
  char v41 = sub_1001EE660;
  uint64_t v42 = v27;
  aBlock = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_100018758;
  uint64_t v40 = &unk_1002F0078;
  BOOL v28 = _Block_copy(&aBlock);
  swift_retain();
  sub_10024E2C0();
  sub_10024F280();
  sub_10024EE50();
  _Block_release(v28);

  sub_1000ACADC();
  v25();
  sub_1000ACADC();
  v26();
  return swift_release();
}

void sub_1001ED504(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10024E2A0();
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_1001EEED0();
  sub_10024E2D0();
  sub_10001B550();
  __chkstk_darwin(v10, v11);
  sub_10002059C();
  uint64_t v16 = v15 - v14;
  if (*(unsigned char *)(a1 + 64) == 1)
  {
    uint64_t v29 = a2;
    uint64_t v30 = v13;
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 40);
    uint64_t v31 = v12;
    dispatch_group_t v20 = (void *)swift_allocObject();
    void v20[2] = v19;
    v20[3] = v18;
    v20[4] = v17;
    aBlock[4] = sub_1001EEEA0;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018758;
    aBlock[3] = &unk_1002F0318;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    sub_10024E2C0();
    aBlock[7] = _swiftEmptyArrayStorage;
    sub_1000510D8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100019524(&qword_100309168);
    sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
    sub_10024F280();
    sub_10024EEB0();
    _Block_release(v21);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v16, v31);
    swift_release();
    size_t v22 = *(void *)(a1 + 72);
    uint64_t v23 = sub_1000DA96C(1, v22);
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v24 = *(void *)(a1 + 48);
    uint64_t v26 = *(void *)(a1 + 56);
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 40) = v23;
    char v27 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = 0;
    sub_1001EE68C(v25, v24, v26, v27);
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_retain();
      sub_1001ECE74(0, v22);
      swift_beginAccess();
      uint64_t v28 = *(void *)(a1 + 32);
      if (v28)
      {
        *uint64_t v29 = v28;
        *(void *)(a1 + 32) = 0;
        return;
      }
    }
    __break(1u);
  }
  else
  {
    *a2 = _swiftEmptyArrayStorage;
  }
}

uint64_t sub_1001ED804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100032980(a1);
  swift_retain();
  if (a3 < 0 || HIDWORD(a3)) {
    goto LABEL_22;
  }
  BOOL v8 = v6 == a3
    && (v6 & 0xFFFF00000000) == 0xFFFF00000000
    && (v6 & 0xFF000000000000) == 0xFF000000000000;
  if (!v8 || a3 < a2 == (HIBYTE(v6) & 1))
  {
    while (1)
    {
      unint64_t v9 = *(void *)(a1 + 16);
      if (v6 >= v9) {
        break;
      }
      uint64_t v10 = *(void (**)(char *))(a1 + 32 + 16 * v6);
      if (!v10) {
        goto LABEL_21;
      }
      uint64_t v6 = (v9 - 1) & (v6 + 1);
      if (HIDWORD(v6)) {
        goto LABEL_22;
      }
      char v12 = 1;
      v10(&v12);
      if (v6 == a3 && a3 < a2 != v6 >= a2) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
    while (1)
    {
LABEL_22:
      sub_10024F660();
      __break(1u);
    }
  }
LABEL_17:
  return swift_release();
}

uint64_t sub_1001ED9A8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_10024F6F0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_9;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = sub_10024F380();
    }
    else
    {
      uint64_t v5 = *(void *)(a1 + 8 * i + 32);
      swift_retain();
    }
    pthread_join(*(pthread_t *)(v5 + 32), 0);
    swift_release();
  }
LABEL_9:
  return swift_bridgeObjectRelease();
}

uint64_t (*NIOThreadPool.submit(_:)(uint64_t a1, uint64_t a2))(unsigned __int8 *a1)
{
  uint64_t v5 = *(uint64_t (**)(unsigned __int8 *))(v2 + 24);
  swift_retain();
  swift_retain();
  uint64_t result = sub_1001727CC(v5, v2, a1, a2);
  if (result)
  {
    uint64_t v7 = (uint64_t)result;
    v8[0] = 1;
    result((unsigned __int8 *)v8);
    return (uint64_t (*)(unsigned __int8 *))sub_100140810(v7);
  }
  return result;
}

void sub_1001EDB18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(unsigned __int8 *a1)@<X8>)
{
  if (*(unsigned char *)(a1 + 64) != 1)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a2;
    *(void *)(v16 + 24) = a3;
    *a4 = sub_1001EEE44;
    a4[1] = (uint64_t (*)(unsigned __int8 *))v16;
    swift_retain();
    return;
  }
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_1001EECAC(v10, v8, v9, 1);
  swift_retain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FD6C();
    uint64_t v10 = v12;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 >= *(void *)(v10 + 16))
  {
LABEL_11:
    __break(1u);
    return;
  }
  unint64_t v13 = v10 + 16 * v9;
  uint64_t v14 = sub_100140810(*(void *)(v13 + 32));
  *(void *)(v13 + 32) = sub_1001EEECC;
  *(void *)(v13 + 40) = v11;
  uint64_t v15 = (*(void *)(v10 + 16) - 1) & (v9 + 1);
  if (v8 == v15) {
    sub_100121E4C(v14);
  }
  swift_release();
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v15;
  char v20 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = 1;
  sub_1001EE68C(v17, v18, v19, v20);
  sub_10024EF20();
  *a4 = 0;
  a4[1] = 0;
}

uint64_t NIOThreadPool.__allocating_init(numberOfThreads:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  NIOThreadPool.init(numberOfThreads:)(a1);
  return v2;
}

uint64_t NIOThreadPool.init(numberOfThreads:)(uint64_t a1)
{
  *(void *)(v1 + 16) = dispatch_semaphore_create(0);
  type metadata accessor for Lock();
  swift_allocObject();
  *(void *)(v1 + 24) = Lock.init()();
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(unsigned char *)(v1 + 64) = 2;
  *(void *)(v1 + 72) = a1;
  return v1;
}

uint64_t sub_1001EDD74(unint64_t a1)
{
  sub_10024EF10();
  swift_retain();
  Lock.lock()();
  uint64_t v3 = v1;
  for (unint64_t i = a1; ; unint64_t i = a1)
  {
    sub_1001EDE60(v3, i, &v7);
    Lock.unlock()();
    uint64_t result = swift_release();
    uint64_t v6 = v7;
    if (!v7) {
      break;
    }
    LOBYTE(v7) = 0;
    v6(&v7);
    sub_100140810((uint64_t)v6);
    sub_10024EF10();
    swift_retain();
    Lock.lock()();
    uint64_t v3 = v1;
  }
  return result;
}

void sub_1001EDE60(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = a1 + 48;
  unint64_t v5 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 40);
  if (*(unsigned char *)(a1 + 64))
  {
    if (*(unsigned char *)(a1 + 64) != 1)
    {
LABEL_16:
      *a3 = 0;
      a3[1] = 0;
      return;
    }
    unint64_t v8 = *(void *)(a1 + 56);
    if (v8 == v5)
    {
      __break(1u);
    }
    else
    {
      sub_100032980(*(void *)(a1 + 40));
      sub_100032ADC();
      uint64_t v6 = v9;
      uint64_t v11 = v10;
      uint64_t v12 = v8 - v5;
      if ((uint64_t)v8 < (uint64_t)v5) {
        v12 += *(void *)(v7 + 16);
      }
      if (v12 >= 1)
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10011FD6C();
          uint64_t v7 = v13;
        }
        if ((v5 & 0x8000000000000000) == 0)
        {
          if (v5 < *(void *)(v7 + 16))
          {
            uint64_t v14 = v7 + 16 * v5;
            sub_100140810(*(void *)(v14 + 32));
            *(void *)(v14 + 32) = 0;
            *(void *)(v14 + 40) = 0;
            uint64_t v15 = *(void *)(v7 + 16) - 1;
            uint64_t v16 = *(void *)(a1 + 40);
            uint64_t v17 = *(void *)(a1 + 48);
            uint64_t v18 = *(void *)(a1 + 56);
            *(void *)(a1 + 40) = v7;
            *(void *)(a1 + 48) = v15 & (v5 + 1);
            *(void *)(a1 + 56) = v8;
            char v19 = *(unsigned char *)(a1 + 64);
            *(unsigned char *)(a1 + 64) = 1;
            sub_1001EE68C(v16, v17, v18, v19);
            *a3 = v6;
            a3[1] = v11;
            return;
          }
          goto LABEL_20;
        }
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        sub_1001A8CAC();
        uint64_t v7 = v24;
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_22;
        }
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v8 = a2;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_21;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_14:
  if (*(void *)(v7 + 16) > v8)
  {
    *(unsigned char *)(v7 + v8 + 32) = 0;
    uint64_t v20 = *(void *)(a1 + 40);
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = *(void *)(a1 + 56);
    *(void *)(a1 + 40) = v7;
    *(void *)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    char v23 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(v6 + 16) = 0;
    sub_1001EE68C(v20, v21, v22, v23);
    goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

Swift::Void __swiftcall NIOThreadPool.start()()
{
  swift_retain();
  Lock.lock()();
  int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 == 1)
  {
    Lock.unlock()();
    swift_release();
    return;
  }
  if (v1 != 2)
  {
LABEL_12:
    sub_10024F670();
    __break(1u);
    return;
  }
  sub_100030B24(0x10uLL);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  *(void *)(v0 + 40) = v5;
  *(void *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v7;
  char v8 = *(unsigned char *)(v0 + 64);
  *(unsigned char *)(v0 + 64) = 1;
  sub_1001EE68C(v2, v3, v4, v8);
  Lock.unlock()();
  swift_release();
  uint64_t v9 = dispatch_group_create();
  Lock.lock()();
  sub_1001EE240(v0);
  Lock.unlock()();
  uint64_t v10 = *(void *)(v0 + 72);
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v10)
  {
    type metadata accessor for NIOThread();
    for (uint64_t i = 0; i != v10; ++i)
    {
      dispatch_group_enter(v9);
      v15._countAndFlagsBits = sub_10024F9E0();
      sub_10024E800(v15);
      swift_bridgeObjectRelease();
      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = v0;
      v12[3] = v9;
      v12[4] = i;
      swift_retain();
      uint64_t v13 = v9;
      sub_1000C6D6C(590172244, 0xE400000000000000, 0, (uint64_t)sub_1001EE6E0, (uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  sub_10024EE40();
}

uint64_t sub_1001EE240(uint64_t a1)
{
  *(void *)(a1 + 32) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(void *)(a1 + 32))
  {
    sub_100082944(*(void *)(a1 + 72), 0);
    sub_10024EAC0();
  }
  return swift_endAccess();
}

uint64_t sub_1001EE2D8(uint64_t a1, uint64_t a2, NSObject *a3, unint64_t a4)
{
  return sub_1001EDD74(a4);
}

uint64_t sub_1001EE34C(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 32);
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 32))
  {
    swift_retain();
    sub_10024EA70();
    sub_1000348E0(*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_10024EB10();
    sub_10024EAC0();
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NIOThreadPool.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001EE68C(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  return v0;
}

uint64_t NIOThreadPool.__deallocating_deinit()
{
  NIOThreadPool.deinit();
  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1001EE458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  double v8 = __chkstk_darwin(a1, a2);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v11)
  {
    sub_10011C0BC();
    uint64_t v12 = swift_allocError();
    EventLoopPromise.fail(_:)(v12);
    return swift_errorRelease();
  }
  else
  {
    v7(v8);
    EventLoopPromise.succeed(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, a5);
  }
}

uint64_t sub_1001EE5B8()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001EE5F8(char a1)
{
  return sub_1001EE458(a1 & 1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1001EE608()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001EE640()
{
  return sub_1001ED9A8(*(void *)(v0 + 16));
}

uint64_t sub_1001EE648(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001EE658()
{
  return swift_release();
}

uint64_t sub_1001EE660()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1001EE68C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_release();
  }
  if (!a4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001EE6A8()
{
  swift_release();

  uint64_t v1 = sub_100140E60();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1001EE6E0(uint64_t a1)
{
  return sub_1001EE2D8(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24), *(void *)(v1 + 32));
}

void NIOThreadPool.shutdownGracefully(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10024E2B0();
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_10002059C();
  uint64_t v11 = v10 - v9;
  sub_100051014();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v4);
  uint64_t v12 = (void *)sub_10024EED0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
  NIOThreadPool.shutdownGracefully(queue:_:)(v12, a1, a2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NIOThreadPool.syncShutdownGracefully()()
{
  uint64_t v0 = sub_10024E2A0();
  __chkstk_darwin(v0, v1);
  sub_1000ACE78();
  type metadata accessor for Lock();
  swift_allocObject();
  uint64_t v2 = Lock.init()();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  aBlock[4] = debugOnly(_:);
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018758;
  aBlock[3] = &unk_1002F00F0;
  _Block_copy(aBlock);
  aBlock[7] = _swiftEmptyArrayStorage;
  sub_1000510D8((unint64_t *)&qword_100317080, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100019524(&qword_100309168);
  sub_100051120((unint64_t *)&qword_100317090, &qword_100309168);
  sub_10024F280();
  sub_10024E380();
  swift_allocObject();
  uint64_t v4 = sub_10024E360();
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v2;
  v5[3] = v3;
  v5[4] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  NIOThreadPool.shutdownGracefully(_:)((uint64_t)sub_1000F632C, (uint64_t)v5);
  swift_release();
  sub_10024E350();
  Lock.lock()();
  swift_beginAccess();
  if (*(void *)(v3 + 16))
  {
    swift_errorRetain();
    swift_willThrow();
  }
  Lock.unlock()();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1001EEAA8()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001EEAE0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

unint64_t sub_1001EEB24()
{
  unint64_t result = qword_100318BE8;
  if (!qword_100318BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318BE8);
  }
  return result;
}

void type metadata accessor for NIOThreadPoolError()
{
}

void type metadata accessor for NIOThreadPoolError.ThreadPoolInactive()
{
}

uint64_t type metadata accessor for NIOThreadPool()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for NIOThreadPool.WorkItemState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001EEC78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for NIOThreadPool.WorkItemState()
{
}

uint64_t sub_1001EECAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_retain();
  }
  if (!a4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for NIOThreadPool.State(uint64_t a1)
{
  return sub_1001EE68C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for NIOThreadPool.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1001EECAC(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for NIOThreadPool.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1001EECAC(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1001EE68C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for NIOThreadPool.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1001EE68C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for NIOThreadPool.State()
{
  return &type metadata for NIOThreadPool.State;
}

uint64_t sub_1001EEE0C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001EEE44(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1001EEE70()
{
  swift_release();
  uint64_t v0 = sub_100140E60();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1001EEEA0()
{
  return sub_1001ED804(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001EEED0()
{
  return 0;
}

ValueMetadata *type metadata accessor for InAppQueueCheckRequest()
{
  return &type metadata for InAppQueueCheckRequest;
}

uint64_t sub_1001EEEFC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9DA0;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001EEF4C(char a1)
{
  uint64_t result = 6580578;
  switch(a1)
  {
    case 1:
      uint64_t result = 1936881250;
      break;
    case 2:
      uint64_t result = 1684632935;
      break;
    case 3:
      uint64_t result = 0x6E4F707041534F69;
      break;
    case 4:
      uint64_t result = 6580598;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001EEFDC(char a1)
{
  uint64_t result = 6580578;
  switch(a1)
  {
    case 1:
      uint64_t result = 1936881250;
      break;
    case 2:
      uint64_t result = 1684632935;
      break;
    case 3:
      uint64_t result = 0x6E4F707041534F69;
      break;
    case 4:
      uint64_t result = 6580598;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001EF06C(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100318CC0);
  sub_10001B550();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C2A8(a1, a1[3]);
  sub_1001EF6F4();
  sub_10024FD40();
  v11[15] = 0;
  sub_10024F940();
  if (!v1)
  {
    v11[14] = 1;
    sub_10024F940();
    v11[13] = 2;
    sub_100052BD4();
    v11[12] = 3;
    sub_100052BD4();
    v11[11] = 4;
    sub_100052BD4();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1001EF1F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100019524(&qword_100318CB0);
  sub_10001B550();
  __chkstk_darwin(v5, v6);
  sub_10001C2A8(a1, a1[3]);
  sub_1001EF6F4();
  sub_10024FD20();
  if (v2) {
    return sub_10001C2EC((uint64_t)a1);
  }
  uint64_t v7 = sub_10024F830();
  uint64_t v9 = v8;
  uint64_t v27 = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10024F830();
  uint64_t v28 = v11;
  uint64_t v24 = v10;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_10024F7C0();
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v25 = v13;
  uint64_t v22 = sub_10024F7C0();
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10024F7C0();
  uint64_t v18 = v17;
  uint64_t v26 = v16;
  uint64_t v19 = sub_1001882BC();
  v20(v19);
  swift_bridgeObjectRetain();
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v9;
  a2[2] = v24;
  a2[3] = v28;
  a2[4] = v23;
  a2[5] = v25;
  a2[6] = v22;
  a2[7] = v15;
  a2[8] = v26;
  a2[9] = v18;
  return result;
}

Swift::Int sub_1001EF57C()
{
  return sub_1001D3B6C(*v0);
}

Swift::Int sub_1001EF584(uint64_t a1)
{
  return sub_1000D2DBC(a1, *v1);
}

uint64_t sub_1001EF58C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001EEEFC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1001EF5BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001EEF4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001EF5E8()
{
  return sub_1001EEFDC(*v0);
}

uint64_t sub_1001EF5F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001EEF48();
  *a1 = result;
  return result;
}

uint64_t sub_1001EF618(uint64_t a1)
{
  unint64_t v2 = sub_1001EF6F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001EF654(uint64_t a1)
{
  unint64_t v2 = sub_1001EF6F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1001EF690@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1001EF1F8(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x50uLL);
  }
  return result;
}

uint64_t sub_1001EF6DC(void *a1)
{
  return sub_1001EF06C(a1);
}

unint64_t sub_1001EF6F4()
{
  unint64_t result = qword_100318CB8;
  if (!qword_100318CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InAppQueueCheckRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001EF80CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppQueueCheckRequest.CodingKeys()
{
  return &type metadata for InAppQueueCheckRequest.CodingKeys;
}

unint64_t sub_1001EF848()
{
  unint64_t result = qword_100318CC8;
  if (!qword_100318CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CC8);
  }
  return result;
}

unint64_t sub_1001EF898()
{
  unint64_t result = qword_100318CD0;
  if (!qword_100318CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CD0);
  }
  return result;
}

unint64_t sub_1001EF8E8()
{
  unint64_t result = qword_100318CD8;
  if (!qword_100318CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CD8);
  }
  return result;
}

double sub_1001EF934(uint64_t a1, char a2, unsigned __int8 a3, uint64_t a4)
{
  if (!(a3 >> 6))
  {
    double v9 = (double)sub_1002140FC(a4, a1, a2);
    double v6 = sub_1001EFAF0(a3) * v9;
LABEL_6:
    sub_10024E030();
    sub_1001F0254();
    uint64_t v10 = sub_1001F0268();
    v11(v10);
    return v6;
  }
  if (a3 >> 6 != 1)
  {
    sub_10024E030();
    sub_1001F0254();
    uint64_t v12 = sub_1001F0268();
    v13(v12);
    return dbl_10026C5B0[a3 & 0x3F];
  }
  double v6 = sub_1001EFB40(a2, a3 & 0x3F) * (double)a1;
  if (a2 != 3) {
    goto LABEL_6;
  }
  sub_10024E030();
  sub_1001F0254();
  uint64_t v7 = sub_1001F0268();
  v8(v7);
  return round(v6 / 60.0) * 60.0;
}

unint64_t sub_1001EFA5C(unint64_t a1)
{
  unint64_t result = sub_1001EFB04(a1);
  if (result == 7)
  {
    int v3 = sub_1001EFC14(a1);
    if (v3 == 6)
    {
      char v4 = sub_1001EFCA0(a1);
      if (v4 == 6) {
        return 4294967288;
      }
      else {
        return *(_DWORD *)&v4 | 0xFFFFFF80;
      }
    }
    else
    {
      return v3 | 0x40u;
    }
  }
  return result;
}

uint64_t sub_1001EFAC4(uint64_t result)
{
  uint64_t v1 = (result & 0x3F) + 10;
  if (result >> 6 != 1) {
    uint64_t v1 = (result & 0x3F) + 1000;
  }
  if (result >> 6) {
    return v1;
  }
  else {
    return result;
  }
}

double sub_1001EFAF0(char a1)
{
  return dbl_10026C5E0[a1];
}

unint64_t sub_1001EFB04(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

unint64_t sub_1001EFB14@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001EFB04(*a1);
  *a2 = result;
  return result;
}

double sub_1001EFB40(char a1, char a2)
{
  switch(a1)
  {
    case 1:
      uint64_t v2 = 2;
      goto LABEL_4;
    case 2:
      double v3 = sub_1001EFB40(3);
      double v4 = 24.0;
      goto LABEL_7;
    case 3:
      double v3 = sub_1001EFB40(4) * 0.666666667;
      double v4 = 3.0;
      goto LABEL_7;
    case 4:
      uint64_t v6 = a2;
      uint64_t v7 = (double *)&unk_10026C648;
      goto LABEL_10;
    case 5:
      uint64_t v6 = a2;
      uint64_t v7 = (double *)&unk_10026C618;
LABEL_10:
      double result = v7[v6];
      break;
    case 6:
      double result = sub_1001EFB40(5) * 12.0;
      break;
    default:
      uint64_t v2 = 1;
LABEL_4:
      double v3 = sub_1001EFB40(v2);
      double v4 = 60.0;
LABEL_7:
      double result = v3 / v4;
      break;
  }
  return result;
}

uint64_t sub_1001EFC14(uint64_t a1)
{
  if ((unint64_t)(a1 - 10) >= 6) {
    return 6;
  }
  else {
    return a1 - 10;
  }
}

uint64_t sub_1001EFC28(unsigned __int8 a1)
{
  return a1 + 10;
}

Swift::Int sub_1001EFC34()
{
  return sub_1001D3BC4(*v0);
}

void sub_1001EFC3C()
{
}

Swift::Int sub_1001EFC44()
{
  return sub_1000D3748();
}

uint64_t sub_1001EFC4C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001EFC14(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001EFC78()
{
  unsigned __int8 v1 = sub_1000621E4();
  uint64_t result = sub_1001EFC28(v1);
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1001EFCA0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1000) >= 6) {
    return 6;
  }
  else {
    return a1 - 1000;
  }
}

uint64_t sub_1001EFCB4(unsigned __int8 a1)
{
  return a1 + 1000;
}

Swift::Int sub_1001EFCC0()
{
  return sub_1001D3C08(*v0);
}

void sub_1001EFCC8()
{
}

Swift::Int sub_1001EFCD0()
{
  return sub_1000D3788();
}

uint64_t sub_1001EFCD8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001EFCA0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001EFD04()
{
  unsigned __int8 v1 = sub_1000621E4();
  uint64_t result = sub_1001EFCB4(v1);
  *uint64_t v0 = result;
  return result;
}

unint64_t sub_1001EFD2C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001EFA5C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001EFD58()
{
  uint64_t v1 = sub_1000621E4();
  uint64_t result = sub_1001EFAC4(v1);
  *uint64_t v0 = result;
  return result;
}

void type metadata accessor for OctaneTimeRate.PerRenewal()
{
}

unsigned char *sub_1001EFD90(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001EFE5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for OctaneTimeRate.PerMonth()
{
}

uint64_t sub_1001EFE90(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x1E)
  {
    if (a2 + 226 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 226) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 227;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v5 >= 0x1D) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *sub_1001EFF28(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 226 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 226) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1D)
  {
    unsigned int v6 = ((a2 - 30) >> 8) + 1;
    *uint64_t result = a2 - 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001F0000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1001F0028(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

unsigned char *sub_1001F0034(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1001F0044(unsigned char *result, char a2)
{
  *uint64_t result = *result & 7 | (a2 << 6);
  return result;
}

void type metadata accessor for OctaneTimeRate()
{
}

unsigned char *sub_1001F0064(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001F0130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for OctaneTimeRate.PerDay()
{
}

unint64_t sub_1001F0168()
{
  unint64_t result = qword_100318CE0;
  if (!qword_100318CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CE0);
  }
  return result;
}

unint64_t sub_1001F01B8()
{
  unint64_t result = qword_100318CE8;
  if (!qword_100318CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CE8);
  }
  return result;
}

unint64_t sub_1001F0208()
{
  unint64_t result = qword_100318CF0;
  if (!qword_100318CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318CF0);
  }
  return result;
}

uint64_t sub_1001F0268()
{
  return v0;
}

uint64_t sub_1001F0278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void sub_1001F02A0(uint64_t a1, void *a2)
{
  int v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id sub_1001F0304(uint64_t a1)
{
  int v2 = v1;
  swift_getObjectType();
  type metadata accessor for TransactionEntity();
  uint64_t v4 = sub_100212D78(a1);
  uint64_t v5 = (void *)sub_1001531A4(v4, [v2 connection]);
  type metadata accessor for Transaction();
  id v6 = v5;
  uint64_t v7 = sub_1000D9194();
  uint64_t v8 = sub_10007CE74((uint64_t)v7);
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v10 = sub_1001F1A2C(v6, (uint64_t)v8);

  return v10;
}

id sub_1001F03E4(uint64_t *a1, unint64_t a2)
{
  id v5 = [v2 connection];
  NSString v6 = sub_10024E6A0();
  uint64_t v7 = sub_10004F2C8();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = (void *)sub_10004F2C8();
  void v8[2] = sub_1001F5124;
  v8[3] = v7;
  aBlock[4] = sub_1001F57A4;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100205BF8;
  aBlock[3] = &unk_1002F0838;
  id v9 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v10 = [v5 executeStatement:v6 error:aBlock bindings:v9];
  _Block_release(v9);

  id v11 = aBlock[0];
  if (v10) {
    goto LABEL_5;
  }
  uint64_t v12 = v11;
  sub_10024DCE0();

  swift_willThrow();
  if (qword_100308DE0 != -1) {
    goto LABEL_10;
  }
  while (1)
  {
    uint64_t v13 = sub_10024E1F0();
    sub_10001B0E8(v13, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v14 = sub_10024E1D0();
    os_log_type_t v15 = sub_10024EE10();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F3F3C((uint64_t)a1, a2, (uint64_t *)aBlock);
      a1 = &v21;
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2080;
      a2 = v16 + 14;
      swift_getErrorValue();
      uint64_t v17 = sub_10024FB80();
      sub_1000F3F3C(v17, v18, (uint64_t *)aBlock);
      sub_10024F100();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error deleting transactions for %s: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      sub_1001F57D0();
      swift_slowDealloc();

      swift_errorRelease();
LABEL_5:
      swift_release();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
      swift_release();
    }
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_once();
  }
  return v10;
}

void sub_1001F07E0(void *a1)
{
  id v2 = sub_10024E6A0();
  [a1 bindString:v2 atPosition:1];
}

uint64_t sub_1001F0844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1000184A4(0, (unint64_t *)&qword_10030C9D0);
  sub_100019524((uint64_t *)&unk_100318D40);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = 0x695F656C646E7562;
  *(void *)(inited + 40) = 0xE900000000000064;
  *(_OWORD *)(inited + 16) = xmmword_100256170;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x6C616E696769726FLL;
  *(void *)(inited + 120) = &type metadata for UInt;
  *(void *)(inited + 88) = 0xEB0000000064695FLL;
  *(void *)(inited + 96) = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10024E510();
  sub_100019524((uint64_t *)&unk_10030FD90);
  uint64_t v10 = sub_10024E510();
  sub_1001EA54C(v9, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v10);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for TransactionEntity();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v14 = [v4 connection];
  id v15 = [ObjCClassFromMetadata queryOnConnection:v14 predicate:v12];

  uint64_t v22 = &_swiftEmptySetSingleton;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = &v22;
  uint64_t v17 = sub_10004F2C8();
  *(void *)(v17 + 16) = sub_1001F1ABC;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1001F1AC8;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F02A0;
  aBlock[3] = &unk_1002F07C0;
  unint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v15 enumerateMemoryEntitiesUsingBlock:v18];
  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    [v15 deleteAllEntities];

    uint64_t v20 = v22;
    swift_release();
    return (uint64_t)v20;
  }
  return result;
}

void sub_1001F0B40(void *a1)
{
  NSString v2 = sub_10024E6A0();
  id v3 = [a1 numberValueForProperty:v2];

  if (v3)
  {
    id v4 = [v3 unsignedIntegerValue];

    sub_1001F1F50(&v5, (uint64_t)v4);
  }
}

uint64_t sub_1001F0BD0(void *a1)
{
  if (![a1 databaseID]) {
    return 2;
  }
  [(id)swift_getObjCClassFromObject() databaseEntityClass];
  swift_getObjCClassMetadata();
  sub_1000184A4(0, (unint64_t *)&unk_100318D30);
  uint64_t v3 = 3;
  if (swift_dynamicCastMetatype())
  {
    id v4 = [a1 databaseID];
    id v5 = [v1 connection];
    id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPersistentID:v4 onConnection:v5];

    LODWORD(v5) = [v6 deleteFromDatabase];
    if (v5) {
      return 4;
    }
    else {
      return 3;
    }
  }
  return v3;
}

uint64_t sub_1001F0CDC(void *a1)
{
  swift_getObjectType();
  if (![a1 databaseID]) {
    return 2;
  }
  [(id)swift_getObjCClassFromObject() databaseEntityClass];
  swift_getObjCClassMetadata();
  sub_1000184A4(0, (unint64_t *)&unk_100318D30);
  if (!swift_dynamicCastMetatype()) {
    return 3;
  }
  id v3 = [a1 databaseID];
  id v4 = [v1 connection];
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPersistentID:v3 onConnection:v4];

  type metadata accessor for Transaction();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6 || (*(unsigned char *)(v6 + OBJC_IVAR____TtC25ASOctaneSupportXPCService11Transaction_updatedModels) & 2) != 0)
  {
    id v11 = [a1 propertyValues];
    uint64_t v12 = sub_10024E4F0();

    sub_100212DDC(v12);
    swift_bridgeObjectRelease();
    v9.super.Class isa = sub_10024E4E0().super.isa;
    swift_bridgeObjectRelease();
    [v5 setValuesWithDictionary:v9.super.isa];
  }
  else
  {
    id v7 = a1;
    id v8 = [v7 propertyValues];
    sub_10024E4F0();

    v9.super.Class isa = sub_10024E4E0().super.isa;
    swift_bridgeObjectRelease();
    [v5 setValuesWithDictionary:v9.super.isa];
  }
  return 4;
}

id sub_1001F0F50(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a5;
  unint64_t v47 = a4;
  uint64_t v49 = a3;
  uint64_t v10 = sub_10024E030();
  sub_10001B550();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v15, v16);
  uint64_t v17 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = [v6 connection];
  aBlock = 0;
  unint64_t v52 = 0xE000000000000000;
  sub_10024F330(60);
  v57._countAndFlagsBits = 0x20455441445055;
  v57._object = (void *)0xE700000000000000;
  sub_10024E800(v57);
  id v18 = [(id)type metadata accessor for TransactionEntity() databaseTable];
  uint64_t v19 = sub_10024E6B0();
  uint64_t v21 = v20;

  v58._countAndFlagsBits = v19;
  v58._object = v21;
  sub_10024E800(v58);
  swift_bridgeObjectRelease();
  v59._countAndFlagsBits = 0x2054455320;
  v59._object = (void *)0xE500000000000000;
  sub_10024E800(v59);
  v60._countAndFlagsBits = 0x6C616E696769726FLL;
  v60._object = (void *)0xEB0000000064695FLL;
  sub_10024E800(v60);
  sub_1001F57EC();
  v61._countAndFlagsBits = 0xD000000000000016;
  v61._object = (void *)0x8000000100278DE0;
  sub_10024E800(v61);
  sub_1001F57EC();
  v62._countAndFlagsBits = 0x6470755F7473616CLL;
  v62._object = (void *)0xEC00000064657461;
  sub_10024E800(v62);
  v63._countAndFlagsBits = 0x454857203F203D20;
  v63._object = (void *)0xEB00000000204552;
  sub_10024E800(v63);
  v64._object = (void *)0xE900000000000064;
  v64._countAndFlagsBits = 0x695F656C646E7562;
  sub_10024E800(v64);
  v65._countAndFlagsBits = 0x444E41203F203D20;
  v65._object = (void *)0xE900000000000020;
  sub_10024E800(v65);
  v66._object = (void *)0x8000000100278E10;
  v66._countAndFlagsBits = 0xD000000000000015;
  sub_10024E800(v66);
  v67._countAndFlagsBits = 1059077408;
  v67._object = (void *)0xE400000000000000;
  sub_10024E800(v67);
  NSString v22 = sub_10024E6A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a6, v10);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v24 = (v14 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v46;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v23, v17, v10);
  unint64_t isEscapingClosureAtFileLocation = v47;
  uint64_t v27 = (uint64_t *)(v25 + v24);
  uint64_t v46 = a1;
  *uint64_t v27 = a1;
  v27[1] = a2;
  uint64_t v28 = (void *)(v25 + ((v24 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v28 = v49;
  v28[1] = isEscapingClosureAtFileLocation;
  unint64_t v29 = a2;
  uint64_t v30 = sub_10004F2C8();
  *(void *)(v30 + 16) = sub_1001F1954;
  *(void *)(v30 + 24) = v25;
  uint64_t v55 = sub_1001F1A0C;
  uint64_t v56 = v30;
  aBlock = _NSConcreteStackBlock;
  unint64_t v52 = 1107296256;
  uint64_t v53 = sub_100205BF8;
  uint64_t v54 = &unk_1002F0748;
  uint64_t v31 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock = 0;
  uint64_t v32 = v48;
  id v33 = [v48 executeStatement:v22 error:&aBlock bindings:v31];
  _Block_release(v31);

  uint64_t v34 = aBlock;
  if (v33) {
    goto LABEL_5;
  }
  uint64_t v35 = v34;
  sub_10024DCE0();

  swift_willThrow();
  if (qword_100308DE0 != -1) {
    goto LABEL_10;
  }
  while (1)
  {
    uint64_t v36 = sub_10024E1F0();
    sub_10001B0E8(v36, (uint64_t)qword_10034C0E0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    long long v37 = sub_10024E1D0();
    os_log_type_t v38 = sub_10024EE10();
    uint64_t v48 = v37;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v45 = (void **)swift_slowAlloc();
      aBlock = v45;
      *(_DWORD *)uint64_t v39 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1000F3F3C(v46, v29, (uint64_t *)&aBlock);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1000F3F3C(v49, isEscapingClosureAtFileLocation, (uint64_t *)&aBlock);
      sub_10024F100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 22) = 2112;
      swift_errorRetain();
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v50 = v40;
      sub_10024F100();
      void *v44 = v40;
      swift_errorRelease();
      swift_errorRelease();
      char v41 = v48;
      _os_log_impl((void *)&_mh_execute_header, v48, v38, "Failed to update original ID for %s/%s: %@", (uint8_t *)v39, 0x20u);
      sub_100019524(&qword_1003170F0);
      swift_arrayDestroy();
      sub_1001F57D0();
      swift_arrayDestroy();
      sub_1001F57D0();
      swift_slowDealloc();

      swift_errorRelease();
LABEL_5:
      swift_release();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
      swift_release();
    }
    unint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_once();
  }
  return v33;
}

void sub_1001F1644(void *a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:a2];
  [a1 bindNumber:v3 atPosition:1];

  sub_10024DF70();
  objc_msgSend(a1, "bindDouble:atPosition:", 2);
  sub_10024DF80();
  objc_msgSend(a1, "bindDouble:atPosition:", 3);
  NSString v4 = sub_10024E6A0();
  [a1 bindString:v4 atPosition:4];

  id v5 = sub_10024E6A0();
  [a1 bindString:v5 atPosition:5];
}

id sub_1001F1768()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DatabaseTransaction();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1001F17C0(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DatabaseTransaction();
  id v3 = objc_msgSendSuper2(&v5, "initWithConnection:", a1);

  return v3;
}

id sub_1001F1838()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DatabaseTransaction();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DatabaseTransaction()
{
  return self;
}

uint64_t sub_1001F1890()
{
  uint64_t v1 = sub_10024E030();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1001F1954(void *a1)
{
  sub_10024E030();
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1001F1644(a1, v3);
}

uint64_t sub_1001F1A0C(uint64_t a1)
{
  return sub_100205BD0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001F1A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001F1A24()
{
  return swift_release();
}

id sub_1001F1A2C(void *a1, uint64_t a2)
{
  if (a2)
  {
    v4.super.Class isa = sub_10024EA80().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }
  id v5 = [v2 initWithDatabaseEntity:a1 properties:v4.super.isa];

  return v5;
}

uint64_t sub_1001F1AAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001F1ABC(void *a1)
{
}

uint64_t sub_1001F1AC8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001F1AF0(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_10024FC00();
  swift_bridgeObjectRetain();
  sub_10024E780();
  Swift::Int v8 = sub_10024FC70();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_1000DD3A8();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    uint64_t v13 = (void *)(v12 + 16 * v10);
    BOOL v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (sub_10024FA60() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      sub_1000DD3A8();
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v12 + 16 * v10);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_10024FA60() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1001F580C();
  swift_bridgeObjectRetain();
  sub_1001F3508(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1001F1C7C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10024E140();
  sub_10001B550();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  sub_1001F5750((unint64_t *)&qword_1003185C8);
  swift_bridgeObjectRetain();
  long long v37 = a2;
  uint64_t v14 = sub_10024E550();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v16 = v14 & ~v15;
  uint64_t v36 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v32 = v2;
    uint64_t v33 = a1;
    uint64_t v34 = ~v15;
    uint64_t v31 = v8;
    char v19 = *(void (**)(void, void, void))(v8 + 16);
    uint64_t v18 = v8 + 16;
    uint64_t v17 = v19;
    uint64_t v35 = *(void *)(v18 + 56);
    uint64_t v20 = (void (**)(char *, uint64_t))(v18 - 8);
    v30[1] = v18 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v21 = v13;
      unint64_t v22 = v35 * v16;
      unint64_t v23 = *(void *)(v13 + 48) + v35 * v16;
      unint64_t v24 = v17;
      v17(v12, v23, v6);
      sub_1001F5750(&qword_100318D70);
      char v25 = sub_10024E680();
      uint64_t v26 = *v20;
      (*v20)(v12, v6);
      if (v25) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v34;
      uint64_t v17 = v24;
      uint64_t v13 = v21;
      if (((*(void *)(v36 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v32;
        a1 = v33;
        uint64_t v8 = v31;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v26(v37, v6);
    v24(v33, *(void *)(*v32 + 48) + v22, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(void, void, void))(v8 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = v37;
    v17(v12, v37, v6);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1001F36A4((uint64_t)v12, v16, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v28, v6);
    return 1;
  }
}

uint64_t sub_1001F1F50(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_10024FBF0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1001F391C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1001F204C(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_10024FC00();
  sub_10016C4D8(a2);
  swift_bridgeObjectRetain();
  sub_10024E780();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_10024FC70();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      unint64_t v9 = 0xED0000746E65746ELL;
      uint64_t v10 = 0x6F43646574736F68;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1684957547;
          break;
        case 2:
          uint64_t v10 = 0x66664F636F486461;
          unint64_t v9 = 0xEB00000000737265;
          break;
        case 3:
          uint64_t v10 = 0x4F6B6361626E6977;
          unint64_t v9 = 0xED00007372656666;
          break;
        case 4:
          uint64_t v10 = 0x6C61636F4C756369;
          unint64_t v9 = 0xE900000000000065;
          break;
        default:
          break;
      }
      uint64_t v11 = 0x6F43646574736F68;
      unint64_t v12 = 0xED0000746E65746ELL;
      switch((char)a2)
      {
        case 1:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v11 = 1684957547;
          break;
        case 2:
          uint64_t v11 = 0x66664F636F486461;
          unint64_t v12 = 0xEB00000000737265;
          break;
        case 3:
          uint64_t v11 = 0x4F6B6361626E6977;
          unint64_t v12 = 0xED00007372656666;
          break;
        case 4:
          uint64_t v11 = 0x6C61636F4C756369;
          unint64_t v12 = 0xE900000000000065;
          break;
        default:
          break;
      }
      if (v10 == v11 && v9 == v12) {
        break;
      }
      char v14 = sub_10024FA60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_21;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1001F580C();
    sub_1001F3A40(a2, v7, v15);
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1001F2368(unsigned char *a1, char a2)
{
  unsigned int v3 = a2 & 1;
  uint64_t v4 = *v2;
  swift_bridgeObjectRetain();
  Swift::Int v5 = sub_1000D2EA4();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    if (v3) {
      unint64_t v9 = 1634497893;
    }
    else {
      unint64_t v9 = 0xD000000000000010;
    }
    if (v3) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0x8000000100278820;
    }
    while (1)
    {
      unint64_t v11 = *(unsigned char *)(*(void *)(v4 + 48) + v7) ? 1634497893 : 0xD000000000000010;
      unint64_t v12 = *(unsigned char *)(*(void *)(v4 + 48) + v7) ? 0xE400000000000000 : 0x8000000100278820;
      if (v11 == v9 && v12 == v10) {
        break;
      }
      char v14 = sub_10024FA60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_22;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(v3) = *(unsigned char *)(*(void *)(*v17 + 48) + v7);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    *uint64_t v17 = 0x8000000000000000;
    sub_1001F3D70(v3, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v17 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1001F2538()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524((uint64_t *)&unk_100318D60);
  uint64_t v3 = sub_10024F300();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_10024FC00();
      sub_10024E780();
      uint64_t result = sub_10024FC70();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1001F3F40(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001F2814()
{
  uint64_t v1 = v0;
  uint64_t v43 = sub_10024E140();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v3);
  uint64_t v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100019524(&qword_100318D78);
  uint64_t v6 = sub_10024F300();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v38 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v40 = v2;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    uint64_t v39 = v7;
    unint64_t v15 = v42;
    uint64_t v16 = v43;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v17 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    int64_t v41 = v14;
    for (unint64_t i = v17 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
    {
      uint64_t v23 = v5;
      uint64_t v24 = *(void *)(v5 + 48);
      uint64_t v25 = *(void *)(v40 + 72);
      BOOL v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
      v26(v15, v24 + v25 * i, v16);
      uint64_t v7 = v39;
      sub_1001F5750((unint64_t *)&qword_1003185C8);
      uint64_t result = sub_10024E550();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) == 0)
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v27) >> 6;
        while (++v29 != v32 || (v31 & 1) == 0)
        {
          BOOL v33 = v29 == v32;
          if (v29 == v32) {
            unint64_t v29 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v12 + 8 * v29);
          if (v34 != -1)
          {
            unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v7 + 48) + v30 * v25, v42, v43);
      ++*(void *)(v7 + 16);
      uint64_t v5 = v23;
      int64_t v14 = v41;
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v19 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_38;
      }
      if (v19 >= v37) {
        goto LABEL_32;
      }
      unint64_t v20 = v38[v19];
      int64_t v21 = v14 + 1;
      if (!v20)
      {
        int64_t v21 = v14 + 2;
        if (v14 + 2 >= v37) {
          goto LABEL_32;
        }
        unint64_t v20 = v38[v21];
        if (!v20)
        {
          int64_t v21 = v14 + 3;
          if (v14 + 3 >= v37) {
            goto LABEL_32;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            uint64_t v22 = v14 + 4;
            if (v14 + 4 >= v37)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v36;
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 > 63) {
                sub_1001F3F40(0, (unint64_t)(v35 + 63) >> 6, v38);
              }
              else {
                *uint64_t v38 = -1 << v35;
              }
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v38[v22];
            if (!v20)
            {
              while (1)
              {
                int64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_39;
                }
                if (v21 >= v37) {
                  goto LABEL_32;
                }
                unint64_t v20 = v38[v21];
                ++v22;
                if (v20) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v21 = v14 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v11 = (v20 - 1) & v20;
      int64_t v41 = v21;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1001F2BF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524(&qword_100318D50);
  uint64_t result = sub_10024F300();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v7 = (uint64_t *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = -1 << v8;
    unint64_t v28 = v1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = result + 56;
    if ((v9 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v13 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_10024FBF0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v11) {
        goto LABEL_32;
      }
      unint64_t v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        int64_t v5 = v15 + 1;
        if (v15 + 1 >= v11) {
          goto LABEL_32;
        }
        unint64_t v16 = v7[v5];
        if (!v16)
        {
          int64_t v5 = v15 + 2;
          if (v15 + 2 >= v11) {
            goto LABEL_32;
          }
          unint64_t v16 = v7[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63) {
                sub_1001F3F40(0, v11, (void *)(v2 + 56));
              }
              else {
                *uint64_t v7 = v27;
              }
              uint64_t v1 = v28;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v11) {
                  goto LABEL_32;
                }
                unint64_t v16 = v7[v5];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001F2E7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524((uint64_t *)&unk_100318D80);
  uint64_t v3 = sub_10024F300();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_10024FC00();
      sub_10024E780();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_10024FC70();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1001F31ECLL);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1001F3F40(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001F3200()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524(&qword_100318D58);
  uint64_t v3 = sub_10024F300();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + i);
      sub_10024FC00();
      sub_10024E780();
      swift_bridgeObjectRelease();
      uint64_t result = sub_10024FC70();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(unsigned char *)(*(void *)(v4 + 48) + v21) = v17;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v27[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v27[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v27[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                sub_1001F3F40(0, (unint64_t)(v26 + 63) >> 6, v27);
              }
              else {
                *uint64_t v27 = -1 << v26;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v27[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_1001F3508(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1001F2538();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1001F3F5C();
      goto LABEL_22;
    }
    sub_1001F4848();
  }
  uint64_t v11 = *v4;
  sub_10024FC00();
  sub_10024E780();
  uint64_t result = sub_10024FC70();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_10024FA60(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_10024FB60();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_10024FA60();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1001F36A4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_10024E140();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1001F2814();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1001F40F0();
      goto LABEL_12;
    }
    sub_1001F4AF4();
  }
  uint64_t v13 = *v3;
  sub_1001F5750((unint64_t *)&qword_1003185C8);
  uint64_t v14 = sub_10024E550();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1001F5750(&qword_100318D70);
      char v22 = sub_10024E680();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10024FB60();
  __break(1u);
  return result;
}

uint64_t sub_1001F391C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1001F2BF8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1001F43A0();
      goto LABEL_14;
    }
    sub_1001F4E8C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_10024FBF0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_10024FB60();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1001F3A40(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1001F2E7C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1001F4518();
        goto LABEL_26;
      }
      sub_1001F5130();
    }
    uint64_t v8 = *v3;
    sub_10024FC00();
    sub_10016C4D8(v5);
    sub_10024E780();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10024FC70();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        unint64_t v11 = 0xED0000746E65746ELL;
        uint64_t v12 = 0x6F43646574736F68;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1684957547;
            break;
          case 2:
            uint64_t v12 = 0x66664F636F486461;
            unint64_t v11 = 0xEB00000000737265;
            break;
          case 3:
            uint64_t v12 = 0x4F6B6361626E6977;
            unint64_t v11 = 0xED00007372656666;
            break;
          case 4:
            uint64_t v12 = 0x6C61636F4C756369;
            unint64_t v11 = 0xE900000000000065;
            break;
          default:
            break;
        }
        uint64_t v13 = 0x6F43646574736F68;
        unint64_t v14 = 0xED0000746E65746ELL;
        switch(v5)
        {
          case 1:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v13 = 1684957547;
            break;
          case 2:
            uint64_t v13 = 0x66664F636F486461;
            unint64_t v14 = 0xEB00000000737265;
            break;
          case 3:
            uint64_t v13 = 0x4F6B6361626E6977;
            unint64_t v14 = 0xED00007372656666;
            break;
          case 4:
            uint64_t v13 = 0x6C61636F4C756369;
            unint64_t v14 = 0xE900000000000065;
            break;
          default:
            break;
        }
        if (v12 == v13 && v11 == v14) {
          break;
        }
        char v16 = sub_10024FA60();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_30;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_26;
        }
      }
LABEL_29:
      swift_bridgeObjectRelease_n();
LABEL_30:
      sub_10024FB60();
      __break(1u);
      JUMPOUT(0x1001F3D48);
    }
  }
LABEL_26:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v17 + 16) = v20;
  return result;
}

Swift::Int sub_1001F3D70(Swift::Int result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v22 = result & 1;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_27;
  }
  if (a3)
  {
    sub_1001F3200();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1001F46B0();
      goto LABEL_27;
    }
    sub_1001F5480();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1000D2EA4();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    if (v5) {
      unint64_t v11 = 1634497893;
    }
    else {
      unint64_t v11 = 0xD000000000000010;
    }
    if (v5) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0x8000000100278820;
    }
    do
    {
      unint64_t v13 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 1634497893 : 0xD000000000000010;
      unint64_t v14 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0xE400000000000000 : 0x8000000100278820;
      if (v13 == v11 && v14 == v12) {
        goto LABEL_30;
      }
      char v16 = sub_10024FA60();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_31;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_27:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v22;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v17 + 16) = v20;
    return result;
  }
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease_n();
LABEL_31:
  uint64_t result = sub_10024FB60();
  __break(1u);
  return result;
}

uint64_t sub_1001F3F40(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void *sub_1001F3F5C()
{
  uint64_t v2 = v0;
  sub_100019524((uint64_t *)&unk_100318D60);
  uint64_t v3 = *v0;
  uint64_t v4 = sub_10024F2F0();
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t result = (void *)sub_1001F57A8();
  if (v8) {
    BOOL v9 = (unint64_t)result >= v7;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9) {
    uint64_t result = memmove(result, v1, 8 * v6);
  }
  int64_t v10 = 0;
  *(void *)(v4 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 56);
  uint64_t v13 = -1;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  unint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  if ((v13 & v12) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v16 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v10 << 6))
  {
    uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * i);
    uint64_t v22 = v21[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v23 = *v21;
    v23[1] = v22;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *((void *)v1 + v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_28;
      }
      unint64_t v19 = *((void *)v1 + v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_28;
        }
        unint64_t v19 = *((void *)v1 + v10);
        if (!v19) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v14 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *((void *)v1 + v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *((void *)v1 + v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001F40F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10024E140();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019524(&qword_100318D78);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_10024F2F0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t result = (void *)(v8 + 56);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  uint64_t v25 = v1;
  uint64_t v26 = (const void *)(v7 + 56);
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v11) {
    uint64_t result = memmove(result, v26, 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = *(void *)(v7 + 56);
  uint64_t v16 = -1;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  unint64_t v17 = v16 & v15;
  int64_t v27 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v18 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    unint64_t v23 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v23, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v23, v6, v2);
    if (v17) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v27) {
      goto LABEL_28;
    }
    unint64_t v21 = *((void *)v26 + v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v27) {
        goto LABEL_28;
      }
      unint64_t v21 = *((void *)v26 + v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v27) {
          goto LABEL_28;
        }
        unint64_t v21 = *((void *)v26 + v13);
        if (!v21) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v17 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v27)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_30;
  }
  unint64_t v21 = *((void *)v26 + v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_28;
    }
    unint64_t v21 = *((void *)v26 + v13);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1001F43A0()
{
  uint64_t v2 = v0;
  sub_100019524(&qword_100318D50);
  uint64_t v3 = *v0;
  uint64_t v4 = sub_10024F2F0();
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t result = (void *)sub_1001F57A8();
  if (v8) {
    BOOL v9 = (unint64_t)result >= v7;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9) {
    uint64_t result = memmove(result, v1, 8 * v6);
  }
  int64_t v10 = 0;
  *(void *)(v4 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  if (!v13) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v10 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v3 + 48) + 8 * i);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *((void *)v1 + v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *((void *)v1 + v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *((void *)v1 + v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *((void *)v1 + v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *((void *)v1 + v10);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001F4518()
{
  uint64_t v1 = v0;
  sub_100019524((uint64_t *)&unk_100318D80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10024F2F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001F46B0()
{
  uint64_t v1 = v0;
  sub_100019524(&qword_100318D58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10024F2F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001F4848()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524((uint64_t *)&unk_100318D60);
  uint64_t v3 = sub_10024F300();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_10024FC00();
    swift_bridgeObjectRetain();
    sub_10024E780();
    uint64_t result = sub_10024FC70();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001F4AF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10024E140();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  sub_100019524(&qword_100318D78);
  uint64_t v8 = sub_10024F300();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v3 + 16;
  uint64_t v14 = v8 + 56;
  uint64_t v39 = v3;
  unint64_t v15 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    uint64_t v23 = v7;
    uint64_t v24 = *(void *)(v7 + 48);
    uint64_t v25 = *(void *)(v39 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v6, v24 + v25 * i, v2);
    sub_1001F5750((unint64_t *)&qword_1003185C8);
    uint64_t result = sub_10024E550();
    uint64_t v26 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6))) == 0)
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v14 + 8 * v28);
        if (v33 != -1)
        {
          unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v14 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t result = (*v15)(*(void *)(v9 + 48) + v29 * v25, v6, v2);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v23;
    if (v13) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_36;
    }
    if (v20 >= v37) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v36 + 8 * v20);
    ++v17;
    if (!v21)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v36 + 8 * v17);
      if (!v21)
      {
        int64_t v17 = v20 + 2;
        if (v20 + 2 >= v37) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v36 + 8 * v17);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v37)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_34;
  }
  unint64_t v21 = *(void *)(v36 + 8 * v22);
  if (v21)
  {
    int64_t v17 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v36 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001F4E8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524(&qword_100318D50);
  uint64_t result = sub_10024F300();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_10024FBF0();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001F50EC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001F5124(void *a1)
{
}

uint64_t sub_1001F5130()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524((uint64_t *)&unk_100318D80);
  uint64_t v3 = sub_10024F300();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_10024FC00();
      sub_10024E780();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_10024FC70();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1001F546CLL);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001F5480()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100019524(&qword_100318D58);
  uint64_t v3 = sub_10024F300();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    char v17 = *(unsigned char *)(*(void *)(v2 + 48) + i);
    sub_10024FC00();
    sub_10024E780();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10024FC70();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(unsigned char *)(*(void *)(v4 + 48) + v21) = v17;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v26) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001F5750(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10024E140();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001F57A8()
{
  return v0 + 56;
}

uint64_t sub_1001F57D0()
{
  return swift_slowDealloc();
}

void sub_1001F57EC()
{
  v1._countAndFlagsBits = 0x202C3F203D20;
  v1._object = (void *)0xE600000000000000;
  sub_10024E800(v1);
}

void sub_1001F580C()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_1001F5820(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    uint64_t v19 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = a2[16];
    uint64_t v14 = a3[13];
    char v176 = (void *)(a1 + v14);
    unint64_t v15 = (char *)a2 + v14;
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v13;
    uint64_t v16 = sub_10024E030();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v176, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v176, v15, v16);
      sub_1000195B4((uint64_t)v176, 0, 1, v16);
    }
    uint64_t v20 = a3[14];
    uint64_t v19 = a1;
    unint64_t v21 = (void *)(a1 + v20);
    char v22 = (char *)a2 + v20;
    if (sub_10001FA0C((uint64_t)a2 + v20, 1, v16))
    {
      uint64_t v23 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v21, v22, v16);
      sub_1000195B4((uint64_t)v21, 0, 1, v16);
    }
    uint64_t v24 = a3[15];
    uint64_t v25 = a3[16];
    uint64_t v26 = a1 + v24;
    uint64_t v27 = (uint64_t)a2 + v24;
    *(void *)uint64_t v26 = *(void *)v27;
    *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
    uint64_t v28 = a1 + v25;
    unint64_t v29 = (uint64_t *)((char *)a2 + v25);
    unint64_t v30 = *(uint64_t *)((char *)a2 + v25 + 8);
    if (v30 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
    else
    {
      uint64_t v31 = *v29;
      sub_1000473AC(*v29, v30);
      *(void *)uint64_t v28 = v31;
      *(void *)(v28 + 8) = v30;
    }
    uint64_t v32 = a3[17];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (uint64_t *)((char *)a2 + v32);
    uint64_t v35 = sub_100019524(&qword_10030A380);
    if (sub_10001FA0C((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = sub_100019524(&qword_10030B7F0);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      uint64_t v37 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v37;
      uint64_t v38 = v34[3];
      _OWORD v33[2] = v34[2];
      v33[3] = v38;
      uint64_t v39 = v34[5];
      v33[4] = v34[4];
      v33[5] = v39;
      uint64_t v177 = v16;
      uint64_t v40 = v34[7];
      v33[6] = v34[6];
      v33[7] = v40;
      uint64_t v33[8] = v34[8];
      uint64_t v169 = (int *)v35;
      uint64_t v170 = v34;
      uint64_t v41 = *(int *)(v35 + 36);
      uint64_t v171 = (uint64_t)v33;
      uint64_t v42 = (void *)((char *)v33 + v41);
      uint64_t v43 = (char *)v34 + v41;
      uint64_t v44 = *(void *)((char *)v34 + v41 + 8);
      *uint64_t v42 = *(void *)((char *)v34 + v41);
      v42[1] = v44;
      uint64_t v45 = (int *)type metadata accessor for CheddarTransaction();
      uint64_t v46 = v45[5];
      uint64_t v165 = &v43[v46];
      uint64_t v167 = (char *)v42 + v46;
      uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v173(v167, v165, v16);
      uint64_t v47 = v45[6];
      uint64_t v48 = (void *)((char *)v42 + v47);
      uint64_t v49 = &v43[v47];
      uint64_t v50 = *((void *)v49 + 1);
      *uint64_t v48 = *(void *)v49;
      v48[1] = v50;
      uint64_t v51 = v45[7];
      unint64_t v52 = (void *)((char *)v42 + v51);
      uint64_t v53 = &v43[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *unint64_t v52 = *(void *)v53;
      v52[1] = v54;
      uint64_t v55 = v45[8];
      uint64_t v56 = (void *)((char *)v42 + v55);
      Swift::String v57 = &v43[v55];
      uint64_t v58 = *((void *)v57 + 1);
      void *v56 = *(void *)v57;
      v56[1] = v58;
      uint64_t v59 = v45[9];
      Swift::String v60 = (char *)v42 + v59;
      Swift::String v61 = &v43[v59];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v173(v60, v61, v16);
      uint64_t v62 = v45[10];
      Swift::String v63 = (void *)((char *)v42 + v62);
      Swift::String v64 = &v43[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *Swift::String v63 = *(void *)v64;
      v63[1] = v65;
      *((unsigned char *)v42 + v45[11]) = v43[v45[11]];
      uint64_t v66 = v45[12];
      Swift::String v67 = (void *)((char *)v42 + v66);
      uint64_t v68 = &v43[v66];
      uint64_t v69 = *((void *)v68 + 1);
      *Swift::String v67 = *(void *)v68;
      v67[1] = v69;
      uint64_t v70 = v45[13];
      char v71 = (char *)v42 + v70;
      int v72 = &v43[v70];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v173(v71, v72, v16);
      *(void *)((char *)v42 + v45[14]) = *(void *)&v43[v45[14]];
      uint64_t v73 = v45[15];
      uint64_t v74 = (void *)((char *)v42 + v73);
      uint64_t v75 = &v43[v73];
      uint64_t v76 = *((void *)v75 + 1);
      void *v74 = *(void *)v75;
      v74[1] = v76;
      *(void *)((char *)v42 + v45[16]) = *(void *)&v43[v45[16]];
      *((unsigned char *)v42 + v45[17]) = v43[v45[17]];
      uint64_t v77 = v45[18];
      uint64_t v78 = (void *)((char *)v42 + v77);
      uint64_t v79 = &v43[v77];
      uint64_t v80 = *((void *)v79 + 1);
      *uint64_t v78 = *(void *)v79;
      v78[1] = v80;
      uint64_t v81 = v45[19];
      uint64_t v82 = (void *)((char *)v42 + v81);
      char v83 = &v43[v81];
      uint64_t v84 = *((void *)v83 + 1);
      *uint64_t v82 = *(void *)v83;
      v82[1] = v84;
      uint64_t v85 = v45[20];
      uint64_t v86 = (void *)((char *)v42 + v85);
      uint64_t v87 = &v43[v85];
      uint64_t v88 = *((void *)v87 + 1);
      *uint64_t v86 = *(void *)v87;
      v86[1] = v88;
      uint64_t v89 = v45[21];
      unint64_t v90 = (void *)((char *)v42 + v89);
      unint64_t v91 = &v43[v89];
      uint64_t v92 = *((void *)v91 + 1);
      void *v90 = *(void *)v91;
      v90[1] = v92;
      uint64_t v93 = v45[22];
      uint64_t v94 = (char *)v42 + v93;
      uint64_t v95 = &v43[v93];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_10001FA0C((uint64_t)v95, 1, v177))
      {
        uint64_t v96 = sub_100019524((uint64_t *)&unk_10030FD70);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
        unint64_t v97 = v173;
      }
      else
      {
        unint64_t v97 = v173;
        v173(v94, v95, v177);
        sub_1000195B4((uint64_t)v94, 0, 1, v177);
      }
      uint64_t v98 = v45[23];
      uint64_t v99 = (void *)((char *)v42 + v98);
      uint64_t v100 = &v43[v98];
      uint64_t v101 = *((void *)v100 + 1);
      *uint64_t v99 = *(void *)v100;
      v99[1] = v101;
      uint64_t v102 = v45[24];
      uint64_t v103 = (void *)((char *)v42 + v102);
      char v104 = &v43[v102];
      uint64_t v105 = *((void *)v104 + 1);
      void *v103 = *(void *)v104;
      v103[1] = v105;
      uint64_t v106 = v45[25];
      uint64_t v107 = (void *)((char *)v42 + v106);
      uint64_t v108 = &v43[v106];
      uint64_t v109 = *((void *)v108 + 1);
      *uint64_t v107 = *(void *)v108;
      v107[1] = v109;
      uint64_t v110 = v45[26];
      char v111 = (char *)v42 + v110;
      char v112 = &v43[v110];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_10001FA0C((uint64_t)v112, 1, v177))
      {
        uint64_t v113 = sub_100019524((uint64_t *)&unk_10030FD70);
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        v97(v111, v112, v177);
        sub_1000195B4((uint64_t)v111, 0, 1, v177);
      }
      *((unsigned char *)v42 + v45[27]) = v43[v45[27]];
      uint64_t v114 = v45[28];
      char v115 = (void *)((char *)v42 + v114);
      uint64_t v116 = &v43[v114];
      uint64_t v178 = *((void *)v116 + 1);
      *char v115 = *(void *)v116;
      v115[1] = v178;
      *((unsigned char *)v42 + v45[29]) = v43[v45[29]];
      *((unsigned char *)v42 + v45[30]) = v43[v45[30]];
      *((unsigned char *)v42 + v45[31]) = v43[v45[31]];
      uint64_t v117 = v45[32];
      uint64_t v118 = (void *)((char *)v42 + v117);
      char v119 = &v43[v117];
      uint64_t v174 = *((void *)v119 + 1);
      *uint64_t v118 = *(void *)v119;
      v118[1] = v174;
      uint64_t v120 = v45[33];
      uint64_t v121 = (void *)((char *)v42 + v120);
      uint64_t v122 = &v43[v120];
      uint64_t v172 = *((void *)v122 + 1);
      *uint64_t v121 = *(void *)v122;
      v121[1] = v172;
      uint64_t v123 = v45[34];
      unsigned __int16 v124 = (void *)((char *)v42 + v123);
      unsigned __int16 v125 = &v43[v123];
      uint64_t v168 = *((void *)v125 + 1);
      *unsigned __int16 v124 = *(void *)v125;
      v124[1] = v168;
      uint64_t v126 = v45[35];
      unsigned __int16 v127 = (void *)((char *)v42 + v126);
      unsigned __int16 v128 = &v43[v126];
      uint64_t v166 = *((void *)v128 + 1);
      *unsigned __int16 v127 = *(void *)v128;
      v127[1] = v166;
      uint64_t v129 = v45[36];
      uint64_t v130 = (void *)((char *)v42 + v129);
      uint64_t v131 = &v43[v129];
      uint64_t v164 = *((void *)v131 + 1);
      *uint64_t v130 = *(void *)v131;
      v130[1] = v164;
      uint64_t v132 = v45[37];
      uint64_t v133 = (void *)((char *)v42 + v132);
      uint64_t v134 = &v43[v132];
      uint64_t v135 = *((void *)v134 + 1);
      *uint64_t v133 = *(void *)v134;
      v133[1] = v135;
      uint64_t v136 = v45[38];
      uint64_t v137 = (void *)((char *)v42 + v136);
      char v138 = &v43[v136];
      uint64_t v139 = *((void *)v138 + 1);
      *uint64_t v137 = *(void *)v138;
      v137[1] = v139;
      uint64_t v140 = v45[39];
      char v141 = (void *)((char *)v42 + v140);
      uint64_t v142 = &v43[v140];
      uint64_t v143 = *((void *)v142 + 1);
      *char v141 = *(void *)v142;
      v141[1] = v143;
      uint64_t v144 = v45[40];
      uint64_t v145 = (void *)((char *)v42 + v144);
      char v146 = &v43[v144];
      uint64_t v147 = *((void *)v146 + 1);
      *uint64_t v145 = *(void *)v146;
      v145[1] = v147;
      uint64_t v148 = v45[41];
      int v149 = (char *)v42 + v148;
      uint64_t v150 = &v43[v148];
      *(void *)int v149 = *(void *)v150;
      v149[8] = v150[8];
      uint64_t v151 = v45[42];
      uint64_t v152 = (void *)((char *)v42 + v151);
      uint64_t v153 = &v43[v151];
      uint64_t v154 = *((void *)v153 + 1);
      *uint64_t v152 = *(void *)v153;
      v152[1] = v154;
      uint64_t v155 = v169[10];
      uint64_t v162 = (char *)v170 + v155;
      uint64_t v163 = v171 + v155;
      uint64_t v156 = sub_10024E450();
      uint64_t v161 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v156 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v161(v163, v162, v156);
      uint64_t v157 = v169[11];
      uint64_t v158 = v171 + v157;
      unint64_t v159 = (char *)v170 + v157;
      *(void *)uint64_t v158 = *(void *)v159;
      *(unsigned char *)(v158 + 8) = v159[8];
      *(unsigned char *)(v171 + v169[12]) = *((unsigned char *)v170 + v169[12]);
      sub_1000195B4(v171, 0, 1, (uint64_t)v169);
    }
  }
  return v19;
}

uint64_t sub_1001F6118(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[13];
  uint64_t v5 = sub_10024E030();
  if (!sub_10001FA0C(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[14];
  if (!sub_10001FA0C(v6, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
  }
  uint64_t v7 = (uint64_t *)(a1 + a2[16]);
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_10003F808(*v7, v8);
  }
  uint64_t v9 = a1 + a2[17];
  uint64_t v10 = sub_100019524(&qword_10030A380);
  uint64_t result = sub_10001FA0C(v9, 1, v10);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v9 + *(int *)(v10 + 36);
    swift_bridgeObjectRelease();
    uint64_t v13 = (int *)type metadata accessor for CheddarTransaction();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v14(v12 + v13[5], v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14(v12 + v13[9], v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14(v12 + v13[13], v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v12 + v13[22];
    if (!sub_10001FA0C(v15, 1, v5)) {
      v14(v15, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v12 + v13[26];
    if (!sub_10001FA0C(v16, 1, v5)) {
      v14(v16, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v9 + *(int *)(v10 + 40);
    uint64_t v18 = sub_10024E450();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    return v19(v17, v18);
  }
  return result;
}

uint64_t sub_1001F6560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 128);
  uint64_t v12 = a3[13];
  __dst = (void *)(a1 + v12);
  uint64_t v13 = (const void *)(a2 + v12);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v14 = sub_10024E030();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v13, v14);
    sub_1000195B4((uint64_t)__dst, 0, 1, v14);
  }
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (sub_10001FA0C(a2 + v16, 1, v14))
  {
    uint64_t v19 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v17, v18, v14);
    sub_1000195B4((uint64_t)v17, 0, 1, v14);
  }
  uint64_t v20 = a3[15];
  uint64_t v21 = a3[16];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = (uint64_t *)(a2 + v21);
  unint64_t v26 = *(void *)(a2 + v21 + 8);
  if (v26 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  else
  {
    uint64_t v27 = *v25;
    sub_1000473AC(*v25, v26);
    *(void *)uint64_t v24 = v27;
    *(void *)(v24 + 8) = v26;
  }
  uint64_t v28 = a3[17];
  unint64_t v29 = (void *)(a1 + v28);
  unint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = sub_100019524(&qword_10030A380);
  if (sub_10001FA0C((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = sub_100019524(&qword_10030B7F0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = v30[1];
    *unint64_t v29 = *v30;
    v29[1] = v33;
    uint64_t v34 = v30[3];
    v29[2] = v30[2];
    v29[3] = v34;
    uint64_t v35 = v30[5];
    v29[4] = v30[4];
    v29[5] = v35;
    uint64_t v173 = v14;
    uint64_t v36 = v30[7];
    v29[6] = v30[6];
    v29[7] = v36;
    v29[8] = v30[8];
    uint64_t v165 = (int *)v31;
    uint64_t v166 = v30;
    uint64_t v37 = *(int *)(v31 + 36);
    uint64_t v167 = (uint64_t)v29;
    uint64_t v38 = (void *)((char *)v29 + v37);
    uint64_t v39 = (char *)v30 + v37;
    uint64_t v40 = *(void *)((char *)v30 + v37 + 8);
    *uint64_t v38 = *(void *)((char *)v30 + v37);
    v38[1] = v40;
    uint64_t v41 = (int *)type metadata accessor for CheddarTransaction();
    uint64_t v42 = v41[5];
    uint64_t v161 = &v39[v42];
    uint64_t v163 = (char *)v38 + v42;
    __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dsta(v163, v161, v14);
    uint64_t v43 = v41[6];
    uint64_t v44 = (void *)((char *)v38 + v43);
    uint64_t v45 = &v39[v43];
    uint64_t v46 = *((void *)v45 + 1);
    void *v44 = *(void *)v45;
    v44[1] = v46;
    uint64_t v47 = v41[7];
    uint64_t v48 = (void *)((char *)v38 + v47);
    uint64_t v49 = &v39[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *uint64_t v48 = *(void *)v49;
    v48[1] = v50;
    uint64_t v51 = v41[8];
    unint64_t v52 = (void *)((char *)v38 + v51);
    uint64_t v53 = &v39[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *unint64_t v52 = *(void *)v53;
    v52[1] = v54;
    uint64_t v55 = v41[9];
    uint64_t v56 = (char *)v38 + v55;
    Swift::String v57 = &v39[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dsta(v56, v57, v14);
    uint64_t v58 = v41[10];
    uint64_t v59 = (void *)((char *)v38 + v58);
    Swift::String v60 = &v39[v58];
    uint64_t v61 = *((void *)v60 + 1);
    *uint64_t v59 = *(void *)v60;
    v59[1] = v61;
    *((unsigned char *)v38 + v41[11]) = v39[v41[11]];
    uint64_t v62 = v41[12];
    Swift::String v63 = (void *)((char *)v38 + v62);
    Swift::String v64 = &v39[v62];
    uint64_t v65 = *((void *)v64 + 1);
    *Swift::String v63 = *(void *)v64;
    v63[1] = v65;
    uint64_t v66 = v41[13];
    Swift::String v67 = (char *)v38 + v66;
    uint64_t v68 = &v39[v66];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __dsta(v67, v68, v14);
    *(void *)((char *)v38 + v41[14]) = *(void *)&v39[v41[14]];
    uint64_t v69 = v41[15];
    uint64_t v70 = (void *)((char *)v38 + v69);
    char v71 = &v39[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *uint64_t v70 = *(void *)v71;
    v70[1] = v72;
    *(void *)((char *)v38 + v41[16]) = *(void *)&v39[v41[16]];
    *((unsigned char *)v38 + v41[17]) = v39[v41[17]];
    uint64_t v73 = v41[18];
    uint64_t v74 = (void *)((char *)v38 + v73);
    uint64_t v75 = &v39[v73];
    uint64_t v76 = *((void *)v75 + 1);
    void *v74 = *(void *)v75;
    v74[1] = v76;
    uint64_t v77 = v41[19];
    uint64_t v78 = (void *)((char *)v38 + v77);
    uint64_t v79 = &v39[v77];
    uint64_t v80 = *((void *)v79 + 1);
    *uint64_t v78 = *(void *)v79;
    v78[1] = v80;
    uint64_t v81 = v41[20];
    uint64_t v82 = (void *)((char *)v38 + v81);
    char v83 = &v39[v81];
    uint64_t v84 = *((void *)v83 + 1);
    *uint64_t v82 = *(void *)v83;
    v82[1] = v84;
    uint64_t v85 = v41[21];
    uint64_t v86 = (void *)((char *)v38 + v85);
    uint64_t v87 = &v39[v85];
    uint64_t v88 = *((void *)v87 + 1);
    *uint64_t v86 = *(void *)v87;
    v86[1] = v88;
    uint64_t v89 = v41[22];
    unint64_t v90 = (char *)v38 + v89;
    unint64_t v91 = &v39[v89];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v91, 1, v173))
    {
      uint64_t v92 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
      uint64_t v93 = __dsta;
    }
    else
    {
      uint64_t v93 = __dsta;
      __dsta(v90, v91, v173);
      sub_1000195B4((uint64_t)v90, 0, 1, v173);
    }
    uint64_t v94 = v41[23];
    uint64_t v95 = (void *)((char *)v38 + v94);
    uint64_t v96 = &v39[v94];
    uint64_t v97 = *((void *)v96 + 1);
    *uint64_t v95 = *(void *)v96;
    v95[1] = v97;
    uint64_t v98 = v41[24];
    uint64_t v99 = (void *)((char *)v38 + v98);
    uint64_t v100 = &v39[v98];
    uint64_t v101 = *((void *)v100 + 1);
    *uint64_t v99 = *(void *)v100;
    v99[1] = v101;
    uint64_t v102 = v41[25];
    uint64_t v103 = (void *)((char *)v38 + v102);
    char v104 = &v39[v102];
    uint64_t v105 = *((void *)v104 + 1);
    void *v103 = *(void *)v104;
    v103[1] = v105;
    uint64_t v106 = v41[26];
    uint64_t v107 = (char *)v38 + v106;
    uint64_t v108 = &v39[v106];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001FA0C((uint64_t)v108, 1, v173))
    {
      uint64_t v109 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      v93(v107, v108, v173);
      sub_1000195B4((uint64_t)v107, 0, 1, v173);
    }
    *((unsigned char *)v38 + v41[27]) = v39[v41[27]];
    uint64_t v110 = v41[28];
    char v111 = (void *)((char *)v38 + v110);
    char v112 = &v39[v110];
    uint64_t v174 = *((void *)v112 + 1);
    *char v111 = *(void *)v112;
    v111[1] = v174;
    *((unsigned char *)v38 + v41[29]) = v39[v41[29]];
    *((unsigned char *)v38 + v41[30]) = v39[v41[30]];
    *((unsigned char *)v38 + v41[31]) = v39[v41[31]];
    uint64_t v113 = v41[32];
    uint64_t v114 = (void *)((char *)v38 + v113);
    char v115 = &v39[v113];
    __dstb = (void *)*((void *)v115 + 1);
    *uint64_t v114 = *(void *)v115;
    v114[1] = __dstb;
    uint64_t v116 = v41[33];
    uint64_t v117 = (void *)((char *)v38 + v116);
    uint64_t v118 = &v39[v116];
    uint64_t v168 = *((void *)v118 + 1);
    *uint64_t v117 = *(void *)v118;
    v117[1] = v168;
    uint64_t v119 = v41[34];
    uint64_t v120 = (void *)((char *)v38 + v119);
    uint64_t v121 = &v39[v119];
    uint64_t v164 = *((void *)v121 + 1);
    void *v120 = *(void *)v121;
    v120[1] = v164;
    uint64_t v122 = v41[35];
    uint64_t v123 = (void *)((char *)v38 + v122);
    unsigned __int16 v124 = &v39[v122];
    uint64_t v162 = *((void *)v124 + 1);
    *uint64_t v123 = *(void *)v124;
    v123[1] = v162;
    uint64_t v125 = v41[36];
    uint64_t v126 = (void *)((char *)v38 + v125);
    unsigned __int16 v127 = &v39[v125];
    uint64_t v160 = *((void *)v127 + 1);
    *uint64_t v126 = *(void *)v127;
    v126[1] = v160;
    uint64_t v128 = v41[37];
    uint64_t v129 = (void *)((char *)v38 + v128);
    uint64_t v130 = &v39[v128];
    uint64_t v131 = *((void *)v130 + 1);
    *uint64_t v129 = *(void *)v130;
    v129[1] = v131;
    uint64_t v132 = v41[38];
    uint64_t v133 = (void *)((char *)v38 + v132);
    uint64_t v134 = &v39[v132];
    uint64_t v135 = *((void *)v134 + 1);
    *uint64_t v133 = *(void *)v134;
    v133[1] = v135;
    uint64_t v136 = v41[39];
    uint64_t v137 = (void *)((char *)v38 + v136);
    char v138 = &v39[v136];
    uint64_t v139 = *((void *)v138 + 1);
    *uint64_t v137 = *(void *)v138;
    v137[1] = v139;
    uint64_t v140 = v41[40];
    char v141 = (void *)((char *)v38 + v140);
    uint64_t v142 = &v39[v140];
    uint64_t v143 = *((void *)v142 + 1);
    *char v141 = *(void *)v142;
    v141[1] = v143;
    uint64_t v144 = v41[41];
    uint64_t v145 = (char *)v38 + v144;
    char v146 = &v39[v144];
    *(void *)uint64_t v145 = *(void *)v146;
    v145[8] = v146[8];
    uint64_t v147 = v41[42];
    uint64_t v148 = (void *)((char *)v38 + v147);
    int v149 = &v39[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *uint64_t v148 = *(void *)v149;
    v148[1] = v150;
    uint64_t v151 = v165[10];
    uint64_t v158 = (char *)v166 + v151;
    uint64_t v159 = v167 + v151;
    uint64_t v152 = sub_10024E450();
    uint64_t v157 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v152 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v157(v159, v158, v152);
    uint64_t v153 = v165[11];
    uint64_t v154 = v167 + v153;
    uint64_t v155 = (char *)v166 + v153;
    *(void *)uint64_t v154 = *(void *)v155;
    *(unsigned char *)(v154 + 8) = v155[8];
    *(unsigned char *)(v167 + v165[12]) = *((unsigned char *)v166 + v165[12]);
    sub_1000195B4(v167, 0, 1, (uint64_t)v165);
  }
  return a1;
}

uint64_t sub_1001F6E04(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10024E030();
  int v12 = sub_10001FA0C((uint64_t)v9, 1, v11);
  int v13 = sub_10001FA0C((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_1000195B4((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  int v19 = sub_10001FA0C(a1 + v16, 1, v11);
  int v20 = sub_10001FA0C((uint64_t)v18, 1, v11);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v17, v18, v11);
      sub_1000195B4((uint64_t)v17, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v21 = *(void *)(v11 - 8);
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v17, v11);
LABEL_12:
    uint64_t v22 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v21 + 24))(v17, v18, v11);
LABEL_13:
  uint64_t v23 = a3[15];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  uint64_t v27 = a3[16];
  uint64_t v28 = (uint64_t *)(a1 + v27);
  unint64_t v29 = (uint64_t *)(a2 + v27);
  unint64_t v30 = *(void *)(a2 + v27 + 8);
  if (*(void *)(a1 + v27 + 8) >> 60 == 15)
  {
    if (v30 >> 60 != 15)
    {
      uint64_t v31 = *v29;
      sub_1000473AC(*v29, v30);
      *uint64_t v28 = v31;
      v28[1] = v30;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v30 >> 60 == 15)
  {
    sub_1000567A4((uint64_t)v28);
LABEL_18:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_20;
  }
  uint64_t v32 = *v29;
  sub_1000473AC(*v29, v30);
  uint64_t v33 = *v28;
  unint64_t v34 = v28[1];
  *uint64_t v28 = v32;
  v28[1] = v30;
  sub_10003F808(v33, v34);
LABEL_20:
  uint64_t v35 = a3[17];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = (int *)sub_100019524(&qword_10030A380);
  int v39 = sub_10001FA0C((uint64_t)v36, 1, (uint64_t)v38);
  int v40 = sub_10001FA0C((uint64_t)v37, 1, (uint64_t)v38);
  if (!v39)
  {
    if (v40)
    {
      sub_1001F81D0((uint64_t)v36);
      goto LABEL_26;
    }
    *uint64_t v36 = *v37;
    v36[1] = v37[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _OWORD v36[2] = v37[2];
    v36[3] = v37[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void v36[4] = v37[4];
    v36[5] = v37[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36[6] = v37[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36[7] = v37[7];
    v36[8] = v37[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v257 = v37;
    uint64_t v89 = v38[9];
    uint64_t v258 = v36;
    unint64_t v90 = (char *)v36 + v89;
    unint64_t v91 = (char *)v37 + v89;
    *(void *)unint64_t v90 = *(void *)((char *)v37 + v89);
    *((void *)v90 + 1) = *(void *)((char *)v37 + v89 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v92 = (int *)type metadata accessor for CheddarTransaction();
    uint64_t v259 = *(void *)(v11 - 8);
    uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v259 + 24);
    v93(&v90[v92[5]], &v91[v92[5]], v11);
    uint64_t v94 = v92[6];
    uint64_t v95 = &v90[v94];
    uint64_t v96 = &v91[v94];
    *(void *)uint64_t v95 = *(void *)v96;
    *((void *)v95 + 1) = *((void *)v96 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v97 = v92[7];
    uint64_t v98 = &v90[v97];
    uint64_t v99 = &v91[v97];
    *(void *)uint64_t v98 = *(void *)v99;
    *((void *)v98 + 1) = *((void *)v99 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v100 = v92[8];
    uint64_t v101 = &v90[v100];
    uint64_t v102 = &v91[v100];
    *(void *)uint64_t v101 = *(void *)v102;
    *((void *)v101 + 1) = *((void *)v102 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v93(&v90[v92[9]], &v91[v92[9]], v11);
    uint64_t v103 = v92[10];
    char v104 = &v90[v103];
    uint64_t v105 = &v91[v103];
    *(void *)char v104 = *(void *)v105;
    *((void *)v104 + 1) = *((void *)v105 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v90[v92[11]] = v91[v92[11]];
    uint64_t v106 = v92[12];
    uint64_t v107 = &v90[v106];
    uint64_t v108 = &v91[v106];
    *(void *)uint64_t v107 = *(void *)v108;
    *((void *)v107 + 1) = *((void *)v108 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v254 = v93;
    v93(&v90[v92[13]], &v91[v92[13]], v11);
    *(void *)&v90[v92[14]] = *(void *)&v91[v92[14]];
    uint64_t v109 = v92[15];
    uint64_t v110 = &v90[v109];
    char v111 = &v91[v109];
    *(void *)uint64_t v110 = *(void *)v111;
    *((void *)v110 + 1) = *((void *)v111 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v90[v92[16]] = *(void *)&v91[v92[16]];
    v90[v92[17]] = v91[v92[17]];
    uint64_t v112 = v92[18];
    uint64_t v113 = &v90[v112];
    uint64_t v114 = &v91[v112];
    *(void *)uint64_t v113 = *(void *)v114;
    *((void *)v113 + 1) = *((void *)v114 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v115 = v92[19];
    uint64_t v116 = &v90[v115];
    uint64_t v117 = &v91[v115];
    *(void *)uint64_t v116 = *(void *)v117;
    *((void *)v116 + 1) = *((void *)v117 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v118 = v92[20];
    uint64_t v119 = &v90[v118];
    uint64_t v120 = &v91[v118];
    *(void *)uint64_t v119 = *(void *)v120;
    *((void *)v119 + 1) = *((void *)v120 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v121 = v92[21];
    uint64_t v122 = &v90[v121];
    uint64_t v123 = &v91[v121];
    *(void *)uint64_t v122 = *(void *)v123;
    *((void *)v122 + 1) = *((void *)v123 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v124 = v92[22];
    uint64_t v125 = &v90[v124];
    uint64_t v126 = &v91[v124];
    int v127 = sub_10001FA0C((uint64_t)&v90[v124], 1, v11);
    int v128 = sub_10001FA0C((uint64_t)v126, 1, v11);
    if (v127)
    {
      if (v128)
      {
        uint64_t v129 = sub_100019524((uint64_t *)&unk_10030FD70);
        memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v259 + 16))(v125, v126, v11);
        sub_1000195B4((uint64_t)v125, 0, 1, v11);
      }
    }
    else if (v128)
    {
      (*(void (**)(char *, uint64_t))(v259 + 8))(v125, v11);
      uint64_t v186 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v125, v126, *(void *)(*(void *)(v186 - 8) + 64));
    }
    else
    {
      v254(v125, v126, v11);
    }
    uint64_t v187 = v92[23];
    uint64_t v188 = &v90[v187];
    unint64_t v189 = &v91[v187];
    *(void *)uint64_t v188 = *(void *)v189;
    *((void *)v188 + 1) = *((void *)v189 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v190 = v92[24];
    uint64_t v191 = &v90[v190];
    uint64_t v192 = &v91[v190];
    *(void *)uint64_t v191 = *(void *)v192;
    *((void *)v191 + 1) = *((void *)v192 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v193 = v92[25];
    char v194 = &v90[v193];
    uint64_t v195 = &v91[v193];
    *(void *)char v194 = *(void *)v195;
    *((void *)v194 + 1) = *((void *)v195 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v196 = v92[26];
    uint64_t v197 = &v90[v196];
    char v198 = &v91[v196];
    int v199 = sub_10001FA0C((uint64_t)&v90[v196], 1, v11);
    int v200 = sub_10001FA0C((uint64_t)v198, 1, v11);
    if (v199)
    {
      if (!v200)
      {
        (*(void (**)(char *, char *, uint64_t))(v259 + 16))(v197, v198, v11);
        sub_1000195B4((uint64_t)v197, 0, 1, v11);
LABEL_47:
        v90[v92[27]] = v91[v92[27]];
        uint64_t v202 = v92[28];
        uint64_t v203 = &v90[v202];
        int v204 = &v91[v202];
        *(void *)uint64_t v203 = *(void *)v204;
        *((void *)v203 + 1) = *((void *)v204 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v90[v92[29]] = v91[v92[29]];
        v90[v92[30]] = v91[v92[30]];
        v90[v92[31]] = v91[v92[31]];
        uint64_t v205 = v92[32];
        uint64_t v206 = &v90[v205];
        uint64_t v207 = &v91[v205];
        *(void *)uint64_t v206 = *(void *)v207;
        *((void *)v206 + 1) = *((void *)v207 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v208 = v92[33];
        uint64_t v209 = &v90[v208];
        uint64_t v210 = &v91[v208];
        *(void *)uint64_t v209 = *(void *)v210;
        *((void *)v209 + 1) = *((void *)v210 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v211 = v92[34];
        uint64_t v212 = &v90[v211];
        v213 = &v91[v211];
        *(void *)uint64_t v212 = *(void *)v213;
        *((void *)v212 + 1) = *((void *)v213 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v214 = v92[35];
        char v215 = &v90[v214];
        uint64_t v216 = &v91[v214];
        *(void *)char v215 = *(void *)v216;
        *((void *)v215 + 1) = *((void *)v216 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v217 = v92[36];
        uint64_t v218 = &v90[v217];
        unint64_t v219 = &v91[v217];
        *(void *)uint64_t v218 = *(void *)v219;
        *((void *)v218 + 1) = *((void *)v219 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v220 = v92[37];
        uint64_t v221 = &v90[v220];
        uint64_t v222 = &v91[v220];
        *(void *)uint64_t v221 = *(void *)v222;
        *((void *)v221 + 1) = *((void *)v222 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v223 = v92[38];
        uint64_t v224 = &v90[v223];
        uint64_t v225 = &v91[v223];
        *(void *)uint64_t v224 = *(void *)v225;
        *((void *)v224 + 1) = *((void *)v225 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v226 = v92[39];
        uint64_t v227 = &v90[v226];
        uint64_t v228 = &v91[v226];
        *(void *)uint64_t v227 = *(void *)v228;
        *((void *)v227 + 1) = *((void *)v228 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v229 = v92[40];
        uint64_t v230 = &v90[v229];
        uint64_t v231 = &v91[v229];
        *(void *)uint64_t v230 = *(void *)v231;
        *((void *)v230 + 1) = *((void *)v231 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v232 = v92[41];
        uint64_t v233 = &v90[v232];
        char v234 = &v91[v232];
        uint64_t v235 = *(void *)v234;
        v233[8] = v234[8];
        *(void *)uint64_t v233 = v235;
        uint64_t v236 = v92[42];
        unint64_t v237 = &v90[v236];
        uint64_t v238 = &v91[v236];
        *(void *)unint64_t v237 = *(void *)v238;
        *((void *)v237 + 1) = *((void *)v238 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v239 = v38[10];
        uint64_t v240 = (char *)v258 + v239;
        uint64_t v241 = (char *)v257 + v239;
        uint64_t v242 = sub_10024E450();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 24))(v240, v241, v242);
        uint64_t v243 = v38[11];
        uint64_t v244 = (char *)v258 + v243;
        uint64_t v245 = (char *)v257 + v243;
        uint64_t v246 = *(void *)v245;
        v244[8] = v245[8];
        *(void *)uint64_t v244 = v246;
        *((unsigned char *)v258 + v38[12]) = *((unsigned char *)v257 + v38[12]);
        return a1;
      }
    }
    else
    {
      if (!v200)
      {
        v254(v197, v198, v11);
        goto LABEL_47;
      }
      (*(void (**)(char *, uint64_t))(v259 + 8))(v197, v11);
    }
    uint64_t v201 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
    goto LABEL_47;
  }
  if (v40)
  {
LABEL_26:
    uint64_t v88 = sub_100019524(&qword_10030B7F0);
    memcpy(v36, v37, *(void *)(*(void *)(v88 - 8) + 64));
    return a1;
  }
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  _OWORD v36[2] = v37[2];
  v36[3] = v37[3];
  void v36[4] = v37[4];
  v36[5] = v37[5];
  v36[6] = v37[6];
  v36[7] = v37[7];
  v36[8] = v37[8];
  uint64_t v255 = v38;
  uint64_t v256 = v37;
  uint64_t v41 = v38[9];
  uint64_t v42 = (void *)((char *)v36 + v41);
  uint64_t v43 = (char *)v37 + v41;
  *uint64_t v42 = *(void *)((char *)v37 + v41);
  v42[1] = *(void *)((char *)v37 + v41 + 8);
  uint64_t v44 = (int *)type metadata accessor for CheddarTransaction();
  uint64_t v45 = v44[5];
  uint64_t v251 = &v43[v45];
  uint64_t v252 = (char *)v42 + v45;
  uint64_t v253 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v253(v252, v251, v11);
  uint64_t v46 = v44[6];
  uint64_t v47 = (void *)((char *)v42 + v46);
  uint64_t v48 = &v43[v46];
  void *v47 = *(void *)v48;
  v47[1] = *((void *)v48 + 1);
  uint64_t v49 = v44[7];
  uint64_t v50 = (void *)((char *)v42 + v49);
  uint64_t v51 = &v43[v49];
  void *v50 = *(void *)v51;
  v50[1] = *((void *)v51 + 1);
  uint64_t v52 = v44[8];
  uint64_t v53 = (void *)((char *)v42 + v52);
  uint64_t v54 = &v43[v52];
  *uint64_t v53 = *(void *)v54;
  v53[1] = *((void *)v54 + 1);
  uint64_t v55 = v44[9];
  uint64_t v56 = (char *)v42 + v55;
  Swift::String v57 = &v43[v55];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v253(v56, v57, v11);
  uint64_t v58 = v44[10];
  uint64_t v59 = (void *)((char *)v42 + v58);
  Swift::String v60 = &v43[v58];
  *uint64_t v59 = *(void *)v60;
  v59[1] = *((void *)v60 + 1);
  *((unsigned char *)v42 + v44[11]) = v43[v44[11]];
  uint64_t v61 = v44[12];
  uint64_t v62 = (void *)((char *)v42 + v61);
  Swift::String v63 = &v43[v61];
  *uint64_t v62 = *(void *)v63;
  v62[1] = *((void *)v63 + 1);
  uint64_t v64 = v44[13];
  uint64_t v65 = (char *)v42 + v64;
  uint64_t v66 = &v43[v64];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v253(v65, v66, v11);
  *(void *)((char *)v42 + v44[14]) = *(void *)&v43[v44[14]];
  uint64_t v67 = v44[15];
  uint64_t v68 = (void *)((char *)v42 + v67);
  uint64_t v69 = &v43[v67];
  *uint64_t v68 = *(void *)v69;
  v68[1] = *((void *)v69 + 1);
  *(void *)((char *)v42 + v44[16]) = *(void *)&v43[v44[16]];
  *((unsigned char *)v42 + v44[17]) = v43[v44[17]];
  uint64_t v70 = v44[18];
  char v71 = (void *)((char *)v42 + v70);
  uint64_t v72 = &v43[v70];
  *char v71 = *(void *)v72;
  v71[1] = *((void *)v72 + 1);
  uint64_t v73 = v44[19];
  uint64_t v74 = (void *)((char *)v42 + v73);
  uint64_t v75 = &v43[v73];
  void *v74 = *(void *)v75;
  v74[1] = *((void *)v75 + 1);
  uint64_t v76 = v44[20];
  uint64_t v77 = (void *)((char *)v42 + v76);
  uint64_t v78 = &v43[v76];
  *uint64_t v77 = *(void *)v78;
  v77[1] = *((void *)v78 + 1);
  uint64_t v79 = v44[21];
  uint64_t v80 = (void *)((char *)v42 + v79);
  uint64_t v81 = &v43[v79];
  void *v80 = *(void *)v81;
  v80[1] = *((void *)v81 + 1);
  uint64_t v82 = v44[22];
  char v83 = (char *)v42 + v82;
  uint64_t v84 = &v43[v82];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v85 = v11;
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v84, 1, v11))
  {
    uint64_t v86 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
    uint64_t v87 = v253;
  }
  else
  {
    uint64_t v87 = v253;
    v253(v83, v84, v85);
    sub_1000195B4((uint64_t)v83, 0, 1, v85);
  }
  uint64_t v130 = v44[23];
  uint64_t v131 = (void *)((char *)v42 + v130);
  uint64_t v132 = &v43[v130];
  *uint64_t v131 = *(void *)v132;
  v131[1] = *((void *)v132 + 1);
  uint64_t v133 = v44[24];
  uint64_t v134 = (void *)((char *)v42 + v133);
  uint64_t v135 = &v43[v133];
  *uint64_t v134 = *(void *)v135;
  v134[1] = *((void *)v135 + 1);
  uint64_t v136 = v44[25];
  uint64_t v137 = (void *)((char *)v42 + v136);
  char v138 = &v43[v136];
  *uint64_t v137 = *(void *)v138;
  v137[1] = *((void *)v138 + 1);
  uint64_t v139 = v44[26];
  uint64_t v140 = (char *)v42 + v139;
  char v141 = &v43[v139];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001FA0C((uint64_t)v141, 1, v85))
  {
    uint64_t v142 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
  }
  else
  {
    v87(v140, v141, v85);
    sub_1000195B4((uint64_t)v140, 0, 1, v85);
  }
  *((unsigned char *)v42 + v44[27]) = v43[v44[27]];
  uint64_t v143 = v44[28];
  uint64_t v144 = (void *)((char *)v42 + v143);
  uint64_t v145 = &v43[v143];
  *uint64_t v144 = *(void *)v145;
  v144[1] = *((void *)v145 + 1);
  *((unsigned char *)v42 + v44[29]) = v43[v44[29]];
  *((unsigned char *)v42 + v44[30]) = v43[v44[30]];
  *((unsigned char *)v42 + v44[31]) = v43[v44[31]];
  uint64_t v146 = v44[32];
  uint64_t v147 = (void *)((char *)v42 + v146);
  uint64_t v148 = &v43[v146];
  *uint64_t v147 = *(void *)v148;
  v147[1] = *((void *)v148 + 1);
  uint64_t v149 = v44[33];
  uint64_t v150 = (void *)((char *)v42 + v149);
  uint64_t v151 = &v43[v149];
  *uint64_t v150 = *(void *)v151;
  v150[1] = *((void *)v151 + 1);
  uint64_t v152 = v44[34];
  uint64_t v153 = (void *)((char *)v42 + v152);
  uint64_t v154 = &v43[v152];
  *uint64_t v153 = *(void *)v154;
  v153[1] = *((void *)v154 + 1);
  uint64_t v155 = v44[35];
  uint64_t v156 = (void *)((char *)v42 + v155);
  uint64_t v157 = &v43[v155];
  *uint64_t v156 = *(void *)v157;
  v156[1] = *((void *)v157 + 1);
  uint64_t v158 = v44[36];
  uint64_t v159 = (void *)((char *)v42 + v158);
  uint64_t v160 = &v43[v158];
  *uint64_t v159 = *(void *)v160;
  v159[1] = *((void *)v160 + 1);
  uint64_t v161 = v44[37];
  uint64_t v162 = (void *)((char *)v42 + v161);
  uint64_t v163 = &v43[v161];
  *uint64_t v162 = *(void *)v163;
  v162[1] = *((void *)v163 + 1);
  uint64_t v164 = v44[38];
  uint64_t v165 = (void *)((char *)v42 + v164);
  uint64_t v166 = &v43[v164];
  *uint64_t v165 = *(void *)v166;
  v165[1] = *((void *)v166 + 1);
  uint64_t v167 = v44[39];
  uint64_t v168 = (void *)((char *)v42 + v167);
  uint64_t v169 = &v43[v167];
  *uint64_t v168 = *(void *)v169;
  v168[1] = *((void *)v169 + 1);
  uint64_t v170 = v44[40];
  uint64_t v171 = (void *)((char *)v42 + v170);
  uint64_t v172 = &v43[v170];
  *uint64_t v171 = *(void *)v172;
  v171[1] = *((void *)v172 + 1);
  uint64_t v173 = v44[41];
  uint64_t v174 = (char *)v42 + v173;
  uint64_t v175 = &v43[v173];
  uint64_t v176 = *(void *)v175;
  v174[8] = v175[8];
  *(void *)uint64_t v174 = v176;
  uint64_t v177 = v44[42];
  uint64_t v178 = (void *)((char *)v42 + v177);
  uint64_t v179 = &v43[v177];
  *uint64_t v178 = *(void *)v179;
  v178[1] = *((void *)v179 + 1);
  uint64_t v180 = v255[10];
  uint64_t v249 = (char *)v256 + v180;
  uint64_t v250 = (char *)v36 + v180;
  uint64_t v181 = sub_10024E450();
  char v248 = *(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v248(v250, v249, v181);
  uint64_t v182 = v255[11];
  uint64_t v183 = (char *)v36 + v182;
  uint64_t v184 = (char *)v256 + v182;
  uint64_t v185 = *(void *)v184;
  v183[8] = v184[8];
  *(void *)uint64_t v183 = v185;
  *((unsigned char *)v36 + v255[12]) = *((unsigned char *)v256 + v255[12]);
  sub_1000195B4((uint64_t)v36, 0, 1, (uint64_t)v255);
  return a1;
}

uint64_t sub_1001F81D0(uint64_t a1)
{
  uint64_t v2 = sub_100019524(&qword_10030A380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F8230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v7 = a3[13];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v10 = sub_10024E030();
  if (sub_10001FA0C((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    sub_1000195B4((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[14];
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (sub_10001FA0C(a2 + v12, 1, v10))
  {
    uint64_t v15 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v13, v14, v10);
    sub_1000195B4((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[15];
  uint64_t v17 = a3[16];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  long long v20 = *(_OWORD *)(a2 + v17);
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(_OWORD *)(a1 + v17) = v20;
  uint64_t v21 = a3[17];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = (int *)sub_100019524(&qword_10030A380);
  if (sub_10001FA0C((uint64_t)v23, 1, (uint64_t)v24))
  {
    uint64_t v25 = sub_100019524(&qword_10030B7F0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    memcpy(v22, v23, 0x48uLL);
    uint64_t v50 = (uint64_t)v22;
    uint64_t v26 = v24[9];
    uint64_t v27 = &v22[v26];
    uint64_t v28 = &v23[v26];
    *(_OWORD *)&v22[v26] = *(_OWORD *)&v23[v26];
    unint64_t v29 = (int *)type metadata accessor for CheddarTransaction();
    unint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v30(&v27[v29[5]], &v28[v29[5]], v10);
    *(_OWORD *)&v27[v29[6]] = *(_OWORD *)&v28[v29[6]];
    *(_OWORD *)&v27[v29[7]] = *(_OWORD *)&v28[v29[7]];
    *(_OWORD *)&v27[v29[8]] = *(_OWORD *)&v28[v29[8]];
    v30(&v27[v29[9]], &v28[v29[9]], v10);
    *(_OWORD *)&v27[v29[10]] = *(_OWORD *)&v28[v29[10]];
    v27[v29[11]] = v28[v29[11]];
    *(_OWORD *)&v27[v29[12]] = *(_OWORD *)&v28[v29[12]];
    v30(&v27[v29[13]], &v28[v29[13]], v10);
    *(void *)&v27[v29[14]] = *(void *)&v28[v29[14]];
    *(_OWORD *)&v27[v29[15]] = *(_OWORD *)&v28[v29[15]];
    *(void *)&v27[v29[16]] = *(void *)&v28[v29[16]];
    v27[v29[17]] = v28[v29[17]];
    *(_OWORD *)&v27[v29[18]] = *(_OWORD *)&v28[v29[18]];
    *(_OWORD *)&v27[v29[19]] = *(_OWORD *)&v28[v29[19]];
    *(_OWORD *)&v27[v29[20]] = *(_OWORD *)&v28[v29[20]];
    *(_OWORD *)&v27[v29[21]] = *(_OWORD *)&v28[v29[21]];
    uint64_t v31 = v29[22];
    uint64_t v32 = &v27[v31];
    uint64_t v33 = &v28[v31];
    if (sub_10001FA0C((uint64_t)&v28[v31], 1, v10))
    {
      uint64_t v34 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v30(v32, v33, v10);
      sub_1000195B4((uint64_t)v32, 0, 1, v10);
    }
    *(_OWORD *)&v27[v29[23]] = *(_OWORD *)&v28[v29[23]];
    *(_OWORD *)&v27[v29[24]] = *(_OWORD *)&v28[v29[24]];
    *(_OWORD *)&v27[v29[25]] = *(_OWORD *)&v28[v29[25]];
    uint64_t v35 = v29[26];
    uint64_t v36 = &v27[v35];
    uint64_t v37 = &v28[v35];
    if (sub_10001FA0C((uint64_t)&v28[v35], 1, v10))
    {
      uint64_t v38 = sub_100019524((uint64_t *)&unk_10030FD70);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v30(v36, v37, v10);
      sub_1000195B4((uint64_t)v36, 0, 1, v10);
    }
    v27[v29[27]] = v28[v29[27]];
    *(_OWORD *)&v27[v29[28]] = *(_OWORD *)&v28[v29[28]];
    v27[v29[29]] = v28[v29[29]];
    v27[v29[30]] = v28[v29[30]];
    v27[v29[31]] = v28[v29[31]];
    *(_OWORD *)&v27[v29[32]] = *(_OWORD *)&v28[v29[32]];
    *(_OWORD *)&v27[v29[33]] = *(_OWORD *)&v28[v29[33]];
    *(_OWORD *)&v27[v29[34]] = *(_OWORD *)&v28[v29[34]];
    *(_OWORD *)&v27[v29[35]] = *(_OWORD *)&v28[v29[35]];
    *(_OWORD *)&v27[v29[36]] = *(_OWORD *)&v28[v29[36]];
    *(_OWORD *)&v27[v29[37]] = *(_OWORD *)&v28[v29[37]];
    *(_OWORD *)&v27[v29[38]] = *(_OWORD *)&v28[v29[38]];
    *(_OWORD *)&v27[v29[39]] = *(_OWORD *)&v28[v29[39]];
    *(_OWORD *)&v27[v29[40]] = *(_OWORD *)&v28[v29[40]];
    uint64_t v39 = v29[41];
    int v40 = &v27[v39];
    uint64_t v41 = &v28[v39];
    *(void *)int v40 = *(void *)v41;
    v40[8] = v41[8];
    *(_OWORD *)&v27[v29[42]] = *(_OWORD *)&v28[v29[42]];
    uint64_t v42 = v24[10];
    uint64_t v43 = v50 + v42;
    uint64_t v44 = &v23[v42];
    uint64_t v45 = sub_10024E450();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    uint64_t v46 = v24[11];
    uint64_t v47 = v50 + v46;
    uint64_t v48 = &v23[v46];
    *(void *)uint64_t v47 = *(void *)v48;
    *(unsigned char *)(v47 + 8) = v48[8];
    *(unsigned char *)(v50 + v24[12]) = v23[v24[12]];
    sub_1000195B4(v50, 0, 1, (uint64_t)v24);
  }
  return a1;
}

uint64_t sub_1001F885C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_10024E030();
  int v17 = sub_10001FA0C((uint64_t)v14, 1, v16);
  int v18 = sub_10001FA0C((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      sub_1000195B4((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = a3[14];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  int v24 = sub_10001FA0C(a1 + v21, 1, v16);
  int v25 = sub_10001FA0C((uint64_t)v23, 1, v16);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v22, v23, v16);
      sub_1000195B4((uint64_t)v22, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v26 = *(void *)(v16 - 8);
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v22, v16);
LABEL_12:
    uint64_t v27 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 40))(v22, v23, v16);
LABEL_13:
  uint64_t v28 = a3[15];
  uint64_t v29 = a3[16];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  unint64_t v34 = *(void *)(a1 + v29 + 8);
  if (v34 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    goto LABEL_18;
  }
  unint64_t v35 = *(void *)(v33 + 8);
  if (v35 >> 60 == 15)
  {
    sub_1000567A4(v32);
    goto LABEL_16;
  }
  uint64_t v36 = *(void *)v32;
  *(void *)uint64_t v32 = *(void *)v33;
  *(void *)(v32 + 8) = v35;
  sub_10003F808(v36, v34);
LABEL_18:
  uint64_t v37 = a3[17];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  int v40 = (int *)sub_100019524(&qword_10030A380);
  int v41 = sub_10001FA0C((uint64_t)v38, 1, (uint64_t)v40);
  int v42 = sub_10001FA0C((uint64_t)v39, 1, (uint64_t)v40);
  if (!v41)
  {
    if (v42)
    {
      sub_1001F81D0((uint64_t)v38);
      goto LABEL_24;
    }
    uint64_t v53 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v53;
    swift_bridgeObjectRelease();
    uint64_t v54 = v39[3];
    v38[2] = v39[2];
    void v38[3] = v54;
    swift_bridgeObjectRelease();
    uint64_t v55 = v39[5];
    v38[4] = v39[4];
    v38[5] = v55;
    swift_bridgeObjectRelease();
    void v38[6] = v39[6];
    swift_bridgeObjectRelease();
    uint64_t v56 = v39[8];
    v38[7] = v39[7];
    v38[8] = v56;
    swift_bridgeObjectRelease();
    uint64_t v57 = v40[9];
    uint64_t v58 = (char *)v38 + v57;
    uint64_t v59 = (char *)v39 + v57;
    uint64_t v60 = *(void *)((char *)v39 + v57 + 8);
    *(void *)uint64_t v58 = *(void *)((char *)v39 + v57);
    *((void *)v58 + 1) = v60;
    swift_bridgeObjectRelease();
    uint64_t v61 = (int *)type metadata accessor for CheddarTransaction();
    uint64_t v220 = *(void *)(v16 - 8);
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v220 + 40);
    v62(&v58[v61[5]], &v59[v61[5]], v16);
    uint64_t v63 = v61[6];
    uint64_t v64 = &v58[v63];
    uint64_t v65 = &v59[v63];
    uint64_t v67 = *(void *)v65;
    uint64_t v66 = *((void *)v65 + 1);
    *(void *)uint64_t v64 = v67;
    *((void *)v64 + 1) = v66;
    swift_bridgeObjectRelease();
    uint64_t v68 = v61[7];
    uint64_t v69 = &v58[v68];
    uint64_t v70 = &v59[v68];
    uint64_t v72 = *(void *)v70;
    uint64_t v71 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = v72;
    *((void *)v69 + 1) = v71;
    swift_bridgeObjectRelease();
    uint64_t v73 = v61[8];
    uint64_t v74 = &v58[v73];
    uint64_t v75 = &v59[v73];
    uint64_t v77 = *(void *)v75;
    uint64_t v76 = *((void *)v75 + 1);
    *(void *)uint64_t v74 = v77;
    *((void *)v74 + 1) = v76;
    swift_bridgeObjectRelease();
    v62(&v58[v61[9]], &v59[v61[9]], v16);
    uint64_t v78 = v61[10];
    uint64_t v79 = &v58[v78];
    uint64_t v80 = &v59[v78];
    uint64_t v82 = *(void *)v80;
    uint64_t v81 = *((void *)v80 + 1);
    *(void *)uint64_t v79 = v82;
    *((void *)v79 + 1) = v81;
    swift_bridgeObjectRelease();
    v58[v61[11]] = v59[v61[11]];
    uint64_t v83 = v61[12];
    uint64_t v84 = &v58[v83];
    uint64_t v85 = &v59[v83];
    uint64_t v87 = *(void *)v85;
    uint64_t v86 = *((void *)v85 + 1);
    *(void *)uint64_t v84 = v87;
    *((void *)v84 + 1) = v86;
    swift_bridgeObjectRelease();
    unint64_t v219 = (void (*)(uint64_t, char *, uint64_t))v62;
    v62(&v58[v61[13]], &v59[v61[13]], v16);
    *(void *)&v58[v61[14]] = *(void *)&v59[v61[14]];
    uint64_t v88 = v61[15];
    uint64_t v89 = &v58[v88];
    unint64_t v90 = &v59[v88];
    uint64_t v92 = *(void *)v90;
    uint64_t v91 = *((void *)v90 + 1);
    *(void *)uint64_t v89 = v92;
    *((void *)v89 + 1) = v91;
    swift_bridgeObjectRelease();
    *(void *)&v58[v61[16]] = *(void *)&v59[v61[16]];
    v58[v61[17]] = v59[v61[17]];
    uint64_t v93 = v61[18];
    uint64_t v94 = &v58[v93];
    uint64_t v95 = &v59[v93];
    uint64_t v97 = *(void *)v95;
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = v97;
    *((void *)v94 + 1) = v96;
    swift_bridgeObjectRelease();
    uint64_t v98 = v61[19];
    uint64_t v99 = &v58[v98];
    uint64_t v100 = &v59[v98];
    uint64_t v102 = *(void *)v100;
    uint64_t v101 = *((void *)v100 + 1);
    *(void *)uint64_t v99 = v102;
    *((void *)v99 + 1) = v101;
    swift_bridgeObjectRelease();
    uint64_t v103 = v61[20];
    char v104 = &v58[v103];
    uint64_t v105 = &v59[v103];
    uint64_t v107 = *(void *)v105;
    uint64_t v106 = *((void *)v105 + 1);
    *(void *)char v104 = v107;
    *((void *)v104 + 1) = v106;
    swift_bridgeObjectRelease();
    uint64_t v108 = v61[21];
    uint64_t v109 = &v58[v108];
    uint64_t v110 = &v59[v108];
    uint64_t v112 = *(void *)v110;
    uint64_t v111 = *((void *)v110 + 1);
    *(void *)uint64_t v109 = v112;
    *((void *)v109 + 1) = v111;
    swift_bridgeObjectRelease();
    uint64_t v113 = v61[22];
    uint64_t v114 = &v59[v113];
    uint64_t v222 = (uint64_t)&v58[v113];
    LODWORD(v62) = sub_10001FA0C((uint64_t)&v58[v113], 1, v16);
    int v115 = sub_10001FA0C((uint64_t)v114, 1, v16);
    if (v62)
    {
      if (v115)
      {
        size_t v116 = *(void *)(*(void *)(sub_100019524((uint64_t *)&unk_10030FD70) - 8) + 64);
        uint64_t v117 = (void *)v222;
LABEL_37:
        memcpy(v117, v114, v116);
        goto LABEL_40;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v220 + 32))(v222, v114, v16);
      sub_1000195B4(v222, 0, 1, v16);
    }
    else
    {
      if (v115)
      {
        (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v222, v16);
        size_t v116 = *(void *)(*(void *)(sub_100019524((uint64_t *)&unk_10030FD70) - 8) + 64);
        uint64_t v117 = (void *)v222;
        goto LABEL_37;
      }
      v219(v222, v114, v16);
    }
LABEL_40:
    uint64_t v132 = v61[23];
    uint64_t v133 = &v58[v132];
    uint64_t v134 = &v59[v132];
    uint64_t v136 = *(void *)v134;
    uint64_t v135 = *((void *)v134 + 1);
    *(void *)uint64_t v133 = v136;
    *((void *)v133 + 1) = v135;
    swift_bridgeObjectRelease();
    uint64_t v137 = v61[24];
    char v138 = &v58[v137];
    uint64_t v139 = &v59[v137];
    uint64_t v141 = *(void *)v139;
    uint64_t v140 = *((void *)v139 + 1);
    *(void *)char v138 = v141;
    *((void *)v138 + 1) = v140;
    swift_bridgeObjectRelease();
    uint64_t v142 = v61[25];
    uint64_t v143 = &v58[v142];
    uint64_t v144 = &v59[v142];
    uint64_t v146 = *(void *)v144;
    uint64_t v145 = *((void *)v144 + 1);
    *(void *)uint64_t v143 = v146;
    *((void *)v143 + 1) = v145;
    swift_bridgeObjectRelease();
    uint64_t v147 = v61[26];
    uint64_t v148 = &v59[v147];
    uint64_t v223 = (uint64_t)&v58[v147];
    int v149 = sub_10001FA0C((uint64_t)&v58[v147], 1, v16);
    int v150 = sub_10001FA0C((uint64_t)v148, 1, v16);
    if (v149)
    {
      if (!v150)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v220 + 32))(v223, v148, v16);
        sub_1000195B4(v223, 0, 1, v16);
        goto LABEL_48;
      }
      size_t v151 = *(void *)(*(void *)(sub_100019524((uint64_t *)&unk_10030FD70) - 8) + 64);
      uint64_t v152 = (void *)v223;
    }
    else
    {
      if (!v150)
      {
        v219(v223, v148, v16);
        goto LABEL_48;
      }
      (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v223, v16);
      size_t v151 = *(void *)(*(void *)(sub_100019524((uint64_t *)&unk_10030FD70) - 8) + 64);
      uint64_t v152 = (void *)v223;
    }
    memcpy(v152, v148, v151);
LABEL_48:
    v58[v61[27]] = v59[v61[27]];
    uint64_t v153 = v61[28];
    uint64_t v154 = &v58[v153];
    uint64_t v155 = &v59[v153];
    uint64_t v157 = *(void *)v155;
    uint64_t v156 = *((void *)v155 + 1);
    *(void *)uint64_t v154 = v157;
    *((void *)v154 + 1) = v156;
    swift_bridgeObjectRelease();
    v58[v61[29]] = v59[v61[29]];
    v58[v61[30]] = v59[v61[30]];
    v58[v61[31]] = v59[v61[31]];
    uint64_t v158 = v61[32];
    uint64_t v159 = &v58[v158];
    uint64_t v160 = &v59[v158];
    uint64_t v162 = *(void *)v160;
    uint64_t v161 = *((void *)v160 + 1);
    *(void *)uint64_t v159 = v162;
    *((void *)v159 + 1) = v161;
    swift_bridgeObjectRelease();
    uint64_t v163 = v61[33];
    uint64_t v164 = &v58[v163];
    uint64_t v165 = &v59[v163];
    uint64_t v167 = *(void *)v165;
    uint64_t v166 = *((void *)v165 + 1);
    *(void *)uint64_t v164 = v167;
    *((void *)v164 + 1) = v166;
    swift_bridgeObjectRelease();
    uint64_t v168 = v61[34];
    uint64_t v169 = &v58[v168];
    uint64_t v170 = &v59[v168];
    uint64_t v172 = *(void *)v170;
    uint64_t v171 = *((void *)v170 + 1);
    *(void *)uint64_t v169 = v172;
    *((void *)v169 + 1) = v171;
    swift_bridgeObjectRelease();
    uint64_t v173 = v61[35];
    uint64_t v174 = &v58[v173];
    uint64_t v175 = &v59[v173];
    uint64_t v177 = *(void *)v175;
    uint64_t v176 = *((void *)v175 + 1);
    *(void *)uint64_t v174 = v177;
    *((void *)v174 + 1) = v176;
    swift_bridgeObjectRelease();
    uint64_t v178 = v61[36];
    uint64_t v179 = &v58[v178];
    uint64_t v180 = &v59[v178];
    uint64_t v182 = *(void *)v180;
    uint64_t v181 = *((void *)v180 + 1);
    *(void *)uint64_t v179 = v182;
    *((void *)v179 + 1) = v181;
    swift_bridgeObjectRelease();
    uint64_t v183 = v61[37];
    uint64_t v184 = &v58[v183];
    uint64_t v185 = &v59[v183];
    uint64_t v187 = *(void *)v185;
    uint64_t v186 = *((void *)v185 + 1);
    *(void *)uint64_t v184 = v187;
    *((void *)v184 + 1) = v186;
    swift_bridgeObjectRelease();
    uint64_t v188 = v61[38];
    unint64_t v189 = &v58[v188];
    uint64_t v190 = &v59[v188];
    uint64_t v192 = *(void *)v190;
    uint64_t v191 = *((void *)v190 + 1);
    *(void *)unint64_t v189 = v192;
    *((void *)v189 + 1) = v191;
    swift_bridgeObjectRelease();
    uint64_t v193 = v61[39];
    char v194 = &v58[v193];
    uint64_t v195 = &v59[v193];
    uint64_t v197 = *(void *)v195;
    uint64_t v196 = *((void *)v195 + 1);
    *(void *)char v194 = v197;
    *((void *)v194 + 1) = v196;
    swift_bridgeObjectRelease();
    uint64_t v198 = v61[40];
    int v199 = &v58[v198];
    int v200 = &v59[v198];
    uint64_t v202 = *(void *)v200;
    uint64_t v201 = *((void *)v200 + 1);
    *(void *)int v199 = v202;
    *((void *)v199 + 1) = v201;
    swift_bridgeObjectRelease();
    uint64_t v203 = v61[41];
    int v204 = &v58[v203];
    uint64_t v205 = &v59[v203];
    *(void *)int v204 = *(void *)v205;
    v204[8] = v205[8];
    uint64_t v206 = v61[42];
    uint64_t v207 = &v58[v206];
    uint64_t v208 = &v59[v206];
    uint64_t v210 = *(void *)v208;
    uint64_t v209 = *((void *)v208 + 1);
    *(void *)uint64_t v207 = v210;
    *((void *)v207 + 1) = v209;
    swift_bridgeObjectRelease();
    uint64_t v211 = v40[10];
    uint64_t v212 = (char *)v38 + v211;
    v213 = (char *)v39 + v211;
    uint64_t v214 = sub_10024E450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 40))(v212, v213, v214);
    uint64_t v215 = v40[11];
    uint64_t v216 = (char *)v38 + v215;
    uint64_t v217 = (char *)v39 + v215;
    *(void *)uint64_t v216 = *(void *)v217;
    v216[8] = v217[8];
    *((unsigned char *)v38 + v40[12]) = *((unsigned char *)v39 + v40[12]);
    return a1;
  }
  if (v42)
  {
LABEL_24:
    uint64_t v52 = sub_100019524(&qword_10030B7F0);
    memcpy(v38, v39, *(void *)(*(void *)(v52 - 8) + 64));
    return a1;
  }
  memcpy(v38, v39, 0x48uLL);
  uint64_t v221 = v40;
  uint64_t v43 = v40[9];
  uint64_t v44 = (char *)v38 + v43;
  uint64_t v45 = (char *)v39 + v43;
  *(_OWORD *)((char *)v38 + v43) = *(_OWORD *)((char *)v39 + v43);
  uint64_t v46 = (int *)type metadata accessor for CheddarTransaction();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
  v47(&v44[v46[5]], &v45[v46[5]], v16);
  *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
  *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
  *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
  v47(&v44[v46[9]], &v45[v46[9]], v16);
  *(_OWORD *)&v44[v46[10]] = *(_OWORD *)&v45[v46[10]];
  v44[v46[11]] = v45[v46[11]];
  *(_OWORD *)&v44[v46[12]] = *(_OWORD *)&v45[v46[12]];
  v47(&v44[v46[13]], &v45[v46[13]], v16);
  *(void *)&v44[v46[14]] = *(void *)&v45[v46[14]];
  *(_OWORD *)&v44[v46[15]] = *(_OWORD *)&v45[v46[15]];
  *(void *)&v44[v46[16]] = *(void *)&v45[v46[16]];
  v44[v46[17]] = v45[v46[17]];
  *(_OWORD *)&v44[v46[18]] = *(_OWORD *)&v45[v46[18]];
  *(_OWORD *)&v44[v46[19]] = *(_OWORD *)&v45[v46[19]];
  *(_OWORD *)&v44[v46[20]] = *(_OWORD *)&v45[v46[20]];
  *(_OWORD *)&v44[v46[21]] = *(_OWORD *)&v45[v46[21]];
  uint64_t v48 = v46[22];
  uint64_t v49 = &v44[v48];
  uint64_t v50 = &v45[v48];
  if (sub_10001FA0C((uint64_t)&v45[v48], 1, v16))
  {
    uint64_t v51 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v47(v49, v50, v16);
    sub_1000195B4((uint64_t)v49, 0, 1, v16);
  }
  *(_OWORD *)&v44[v46[23]] = *(_OWORD *)&v45[v46[23]];
  *(_OWORD *)&v44[v46[24]] = *(_OWORD *)&v45[v46[24]];
  *(_OWORD *)&v44[v46[25]] = *(_OWORD *)&v45[v46[25]];
  uint64_t v118 = v46[26];
  uint64_t v119 = &v44[v118];
  uint64_t v120 = &v45[v118];
  if (sub_10001FA0C((uint64_t)&v45[v118], 1, v16))
  {
    uint64_t v121 = sub_100019524((uint64_t *)&unk_10030FD70);
    memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
  }
  else
  {
    v47(v119, v120, v16);
    sub_1000195B4((uint64_t)v119, 0, 1, v16);
  }
  v44[v46[27]] = v45[v46[27]];
  *(_OWORD *)&v44[v46[28]] = *(_OWORD *)&v45[v46[28]];
  v44[v46[29]] = v45[v46[29]];
  v44[v46[30]] = v45[v46[30]];
  v44[v46[31]] = v45[v46[31]];
  *(_OWORD *)&v44[v46[32]] = *(_OWORD *)&v45[v46[32]];
  *(_OWORD *)&v44[v46[33]] = *(_OWORD *)&v45[v46[33]];
  *(_OWORD *)&v44[v46[34]] = *(_OWORD *)&v45[v46[34]];
  *(_OWORD *)&v44[v46[35]] = *(_OWORD *)&v45[v46[35]];
  *(_OWORD *)&v44[v46[36]] = *(_OWORD *)&v45[v46[36]];
  *(_OWORD *)&v44[v46[37]] = *(_OWORD *)&v45[v46[37]];
  *(_OWORD *)&v44[v46[38]] = *(_OWORD *)&v45[v46[38]];
  *(_OWORD *)&v44[v46[39]] = *(_OWORD *)&v45[v46[39]];
  *(_OWORD *)&v44[v46[40]] = *(_OWORD *)&v45[v46[40]];
  uint64_t v122 = v46[41];
  uint64_t v123 = &v44[v122];
  uint64_t v124 = &v45[v122];
  *(void *)uint64_t v123 = *(void *)v124;
  v123[8] = v124[8];
  *(_OWORD *)&v44[v46[42]] = *(_OWORD *)&v45[v46[42]];
  uint64_t v125 = v221[10];
  uint64_t v126 = (char *)v38 + v125;
  int v127 = (char *)v39 + v125;
  uint64_t v128 = sub_10024E450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
  uint64_t v129 = v221[11];
  uint64_t v130 = (char *)v38 + v129;
  uint64_t v131 = (char *)v39 + v129;
  *(void *)uint64_t v130 = *(void *)v131;
  v130[8] = v131[8];
  *((unsigned char *)v38 + v221[12]) = *((unsigned char *)v39 + v221[12]);
  sub_1000195B4((uint64_t)v38, 0, 1, (uint64_t)v221);
  return a1;
}

uint64_t sub_1001F96B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F96C8);
}

uint64_t sub_1001F96C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100019524((uint64_t *)&unk_10030FD70);
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 52);
    }
    else
    {
      uint64_t v10 = sub_100019524(&qword_10030B7F0);
      uint64_t v11 = *(int *)(a3 + 68);
    }
    return sub_10001FA0C(a1 + v11, a2, v10);
  }
}

uint64_t sub_1001F977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F9790);
}

uint64_t sub_1001F9790(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    sub_100019524((uint64_t *)&unk_10030FD70);
    sub_100025F58();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 52);
    }
    else
    {
      uint64_t v10 = sub_100019524(&qword_10030B7F0);
      uint64_t v11 = *(int *)(a4 + 68);
    }
    return sub_1000195B4(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for IAPTransaction()
{
  uint64_t result = qword_100318DE8;
  if (!qword_100318DE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001F9888()
{
  sub_1000C1D28();
  if (v0 <= 0x3F)
  {
    sub_1001F9994();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001F9994()
{
  if (!qword_100318DF8)
  {
    sub_10001B028(&qword_10030A380);
    unint64_t v0 = sub_10024F030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100318DF8);
    }
  }
}

void sub_1001F99F0(void *a1@<X0>, void (*a2)(void *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100019524(&qword_10030B7F0);
  __chkstk_darwin(v6 - 8, v7);
  sub_10002059C();
  uint64_t v30 = v9 - v8;
  uint64_t v10 = sub_100019524((uint64_t *)&unk_10030FD70);
  __chkstk_darwin(v10 - 8, v11);
  sub_10002059C();
  uint64_t v14 = v13 - v12;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = 0x65646F6358;
  *(void *)(a3 + 32) = 0xE500000000000000;
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 1;
  uint64_t v15 = (int *)type metadata accessor for IAPTransaction();
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = 0;
  *(_OWORD *)(a3 + 104) = 0u;
  *(_OWORD *)(a3 + 120) = 0u;
  uint64_t v16 = a3 + v15[13];
  uint64_t v17 = sub_10024E030();
  sub_1000195B4(v16, 1, 1, v17);
  uint64_t v18 = a3 + v15[14];
  sub_1000195B4(v18, 1, 1, v17);
  uint64_t v19 = a3 + v15[15];
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  *(_OWORD *)(a3 + v15[16]) = xmmword_100258490;
  uint64_t v20 = a3 + v15[17];
  uint64_t v21 = sub_100019524(&qword_10030A380);
  sub_1000195B4(v20, 1, 1, v21);
  *(void *)(a3 + 56) = sub_1000D428C();
  *(void *)(a3 + 64) = v22;
  *(void *)(a3 + 88) = sub_1000D427C();
  *(void *)(a3 + 96) = v23;
  sub_1000D5AE4();
  *(void *)(a3 + 104) = sub_10024F9E0();
  *(void *)(a3 + 112) = v24;
  sub_1000D946C(8);
  char v26 = v25;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  if ((v26 & 1) == 0) {
    uint64_t v27 = sub_10024F9E0();
  }
  *(void *)(a3 + 120) = v27;
  *(void *)(a3 + 128) = v28;
  sub_1000D453C();
  sub_10024DF60();
  sub_1001FA8B8();
  sub_1001FA618(v14, v16, (uint64_t *)&unk_10030FD70);
  sub_1000D9478(12);
  if (v29)
  {
    sub_100110398(v16, v18);
  }
  else
  {
    sub_10024DF60();
    sub_1001FA8B8();
    sub_1001FA618(v14, v18, (uint64_t *)&unk_10030FD70);
  }
  *(void *)uint64_t v19 = sub_1000D64FC();
  *(unsigned char *)(v19 + 8) = 0;
  if (a2)
  {
    swift_retain();
    a2(a1);
    sub_10003C350((uint64_t)a2);

    sub_10003C350((uint64_t)a2);
    sub_1001FA618(v30, v20, &qword_10030B7F0);
  }
  else
  {
  }
}

uint64_t sub_1001F9CE4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002D9E38;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

uint64_t sub_1001F9D34()
{
  return 14;
}

unint64_t sub_1001F9D3C(char a1)
{
  unint64_t result = 0x64692D6D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6574692D707061;
      break;
    case 2:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 6580578;
      break;
    case 5:
      unint64_t result = 1936881250;
      break;
    case 6:
      unint64_t result = 0x616E2D726566666FLL;
      break;
    case 7:
      unint64_t result = 0x746361736E617274;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0x6573616863727570;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 11:
      unint64_t result = 0x797469746E617571;
      break;
    case 12:
      unint64_t result = 0x2D74706965636572;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001F9F18(char a1)
{
  unint64_t result = 0x64692D6D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6574692D707061;
      break;
    case 2:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 6580578;
      break;
    case 5:
      unint64_t result = 1936881250;
      break;
    case 6:
      unint64_t result = 0x616E2D726566666FLL;
      break;
    case 7:
      unint64_t result = 0x746361736E617274;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0x6573616863727570;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 11:
      unint64_t result = 0x797469746E617571;
      break;
    case 12:
      unint64_t result = 0x2D74706965636572;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001FA0F4(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100318E58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  sub_10002059C();
  uint64_t v8 = v7 - v6;
  sub_10001C2A8(a1, a1[3]);
  sub_1001FA57C();
  sub_10024FD40();
  sub_1001FA8D8();
  sub_10024F930();
  if (!v1)
  {
    sub_10024F960();
    sub_1001FA8D8();
    sub_10024F940();
    sub_1001FA894(3);
    sub_1001FA870(4);
    sub_1001FA870(5);
    sub_1001FA870(6);
    sub_1001FA870(7);
    sub_1001FA870(8);
    type metadata accessor for IAPTransaction();
    sub_10024E030();
    sub_1001FA5C8();
    sub_10014AC74();
    sub_10014AC74();
    sub_1001FA894(11);
    sub_100056E3C();
    sub_10024F910();
    sub_100019524(&qword_10030A380);
    sub_1000C65CC();
    sub_10024F910();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
}

uint64_t sub_1001FA414(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000FB1C8(*a1, *a2);
}

Swift::Int sub_1001FA420()
{
  return sub_1001D3C4C(*v0);
}

uint64_t sub_1001FA428(uint64_t a1)
{
  return sub_1000D1FF4(a1, *v1);
}

Swift::Int sub_1001FA430(uint64_t a1)
{
  return sub_1000D37C8(a1, *v1);
}

uint64_t sub_1001FA438@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001F9CE4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1001FA468@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001F9D3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001FA494()
{
  return sub_1001F9F18(*v0);
}

uint64_t sub_1001FA49C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001F9D30();
  *a1 = result;
  return result;
}

uint64_t sub_1001FA4C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001F9D34();
  *a1 = result;
  return result;
}

uint64_t sub_1001FA4EC(uint64_t a1)
{
  unint64_t v2 = sub_1001FA57C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001FA528(uint64_t a1)
{
  unint64_t v2 = sub_1001FA57C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001FA564(void *a1)
{
  return sub_1001FA0F4(a1);
}

unint64_t sub_1001FA57C()
{
  unint64_t result = qword_100318E60;
  if (!qword_100318E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318E60);
  }
  return result;
}

unint64_t sub_1001FA5C8()
{
  unint64_t result = qword_100309420;
  if (!qword_100309420)
  {
    sub_10024E030();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100309420);
  }
  return result;
}

uint64_t sub_1001FA618(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100019524(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for IAPTransaction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001FA748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IAPTransaction.CodingKeys()
{
  return &type metadata for IAPTransaction.CodingKeys;
}

unint64_t sub_1001FA784()
{
  unint64_t result = qword_100318E68;
  if (!qword_100318E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318E68);
  }
  return result;
}

unint64_t sub_1001FA7D4()
{
  unint64_t result = qword_100318E70;
  if (!qword_100318E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318E70);
  }
  return result;
}

unint64_t sub_1001FA824()
{
  unint64_t result = qword_100318E78;
  if (!qword_100318E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318E78);
  }
  return result;
}

uint64_t sub_1001FA870@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_10024F8D0();
}

uint64_t sub_1001FA894@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_10024F900();
}

uint64_t sub_1001FA8B8()
{
  return sub_1000195B4(v0, 0, 1, v1);
}

uint64_t sub_1001FA8EC()
{
  sub_100032910();
  uint64_t v1 = v0;
  EmbeddedChannel.pipeline.getter();
  swift_retain();
  ChannelPipeline.close(mode:promise:)();
  swift_release();
  swift_release();
  return v1;
}

void sub_1001FA95C(uint64_t a1@<X8>)
{
  if (v1[1] == v1[2])
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = *v1;
  unsigned int v4 = sub_100032980(*v1);
  if ((unint64_t)v4 >= *(void *)(v3 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v3 + ((unint64_t)v4 << 6);
  uint64_t v8 = *(void *)(v5 + 32);
  unsigned int v6 = (void *)(v5 + 32);
  uint64_t v7 = v8;
  if (!v8)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = v6[6];
  uint64_t v9 = v6[7];
  uint64_t v11 = v6[4];
  uint64_t v12 = v6[5];
  uint64_t v13 = v6[2];
  uint64_t v14 = v6[3];
  uint64_t v15 = v6[1];
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v15;
  *(_DWORD *)(a1 + 16) = v13;
  *(_WORD *)(a1 + 20) = WORD2(v13);
  *(unsigned char *)(a1 + 22) = BYTE6(v13);
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003BD08(v12, v10);
  sub_1000340CC();
}

void sub_1001FAA4C(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v3 - v2;
  if (v3 == v2)
  {
    __break(1u);
  }
  else
  {
    if (v3 < v2) {
      v4 += *(void *)(*v1 + 16);
    }
    sub_1001A9510(v1[1], v4, v1[1]);
    sub_100032B28(v7);
    long long v6 = v7[1];
    *a1 = v7[0];
    a1[1] = v6;
    a1[2] = v8[0];
    *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)v8 + 9);
    sub_100034324(1);
  }
}

uint64_t sub_1001FAAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001FAB20(a1, a2, a3, a4, sub_1000328A4, (void (*)(void))sub_10018E878);
}

uint64_t sub_1001FAB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void))
{
  uint64_t v7 = a5();
  a6();
  sub_1002019A0();
  ChannelPipeline.register(promise:)();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1001FAB78(uint64_t a1)
{
  sub_100032910();
  uint64_t v3 = v2;
  EmbeddedChannel.pipeline.getter();
  swift_retain();
  ChannelPipeline.writeAndFlush(_:promise:)(a1, v3);
  swift_release();
  swift_release();
  return v3;
}

double sub_1001FABE8@<D0>(_OWORD *a1@<X8>)
{
  if ((ValueMetadata *)((char *)&type metadata for Any + 8) == &type metadata for ByteBuffer)
  {
    sub_10003B8AC(v1, (uint64_t)&v10);
    if (v14)
    {
      sub_10009B7F0((uint64_t)&v10);
LABEL_21:
      double result = 0.0;
      *a1 = 0u;
      a1[1] = 0u;
      return result;
    }
    if ((v10 & 0x8000000000000000) != 0)
    {
      sub_10001B070();
      goto LABEL_21;
    }
    long long v19 = v10;
    int v20 = v11;
    __int16 v21 = WORD2(v11);
    char v22 = (v11 | ((unint64_t)(WORD2(v11) | (BYTE6(v11) << 16)) << 32)) >> 48;
LABEL_13:
    swift_dynamicCast();
    return result;
  }
  if ((ValueMetadata *)((char *)&type metadata for Any + 8) == &type metadata for FileRegion)
  {
    uint64_t v3 = NIOAny.tryAsFileRegion()();
    if (!v3) {
      goto LABEL_21;
    }
    *(void *)&long long v10 = v3;
    *((void *)&v10 + 1) = v4;
    LODWORD(v11) = v5;
    WORD2(v11) = WORD2(v5);
    BYTE6(v11) = BYTE6(v5);
    goto LABEL_13;
  }
  if ((ValueMetadata *)((char *)&type metadata for Any + 8) == &type metadata for IOData)
  {
    uint64_t v6 = NIOAny.tryAsIOData()();
    if ((~v6 & 0xF000000000000007) == 0) {
      goto LABEL_21;
    }
    *(void *)&long long v10 = v6;
    *((void *)&v10 + 1) = v7;
    LODWORD(v11) = v8;
    BYTE6(v11) = BYTE6(v8);
    WORD2(v11) = WORD2(v8);
    goto LABEL_13;
  }
  if ((_UNKNOWN *)sub_100019524(&qword_10030A530) == (_UNKNOWN *)((char *)&type metadata for Any + 8))
  {
    NIOAny.tryAsByteEnvelope()((uint64_t)&v19);
    sub_10005CF84((uint64_t)&v19, (uint64_t)&v10, &qword_10030E3C0);
    if (!*((void *)&v10 + 1)) {
      goto LABEL_21;
    }
    long long v15 = v10;
    long long v16 = v11;
    long long v17 = v12;
    uint64_t v18 = v13;
    goto LABEL_13;
  }
  sub_100032F1C(a1);
  return result;
}

uint64_t sub_1001FADD8(unint64_t a1, unint64_t a2)
{
  BOOL v2 = a2 >= a1;
  if (!a1) {
    BOOL v2 = 0;
  }
  return !a2 || v2;
}

BOOL sub_1001FADF8(uint64_t a1, uint64_t a2)
{
  return (sub_1001FC77C(a2, a1) & 1) == 0;
}

BOOL sub_1001FAE54(uint64_t a1, uint64_t a2)
{
  return (static ScheduledTask.< infix(_:_:)(a2, a1) & 1) == 0;
}

BOOL sub_1001FAEB4(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

uint64_t sub_1001FAEC0(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0 && (a1 & 0x8000000000000000) == 0) {
    return a2 >= a1;
  }
  sub_10003C4F8();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

unint64_t sub_1001FAF14(unint64_t result, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0 || (result & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
    uint64_t result = sub_10009A108();
    __break(1u);
  }
  else if (a2 > result)
  {
    return a2;
  }
  return result;
}

uint64_t sub_1001FAF68(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1001FAF90()
{
  sub_10020194C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 80))(v6, v4, v1, v0, ObjectType, v7);
  sub_100201A18();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(unsigned char *)(v9 + 32) = -1;
  sub_100019524(&qword_100310F68);
  swift_allocObject();
  sub_10013CAB4(0);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100130B48();
  sub_100137870(1);
  Lock.unlock()();
  uint64_t result = sub_10006FF20();
  int v11 = *(unsigned __int8 *)(v9 + 32);
  if (v11 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v11)
    {
      swift_errorRetain();
      swift_willThrow();
    }
    else
    {
      swift_unknownObjectRetain();
    }
    swift_release();
    swift_release();
    return sub_100201890();
  }
  return result;
}

uint64_t sub_1001FB10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001FB138(a1, a2, a3, a4, (void (*)(uint64_t, void *, uint64_t, uint64_t))sub_10012EA24);
}

uint64_t sub_1001FB138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *, uint64_t, uint64_t))
{
  sub_10020194C();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v7 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 80))(v12, v10, v6, v5, ObjectType, v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(unsigned char *)(v15 + 24) = -1;
  sub_100019524(&qword_100310F68);
  swift_allocObject();
  long long v16 = sub_10013CAB4(0);
  swift_retain();
  swift_retain();
  uint64_t v17 = swift_retain();
  a5(v17, v16, v15, v7);
  sub_100137870(1);
  Lock.unlock()();
  uint64_t result = sub_10006FF20();
  int v19 = *(unsigned __int8 *)(v15 + 24);
  if (v19 == 255)
  {
    __break(1u);
  }
  else
  {
    if (v19)
    {
      swift_errorRetain();
      swift_willThrow();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001FB29C(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return String.remove(at:)(a1);
  }
LABEL_5:
  a1 = sub_10024E7B0();
  return String.remove(at:)(a1);
}

void sub_1001FB304()
{
  if (*(void *)(*(void *)v0 + 16))
  {
    sub_100200A74();
    if (!v1)
    {
      unint64_t v2 = *(void *)(*(void *)v0 + 16) - 1;
      sub_100200930(v2);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001FB354()
{
}

void sub_1001FB380()
{
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_1000ACEB8();
    if (!sub_100200AE4(v3)) {
      sub_1002009A8(*(void *)(*(void *)v1 + 16) - 1, v2, v0);
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1001FB3DC(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FB400(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_10004F084, (void (*)(uint64_t, uint64_t))sub_1001407CC);
}

uint64_t sub_1001FB42C(uint64_t a1, char a2, void (*a3)(uint64_t), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = v4;
  uint64_t ObjectType = swift_getObjectType();
  sub_100201A44((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v11, v12, v13, ObjectType);
  sub_100141040();
  if (*(unsigned __int8 *)(v4 + 24) == 255)
  {
    uint64_t v14 = *(void *)(v4 + 16);
    *(void *)(v7 + 16) = a1;
    *(unsigned char *)(v7 + 24) = a2 & 1;
    a3(a1);
    a4(v14, 255);
    sub_100141040();
    uint64_t v15 = *(void *)(v7 + 48);
    *(void *)(v7 + 56) = 0;
    *(void *)(v7 + 64) = 0;
    *(void *)(v7 + 48) = 0;
    sub_10003C360(v15);
    swift_bridgeObjectRetain();
    sub_10003C350(v15);
    swift_bridgeObjectRelease();
  }
  return sub_100201880();
}

uint64_t sub_1001FB534(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_1000B736C, (void (*)(uint64_t, uint64_t))sub_1001A8EBC);
}

uint64_t sub_1001FB560(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1001FB668(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1000B706C, (void (*)(uint64_t, uint64_t, uint64_t))sub_10013FF34);
}

uint64_t sub_1001FB58C(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_10004F084, (void (*)(uint64_t, uint64_t))sub_10013F4F8);
}

uint64_t sub_1001FB5B8(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_100201788, (void (*)(uint64_t, uint64_t))sub_1001407CC);
}

uint64_t sub_1001FB5E4(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_1000B736C, (void (*)(uint64_t, uint64_t))sub_100201790);
}

uint64_t sub_1001FB610(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_1000B6B84, (void (*)(uint64_t, uint64_t))sub_10013F218);
}

uint64_t sub_1001FB63C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1001FB668(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1000B6AE4, (void (*)(uint64_t, uint64_t, uint64_t))sub_10013F2CC);
}

uint64_t sub_1001FB668(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v12 = *(void *)(v5 + 48);
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 769, ObjectType, v12);
  sub_100141040();
  uint64_t v14 = 0;
  if (*(unsigned __int8 *)(v8 + 32) == 255)
  {
    uint64_t v15 = *(void *)(v8 + 16);
    uint64_t v16 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    *(unsigned char *)(v8 + 32) = a3 & 1;
    a4(a1, a2);
    a5(v15, v16, 255);
    sub_100141040();
    uint64_t v14 = *(void *)(v8 + 56);
    *(void *)(v8 + 64) = 0;
    *(void *)(v8 + 72) = 0;
    *(void *)(v8 + 56) = 0;
    sub_10003C360(v14);
    swift_bridgeObjectRetain();
    sub_10003C350(v14);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1001FB79C()
{
  sub_100201870();
  uint64_t v4 = v0[6];
  uint64_t ObjectType = swift_getObjectType();
  EventLoop.assertInEventLoop(file:line:)("/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", 117, 2, 769, ObjectType, v4);
  sub_100141040();
  unint64_t v6 = v0[4];
  if (HIBYTE(v6) == 255)
  {
    v0[2] = v3;
    v0[3] = v2;
    v0[4] = v1 & 0x1FFFFFFFFFFFFFFLL;
    sub_1000B727C(v3, v2, v1, HIBYTE(v1) & 1);
    uint64_t v7 = sub_100201890();
    sub_100201760(v7, v8, v6);
    sub_100141040();
    v0[8] = 0;
    v0[9] = 0;
    v0[7] = 0;
    uint64_t v9 = sub_100201890();
    sub_10003C360(v9);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100201890();
    sub_10003C350(v10);
    swift_bridgeObjectRelease();
  }
  return sub_100201890();
}

uint64_t sub_1001FB8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  sub_100201A44((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/EventLoopFuture.swift", v11, v12, v13, ObjectType);
  sub_100141040();
  unint64_t v14 = v4[5];
  if (HIBYTE(v14) == 255)
  {
    v4[2] = a1;
    v4[3] = a2;
    v4[4] = a3;
    v4[5] = a4 & 0x1FFFFFFFFFFFFFFLL;
    sub_1000B7158(a1, a2, a3, a4, HIBYTE(a4) & 1);
    uint64_t v15 = sub_100201880();
    sub_100201748(v15, v16, v17, v14);
    sub_100141040();
    uint64_t v18 = v4[8];
    v5[9] = 0;
    uint64_t v5[10] = 0;
    v5[8] = 0;
    sub_10003C360(v18);
    swift_bridgeObjectRetain();
    sub_10003C350(v18);
    swift_bridgeObjectRelease();
  }
  return sub_100201880();
}

uint64_t sub_1001FB9CC(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_1000B736C, (void (*)(uint64_t, uint64_t))sub_100201708);
}

uint64_t sub_1001FB9F8(uint64_t a1, char a2)
{
  return sub_1001FB42C(a1, a2, (void (*)(uint64_t))sub_1000B736C, (void (*)(uint64_t, uint64_t))sub_10013F9B0);
}

void sub_1001FBA24()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  BOOL v3 = __OFSUB__(v2, v1);
  uint64_t v4 = v2 - v1;
  if (v4 < 0 != v3) {
    v4 += *(void *)(*(void *)v0 + 16);
  }
  BOOL v5 = v4 < 1;
  uint64_t v6 = v4 - 1;
  if (!v5)
  {
    *(void *)(v0 + 24) = v6;
    *(unsigned char *)(v0 + 32) = 0;
  }
}

uint64_t sub_1001FBA54()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_10003C4F8();
  }
  else
  {
    if (!HIDWORD(v1)) {
      return v1 | 0x1FFFFFF00000000;
    }
    sub_10003C4F8();
    sub_10003C6D8();
  }
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

uint64_t sub_1001FBAE8(uint64_t result, void (*a2)(void), uint64_t (*a3)(unint64_t, unint64_t), uint64_t (*a4)(unint64_t, unint64_t))
{
  if (result + 0x4000000000000000 < 0)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    uint64_t v6 = v4;
    unint64_t v7 = result;
    while (!__OFADD__(2 * v7, 2))
    {
      uint64_t v8 = *v6;
      uint64_t v9 = *(void *)(*v6 + 16);
      unint64_t v10 = v7;
      if (v9 > (uint64_t)((2 * v7) | 1))
      {
        unint64_t v11 = sub_1001FB3DC((2 * v7) | 1, *v6);
        unint64_t v12 = sub_1001FB3DC(v7, v8);
        a2(0);
        char v13 = a3(v11, v12);
        swift_release();
        uint64_t result = swift_release();
        if (v13) {
          unint64_t v10 = (2 * v7) | 1;
        }
        else {
          unint64_t v10 = v7;
        }
      }
      if (v9 > (uint64_t)(2 * v7 + 2))
      {
        unint64_t v14 = sub_1001FB3DC(2 * v7 + 2, v8);
        unint64_t v15 = sub_1001FB3DC(v10, v8);
        a2(0);
        char v16 = a3(v14, v15);
        swift_release();
        uint64_t result = swift_release();
        if (v16) {
          unint64_t v10 = 2 * v7 + 2;
        }
      }
      if (v10 == v7) {
        return result;
      }
      uint64_t result = a4(v7, v10);
      unint64_t v7 = v10;
      if ((uint64_t)(v10 + 0x4000000000000000) < 0) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FBC70(uint64_t a1)
{
  return sub_1001FBAE8(a1, (void (*)(void))type metadata accessor for ScheduledTask, (uint64_t (*)(unint64_t, unint64_t))static ScheduledTask.< infix(_:_:), (uint64_t (*)(unint64_t, unint64_t))sub_10005572C);
}

uint64_t sub_1001FBCB0(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1;
  uint64_t v5 = *v2;
  unint64_t v6 = sub_1001FB3DC(a1, *v2);
  type metadata accessor for ScheduledTask();
  char v7 = static ScheduledTask.< infix(_:_:)(v6, a2);
  swift_release();
  if (v7) {
    goto LABEL_20;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FD5C();
    uint64_t v5 = v8;
  }
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_18;
  }
  if (*(void *)(v5 + 16) <= v4)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_10024F670();
    __break(1u);
    return result;
  }
  uint64_t v9 = v5 + 32;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(v5 + 32 + 8 * v4) = a2;
  *uint64_t v2 = v5;
  if (v4)
  {
    while (1)
    {
      unint64_t v11 = *(void *)(v5 + 16);
      if (v4 >= v11) {
        break;
      }
      unint64_t v12 = v4 - 1;
      unint64_t v13 = (v4 - 1) >> 1;
      if (v13 >= v11) {
        goto LABEL_16;
      }
      uint64_t result = static ScheduledTask.< infix(_:_:)(*(void *)(v9 + 8 * v4), *(void *)(v9 + 8 * v13));
      if ((result & 1) == 0) {
        return result;
      }
      if (v4 != v13)
      {
        uint64_t v14 = *(void *)(v9 + 8 * v4);
        *(void *)(v9 + 8 * v4) = *(void *)(v9 + 8 * v13);
        unint64_t v15 = *(void *)(v5 + 16);
        swift_retain();
        if (v13 >= v15) {
          goto LABEL_17;
        }
        *(void *)(v9 + 8 * v13) = v14;
        uint64_t result = swift_release();
        *uint64_t v2 = v5;
      }
      unint64_t v4 = v13;
      if (v12 <= 1) {
        return result;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1001FBE48(unint64_t a1, uint64_t a2)
{
  return sub_1001FBE88(a1, a2, (void (*)(void))type metadata accessor for ScheduledTask, (uint64_t (*)(unint64_t, uint64_t))static ScheduledTask.< infix(_:_:), sub_100120718);
}

uint64_t sub_1001FBE88(unint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(unint64_t, uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  unint64_t v10 = a1;
  unint64_t v11 = sub_1001FB3DC(a1, *v5);
  a3(0);
  char v12 = a4(v11, a2);
  swift_release();
  if (v12) {
    goto LABEL_26;
  }
  uint64_t v13 = *v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = a5(v13);
    sub_10020189C(v15);
  }
  if ((v10 & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
  if (*(void *)(v13 + 16) <= v10)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    sub_100201860();
    uint64_t result = sub_100201804();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_release();
  *(void *)(v13 + 8 * v10 + 32) = a2;
  uint64_t result = sub_10024F420();
  if (v10)
  {
    while (1)
    {
      uint64_t v17 = *v8;
      unint64_t v18 = *(void *)(*v8 + 16);
      if (v10 >= v18) {
        break;
      }
      unint64_t v19 = v10 - 1;
      unint64_t v20 = (v10 - 1) >> 1;
      if (v20 >= v18) {
        goto LABEL_21;
      }
      uint64_t v21 = v17 + 32;
      uint64_t result = a4(*(void *)(v17 + 32 + 8 * v10), *(void *)(v17 + 32 + 8 * v20));
      if ((result & 1) == 0) {
        return result;
      }
      if (v10 != v20)
      {
        uint64_t v22 = *(void *)(v21 + 8 * v10);
        uint64_t v23 = *(void *)(v21 + 8 * v20);
        swift_retain();
        swift_retain();
        char v24 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v8 = v17;
        if ((v24 & 1) == 0)
        {
          uint64_t v25 = a5(v17);
          sub_100201994(v25);
        }
        if (v10 >= *(void *)(v17 + 16)) {
          goto LABEL_22;
        }
        *(void *)(v17 + 8 * v10 + 32) = v23;
        swift_release();
        sub_10024F420();
        uint64_t v26 = *v8;
        char v27 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v8 = v26;
        if ((v27 & 1) == 0)
        {
          uint64_t v28 = a5(v26);
          sub_10020189C(v28);
        }
        if (v20 >= *(void *)(v26 + 16)) {
          goto LABEL_23;
        }
        *(void *)(v26 + 8 * v20 + 32) = v22;
        swift_release();
        uint64_t result = sub_10024F420();
      }
      unint64_t v10 = (v10 - 1) >> 1;
      if (v19 <= 1) {
        return result;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1001FC0C4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  unint64_t v6 = sub_1001FB3DC(a1, v3);
  unint64_t v7 = v4 - 1;
  if (!v7) {
    goto LABEL_10;
  }
  unint64_t v8 = sub_1001FB3DC(a1, v3);
  unint64_t v9 = sub_1001FB3DC(v7, v3);
  swift_release();
  swift_release();
  if (v8 == v9) {
    goto LABEL_10;
  }
  uint64_t v10 = *v2;
  unint64_t v11 = sub_1001FB3DC(a1, *v2);
  unint64_t v12 = sub_1001FB3DC(*(void *)(v10 + 16) - 1, v10);
  type metadata accessor for EmbeddedScheduledTask();
  char v13 = sub_1001FC77C(v11, v12);
  swift_release();
  swift_release();
  uint64_t v14 = *v2;
  unint64_t v15 = sub_1001FB3DC(*(void *)(*v2 + 16) - 1, *v2);
  if ((v13 & 1) == 0)
  {
    sub_1001FBE88(a1, v15, (void (*)(void))type metadata accessor for EmbeddedScheduledTask, (uint64_t (*)(unint64_t, uint64_t))sub_1001FC77C, sub_100120718);
    swift_release();
LABEL_10:
    sub_1001FB380();
    swift_release();
    return v6;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v14;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100120718(v14);
    uint64_t v14 = result;
    *uint64_t v2 = result;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v14 + 16) > a1)
  {
    swift_release();
    *(void *)(v14 + 8 * a1 + 32) = v15;
    sub_10024F420();
    sub_1001FB380();
    swift_release();
    sub_1001FBAE8(a1, (void (*)(void))type metadata accessor for EmbeddedScheduledTask, (uint64_t (*)(unint64_t, unint64_t))sub_1001FC77C, (uint64_t (*)(unint64_t, unint64_t))sub_10005572C);
    return v6;
  }
  __break(1u);
  return result;
}

void sub_1001FC344(unint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v5 = *v1;
  uint64_t v6 = *(void *)(*v1 + 16);
  if (!v6) {
    return;
  }
  sub_1001FB3DC(a1, v5);
  unint64_t v8 = v6 - 1;
  if (v6 == 1
    || (type metadata accessor for ScheduledTask(), sub_10020182C(), swift_release(), swift_release(), v2 == v3))
  {
LABEL_10:
    sub_1001FB304();
    swift_release();
    return;
  }
  unint64_t v9 = sub_10020182C();
  char v10 = static ScheduledTask.< infix(_:_:)(v9, v3);
  swift_release();
  swift_release();
  unint64_t v11 = sub_1001FB3DC(v8, v5);
  if ((v10 & 1) == 0)
  {
    sub_1001FBCB0(a1, v11);
    swift_release();
    goto LABEL_10;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FD5C();
    uint64_t v5 = v12;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v5 + 16) > a1)
  {
    swift_release();
    *(void *)(v5 + 8 * a1 + 32) = v11;
    *uint64_t v4 = v5;
    sub_1001FB304();
    swift_release();
    sub_1001FBAE8(a1, (void (*)(void))type metadata accessor for ScheduledTask, (uint64_t (*)(unint64_t, unint64_t))static ScheduledTask.< infix(_:_:), (uint64_t (*)(unint64_t, unint64_t))sub_100055958);
    return;
  }
  __break(1u);
}

uint64_t sub_1001FC4C4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  unint64_t v6 = sub_1001FB3DC(a1, v3);
  unint64_t v7 = v4 - 1;
  if (!v7) {
    goto LABEL_10;
  }
  unint64_t v8 = sub_1001FB3DC(a1, v3);
  unint64_t v9 = sub_1001FB3DC(v7, v3);
  swift_release();
  swift_release();
  if (v8 == v9) {
    goto LABEL_10;
  }
  uint64_t v10 = *v2;
  unint64_t v11 = sub_1001FB3DC(a1, *v2);
  unint64_t v12 = sub_1001FB3DC(*(void *)(v10 + 16) - 1, v10);
  type metadata accessor for ScheduledTask();
  char v13 = static ScheduledTask.< infix(_:_:)(v11, v12);
  swift_release();
  swift_release();
  uint64_t v14 = *v2;
  unint64_t v15 = sub_1001FB3DC(*(void *)(*v2 + 16) - 1, *v2);
  if ((v13 & 1) == 0)
  {
    sub_1001FBE88(a1, v15, (void (*)(void))type metadata accessor for ScheduledTask, (uint64_t (*)(unint64_t, uint64_t))static ScheduledTask.< infix(_:_:), sub_100120718);
    swift_release();
LABEL_10:
    sub_1001FB380();
    swift_release();
    return v6;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v14;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100120718(v14);
    uint64_t v14 = result;
    *uint64_t v2 = result;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v14 + 16) > a1)
  {
    swift_release();
    *(void *)(v14 + 8 * a1 + 32) = v15;
    sub_10024F420();
    sub_1001FB380();
    swift_release();
    sub_1001FBAE8(a1, (void (*)(void))type metadata accessor for ScheduledTask, (uint64_t (*)(unint64_t, unint64_t))static ScheduledTask.< infix(_:_:), (uint64_t (*)(unint64_t, unint64_t))sub_10005572C);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FC744()
{
  swift_release();
  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1001FC77C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a2 + 32);
  if (v2 == v3)
  {
    unint64_t v2 = *(void *)(a1 + 40);
    unint64_t v3 = *(void *)(a2 + 40);
    return v2 < v3;
  }
  if ((v2 & 0x8000000000000000) == 0 && (v3 & 0x8000000000000000) == 0) {
    return v2 < v3;
  }
  sub_10003C4F8();
  uint64_t result = sub_10009A108();
  __break(1u);
  return result;
}

uint64_t sub_1001FC7EC(uint64_t *a1, uint64_t *a2)
{
  return sub_1001FC77C(*a1, *a2);
}

BOOL sub_1001FC7F8(uint64_t *a1, uint64_t *a2)
{
  return sub_1001FADF8(*a1, *a2);
}

BOOL sub_1001FC804()
{
  return sub_10007E904();
}

uint64_t sub_1001FC810()
{
  return sub_10007B7D4();
}

uint64_t EmbeddedEventLoop.__allocating_init()()
{
  sub_10004F264();
  uint64_t v0 = swift_allocObject();
  EmbeddedEventLoop.init()();
  return v0;
}

void *EmbeddedEventLoop.init()()
{
  v0[2] = 0;
  unint64_t v1 = &_swiftEmptyArrayStorage;
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    unint64_t v1 = sub_100019884();
  }
  v0[3] = v1;
  sub_100019524(&qword_100308F20);
  sub_100019568();
  v0[4] = sub_10024E510();
  v0[5] = 0;
  return v0;
}

uint64_t sub_1001FC8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_10004A220();
  uint64_t v8 = *(void *)(v3 + 40);
  if (v8 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = result;
    *(void *)(v3 + 40) = v8 + 1;
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = v9;
    void v10[3] = a2;
    v10[4] = a3;
    type metadata accessor for EmbeddedScheduledTask();
    unint64_t v11 = (void *)swift_allocObject();
    v11[4] = a1;
    v11[5] = v8;
    v11[2] = sub_1001977B8;
    unsigned char v11[3] = v10;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10020178C;
    *(void *)(v13 + 24) = v12;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10012DD14();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_10004AFA0();
    swift_endAccess();
    swift_release();
    swift_release();
    return v9;
  }
  return result;
}

uint64_t EmbeddedEventLoop.scheduleTask<A>(deadline:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10002F9E0();
  uint64_t v10 = v9;
  EmbeddedChannel.WrongTypeError.actual.getter(v9, v11);
  sub_1002018B8();
  uint64_t result = EventLoop.makePromise<A>(of:file:line:)(v12, v13, v14, v15, 92, v10, a4, (uint64_t)&protocol witness table for EmbeddedEventLoop);
  uint64_t v17 = *(void *)(v4 + 40);
  if (v17 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = result;
    *(void *)(v4 + 40) = v17 + 1;
    unint64_t v19 = (void *)sub_1000AC8E4();
    v19[2] = a4;
    v19[3] = v18;
    v19[4] = a2;
    v19[5] = a3;
    type metadata accessor for EmbeddedScheduledTask();
    unint64_t v20 = (void *)sub_1000AC8E4();
    v20[4] = a1;
    void v20[5] = v17;
    void v20[2] = sub_100200540;
    v20[3] = v19;
    uint64_t v21 = sub_10004F2C8();
    *(void *)(v21 + 16) = v4;
    *(void *)(v21 + 24) = v20;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = Scheduled.init(promise:cancellationTask:)(v18, (uint64_t)sub_100200574, v21);
    sub_1000578C0();
    sub_10004AFA0();
    swift_endAccess();
    swift_release();
    swift_release();
    return v22;
  }
  return result;
}

uint64_t sub_1001FCBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  double v6 = __chkstk_darwin(a1, a2);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  EventLoopPromise.succeed(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a4);
}

uint64_t sub_1001FCCF0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  unint64_t v4 = sub_1000EFFDC(a2, *(void *)(a1 + 24));
  if ((v5 & 1) == 0)
  {
    sub_1001FC0C4(v4);
    swift_release();
  }
  return swift_endAccess();
}

uint64_t EmbeddedEventLoop.scheduleTask<A>(in:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = static NIODeadline.+ infix(_:_:)(*(void *)(v4 + 16), a1);
  return EmbeddedEventLoop.scheduleTask<A>(deadline:_:)(v8, a2, a3, a4);
}

uint64_t EmbeddedEventLoop.execute(_:)()
{
  sub_1000ACEB8();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_10004F2C8();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  swift_retain();
  sub_1001FC8C0(v3, (uint64_t)sub_10013F338, v4);
  swift_release();
  return swift_release();
}

Swift::Void __swiftcall EmbeddedEventLoop.run()()
{
  EmbeddedEventLoop.advanceTime(to:)(v0[2]);
}

Swift::Void __swiftcall EmbeddedEventLoop.advanceTime(to:)(ASOctaneSupportXPCService::NIODeadline to)
{
  uint64_t v2 = v1;
  unint64_t v35 = sub_1001FAF14(to._uptimeNanoseconds, *(void *)(v1 + 16));
  uint64_t v3 = (void *)(v1 + 24);
  swift_beginAccess();
  uint64_t v4 = sub_10009A144(*(void *)(v1 + 24));
  if (!v4)
  {
LABEL_49:
    *(void *)(v2 + 16) = v35;
    return;
  }
  uint64_t v5 = v4;
  while (1)
  {
    if ((sub_1001FAEC0(*(void *)(v5 + 32), v35) & 1) == 0)
    {
      swift_release();
      goto LABEL_49;
    }
    for (uint64_t i = *v3; *(void *)(*v3 + 16); uint64_t i = *v3)
    {
      if (*(void *)(*(void *)(i + 32) + 32) != *(void *)(v5 + 32)) {
        break;
      }
      swift_retain_n();
      sub_10024EA70();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10024EAD0();
      }
      sub_10024EB10();
      sub_10024EAC0();
      sub_1000578C0();
      uint64_t v7 = *v3;
      uint64_t v8 = *(void *)(*v3 + 16);
      if (v8)
      {
        uint64_t v10 = v7 + 32;
        uint64_t v9 = *(void *)(v7 + 32);
        uint64_t v11 = v8 - 1;
        if (v8 == 1 || (uint64_t v12 = *(void *)(v10 + 8 * v11), v9 == v12))
        {
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v3 = v7;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v22 = sub_100120718(v7);
            sub_100201994(v22);
          }
          uint64_t v23 = *(void *)(v7 + 16);
          if (!v23)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          *(void *)(v7 + 16) = v23 - 1;
          sub_10024F420();
          goto LABEL_24;
        }
        type metadata accessor for EmbeddedScheduledTask();
        char v13 = sub_1001FC77C(v9, v12);
        uint64_t v14 = *(void *)(v10 + 8 * v11);
        if ((v13 & 1) == 0)
        {
          if (sub_1001FC77C(v9, *(void *)(v10 + 8 * v11))) {
            goto LABEL_58;
          }
          swift_retain();
          swift_retain();
          char v24 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v3 = v7;
          if ((v24 & 1) == 0)
          {
            uint64_t v25 = sub_100120718(v7);
            sub_100201994(v25);
          }
          if (!*(void *)(v7 + 16)) {
            goto LABEL_51;
          }
          swift_retain();
          swift_release();
          *(void *)(v7 + 32) = v14;
          sub_10024F420();
          swift_release();
          uint64_t v26 = *v3;
          if (!*(void *)(*v3 + 16)) {
            goto LABEL_54;
          }
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v3 = v26;
          if ((v27 & 1) == 0)
          {
            uint64_t v28 = sub_100120718(v26);
            sub_10020189C(v28);
          }
          uint64_t v29 = *(void *)(v26 + 16);
          if (!v29) {
            goto LABEL_56;
          }
          sub_1002018E8(v29);
LABEL_24:
          swift_release();
          goto LABEL_25;
        }
        swift_retain();
        swift_retain();
        char v15 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v3 = v7;
        if ((v15 & 1) == 0)
        {
          uint64_t v16 = sub_100120718(v7);
          sub_100201994(v16);
        }
        if (!*(void *)(v7 + 16)) {
          goto LABEL_52;
        }
        swift_release();
        *(void *)(v7 + 32) = v14;
        sub_10024F420();
        uint64_t v17 = *v3;
        if (!*(void *)(*v3 + 16)) {
          goto LABEL_53;
        }
        char v18 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v3 = v17;
        if ((v18 & 1) == 0)
        {
          uint64_t v19 = sub_100120718(v17);
          sub_10020189C(v19);
        }
        uint64_t v20 = *(void *)(v17 + 16);
        if (!v20) {
          goto LABEL_55;
        }
        sub_1002018E8(v20);
        swift_release();
        sub_1001FBAE8(0, (void (*)(void))type metadata accessor for EmbeddedScheduledTask, (uint64_t (*)(unint64_t, unint64_t))sub_1001FC77C, (uint64_t (*)(unint64_t, unint64_t))sub_10005572C);
      }
LABEL_25:
      swift_endAccess();
      swift_release();
      swift_release();
    }
    *(void *)(v2 + 16) = *(void *)(v5 + 32);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      break;
    }
    uint64_t v30 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v30) {
      goto LABEL_38;
    }
LABEL_44:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_10009A144(*v3);
    if (!v5) {
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10024F6F0();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_44;
  }
LABEL_38:
  if (v30 >= 1)
  {
    uint64_t v31 = 0;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        uint64_t v32 = sub_10024F380();
      }
      else
      {
        uint64_t v32 = _swiftEmptyArrayStorage[v31 + 4];
        swift_retain();
      }
      ++v31;
      uint64_t v33 = *(void (**)(uint64_t))(v32 + 16);
      uint64_t v34 = swift_retain();
      v33(v34);
      swift_release();
      swift_release();
    }
    while (v30 != v31);
    goto LABEL_44;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  sub_100201860();
  sub_100201804();
  __break(1u);
}

Swift::Void __swiftcall EmbeddedEventLoop.advanceTime(by:)(ASOctaneSupportXPCService::TimeAmount by)
{
  uint64_t v2 = static NIODeadline.+ infix(_:_:)(*(void *)(v1 + 16), by.nanoseconds);
  EmbeddedEventLoop.advanceTime(to:)((ASOctaneSupportXPCService::NIODeadline)v2);
}

uint64_t sub_1001FD30C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    goto LABEL_38;
  }
  swift_retain();
  while (1)
  {
    uint64_t v6 = v3 + 32;
    uint64_t v5 = *(void *)(v3 + 32);
    uint64_t v7 = v4 - 1;
    if (v4 == 1) {
      break;
    }
    uint64_t v8 = *(void *)(v6 + 8 * v7);
    if (v5 == v8) {
      break;
    }
    type metadata accessor for EmbeddedScheduledTask();
    char v9 = sub_1001FC77C(v5, v8);
    uint64_t v10 = *(void *)(v6 + 8 * v7);
    if ((v9 & 1) == 0)
    {
      if (sub_1001FC77C(v5, *(void *)(v6 + 8 * v7))) {
        goto LABEL_73;
      }
      swift_retain();
      swift_retain();
      uint64_t v37 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v3 = sub_100120718(v3);
        uint64_t v37 = v3;
      }
      if (!*(void *)(v3 + 16)) {
        goto LABEL_32;
      }
      swift_retain();
      swift_release();
      *(void *)(v3 + 32) = v10;
      sub_10024F420();
      swift_release();
      uint64_t v16 = v37;
      if (!*(void *)(v37 + 16)) {
        goto LABEL_34;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v16 = sub_100120718(v37);
        uint64_t v37 = v16;
      }
      uint64_t v17 = *(void *)(v16 + 16);
      if (!v17) {
        goto LABEL_35;
      }
      sub_10020190C(v17);
      goto LABEL_18;
    }
    swift_retain();
    swift_retain();
    uint64_t v37 = v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v3 = sub_100120718(v3);
      uint64_t v37 = v3;
    }
    if (!*(void *)(v3 + 16)) {
      goto LABEL_31;
    }
    swift_release();
    *(void *)(v3 + 32) = v10;
    sub_10024F420();
    uint64_t v11 = v37;
    if (!*(void *)(v37 + 16)) {
      goto LABEL_33;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v11 = sub_100120718(v37);
      uint64_t v37 = v11;
    }
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12) {
      goto LABEL_36;
    }
    sub_10020190C(v12);
    swift_release();
    sub_1001FBAE8(0, (void (*)(void))type metadata accessor for EmbeddedScheduledTask, (uint64_t (*)(unint64_t, unint64_t))sub_1001FC77C, (uint64_t (*)(unint64_t, unint64_t))sub_10005572C);
LABEL_19:
    *(void *)(v1 + 16) = *(void *)(v5 + 32);
    uint64_t v14 = *(void (**)(uint64_t))(v5 + 16);
    uint64_t v15 = swift_retain();
    v14(v15);
    swift_release();
    swift_release();
    uint64_t v3 = v37;
    uint64_t v4 = *(void *)(v37 + 16);
    if (!v4) {
      goto LABEL_37;
    }
  }
  swift_retain();
  uint64_t v37 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = sub_100120718(v3);
    uint64_t v37 = v3;
  }
  uint64_t v13 = *(void *)(v3 + 16);
  if (v13)
  {
    *(void *)(v3 + 16) = v13 - 1;
    sub_10024F420();
LABEL_18:
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  while (2)
  {
    swift_release();
LABEL_38:
    sub_1000578C0();
    uint64_t v18 = *v2;
    uint64_t v19 = *(void *)(*v2 + 16);
    if (!v19) {
      return swift_endAccess();
    }
    uint64_t v21 = v18 + 32;
    uint64_t v20 = *(void *)(v18 + 32);
    uint64_t v22 = v19 - 1;
    if (v19 != 1)
    {
      uint64_t v23 = *(void *)(v21 + 8 * v22);
      if (v20 != v23)
      {
        type metadata accessor for EmbeddedScheduledTask();
        char v24 = sub_1001FC77C(v20, v23);
        uint64_t v25 = *(void *)(v21 + 8 * v22);
        if (v24)
        {
          swift_retain();
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v2 = v18;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v18 = sub_100120718(v18);
            *uint64_t v2 = v18;
          }
          if (!*(void *)(v18 + 16)) {
            goto LABEL_67;
          }
          swift_release();
          *(void *)(v18 + 32) = v25;
          sub_10024F420();
          uint64_t v27 = *v2;
          if (!*(void *)(*v2 + 16)) {
            goto LABEL_70;
          }
          char v28 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v2 = v27;
          if ((v28 & 1) == 0)
          {
            uint64_t v27 = sub_100120718(v27);
            *uint64_t v2 = v27;
          }
          uint64_t v29 = *(void *)(v27 + 16);
          if (!v29) {
            goto LABEL_71;
          }
          sub_1002018C4(v29);
          swift_release();
          sub_1001FBAE8(0, (void (*)(void))type metadata accessor for EmbeddedScheduledTask, (uint64_t (*)(unint64_t, unint64_t))sub_1001FC77C, (uint64_t (*)(unint64_t, unint64_t))sub_10005572C);
          goto LABEL_55;
        }
        if (sub_1001FC77C(v20, *(void *)(v21 + 8 * v22))) {
          goto LABEL_73;
        }
        swift_retain();
        swift_retain();
        char v32 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v2 = v18;
        if ((v32 & 1) == 0)
        {
          uint64_t v18 = sub_100120718(v18);
          *uint64_t v2 = v18;
        }
        if (!*(void *)(v18 + 16)) {
          goto LABEL_68;
        }
        swift_retain();
        swift_release();
        *(void *)(v18 + 32) = v25;
        sub_10024F420();
        swift_release();
        uint64_t v33 = *v2;
        if (!*(void *)(*v2 + 16)) {
          goto LABEL_69;
        }
        char v34 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v2 = v33;
        if ((v34 & 1) == 0)
        {
          uint64_t v33 = sub_100120718(v33);
          *uint64_t v2 = v33;
        }
        uint64_t v35 = *(void *)(v33 + 16);
        if (!v35) {
          goto LABEL_72;
        }
        sub_1002018C4(v35);
LABEL_54:
        swift_release();
LABEL_55:
        swift_endAccess();
        continue;
      }
    }
    break;
  }
  swift_retain();
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v18;
  if ((v30 & 1) == 0)
  {
    uint64_t v18 = sub_100120718(v18);
    *uint64_t v2 = v18;
  }
  uint64_t v31 = *(void *)(v18 + 16);
  if (v31)
  {
    *(void *)(v18 + 16) = v31 - 1;
    sub_10024F420();
    goto LABEL_54;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  sub_100201860();
  uint64_t result = sub_100201804();
  __break(1u);
  return result;
}

uint64_t EmbeddedEventLoop.shutdownGracefully(queue:_:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  EmbeddedEventLoop.advanceTime(to:)(v3[2]);
  uint64_t v7 = sub_10004F2C8();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = sub_10004F2C8();
  *(void *)(v8 + 16) = sub_1001EE660;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_10004E9CC;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1001FD9C4;
  unsigned char v11[3] = &unk_1002F09B8;
  char v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(a1, v9);
  _Block_release(v9);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FD9C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t EmbeddedEventLoop.deinit()
{
  sub_10004F1B0();
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v0;
  }
  return result;
}

uint64_t EmbeddedEventLoop.__deallocating_deinit()
{
  EmbeddedEventLoop.deinit();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1001FDA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(_WORD *)(v4 + 16) = 1;
  sub_100030788(0x10uLL);
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 72) = v9;
  *(void *)(v4 + 80) = v10;
  sub_1000306E4(0x10uLL);
  *(void *)(v4 + 88) = v11;
  *(void *)(v4 + 96) = v12;
  *(void *)(v4 + 104) = v13;
  *(void *)(v4 + 112) = 0;
  *(unsigned char *)(v4 + 120) = 1;
  sub_100030788(0x10uLL);
  *(void *)(v4 + 128) = v14;
  *(void *)(v4 + 136) = v15;
  *(void *)(v4 + 144) = v16;
  uint64_t ObjectType = swift_getObjectType();
  EmbeddedChannel.WrongTypeError.actual.getter(ObjectType, (uint64_t)&type metadata for ()[8]);
  sub_1002018B8();
  uint64_t v22 = EventLoop.makePromise<A>(of:file:line:)(v18, v19, v20, v21, 233, ObjectType, (uint64_t)&type metadata for ()[8], a3);
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v22;
  return v4;
}

#error "1001FDB70: call analysis failed (funcsize=32)"

uint64_t EmbeddedChannelCore.__deallocating_deinit()
{
  EmbeddedChannelCore.deinit();
  return _swift_deallocClassInstance(v0, 152, 7);
}

uint64_t EmbeddedChannelCore.outboundBuffer.getter()
{
  return swift_retain();
}

uint64_t EmbeddedChannelCore.outboundBuffer.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100141040();
  v3[8] = a1;
  v3[9] = a2;
  v3[10] = a3;
  return swift_release();
}

uint64_t (*EmbeddedChannelCore.outboundBuffer.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t EmbeddedChannelCore.pendingOutboundBuffer.getter@<X0>(uint64_t a1@<X8>)
{
  sub_10004F1B0();
  uint64_t v3 = *(void *)(v1 + 112);
  char v4 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 96);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return swift_retain();
}

uint64_t EmbeddedChannelCore.pendingOutboundBuffer.setter(uint64_t a1)
{
  sub_100141040();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v3;
  *(unsigned char *)(v1 + 120) = *(unsigned char *)(a1 + 32);
  swift_retain();
  swift_release();
  return sub_100074F0C(a1);
}

uint64_t EmbeddedChannelCore.inboundBuffer.getter()
{
  return swift_retain();
}

uint64_t EmbeddedChannelCore.inboundBuffer.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100141040();
  v3[16] = a1;
  v3[17] = a2;
  v3[18] = a3;
  return swift_release();
}

uint64_t (*EmbeddedChannelCore.inboundBuffer.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t EmbeddedChannelCore.remoteAddress0()()
{
  return sub_1001FDE84();
}

uint64_t sub_1001FDE84()
{
  sub_10002F0C8();
  uint64_t v0 = swift_allocError();
  sub_100201980(v0, v1);
  return swift_willThrow();
}

#error "1001FE07C: call analysis failed (funcsize=121)"

#error "1001FE0F8: call analysis failed (funcsize=22)"

void EmbeddedChannelCore.bind0(to:promise:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, BOOL a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a2) {
    sub_1000B44D0(0, 0, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

#error "1001FE160: call analysis failed (funcsize=36)"

#error "1001FE1EC: call analysis failed (funcsize=38)"

uint64_t EmbeddedChannelCore.registerAlreadyConfigured0(promise:)()
{
  *(unsigned char *)(v0 + 17) = 1;
  EmbeddedChannelCore.register0(promise:)();
  uint64_t v1 = sub_100201930();
  sub_100201A24((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/ChannelPipeline.swift", v2, v3, v4, v1);
  uint64_t result = sub_1000B05F8();
  if (result)
  {
    sub_10002FE88();
    sub_1000B12CC();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t EmbeddedChannelCore.write0(_:promise:)(uint64_t a1, uint64_t a2)
{
  sub_100030CE8(a1, (uint64_t)v4);
  uint64_t v5 = a2;
  sub_1000578C0();
  swift_retain();
  sub_100031220((uint64_t)v4);
  sub_10003C3FC((uint64_t)v4, &qword_10030A548);
  return swift_endAccess();
}

Swift::Void __swiftcall EmbeddedChannelCore.flush0()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + 88);
  sub_100141040();
  sub_1001FBA24();
  if (*(unsigned char *)(v0 + 120)) {
    return;
  }
  while (1)
  {
    sub_1000578C0();
    if ((*(unsigned char *)(v1 + 120) & 1) == 0)
    {
      uint64_t v3 = *(void *)(v1 + 112);
      BOOL v4 = v3 < 1;
      uint64_t v5 = v3 - 1;
      char v6 = v4;
      if (v4) {
        uint64_t v5 = 0;
      }
      *(void *)(v1 + 112) = v5;
      *(unsigned char *)(v1 + 120) = v6;
    }
    uint64_t v7 = *(void *)(v1 + 88);
    unint64_t v8 = *(void *)(v1 + 96);
    uint64_t v9 = *(void *)(v1 + 104);
    uint64_t v10 = v9 - v8;
    if (v9 < (uint64_t)v8) {
      v10 += *(void *)(v7 + 16);
    }
    if (v10 < 1)
    {
      memset(__dst, 0, 64);
      uint64_t v14 = 1;
      *(void *)&__dst[4] = 1;
      goto LABEL_25;
    }
    if (v9 == v8) {
      goto LABEL_42;
    }
    if ((v8 & 0x8000000000000000) != 0) {
      goto LABEL_47;
    }
    if (HIDWORD(v8)) {
      break;
    }
    if (v8 >= *(void *)(v7 + 16)) {
      goto LABEL_43;
    }
    sub_100200B98(v7 + 72 * v8 + 32, (uint64_t)__src);
    if (*(void *)&__src[64] == 1) {
      goto LABEL_46;
    }
    memcpy(__dst, __src, 0x48uLL);
    uint64_t v11 = v9 - v8;
    if (v9 < (uint64_t)v8) {
      v11 += *(void *)(v7 + 16);
    }
    if (v11 < 1) {
      goto LABEL_44;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10011FD3C();
      uint64_t v7 = v13;
    }
    memset(__src, 0, 64);
    *(void *)&__src[64] = 1;
    *uint64_t v2 = v7;
    if (v8 >= *(void *)(v7 + 16)) {
      goto LABEL_45;
    }
    sub_100200C00((uint64_t)__src, v7 + 72 * v8 + 32, &qword_10030A550);
    *(void *)(v1 + 96) = (*(void *)(*(void *)(v1 + 88) + 16) - 1) & (v8 + 1);
    uint64_t v14 = *(void *)&__dst[4];
LABEL_25:
    swift_endAccess();
    if (v14 == 1)
    {
      sub_10003C3FC((uint64_t)__dst, &qword_10030A550);
      return;
    }
    v30[0] = __dst[0];
    v30[1] = __dst[1];
    v31[0] = __dst[2];
    *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)&__dst[2] + 9);
    uint64_t v32 = v14;
    sub_1000578C0();
    unint64_t v15 = *(void *)(v1 + 80);
    sub_100030CE8((uint64_t)v30, (uint64_t)__dst);
    uint64_t v16 = *(void *)(v1 + 64);
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 64) = v16;
    if ((v17 & 1) == 0)
    {
      sub_10011FD0C();
      sub_10020189C(v18);
    }
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      sub_10003C4F8();
      goto LABEL_49;
    }
    if (v15 >= *(void *)(v16 + 16)) {
      goto LABEL_41;
    }
    sub_100200C00((uint64_t)__dst, v16 + (v15 << 6) + 32, &qword_10030A508);
    uint64_t v19 = *(void *)(v1 + 72);
    uint64_t v20 = (*(void *)(*(void *)(v1 + 64) + 16) - 1) & (*(void *)(v1 + 80) + 1);
    *(void *)(v1 + 80) = v20;
    if (v19 == v20) {
      sub_100121B24();
    }
    swift_endAccess();
    sub_100030CE8((uint64_t)v30, (uint64_t)__dst);
    uint64_t v21 = v32;
    *(void *)&__dst[4] = v32;
    if (v32)
    {
      uint64_t v22 = *(void *)(v32 + 40);
      uint64_t ObjectType = swift_getObjectType();
      char v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 16);
      swift_retain();
      if (v24(ObjectType, v22))
      {
        uint64_t v25 = sub_1001FB42C(0, 0, (void (*)(uint64_t))sub_10004F084, (void (*)(uint64_t, uint64_t))sub_1001407CC);
        CallbackList._run()();
        sub_10003C350(v25);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        *(void *)__src = 0;
        __src[8] = 0;
        sub_100201A18();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v21;
        sub_10005CF84((uint64_t)__src, v26 + 24, qword_10030ECB8);
        uint64_t v27 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v22 + 24);
        swift_retain();
        v27(sub_1000B733C, v26, ObjectType, v22);
        swift_release();
        swift_release();
      }
    }
    sub_10003C3FC((uint64_t)v30, &qword_10030A548);
    sub_10003908C((uint64_t)__dst);
    if (*(unsigned char *)(v1 + 120) == 1) {
      return;
    }
  }
  sub_10003C4F8();
  sub_10003C6D8();
LABEL_49:
  sub_10024F660();
  __break(1u);
}

#error "1001FE810: call analysis failed (funcsize=30)"

uint64_t EmbeddedChannelCore.channelRead0(_:)(uint64_t a1)
{
  return swift_endAccess();
}

uint64_t EmbeddedChannelCore.errorCaught0(error:)(uint64_t result)
{
  if (!*(void *)(v1 + 48))
  {
    *(void *)(v1 + 48) = result;
    swift_errorRetain();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1001FE8C8()
{
  return EmbeddedChannelCore.remoteAddress0()();
}

#error "1001FE8F4: call analysis failed (funcsize=6)"

uint64_t sub_1001FE910()
{
  return EmbeddedChannelCore.triggerUserOutboundEvent0(_:promise:)();
}

BOOL static EmbeddedChannel.WrongTypeError.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_1001FE940(uint64_t *a1, uint64_t *a2)
{
  return static EmbeddedChannel.WrongTypeError.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t EmbeddedChannel.isActive.getter()
{
  uint64_t v0 = *(unsigned __int8 *)(EmbeddedChannel.channelcore.getter() + 17);
  swift_release();
  return v0;
}

uint64_t EmbeddedChannel.channelcore.getter()
{
  uint64_t result = *(void *)(v0 + 16);
  if (result)
  {
    uint64_t v0 = *(void *)(v0 + 16);
LABEL_5:
    swift_retain();
    return v0;
  }
  if (*(void *)(v0 + 32))
  {
    uint64_t v2 = EmbeddedChannel.eventLoop.getter();
    type metadata accessor for EmbeddedChannelCore();
    swift_allocObject();
    uint64_t v3 = sub_1002019A0();
    sub_1001FDA74(v3, v2, (uint64_t)&protocol witness table for EmbeddedEventLoop);
    *(void *)(v0 + 16) = v0;
    swift_retain();
    swift_release();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t EmbeddedChannel.closeFuture.getter()
{
  uint64_t v0 = *(void *)(EmbeddedChannel.channelcore.getter() + 40);
  swift_retain();
  swift_release();
  return v0;
}

uint64_t EmbeddedChannel.eventLoop.getter()
{
  return swift_retain();
}

uint64_t EmbeddedChannel.channelcore.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*EmbeddedChannel.channelcore.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = EmbeddedChannel.channelcore.getter();
  return sub_1001FEAEC;
}

uint64_t sub_1001FEAEC(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return EmbeddedChannel.channelcore.setter(*a1);
  }
  uint64_t v2 = swift_retain();
  EmbeddedChannel.channelcore.setter(v2);
  return swift_release();
}

uint64_t EmbeddedChannel._channelCore.getter()
{
  return EmbeddedChannel.channelcore.getter();
}

uint64_t EmbeddedChannel.pipeline.getter()
{
  uint64_t result = *(void *)(v0 + 32);
  if (result) {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t EmbeddedChannel.isWritable.getter()
{
  sub_10004F1B0();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t EmbeddedChannel.isWritable.setter(char a1)
{
  uint64_t result = sub_100141040();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*EmbeddedChannel.isWritable.modify())()
{
  return j__swift_endAccess;
}

uint64_t EmbeddedChannel.finish(acceptAlreadyClosed:)(void *a1)
{
  sub_1002018B8();
  sub_1001FA8EC();
  sub_1001FB138((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Embedded.swift", 110, 2, 498, (void (*)(uint64_t, void *, uint64_t, uint64_t))sub_10012EA24);
  if (v2)
  {
    swift_release();
    __dst[0] = v2;
    swift_errorRetain();
    sub_100019524(&qword_100309768);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      char v4 = __src[8];
      BOOL v5 = __src[8] == 3 && *(void *)__src == 3;
      if (v5 && (a1 & 1) != 0)
      {
        swift_errorRelease();
        goto LABEL_11;
      }
      sub_10002F0C8();
      swift_allocError();
      *(void *)uint64_t v27 = *(void *)__src;
      *(unsigned char *)(v27 + 8) = v4;
      swift_willThrow();
    }
    swift_errorRelease();
    return (uint64_t)a1;
  }
  swift_release();
LABEL_11:
  sub_10006FF20();
  swift_retain();
  sub_1001FD30C();
  swift_release();
  v6._uptimeNanoseconds = *(void *)(*(void *)(v1 + 72) + 16);
  swift_retain();
  EmbeddedEventLoop.advanceTime(to:)(v6);
  swift_release();
  EmbeddedChannel.throwIfErrorCaught()();
  if (v7) {
    return (uint64_t)a1;
  }
  uint64_t v8 = EmbeddedChannel.channelcore.getter();
  sub_10006FF20();
  if (*(void *)(v8 + 72) == *(void *)(v8 + 80))
  {
    sub_10006FF20();
    if (*(void *)(v8 + 136) == *(void *)(v8 + 144))
    {
      sub_10006FF20();
      if (*(void *)(v8 + 96) == *(void *)(v8 + 104))
      {
        swift_release();
        return 0;
      }
    }
  }
  uint64_t v37 = 0;
  sub_10006FF20();
  uint64_t v9 = *(void *)(v8 + 136);
  uint64_t v10 = *(void *)(v8 + 144);
  uint64_t v11 = swift_retain();
  a1 = sub_10001AB3C(v11, v9, v10);
  swift_release();
  uint64_t v12 = *(void *)(v8 + 72);
  uint64_t v13 = *(void *)(v8 + 80);
  uint64_t v14 = swift_retain();
  sub_10001AB3C(v14, v12, v13);
  swift_release();
  sub_10006FF20();
  long long v15 = *(_OWORD *)(v8 + 104);
  v35[0] = *(_OWORD *)(v8 + 88);
  v35[1] = v15;
  char v36 = *(unsigned char *)(v8 + 120);
  uint64_t v16 = *(void *)&v35[0];
  uint64_t v17 = v15 - *((void *)&v35[0] + 1);
  if ((uint64_t)v15 < *((uint64_t *)&v35[0] + 1)) {
    v17 += *(void *)(*(void *)&v35[0] + 16);
  }
  if (!v17)
  {
    swift_release();
    return (uint64_t)a1;
  }
  char v34 = _swiftEmptyArrayStorage;
  swift_retain();
  sub_100039444();
  LODWORD(v18) = sub_1001FBA54();
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t v19 = *(void *)(*(void *)&v35[0] + 16);
    while (1)
    {
      uint64_t v20 = v18;
      if (v18 >= v19) {
        break;
      }
      sub_100200B98(v16 + 32 + 72 * v18, (uint64_t)__src);
      if (*(void *)&__src[64] == 1) {
        goto LABEL_36;
      }
      memcpy(__dst, __src, sizeof(__dst));
      sub_100030CE8((uint64_t)__dst, (uint64_t)__src);
      long long v31 = *(_OWORD *)__src;
      long long v32 = *(_OWORD *)&__src[16];
      v33[0] = *(_OWORD *)&__src[32];
      *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)&__src[41];
      sub_10003C3FC((uint64_t)__dst, &qword_10030A548);
      uint64_t v21 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100039444();
        uint64_t v21 = v34;
      }
      unint64_t v22 = v21[2];
      if (v22 >= v21[3] >> 1)
      {
        sub_100039444();
        uint64_t v21 = v34;
      }
      _OWORD v21[2] = v22 + 1;
      uint64_t v23 = &v21[8 * v22];
      long long v24 = v31;
      long long v25 = v32;
      long long v26 = v33[0];
      *(_OWORD *)((char *)v23 + 73) = *(_OWORD *)((char *)v33 + 9);
      void v23[3] = v25;
      v23[4] = v26;
      v23[2] = v24;
      unint64_t v18 = (*(void *)(v16 + 16) - 1) & (v20 + 1);
      if (HIDWORD(v18)) {
        goto LABEL_37;
      }
      if (!--v17)
      {
        swift_release();
        sub_100074F0C((uint64_t)v35);
        return (uint64_t)a1;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_10003C4F8();
  sub_10003C6D8();
  uint64_t result = sub_10024F660();
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EmbeddedChannel.throwIfErrorCaught()()
{
  uint64_t v0 = *(void *)(EmbeddedChannel.channelcore.getter() + 48);
  swift_errorRetain();
  swift_release();
  if (v0)
  {
    *(void *)(EmbeddedChannel.channelcore.getter() + 48) = 0;
    swift_errorRelease();
    swift_release();
    swift_willThrow();
  }
}

uint64_t EmbeddedChannel.finish()()
{
  uint64_t result = EmbeddedChannel.finish(acceptAlreadyClosed:)(0);
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t EmbeddedChannel.allocator.getter()
{
  sub_10004F1B0();
  return *(void *)(v0 + 40);
}

uint64_t EmbeddedChannel.allocator.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100201870();
  uint64_t result = sub_100141040();
  v4[5] = v7;
  v4[6] = v6;
  v4[7] = v5;
  char v4[8] = a4;
  return result;
}

uint64_t EmbeddedChannel.embeddedEventLoop.getter()
{
  return swift_retain();
}

uint64_t EmbeddedChannel.embeddedEventLoop.setter(uint64_t a1)
{
  sub_100141040();
  *(void *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t (*EmbeddedChannel.embeddedEventLoop.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t EmbeddedChannel.localAddress.getter()
{
  sub_10004F1B0();
  uint64_t v1 = *(void *)(v0 + 80);
  sub_10002F288(v1);
  return v1;
}

uint64_t EmbeddedChannel.localAddress.setter(uint64_t a1)
{
  sub_100141040();
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)(v1 + 80) = a1;
  return sub_10002F2A0(v3);
}

uint64_t EmbeddedChannel.remoteAddress.getter()
{
  sub_10004F1B0();
  uint64_t v1 = *(void *)(v0 + 88);
  sub_10002F288(v1);
  return v1;
}

uint64_t EmbeddedChannel.remoteAddress.setter(uint64_t a1)
{
  sub_100141040();
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v1 + 88) = a1;
  return sub_10002F2A0(v3);
}

uint64_t EmbeddedChannel.parent.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t EmbeddedChannel.readOutbound<A>(as:)()
{
  return swift_release();
}

uint64_t EmbeddedChannel._readFromBuffer<A>(buffer:)@<X0>(uint64_t a1@<X0>, ValueMetadata *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10024F030();
  sub_10002F9C8();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(void *)(a1 + 8) == *(void *)(a1 + 16))
  {
    uint64_t v13 = a3;
    uint64_t v14 = 1;
    return sub_1000195B4(v13, v14, 1, (uint64_t)a2);
  }
  sub_1001FAA4C(v20);
  EmbeddedChannel.channelcore.getter();
  type metadata accessor for EmbeddedChannelCore();
  ChannelCore.tryUnwrapData<A>(_:as:)(a2, (uint64_t)v12);
  swift_release();
  if (sub_10001FA0C((uint64_t)v12, 1, (uint64_t)a2) != 1)
  {
    sub_10003908C((uint64_t)v20);
    (*((void (**)(uint64_t, char *, ValueMetadata *))a2[-1].Description + 4))(a3, v12, a2);
    uint64_t v13 = a3;
    uint64_t v14 = 0;
    return sub_1000195B4(v13, v14, 1, (uint64_t)a2);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
  EmbeddedChannel.channelcore.getter();
  sub_1001FABE8(&v18);
  uint64_t result = swift_release();
  if (v19)
  {
    sub_10001C2A8(&v18, v19);
    uint64_t DynamicType = swift_getDynamicType();
    sub_10001C2EC((uint64_t)&v18);
    sub_100200C80();
    swift_allocError();
    *uint64_t v17 = a2;
    v17[1] = (ValueMetadata *)DynamicType;
    swift_willThrow();
    return sub_10003908C((uint64_t)v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EmbeddedChannel.readInbound<A>(as:)()
{
  return swift_release();
}

void *EmbeddedChannel.writeInbound<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_10002F9C8();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  EmbeddedChannel.pipeline.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, a1, a2);
  NIOAny.init<A>(_:)((uint64_t)v10, a2, v21);
  ChannelPipeline.fireChannelRead(_:)((uint64_t)v21);
  swift_release();
  sub_10003908C((uint64_t)v21);
  EmbeddedChannel.pipeline.getter();
  ChannelPipeline.fireChannelReadComplete()();
  swift_release();
  EmbeddedChannel.throwIfErrorCaught()();
  if (!v11)
  {
    uint64_t v12 = EmbeddedChannel.channelcore.getter();
    sub_10006FF20();
    uint64_t v13 = *(void *)(v12 + 136);
    uint64_t v14 = *(void *)(v12 + 144);
    swift_release();
    uint64_t v2 = 0;
    if (v13 != v14)
    {
      long long v15 = (void *)EmbeddedChannel.channelcore.getter();
      sub_10006FF20();
      uint64_t v17 = v15[16];
      uint64_t v16 = v15[17];
      uint64_t v18 = v15[18];
      swift_retain();
      swift_release();
      uint64_t v2 = sub_10001AB3C(v17, v16, v18);
      swift_release();
    }
  }
  return v2;
}

uint64_t EmbeddedChannel.writeOutbound<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_10002F9C8();
  double v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  NIOAny.init<A>(_:)((uint64_t)v8, a2, v21);
  sub_1002018B8();
  uint64_t v11 = sub_1001FAB78(v10);
  sub_10003908C((uint64_t)v21);
  sub_1001FB138((uint64_t)"/Library/Caches/com.apple.xbs/Sources/StoreKit/ASOctaneSupportXPCService/Octane Server/SwiftNIO/Embedded.swift", 110, 2, 614, (void (*)(uint64_t, void *, uint64_t, uint64_t))sub_100130144);
  swift_release();
  if (!v2)
  {
    uint64_t v12 = EmbeddedChannel.channelcore.getter();
    sub_10006FF20();
    uint64_t v13 = *(void *)(v12 + 72);
    uint64_t v14 = *(void *)(v12 + 80);
    swift_release();
    uint64_t v11 = 0;
    if (v13 != v14)
    {
      long long v15 = (void *)EmbeddedChannel.channelcore.getter();
      sub_10006FF20();
      uint64_t v17 = v15[8];
      uint64_t v16 = v15[9];
      uint64_t v18 = v15[10];
      swift_retain();
      swift_release();
      uint64_t v11 = (uint64_t)sub_10001AB3C(v17, v16, v18);
      swift_release();
    }
  }
  return v11;
}

uint64_t EmbeddedChannel.__allocating_init(handler:loop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    sub_100019524(&qword_10030A5F0);
    double v6 = (void *)sub_1000AC8E4();
    *((_OWORD *)v6 + 1) = xmmword_100255FB0;
    v6[4] = a1;
    void v6[5] = a2;
  }
  else
  {
    double v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = swift_allocObject();
  EmbeddedChannel.init(handlers:loop:)((uint64_t)v6, a3);
  return v7;
}

uint64_t EmbeddedChannel.__allocating_init(handlers:loop:)()
{
  sub_1000ACEB8();
  swift_allocObject();
  uint64_t v1 = sub_1002018A8();
  EmbeddedChannel.init(handlers:loop:)(v1, v2);
  return v0;
}

uint64_t EmbeddedChannel.init(handlers:loop:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v2[1].i64[0] = 0;
  v2[1].i8[8] = 1;
  v2[2].i64[0] = 0;
  v2[2].i64[1] = (uint64_t)j_j__malloc;
  v2[3].i64[0] = (uint64_t)j_j__realloc;
  v2[3].i64[1] = (uint64_t)j_j__free;
  v2[4].i64[0] = (uint64_t)sub_10006C3B4;
  type metadata accessor for EmbeddedEventLoop();
  uint64_t v6 = sub_1000AC8E4();
  EmbeddedEventLoop.init()();
  v3[4].i64[1] = v6;
  void v3[5] = vdupq_n_s64(0xF000000000000007);
  v3[6].i64[0] = 0;
  v3[6].i64[1] = 0;
  sub_100141040();
  uint64_t v7 = v3[4].i64[1];
  v3[4].i64[1] = a2;
  swift_retain();
  swift_release();
  type metadata accessor for ChannelPipeline();
  swift_allocObject();
  uint64_t v8 = sub_10002FE88();
  v3[2].i64[0] = sub_100200F60(v8, v7);
  swift_release();
  if (v3[2].i64[0])
  {
    swift_retain();
    sub_1000B1B9C(a1, 1, 0x8000000000000000);
    if ((v9 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1002019EC();
      sub_1001FAB20(v10, v11, v12, v13, v14, v15);
      uint64_t v16 = sub_1002019EC();
      sub_1001FB138(v16, v17, v18, v19, v20);
      swift_release();
      swift_release();
      return (uint64_t)v3;
    }
  }
  else
  {
    __break(1u);
  }
  sub_100019524(&qword_100309768);
  swift_willThrowTypedImpl();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void EmbeddedChannel.setOption<A>(_:value:)()
{
}

void EmbeddedChannel.setOptionSync<A>(_:value:)()
{
}

uint64_t EmbeddedChannel.getOption<A>(_:)()
{
  sub_100201870();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10002F9C8();
  uint64_t v2 = v1;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v10 - v5;
  EmbeddedChannel.eventLoop.getter();
  swift_getObjectType();
  EmbeddedChannel.getOptionSync<A>(_:)();
  sub_1002018B8();
  EventLoop.makeSucceededFuture<A>(_:file:line:)();
  uint64_t v8 = v7;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, AssociatedTypeWitness);
  return v8;
}

uint64_t EmbeddedChannel.getOptionSync<A>(_:)()
{
  sub_10002F9C8();
  uint64_t v1 = v0;
  __chkstk_darwin(v2, v3);
  __chkstk_darwin(v4, v5);
  uint64_t v6 = *(void (**)(void))(v1 + 16);
  sub_1002019B8();
  v6();
  if (swift_dynamicCast())
  {
    swift_getAssociatedTypeWitness();
    return swift_dynamicCast();
  }
  else
  {
    sub_1002019B8();
    v6();
    sub_10024F330(23);
    v8._countAndFlagsBits = 0x206E6F6974706FLL;
    v8._object = (void *)0xE700000000000000;
    sub_10024E800(v8);
    sub_10024FA20();
    v9._countAndFlagsBits = 0x70757320746F6E20;
    v9._object = (void *)0xEE00646574726F70;
    sub_10024E800(v9);
    uint64_t result = sub_10024F670();
    __break(1u);
  }
  return result;
}

uint64_t EmbeddedChannel.bind(to:promise:)()
{
  sub_1000ACEB8();
  if (v2)
  {
    uint64_t v3 = sub_10004F2C8();
    *(void *)(v3 + 16) = v0;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = sub_10004F2C8();
    *(void *)(v4 + 16) = sub_1002010EC;
    *(void *)(v4 + 24) = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10012E40C();
    swift_release();
  }
  EmbeddedChannel.pipeline.getter();
  sub_1002018A8();
  ChannelPipeline.bind(to:promise:)();
  return swift_release();
}

uint64_t sub_1002000E8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = a2;
  sub_10002F2A0(v4);
  return swift_retain();
}

uint64_t EmbeddedChannel.connect(to:promise:)()
{
  sub_1000ACEB8();
  if (v2)
  {
    uint64_t v3 = sub_10004F2C8();
    *(void *)(v3 + 16) = v0;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = sub_10004F2C8();
    *(void *)(v4 + 16) = sub_100201128;
    *(void *)(v4 + 24) = v3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10012E40C();
    swift_release();
  }
  EmbeddedChannel.pipeline.getter();
  sub_1002018A8();
  ChannelPipeline.connect(to:promise:)();
  return swift_release();
}

uint64_t sub_100200214(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = a2;
  sub_10002F2A0(v4);
  return swift_retain();
}

uint64_t EmbeddedChannel.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  sub_10002F2A0(*(void *)(v0 + 80));
  sub_10002F2A0(*(void *)(v0 + 88));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EmbeddedChannel.__deallocating_deinit()
{
  EmbeddedChannel.deinit();
  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t sub_1002002E4()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_100200324()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  sub_10002F288(v1);
  return v1;
}

uint64_t sub_10020036C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 88);
  sub_10002F288(v1);
  return v1;
}

void sub_1002003B4()
{
}

uint64_t sub_1002003C8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_100200400()
{
  return EmbeddedChannel._channelCore.getter();
}

uint64_t EmbeddedChannel.syncOptions.getter@<X0>(void *a1@<X8>)
{
  a1[3] = &type metadata for EmbeddedChannel.SynchronousOptions;
  a1[4] = &protocol witness table for EmbeddedChannel.SynchronousOptions;
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_100200444()
{
  return EmbeddedChannel.bind(to:promise:)();
}

uint64_t sub_100200468()
{
  return EmbeddedChannel.connect(to:promise:)();
}

uint64_t sub_10020048C()
{
  return EmbeddedChannel.eventLoop.getter();
}

uint64_t EmbeddedChannel.SynchronousOptions.getOption<A>(_:)()
{
  return EmbeddedChannel.getOptionSync<A>(_:)();
}

uint64_t sub_1002004E8()
{
  return EmbeddedChannel.SynchronousOptions.getOption<A>(_:)();
}

uint64_t sub_100200508()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_10004F264();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100200540()
{
  return sub_1001FCBEC(v0[3], v0[4], v0[5], v0[2]);
}

uint64_t type metadata accessor for EmbeddedScheduledTask()
{
  return self;
}

uint64_t sub_100200574()
{
  return sub_1001FCCF0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t (*sub_10020057C())()
{
  uint64_t v1 = sub_1002017D0();
  uint64_t v2 = (uint64_t *)sub_1002017F0((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1002006FC(v2, v3, v4);
  return sub_1002005C8;
}

uint64_t (*sub_1002005CC())()
{
  uint64_t v1 = sub_1002017D0();
  uint64_t v2 = sub_1002017F0((uint64_t)v1);
  *(void *)(v0 + 32) = sub_10020077C(v2, v3);
  return sub_1002005C8;
}

uint64_t (*sub_100200618())()
{
  uint64_t v1 = sub_1002017D0();
  uint64_t v2 = sub_1002017F0((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1002007E0(v2, v3);
  return sub_1002005C8;
}

uint64_t (*sub_100200664())()
{
  uint64_t v1 = sub_1002017D0();
  uint64_t v2 = (uint64_t *)sub_1002017F0((uint64_t)v1);
  *(void *)(v0 + 32) = sub_10020084C(v2, v3, v4);
  return sub_1002005C8;
}

uint64_t (*sub_1002006B0())()
{
  uint64_t v1 = sub_1002017D0();
  uint64_t v2 = sub_1002017F0((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1002008CC(v2, v3);
  return sub_1002005C8;
}

uint64_t (*sub_1002006FC(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v4 = a3 & 0xC000000000000001;
  sub_10014ED88(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v4) {
    uint64_t v5 = sub_10024F380();
  }
  else {
    uint64_t v5 = swift_retain();
  }
  *a1 = v5;
  return j__s25ASOctaneSupportXPCService10ByteBufferVwxx;
}

uint64_t (*sub_10020077C(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = sub_1002017B4(a1, a2);
  sub_10014ED88(v4, v5, v6);
  if (v3) {
    uint64_t v7 = sub_100201A00();
  }
  else {
    uint64_t v7 = swift_retain();
  }
  *uint64_t v2 = v7;
  return j__s25ASOctaneSupportXPCService10ByteBufferVwxx;
}

void (*sub_1002007E0(uint64_t a1, uint64_t a2))(id *a1)
{
  uint64_t v6 = sub_1002017B4(a1, a2);
  sub_10014ED88(v6, v7, v8);
  if (v5) {
    id v9 = (id)sub_100201A00();
  }
  else {
    id v9 = *(id *)(v3 + 8 * v4 + 32);
  }
  *uint64_t v2 = v9;
  return sub_100200844;
}

void sub_100200844(id *a1)
{
}

uint64_t (*sub_10020084C(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v4 = a3 & 0xC000000000000001;
  sub_10014ED88(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v4) {
    uint64_t v5 = sub_10024F380();
  }
  else {
    uint64_t v5 = swift_retain();
  }
  *a1 = v5;
  return destroy for ByteBuffer;
}

uint64_t (*sub_1002008CC(uint64_t a1, uint64_t a2))()
{
  uint64_t v6 = sub_1002017B4(a1, a2);
  sub_10014ED88(v6, v7, v8);
  if (v5) {
    id v9 = (id)sub_100201A00();
  }
  else {
    id v9 = *(id *)(v3 + 8 * v4 + 32);
  }
  *uint64_t v2 = v9;
  return sub_1002017B0;
}

void sub_100200930(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FD5C();
    uint64_t v3 = v4;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    sub_100037D0C(v3 + 8 * a1 + 40, v5 - 1 - a1, v3 + 8 * a1 + 32);
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
  }
}

uint64_t sub_1002009A8(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, unint64_t))
{
  uint64_t v7 = *v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v7;
  if ((result & 1) == 0)
  {
    uint64_t result = a2(v7);
    uint64_t v7 = result;
    *uint64_t v3 = result;
  }
  unint64_t v9 = *(void *)(v7 + 16);
  if (v9 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v10 = v9 - 1;
    unint64_t v11 = v9 - 1 - a1;
    uint64_t v12 = v7 + 8 * a1;
    uint64_t v13 = *(void *)(v12 + 32);
    a3(v12 + 40, v11);
    *(void *)(*v3 + 16) = v10;
    sub_10024F420();
    return v13;
  }
  return result;
}

uint64_t sub_100200A44()
{
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100200A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100200A64()
{
  return swift_release();
}

uint64_t sub_100200A6C()
{
  return sub_1001FE0C4(v0);
}

void sub_100200A74()
{
  uint64_t v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10011FD5C();
    uint64_t v1 = v2;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    *(void *)(v1 + 16) = v3 - 1;
    *uint64_t v0 = v1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100200ACC()
{
  return sub_100200AE4(sub_100120718);
}

uint64_t sub_100200AE4(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if ((result & 1) == 0)
  {
    uint64_t result = a1(v3);
    uint64_t v3 = result;
    *uint64_t v1 = result;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    uint64_t v7 = *(void *)(v3 + 8 * v6 + 32);
    *(void *)(v3 + 16) = v6;
    sub_10024F420();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100200B58()
{
  swift_release();
  sub_10003C3F0(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_100201A18();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100200B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030A550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100200C00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100019524(a3);
  sub_100025FBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for EmbeddedChannelCore()
{
  return self;
}

unint64_t sub_100200C80()
{
  unint64_t result = qword_100318E80;
  if (!qword_100318E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100318E80);
  }
  return result;
}

uint64_t type metadata accessor for EmbeddedEventLoop()
{
  return self;
}

uint64_t sub_100200CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_WORD *)(a5 + 88) = 0;
  *(void *)(a5 + 40) = a1;
  *(void *)(a5 + 48) = a2;
  *(void *)(a5 + 32) = a4;
  uint64_t v8 = sub_1000B5F3C(a3);
  if (v8)
  {
    uint64_t v9 = v7;
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)(a5 + 56) = v8;
  *(void *)(a5 + 64) = v9;
  sub_10002F9E0();
  uint64_t result = sub_1000B5F3C(a3);
  if (!result)
  {
    swift_release();
    uint64_t result = 0;
    uint64_t v11 = 0;
  }
  *(void *)(a5 + 72) = result;
  *(void *)(a5 + 80) = v11;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  if (*(void *)(a5 + 56) | result) {
    return a5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100200DD0(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 64) = a1;
  *(void *)(a2 + 72) = &off_1002DBF00;
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a2 + 56) = &protocol witness table for SelectableEventLoop;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = a2 + 16;
  *(void *)(a2 + 24) = 0;
  type metadata accessor for HeadChannelHandler();
  swift_retain();
  swift_retain();
  uint64_t inited = swift_initStaticObject();
  type metadata accessor for ChannelHandlerContext();
  uint64_t v5 = swift_allocObject();
  swift_retain();
  *(void *)uint64_t v3 = sub_100200CF4(1684104552, 0xE400000000000000, inited, a2, v5);
  swift_release();
  type metadata accessor for TailChannelHandler();
  uint64_t v6 = swift_initStaticObject();
  uint64_t v7 = swift_allocObject();
  swift_retain();
  uint64_t v8 = sub_100200CF4(1818845556, 0xE400000000000000, v6, a2, v7);
  swift_release();
  *(void *)(a2 + 24) = v8;
  swift_release();
  if (*(void *)v3)
  {
    *(void *)(*(void *)v3 + 16) = *(void *)(a2 + 24);
    swift_retain();
    swift_release();
  }
  uint64_t v9 = *(void *)(a2 + 24);
  if (v9)
  {
    *(void *)(v9 + 24) = *(void *)v3;
    swift_retain();
    swift_release();
  }
  return a2;
}

uint64_t sub_100200F60(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 64) = a1;
  *(void *)(a2 + 72) = &protocol witness table for EmbeddedChannel;
  *(void *)(a2 + 48) = EmbeddedChannel.eventLoop.getter();
  *(void *)(a2 + 56) = &protocol witness table for EmbeddedEventLoop;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  type metadata accessor for HeadChannelHandler();
  swift_retain();
  uint64_t inited = swift_initStaticObject();
  type metadata accessor for ChannelHandlerContext();
  uint64_t v4 = swift_allocObject();
  swift_retain();
  *(void *)(a2 + 16) = sub_100200CF4(1684104552, 0xE400000000000000, inited, a2, v4);
  swift_release();
  type metadata accessor for TailChannelHandler();
  uint64_t v5 = swift_initStaticObject();
  uint64_t v6 = swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_100200CF4(1818845556, 0xE400000000000000, v5, a2, v6);
  swift_release();
  *(void *)(a2 + 24) = v7;
  swift_release();
  if (*(void *)(a2 + 16))
  {
    *(void *)(*(void *)(a2 + 16) + 16) = *(void *)(a2 + 24);
    swift_retain();
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + 24);
  if (v8)
  {
    *(void *)(v8 + 24) = *(void *)(a2 + 16);
    swift_retain();
    swift_release();
  }
  return a2;
}

uint64_t sub_1002010EC()
{
  return sub_1002000E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002010F4()
{
  swift_release();
  uint64_t v0 = sub_1001414C8();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100201128()
{
  return sub_100200214(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t type metadata accessor for EmbeddedChannel()
{
  return self;
}

unint64_t destroy for EmbeddedChannel.LeftOverState(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s25ASOctaneSupportXPCService15EmbeddedChannelC13LeftOverStateOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for EmbeddedChannel.LeftOverState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EmbeddedChannel.LeftOverState(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmbeddedChannel.LeftOverState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EmbeddedChannel.LeftOverState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void *sub_100201450(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for EmbeddedChannel.LeftOverState()
{
}

void *initializeBufferWithCopyOfBuffer for EmbeddedChannel.BufferState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmbeddedChannel.BufferState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for EmbeddedChannel.BufferState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmbeddedChannel.BufferState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EmbeddedChannel.BufferState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for EmbeddedChannel.BufferState()
{
}

void type metadata accessor for EmbeddedChannel.WrongTypeError()
{
}

void type metadata accessor for EmbeddedChannel.SynchronousOptions()
{
}

unint64_t sub_1002015E8()
{
  unint64_t result = qword_1003192D0;
  if (!qword_1003192D0)
  {
    type metadata accessor for EmbeddedScheduledTask();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003192D0);
  }
  return result;
}

uint64_t sub_100201638()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_10003C23C(*(void *)(v0 + 16), *(void *)(v0 + 24), v1 & 1);
  }
  sub_100201A18();
  return _swift_deallocObject(v2, v3, v4);
}

uint64_t sub_10020167C()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255) {
    sub_10003C3F0(*(void *)(v0 + 16), v1 & 1);
  }
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002016C4()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100201708(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100201778(result, a2 & 1, (uint64_t (*)(void))&_swift_release);
  }
  return result;
}

uint64_t sub_100201748(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (HIBYTE(a4) != 255) {
    return sub_1000B7100(result, a2, a3, a4, HIBYTE(a4) & 1);
  }
  return result;
}

uint64_t sub_100201760(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (HIBYTE(a3) != 255) {
    return sub_1000B7264(result, a2, a3, HIBYTE(a3) & 1);
  }
  return result;
}

uint64_t sub_100201778(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return a3();
  }
}

uint64_t sub_1002017B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1002017D0()
{
  return malloc(0x28uLL);
}

uint64_t sub_1002017F0(uint64_t result)
{
  *int v1 = result;
  return result;
}

uint64_t sub_100201804()
{
  return sub_10024F670();
}

unint64_t sub_10020182C()
{
  unint64_t v3 = sub_1001FB3DC(v0, v1);
  sub_1001FB3DC(v2, v1);
  return v3;
}

uint64_t sub_100201880()
{
  return v0;
}

uint64_t sub_100201890()
{
  return v0;
}

uint64_t sub_10020189C(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1002018A8()
{
  return v0;
}

uint64_t sub_1002018C4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 - 1;
  return sub_10024F420();
}

uint64_t sub_1002018E8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 - 1;
  return sub_10024F420();
}

uint64_t sub_10020190C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 - 1;
  return sub_10024F420();
}

uint64_t sub_100201930()
{
  return swift_getObjectType();
}

uint64_t sub_100201960()
{
  return EmbeddedChannel._readFromBuffer<A>(buffer:)(v2, v0, v1);
}

void sub_100201980(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 1;
  *(unsigned char *)(a2 + 8) = 3;
}

uint64_t sub_100201994(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1002019A0()
{
  return swift_retain();
}

uint64_t sub_1002019CC()
{
  return swift_beginAccess();
}

uint64_t sub_1002019EC()
{
  return v0;
}

uint64_t sub_100201A00()
{
  return sub_10024F380();
}

uint64_t sub_100201A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 1149, a5, v5);
}

uint64_t sub_100201A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventLoop.assertInEventLoop(file:line:)(a1, 117, 2, 769, a5, v5);
}

uint64_t destroy for OctaneSimulatedError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OctaneSimulatedError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for OctaneSimulatedError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    else
    {
      sub_100201C70(a1 + 24);
      long long v7 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 40) = v8;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_100201C70(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for OctaneSimulatedError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5)
  {
    sub_100201C70(a1 + 24);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
LABEL_6:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for OctaneSimulatedError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OctaneSimulatedError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OctaneSimulatedError()
{
  return &type metadata for OctaneSimulatedError;
}

void *initializeWithCopy for OctaneSimulatedError.CurrentError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OctaneSimulatedError.CurrentError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for OctaneSimulatedError.CurrentError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for OctaneSimulatedError.CurrentError()
{
  return &type metadata for OctaneSimulatedError.CurrentError;
}

uint64_t sub_100201EFC()
{
  if (qword_100308DF8 != -1) {
    swift_once();
  }
  sub_100204844(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1002020E0(v1, v0);
  if (*(void *)(v2 + 16)
    && (uint64_t v3 = *(void **)(v2 + 48), swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), v3[2]))
  {
    uint64_t v4 = v3[4];
    uint64_t v5 = v3[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return sub_10014B420(v4, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

double sub_100201FE4(unint64_t a1, char a2)
{
  if (a2)
  {
    sub_10008C7E4(*(void *)(v2 + 24), *(void *)(v2 + 32));
    double result = 0.0;
    *(_OWORD *)(v2 + 40) = 0u;
    *(_OWORD *)(v2 + 24) = 0u;
  }
  else
  {
    unint64_t v3 = sub_10014AEA4(a1);
    uint64_t v5 = sub_1002033A0(v3, v4);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    sub_10008C7E4(*(void *)(v2 + 24), *(void *)(v2 + 32));
    *(void *)(v2 + 24) = v5;
    *(void *)(v2 + 32) = v7;
    *(void *)(v2 + 40) = v9;
    *(void *)(v2 + 48) = v11;
  }
  return result;
}

uint64_t sub_10020205C()
{
  return 11;
}

void sub_1002020E0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    unint64_t v3 = 0;
    uint64_t v18 = a1 + 32;
    while (v3 < *(void *)(a1 + 16))
    {
      uint64_t v4 = v3++;
      uint64_t v5 = *(void **)(a2 + 16);
      uint64_t v6 = v5[2];
      if (v6)
      {
        uint64_t v7 = (uint64_t *)(v18 + 24 * v4);
        uint64_t v8 = *v7;
        long long v9 = *(_OWORD *)(v7 + 1);
        long long v20 = v9;
        uint64_t v10 = v7[1];
        BOOL v11 = v5[4] == *v7 && v5[5] == (void)v9;
        if (v11 || (sub_10024FA60() & 1) != 0)
        {
LABEL_20:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100038AAC();
          }
          unint64_t v16 = _swiftEmptyArrayStorage[2];
          if (v16 >= _swiftEmptyArrayStorage[3] >> 1) {
            sub_100038AAC();
          }
          _swiftEmptyArrayStorage[2] = v16 + 1;
          uint64_t v17 = &_swiftEmptyArrayStorage[3 * v16];
          v17[4] = v8;
          *(_OWORD *)(v17 + 5) = v20;
        }
        else if (v6 != 1)
        {
          uint64_t v12 = v5 + 7;
          uint64_t v13 = 1;
          while (1)
          {
            uint64_t v14 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              break;
            }
            BOOL v15 = *(v12 - 1) == v8 && *v12 == v10;
            if (v15 || (sub_10024FA60() & 1) != 0) {
              goto LABEL_20;
            }
            v12 += 2;
            ++v13;
            if (v14 == v6) {
              goto LABEL_25;
            }
          }
          __break(1u);
          break;
        }
      }
LABEL_25:
      if (v3 == v19) {
        goto LABEL_26;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
    sub_1002048A8(a2);
  }
}

void sub_1002022C0()
{
  uint64_t v0 = sub_10024DDC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v7 = sub_10024E6A0();
  NSString v8 = sub_10024E6A0();
  id v9 = [v6 pathForResource:v7 ofType:v8];

  if (v9)
  {
    sub_10024E6B0();

    sub_10024DD30();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10024DE00();
    unint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    sub_10024DC80();
    swift_allocObject();
    sub_10024DC70();
    sub_100019524(&qword_100319348);
    sub_10020478C(&qword_100319350, &qword_100319348, (void (*)(void))sub_1002047F8);
    sub_10024DC60();
    sub_10003F808(v10, v12);
    swift_release();
    uint64_t v13 = v14;
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  qword_10034C100 = (uint64_t)v13;
}

uint64_t sub_100202570(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9FA8;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100202590(char a1)
{
  if (a1) {
    return 0x736E6F6974706FLL;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1002025C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v8 = a1 == a4 && a2 == a5;
  if (!v8 && (sub_10024FA60() & 1) == 0) {
    return 0;
  }
  return sub_1001DAA30(a3, a6);
}

uint64_t sub_10020262C(void *a1)
{
  uint64_t v4 = sub_100019524(&qword_1003193B8);
  sub_10001B550();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_1000869F4();
  sub_10001C2A8(a1, a1[3]);
  sub_100204D14();
  sub_10024FD40();
  sub_10020509C();
  if (!v1)
  {
    sub_100019524(&qword_100309410);
    sub_10001FC58((unint64_t *)&qword_100309418);
    sub_10024F980();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1002027A0(void *a1)
{
  sub_100019524(&qword_1003193A8);
  sub_10001B550();
  __chkstk_darwin(v3, v4);
  uint64_t v5 = a1[4];
  sub_10001C2A8(a1, a1[3]);
  sub_100204D14();
  sub_10024FD20();
  if (v1)
  {
    sub_10001C2EC((uint64_t)a1);
  }
  else
  {
    uint64_t v5 = sub_10024F830();
    sub_100019524(&qword_100309410);
    sub_10001FC58(&qword_100309438);
    swift_bridgeObjectRetain();
    sub_10024F870();
    uint64_t v7 = sub_100067DF4();
    v8(v7);
    swift_bridgeObjectRetain();
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1002029A0(char *a1, char *a2)
{
  return sub_1000F9358(*a1, *a2);
}

Swift::Int sub_1002029AC()
{
  return sub_1001D3C64();
}

uint64_t sub_1002029B4()
{
  return sub_1000D0D84();
}

Swift::Int sub_1002029BC()
{
  return sub_1000D2CA0();
}

uint64_t sub_1002029C4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9FA8;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1002029FC()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100202590(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100202A24()
{
  return sub_100202590(*v0);
}

uint64_t sub_100202A2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100202570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100202A54(uint64_t a1)
{
  unint64_t v2 = sub_100204D14();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100202A90(uint64_t a1)
{
  unint64_t v2 = sub_100204D14();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100202ACC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002031D0((uint64_t (*)(void))sub_1002027A0, a1);
}

uint64_t sub_100202AF8(void *a1)
{
  return sub_10020262C(a1);
}

uint64_t sub_100202B18(uint64_t *a1, uint64_t *a2)
{
  return sub_1002025C0(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void sub_100202B34()
{
  uint64_t v0 = sub_10024DDC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OctaneConfiguration();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v7 = sub_10024E6A0();
  NSString v8 = sub_10024E6A0();
  id v9 = [v6 pathForResource:v7 ofType:v8];

  if (v9)
  {
    sub_10024E6B0();

    sub_10024DD30();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10024DE00();
    unint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    sub_10024DC80();
    swift_allocObject();
    sub_10024DC70();
    sub_100019524(&qword_100319308);
    sub_10020478C(&qword_100319310, &qword_100319308, (void (*)(void))sub_1002045D8);
    sub_10024DC60();
    sub_10003F808(v10, v12);
    swift_release();
    uint64_t v13 = v14;
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  off_1003192D8 = v13;
}

uint64_t sub_100202DDC(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002D9FF8;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100202DFC(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_100202E30(char *a1, char *a2)
{
  return sub_1000F93E4(*a1, *a2);
}

Swift::Int sub_100202E3C()
{
  return sub_1001D3C70();
}

uint64_t sub_100202E44()
{
  return sub_1000D0DE8();
}

Swift::Int sub_100202E4C()
{
  return sub_1000D2D08();
}

uint64_t sub_100202E54@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002D9FF8;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_100202E8C()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100202DFC(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100202EB4()
{
  return sub_100202DFC(*v0);
}

uint64_t sub_100202EBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100202DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100202EE4(uint64_t a1)
{
  unint64_t v2 = sub_100204CC8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100202F20(uint64_t a1)
{
  unint64_t v2 = sub_100204CC8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100202F5C(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100319398);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  NSString v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[4];
  sub_10001C2A8(a1, a1[3]);
  sub_100204CC8();
  sub_10024FD20();
  if (v1)
  {
    sub_10001C2EC((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    uint64_t v8 = sub_10024F830();
    sub_100019524(&qword_100309410);
    v10[15] = 1;
    sub_10001FC58(&qword_100309438);
    swift_bridgeObjectRetain();
    sub_10024F870();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    sub_10001C2EC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1002031A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002031D0((uint64_t (*)(void))sub_100202F5C, a1);
}

uint64_t sub_1002031D0@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_100203208()
{
  if (qword_100308E00 != -1) {
    swift_once();
  }
  uint64_t v0 = (char *)off_1003192D8;
  uint64_t v1 = *((void *)off_1003192D8 + 2);
  if (v1)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = (uint64_t *)(v0 + 48);
    uint64_t v3 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = *(v2 - 2);
      uint64_t v4 = *(v2 - 1);
      uint64_t v6 = *v2;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v7 = sub_100205054();
      sub_100094920(v7, v8);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v9 = sub_100205054();
      sub_10008C7E4(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100035B90();
        uint64_t v3 = v13;
      }
      unint64_t v11 = v3[2];
      if (v11 >= v3[3] >> 1)
      {
        sub_100035B90();
        uint64_t v3 = v14;
      }
      _OWORD v3[2] = v11 + 1;
      unint64_t v12 = &v3[8 * v11];
      v12[4] = v5;
      v12[5] = v4;
      v12[6] = v6;
      *(_OWORD *)(v12 + 7) = 0u;
      *(_OWORD *)(v12 + 9) = 0u;
      v2 += 3;
      *((unsigned char *)v12 + 88) = 0;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  qword_10034C108 = (uint64_t)v3;
}

uint64_t sub_1002033A0(uint64_t a1, uint64_t a2)
{
  if (qword_100308DF8 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v17 = *(void *)(qword_10034C100 + 16);
  if (v17)
  {
    uint64_t v18 = qword_10034C100 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = (uint64_t *)(v18 + 24 * v4);
      uint64_t v6 = (void *)v5[2];
      uint64_t v7 = v6[2];
      if (v7)
      {
        uint64_t v8 = *v5;
        BOOL v9 = v6[4] == a1 && v6[5] == a2;
        if (v9 || (sub_10024FA60() & 1) != 0)
        {
LABEL_21:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          sub_1000F0030(a1, a2, v6);
          char v15 = v14;
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0) {
            return v8;
          }
          swift_bridgeObjectRelease();
          break;
        }
        if (v7 != 1)
        {
          uint64_t v10 = v6 + 7;
          uint64_t v11 = 1;
          while (1)
          {
            uint64_t v12 = v11 + 1;
            if (__OFADD__(v11, 1)) {
              break;
            }
            BOOL v13 = *(v10 - 1) == a1 && *v10 == a2;
            if (v13 || (sub_10024FA60() & 1) != 0) {
              goto LABEL_21;
            }
            v10 += 2;
            ++v11;
            if (v12 == v7) {
              goto LABEL_19;
            }
          }
          __break(1u);
          goto LABEL_27;
        }
      }
LABEL_19:
      if (++v4 == v17)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100203578(uint64_t a1, void *a2)
{
  v2._rawValue = &off_1002DA048;
  return sub_1001565E0(a1, a2, v2);
}

uint64_t sub_100203598(char a1)
{
  if (a1) {
    return 0x7865646E69;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1002035C4(char *a1, char *a2)
{
  return sub_1000F9C2C(*a1, *a2);
}

Swift::Int sub_1002035D0()
{
  return sub_1001D3C7C();
}

uint64_t sub_1002035D8()
{
  return sub_1000D12C4();
}

Swift::Int sub_1002035E0()
{
  return sub_1000D2F98();
}

uint64_t sub_1002035E8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1002DA048;
  uint64_t result = sub_1001565E0(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_100203620()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100203598(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100203648()
{
  return sub_100203598(*v0);
}

uint64_t sub_100203650@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100203578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100203678(uint64_t a1)
{
  unint64_t v2 = sub_100204740();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002036B4(uint64_t a1)
{
  unint64_t v2 = sub_100204740();
  return CodingKey.debugDescription.getter(a1, v2);
}

char *sub_1002036F0(void *a1)
{
  uint64_t v3 = sub_100019524(&qword_100319338);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_100204740();
  sub_10024FD20();
  if (v1) {
    goto LABEL_13;
  }
  char v22 = 0;
  uint64_t v8 = sub_10024F830();
  uint64_t v10 = v9;
  uint64_t v18 = v4;
  uint64_t v19 = v7;
  uint64_t v20 = v3;
  if (qword_100308DF8 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(qword_10034C100 + 16);
  if (!v11)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    type metadata accessor for OctaneError();
    sub_100081884();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
LABEL_13:
    sub_10001C2EC((uint64_t)a1);
    return v7;
  }
  uint64_t v12 = qword_10034C100 + 48;
  while (1)
  {
    uint64_t v7 = *(char **)(v12 - 16);
    if (v7 == (char *)v8 && *(void *)(v12 - 8) == v10) {
      break;
    }
    if (sub_10024FA60()) {
      goto LABEL_16;
    }
    v12 += 24;
    if (!--v11) {
      goto LABEL_12;
    }
  }
  uint64_t v7 = (char *)v8;
LABEL_16:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v21 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v15 = v19;
  uint64_t v16 = v20;
  sub_10024F850();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v16);
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100203A1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[1] = a5;
  uint64_t v7 = sub_100019524(&qword_100319360);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_100204740();
  sub_10024FD40();
  char v15 = 0;
  sub_10024F940();
  if (!v5)
  {
    char v14 = 1;
    sub_10024F960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

char *sub_100203B90@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_1002036F0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100203BC0(void *a1)
{
  return sub_100203A1C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100203BE0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1002DA098;
  v6._object = a2;
  unint64_t v4 = sub_10024F790(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_100203C30(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0x746E6572727563;
  }
  return 0x64656C62616E65;
}

uint64_t sub_100203C80(char *a1, char *a2)
{
  return sub_1000F9B40(*a1, *a2);
}

Swift::Int sub_100203C8C()
{
  return sub_1001D3C88();
}

uint64_t sub_100203C94()
{
  return sub_1000D1240();
}

Swift::Int sub_100203C9C()
{
  return sub_1000D2F10();
}

uint64_t sub_100203CA4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100203BE0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100203CD4()
{
  char v1 = sub_1000621E4();
  uint64_t result = sub_100203C30(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100203CFC()
{
  return sub_100203C30(*v0);
}

uint64_t sub_100203D04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100203C2C();
  *a1 = result;
  return result;
}

uint64_t sub_100203D2C(uint64_t a1)
{
  unint64_t v2 = sub_1002044EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100203D68(uint64_t a1)
{
  unint64_t v2 = sub_1002044EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100203DA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100019524(&qword_1003192E0);
  sub_10001B550();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C2A8(a1, a1[3]);
  sub_1002044EC();
  sub_10024FD20();
  if (v2) {
    goto LABEL_13;
  }
  LOBYTE(v42) = 0;
  uint64_t v12 = sub_10024F830();
  char v14 = v13;
  uint64_t v38 = a2;
  uint64_t v39 = v7;
  uint64_t v40 = v5;
  int v41 = v11;
  if (qword_100308E00 != -1) {
    swift_once();
  }
  uint64_t v15 = *((void *)off_1003192D8 + 2);
  if (!v15)
  {
LABEL_12:
    char v46 = 0;
    unint64_t v42 = 0;
    uint64_t v43 = 0xE000000000000000;
    sub_10024F330(19);
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD000000000000011;
    uint64_t v43 = 0x8000000100284900;
    v47._countAndFlagsBits = v12;
    v47._object = v14;
    sub_10024E800(v47);
    swift_bridgeObjectRelease();
    sub_10024F3D0();
    swift_allocError();
    sub_100204538();
    char v21 = v41;
    uint64_t v22 = v40;
    sub_10024F3A0();
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v22);
LABEL_13:
    sub_10001C2EC((uint64_t)a1);
    uint64_t v23 = sub_100205054();
    return sub_10008C7E4(v23, v24);
  }
  uint64_t v16 = (uint64_t *)((char *)off_1003192D8 + 48);
  while (1)
  {
    uint64_t v17 = *(v16 - 2);
    uint64_t v18 = (void *)*(v16 - 1);
    uint64_t v19 = *v16;
    if (v17 == v12 && v18 == v14) {
      break;
    }
    if (sub_10024FA60()) {
      goto LABEL_15;
    }
    v16 += 3;
    if (!--v15) {
      goto LABEL_12;
    }
  }
  uint64_t v17 = v12;
  uint64_t v18 = v14;
LABEL_15:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100019524(&qword_10030DD80);
  char v46 = 1;
  sub_10020478C(&qword_1003192F8, &qword_10030DD80, (void (*)(void))sub_10020458C);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = v40;
  sub_10024F870();
  uint64_t v27 = v42;
  uint64_t v28 = v45;
  LOBYTE(v42) = 2;
  uint64_t v36 = v43;
  uint64_t v37 = v27;
  uint64_t v35 = v44;
  sub_100094920(v27, v43);
  char v29 = sub_10024F840();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v26);
  LODWORD(v41) = v29 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = v36;
  uint64_t v30 = v37;
  uint64_t v32 = v35;
  sub_100094920(v37, v36);
  sub_100205068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001C2EC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_100205068();
  uint64_t v33 = v38;
  *uint64_t v38 = v17;
  v33[1] = (uint64_t)v18;
  _OWORD v33[2] = v19;
  v33[3] = v30;
  v33[4] = v31;
  v33[5] = v32;
  v33[6] = v28;
  *((unsigned char *)v33 + 56) = (_BYTE)v41;
  return result;
}

uint64_t sub_100204204(void *a1)
{
  uint64_t v2 = v1;
  sub_100019524(&qword_100319320);
  sub_10001B550();
  __chkstk_darwin(v4, v5);
  sub_1000869F4();
  sub_10001C2A8(a1, a1[3]);
  sub_1002044EC();
  sub_10024FD40();
  uint64_t v6 = *v2;
  v12[0] = 0;
  swift_bridgeObjectRetain();
  sub_10020509C();
  if (v6)
  {
    uint64_t v7 = sub_1000CD424();
    v8(v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100204624((uint64_t)(v2 + 3), (uint64_t)v13);
    sub_100204624((uint64_t)v13, (uint64_t)v12);
    sub_10020468C(v13);
    sub_100019524(&qword_10030DD80);
    sub_10020478C(&qword_100319328, &qword_10030DD80, (void (*)(void))sub_1002046C0);
    sub_10024F980();
    sub_10020470C(v13);
    v12[0] = 2;
    sub_10024F950();
    uint64_t v10 = sub_1000CD424();
    return v11(v10);
  }
}

uint64_t sub_1002043F0(uint64_t a1)
{
  switch(a1)
  {
    case 11:
      uint64_t result = 1;
      break;
    case 12:
      uint64_t result = 4;
      break;
    case 13:
      uint64_t result = 2;
      break;
    case 14:
      uint64_t result = 3;
      break;
    default:
      if (a1 == 1) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = 5;
      }
      break;
  }
  return result;
}

double sub_10020445C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100203DA4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1002044A8(void *a1)
{
  return sub_100204204(a1);
}

unint64_t sub_1002044EC()
{
  unint64_t result = qword_1003192E8;
  if (!qword_1003192E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003192E8);
  }
  return result;
}

unint64_t sub_100204538()
{
  unint64_t result = qword_1003192F0;
  if (!qword_1003192F0)
  {
    sub_10001B028(&qword_1003192E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003192F0);
  }
  return result;
}

unint64_t sub_10020458C()
{
  unint64_t result = qword_100319300;
  if (!qword_100319300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319300);
  }
  return result;
}

unint64_t sub_1002045D8()
{
  unint64_t result = qword_100319318;
  if (!qword_100319318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319318);
  }
  return result;
}

uint64_t sub_100204624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100019524(&qword_10030DD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10020468C(uint64_t *a1)
{
  return a1;
}

unint64_t sub_1002046C0()
{
  unint64_t result = qword_100319330;
  if (!qword_100319330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319330);
  }
  return result;
}

uint64_t *sub_10020470C(uint64_t *a1)
{
  return a1;
}

unint64_t sub_100204740()
{
  unint64_t result = qword_100319340;
  if (!qword_100319340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319340);
  }
  return result;
}

uint64_t sub_10020478C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B028(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002047F8()
{
  unint64_t result = qword_100319358;
  if (!qword_100319358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100319358);
  }
  return result;
}

uint64_t sub_100204844(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100094920(v2, v3);
  return a1;
}