uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t String.utf8Data.getter()
{
  uint64_t v0 = sub_24E116270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E116240();
  uint64_t v4 = sub_24E116200();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 != 15) {
    return v4;
  }
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_24E116C70();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD00000000000001ALL;
  unint64_t v9 = 0x800000024E117FB0;
  sub_24E116370();
  sub_24E116370();
  uint64_t result = sub_24E116EC0();
  __break(1u);
  return result;
}

uint64_t String.replaceCharactersFromSet(characterSet:replacementString:)()
{
  sub_24E085334();
  sub_24E116AD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
  sub_24E085388();
  uint64_t v0 = sub_24E116140();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_24E085334()
{
  unint64_t result = qword_26B1AE848;
  if (!qword_26B1AE848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE848);
  }
  return result;
}

unint64_t sub_24E085388()
{
  unint64_t result = qword_26B1AE7E8;
  if (!qword_26B1AE7E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1AE990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE7E8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

Swift::String __swiftcall String.deletingPrefix(_:)(Swift::String a1)
{
  unint64_t v3 = v2;
  uint64_t v4 = v1;
  char v5 = sub_24E116410();
  swift_bridgeObjectRetain();
  if (v5)
  {
    unint64_t v6 = sub_24E116330();
    unint64_t v7 = sub_24E086544(v6, v4, v3);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x253331F40](v7, v9, v11, v13);
    unint64_t v3 = v14;
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v4;
  v16 = (void *)v3;
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

Swift::String __swiftcall String.randomString(length:)(Swift::Int length)
{
  Swift::Int v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  if ((length & 0x8000000000000000) == 0)
  {
    Swift::Int v1 = length;
    if (!length)
    {
      length = 0;
      unint64_t v3 = (void *)0xE000000000000000;
      goto LABEL_19;
    }
    uint64_t v2 = 0;
    while (v2 != v1)
    {
      length = sub_24E116330();
      if (length < 0) {
        goto LABEL_16;
      }
      unint64_t v4 = length;
      if (!length) {
        goto LABEL_17;
      }
      uint64_t v7 = 0;
      MEMORY[0x2533338D0](&v7, 8);
      if (v4 > v7 * v4)
      {
        unint64_t v5 = -(uint64_t)v4 % v4;
        while (v5 > v7 * v4)
        {
          uint64_t v7 = 0;
          MEMORY[0x2533338D0](&v7, 8);
        }
      }
      ++v2;
      sub_24E116360();
      sub_24E116440();
      sub_24E116370();
      length = swift_bridgeObjectRelease();
      if (v2 == v1)
      {
        length = v8;
        unint64_t v3 = (void *)v9;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result._object = v3;
  result._countAndFlagsBits = length;
  return result;
}

uint64_t PartialMatchCase<>.init(containingRawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int (*a4)(char *, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  v32 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = sub_24E116A90();
  uint64_t v8 = *(void *)(v31 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v30 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v29 - v11;
  v29[1] = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  v20 = (char *)v29 - v19;
  MEMORY[0x270FA5388](v18);
  v22 = (char *)v29 - v21;
  uint64_t v33 = a1;
  static PartialMatchCase<>.first(containing:)(a1, a2, a3, (uint64_t)v32);
  uint64_t v23 = *(void *)(a2 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v32(v12, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v31);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v33, AssociatedTypeWitness);
  }
  else
  {
    v29[0] = v8;
    sub_24E1164E0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, a2);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v20, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v22, AssociatedTypeWitness);
    v24 = v30;
    sub_24E1164F0();
    v25 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v25(v33, AssociatedTypeWitness);
    v25((uint64_t)v22, AssociatedTypeWitness);
    if (!v32(v24, 1, a2))
    {
      uint64_t v27 = v34;
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v34, v24, a2);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v27, v26, 1, a2);
    }
    (*(void (**)(char *, uint64_t))(v29[0] + 8))(v24, v31);
  }
  uint64_t v26 = 1;
  uint64_t v27 = v34;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v27, v26, 1, a2);
}

uint64_t static PartialMatchCase<>.first(containing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = &v13[-v10];
  sub_24E116CA0();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v17 = a1;
  swift_getAssociatedConformanceWitness();
  sub_24E1164B0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_24E085B2C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388]();
  unint64_t v3 = (char *)&v6 - v2;
  sub_24E1164E0();
  char v4 = sub_24E116AE0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4 & 1;
}

uint64_t sub_24E085C60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

BOOL sub_24E085CB8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_24E085CE8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24E085CF4(uint64_t a1, uint64_t a2)
{
  return sub_24E085E74(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24E085D18(uint64_t a1, uint64_t a2)
{
  return sub_24E085E74(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24E085D38(uint64_t a1, id *a2)
{
  uint64_t result = sub_24E1161D0();
  *a2 = 0;
  return result;
}

uint64_t sub_24E085DB0(uint64_t a1, id *a2)
{
  char v3 = sub_24E1161E0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24E085E30@<X0>(uint64_t *a1@<X8>)
{
  sub_24E1161F0();
  uint64_t v2 = sub_24E1161C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24E085E74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24E1161F0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24E085EB8()
{
  sub_24E1161F0();
  sub_24E116320();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E085F0C()
{
  sub_24E1161F0();
  sub_24E1171C0();
  sub_24E116320();
  uint64_t v0 = sub_24E1171F0();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_24E085F80(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_24E085F88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_24E085F9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_24E085FB0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_24E085FC4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_24E085FF0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_24E086014(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_24E086028(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_24E08603C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_24E086050@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24E086064(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24E086078(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_24E08608C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_24E0860A0()
{
  return *v0 == 0;
}

uint64_t sub_24E0860B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_24E0860C8(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_24E0860DC()
{
  return sub_24E115EC0();
}

uint64_t sub_24E086128()
{
  return sub_24E115EB0();
}

uint64_t sub_24E086180()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0861EC()
{
  uint64_t v0 = sub_24E1161F0();
  uint64_t v2 = v1;
  if (v0 == sub_24E1161F0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24E1170B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_24E086278(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24E08628C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_24E0869B8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_24E0862CC()
{
  swift_getWitnessTable();
  return sub_24E115EA0();
}

uint64_t sub_24E08633C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E1161F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24E086368(uint64_t a1)
{
  uint64_t v2 = sub_24E086778(&qword_2698B7B58, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_24E086778((unint64_t *)&unk_2698B7B60, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24E086424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24E1161C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24E08646C(uint64_t a1)
{
  uint64_t v2 = sub_24E086778(&qword_2698B7BA0, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_24E086778(&qword_2698B7BA8, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

void *sub_24E086528@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24E086538(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_24E086544(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_24E116350();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_24E116460();
}

uint64_t sub_24E0865F4()
{
  return sub_24E085B2C() & 1;
}

void type metadata accessor for Options(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_24E08663C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24E08665C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_24E0866E8()
{
  return sub_24E086778(&qword_2698B7B20, type metadata accessor for URLResourceKey);
}

uint64_t sub_24E086730()
{
  return sub_24E086778(&qword_2698B7B28, type metadata accessor for URLResourceKey);
}

uint64_t sub_24E086778(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0867C0()
{
  return sub_24E086778(&qword_2698B7B30, type metadata accessor for URLResourceKey);
}

uint64_t sub_24E086808()
{
  return sub_24E086778((unint64_t *)&unk_26B1AEA98, type metadata accessor for CFString);
}

uint64_t sub_24E086850()
{
  return sub_24E086778(&qword_26B1AEA90, type metadata accessor for CFString);
}

uint64_t sub_24E086898()
{
  return sub_24E086778(&qword_2698B7B38, type metadata accessor for Options);
}

uint64_t sub_24E0868E0()
{
  return sub_24E086778(&qword_2698B7B40, type metadata accessor for Options);
}

uint64_t sub_24E086928()
{
  return sub_24E086778(&qword_2698B7B48, type metadata accessor for Options);
}

uint64_t sub_24E086970()
{
  return sub_24E086778(&qword_2698B7B50, type metadata accessor for Options);
}

uint64_t sub_24E0869B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for CFDictionary(uint64_t a1)
{
}

void type metadata accessor for CFNotificationName(uint64_t a1)
{
}

void type metadata accessor for CFNotificationCenter(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void sub_24E086A40(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24E086A88()
{
  return sub_24E086778(&qword_2698B7B88, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24E086AD0()
{
  return sub_24E086778(&qword_2698B7B90, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24E086B18()
{
  return sub_24E086778(&qword_2698B7B98, type metadata accessor for FileAttributeKey);
}

void static Endianness.current.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Endianness.description.getter()
{
  uint64_t v1 = 0x656C7474696C2ELL;
  if (*v0 != 1) {
    uint64_t v1 = 1734959662;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E752ELL;
  }
}

BOOL static Endianness.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Endianness.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t Endianness.hashValue.getter()
{
  return sub_24E1171F0();
}

BOOL sub_24E086C5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24E086C70()
{
  return sub_24E1171F0();
}

uint64_t sub_24E086CB8()
{
  return sub_24E1171D0();
}

uint64_t sub_24E086CE4()
{
  return sub_24E1171F0();
}

unint64_t sub_24E086D2C()
{
  unint64_t result = qword_2698B7C70;
  if (!qword_2698B7C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7C70);
  }
  return result;
}

uint64_t sub_24E086D80()
{
  uint64_t v1 = 0x656C7474696C2ELL;
  if (*v0 != 1) {
    uint64_t v1 = 1734959662;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E752ELL;
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Endianness(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Endianness(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E086F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24E086F64(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24E086F70(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Endianness()
{
  return &type metadata for Endianness;
}

uint64_t XPCClient.proxy(errorHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  int v8 = (void *)swift_task_alloc();
  v5[5] = v8;
  *int v8 = v5;
  v8[1] = sub_24E087084;
  return v10(a4, a5);
}

uint64_t sub_24E087084(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E087184, 0, 0);
}

void sub_24E087184()
{
  if (v0[6])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[7] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_24E087228;
    uint64_t v2 = v0[3];
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[2];
    sub_24E0F3F6C(v4, v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24E087228()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E087364, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E087364()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static XPCAcceptedClient.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for FM.XPCSession();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v6(a3, a4);
  v6(a3, a4);
  char v7 = static FM.XPCSession.== infix(_:_:)();
  swift_release();
  swift_release();
  return v7 & 1;
}

uint64_t XPCAcceptedClient.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  FM.XPCSession.hash(into:)();
  return swift_release();
}

uint64_t XPCAcceptedClient.proxy(errorHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_24E08751C, 0, 0);
}

uint64_t sub_24E08751C()
{
  v0[8] = (*(uint64_t (**)(void))(v0[6] + 24))(v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0875D8;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_24E0F3F6C(v4, v2, v3);
}

uint64_t sub_24E0875D8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E087714, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E087714()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL static XPCClientError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCClientError.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t XPCClientError.hashValue.getter()
{
  return sub_24E1171F0();
}

BOOL sub_24E087804(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_24E087830()
{
  unint64_t result = qword_2698B7C88;
  if (!qword_2698B7C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7C88);
  }
  return result;
}

uint64_t dispatch thunk of XPCClient.session.getter(uint64_t a1, uint64_t a2)
{
  char v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E087974;
  return v7(a1, a2);
}

uint64_t sub_24E087974(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of XPCAcceptedClient.session.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of XPCAcceptedClient.init(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_24E087B88;
  return v9(a1, a2, a3);
}

uint64_t sub_24E087B88(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t getEnumTagSinglePayload for XPCClientError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCClientError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E087DE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24E087E08(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for XPCClientError()
{
  return &type metadata for XPCClientError;
}

uint64_t DataProtocol.bytes.getter(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_24E116620();
}

uint64_t DataProtocol.hexString.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_24E08CFDC(0xD000000000000010, 0x800000024E117FD0);
  uint64_t result = sub_24E116900();
  if (result + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = sub_24E08B1C8(0, (2 * result) & ~((2 * result) >> 63), 0, MEMORY[0x263F8EE78]);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
    sub_24E116470();
    swift_getAssociatedConformanceWitness();
    uint64_t result = sub_24E116AA0();
    if (v23)
    {
LABEL_3:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, AssociatedTypeWitness);
      swift_release();
      uint64_t v12 = sub_24E1161B0();
      swift_bridgeObjectRelease();
      return v12;
    }
    unint64_t v13 = v22;
    uint64_t v14 = v9 + 4;
    while (v13 >> 4 < v9[2])
    {
      __int16 v15 = *((_WORD *)v14 + (v13 >> 4));
      unint64_t v17 = *((void *)v11 + 2);
      unint64_t v16 = *((void *)v11 + 3);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (uint64_t)sub_24E08B1C8((char *)(v16 > 1), v17 + 1, 1, v11);
        uint64_t v11 = (char *)result;
      }
      *((void *)v11 + 2) = v18;
      *(_WORD *)&v11[2 * v17 + 32] = v15;
      if ((v13 & 0xF) >= v9[2]) {
        goto LABEL_14;
      }
      __int16 v19 = *((_WORD *)v14 + (v13 & 0xF));
      unint64_t v20 = *((void *)v11 + 3);
      if ((uint64_t)(v17 + 2) > (uint64_t)(v20 >> 1)) {
        uint64_t v11 = sub_24E08B1C8((char *)(v20 > 1), v17 + 2, 1, v11);
      }
      *((void *)v11 + 2) = v17 + 2;
      *(_WORD *)&v11[2 * v18 + 32] = v19;
      uint64_t result = sub_24E116AA0();
      unint64_t v13 = v22;
      if (v23 == 1) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DataProtocol.nullTerminated.getter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v27 = (char *)&v22 - v2;
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_24E116E40();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E116A90();
  uint64_t v23 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v22 - v16;
  char v31 = 0;
  uint64_t v18 = v30;
  sub_24E116940();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v18, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v3) == 1)
  {
    sub_24E116910();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a1);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a1);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v3);
  }
  uint64_t result = sub_24E116190();
  if (result)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v17, v3);
    uint64_t v20 = v26;
    swift_getWitnessTable();
    sub_24E116930();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v20);
    swift_getAssociatedConformanceWitness();
    uint64_t v21 = sub_24E115C90();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v3);
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24E0886E8(uint64_t a1, unint64_t a2)
{
  v28[5] = *MEMORY[0x263EF8340];
  v28[3] = MEMORY[0x263F06F78];
  v28[4] = MEMORY[0x263F06F68];
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v28, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_24E08D248(a1, a2);
      sub_24E08D248(v5, v6);
      uint64_t v8 = (unsigned char *)sub_24E115980();
      if (v8)
      {
        uint64_t v9 = sub_24E1159B0();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_24E1159A0();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      sub_24E08C5B4(v8, v13, &v27);
      sub_24E08D0B0(v5, v6);
LABEL_27:
      sub_24E08D0B0(a1, a2);
      uint64_t v24 = v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_24E08D248(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = (unsigned char *)sub_24E115980();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_24E1159B0();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_24E1159A0();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      uint64_t v22 = &v16[v21];
      if (v16) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 0;
      }
      sub_24E08C5B4(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_24E08D248(a1, a2);
      uint64_t v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_24E08D248(a1, a2);
      uint64_t v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_24E08C5B4(v26, v7, &v27);
      goto LABEL_27;
  }
}

uint64_t sub_24E08899C(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_24E0AF128(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_24E08DEA8((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_24E08DF24((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_24E088A58(uint64_t a1, unint64_t a2)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v53 = a1;
  unint64_t v54 = a2;
  *(void *)&long long v48 = a1;
  *((void *)&v48 + 1) = a2;
  sub_24E08D248(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7CF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7CF8);
  if (swift_dynamicCast())
  {
    sub_24E08F05C(v46, (uint64_t)&v49);
    __swift_project_boxed_opaque_existential_1(&v49, v52);
    sub_24E115A90();
    sub_24E08D0B0(v53, v54);
    v46[0] = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_24E08EFA4((uint64_t)v46);
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    switch(v54 >> 62)
    {
      case 1uLL:
        uint64_t v3 = v53 >> 32;
        uint64_t v2 = (int)v53;
        break;
      case 2uLL:
        uint64_t v2 = *(void *)(v53 + 16);
        uint64_t v3 = *(void *)(v53 + 24);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v2 = 0;
        uint64_t v3 = BYTE6(v54);
        break;
    }
    uint64_t v4 = sub_24E08D638(v2, v3, v53, v54);
    *(void *)&v46[0] = sub_24E08DE08(v4);
    *((void *)&v46[0] + 1) = v5;
    MEMORY[0x270FA5388](*(void *)&v46[0]);
    sub_24E08C368(sub_24E08F004);
    uint64_t v6 = v49;
    unint64_t v40 = v50;
    uint64_t v8 = v51;
    uint64_t v7 = v52;
    BYTE6(v9) = BYTE14(v46[0]);
    uint64_t v10 = *((void *)&v46[0] + 1) >> 62;
    switch(*((void *)&v46[0] + 1) >> 62)
    {
      case 1:
        LODWORD(v11) = DWORD1(v46[0]) - LODWORD(v46[0]);
        if (__OFSUB__(DWORD1(v46[0]), v46[0])) {
          goto LABEL_62;
        }
        uint64_t v11 = (int)v11;
LABEL_12:
        if (v52 == v11)
        {
LABEL_18:
          unsigned __int8 v16 = 0;
          unint64_t v17 = v50 >> 62;
          uint64_t v39 = (uint64_t)v49 >> 32;
          v41 = &v45;
          *(void *)((char *)&v48 + 7) = 0;
          *(void *)&long long v48 = 0;
          unint64_t v38 = v49 >> 8;
          unint64_t v37 = v49 >> 16;
          unint64_t v36 = v49 >> 24;
          unint64_t v35 = HIDWORD(v49);
          unint64_t v34 = v49 >> 40;
          unint64_t v33 = HIWORD(v49);
          unint64_t v32 = HIBYTE(v49);
          unint64_t v31 = v50 >> 8;
          unint64_t v30 = v50 >> 16;
          unint64_t v29 = v50 >> 24;
          unint64_t v9 = (unint64_t)&v53;
          unint64_t v28 = HIDWORD(v50);
          unint64_t v27 = v50 >> 40;
          uint64_t v26 = v51;
          unint64_t v18 = v50 >> 62;
          while (1)
          {
            uint64_t v19 = (int)v6;
            switch(v18)
            {
              case 1uLL:
                goto LABEL_25;
              case 2uLL:
                uint64_t v19 = *(void *)(v6 + 16);
LABEL_25:
                if (v8 == v19) {
                  goto LABEL_50;
                }
                BOOL v14 = __OFSUB__(v8--, 1);
                if (v14) {
                  goto LABEL_53;
                }
                if (v17 == 2)
                {
                  if (v8 < *(void *)(v6 + 16)) {
                    goto LABEL_56;
                  }
                  if (v8 >= *(void *)(v6 + 24)) {
                    goto LABEL_58;
                  }
                  uint64_t v21 = sub_24E115980();
                  if (!v21) {
                    goto LABEL_64;
                  }
                  uint64_t v22 = v21;
                  uint64_t v7 = sub_24E1159B0();
                  uint64_t v23 = v8 - v7;
                  if (__OFSUB__(v8, v7)) {
                    goto LABEL_60;
                  }
                }
                else
                {
                  if (v8 < (int)v6 || v8 >= v39) {
                    goto LABEL_57;
                  }
                  uint64_t v24 = sub_24E115980();
                  if (!v24) {
                    goto LABEL_65;
                  }
                  uint64_t v22 = v24;
                  uint64_t v7 = sub_24E1159B0();
                  uint64_t v23 = v8 - v7;
                  if (__OFSUB__(v8, v7)) {
                    goto LABEL_59;
                  }
                }
                char v20 = *(unsigned char *)(v22 + v23);
                goto LABEL_39;
              case 3uLL:
                if (!v26) {
                  goto LABEL_48;
                }
                __break(1u);
                goto LABEL_44;
              default:
                if (!v8)
                {
LABEL_50:
                  if (v16)
                  {
                    uint64_t v42 = v48;
                    int v43 = DWORD2(v48);
                    __int16 v44 = WORD6(v48);
                    sub_24E115BC0();
                  }
                  goto LABEL_48;
                }
                BOOL v14 = __OFSUB__(v8--, 1);
                if (v14) {
                  goto LABEL_54;
                }
                if (v8 >= BYTE6(v40)) {
                  goto LABEL_55;
                }
                LOBYTE(v42) = v6;
                BYTE1(v42) = v38;
                BYTE2(v42) = v37;
                BYTE3(v42) = v36;
                BYTE4(v42) = v35;
                BYTE5(v42) = v34;
                BYTE6(v42) = v33;
                HIBYTE(v42) = v32;
                LOBYTE(v43) = v40;
                BYTE1(v43) = v31;
                BYTE2(v43) = v30;
                HIBYTE(v43) = v29;
                LOBYTE(v44) = v28;
                HIBYTE(v44) = v27;
                char v20 = *((unsigned char *)&v42 + v8);
LABEL_39:
                unint64_t v9 = v16;
                *((unsigned char *)&v48 + v16++) = v20;
                if (((v9 + 1) >> 8))
                {
                  __break(1u);
LABEL_53:
                  __break(1u);
LABEL_54:
                  __break(1u);
LABEL_55:
                  __break(1u);
LABEL_56:
                  __break(1u);
LABEL_57:
                  __break(1u);
LABEL_58:
                  __break(1u);
LABEL_59:
                  __break(1u);
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
LABEL_64:
                  __break(1u);
LABEL_65:
                  __break(1u);
                }
                if (v16 == 14)
                {
                  uint64_t v42 = v48;
                  int v43 = DWORD2(v48);
                  __int16 v44 = WORD6(v48);
                  uint64_t v7 = sub_24E115BC0();
                  unsigned __int8 v16 = 0;
                }
                break;
            }
          }
        }
        if (v10)
        {
          if (v10 == 1) {
            uint64_t v15 = *(uint64_t *)&v46[0] >> 32;
          }
          else {
            uint64_t v15 = *(void *)(*(void *)&v46[0] + 24);
          }
        }
        else
        {
LABEL_44:
          uint64_t v15 = BYTE6(v9);
        }
LABEL_46:
        if (v15 < v7) {
          goto LABEL_61;
        }
        sub_24E115BB0();
LABEL_48:
        sub_24E08D0B0(v6, v40);
        sub_24E08D0B0(v53, v54);
        break;
      case 2:
        uint64_t v13 = *(void *)(*(void *)&v46[0] + 16);
        uint64_t v12 = *(void *)(*(void *)&v46[0] + 24);
        BOOL v14 = __OFSUB__(v12, v13);
        uint64_t v11 = v12 - v13;
        if (!v14) {
          goto LABEL_12;
        }
        goto LABEL_63;
      case 3:
        if (!v52) {
          goto LABEL_18;
        }
        uint64_t v15 = 0;
        goto LABEL_46;
      default:
        uint64_t v11 = BYTE14(v46[0]);
        goto LABEL_12;
    }
  }
  return *(void *)&v46[0];
}

uint64_t sub_24E089078(uint64_t a1, uint64_t a2)
{
  v7[3] = MEMORY[0x263F8DA40];
  v7[4] = MEMORY[0x263F07D80];
  v7[0] = a1;
  v7[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v7, MEMORY[0x263F8DA40]);
  uint64_t v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = (unsigned char *)v2[1];
    uint64_t v5 = (uint64_t)&v4[-v3];
    if (v4 == (unsigned char *)v3)
    {
      uint64_t v3 = 0;
    }
    else if (v5 <= 14)
    {
      uint64_t v3 = sub_24E0AF128((unsigned char *)*v2, v4);
    }
    else
    {
      sub_24E1159C0();
      swift_allocObject();
      sub_24E115970();
      if ((unint64_t)v5 >= 0x7FFFFFFF)
      {
        sub_24E115BA0();
        uint64_t v3 = swift_allocObject();
        *(void *)(v3 + 16) = 0;
        *(void *)(v3 + 24) = v5;
      }
      else
      {
        uint64_t v3 = v5 << 32;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v3;
}

uint64_t DataProtocol.nullTerminatedUTF8String.getter(uint64_t a1)
{
  uint64_t v2 = sub_24E116270();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = DataProtocol.nullTerminated.getter(a1);
  uint64_t v5 = sub_24E0886E8(v3, v4);
  unint64_t v7 = v6;
  sub_24E116240();
  uint64_t v8 = sub_24E116210();
  sub_24E08D0B0(v5, v7);
  return v8;
}

uint64_t DataProtocol.isNull.getter()
{
  return sub_24E116490() & 1;
}

BOOL sub_24E089298(unsigned char *a1)
{
  return *a1 == 0;
}

uint64_t DataProtocol.hash(algorithm:)()
{
  uint64_t v0 = sub_24E115FD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E116020();
  sub_24E08D108(&qword_26B1AE858, MEMORY[0x263F047F8]);
  sub_24E115FB0();
  uint64_t v9 = v0;
  uint64_t v10 = sub_24E08D108(&qword_26B1AE850, MEMORY[0x263F045C0]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_1, v3, v0);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  sub_24E115A90();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = v7[1];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t DataProtocol.hmac(key:algorithm:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[0] = a5;
  uint64_t v7 = sub_24E115FF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7CA0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  BOOL v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  unint64_t v19 = a2;
  sub_24E08D248(a1, a2);
  sub_24E115FE0();
  sub_24E116020();
  sub_24E08D108(&qword_26B1AE858, MEMORY[0x263F047F8]);
  sub_24E116010();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_24E116000();
  uint64_t v15 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t DataProtocol.stableUUID.getter()
{
  uint64_t v0 = DataProtocol.hash(algorithm:)();
  unint64_t v2 = v1;
  unint64_t v4 = v1;
  sub_24E08D248(v0, v1);
  sub_24E115CA0();
  sub_24E08D0B0(v0, v2);
  sub_24E115BE0();
  sub_24E115CA0();
  sub_24E115BE0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115DD0();
  return sub_24E08D0B0(v0, v4);
}

uint64_t DataProtocol.intValue.getter(uint64_t a1)
{
  uint64_t result = DataProtocol.hexString.getter(a1);
  uint64_t v3 = v2;
  uint64_t v4 = HIBYTE(v2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (uint64_t)sub_24E08C734(result, v3, 16);
    char v10 = v23;
    goto LABEL_48;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)sub_24E116D10();
    }
    uint64_t v8 = (uint64_t)sub_24E08C81C(v7, v5, 16);
    char v10 = v9 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return v8;
    }
    return 0;
  }
  v24[0] = result;
  v24[1] = v3 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v4)
    {
      uint64_t v16 = v4 - 1;
      if (v16)
      {
        uint64_t v8 = 0;
        unint64_t v17 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          int v18 = *v17;
          unsigned __int8 v19 = v18 - 48;
          if ((v18 - 48) >= 0xA)
          {
            if ((v18 - 65) < 6)
            {
              unsigned __int8 v19 = v18 - 55;
            }
            else
            {
              if ((v18 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v19 = v18 - 87;
            }
          }
          if ((unint64_t)(v8 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFADD__(16 * v8, v19);
          uint64_t v8 = 16 * v8 + v19;
          if (v15) {
            break;
          }
          ++v17;
          if (!--v16)
          {
LABEL_46:
            char v10 = 0;
            goto LABEL_48;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v4)
      {
        uint64_t v8 = 0;
        char v20 = (unsigned __int8 *)v24;
        while (1)
        {
          int v21 = *v20;
          unsigned __int8 v22 = v21 - 48;
          if ((v21 - 48) >= 0xA)
          {
            if ((v21 - 65) < 6)
            {
              unsigned __int8 v22 = v21 - 55;
            }
            else
            {
              if ((v21 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v22 = v21 - 87;
            }
          }
          if ((unint64_t)(v8 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFADD__(16 * v8, v22);
          uint64_t v8 = 16 * v8 + v22;
          if (v15) {
            break;
          }
          ++v20;
          if (!--v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_47;
    }
    if (v4)
    {
      uint64_t v11 = v4 - 1;
      if (v11)
      {
        uint64_t v8 = 0;
        uint64_t v12 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          int v13 = *v12;
          unsigned __int8 v14 = v13 - 48;
          if ((v13 - 48) >= 0xA)
          {
            if ((v13 - 65) < 6)
            {
              unsigned __int8 v14 = v13 - 55;
            }
            else
            {
              if ((v13 - 97) > 5) {
                break;
              }
              unsigned __int8 v14 = v13 - 87;
            }
          }
          if ((unint64_t)(v8 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFSUB__(16 * v8, v14);
          uint64_t v8 = 16 * v8 - v14;
          if (v15) {
            break;
          }
          ++v12;
          if (!--v11) {
            goto LABEL_46;
          }
        }
      }
LABEL_47:
      uint64_t v8 = 0;
      char v10 = 1;
      goto LABEL_48;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL static Data.DataError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Data.DataError.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t Data.DataError.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t sub_24E089C10()
{
  if (sub_24E116330())
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v0 = sub_24E1162C0();
  uint64_t v2 = sub_24E08BBC0(v0, v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_24E116330();
  if (v3 >= 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v3 + 1;
  }
  uint64_t v5 = sub_24E08A0B0(0, v4 >> 1);
  uint64_t result = sub_24E116330();
  if (result <= 0)
  {
LABEL_31:
    swift_release();
    uint64_t v19 = sub_24E08DFA8(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  uint64_t v7 = result;
  unint64_t v8 = 0;
  uint64_t v9 = v2 + 32;
  while (1)
  {
    uint64_t v10 = __OFADD__(v8, 2) ? 0x7FFFFFFFFFFFFFFFLL : v8 + 2;
    if ((v8 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v11 = *(void *)(v2 + 16);
    if (v8 >= v11) {
      goto LABEL_36;
    }
    if (v8 + 1 >= v11) {
      goto LABEL_37;
    }
    unsigned int v12 = *(unsigned __int8 *)(v9 + v8);
    unsigned int v13 = *(unsigned __int8 *)(v9 + v8 + 1);
    if (!isxdigit(v12) || (uint64_t result = isxdigit(v13), !result))
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_33;
    }
    if (v12 >= 0x41) {
      int v14 = 55;
    }
    else {
      int v14 = 48;
    }
    unsigned int v15 = v12 - v14;
    if ((v15 & 0xFFFFFF00) != 0) {
      goto LABEL_38;
    }
    if (v13 >= 0x41) {
      int v16 = 55;
    }
    else {
      int v16 = 48;
    }
    unsigned int v17 = v13 - v16;
    if ((v17 & 0xFFFFFF00) != 0) {
      goto LABEL_39;
    }
    if (v15 > 0xFu) {
      goto LABEL_40;
    }
    char v18 = 16 * (v15 & 0xF) + v17;
    if (((16 * (v15 & 0xF) + v17) & 0x100) != 0) {
      goto LABEL_41;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24E08CF84(v5);
      uint64_t v5 = result;
    }
    if (v8 >> 1 >= *(void *)(v5 + 16)) {
      goto LABEL_42;
    }
    *(unsigned char *)(v5 + (v8 >> 1) + 32) = v18;
    unint64_t v8 = v10;
    if (v10 >= v7) {
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t Data.init<A>(hexString:)(uint64_t a1, uint64_t a2)
{
  if (sub_24E116900())
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    return 0;
  }
  uint64_t v4 = sub_24E116AF0();
  uint64_t v6 = sub_24E08BBC0(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_24E116900();
  if (v7 >= 0) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v7 + 1;
  }
  uint64_t v9 = sub_24E08A0B0(0, v8 >> 1);
  uint64_t v24 = a2;
  uint64_t result = sub_24E116900();
  if (result < 1)
  {
LABEL_31:
    swift_release();
    uint64_t v23 = sub_24E08DFA8(v9);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)(v24 - 8) + 8))(a1);
    return v23;
  }
  uint64_t v11 = result;
  unint64_t v12 = 0;
  uint64_t v13 = v6 + 32;
  while (1)
  {
    uint64_t v14 = __OFADD__(v12, 2) ? 0x7FFFFFFFFFFFFFFFLL : v12 + 2;
    if ((v12 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v15 = *(void *)(v6 + 16);
    if (v12 >= v15) {
      goto LABEL_36;
    }
    if (v12 + 1 >= v15) {
      goto LABEL_37;
    }
    unsigned int v16 = *(unsigned __int8 *)(v13 + v12);
    unsigned int v17 = *(unsigned __int8 *)(v13 + v12 + 1);
    if (!isxdigit(v16) || (uint64_t result = isxdigit(v17), !result))
    {
      swift_release();
      (*(void (**)(uint64_t))(*(void *)(v24 - 8) + 8))(a1);
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v16 >= 0x41) {
      int v18 = 55;
    }
    else {
      int v18 = 48;
    }
    unsigned int v19 = v16 - v18;
    if ((v19 & 0xFFFFFF00) != 0) {
      goto LABEL_38;
    }
    if (v17 >= 0x41) {
      int v20 = 55;
    }
    else {
      int v20 = 48;
    }
    unsigned int v21 = v17 - v20;
    if ((v21 & 0xFFFFFF00) != 0) {
      goto LABEL_39;
    }
    if (v19 > 0xFu) {
      goto LABEL_40;
    }
    char v22 = 16 * (v19 & 0xF) + v21;
    if (((16 * (v19 & 0xF) + v21) & 0x100) != 0) {
      goto LABEL_41;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24E08CF84(v9);
      uint64_t v9 = result;
    }
    if (v12 >> 1 >= *(void *)(v9 + 16)) {
      goto LABEL_42;
    }
    *(unsigned char *)(v9 + (v12 >> 1) + 32) = v22;
    unint64_t v12 = v14;
    if (v14 >= v11) {
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24E08A0B0(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24E116EB0();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_24E1165B0();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_24E08A16C(char a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24E116EB0();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    int v3 = a1 & 1;
    uint64_t v4 = sub_24E1165B0();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), v3, a2);
    return v4;
  }
  return result;
}

uint64_t Data.chunked(into:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  int64_t v6 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_9;
      }
      int64_t v6 = HIDWORD(a2) - (int)a2;
LABEL_6:
      if (!a1)
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x24E08A304);
      }
      sub_24E08D248(a2, a3);
      uint64_t v9 = sub_24E08E250(0, v6, a1, a2, a3, a1);
      sub_24E08D0B0(a2, a3);
      return v9;
    case 2uLL:
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      int64_t v6 = v7 - v8;
      if (!__OFSUB__(v7, v8)) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      int64_t v6 = BYTE6(a3);
      goto LABEL_6;
  }
}

uint64_t Data.subObject<A>(range:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v24 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      uint64_t v14 = (int)a4;
      uint64_t v15 = a4 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v14 = *(void *)(a4 + 16);
      uint64_t v15 = *(void *)(a4 + 24);
LABEL_5:
      if (v15 >= v14) {
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_21;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v14 = 0;
      uint64_t v15 = BYTE6(a5);
LABEL_6:
      if (a3)
      {
        a2 = v15;
        uint64_t v16 = v14;
      }
      else
      {
        uint64_t v16 = a1;
      }
      if (__OFSUB__(a2, v16))
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (*(void *)(*(void *)(a6 - 8) + 64) != a2 - v16)
      {
        char v17 = 0;
        goto LABEL_18;
      }
      char v17 = 1;
      if (v16 < v14 || v16 >= v15) {
        goto LABEL_18;
      }
      uint64_t v18 = a2 - 1;
      if (__OFSUB__(a2, 1))
      {
LABEL_22:
        __break(1u);
        JUMPOUT(0x24E08A5ACLL);
      }
      if (v18 >= v14 && v18 < v15)
      {
        swift_getAssociatedConformanceWitness();
        sub_24E117100();
        uint64_t v19 = v24;
        uint64_t v20 = sub_24E117090();
        MEMORY[0x270FA5388](v20);
        *(&v24 - 4) = a4;
        *(&v24 - 3) = a5;
        *(&v24 - 2) = v16;
        *(&v24 - 1) = a2;
        return sub_24E08A680(v19, (uint64_t)sub_24E08E630, (uint64_t)(&v24 - 6), a6, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v21);
      }
LABEL_18:
      sub_24E08E5DC();
      swift_allocError();
      *uint64_t v23 = v17;
      return swift_willThrow();
  }
}

uint64_t sub_24E08A5BC@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D08);
  sub_24E08F0E4();
  sub_24E08F138(&qword_2698B7D18, &qword_2698B7D08);
  uint64_t result = sub_24E115910();
  *a1 = result;
  return result;
}

uint64_t sub_24E08A680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t Data.write(to:excludeFromBackup:options:)(uint64_t a1, int a2)
{
  v15[1] = a2;
  uint64_t v3 = sub_24E115B60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  uint64_t v18 = v4;
  MEMORY[0x270FA5388](v3);
  int64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E115AD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  uint64_t v11 = v19;
  uint64_t result = sub_24E115C30();
  if (!v11)
  {
    sub_24E115AC0();
    sub_24E115AB0();
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, v16, v17);
    sub_24E115B20();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t Data.trimmed.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = -1;
  uint64_t v6 = 0;
  uint64_t v24 = a1 >> 32;
  unint64_t v25 = HIDWORD(a1);
  uint64_t v26 = BYTE6(a2);
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_56;
      }
      uint64_t v3 = HIDWORD(a1) - (int)a1 - 1;
      sub_24E08D248(a1, a2);
      uint64_t v6 = v24;
      goto LABEL_8;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v9 = v6 - v7;
      if (v8) {
        goto LABEL_57;
      }
      uint64_t v3 = v9 - 1;
      if (__OFSUB__(v9, 1)) {
        goto LABEL_58;
      }
      sub_24E08D248(a1, a2);
LABEL_8:
      uint64_t v10 = -1;
      uint64_t v23 = v6;
      break;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      uint64_t v3 = BYTE6(a2) - 1;
      goto LABEL_8;
  }
  while (2)
  {
    uint64_t v11 = (int)a1;
    switch((int)v2)
    {
      case 0:
        if (!v6) {
          goto LABEL_44;
        }
        BOOL v8 = __OFSUB__(v6--, 1);
        if (v8) {
          goto LABEL_48;
        }
        if (v6 >= v26) {
          goto LABEL_49;
        }
        __int16 v27 = a1;
        char v28 = BYTE2(a1);
        char v29 = BYTE3(a1);
        char v30 = v25;
        char v31 = BYTE5(a1);
        char v32 = BYTE6(a1);
        char v33 = HIBYTE(a1);
        __int16 v34 = a2;
        char v35 = BYTE2(a2);
        char v36 = BYTE3(a2);
        char v37 = BYTE4(a2);
        char v38 = BYTE5(a2);
        int v12 = *((unsigned __int8 *)&v27 + v6);
        goto LABEL_29;
      case 1:
        goto LABEL_15;
      case 2:
        uint64_t v11 = *(void *)(a1 + 16);
LABEL_15:
        if (v6 != v11)
        {
          BOOL v8 = __OFSUB__(v6--, 1);
          if (v8) {
            goto LABEL_47;
          }
          if (v2 == 2)
          {
            if (v6 < *(void *)(a1 + 16)) {
              goto LABEL_50;
            }
            if (v6 >= *(void *)(a1 + 24)) {
              goto LABEL_52;
            }
            uint64_t v13 = sub_24E115980();
            if (!v13) {
              goto LABEL_61;
            }
            uint64_t v14 = v13;
            uint64_t v15 = sub_24E1159B0();
            uint64_t v16 = v6 - v15;
            if (__OFSUB__(v6, v15)) {
              goto LABEL_54;
            }
          }
          else
          {
            if (v6 < (int)a1 || v6 >= v24) {
              goto LABEL_51;
            }
            uint64_t v17 = sub_24E115980();
            if (!v17) {
              goto LABEL_62;
            }
            uint64_t v14 = v17;
            uint64_t v18 = sub_24E1159B0();
            uint64_t v16 = v6 - v18;
            if (__OFSUB__(v6, v18)) {
              goto LABEL_53;
            }
          }
          int v12 = *(unsigned __int8 *)(v14 + v16);
LABEL_29:
          if (__OFADD__(v10 + 1, 1)) {
            goto LABEL_46;
          }
          ++v10;
          if (v12)
          {
            if (v2)
            {
              if (v2 == 1)
              {
                sub_24E08D0B0(a1, a2);
                if (!__OFSUB__(v25, a1))
                {
                  uint64_t v26 = (int)v25 - (int)a1;
                  goto LABEL_39;
                }
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
LABEL_62:
                __break(1u);
              }
              uint64_t v21 = *(void *)(a1 + 16);
              uint64_t v20 = *(void *)(a1 + 24);
              sub_24E08D0B0(a1, a2);
              uint64_t v26 = v20 - v21;
              if (__OFSUB__(v20, v21)) {
                goto LABEL_60;
              }
            }
            else
            {
LABEL_37:
              sub_24E08D0B0(a1, a2);
            }
LABEL_39:
            uint64_t v19 = v26 - v10;
            if (!__OFSUB__(v26, v10))
            {
LABEL_40:
              if ((v19 & 0x8000000000000000) == 0) {
                goto LABEL_41;
              }
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
            }
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          continue;
        }
LABEL_44:
        sub_24E08D0B0(a1, a2);
        if (v3 < 0) {
          goto LABEL_45;
        }
LABEL_41:
        return sub_24E115C60();
      case 3:
        sub_24E08D0B0(a1, a2);
        uint64_t v19 = v3;
        if (!v23) {
          goto LABEL_40;
        }
        __break(1u);
        goto LABEL_37;
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t static HashAlgorithm.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_24E08AD54()
{
  return 1;
}

uint64_t static HMACAlgorithm.== infix(_:_:)()
{
  return 1;
}

uint64_t HMACAlgorithm.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t _s10FindMyBase13HashAlgorithmO9hashValueSivg_0()
{
  return sub_24E1171F0();
}

uint64_t sub_24E08ADDC()
{
  return sub_24E1171D0();
}

uint64_t sub_24E08AE04()
{
  return sub_24E1171F0();
}

uint64_t sub_24E08AE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v14[3] = MEMORY[0x263F8D3E8];
  v14[4] = MEMORY[0x263F07B80];
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v14, MEMORY[0x263F8D3E8]);
  uint64_t v5 = (unsigned char *)*v4;
  if (*v4 && (uint64_t v6 = (unsigned char *)v4[1], v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_24E0AF128(v5, v6);
      unint64_t v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_24E08DEA8((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v13 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_24E08DF24((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t RawRepresentable<>.base64EncodedString(options:)()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E08AF80(&v2);
  return v2;
}

uint64_t sub_24E08AF80@<X0>(uint64_t *a1@<X8>)
{
  sub_24E1164E0();
  uint64_t v2 = sub_24E115C00();
  uint64_t v4 = v3;
  uint64_t result = sub_24E08D0B0(v6, v7);
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t RawRepresentable<>.hexString.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E08B064(&v2);
  return v2;
}

uint64_t sub_24E08B064@<X0>(uint64_t *a1@<X8>)
{
  sub_24E1164E0();
  uint64_t v2 = sub_24E1048B0(v6, v7);
  uint64_t v4 = v3;
  uint64_t result = sub_24E08D0B0(v6, v7);
  *a1 = v2;
  a1[1] = v4;
  return result;
}

BOOL sub_24E08B0E4(unint64_t *a1, uint64_t a2)
{
  return _s10Foundation4DataV10FindMyBaseE1loiySbAC_ACtFZ_0(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_24E08B0F8(uint64_t a1, unint64_t *a2)
{
  return !_s10Foundation4DataV10FindMyBaseE1loiySbAC_ACtFZ_0(*a2, a2[1], *(void *)a1, *(void *)(a1 + 8));
}

BOOL sub_24E08B120(unint64_t *a1, uint64_t a2)
{
  return !_s10Foundation4DataV10FindMyBaseE1loiySbAC_ACtFZ_0(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_24E08B150(uint64_t a1, unint64_t *a2)
{
  return _s10Foundation4DataV10FindMyBaseE1loiySbAC_ACtFZ_0(*a2, a2[1], *(void *)a1, *(void *)(a1 + 8));
}

uint64_t Data.init(stringLiteral:)()
{
  uint64_t result = sub_24E089C10();
  if (v1 >> 60 == 15) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24E08B188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E089C10();
  if (v3 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    a1[1] = v3;
  }
  return result;
}

char *sub_24E08B1C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE808);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_24E08DD1C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24E08B2D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE800);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E08E15C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E08B3E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFA00);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C8) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24E116EB0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C8) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E08EB10(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

char *sub_24E08B654(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7CE8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      unint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      unint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E08EC6C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24E08B750(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7CE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E08ED54(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24E08B860(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E08EC6C(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E08B958(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEAC0);
  uint64_t v10 = *(void *)(type metadata accessor for Keychain.Item() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24E116EB0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for Keychain.Item() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E08EE48(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_24E08BBC0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24E08BD38(v2, 0);
      if (v2 < 0) {
        break;
      }
      uint64_t v4 = v3;
      uint64_t v5 = sub_24E116C80();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24E116EB0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24E116390();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24E116F20();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24E116EB0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24E08BD38(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24E08BDA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24E116400();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x253332000](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_24E08BE1C(uint64_t *a1, size_t count)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_24E11BB50;
      uint64_t v9 = v3 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      if (v9 < (int)v3) {
        goto LABEL_22;
      }
      if (sub_24E115980() && __OFSUB__((int)v3, sub_24E1159B0())) {
        goto LABEL_23;
      }
      sub_24E1159C0();
      swift_allocObject();
      uint64_t v16 = sub_24E115960();
      swift_release();
      uint64_t v8 = v16;
LABEL_13:
      if (v9 < (int)v3) {
        goto LABEL_20;
      }
      uint64_t v17 = sub_24E115980();
      if (!v17) {
        goto LABEL_25;
      }
      uint64_t v18 = v17;
      uint64_t v19 = sub_24E1159B0();
      if (__OFSUB__((int)v3, v19)) {
        goto LABEL_21;
      }
      uint64_t v20 = (void *)(v18 + (int)v3 - v19);
      sub_24E1159A0();
      uint64_t result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], count, v20);
      unint64_t v15 = v8 | 0x4000000000000000;
      *a1 = v3;
      break;
    case 2uLL:
      *(void *)&long long bytes = *a1;
      *((void *)&bytes + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24E115B70();
      uint64_t v10 = *(void *)(bytes + 16);
      uint64_t v11 = sub_24E115980();
      if (!v11)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x24E08C10CLL);
      }
      uint64_t v12 = v11;
      uint64_t v13 = sub_24E1159B0();
      if (__OFSUB__(v10, v13))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      size_t v14 = (void *)(v12 + v10 - v13);
      sub_24E1159A0();
      uint64_t result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], count, v14);
      unint64_t v15 = *((void *)&bytes + 1) | 0x8000000000000000;
      *a1 = bytes;
      break;
    case 3uLL:
      *(void *)((char *)&bytes + 7) = 0;
      *(void *)&long long bytes = 0;
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], count, &bytes);
    default:
      LOWORD(bytes) = *a1;
      BYTE2(bytes) = BYTE2(v3);
      BYTE3(bytes) = BYTE3(v3);
      BYTE4(bytes) = BYTE4(v3);
      BYTE5(bytes) = BYTE5(v3);
      BYTE6(bytes) = BYTE6(v3);
      BYTE7(bytes) = HIBYTE(v3);
      WORD4(bytes) = v2;
      BYTE10(bytes) = BYTE2(v2);
      BYTE11(bytes) = BYTE3(v2);
      BYTE12(bytes) = BYTE4(v2);
      BYTE13(bytes) = BYTE5(v2);
      BYTE14(bytes) = BYTE6(v2);
      uint64_t result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], count, &bytes);
      unint64_t v7 = DWORD2(bytes) | ((unint64_t)BYTE12(bytes) << 32) | ((unint64_t)BYTE13(bytes) << 40) | ((unint64_t)BYTE14(bytes) << 48);
      *a1 = bytes;
      a1[1] = v7;
      return result;
  }
  a1[1] = v15;
  return result;
}

uint64_t sub_24E08C11C(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_24E08C684(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24E115B70();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_24E115980();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x24E08C358);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_24E1159B0();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_24E1159A0();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      *unint64_t v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      *unint64_t v1 = v4;
      v1[1] = v5;
      return result;
  }
}

uint64_t sub_24E08C368(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_24E08C684(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24E115B70();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_24E115980();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x24E08C5A4);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_24E1159B0();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_24E1159A0();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      *unint64_t v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      *unint64_t v1 = v4;
      v1[1] = v5;
      return result;
  }
}

unsigned char *sub_24E08C5B4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_24E0AF128(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_24E08DEA8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_24E08DF24((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24E08C62C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    return a1(a3, a4 - a3);
  }
  else {
    return a1(0, 0);
  }
}

uint64_t sub_24E08C684(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t result = sub_24E115B80();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_24E115980();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = sub_24E1159B0();
  uint64_t v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v5 - v4;
  uint64_t v9 = sub_24E1159A0();
  if (v9 >= v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v9;
  }
  return a1(v6 + v7, v6 + v7 + v10);
}

unsigned __int8 *sub_24E08C734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24E116450();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24E08CA98();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_24E116D10();
  }
LABEL_7:
  uint64_t v11 = sub_24E08C81C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_24E08C81C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24E08CA98()
{
  unint64_t v0 = sub_24E116460();
  uint64_t v4 = sub_24E08CB18(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24E08CB18(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_24E08CC70(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_24E08BD38(v9, 0);
      unint64_t v12 = sub_24E08CD70((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24E116D10();
LABEL_4:
        JUMPOUT(0x253331F60);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x253331F60](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x253331F60]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_24E08CC70(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24E08BDA0(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24E08BDA0(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_24E08CD70(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_24E08BDA0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_24E1163D0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_24E116D10();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_24E08BDA0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24E1163A0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

char *sub_24E08CF84(uint64_t a1)
{
  return sub_24E08B860(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_26B1AEBD0);
}

char *sub_24E08CFB4(uint64_t a1)
{
  return sub_24E08B654(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_24E08CFC8(void *a1)
{
  return sub_24E08B2D4(0, a1[2], 0, a1);
}

void *sub_24E08CFDC(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_24E1163F0();
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    uint64_t v5 = sub_24E08D5C4(v4, 0);
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_24E08D2A0((uint64_t)v7, (uint64_t)(v5 + 4), v4, a1, v2);
    swift_bridgeObjectRelease();
    if (v2 == v4) {
      break;
    }
    __break(1u);
LABEL_5:
    uint64_t v4 = sub_24E1163E0();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

uint64_t sub_24E08D0B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24E08D108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24E08D248(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24E08D2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (!a2)
  {
    uint64_t v11 = 0;
    __int16 v12 = 0;
    a3 = 0;
    char v15 = 1;
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  if (!a3)
  {
    uint64_t v11 = 0;
    __int16 v12 = 0;
    char v15 = 1;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
    __break(1u);
    JUMPOUT(0x24E08D5A4);
  }
  uint64_t v11 = 0;
  __int16 v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = a5 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v27 = a1;
  char v15 = 1;
  while (1)
  {
    if ((v15 & 1) == 0)
    {
      char v15 = 1;
      LOWORD(v16) = v12;
      __int16 v12 = 0;
      goto LABEL_9;
    }
    if (v11 >= v8) {
      break;
    }
    if ((a5 & 0x1000000000000000) != 0)
    {
      uint64_t v21 = v14;
      unsigned int v22 = sub_24E116C60();
      uint64_t v14 = v21;
      unsigned int v16 = v22;
    }
    else
    {
      if ((a5 & 0x2000000000000000) == 0)
      {
        uint64_t v17 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a4 & 0x1000000000000000) == 0)
        {
          uint64_t v25 = v14;
          uint64_t v17 = sub_24E116D10();
          uint64_t v14 = v25;
        }
        unsigned int v16 = *(unsigned __int8 *)(v17 + v11);
        if (*(char *)(v17 + v11) < 0)
        {
          switch(__clz(v16 ^ 0xFF))
          {
            case 0x1Au:
              LOWORD(v16) = *(unsigned char *)(v11 + v17 + 1) & 0x3F | ((v16 & 0x1F) << 6);
              uint64_t v18 = 2;
              goto LABEL_18;
            case 0x1Bu:
              LOWORD(v16) = ((v16 & 0xF) << 12) | ((*(unsigned char *)(v11 + v17 + 1) & 0x3F) << 6) | *(unsigned char *)(v11 + v17 + 2) & 0x3F;
              uint64_t v18 = 3;
              goto LABEL_18;
            case 0x1Cu:
              unsigned int v20 = (char *)(v11 + v17);
              goto LABEL_29;
            default:
              break;
          }
        }
        uint64_t v18 = 1;
LABEL_18:
        v11 += v18;
        char v15 = 1;
        goto LABEL_9;
      }
      v28[0] = a4;
      v28[1] = v14;
      unsigned int v16 = *((unsigned __int8 *)v28 + v11);
      if (*((char *)v28 + v11) < 0)
      {
        switch(__clz(v16 ^ 0xFF))
        {
          case 0x1Au:
            unsigned int v16 = *((unsigned char *)v28 + v11 + 1) & 0x3F | ((v16 & 0x1F) << 6);
            uint64_t v19 = 2;
            break;
          case 0x1Bu:
            unsigned int v16 = ((v16 & 0xF) << 12) | ((*((unsigned char *)v28 + v11 + 1) & 0x3F) << 6) | *((unsigned char *)v28 + v11 + 2) & 0x3F;
            uint64_t v19 = 3;
            break;
          case 0x1Cu:
            unsigned int v20 = (char *)v28 + v11;
LABEL_29:
            unsigned int v16 = ((v16 & 0xF) << 18) | ((v20[1] & 0x3F) << 12) | ((v20[2] & 0x3F) << 6) | v20[3] & 0x3F;
            uint64_t v19 = 4;
            break;
          default:
            goto LABEL_20;
        }
      }
      else
      {
LABEL_20:
        uint64_t v19 = 1;
      }
    }
    v11 += v19;
    if (HIWORD(v16))
    {
      uint64_t v23 = v14;
      __int16 v12 = sub_24E117250();
      __int16 v24 = sub_24E117250();
      uint64_t v14 = v23;
      LOWORD(v16) = v24;
      char v15 = 0;
    }
    else
    {
      char v15 = 1;
    }
LABEL_9:
    *(_WORD *)(a2 + 2 * v13++) = v16;
    if (a3 == v13) {
      goto LABEL_37;
    }
  }
  char v15 = 1;
  a3 = v13;
LABEL_37:
  a1 = v27;
LABEL_38:
  swift_bridgeObjectRelease();
LABEL_39:
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 34) = v15;
  return a3;
}

void *sub_24E08D5C4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE808);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  int64_t v6 = v5 - 32;
  if (v5 < 32) {
    int64_t v6 = v5 - 31;
  }
  v4[2] = a1;
  v4[3] = v6 & 0xFFFFFFFFFFFFFFFELL;
  return v4;
}

uint64_t sub_24E08D638(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x24E08D704);
  }
  return result;
}

BOOL _s10Foundation4DataV10FindMyBaseE1loiySbAC_ACtFZ_0(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v71 = *MEMORY[0x263EF8340];
  uint64_t v7 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_76;
      }
      uint64_t v7 = (int)v7;
      break;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        break;
      }
      goto LABEL_77;
    case 3uLL:
      break;
    default:
      uint64_t v7 = BYTE6(a2);
      break;
  }
  unint64_t v55 = HIDWORD(a3);
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_78;
      }
      uint64_t v11 = (int)v11;
LABEL_11:
      if (v11 >= v7) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = v11;
      }
      if ((v13 & 0x8000000000000000) == 0)
      {
LABEL_15:
        unint64_t v58 = a4 >> 62;
        unint64_t v37 = a2 >> 62;
        if (!v13)
        {
LABEL_48:
          uint64_t v29 = 0;
          LODWORD(v4) = v58;
          switch((int)v37)
          {
            case 1:
              goto LABEL_53;
            case 2:
              uint64_t v33 = *(void *)(a1 + 16);
              uint64_t v32 = *(void *)(a1 + 24);
              BOOL v10 = __OFSUB__(v32, v33);
              uint64_t v29 = v32 - v33;
              if (!v10) {
                goto LABEL_56;
              }
              goto LABEL_81;
            case 3:
              goto LABEL_56;
            default:
              uint64_t v29 = BYTE6(a2);
              goto LABEL_56;
          }
        }
        int64_t v14 = 0;
        int64_t v54 = (int)a1;
        uint64_t v53 = (uint64_t)a1 >> 32;
        uint64_t v38 = a3 >> 32;
        unint64_t v39 = BYTE6(a4);
        int64_t v40 = (int)a3;
        unint64_t v51 = a1 >> 16;
        unint64_t v52 = a1 >> 8;
        unint64_t v49 = HIDWORD(a1);
        unint64_t v50 = a1 >> 24;
        unint64_t v47 = HIWORD(a1);
        unint64_t v48 = a1 >> 40;
        unint64_t v45 = a2 >> 8;
        unint64_t v46 = HIBYTE(a1);
        unint64_t v43 = a2 >> 24;
        unint64_t v44 = a2 >> 16;
        unint64_t v41 = a2 >> 40;
        unint64_t v42 = HIDWORD(a2);
        unint64_t v57 = a1;
        while (v13 != v14)
        {
          int64_t v15 = v14 + 1;
          switch((int)v37)
          {
            case 1:
              if (v14 < v54 || v14 >= v53) {
                goto LABEL_65;
              }
              uint64_t v17 = sub_24E115980();
              if (!v17) {
                goto LABEL_85;
              }
              uint64_t v18 = v17;
              uint64_t v19 = sub_24E1159B0();
              int64_t v20 = v14 - v19;
              if (!__OFSUB__(v14, v19)) {
                goto LABEL_31;
              }
              goto LABEL_67;
            case 2:
              if (v14 < *(void *)(a1 + 16)) {
                goto LABEL_66;
              }
              if (v14 >= *(void *)(a1 + 24)) {
                goto LABEL_68;
              }
              uint64_t v21 = sub_24E115980();
              if (!v21) {
                goto LABEL_86;
              }
              uint64_t v18 = v21;
              uint64_t v22 = sub_24E1159B0();
              int64_t v20 = v14 - v22;
              if (__OFSUB__(v14, v22)) {
                goto LABEL_69;
              }
LABEL_31:
              int v16 = *(unsigned __int8 *)(v18 + v20);
              break;
            case 3:
              goto LABEL_84;
            default:
              if (v14 >= (unint64_t)BYTE6(a2)) {
                goto LABEL_64;
              }
              LOBYTE(v59) = a1;
              HIBYTE(v59) = v52;
              char v60 = v51;
              char v61 = v50;
              char v62 = v49;
              char v63 = v48;
              char v64 = v47;
              char v65 = v46;
              LOBYTE(v66) = a2;
              HIBYTE(v66) = v45;
              char v67 = v44;
              char v68 = v43;
              char v69 = v42;
              char v70 = v41;
              int v16 = *((unsigned __int8 *)&v59 + v14);
              break;
          }
          switch((int)v58)
          {
            case 1:
              if (v14 < v40 || v14 >= v38) {
                goto LABEL_71;
              }
              uint64_t v23 = sub_24E115980();
              if (!v23) {
                goto LABEL_88;
              }
              uint64_t v24 = v23;
              uint64_t v25 = sub_24E1159B0();
              int64_t v26 = v14 - v25;
              if (!__OFSUB__(v14, v25)) {
                goto LABEL_46;
              }
              goto LABEL_73;
            case 2:
              if (v14 < *(void *)(a3 + 16)) {
                goto LABEL_72;
              }
              if (v14 >= *(void *)(a3 + 24)) {
                goto LABEL_74;
              }
              uint64_t v27 = sub_24E115980();
              if (!v27) {
                goto LABEL_89;
              }
              uint64_t v24 = v27;
              uint64_t v28 = sub_24E1159B0();
              int64_t v26 = v14 - v28;
              if (__OFSUB__(v14, v28)) {
                goto LABEL_75;
              }
LABEL_46:
              if (v16 != *(unsigned __int8 *)(v24 + v26))
              {
LABEL_50:
                unsigned int v30 = sub_24E115CA0();
                return v30 < sub_24E115CA0();
              }
LABEL_47:
              ++v14;
              a1 = v57;
              if (v13 == v15) {
                goto LABEL_48;
              }
              break;
            case 3:
              goto LABEL_87;
            default:
              if (v14 >= v39) {
                goto LABEL_70;
              }
              __int16 v59 = a3;
              char v60 = BYTE2(a3);
              char v61 = BYTE3(a3);
              char v62 = v55;
              char v63 = BYTE5(a3);
              char v64 = BYTE6(a3);
              char v65 = HIBYTE(a3);
              __int16 v66 = a4;
              char v67 = BYTE2(a4);
              char v68 = BYTE3(a4);
              char v69 = BYTE4(a4);
              char v70 = BYTE5(a4);
              if (v16 != *((unsigned __int8 *)&v59 + v14)) {
                goto LABEL_50;
              }
              goto LABEL_47;
          }
        }
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
      }
LABEL_52:
      __break(1u);
LABEL_53:
      LODWORD(v29) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_80;
      }
      uint64_t v29 = (int)v29;
LABEL_56:
      uint64_t v34 = 0;
      switch((int)v4)
      {
        case 1:
          LODWORD(v34) = v55 - a3;
          if (__OFSUB__(v55, a3)) {
            goto LABEL_82;
          }
          uint64_t v34 = (int)v34;
LABEL_61:
          BOOL result = v29 < v34;
          break;
        case 2:
          uint64_t v36 = *(void *)(a3 + 16);
          uint64_t v35 = *(void *)(a3 + 24);
          BOOL v10 = __OFSUB__(v35, v36);
          uint64_t v34 = v35 - v36;
          if (!v10) {
            goto LABEL_61;
          }
          goto LABEL_83;
        case 3:
          goto LABEL_61;
        default:
          uint64_t v34 = BYTE6(a4);
          goto LABEL_61;
      }
      return result;
    case 2uLL:
      uint64_t v4 = *(void *)(a3 + 16);
      uint64_t v12 = *(void *)(a3 + 24);
      BOOL v10 = __OFSUB__(v12, v4);
      uint64_t v11 = v12 - v4;
      if (!v10) {
        goto LABEL_11;
      }
      goto LABEL_79;
    case 3uLL:
      uint64_t v13 = v7 & (v7 >> 63);
      if (v13 < 0) {
        goto LABEL_52;
      }
      goto LABEL_15;
    default:
      uint64_t v11 = BYTE6(a4);
      goto LABEL_11;
  }
}

char *sub_24E08DD1C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  BOOL result = (char *)sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E08DE08(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_24E1159C0();
      swift_allocObject();
      sub_24E115990();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_24E115BA0();
        BOOL result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_24E08DEA8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_24E1159C0();
  swift_allocObject();
  uint64_t result = sub_24E115970();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24E115BA0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_24E08DF24(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_24E1159C0();
  swift_allocObject();
  uint64_t result = sub_24E115970();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24E08DFA8(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE5D0);
  uint64_t v10 = sub_24E08F138(&qword_26B1AE5D8, &qword_26B1AE5D0);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  unint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_24E08C5B4(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t _s10Foundation4DataV10FindMyBaseE11randomBytes5countACSi_tFZ_0(size_t a1)
{
  v4[0] = sub_24E08DE08(a1);
  v4[1] = v2;
  if (!sub_24E08BE1C(v4, a1)) {
    return v4[0];
  }
  sub_24E116C70();
  swift_bridgeObjectRelease();
  sub_24E117040();
  sub_24E116370();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24E116EC0();
  __break(1u);
  return result;
}

uint64_t sub_24E08E15C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E08E250(uint64_t a1, int64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v9 = a1;
  int64_t v10 = 0;
  int64_t v11 = a1;
  while (1)
  {
    BOOL v12 = v11 <= a2;
    if (a3 > 0) {
      BOOL v12 = v11 >= a2;
    }
    if (v12) {
      break;
    }
    BOOL v13 = __OFADD__(v11, a3);
    v11 += a3;
    if (v13) {
      int64_t v11 = (v11 >> 63) ^ 0x8000000000000000;
    }
    BOOL v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v56 = MEMORY[0x263F8EE78];
  sub_24E0AEAF8(0, v10, 0);
  unint64_t v53 = a4;
  unint64_t v48 = HIDWORD(a4);
  if (v10)
  {
    BOOL v14 = __OFSUB__(HIDWORD(a4), a4);
    BOOL v50 = v14;
    uint64_t v49 = HIDWORD(a4) - (int)a4;
    while (2)
    {
      BOOL v15 = v9 <= a2;
      if (a3 > 0) {
        BOOL v15 = v9 >= a2;
      }
      if (v15)
      {
        __break(1u);
      }
      else
      {
        if (__OFADD__(v9, a3)) {
          int64_t v16 = ((v9 + a3) >> 63) ^ 0x8000000000000000;
        }
        else {
          int64_t v16 = v9 + a3;
        }
        uint64_t v17 = v9 + a6;
        if (!__OFADD__(v9, a6))
        {
          uint64_t v18 = BYTE6(a5);
          switch(a5 >> 62)
          {
            case 1uLL:
              uint64_t v18 = v49;
              if (v50) {
                goto LABEL_70;
              }
              goto LABEL_26;
            case 2uLL:
              uint64_t v20 = *(void *)(a4 + 16);
              uint64_t v19 = *(void *)(a4 + 24);
              BOOL v13 = __OFSUB__(v19, v20);
              uint64_t v18 = v19 - v20;
              if (!v13) {
                goto LABEL_26;
              }
              goto LABEL_71;
            case 3uLL:
              if ((v17 & (v17 >> 63)) >= v9) {
                goto LABEL_32;
              }
              goto LABEL_67;
            default:
LABEL_26:
              if (v18 >= v17) {
                uint64_t v21 = v9 + a6;
              }
              else {
                uint64_t v21 = v18;
              }
              if (v21 < v9) {
                goto LABEL_67;
              }
LABEL_32:
              uint64_t v22 = sub_24E115BD0();
              uint64_t v24 = sub_24E0886E8(v22, v23);
              uint64_t v26 = v25;
              unint64_t v28 = *(void *)(v56 + 16);
              unint64_t v27 = *(void *)(v56 + 24);
              if (v28 >= v27 >> 1) {
                sub_24E0AEAF8(v27 > 1, v28 + 1, 1);
              }
              *(void *)(v56 + 16) = v28 + 1;
              uint64_t v29 = v56 + 16 * v28;
              *(void *)(v29 + 32) = v24;
              *(void *)(v29 + 40) = v26;
              uint64_t v9 = v16;
              --v10;
              a4 = v53;
              if (!v10) {
                goto LABEL_37;
              }
              continue;
          }
        }
      }
      break;
    }
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    JUMPOUT(0x24E08E5BCLL);
  }
  int64_t v16 = v9;
LABEL_37:
  BOOL v30 = v16 <= a2;
  if (a3 > 0) {
    BOOL v30 = v16 >= a2;
  }
  if (!v30)
  {
    BOOL v32 = __OFSUB__(v48, a4);
    BOOL v52 = v32;
    uint64_t v51 = (int)v48 - (int)a4;
    while (2)
    {
      if (__OFADD__(v16, a3)) {
        int64_t v33 = ((v16 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v33 = v16 + a3;
      }
      uint64_t v34 = v16 + a6;
      if (!__OFADD__(v16, a6))
      {
        uint64_t v35 = BYTE6(a5);
        switch(a5 >> 62)
        {
          case 1uLL:
            uint64_t v35 = v51;
            if (v52) {
              goto LABEL_72;
            }
            goto LABEL_53;
          case 2uLL:
            uint64_t v37 = *(void *)(a4 + 16);
            uint64_t v36 = *(void *)(a4 + 24);
            BOOL v13 = __OFSUB__(v36, v37);
            uint64_t v35 = v36 - v37;
            if (!v13) {
              goto LABEL_53;
            }
            goto LABEL_73;
          case 3uLL:
            if ((v34 & (v34 >> 63)) >= v16) {
              goto LABEL_59;
            }
            goto LABEL_69;
          default:
LABEL_53:
            if (v35 >= v34) {
              int64_t v38 = v16 + a6;
            }
            else {
              int64_t v38 = v35;
            }
            if (v38 < v16) {
              goto LABEL_69;
            }
LABEL_59:
            uint64_t v39 = sub_24E115BD0();
            uint64_t v41 = sub_24E0886E8(v39, v40);
            uint64_t v43 = v42;
            unint64_t v45 = *(void *)(v56 + 16);
            unint64_t v44 = *(void *)(v56 + 24);
            if (v45 >= v44 >> 1) {
              sub_24E0AEAF8(v44 > 1, v45 + 1, 1);
            }
            *(void *)(v56 + 16) = v45 + 1;
            uint64_t v46 = v56 + 16 * v45;
            *(void *)(v46 + 32) = v41;
            *(void *)(v46 + 40) = v43;
            BOOL v47 = v33 <= a2;
            if (a3 > 0) {
              BOOL v47 = v33 >= a2;
            }
            int64_t v16 = v33;
            a4 = v53;
            if (v47) {
              return v56;
            }
            continue;
        }
      }
      goto LABEL_68;
    }
  }
  return v56;
}

unint64_t sub_24E08E5DC()
{
  unint64_t result = qword_2698B7CA8;
  if (!qword_2698B7CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CA8);
  }
  return result;
}

uint64_t sub_24E08E630@<X0>(uint64_t *a1@<X8>)
{
  return sub_24E08A5BC(a1);
}

unint64_t sub_24E08E658()
{
  unint64_t result = qword_2698B7CB0;
  if (!qword_2698B7CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CB0);
  }
  return result;
}

unint64_t sub_24E08E6B0()
{
  unint64_t result = qword_2698B7CB8;
  if (!qword_2698B7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CB8);
  }
  return result;
}

unint64_t sub_24E08E708()
{
  unint64_t result = qword_2698B7CC0;
  if (!qword_2698B7CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CC0);
  }
  return result;
}

unint64_t sub_24E08E760()
{
  unint64_t result = qword_2698B7CC8;
  if (!qword_2698B7CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CC8);
  }
  return result;
}

unint64_t sub_24E08E7B8()
{
  unint64_t result = qword_2698B7CD0;
  if (!qword_2698B7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CD0);
  }
  return result;
}

uint64_t sub_24E08E80C()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_24E08E818()
{
  return MEMORY[0x263F8D390];
}

unint64_t sub_24E08E828()
{
  unint64_t result = qword_2698B7CD8;
  if (!qword_2698B7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7CD8);
  }
  return result;
}

uint64_t sub_24E08E87C()
{
  return MEMORY[0x263F8D388];
}

unsigned char *_s9DataErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E08E954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.DataError()
{
  return &type metadata for Data.DataError;
}

uint64_t sub_24E08E998()
{
  return 0;
}

ValueMetadata *type metadata accessor for HashAlgorithm()
{
  return &type metadata for HashAlgorithm;
}

uint64_t getEnumTagSinglePayload for DateIntervalParsingStrategy.Error(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s10FindMyBase13HashAlgorithmOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E08EA9CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HMACAlgorithm()
{
  return &type metadata for HMACAlgorithm;
}

uint64_t dispatch thunk of DataRepresentable.dataRepresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataRepresentable.init(dataRepresentation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_24E08EB10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C8) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

char *sub_24E08EC6C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unsigned int v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E08ED54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E08EE48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for Keychain.Item() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E08EFA4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E08F004(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)*(void *)(v2 + 16);
  uint64_t v4[2] = &v5;
  return sub_24E08C62C((uint64_t (*)(uint64_t, uint64_t))sub_24E08F074, (uint64_t)v4, a1, a2);
}

uint64_t sub_24E08F05C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24E08F074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v7 = *(uint64_t **)(v3 + 16);
  unint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  sub_24E08D248(*v7, v9);
  uint64_t result = sub_24E0CB644(a3, a1, a2, v8, v9);
  a3[3] = result;
  return result;
}

unint64_t sub_24E08F0E4()
{
  unint64_t result = qword_2698B7D10;
  if (!qword_2698B7D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7D10);
  }
  return result;
}

uint64_t sub_24E08F138(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E08F184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E117120();
  sub_24E116180();
  sub_24E117130();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a3);
}

uint64_t scale<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v39 = a5;
  unint64_t v40 = a7;
  uint64_t v43 = a8;
  uint64_t v44 = a6;
  uint64_t v36 = a1;
  uint64_t v37 = a3;
  uint64_t v42 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v41 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int64_t v38 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v36 - v23;
  sub_24E08F184(v36, a2, a4);
  swift_getAssociatedConformanceWitness();
  sub_24E117100();
  sub_24E117090();
  sub_24E116EE0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v18, a4);
  unint64_t v40 = v24;
  uint64_t v26 = (uint64_t (*)(char *, uint64_t))v25;
  sub_24E116EE0();
  v25(v21, a4);
  if (swift_dynamicCast() & 1) != 0 && (long double v27 = v45, sub_24E116180(), sub_24E116EE0(), (swift_dynamicCast()))
  {
    long double v28 = v45;
    uint64_t v29 = v41;
    uint64_t v30 = v37;
    sub_24E116E70();
    if (sub_24E116B80() < 65)
    {
      char v32 = sub_24E116B90();
      uint64_t v33 = sub_24E116B70();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
      if (v32) {
        double v31 = (double)v33;
      }
      else {
        double v31 = (double)(unint64_t)v33;
      }
    }
    else
    {
      sub_24E08F7A0();
      sub_24E08F7F4();
      sub_24E116070();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
      double v31 = v45;
    }
    double v34 = log10(v28);
    double v45 = log10(v27) / v34 * v31;
    sub_24E08F7A0();
    sub_24E116BA0();
    return v26(v40, a4);
  }
  else
  {
    uint64_t result = sub_24E116EC0();
    __break(1u);
  }
  return result;
}

unint64_t sub_24E08F7A0()
{
  unint64_t result = qword_2698B7D20;
  if (!qword_2698B7D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7D20);
  }
  return result;
}

unint64_t sub_24E08F7F4()
{
  unint64_t result = qword_2698B7D28;
  if (!qword_2698B7D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7D28);
  }
  return result;
}

uint64_t unscale<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v46 = a6;
  uint64_t v47 = a1;
  uint64_t v49 = a5;
  uint64_t v53 = a7;
  uint64_t v10 = sub_24E116A90();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  BOOL v52 = (char *)&v44 - v12;
  uint64_t v51 = *(void *)(a3 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  BOOL v50 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v48 = (char *)&v44 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v54 = *(void *)(a4 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v21);
  sub_24E116180();
  uint64_t v46 = a2;
  sub_24E116EE0();
  if (swift_dynamicCast())
  {
    long double v22 = v55;
    swift_getAssociatedConformanceWitness();
    sub_24E117100();
    sub_24E117090();
    sub_24E116EE0();
    uint64_t v23 = v54;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v20, a4);
    if (swift_dynamicCast())
    {
      uint64_t v24 = v23;
      double v25 = v55;
      uint64_t v26 = v51;
      long double v27 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v48, v47, a3);
      uint64_t v28 = sub_24E116B80();
      uint64_t v29 = v50;
      if (v28 < 65)
      {
        char v32 = sub_24E116B90();
        uint64_t v33 = sub_24E116B70();
        uint64_t v30 = *(void (**)(char *, uint64_t))(v26 + 8);
        v30(v27, a3);
        BOOL v34 = (v32 & 1) == 0;
        uint64_t v24 = v54;
        if (v34) {
          double v31 = (double)(unint64_t)v33;
        }
        else {
          double v31 = (double)v33;
        }
      }
      else
      {
        sub_24E08F7A0();
        sub_24E08F7F4();
        sub_24E116070();
        uint64_t v30 = *(void (**)(char *, uint64_t))(v26 + 8);
        v30(v27, a3);
        double v31 = v55;
      }
      sub_24E116E70();
      if (sub_24E116B80() <= 64)
      {
        char v36 = sub_24E116B90();
        uint64_t v37 = sub_24E116B70();
        v30(v29, a3);
        if (v36) {
          double v35 = (double)v37;
        }
        else {
          double v35 = (double)(unint64_t)v37;
        }
      }
      else
      {
        sub_24E08F7A0();
        sub_24E08F7F4();
        sub_24E116070();
        v30(v29, a3);
        double v35 = v55;
      }
      int64_t v38 = v52;
      double v39 = v31 / v35;
      long double v40 = log10(v22);
      double v55 = v25 + __exp10(v40 * v39);
      char v41 = swift_dynamicCast();
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
      if (v41)
      {
        v42(v38, 0, 1, a4);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v53, v38, a4);
      }
      v42(v38, 1, 1, a4);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v45);
    }
  }
  uint64_t result = sub_24E116EC0();
  __break(1u);
  return result;
}

uint64_t deoptionalize<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24E116A90();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v12 - v7, a1);
  uint64_t v10 = *(void *)(a2 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, a2);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, a2);
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24E115F00();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B1B13B0);
  uint64_t v7 = sub_24E115EE0();
  uint64_t v8 = sub_24E116990();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_24E083000, v7, v8, "deoptionalize() call is no longer needed since the value is no longer optional or force unwrapped", v9, 2u);
    MEMORY[0x2533338B0](v9, -1, -1);
  }

  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
  return v10(a3, a1, a2);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

Swift::Bool __swiftcall inAsyncContext()()
{
  sub_24E116F60();
  return v1;
}

uint64_t sub_24E0901A4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_24E116870();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = result != 1;
  return result;
}

Swift::Void __swiftcall prohibitAsyncContext(functionName:)(Swift::String functionName)
{
  object = functionName._object;
  uint64_t countAndFlagsBits = functionName._countAndFlagsBits;
  sub_24E116F60();
  if (v8 == 1)
  {
    if (qword_26B1AF8D8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E115F00();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1B13B0);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_24E115EE0();
    os_log_type_t v5 = sub_24E116990();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_bridgeObjectRetain();
      sub_24E090400(countAndFlagsBits, (unint64_t)object, &v8);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24E083000, v4, v5, "\"%s\" is not allowed to be called from an asynchronous context!", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v7, -1, -1);
      MEMORY[0x2533338B0](v6, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_24E090400(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24E0904D4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24E090878((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24E090878((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24E0904D4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24E116AC0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24E090690(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24E116D10();
  if (!v8)
  {
    sub_24E116EB0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24E116F20();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24E090690(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24E08BBC0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E090728(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24E090728(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24E090728(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E090878(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24E0908D4()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1AF940);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1AF940);
  if (qword_26B1AF9A0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1AF980);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

void *sub_24E09099C()
{
  type metadata accessor for DarwinNotificationHandler();
  uint64_t v0 = swift_allocObject();
  uint64_t result = DarwinNotificationHandler.init()();
  qword_26B1AF968 = v0;
  return result;
}

uint64_t DarwinNotificationHandler.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DarwinNotificationHandler.init()();
  return v0;
}

uint64_t static DarwinNotificationHandler.shared.getter()
{
  if (qword_26B1AF978 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static DarwinNotificationHandler.shared.setter(uint64_t a1)
{
  if (qword_26B1AF978 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26B1AF968 = a1;
  return swift_release();
}

uint64_t (*static DarwinNotificationHandler.shared.modify())()
{
  if (qword_26B1AF978 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_24E090B90(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v30 = a4;
  double v31 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int64_t v9 = (void *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    size_t v11 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v10 = sub_24E116F10();
  size_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = (char *)v9 + *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v29[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_24E0954F0(v16, (uint64_t)v9, v31);
    uint64_t v18 = *v9;
    uint64_t v19 = v9[1];
    unint64_t result = sub_24E093D68(*v9, v19);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = (uint64_t *)(v11[6] + 16 * result);
    *uint64_t v23 = v18;
    v23[1] = v19;
    uint64_t v24 = v11[7];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v30);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v22, v13, v25);
    uint64_t v26 = v11[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_11;
    }
    v11[2] = v28;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E090D88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9E8);
  uint64_t v2 = (void *)sub_24E116F10();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24E093D68(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E090EA4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D68);
  uint64_t v2 = (void *)sub_24E116F10();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24E093D68(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E090FC8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D58);
  uint64_t v2 = sub_24E116F10();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24E0954F0(v6, (uint64_t)&v13, &qword_2698B7D60);
    uint64_t v7 = v13;
    unint64_t result = sub_24E093E7C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_24E094E10(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E0910F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D48);
  uint64_t v2 = (void *)sub_24E116F10();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    unint64_t result = sub_24E093F98((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E091210(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26B1AE9A0);
  uint64_t v2 = sub_24E116F10();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24E0954F0(v6, (uint64_t)&v13, &qword_2698B7D50);
    uint64_t v7 = v13;
    unint64_t result = sub_24E093F98(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_24E094E10(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t (*sub_24E091340())()
{
  return j__swift_endAccess;
}

void *DarwinNotificationHandler.init()()
{
  uint64_t v1 = v0;
  swift_defaultActor_initialize();
  uint64_t v2 = MEMORY[0x263F8EE78];
  v1[14] = sub_24E090B90(MEMORY[0x263F8EE78], &qword_26B1AF9B0, &qword_26B1AF9F8, &qword_26B1AF9D8);
  v1[15] = sub_24E090B90(v2, &qword_26B1AF9A8, &qword_26B1AF9F0, &qword_26B1AF9C8);
  v1[16] = sub_24E090D88(v2);
  if (qword_26B1AF960 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24E115F00();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B1AF940);
  swift_retain_n();
  uint64_t v4 = sub_24E115EE0();
  os_log_type_t v5 = sub_24E116970();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_retain();
    uint64_t v8 = sub_24E0917E0();
    unint64_t v10 = v9;
    swift_release();
    sub_24E090400(v8, v10, &v12);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24E083000, v4, v5, "Instantiated %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v7, -1, -1);
    MEMORY[0x2533338B0](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  return v1;
}

uint64_t DarwinNotificationHandler.deinit()
{
  uint64_t v1 = v0;
  if (qword_26B1AF960 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1AF940);
  swift_retain_n();
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116970();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)os_log_type_t v5 = 136315138;
    swift_retain();
    uint64_t v7 = sub_24E0917E0();
    unint64_t v9 = v8;
    swift_release();
    sub_24E090400(v7, v9, &v11);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24E083000, v3, v4, "Deallocated %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t DarwinNotificationHandler.__deallocating_deinit()
{
  DarwinNotificationHandler.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E0917E0()
{
  return 60;
}

uint64_t sub_24E0918F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  os_log_type_t v4 = v3;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C0);
  uint64_t v8 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  unint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9E0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  v77 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v68 - v14;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9D8);
  uint64_t v16 = *(void *)(v82 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v82);
  v78 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v81 = (char *)&v68 - v19;
  v76 = v3 + 14;
  swift_beginAccess();
  uint64_t v20 = v3[14];
  uint64_t v21 = *(void *)(v20 + 16);
  unint64_t v22 = &unk_26B1AF000;
  uint64_t v79 = v16;
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_24E093D68(a1, a2);
    if (v24)
    {
      unint64_t v25 = a2;
      uint64_t v26 = v10;
      uint64_t v27 = v82;
      (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v15, *(void *)(v20 + 56) + *(void *)(v16 + 72) * v23, v82);
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      uint64_t v29 = v15;
      uint64_t v30 = 0;
      uint64_t v31 = v27;
      unint64_t v10 = v26;
      a2 = v25;
      unint64_t v22 = (void *)&unk_26B1AF000;
    }
    else
    {
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      uint64_t v29 = v15;
      uint64_t v30 = 1;
      uint64_t v31 = v82;
    }
    v75 = v28;
    v28(v29, v30, 1, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v82) != 1)
    {
      uint64_t v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v81, v15, v82);
      char v41 = v10;
      goto LABEL_14;
    }
  }
  else
  {
    v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v75(v15, 1, 1, v82);
  }
  v72 = v4;
  v73 = v10;
  sub_24E095494((uint64_t)v15, &qword_26B1AF9E0);
  if (v22[300] != -1) {
    swift_once();
  }
  uint64_t v74 = a3;
  uint64_t v32 = a1;
  uint64_t v33 = sub_24E115F00();
  __swift_project_value_buffer(v33, (uint64_t)qword_26B1AF940);
  swift_bridgeObjectRetain_n();
  BOOL v34 = sub_24E115EE0();
  os_log_type_t v35 = sub_24E1169A0();
  if (os_log_type_enabled(v34, v35))
  {
    char v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v85[0] = v37;
    *(_DWORD *)char v36 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_24E090400(v32, a2, v85);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v34, v35, "Creating base AsyncStream for DarwinNotification name: %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v37, -1, -1);
    MEMORY[0x2533338B0](v36, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  MEMORY[0x270FA5388](v38);
  os_log_type_t v4 = v72;
  *(&v68 - 4) = (uint64_t)v72;
  *(&v68 - 3) = v32;
  uint64_t v39 = v32;
  long double v40 = (int *)MEMORY[0x263F8F580];
  *(&v68 - 2) = a2;
  int v70 = *v40;
  char v69 = *(void (**)(char *))(v8 + 104);
  unint64_t v71 = (v8 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  char v41 = v73;
  v69(v73);
  uint64_t v42 = v78;
  sub_24E116760();
  uint64_t v43 = v79;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  uint64_t v45 = v81;
  uint64_t v46 = v82;
  v44(v81, v42, v82);
  uint64_t v47 = (uint64_t)v77;
  v44(v77, v45, v46);
  v75((char *)v47, 0, 1, v46);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24E0923FC(v47, v39, a2, &qword_26B1AF9E0, &qword_26B1AF9D8, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_24E10F7D4, (void (*)(uint64_t, uint64_t))sub_24E10E3B4);
  swift_endAccess();
  swift_retain();
  unint64_t v48 = CFNotificationCenterGetDarwinNotifyCenter();
  uint64_t v49 = (__CFString *)sub_24E1161C0();
  CFNotificationCenterAddObserver(v48, v4, (CFNotificationCallback)sub_24E09320C, v49, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  uint64_t v50 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v78, v46);
  a1 = v39;
LABEL_14:
  MEMORY[0x270FA5388](v50);
  *(&v68 - 4) = (uint64_t)v4;
  *(&v68 - 3) = a1;
  *(&v68 - 2) = a2;
  v51(v41);
  sub_24E116760();
  swift_beginAccess();
  uint64_t v52 = v4[16];
  if (*(void *)(v52 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v53 = a1;
    unint64_t v54 = sub_24E093D68(a1, a2);
    double v55 = &unk_26B1AF000;
    if (v56)
    {
      uint64_t v57 = *(void *)(*(void *)(v52 + 56) + 8 * v54);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void *)(v57 + 16);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v58 = 0;
    }
    uint64_t v59 = v79;
    swift_bridgeObjectRelease();
    a1 = v53;
  }
  else
  {
    uint64_t v58 = 0;
    uint64_t v59 = v79;
    double v55 = (void *)&unk_26B1AF000;
  }
  if (v55[300] != -1) {
    swift_once();
  }
  uint64_t v60 = sub_24E115F00();
  __swift_project_value_buffer(v60, (uint64_t)qword_26B1AF940);
  swift_bridgeObjectRetain_n();
  char v61 = sub_24E115EE0();
  os_log_type_t v62 = sub_24E1169A0();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = a1;
    uint64_t v64 = swift_slowAlloc();
    unint64_t v65 = a2;
    uint64_t v66 = swift_slowAlloc();
    uint64_t v84 = v66;
    *(_DWORD *)uint64_t v64 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_24E090400(v63, v65, &v84);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v64 + 12) = 2048;
    uint64_t v83 = v58;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v61, v62, "Creating sub AsyncStream for DarwinNotification name: [%s], count: %ld", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v66, -1, -1);
    MEMORY[0x2533338B0](v64, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v81, v82);
}

uint64_t sub_24E092270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9D0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C8);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24E0923FC((uint64_t)v9, a3, a4, &qword_26B1AF9D0, &qword_26B1AF9C8, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_24E10F808, (void (*)(uint64_t, uint64_t))sub_24E10E3D4);
  return swift_endAccess();
}

uint64_t sub_24E0923FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  char v24 = a6;
  uint64_t v11 = v7;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1, v18) == 1)
  {
    sub_24E095494(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease();
    return sub_24E095494((uint64_t)v17, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    v24(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = v25;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24E0925F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBE0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24E095494(a1, &qword_26B1AEBE0);
    sub_24E10E5B4(a2, (uint64_t)v8);
    uint64_t v13 = sub_24E115E00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_24E095494((uint64_t)v8, &qword_26B1AEBE0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_24E10FB5C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24E115E00();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_24E092820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_24E094E10((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_24E10FD64(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24E095494(a1, &qword_26B1AEBD8);
    sub_24E10E78C(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_24E095494((uint64_t)v9, &qword_26B1AEBD8);
  }
}

uint64_t sub_24E0928F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8))
  {
    long long v6 = *(_OWORD *)(a1 + 80);
    v12[4] = *(_OWORD *)(a1 + 64);
    v12[5] = v6;
    v12[6] = *(_OWORD *)(a1 + 96);
    long long v7 = *(_OWORD *)(a1 + 16);
    v12[0] = *(_OWORD *)a1;
    v12[1] = v7;
    long long v8 = *(_OWORD *)(a1 + 48);
    v12[2] = *(_OWORD *)(a1 + 32);
    uint64_t v12[3] = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_24E10FEB8(v12, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v11;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24E095494(a1, (uint64_t *)&unk_2698B8E80);
    sub_24E10E890(a2, a3, v12);
    swift_bridgeObjectRelease();
    return sub_24E095494((uint64_t)v12, (uint64_t *)&unk_2698B8E80);
  }
}

uint64_t sub_24E0929E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(a2 + 128);
  swift_beginAccess();
  if (*(void *)(*(void *)(a2 + 128) + 16)
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_24E093D68(a3, a4),
        char v14 = v13,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v14 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_24E091340();
    uint64_t v17 = sub_24E092D48(v28, a3, a4);
    if (*v16)
    {
      uint64_t v18 = v16;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      unint64_t v19 = *v18;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v18 = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v19 = sub_24E08B3E4(0, *(void *)(v19 + 16) + 1, 1, v19);
        *uint64_t v18 = v19;
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        unint64_t v19 = sub_24E08B3E4(v21 > 1, v22 + 1, 1, v19);
        *uint64_t v18 = v19;
      }
      *(void *)(v19 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, v11, v8);
      ((void (*)(void *, void))v17)(v28, 0);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(unsigned char *, void))v15)(v29, 0);
    }
    else
    {
      ((void (*)(void *, void))v17)(v28, 0);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(unsigned char *, void))v15)(v29, 0);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFA00);
    unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_24E11BE80;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16))(v25 + v24, a1, v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    v28[0] = *v12;
    *uint64_t v12 = 0x8000000000000000;
    sub_24E10F9EC(v25, a3, a4, v26);
    *uint64_t v12 = v28[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
}

void (*sub_24E092D48(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  long long v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_24E0945D0(v6, a2, a3);
  return sub_24E092DC8;
}

void sub_24E092DC8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t DarwinNotificationHandler.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E092E28()
{
  return v0;
}

uint64_t sub_24E092E34()
{
  if (qword_26B1AF978 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_24E092EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DarwinNotificationHandler();
  return MEMORY[0x270FA2150](v3, a2);
}

uint64_t sub_24E092EE4()
{
  return sub_24E0917E0();
}

uint64_t static DarwinNotificationHandler.currentValue(name:)()
{
  if (qword_26B1AF978 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v0 = sub_24E094974();
  swift_release();
  return v0;
}

uint64_t static DarwinNotificationHandler.asyncStream(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return MEMORY[0x270FA2498](sub_24E092FD4, 0, 0);
}

uint64_t sub_24E092FD4()
{
  if (qword_26B1AF978 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = qword_26B1AF968;
  *(void *)(v0 + 64) = qword_26B1AF968;
  swift_retain();
  return MEMORY[0x270FA2498](sub_24E093094, v1, 0);
}

uint64_t sub_24E093094()
{
  sub_24E0918F4(v0[6], v0[7], v0[5]);
  swift_release();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E093100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a6;
  return MEMORY[0x270FA2498](sub_24E093120, 0, 0);
}

uint64_t sub_24E093120()
{
  uint64_t v1 = (void *)v0[3];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = sub_24E1161F0();
    uint64_t v5 = v4;
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v3;
    v6[3] = v5;
    v6[4] = v2;
    id v7 = v1;
    swift_retain();
    _s10FindMyBase11TransactionC9asyncTask4name5blockys12StaticStringV_yyYaYbctFZ_0("UnregisteredDarwinNotification", 30, 2, (uint64_t)&unk_2698B7D88, (uint64_t)v6);

    swift_release();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_24E09320C(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v11 = a1;
  id v9 = a3;
  id v10 = a5;
  sub_24E094E20(a1, a2, a3, a5);
}

uint64_t sub_24E093298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return MEMORY[0x270FA2498](sub_24E0932BC, 0, 0);
}

uint64_t sub_24E0932BC()
{
  if (qword_26B1AFD70 != -1) {
    swift_once();
  }
  sub_24E117360();
  uint64_t v1 = v0[2];
  v0[8] = v1;
  if (v1)
  {
    uint64_t v2 = v0[6];
    uint64_t v3 = v0[7];
    v0[2] = v0[5];
    v0[3] = v2;
    v0[4] = v1;
    swift_bridgeObjectRetain();
    swift_retain();
    return MEMORY[0x270FA2498](sub_24E0933C8, v3, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_24E0933C8()
{
  sub_24E0934B0((uint64_t *)(v0 + 16), *(void *)(v0 + 64));
  return MEMORY[0x270FA2498](sub_24E093434, 0, 0);
}

uint64_t sub_24E093434()
{
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DarwinNotification.init(name:transaction:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void sub_24E0934B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 128);
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_24E093D68(v9, v8);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_24E1166C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = 0;
      v16[3] = 0;
      v16[4] = a2;
      v16[5] = v14;
      v16[6] = v9;
      v16[7] = v8;
      v16[8] = v10;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24E09A98C((uint64_t)v7, (uint64_t)&unk_2698B7D98, (uint64_t)v16);
      swift_release();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_26B1AF960 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24E115F00();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B1AF940);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v18 = sub_24E115EE0();
  os_log_type_t v19 = sub_24E116990();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v27 = v10;
    uint64_t v28 = v21;
    uint64_t v25 = v9;
    uint64_t v26 = v8;
    uint64_t v22 = DarwinNotification.description.getter();
    uint64_t v25 = sub_24E090400(v22, v23, &v28);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v18, v19, "Received unexpected unregistered notification: [%s]", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v21, -1, -1);
    MEMORY[0x2533338B0](v20, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_24E0937F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9B8);
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9C8);
  v8[14] = v10;
  v8[15] = *(void *)(v10 - 8);
  v8[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E093920, 0, 0);
}

uint64_t sub_24E093920()
{
  if (qword_26B1AFD70 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[7];
  v0[5] = v0[6];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF938);
  swift_task_localValuePush();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[15];
    uint64_t v17 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    unint64_t v4 = v0[7] + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0[12] + 8);
    uint64_t v16 = *(void *)(v3 + 72);
    uint64_t v14 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v0[16];
      uint64_t v7 = v0[13];
      uint64_t v6 = v0[14];
      uint64_t v9 = v0[10];
      uint64_t v8 = v0[11];
      uint64_t v10 = v0[8];
      uint64_t v11 = v0[9];
      v17(v5, v4, v6);
      v0[2] = v10;
      v0[3] = v11;
      v0[4] = v9;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24E116710();
      (*v15)(v7, v8);
      (*v14)(v5, v6);
      v4 += v16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_task_localValuePop();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t DarwinNotification.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DarwinNotification.transaction.getter()
{
  return swift_retain();
}

uint64_t DarwinNotification.description.getter()
{
  return 91;
}

uint64_t sub_24E093C90()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1AF980);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1AF980);
  return sub_24E115EF0();
}

unint64_t sub_24E093D14()
{
  unint64_t result = qword_26B1AEA58;
  if (!qword_26B1AEA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AEA58);
  }
  return result;
}

unint64_t sub_24E093D68(uint64_t a1, uint64_t a2)
{
  sub_24E1171C0();
  sub_24E116320();
  uint64_t v4 = sub_24E1171F0();
  return sub_24E094050(a1, a2, v4);
}

unint64_t sub_24E093DE0(uint64_t a1)
{
  sub_24E115E00();
  sub_24E094DC8((unint64_t *)&qword_26B1AFD60, 255, MEMORY[0x263F07508]);
  uint64_t v2 = sub_24E116120();
  return sub_24E094134(a1, v2);
}

unint64_t sub_24E093E7C(uint64_t a1)
{
  sub_24E1161F0();
  sub_24E1171C0();
  sub_24E116320();
  uint64_t v2 = sub_24E1171F0();
  swift_bridgeObjectRelease();
  return sub_24E0942F8(a1, v2);
}

unint64_t sub_24E093F10(uint64_t a1, uint64_t a2)
{
  sub_24E1171C0();
  swift_bridgeObjectRetain();
  sub_24E116320();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_24E1171F0();
  return sub_24E094050(a1, a2, v4);
}

unint64_t sub_24E093F98(uint64_t a1)
{
  sub_24E1171C0();
  type metadata accessor for CFString(0);
  sub_24E094DC8((unint64_t *)&unk_26B1AEA80, 255, type metadata accessor for CFString);
  sub_24E115EB0();
  uint64_t v2 = sub_24E1171F0();
  return sub_24E094470(a1, v2);
}

unint64_t sub_24E094050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24E1170B0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24E1170B0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24E094134(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    char v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_24E094DC8(&qword_26B1AE868, 255, MEMORY[0x263F07508]);
      char v15 = sub_24E116190();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_24E0942F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_24E1161F0();
    uint64_t v8 = v7;
    if (v6 == sub_24E1161F0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_24E1161F0();
          uint64_t v15 = v14;
          if (v13 == sub_24E1161F0() && v15 == v16) {
            break;
          }
          char v18 = sub_24E1170B0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_24E094470(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_24E094DC8((unint64_t *)&unk_26B1AEA80, 255, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_24E115EA0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_24E115EA0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

void (*sub_24E0945D0(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_24E094888(v6);
  v6[10] = sub_24E0946F0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_24E09467C;
}

void sub_24E09467C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_24E0946F0(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  unint64_t v5 = v4;
  id v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_24E093D68(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *id v10 = v19;
        return sub_24E094838;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_24E0B3744();
      goto LABEL_7;
    }
    sub_24E0B1F10(v16, a4 & 1);
    unint64_t v20 = sub_24E093D68(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  unint64_t result = (void (*)(uint64_t **))sub_24E117150();
  __break(1u);
  return result;
}

void sub_24E094838(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_24E0948C4(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_24E094888(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_24E0948B8;
}

uint64_t sub_24E0948B8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_24E0948C4(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_24E11024C(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_24E10ECD0(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E094974()
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  int out_token = 0;
  uint64_t v0 = sub_24E1162D0();
  notify_register_check((const char *)(v0 + 32), &out_token);
  swift_release();
  int v1 = out_token;
  if (out_token == -1)
  {
    if (qword_26B1AF960 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E115F00();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1AF940);
    uint64_t v4 = sub_24E115EE0();
    os_log_type_t v5 = sub_24E116980();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_24E083000, v4, v5, "Failed notify_register_check.", v6, 2u);
      MEMORY[0x2533338B0](v6, -1, -1);
    }

    return 0;
  }
  else
  {
    uint64_t state64 = 0;
    notify_get_state(out_token, &state64);
    notify_cancel(v1);
    return state64;
  }
}

uint64_t sub_24E094AD0(uint64_t a1)
{
  return sub_24E092270(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24E094ADC(uint64_t a1)
{
  return sub_24E0929E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24E094AE8(uint64_t a1, uint64_t a2)
{
  return sub_24E094DC8(&qword_2698B7D40, a2, (void (*)(uint64_t))type metadata accessor for DarwinNotificationHandler);
}

uint64_t type metadata accessor for DarwinNotificationHandler()
{
  return self;
}

uint64_t method lookup function for DarwinNotificationHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DarwinNotificationHandler);
}

uint64_t dispatch thunk of DarwinNotificationHandler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DarwinNotificationHandler.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DarwinNotificationHandler.currentValue(name:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DarwinNotificationHandler.asyncStream(name:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t destroy for DarwinNotification()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *_s10FindMyBase18DarwinNotificationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DarwinNotification(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DarwinNotification(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DarwinNotification(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DarwinNotification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DarwinNotification()
{
  return &type metadata for DarwinNotification;
}

uint64_t sub_24E094DC8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_24E094E10(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_24E094E20(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1AF9A0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24E115F00();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B1AF980);
  char v12 = sub_24E115EE0();
  os_log_type_t v13 = sub_24E1169A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_24E083000, v12, v13, "TRACE: rawCallback", v14, 2u);
    MEMORY[0x2533338B0](v14, -1, -1);
  }

  if (a2)
  {
    uint64_t v15 = sub_24E1166C0();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    swift_retain();
    v16(v10, 1, 1, v15);
    char v17 = (void *)swift_allocObject();
    void v17[2] = 0;
    v17[3] = 0;
    v17[4] = a2;
    v17[5] = a1;
    v17[6] = a3;
    v17[7] = a4;
    id v18 = a4;
    id v19 = a1;
    id v20 = a3;
    sub_24E09A98C((uint64_t)v10, (uint64_t)&unk_2698B7D78, (uint64_t)v17);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24E09500C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24E095064()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  uint64_t v4[2] = v2;
  void v4[3] = v3;
  v4[1] = sub_24E095114;
  return MEMORY[0x270FA2498](sub_24E093120, 0, 0);
}

uint64_t sub_24E095114()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E095208()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E095248()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_24E095558;
  *(_OWORD *)(v3 + 48) = v4;
  *(void *)(v3 + 40) = v2;
  return MEMORY[0x270FA2498](sub_24E0932BC, 0, 0);
}

uint64_t sub_24E0952FC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24E095354(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24E095558;
  return sub_24E0937F4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24E095494(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24E0954F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(void *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_24E116A90();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a3 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v6[16] = v9;
  v6[17] = *(void *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E095770, 0, 0);
}

uint64_t sub_24E095770()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  v0[2] = sub_24E116040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_24E116470();
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    char v12 = (void *)swift_task_alloc();
    v0[19] = v12;
    *char v12 = v0;
    v12[1] = sub_24E0959C0;
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[9];
    return v15(v14, v13);
  }
}

uint64_t sub_24E0959C0()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24E095D18;
  }
  else
  {
    uint64_t v2 = sub_24E095ADC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E095ADC()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_24E116610();
  sub_24E1165F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v7 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  else
  {
    uint64_t v10 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24E0959C0;
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[9];
    return v14(v13, v12);
  }
}

uint64_t sub_24E095D18()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v9 = sub_24E116A90();
  v6[9] = v9;
  v6[10] = *(void *)(v9 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = *(void *)(a4 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  v6[16] = *(void *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  sub_24E116A90();
  v6[18] = swift_task_alloc();
  v6[19] = *(void *)(a3 - 8);
  v6[20] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v6[21] = v11;
  v6[22] = *(void *)(v11 - 8);
  v6[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0960A8, 0, 0);
}

uint64_t sub_24E0960A8()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  v0[2] = sub_24E116040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_24E116470();
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[16];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[24] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_24E096314;
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[11];
    return v15(v14, v13);
  }
}

uint64_t sub_24E096314()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24E096754;
  }
  else
  {
    uint64_t v2 = sub_24E096430;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E096430()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[6];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  uint64_t v6 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v7 = v0[15];
  if (v4 == 1)
  {
    uint64_t v9 = v0[9];
    uint64_t v8 = v0[10];
    (*(void (**)(void, void))(v6 + 8))(v0[17], v0[15]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v9);
  }
  else
  {
    uint64_t v11 = v0[13];
    uint64_t v10 = v0[14];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v11, v10, v3);
    sub_24E116610();
    sub_24E1165F0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t v12 = v0[18];
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[16];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    uint64_t v15 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(v15);
  }
  else
  {
    id v18 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v18 + *v18);
    id v19 = (void *)swift_task_alloc();
    v0[24] = v19;
    *id v19 = v0;
    v19[1] = sub_24E096314;
    uint64_t v20 = v0[17];
    uint64_t v21 = v0[11];
    return v22(v21, v20);
  }
}

uint64_t sub_24E096754()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence.asyncFirst(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v6[9] = *(void *)(AssociatedTypeWitness - 8);
  v6[10] = swift_task_alloc();
  sub_24E116A90();
  v6[11] = swift_task_alloc();
  v6[12] = *(void *)(a4 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v6[14] = v9;
  v6[15] = *(void *)(v9 - 8);
  v6[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E096A3C, 0, 0);
}

uint64_t sub_24E096A3C()
{
  (*(void (**)(void, void, void))(v0[12] + 16))(v0[13], v0[7], v0[5]);
  sub_24E116470();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[2], 1, 1, v0[8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[9];
    uint64_t v10 = (int *)v0[3];
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v0[17] = v11;
    v0[18] = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v11(v6, v7, v8);
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_24E096C84;
    uint64_t v13 = v0[10];
    return v14(v13);
  }
}

uint64_t sub_24E096C84(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E09701C;
  }
  else
  {
    *(unsigned char *)(v4 + 168) = a1 & 1;
    uint64_t v5 = sub_24E096DB0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E096DB0()
{
  if (*(unsigned char *)(v0 + 168))
  {
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 16);
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    v1(v4, v2, v3);
    uint64_t v5 = 0;
LABEL_5:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 72) + 56))(*(void *)(v0 + 16), v5, 1, *(void *)(v0 + 64));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    uint64_t v5 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v15 = *(int **)(v0 + 24);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  *(void *)(v0 + 136) = v16;
  *(void *)(v0 + 144) = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v16(v11, v12, v13);
  id v19 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
  char v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v17;
  void *v17 = v0;
  v17[1] = sub_24E096C84;
  uint64_t v18 = *(void *)(v0 + 80);
  return v19(v18);
}

uint64_t sub_24E09701C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence.asyncForEach(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  sub_24E116A90();
  v5[10] = swift_task_alloc();
  v5[11] = *(void *)(a3 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0972D0, 0, 0);
}

uint64_t sub_24E0972D0()
{
  (*(void (**)(void, void, void))(v0[11] + 16))(v0[12], v0[6], v0[4]);
  sub_24E116470();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[2];
    (*(void (**)(void, void, void))(v0[8] + 32))(v0[9], v0[10], v0[7]);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24E0974E8;
    uint64_t v8 = v0[9];
    return v9(v8);
  }
}

uint64_t sub_24E0974E8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0977F0;
  }
  else {
    uint64_t v2 = sub_24E0975FC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0975FC()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[2];
    (*(void (**)(void, void, void))(v0[8] + 32))(v0[9], v0[10], v0[7]);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24E0974E8;
    uint64_t v8 = v0[9];
    return v9(v8);
  }
}

uint64_t sub_24E0977F0()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence.asyncFilter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[8] = AssociatedTypeWitness;
  v5[9] = *(void *)(AssociatedTypeWitness - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  sub_24E116A90();
  v5[12] = swift_task_alloc();
  v5[13] = *(void *)(a3 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v5[15] = v8;
  v5[16] = *(void *)(v8 - 8);
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E097ABC, 0, 0);
}

uint64_t sub_24E097ABC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  v0[2] = sub_24E116040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_24E116470();
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[9] + 32))(v0[11], v0[12], v0[8]);
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[18] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_24E097D08;
    uint64_t v13 = v0[11];
    return v14(v13);
  }
}

uint64_t sub_24E097D08(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_24E098090;
  }
  else
  {
    *(unsigned char *)(v4 + 160) = a1 & 1;
    uint64_t v5 = sub_24E097E3C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E097E3C()
{
  if (*(unsigned char *)(v0 + 160))
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 72) + 16))(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 64));
    sub_24E116610();
    sub_24E1165F0();
  }
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  swift_getAssociatedConformanceWitness();
  sub_24E116AA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    uint64_t v4 = *(void *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v5(v4);
  }
  else
  {
    uint64_t v7 = *(int **)(v0 + 24);
    (*(void (**)(void, void, void))(*(void *)(v0 + 72) + 32))(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 64));
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_24E097D08;
    uint64_t v9 = *(void *)(v0 + 88);
    return v10(v9);
  }
}

uint64_t sub_24E098090()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t BinaryEncoder.encode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for BinaryDataEncoderStorage();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24E11BB50;
  uint64_t v7 = v6 + 16;
  v10[3] = &type metadata for _BinaryEncoder;
  v10[4] = &off_27002CFA8;
  v10[0] = v6;
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(a3 + 8);
  swift_retain();
  v8(v10, a2, a3);
  if (v3)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 16);
    sub_24E08D248(v7, *(void *)(v6 + 24));
    swift_release();
  }
  return v7;
}

uint64_t type metadata accessor for BinaryDataEncoderStorage()
{
  return self;
}

ValueMetadata *type metadata accessor for BinaryEncoder()
{
  return &type metadata for BinaryEncoder;
}

uint64_t sub_24E0982B4()
{
  sub_24E08D0B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for _BinaryEncoder()
{
  return &type metadata for _BinaryEncoder;
}

uint64_t sub_24E0982FC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  a1[3] = &type metadata for BinaryEncodingContainer;
  a1[4] = &off_27002D5E0;
  *a1 = v2;
  return swift_retain();
}

ValueMetadata *type metadata accessor for BinaryEncodingContainer()
{
  return &type metadata for BinaryEncodingContainer;
}

uint64_t sub_24E09832C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = FixedWidthInteger.bytes.getter(a3, a4);
  swift_beginAccess();
  if (*(void *)(v4 + 16)) {
    sub_24E115BC0();
  }
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0983B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v8[0] = a2;
  void v8[3] = &type metadata for _BinaryEncoder;
  v8[4] = &off_27002CFA8;
  uint64_t v6 = *(void (**)(void *, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  v6(v8, a3, a4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_24E098444(uint64_t a1, unint64_t a2)
{
  void v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_24E08D248(a1, a2);
      sub_24E08D248(v5, v6);
      sub_24E098880((int)v5, v5 >> 32);
      sub_24E08D0B0(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_24E08D248(a1, a2);
      swift_retain();
      swift_retain();
      sub_24E098880(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_24E08D248(a1, a2);
      sub_24E115BC0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_24E098668()
{
  return swift_endAccess();
}

uint64_t sub_24E0986E4()
{
  uint64_t v0 = sub_24E116200();
  if (v1 >> 60 == 15)
  {
    sub_24E098818();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v3 = v0;
    unint64_t v4 = v1;
    swift_beginAccess();
    sub_24E098444(v3, v4);
    swift_endAccess();
    return sub_24E09886C(v3, v4);
  }
}

uint64_t sub_24E0987AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E09832C(a1, *v3, a2, a3);
}

uint64_t sub_24E0987D0()
{
  return sub_24E098668();
}

uint64_t sub_24E0987F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E0983B4(a1, *v3, a2, a3);
}

unint64_t sub_24E098818()
{
  unint64_t result = qword_2698B7DC8;
  if (!qword_2698B7DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7DC8);
  }
  return result;
}

uint64_t sub_24E09886C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24E08D0B0(a1, a2);
  }
  return a1;
}

uint64_t sub_24E098880(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24E115980();
  if (!result || (uint64_t result = sub_24E1159B0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24E1159A0();
      return sub_24E115BC0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t SynchronousCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SynchronousCache.init()();
  return v0;
}

uint64_t SynchronousCache.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBC0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = sub_24E116030();
  return v0;
}

uint64_t SynchronousCache.cachedValue<A>(key:computeBlock:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v36 = a5;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  os_log_type_t v35 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v29 - v11;
  uint64_t v12 = sub_24E116A90();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v38 = a4;
  uint64_t v39 = v5;
  uint64_t v33 = a1;
  uint64_t v34 = v5;
  uint64_t v40 = a1;
  uint64_t v29 = v19;
  OSAllocatedUnfairLock.callAsFunction<A>(_:)((uint64_t)sub_24E098DF4, (uint64_t)v37, v19);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, a4);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  if (v20 == 1)
  {
    uint64_t v22 = v21(v16, v12);
    uint64_t v23 = (uint64_t)v35;
    uint64_t v24 = v32(v22);
    MEMORY[0x270FA5388](v24);
    uint64_t v25 = v34;
    *(&v29 - 4) = a4;
    *(&v29 - 3) = v25;
    *(&v29 - 2) = v33;
    *(&v29 - 1) = v23;
    OSAllocatedUnfairLock.callAsFunction<A>(_:)((uint64_t)sub_24E099628, (uint64_t)(&v29 - 6), v29);
    v21(v18, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v23, a4);
  }
  else
  {
    v21(v18, v12);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v28 = v30;
    v27(v30, v16, a4);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v36, v28, a4);
  }
}

uint64_t sub_24E098CEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a1;
  swift_beginAccess();
  MEMORY[0x253331D50](v11, a2, a1[3], *(void *)(v8 + 80), MEMORY[0x263F8EE58] + 8, *(void *)(v8 + 88));
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  int v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v9 ^ 1u, 1, a3);
}

uint64_t sub_24E098DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_24E098CEC(*(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_24E098E14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v75 = a5;
  unint64_t v71 = a3;
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(*a1 + 80);
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  v73 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  int v70 = (char *)v58 - v12;
  uint64_t v13 = sub_24E116A90();
  char v67 = *(void **)(v13 - 8);
  uint64_t v68 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v58 - v15;
  uint64_t v17 = *(void **)(a4 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  char v69 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v74 = (char *)v58 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v72 = (char *)v58 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v58 - v24;
  swift_beginAccess();
  MEMORY[0x253331D50](v76, a2, a1[3], v9, MEMORY[0x263F8EE58] + 8, *(void *)(v8 + 88));
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  char v26 = swift_dynamicCast();
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v17[7];
  if (v26)
  {
    uint64_t v28 = v79;
    v27(v16, 0, 1, a4);
    uint64_t v66 = (void (*)(char *, char *, uint64_t))v17[4];
    char v67 = v17 + 4;
    v66(v25, v16, a4);
    uint64_t v29 = v25;
    if (qword_26B1AF8D8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_24E115F00();
    __swift_project_value_buffer(v30, (uint64_t)qword_26B1B13B0);
    uint64_t v31 = (void (*)(char *, char *, uint64_t))v17[2];
    v31(v72, v29, a4);
    uint64_t v68 = (uint64_t)v29;
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v63(v73, a2, v9);
    unint64_t v65 = v31;
    v31(v74, (char *)v71, a4);
    uint64_t v32 = sub_24E115EE0();
    os_log_type_t v33 = sub_24E116960();
    int v34 = v33;
    unint64_t v71 = v32;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      int v62 = v34;
      uint64_t v36 = v35;
      uint64_t v61 = swift_slowAlloc();
      v76[0] = v61;
      *(_DWORD *)uint64_t v36 = 141559043;
      uint64_t v77 = 1752392040;
      v58[1] = &v78;
      sub_24E116AB0();
      uint64_t v59 = v9;
      uint64_t v64 = v17;
      *(_WORD *)(v36 + 12) = 2081;
      uint64_t v37 = v72;
      v65(v69, v72, a4);
      uint64_t v38 = sub_24E116290();
      uint64_t v77 = sub_24E090400(v38, v39, v76);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      uint64_t v40 = (void (*)(char *, uint64_t))v64[1];
      ++v64;
      uint64_t v60 = v40;
      v40(v37, a4);
      *(_WORD *)(v36 + 22) = 2082;
      char v41 = v73;
      uint64_t v42 = v59;
      v63(v70, (uint64_t)v73, v59);
      uint64_t v43 = sub_24E116290();
      uint64_t v44 = v79;
      uint64_t v77 = sub_24E090400(v43, v45, v76);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v42);
      *(_WORD *)(v36 + 32) = 2160;
      uint64_t v77 = 1752392040;
      sub_24E116AB0();
      *(_WORD *)(v36 + 42) = 2081;
      uint64_t v46 = v74;
      v65(v69, v74, a4);
      uint64_t v47 = sub_24E116290();
      uint64_t v77 = sub_24E090400(v47, v48, v76);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      v60(v46, a4);
      uint64_t v49 = v68;
      uint64_t v50 = v71;
      _os_log_impl(&dword_24E083000, v71, (os_log_type_t)v62, "Some other thread already stored value %{private,mask.hash}s for '%{public}s' -- ignoring computed value: %{private,mask.hash}s", (uint8_t *)v36, 0x34u);
      uint64_t v51 = v61;
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v51, -1, -1);
      MEMORY[0x2533338B0](v36, -1, -1);

      uint64_t v52 = v75;
    }
    else
    {
      uint64_t v57 = (void (*)(char *, uint64_t))v17[1];
      v57(v72, a4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v73, v9);
      v57(v74, a4);

      uint64_t v52 = v75;
      uint64_t v49 = v68;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v66)(v52, v49, a4);
  }
  else
  {
    v27(v16, 1, 1, a4);
    ((void (*)(char *, uint64_t))v67[1])(v16, v68);
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v70, a2, v9);
    v76[3] = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
    unint64_t v54 = (void (*)(uint64_t *, NSObject *, uint64_t))v17[2];
    double v55 = v71;
    v54(boxed_opaque_existential_1, v71, a4);
    swift_beginAccess();
    sub_24E1160F0();
    sub_24E116110();
    swift_endAccess();
    return ((uint64_t (*)(uint64_t, NSObject *, uint64_t))v54)(v75, v55, a4);
  }
}

uint64_t sub_24E099628@<X0>(uint64_t a1@<X8>)
{
  return sub_24E098E14(*(void **)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40), *(void *)(v1 + 16), a1);
}

void SynchronousCache.clear(key:)()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_24E0999A8();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24E0996B4(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(unsigned char *))(v2 + 16))(&v4[-v1]);
  memset(&v4[32], 0, 32);
  swift_beginAccess();
  sub_24E1160F0();
  sub_24E116110();
  return swift_endAccess();
}

uint64_t sub_24E0997F0()
{
  return sub_24E0996B4(*(void *)(v0 + 16));
}

Swift::Void __swiftcall SynchronousCache.clear()()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_24E099AB8();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24E099870()
{
  return swift_endAccess();
}

uint64_t SynchronousCache.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SynchronousCache.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24E099980(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_24E0999A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24E0999D0()
{
  return sub_24E099870();
}

uint64_t sub_24E0999F0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SynchronousCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SynchronousCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SynchronousCache);
}

uint64_t dispatch thunk of SynchronousCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E099AB8()
{
  return sub_24E0999A8();
}

uint64_t URL.isDirectory.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE580);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE5E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E11BE80;
  unint64_t v4 = (void *)*MEMORY[0x263EFF6A8];
  *(void *)(inited + 32) = *MEMORY[0x263EFF6A8];
  id v5 = v4;
  sub_24E09A2A8(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_24E115B10();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_24E115AD0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v2, 1, v6) == 1)
  {
    sub_24E09A4D8((uint64_t)v2);
    return 0;
  }
  else
  {
    char v9 = sub_24E115AA0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v2, v6);
    return v9 & 1;
  }
}

uint64_t URL.setExtendedAttribute(name:value:)()
{
  return sub_24E115B40();
}

uint64_t sub_24E099D44(const char *a1, uint64_t a2, unint64_t a3)
{
  value[2] = *MEMORY[0x263EF8340];
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 > a2 >> 32)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      sub_24E08D248(a2, a3);
      char v9 = (char *)sub_24E115980();
      if (v9)
      {
        uint64_t v10 = sub_24E1159B0();
        if (__OFSUB__((int)a2, v10))
        {
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
        }
        v9 += (int)a2 - v10;
      }
      sub_24E1159A0();
      if (__OFSUB__(HIDWORD(a2), a2))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v11 = sub_24E1162D0();
      int v7 = setxattr(a1, (const char *)(v11 + 32), v9, HIDWORD(a2) - (int)a2, 0, 0);
      swift_release();
      uint64_t result = sub_24E08D0B0(a2, a3);
      if (v7 < 0)
      {
LABEL_18:
        sub_24E09A938();
        swift_allocError();
        void *v20 = v7;
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v13 = (char *)sub_24E115980();
      if (!v13) {
        goto LABEL_14;
      }
      uint64_t v14 = sub_24E1159B0();
      if (__OFSUB__(v12, v14)) {
        goto LABEL_24;
      }
      v13 += v12 - v14;
LABEL_14:
      sub_24E1159A0();
      uint64_t v16 = *(void *)(a2 + 16);
      uint64_t v15 = *(void *)(a2 + 24);
      size_t v17 = v15 - v16;
      if (__OFSUB__(v15, v16)) {
        goto LABEL_21;
      }
      uint64_t v18 = sub_24E1162D0();
      int v7 = setxattr(a1, (const char *)(v18 + 32), v13, v17, 0, 0);
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v7 < 0) {
        goto LABEL_18;
      }
      return result;
    case 3uLL:
      memset(value, 0, 14);
      uint64_t v19 = sub_24E1162D0();
      int v7 = setxattr(a1, (const char *)(v19 + 32), value, 0, 0, 0);
      uint64_t result = swift_release();
      if (v7 < 0) {
        goto LABEL_18;
      }
      return result;
    default:
      value[0] = a2;
      LOWORD(value[1]) = a3;
      BYTE2(value[1]) = BYTE2(a3);
      BYTE3(value[1]) = BYTE3(a3);
      BYTE4(value[1]) = BYTE4(a3);
      BYTE5(value[1]) = BYTE5(a3);
      uint64_t v6 = sub_24E1162D0();
      int v7 = setxattr(a1, (const char *)(v6 + 32), value, BYTE6(a3), 0, 0);
      uint64_t result = swift_release();
      if (v7 < 0) {
        goto LABEL_18;
      }
      return result;
  }
}

uint64_t URL.extendedAttribute(name:)()
{
  uint64_t result = sub_24E115B40();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24E09A0BC@<X0>(const char *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_24E1162D0();
  ssize_t v6 = getxattr(a1, (const char *)(v5 + 32), 0, 0, 0, 0);
  swift_release();
  if (v6 < 0)
  {
    sub_24E09A938();
    swift_allocError();
    *char v9 = v6;
    return swift_willThrow();
  }
  else
  {
    *(void *)&long long v10 = sub_24E08DE08(v6);
    *((void *)&v10 + 1) = v7;
    MEMORY[0x270FA5388](v10);
    uint64_t result = sub_24E08C11C((uint64_t (*)(uint64_t, uint64_t))sub_24E09A914);
    if (v2) {
      return sub_24E08D0B0(v10, *((unint64_t *)&v10 + 1));
    }
    else {
      *a2 = v10;
    }
  }
  return result;
}

uint64_t sub_24E09A200(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v9 = sub_24E1162D0();
  ssize_t v10 = getxattr(a3, (const char *)(v9 + 32), a1, a6, 0, 0);
  uint64_t result = swift_release();
  if (v10 < 0)
  {
    sub_24E09A938();
    swift_allocError();
    *uint64_t v12 = v10;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24E09A2A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE5A0);
    uint64_t v3 = sub_24E116C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      ssize_t v6 = *(void **)(v32 + 8 * v4);
      sub_24E1161F0();
      sub_24E1171C0();
      id v7 = v6;
      sub_24E116320();
      uint64_t v8 = sub_24E1171F0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_24E1161F0();
        uint64_t v17 = v16;
        if (v15 == sub_24E1161F0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_24E1170B0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_24E1161F0();
          uint64_t v24 = v23;
          if (v22 == sub_24E1161F0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_24E1170B0();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24E09A4D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E09A538(const char *a1)
{
  return sub_24E099D44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24E09A55C@<X0>(const char *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_24E09A0BC(a1, a2);
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t _s22ExtendedAttributeErrorOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s22ExtendedAttributeErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for URL.ExtendedAttributeError()
{
  return &type metadata for URL.ExtendedAttributeError;
}

uint64_t sub_24E09A5E0(uint64_t a1)
{
  uint64_t v2 = sub_24E1172A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  ssize_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE998);
    uint64_t v9 = sub_24E116C30();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_24E09A8D0(&qword_26B1AEAC8);
      uint64_t v16 = sub_24E116120();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_24E09A8D0(&qword_2698B7DD0);
          char v23 = sub_24E116190();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24E09A8D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24E1172A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E09A914(void *a1, uint64_t a2)
{
  return sub_24E09A200(a1, a2, *(const char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

unint64_t sub_24E09A938()
{
  unint64_t result = qword_2698B7DD8;
  if (!qword_2698B7DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2698B7DD8);
  }
  return result;
}

uint64_t sub_24E09A98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E1166C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24E1166B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24E095494(a1, &qword_26B1AFD40);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24E116640();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24E09AB38()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B13F8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B13F8);
  if (qword_26B1AFA10 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B13D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_24E09AC00()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24E115E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBD0);
  swift_allocObject();
  uint64_t result = sub_24E117350();
  qword_26B1AFBF8 = result;
  return result;
}

uint64_t sub_24E09ACD4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCF0);
  swift_allocObject();
  uint64_t result = sub_24E117350();
  qword_26B1B1430 = result;
  return result;
}

uint64_t WorkItemQueue.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id;
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t WorkItemQueue.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkItemQueue.__allocating_init(identifier:)(uint64_t a1)
{
  uint64_t v2 = sub_24E115E00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E115DB0();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  type metadata accessor for WorkItemQueue(0);
  uint64_t v9 = swift_allocObject();
  WorkItemQueue.init(name:identifier:)(v6, v8, (uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v9;
}

uint64_t WorkItemQueue.__allocating_init(name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  WorkItemQueue.init(name:identifier:)(a1, a2, a3);
  return v6;
}

uint64_t type metadata accessor for WorkItemQueue(uint64_t a1)
{
  return sub_24E0ABC64(a1, (uint64_t *)&unk_26B1AFA18);
}

char *WorkItemQueue.init(name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v66 = a3;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v5 - 8);
  int v62 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v57 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC90);
  uint64_t v56 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC98);
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v12 = v65;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v54 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v53 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB0);
  uint64_t v63 = *(void *)(v16 - 8);
  uint64_t v17 = v63;
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCA0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v53(&v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_stream], 1, 1, v16);
  uint64_t v23 = OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_continuation;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v22, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCD8);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + ((*(unsigned int *)(*(void *)v24 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_24E0954F0((uint64_t)v22, v24 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v24 + 16), &qword_26B1AFCA0);
  sub_24E095494((uint64_t)v22, &qword_26B1AFCA0);
  *(void *)&v4[v23] = v24;
  *(void *)&v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_processTask] = 0;
  v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_flushing] = 0;
  v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_terminating] = 0;
  *(void *)&v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem] = 0;
  uint64_t v25 = &v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id];
  uint64_t v26 = sub_24E115E00();
  uint64_t v58 = *(void *)(v26 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v58 + 16);
  uint64_t v55 = v26;
  v27(v25, v66);
  BOOL v28 = (uint64_t *)&v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_name];
  uint64_t v29 = v61;
  *BOOL v28 = v60;
  v28[1] = v29;
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v30 = v56;
  uint64_t v31 = v59;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v10, *MEMORY[0x263F8F580], v59);
  uint64_t v32 = v54;
  sub_24E1166D0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  uint64_t v33 = v64;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
  uint64_t v61 = v11;
  v34(v64, v32, v11);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v36 = (uint64_t)v57;
  uint64_t v59 = (uint64_t)v19;
  v35(v57, v19, v16);
  uint64_t v60 = v16;
  v53((char *)v36, 0, 1, v16);
  uint64_t v37 = (uint64_t)&v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_stream];
  swift_beginAccess();
  sub_24E0AC8F8(v36, v37, &qword_26B1AFCB8);
  swift_endAccess();
  uint64_t v38 = *(void *)&v4[OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_continuation];
  char v67 = v33;
  uint64_t v39 = v38 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v38 + 16);
  uint64_t v40 = (os_unfair_lock_s *)(v38 + ((*(unsigned int *)(*(void *)v38 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v40);
  sub_24E09B9E8(v39);
  os_unfair_lock_unlock(v40);
  swift_release();
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_24E115F00();
  __swift_project_value_buffer(v41, (uint64_t)qword_26B1B13F8);
  swift_retain_n();
  uint64_t v42 = sub_24E115EE0();
  os_log_type_t v43 = sub_24E116970();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136446466;
    uint64_t v70 = 91;
    unint64_t v71 = 0xE100000000000000;
    uint64_t v68 = *(void *)v4;
    v69[0] = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    uint64_t v70 = sub_24E090400(v70, v71, v69);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v44 + 12) = 2082;
    swift_retain();
    uint64_t v46 = WorkItemQueue.description.getter();
    unint64_t v48 = v47;
    swift_release();
    uint64_t v70 = sub_24E090400(v46, v48, v69);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24E083000, v42, v43, "%{public}s init %{public}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v45, -1, -1);
    MEMORY[0x2533338B0](v44, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v49 = sub_24E1166C0();
  uint64_t v50 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v62, 1, 1, v49);
  uint64_t v51 = (void *)swift_allocObject();
  v51[2] = 0;
  v51[3] = 0;
  v51[4] = v4;
  swift_retain();
  sub_24E09BE84(v50, (uint64_t)&unk_2698B7DE8, (uint64_t)v51);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v66, v55);
  sub_24E095494(v50, &qword_26B1AFD40);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v61);
  return v4;
}

uint64_t sub_24E09B924(uint64_t a1, uint64_t a2)
{
  sub_24E095494(a1, &qword_26B1AFCA0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC98);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_24E09B9E8(uint64_t a1)
{
  return sub_24E09B924(a1, *(void *)(v1 + 16));
}

uint64_t sub_24E09BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  v4[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB8);
  v4[7] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB0);
  v4[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[9] = v7;
  v4[10] = *(void *)(v7 + 64);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E09BB44, a4, 0);
}

uint64_t sub_24E09BB44()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5] + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_stream;
  swift_beginAccess();
  sub_24E0954F0(v4, v3, &qword_26B1AFCB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_24E095494(v0[7], &qword_26B1AFCB8);
  }
  else
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[9];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v19 = v9;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    uint64_t v20 = v6;
    v11(v6, v0[7], v8);
    uint64_t v12 = sub_24E1166C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    uint64_t v13 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v8);
    uint64_t v14 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
    unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v10;
    v16[3] = v14;
    v16[4] = v10;
    v11((uint64_t)v16 + v15, v13, v8);
    swift_retain_n();
    *(void *)(v10 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_processTask) = sub_24E09A98C(v19, (uint64_t)&unk_2698B7F20, (uint64_t)v16);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_24E09BDD0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24E095558;
  return sub_24E09BA04(a1, v4, v5, v6);
}

uint64_t sub_24E09BE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E0954F0(a1, (uint64_t)v8, &qword_26B1AFD40);
  uint64_t v9 = sub_24E1166C0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24E095494((uint64_t)v8, &qword_26B1AFD40);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_24E116640();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E1166B0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t static WorkItemQueue.currentWorkItemQueueIdentifier.getter()
{
  if (qword_26B1AFBF0 != -1) {
    swift_once();
  }
  return sub_24E117360();
}

BOOL static WorkItemQueue.inWorkItemQueueContext.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1AFBF0 != -1) {
    swift_once();
  }
  sub_24E117360();
  uint64_t v3 = sub_24E115E00();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_24E095494((uint64_t)v2, (uint64_t *)&unk_26B1AFD48);
  return v4;
}

uint64_t WorkItemQueue.__allocating_init(identifier:enqueueArtificialDelay:)(uint64_t a1)
{
  uint64_t v2 = sub_24E115E00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E115DB0();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  type metadata accessor for WorkItemQueue(0);
  uint64_t v9 = swift_allocObject();
  WorkItemQueue.init(name:identifier:)(v6, v8, (uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v9;
}

uint64_t sub_24E09C304()
{
  v1[19] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB8);
  v1[20] = swift_task_alloc();
  uint64_t v2 = sub_24E115E00();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCA0);
  v1[25] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC98);
  v1[26] = v3;
  v1[27] = *(void *)(v3 - 8);
  v1[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E09C494, v0, 0);
}

uint64_t sub_24E09C494()
{
  uint64_t v45 = v0;
  uint64_t v2 = (void **)(v0 + 19);
  uint64_t v1 = (void *)v0[19];
  v0[9] = *v1;
  uint64_t v43 = 91;
  unint64_t v44 = 0xE100000000000000;
  v0[29] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
  sub_24E116290();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  uint64_t v3 = (char *)v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_name;
  v0[30] = *(void *)((char *)v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_name);
  v0[31] = *((void *)v3 + 1);
  swift_bridgeObjectRetain();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  unint64_t v4 = v44;
  uint64_t v40 = v43;
  v0[32] = v43;
  v0[33] = v4;
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24E115F00();
  v0[34] = __swift_project_value_buffer(v5, (uint64_t)qword_26B1B13F8);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24E115EE0();
  os_log_type_t v7 = sub_24E1169A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v43 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    swift_bridgeObjectRetain();
    v0[17] = sub_24E090400(v40, v4, &v43);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    v0[18] = sub_24E090400(0x6164696C61766E69, 0xEC00000029286574, &v43);
    uint64_t v2 = (void **)(v0 + 19);
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v6, v7, "%{public}s %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v9, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (sub_24E0AA394())
  {
    swift_bridgeObjectRelease();
    swift_retain_n();
    uint64_t v10 = sub_24E115EE0();
    uint64_t v11 = v2;
    os_log_type_t v12 = sub_24E116990();
    BOOL v13 = os_log_type_enabled(v10, v12);
    uint64_t v14 = *v11;
    if (v13)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = v41;
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v43 = 91;
      unint64_t v44 = 0xE100000000000000;
      v0[14] = *v14;
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      v0[15] = sub_24E090400(v43, v44, &v42);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      v0[16] = sub_24E090400(0x6164696C61766E69, 0xEC00000029286574, &v42);
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v10, v12, "%{public}s: %s Will deadlock when called from a WorkItemQueue context!", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v41, -1, -1);
      MEMORY[0x2533338B0](v15, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v20 = *(void *)(v0[19] + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem);
    v0[40] = v20;
    if (v20)
    {
      swift_retain();
      uint64_t v21 = (void *)swift_task_alloc();
      v0[41] = v21;
      *uint64_t v21 = v0;
      uint64_t v22 = sub_24E09D684;
LABEL_13:
      v21[1] = v22;
      return sub_24E0E7DCC();
    }
    goto LABEL_18;
  }
  uint64_t v16 = v0[25];
  uint64_t v17 = *(void *)(v0[19] + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_continuation);
  uint64_t v18 = v17 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v17 + 16);
  uint64_t v19 = (os_unfair_lock_s *)(v17 + ((*(unsigned int *)(*(void *)v17 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v19);
  sub_24E09DC14(v18, v16);
  os_unfair_lock_unlock(v19);
  uint64_t v24 = v0[26];
  uint64_t v25 = v0[27];
  uint64_t v26 = v0[25];
  if ((*(unsigned int (**)(void, uint64_t, void))(v0[27] + 48))(v0[25], 1, v0[26]) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24E095494(v26, &qword_26B1AFCA0);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v25 + 32))(v0[28], v26, v24);
  swift_bridgeObjectRetain_n();
  BOOL v28 = sub_24E115EE0();
  os_log_type_t v29 = sub_24E116970();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v43 = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    swift_bridgeObjectRetain();
    v0[13] = sub_24E090400(v40, v4, &v43);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v28, v29, "%{public}s Removing continuation", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v31, -1, -1);
    MEMORY[0x2533338B0](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_unfair_lock_lock(v19);
  sub_24E09DC48(v18);
  os_unfair_lock_unlock(v19);
  uint64_t v32 = v0[19];
  *(unsigned char *)(v32 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_flushing) = 1;
  uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem);
  v0[35] = v33;
  if (v33)
  {
    swift_retain();
    uint64_t v21 = (void *)swift_task_alloc();
    v0[36] = v21;
    *uint64_t v21 = v0;
    uint64_t v22 = sub_24E09CE9C;
    goto LABEL_13;
  }
  uint64_t v35 = v0[23];
  uint64_t v34 = v0[24];
  uint64_t v36 = v0[21];
  uint64_t v37 = v0[22];
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v34, v36);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v38 = sub_24E0EAD8C(3, v35, (uint64_t)&unk_2698B88F0, 0, 0, 0);
  v0[37] = v38;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v34, v36);
  sub_24E09DCC0(v38);
  uint64_t v39 = (void *)swift_task_alloc();
  v0[38] = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_24E09D120;
  return sub_24E0E8418();
}

uint64_t sub_24E09CE9C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E09CFC8, v1, 0);
}

uint64_t sub_24E09CFC8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v5 = sub_24E0EAD8C(3, v1, (uint64_t)&unk_2698B88F0, 0, 0, 0);
  v0[37] = v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_24E09DCC0(v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[38] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24E09D120;
  return sub_24E0E8418();
}

uint64_t sub_24E09D120()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24E09D830;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 152);
    uint64_t v4 = sub_24E09D248;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_24E09D248()
{
  uint64_t v25 = v0;
  swift_retain_n();
  uint64_t v1 = sub_24E115EE0();
  os_log_type_t v2 = sub_24E1169A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (void *)v0[19];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v22 = v5;
    uint64_t v23 = 91;
    unint64_t v24 = 0xE100000000000000;
    v0[11] = *v3;
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[12] = sub_24E090400(v23, v24, &v22);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24E083000, v1, v2, "%{public}s Invalidation completed", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v5, -1, -1);
    MEMORY[0x2533338B0](v4, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24E115EE0();
  os_log_type_t v7 = sub_24E116970();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[33];
  if (v8)
  {
    uint64_t v10 = v0[32];
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    swift_bridgeObjectRetain();
    v0[10] = sub_24E090400(v10, v9, &v23);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v6, v7, "%{public}s Removing stream", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v12, -1, -1);
    MEMORY[0x2533338B0](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = v0[27];
  uint64_t v13 = v0[28];
  uint64_t v15 = v0[26];
  uint64_t v17 = v0[19];
  uint64_t v16 = v0[20];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  uint64_t v19 = v17 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_stream;
  swift_beginAccess();
  sub_24E0AC8F8(v16, v19, &qword_26B1AFCB8);
  swift_endAccess();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_24E09D684()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E09D830()
{
  uint64_t v25 = v0;
  uint64_t v1 = (void *)v0[39];
  swift_retain();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  uint64_t v4 = sub_24E115EE0();
  os_log_type_t v5 = sub_24E116990();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[39];
    uint64_t v19 = v0[27];
    uint64_t v20 = v0[26];
    uint64_t v21 = v0[28];
    os_log_type_t v7 = (void *)v0[19];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446722;
    uint64_t v22 = v18;
    uint64_t v23 = 91;
    unint64_t v24 = 0xE100000000000000;
    v0[5] = *v7;
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[6] = sub_24E090400(v23, v24, &v22);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    v0[7] = sub_24E090400(0x6164696C61766E69, 0xEC00000029286574, &v22);
    sub_24E116AB0();
    *(_WORD *)(v8 + 22) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v10;
    sub_24E116AB0();
    void *v17 = v10;

    _os_log_impl(&dword_24E083000, v4, v5, "%{public}s Error in %s: %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v18, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v11 = (void *)v0[39];
    uint64_t v13 = v0[27];
    uint64_t v12 = v0[28];
    uint64_t v14 = v0[26];
    swift_release();

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_24E09DC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E0954F0(a1, a2, &qword_26B1AFCA0);
}

uint64_t sub_24E09DC48(uint64_t a1)
{
  sub_24E095494(a1, &qword_26B1AFCA0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_24E09DCC0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC88);
  uint64_t v53 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v50 - v11;
  if (qword_26B1AFBE8 != -1) {
    swift_once();
  }
  sub_24E117360();
  uint64_t v13 = v58;
  if (!v58) {
    uint64_t v13 = MEMORY[0x263F8EE88];
  }
  v60[2] = v13;
  uint64_t v56 = v1;
  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, (uint64_t)v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id, v6);
  sub_24E0CEBB0((uint64_t)v12, v10);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v54 = v6;
  uint64_t v16 = v15(v12, v6);
  MEMORY[0x270FA5388](v16);
  uint64_t v55 = v14;
  *(&v50 - 2) = v14;
  uint64_t v18 = (uint64_t *)&v17[4];
  uint64_t v19 = v17 + 6;
  os_unfair_lock_lock(v17 + 6);
  sub_24E0AC814(v18, &v58);
  os_unfair_lock_unlock(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v20);
  *(&v50 - 2) = v55;
  uint64_t v22 = v21 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v21 + 16);
  uint64_t v23 = (os_unfair_lock_s *)(v21 + ((*(unsigned int *)(*(void *)v21 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v23);
  sub_24E0AC830(v22);
  os_unfair_lock_unlock(v23);
  MEMORY[0x270FA5388](v24);
  *(&v50 - 2) = (uint64_t)&unk_2698B7F08;
  *(&v50 - 1) = a1;
  uint64_t v26 = (uint64_t *)(v25 + 16);
  uint64_t v27 = (os_unfair_lock_s *)(v25 + 32);
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_24E0AC8DC(v26);
  os_unfair_lock_unlock(v27);
  swift_release();
  BOOL v28 = v56;
  switch(*(unsigned char *)(a1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_itemType))
  {
    case 1:
      if (qword_26B1AFA38 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_24E115F00();
      __swift_project_value_buffer(v37, (uint64_t)qword_26B1B13F8);
      swift_retain_n();
      swift_retain_n();
      uint64_t v30 = sub_24E115EE0();
      os_log_type_t v31 = sub_24E116970();
      if (!os_log_type_enabled(v30, v31)) {
        goto LABEL_23;
      }
      uint64_t v32 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v55 = v38;
      *(_DWORD *)uint64_t v32 = 136446722;
      uint64_t v51 = v32 + 4;
      unint64_t v59 = 0xE100000000000000;
      v60[0] = v38;
      uint64_t v57 = *v28;
      uint64_t v58 = 91;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      uint64_t v52 = v5;
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      uint64_t v58 = sub_24E090400(v58, v59, v60);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v58 = sub_24E090400(0xD000000000000018, 0x800000024E118640, v60);
      sub_24E116AB0();
      *(_WORD *)(v32 + 22) = 2082;
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v39 = sub_24E117040();
      uint64_t v58 = sub_24E090400(v39, v40, v60);
      os_log_type_t v5 = v52;
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v36 = "%{public}s %s will insert item %{public}s [BARRIER]";
      goto LABEL_22;
    case 2:
      if (qword_26B1AFA38 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_24E115F00();
      __swift_project_value_buffer(v41, (uint64_t)qword_26B1B13F8);
      swift_retain_n();
      swift_retain_n();
      uint64_t v30 = sub_24E115EE0();
      os_log_type_t v31 = sub_24E116970();
      if (!os_log_type_enabled(v30, v31)) {
        goto LABEL_23;
      }
      uint64_t v32 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v55 = v42;
      *(_DWORD *)uint64_t v32 = 136446722;
      uint64_t v51 = v32 + 4;
      unint64_t v59 = 0xE100000000000000;
      v60[0] = v42;
      uint64_t v57 = *v28;
      uint64_t v58 = 91;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      uint64_t v52 = v5;
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      uint64_t v58 = sub_24E090400(v58, v59, v60);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v58 = sub_24E090400(0xD000000000000018, 0x800000024E118640, v60);
      sub_24E116AB0();
      *(_WORD *)(v32 + 22) = 2082;
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v43 = sub_24E117040();
      uint64_t v58 = sub_24E090400(v43, v44, v60);
      os_log_type_t v5 = v52;
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v36 = "%{public}s %s will insert item %{public}s [FLUSH BARRIER]";
      goto LABEL_22;
    case 3:
      if (qword_26B1AFA38 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_24E115F00();
      __swift_project_value_buffer(v45, (uint64_t)qword_26B1B13F8);
      swift_retain_n();
      swift_retain_n();
      uint64_t v30 = sub_24E115EE0();
      os_log_type_t v31 = sub_24E116970();
      if (!os_log_type_enabled(v30, v31)) {
        goto LABEL_23;
      }
      uint64_t v32 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v55 = v46;
      *(_DWORD *)uint64_t v32 = 136446722;
      uint64_t v51 = v32 + 4;
      unint64_t v59 = 0xE100000000000000;
      v60[0] = v46;
      uint64_t v57 = *v28;
      uint64_t v58 = 91;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      uint64_t v52 = v5;
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      uint64_t v58 = sub_24E090400(v58, v59, v60);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v58 = sub_24E090400(0xD000000000000018, 0x800000024E118640, v60);
      sub_24E116AB0();
      *(_WORD *)(v32 + 22) = 2082;
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v47 = sub_24E117040();
      uint64_t v58 = sub_24E090400(v47, v48, v60);
      os_log_type_t v5 = v52;
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v36 = "%{public}s %s will insert item %{public}s [TERMINATOR]";
      goto LABEL_22;
    default:
      if (qword_26B1AFA38 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_24E115F00();
      __swift_project_value_buffer(v29, (uint64_t)qword_26B1B13F8);
      swift_retain_n();
      swift_retain_n();
      uint64_t v30 = sub_24E115EE0();
      os_log_type_t v31 = sub_24E116970();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v55 = v33;
        *(_DWORD *)uint64_t v32 = 136446722;
        uint64_t v51 = v32 + 4;
        unint64_t v59 = 0xE100000000000000;
        v60[0] = v33;
        uint64_t v57 = *v28;
        uint64_t v58 = 91;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
        sub_24E116290();
        uint64_t v52 = v5;
        sub_24E116370();
        swift_bridgeObjectRelease();
        sub_24E116370();
        swift_bridgeObjectRetain();
        sub_24E116370();
        swift_bridgeObjectRelease();
        sub_24E116370();
        uint64_t v58 = sub_24E090400(v58, v59, v60);
        sub_24E116AB0();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v58 = sub_24E090400(0xD000000000000018, 0x800000024E118640, v60);
        sub_24E116AB0();
        *(_WORD *)(v32 + 22) = 2082;
        sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
        uint64_t v34 = sub_24E117040();
        uint64_t v58 = sub_24E090400(v34, v35, v60);
        os_log_type_t v5 = v52;
        sub_24E116AB0();
        swift_bridgeObjectRelease();
        swift_release_n();
        uint64_t v36 = "%{public}s %s will insert item %{public}s";
LABEL_22:
        _os_log_impl(&dword_24E083000, v30, v31, v36, (uint8_t *)v32, 0x20u);
        uint64_t v49 = v55;
        swift_arrayDestroy();
        MEMORY[0x2533338B0](v49, -1, -1);
        MEMORY[0x2533338B0](v32, -1, -1);
      }
      else
      {
LABEL_23:
        swift_release_n();
        swift_release_n();
      }

      uint64_t v58 = a1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC98);
      sub_24E116710();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v5, v3);
      return;
  }
}

uint64_t WorkItemQueue.deinit()
{
  uint64_t v1 = v0;
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13F8);
  swift_retain_n();
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116970();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    uint64_t v13 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    sub_24E090400(91, 0xE100000000000000, &v13);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 12) = 2082;
    swift_retain();
    uint64_t v7 = WorkItemQueue.description.getter();
    unint64_t v9 = v8;
    swift_release();
    sub_24E090400(v7, v9, &v13);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24E083000, v3, v4, "%{public}s deinit %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v10 = v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id;
  uint64_t v11 = sub_24E115E00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  sub_24E095494(v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_stream, &qword_26B1AFCB8);
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t WorkItemQueue.__deallocating_deinit()
{
  WorkItemQueue.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E09F3A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCA0);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC98);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_continuation);
  uint64_t v15 = v14 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v14 + 16);
  uint64_t v16 = (os_unfair_lock_s *)(v14 + ((*(unsigned int *)(*(void *)v14 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v16);
  sub_24E0ACF4C(v15, (uint64_t)v9);
  os_unfair_lock_unlock(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24E095494((uint64_t)v9, &qword_26B1AFCA0);
    if (qword_26B1AFA38 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_24E115F00();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B1B13F8);
    swift_retain_n();
    swift_retain_n();
    uint64_t v18 = sub_24E115EE0();
    os_log_type_t v19 = sub_24E116990();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446466;
      uint64_t v29 = 91;
      unint64_t v30 = 0xE100000000000000;
      v31[0] = v21;
      uint64_t v22 = *v2;
      v28[0] = v20 + 4;
      v28[1] = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      uint64_t v29 = sub_24E090400(v29, v30, v31);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v20 + 12) = 2082;
      sub_24E115E00();
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v23 = sub_24E117040();
      uint64_t v29 = sub_24E090400(v23, v24, v31);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24E083000, v18, v19, "%{public}s Attempted to enqueue workItem %{public}s after invalidation!", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v21, -1, -1);
      MEMORY[0x2533338B0](v20, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_release_n();
    }

    uint64_t v26 = sub_24E1166C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = a1;
    swift_retain();
    sub_24E09A98C((uint64_t)v6, (uint64_t)&unk_2698B7E00, (uint64_t)v27);
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_24E09DCC0(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_24E09F944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24E09F964, 0, 0);
}

uint64_t sub_24E09F964()
{
  sub_24E116680();
  sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
  uint64_t v1 = swift_allocError();
  *(void *)(v0 + 24) = v1;
  sub_24E116050();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E09FA60;
  return sub_24E0E4044(v1, 1);
}

uint64_t sub_24E09FA60()
{
  uint64_t v1 = *(void **)(*v0 + 24);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_24E09FB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v12 = sub_24E0EAD8C(0, (uint64_t)v8, (uint64_t)&unk_2698B7E08, v11, 0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  sub_24E09F3A8(v12);
  return v12;
}

uint64_t sub_24E09FD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v13 - v9;
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v11 = sub_24E0EAD8C(0, (uint64_t)v8, a1, a2, 0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  sub_24E09F3A8(v11);
  return v11;
}

uint64_t sub_24E09FE8C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E09FEB0, v2, 0);
}

uint64_t sub_24E09FEB0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  void *v3 = v0;
  v3[1] = sub_24E09FFE4;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_24E09FFE4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = sub_24E0ACF84;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 32);
    swift_task_dealloc();
    uint64_t v4 = sub_24E0ACF64;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A0108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v26[1] = a4;
  uint64_t v28 = a1;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v27);
  v26[0] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E115E00();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v26 - v16;
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v19 = sub_24E0EAD8C(0, (uint64_t)v15, (uint64_t)&unk_2698B7EE0, v18, 0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  sub_24E09F3A8(v19);
  uint64_t v20 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  uint64_t v21 = v26[0];
  uint64_t v22 = v27;
  (*(void (**)(void, uint64_t, uint64_t))(v6 + 16))(v26[0], v28, v27);
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = 0;
  *((void *)v24 + 3) = 0;
  *((void *)v24 + 4) = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(&v24[v23], v21, v22);
  swift_retain();
  sub_24E09A98C((uint64_t)v10, (uint64_t)&unk_2698B7EF0, (uint64_t)v24);
  swift_release();
  return swift_release();
}

uint64_t sub_24E0A045C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 32) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_24E0A04F0;
  return sub_24E0E8418();
}

uint64_t sub_24E0A04F0()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0ACF80;
  }
  else {
    uint64_t v2 = sub_24E0ACF88;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0A0604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[9] = a4;
  v5[10] = v4;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  return MEMORY[0x270FA2498](sub_24E0A062C, v4, 0);
}

uint64_t sub_24E0A062C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE728);
  long long v10 = *(_OWORD *)(v0 + 56);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 88) = inited;
  *(_DWORD *)(inited + 24) = 0;
  *(void *)(inited + 16) = 0;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = inited;
  *(_OWORD *)(v4 + 32) = v10;
  *(void *)(v4 + 48) = v1;
  uint64_t v5 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24E0A079C;
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 48);
  return MEMORY[0x270FA2338](v8, &unk_2698B7E28, v4, sub_24E0AA874, inited, v1, v5, v7);
}

uint64_t sub_24E0A079C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = sub_24E0A0934;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 80);
    swift_task_dealloc();
    uint64_t v4 = sub_24E0A08C4;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A08C4()
{
  swift_setDeallocating();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A0934()
{
  swift_setDeallocating();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A09AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0A09D4, a5, 0);
}

uint64_t sub_24E0A09D4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  long long v6 = *(_OWORD *)(v0 + 24);
  *(void *)(v5 + 16) = v2;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 40) = v3;
  *(void *)(v5 + 48) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E0A0B18;
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v9, v1, v4, 0xD000000000000019, 0x800000024E118570, sub_24E0AC400, v5, v8);
}

uint64_t sub_24E0A0B18()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    return MEMORY[0x270FA2498](sub_24E0A0C54, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_24E0A0C54()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24E0A0CB8(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = (uint64_t *)&a2[4];
  uint64_t v3 = a2 + 6;
  os_unfair_lock_lock(a2 + 6);
  sub_24E0AC410(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_24E0A0D18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a1;
  uint64_t v33 = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = sub_24E115E00();
  uint64_t v8 = *(void *)(v31 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v13 = sub_24E116670();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v28 - v16;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, v17, v13);
  uint64_t v20 = (void *)(v19 + ((v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = v30;
  void *v20 = v29;
  v20[1] = v21;
  swift_retain();
  sub_24E115DF0();
  uint64_t v22 = (uint64_t)v28;
  uint64_t v23 = v31;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v28, v12, v31);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = &unk_2698B7ED0;
  *(void *)(v24 + 24) = v19;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v25 = sub_24E0EAD8C(0, v22, (uint64_t)&unk_2698B7ED8, v24, 0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v23);
  *uint64_t v32 = v25;
  uint64_t v26 = swift_retain();
  sub_24E09F3A8(v26);
  return swift_release();
}

uint64_t sub_24E0A1018(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  void v4[3] = a1;
  v4[4] = a4;
  uint64_t v6 = swift_task_alloc();
  v4[5] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[6] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_24E0A1124;
  return v9(v6);
}

uint64_t sub_24E0A1124()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0A12DC;
  }
  else {
    uint64_t v2 = sub_24E0A1238;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0A1238()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  sub_24E116660();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A12DC()
{
  v0[2] = v0[7];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  sub_24E116650();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_24E0A1388(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 24));
  sub_24E0A14B4((void *)(a1 + 16), &v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 24));
  uint64_t v5 = v9;
  if (v9)
  {
    uint64_t v6 = sub_24E1166C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    uint64_t v7 = (void *)swift_allocObject();
    void v7[2] = 0;
    v7[3] = 0;
    v7[4] = v5;
    sub_24E09A98C((uint64_t)v4, (uint64_t)&unk_2698B7EC0, (uint64_t)v7);
    swift_release();
  }
}

uint64_t sub_24E0A14B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24E0A14D4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E095558;
  return sub_24E0E7DCC();
}

uint64_t sub_24E0A1564(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24E0A1588, v2, 0);
}

uint64_t sub_24E0A1588()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  uint64_t v5 = MEMORY[0x263F8EE60];
  v4[1] = sub_24E0A16BC;
  return MEMORY[0x270FA2360](v4, v1, v2, 0xD000000000000019, 0x800000024E118570, sub_24E0AA87C, v3, v5 + 8);
}

uint64_t sub_24E0A16BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = sub_24E0A17F8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 32);
    swift_task_dealloc();
    uint64_t v4 = sub_24E0A17E0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A17E0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E0A17F8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v24[1] = a4;
  uint64_t v26 = a1;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v6 = *(void *)(v25 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E115E00();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - v16;
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v18 = sub_24E0EAD8C(0, (uint64_t)v15, a2, a3, 0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  sub_24E09F3A8(v18);
  uint64_t v19 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
  uint64_t v20 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v25);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
  swift_retain();
  sub_24E09A98C((uint64_t)v10, (uint64_t)&unk_2698B7EB0, (uint64_t)v22);
  swift_release();
  return swift_release();
}

uint64_t sub_24E0A1B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_24E0A1BA8, v4, 0);
}

uint64_t sub_24E0A1BA8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v3;
  *(void *)(v5 + 48) = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  *uint64_t v6 = v0;
  uint64_t v7 = MEMORY[0x263F8EE60];
  v6[1] = sub_24E0A1CEC;
  return MEMORY[0x270FA2360](v6, v1, v4, 0xD000000000000025, 0x800000024E118590, sub_24E0AA888, v5, v7 + 8);
}

uint64_t sub_24E0A1CEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = sub_24E0A1E10;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    swift_task_dealloc();
    uint64_t v4 = sub_24E0A17E0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A1E10()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A1E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  v29[1] = a4;
  uint64_t v31 = a1;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v8 = *(void *)(v30 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v30);
  v29[0] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24E115E00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v29 - v18;
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v21 = sub_24E0EAD8C(0, (uint64_t)v17, (uint64_t)&unk_2698B7E90, v20, 0, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  sub_24E09F3A8(v21);
  uint64_t v22 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
  uint64_t v23 = v29[0];
  uint64_t v24 = v30;
  (*(void (**)(void, uint64_t, uint64_t))(v8 + 16))(v29[0], v31, v30);
  unint64_t v25 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 3) = 0;
  uint64_t v27 = v32;
  *((void *)v26 + 4) = v21;
  *((void *)v26 + 5) = v27;
  *((void *)v26 + 6) = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v26[v25], v23, v24);
  swift_retain();
  sub_24E09A98C((uint64_t)v12, (uint64_t)&unk_2698B7EA0, (uint64_t)v26);
  swift_release();
  return swift_release();
}

uint64_t sub_24E0A21D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 24) = a7;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 32) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_24E0A2288;
  return sub_24E0E9480(a5, a6);
}

uint64_t sub_24E0A2288()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0A240C;
  }
  else {
    uint64_t v2 = sub_24E0A239C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0A239C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  sub_24E116660();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A240C()
{
  v0[2] = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  sub_24E116650();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E0A248C()
{
  v1[14] = v0;
  uint64_t v2 = sub_24E115E00();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A255C, v0, 0);
}

uint64_t sub_24E0A255C()
{
  uint64_t v32 = v0;
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 14;
  uint64_t v2 = sub_24E115F00();
  v0[19] = __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13F8);
  swift_retain_n();
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E1169A0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = (void *)v0[14];
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v29 = v28;
    uint64_t v30 = 91;
    unint64_t v31 = 0xE100000000000000;
    v0[11] = *v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[12] = sub_24E090400(v30, v31, &v29);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[13] = sub_24E090400(0x6575516873756C66, 0xEC00000029286575, &v29);
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v3, v4, "%{public}s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v28, -1, -1);
    MEMORY[0x2533338B0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  char v8 = sub_24E0AA394();
  uint64_t v9 = (void *)*v1;
  if (v8)
  {
    swift_retain_n();
    uint64_t v10 = sub_24E115EE0();
    os_log_type_t v11 = sub_24E116990();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = (void *)*v1;
    if (v12)
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v29 = v15;
      uint64_t v30 = 91;
      unint64_t v31 = 0xE100000000000000;
      v0[8] = *v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      v0[9] = sub_24E090400(v30, v31, &v29);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      v0[10] = sub_24E090400(0x6575516873756C66, 0xEC00000029286575, &v29);
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v10, v11, "%{public}s: %s Will deadlock when called from a WorkItemQueue context!", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v15, -1, -1);
      MEMORY[0x2533338B0](v14, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v19 = *(void *)(v0[14] + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem);
    v0[25] = v19;
    if (v19)
    {
      swift_retain();
      uint64_t v17 = (void *)swift_task_alloc();
      v0[26] = v17;
      void *v17 = v0;
      uint64_t v18 = sub_24E0A32E4;
      goto LABEL_14;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  else
  {
    *((unsigned char *)v9 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_flushing) = 1;
    uint64_t v16 = *(void *)((char *)v9 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem);
    v0[20] = v16;
    if (v16)
    {
      swift_retain();
      uint64_t v17 = (void *)swift_task_alloc();
      v0[21] = v17;
      void *v17 = v0;
      uint64_t v18 = sub_24E0A2CC0;
LABEL_14:
      v17[1] = v18;
      return sub_24E0E7DCC();
    }
    uint64_t v22 = v0[17];
    uint64_t v21 = v0[18];
    uint64_t v23 = v0[15];
    uint64_t v24 = v0[16];
    sub_24E115DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v21, v23);
    type metadata accessor for WorkItemQueue.WorkItem();
    swift_allocObject();
    uint64_t v25 = sub_24E0EAD8C(2, v22, (uint64_t)&unk_2698B88F0, 0, 0, 0);
    v0[22] = v25;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
    sub_24E09F3A8(v25);
    uint64_t v26 = (void *)swift_task_alloc();
    v0[23] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_24E0A2F34;
    return sub_24E0E8418();
  }
}

uint64_t sub_24E0A2CC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24E0A2DEC, v1, 0);
}

uint64_t sub_24E0A2DEC()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v5 = sub_24E0EAD8C(2, v2, (uint64_t)&unk_2698B88F0, 0, 0, 0);
  v0[22] = v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_24E09F3A8(v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[23] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24E0A2F34;
  return sub_24E0E8418();
}

uint64_t sub_24E0A2F34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_24E0A3434;
  }
  else {
    uint64_t v4 = sub_24E0A3060;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A3060()
{
  os_log_type_t v11 = v0;
  swift_retain_n();
  uint64_t v1 = sub_24E115EE0();
  os_log_type_t v2 = sub_24E1169A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (void *)v0[14];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v8 = v5;
    uint64_t v9 = 91;
    unint64_t v10 = 0xE100000000000000;
    v0[6] = *v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[7] = sub_24E090400(v9, v10, &v8);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v1, v2, "%{public}s Flush barrier completion", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v5, -1, -1);
    MEMORY[0x2533338B0](v4, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_24E0A32E4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0A3434()
{
  uint64_t v19 = v0;
  uint64_t v1 = (void *)v0[24];
  swift_retain();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  uint64_t v4 = sub_24E115EE0();
  os_log_type_t v5 = sub_24E116990();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[24];
    uint64_t v7 = (void *)v0[14];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446722;
    uint64_t v16 = v15;
    uint64_t v17 = 91;
    unint64_t v18 = 0xE100000000000000;
    v0[2] = *v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[3] = sub_24E090400(v17, v18, &v16);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = sub_24E090400(0x6575516873756C66, 0xEC00000029286575, &v16);
    sub_24E116AB0();
    *(_WORD *)(v8 + 22) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v10;
    sub_24E116AB0();
    *uint64_t v14 = v10;

    _os_log_impl(&dword_24E083000, v4, v5, "%{public}s Error in %s: %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v15, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);

    swift_release();
  }
  else
  {
    os_log_type_t v11 = (void *)v0[24];
    swift_release();

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24E0A37C8()
{
  v1[14] = v0;
  uint64_t v2 = sub_24E115E00();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A3898, v0, 0);
}

uint64_t sub_24E0A3898()
{
  uint64_t v27 = v0;
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E115F00();
  v0[19] = __swift_project_value_buffer(v1, (uint64_t)qword_26B1B13F8);
  swift_retain_n();
  uint64_t v2 = sub_24E115EE0();
  os_log_type_t v3 = sub_24E1169A0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  os_log_type_t v5 = (void *)v0[14];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    uint64_t v24 = v23;
    uint64_t v25 = 91;
    unint64_t v26 = 0xE100000000000000;
    v0[11] = *v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[12] = sub_24E090400(v25, v26, &v24);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[13] = sub_24E090400(0x706D457469617761, 0xEC00000029287974, &v24);
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v2, v3, "%{public}s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v23, -1, -1);
    MEMORY[0x2533338B0](v6, -1, -1);

    if ((sub_24E0AA394() & 1) == 0)
    {
LABEL_5:
      uint64_t v8 = v0[17];
      uint64_t v7 = v0[18];
      uint64_t v9 = v0[15];
      uint64_t v10 = v0[16];
      sub_24E115DF0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
      type metadata accessor for WorkItemQueue.WorkItem();
      swift_allocObject();
      uint64_t v11 = sub_24E0EAD8C(1, v8, (uint64_t)&unk_2698B88F0, 0, 0, 0);
      v0[20] = v11;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
      sub_24E09F3A8(v11);
      uint64_t v12 = (void *)swift_task_alloc();
      v0[21] = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_24E0A3F8C;
      return sub_24E0E8418();
    }
  }
  else
  {

    swift_release_n();
    if ((sub_24E0AA394() & 1) == 0) {
      goto LABEL_5;
    }
  }
  swift_retain_n();
  uint64_t v14 = sub_24E115EE0();
  os_log_type_t v15 = sub_24E116990();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = (void *)v0[14];
  if (v16)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v24 = v19;
    uint64_t v25 = 91;
    unint64_t v26 = 0xE100000000000000;
    v0[8] = *v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[9] = sub_24E090400(v25, v26, &v24);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v0[10] = sub_24E090400(0x706D457469617761, 0xEC00000029287974, &v24);
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v14, v15, "%{public}s: %s Will deadlock when called from a WorkItemQueue context!", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v19, -1, -1);
    MEMORY[0x2533338B0](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v20 = *(void *)(v0[14] + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem);
  v0[23] = v20;
  if (v20)
  {
    swift_retain();
    uint64_t v21 = (void *)swift_task_alloc();
    v0[24] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_24E0A433C;
    return sub_24E0E7DCC();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_24E0A3F8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    BOOL v4 = sub_24E0A448C;
  }
  else {
    BOOL v4 = sub_24E0A40B8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A40B8()
{
  uint64_t v11 = v0;
  swift_retain_n();
  uint64_t v1 = sub_24E115EE0();
  os_log_type_t v2 = sub_24E1169A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (void *)v0[14];
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)BOOL v4 = 136446210;
    uint64_t v8 = v5;
    uint64_t v9 = 91;
    unint64_t v10 = 0xE100000000000000;
    v0[6] = *v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[7] = sub_24E090400(v9, v10, &v8);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v1, v2, "%{public}s Flush barrier completion", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v5, -1, -1);
    MEMORY[0x2533338B0](v4, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_24E0A433C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0A448C()
{
  uint64_t v19 = v0;
  uint64_t v1 = (void *)v0[22];
  swift_retain();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  uint64_t v4 = sub_24E115EE0();
  os_log_type_t v5 = sub_24E116990();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[22];
    uint64_t v7 = (void *)v0[14];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446722;
    uint64_t v16 = v15;
    uint64_t v17 = 91;
    unint64_t v18 = 0xE100000000000000;
    v0[2] = *v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[3] = sub_24E090400(v17, v18, &v16);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = sub_24E090400(0x706D457469617761, 0xEC00000029287974, &v16);
    sub_24E116AB0();
    *(_WORD *)(v8 + 22) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v10;
    sub_24E116AB0();
    *uint64_t v14 = v10;

    _os_log_impl(&dword_24E083000, v4, v5, "%{public}s Error in %s: %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v15, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);

    swift_release();
  }
  else
  {
    uint64_t v11 = (void *)v0[22];
    swift_release();

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t WorkItemQueue.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0A482C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id;
  uint64_t v4 = sub_24E115E00();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unsigned char *sub_24E0A48A4(unsigned char *result)
{
  *uint64_t result = 1;
  return result;
}

uint64_t sub_24E0A48B0(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A49B8, a1, 0);
}

uint64_t sub_24E0A49B8()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9] + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancelContinuation;
  swift_beginAccess();
  sub_24E0954F0(v4, v1, &qword_26B1AFBA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_24E095494(v0[14], &qword_26B1AFBA8);
  }
  else
  {
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v8 = v0[10];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    sub_24E095494(v5, &qword_26B1AFBA8);
    sub_24E116680();
    sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    uint64_t v9 = swift_allocError();
    sub_24E116050();
    v0[8] = v9;
    sub_24E116650();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  uint64_t v10 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[11] + 56))(v10, 1, 1, v0[10]);
  swift_beginAccess();
  sub_24E0AC8F8(v10, v4, &qword_26B1AFBA8);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24E0A4BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_24E095558;
  return sub_24E0A4C68(a5);
}

uint64_t sub_24E0A4C68(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  v2[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A4D24, v1, 0);
}

uint64_t sub_24E0A4D24()
{
  if (qword_26B1AFBF0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v3 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_id;
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  v8[2] = v4;
  void v8[3] = v3;
  v8[4] = v2;
  sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24E0A4F34;
  return MEMORY[0x270FA23C8]();
}

uint64_t sub_24E0A4F34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_24E095494(v1, (uint64_t *)&unk_26B1AFD48);
  return MEMORY[0x270FA2498](sub_24E0A508C, v2, 0);
}

uint64_t sub_24E0A508C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A50EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCA8);
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A51B4, a3, 0);
}

uint64_t sub_24E0A51B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB0);
  sub_24E116740();
  uint64_t v1 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  uint64_t v2 = OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_currentWorkItem;
  v0[23] = v1;
  v0[24] = v2;
  uint64_t v3 = OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_flushing;
  v0[25] = OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_name;
  v0[26] = v3;
  v0[27] = 0;
  uint64_t v4 = v0[19];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[28] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24E0A52E8;
  uint64_t v6 = v0[20];
  return MEMORY[0x270FA1F68](v0 + 12, v4, v1, v6);
}

uint64_t sub_24E0A52E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A53F8, v1, 0);
}

uint64_t sub_24E0A53F8()
{
  uint64_t v1 = v0[12];
  v0[29] = v1;
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E0A54B4, v1, 0);
  }
  else
  {
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_24E0A54B4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = (unsigned char *)(*(void *)(v0 + 232) + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  swift_beginAccess();
  *(unsigned char *)(v0 + 320) = *v2;
  return MEMORY[0x270FA2498](sub_24E0A5548, v1, 0);
}

uint64_t sub_24E0A5548()
{
  uint64_t v45 = v0;
  if ((*(unsigned char *)(v0 + 320) & 1) == 0)
  {
    uint64_t v9 = *(void *)(v0 + 232);
    *(void *)(*(void *)(v0 + 152) + *(void *)(v0 + 192)) = v9;
    swift_retain();
    swift_release();
    switch(*(unsigned char *)(v9 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_itemType))
    {
      case 1:
        if (qword_26B1AFA38 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24E115F00();
        __swift_project_value_buffer(v15, (uint64_t)qword_26B1B13F8);
        swift_retain_n();
        swift_retain_n();
        uint64_t v16 = sub_24E115EE0();
        os_log_type_t v17 = sub_24E116970();
        if (os_log_type_enabled(v16, v17))
        {
          unint64_t v18 = *(void **)(v0 + 152);
          uint64_t v19 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v43 = v40;
          *(_DWORD *)uint64_t v19 = 136446466;
          *(void *)(v0 + 40) = 91;
          *(void *)(v0 + 48) = 0xE100000000000000;
          *(void *)(v0 + 104) = *v18;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
          sub_24E116290();
          sub_24E116370();
          swift_bridgeObjectRelease();
          sub_24E116370();
          swift_bridgeObjectRetain();
          sub_24E116370();
          swift_bridgeObjectRelease();
          sub_24E116370();
          *(void *)(v19 + 4) = sub_24E090400(*(void *)(v0 + 40), *(void *)(v0 + 48), &v43);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v19 + 12) = 2082;
          sub_24E115E00();
          sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
          uint64_t v20 = sub_24E117040();
          *(void *)(v19 + 14) = sub_24E090400(v20, v21, &v43);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24E083000, v16, v17, "%{public}s Consuming barrier %{public}s", (uint8_t *)v19, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533338B0](v40, -1, -1);
          MEMORY[0x2533338B0](v19, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_release_n();
        }
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 280) = v37;
        *uint64_t v37 = v0;
        uint64_t v38 = sub_24E0A6704;
        goto LABEL_32;
      case 2:
        if (qword_26B1AFA38 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_24E115F00();
        __swift_project_value_buffer(v22, (uint64_t)qword_26B1B13F8);
        swift_retain_n();
        swift_retain_n();
        uint64_t v23 = sub_24E115EE0();
        os_log_type_t v24 = sub_24E116970();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = *(void **)(v0 + 152);
          uint64_t v26 = swift_slowAlloc();
          uint64_t v41 = swift_slowAlloc();
          uint64_t v43 = v41;
          *(_DWORD *)uint64_t v26 = 136446466;
          *(void *)(v0 + 72) = 91;
          *(void *)(v0 + 80) = 0xE100000000000000;
          *(void *)(v0 + 88) = *v25;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
          sub_24E116290();
          sub_24E116370();
          swift_bridgeObjectRelease();
          sub_24E116370();
          swift_bridgeObjectRetain();
          sub_24E116370();
          swift_bridgeObjectRelease();
          sub_24E116370();
          *(void *)(v26 + 4) = sub_24E090400(*(void *)(v0 + 72), *(void *)(v0 + 80), &v43);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2082;
          sub_24E115E00();
          sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
          uint64_t v27 = sub_24E117040();
          *(void *)(v26 + 14) = sub_24E090400(v27, v28, &v43);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24E083000, v23, v24, "%{public}s Consuming flush barrier %{public}s", (uint8_t *)v26, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533338B0](v41, -1, -1);
          MEMORY[0x2533338B0](v26, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_release_n();
        }
        *(unsigned char *)(*(void *)(v0 + 152) + *(void *)(v0 + 208)) = 0;
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 288) = v37;
        *uint64_t v37 = v0;
        uint64_t v38 = sub_24E0A68E0;
        goto LABEL_32;
      case 3:
        if (qword_26B1AFA38 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_24E115F00();
        __swift_project_value_buffer(v29, (uint64_t)qword_26B1B13F8);
        swift_retain_n();
        swift_retain_n();
        uint64_t v30 = sub_24E115EE0();
        os_log_type_t v31 = sub_24E116970();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = *(void **)(v0 + 152);
          uint64_t v33 = swift_slowAlloc();
          uint64_t v34 = swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = 136446466;
          uint64_t v42 = v34;
          uint64_t v43 = 91;
          unint64_t v44 = 0xE100000000000000;
          *(void *)(v0 + 128) = *v32;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
          sub_24E116290();
          sub_24E116370();
          swift_bridgeObjectRelease();
          sub_24E116370();
          swift_bridgeObjectRetain();
          sub_24E116370();
          swift_bridgeObjectRelease();
          sub_24E116370();
          *(void *)(v33 + 4) = sub_24E090400(v43, v44, &v42);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v33 + 12) = 2082;
          sub_24E115E00();
          sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
          uint64_t v35 = sub_24E117040();
          *(void *)(v33 + 14) = sub_24E090400(v35, v36, &v42);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24E083000, v30, v31, "%{public}s Consuming terminator %{public}s", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533338B0](v34, -1, -1);
          MEMORY[0x2533338B0](v33, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_release_n();
        }
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 296) = v37;
        *uint64_t v37 = v0;
        uint64_t v38 = sub_24E0A69F0;
LABEL_32:
        v37[1] = v38;
        uint64_t v13 = 0;
        char v14 = 0;
        goto LABEL_33;
      default:
        if (qword_26B1AFBE8 != -1) {
          swift_once();
        }
        *(void *)(v0 + 240) = qword_26B1B1430;
        uint64_t v10 = *(void *)(v0 + 232);
        return MEMORY[0x270FA2498](sub_24E0A62D0, v10, 0);
    }
  }
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E115F00();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1B13F8);
  swift_retain_n();
  swift_retain_n();
  uint64_t v2 = sub_24E115EE0();
  os_log_type_t v3 = sub_24E1169A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void **)(v0 + 152);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v43 = v6;
    *(_DWORD *)uint64_t v5 = 136446466;
    *(void *)(v0 + 56) = 91;
    *(void *)(v0 + 64) = 0xE100000000000000;
    *(void *)(v0 + 136) = *v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    *(void *)(v5 + 4) = sub_24E090400(*(void *)(v0 + 56), *(void *)(v0 + 64), &v43);
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_24E115E00();
    sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
    uint64_t v7 = sub_24E117040();
    *(void *)(v5 + 14) = sub_24E090400(v7, v8, &v43);
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v2, v3, "%{public}s workItem %{public}s is already cancelled -- skipping", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  sub_24E116680();
  sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
  uint64_t v11 = swift_allocError();
  *(void *)(v0 + 304) = v11;
  sub_24E116050();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_24E0A6B98;
  uint64_t v13 = v11;
  char v14 = 1;
LABEL_33:
  return sub_24E0E4044(v13, v14);
}

void sub_24E0A62D0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = *(os_unfair_lock_s **)(v0[29] + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_visitedQueueIdentifiers);
  os_log_type_t v3 = v2 + 4;
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_24E0C116C(v3, v0 + 14);
  if (v1)
  {
    os_unfair_lock_unlock(v4);
  }
  else
  {
    uint64_t v5 = v0[19];
    os_unfair_lock_unlock(v4);
    v0[31] = v0[14];
    MEMORY[0x270FA2498](sub_24E0A63BC, v5, 0);
  }
}

uint64_t sub_24E0A63BC()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[19];
  v0[15] = v0[31];
  uint64_t v3 = swift_task_alloc();
  v0[32] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24E0A64E0;
  return MEMORY[0x270FA23C8]();
}

uint64_t sub_24E0A64E0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24E0A6638, v2, 0);
}

uint64_t sub_24E0A6638()
{
  uint64_t v1 = v0[34];
  swift_release();
  v0[27] = v1;
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[19];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24E0A52E8;
  uint64_t v5 = v0[20];
  return MEMORY[0x270FA1F68](v0 + 12, v3, v2, v5);
}

uint64_t sub_24E0A6704()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A6814, v1, 0);
}

uint64_t sub_24E0A6814()
{
  uint64_t v1 = v0[27];
  swift_release();
  v0[27] = v1;
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[19];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24E0A52E8;
  uint64_t v5 = v0[20];
  return MEMORY[0x270FA1F68](v0 + 12, v3, v2, v5);
}

uint64_t sub_24E0A68E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0ACF7C, v1, 0);
}

uint64_t sub_24E0A69F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A6B00, v1, 0);
}

uint64_t sub_24E0A6B00()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  *(unsigned char *)(v0[19] + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_terminating) = 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24E0A6B98()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 304);
  uint64_t v2 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_24E0ACF7C, v2, 0);
}

uint64_t sub_24E0A6CC4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24E0A6D9C;
  v6[5] = a3;
  v6[6] = a2;
  v6[7] = *a2;
  return MEMORY[0x270FA2498](sub_24E0A6EDC, a2, 0);
}

uint64_t sub_24E0A6D9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0A6E94(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return MEMORY[0x270FA2498](sub_24E0A6EDC, v1, 0);
}

uint64_t sub_24E0A6EDC()
{
  uint64_t v1 = v0[6];
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10FindMyBase13WorkItemQueue_flushing) == 1)
  {
    if (qword_26B1AFA38 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_24E115F00();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13F8);
    swift_retain_n();
    swift_retain_n();
    uint64_t v3 = sub_24E115EE0();
    os_log_type_t v4 = sub_24E1169A0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = (void *)v0[6];
    if (v5)
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v23 = v21;
      *(_DWORD *)uint64_t v7 = 136446466;
      v0[2] = *v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      v0[3] = sub_24E090400(91, 0xE100000000000000, &v23);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_24E115E00();
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v8 = sub_24E117040();
      v0[4] = sub_24E090400(v8, v9, &v23);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v3, v4, "%{public}s flushing workItem %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v21, -1, -1);
      MEMORY[0x2533338B0](v7, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_24E116680();
    sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    uint64_t v18 = swift_allocError();
    v0[8] = v18;
    sub_24E116050();
    uint64_t v19 = (void *)swift_task_alloc();
    v0[9] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_24E0A740C;
    return sub_24E0E4044(v18, 1);
  }
  else
  {
    uint64_t v10 = v0[7];
    uint64_t v11 = v0[5];
    uint64_t v12 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[10] = v13;
    v13[2] = v11;
    v13[3] = v1;
    v13[4] = v10;
    char v14 = (void *)swift_task_alloc();
    v0[11] = v14;
    *char v14 = v0;
    v14[1] = sub_24E0A751C;
    uint64_t v15 = MEMORY[0x263F8EE60] + 8;
    uint64_t v16 = MEMORY[0x263F8EE60] + 8;
    uint64_t v17 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA22B8](v14, v15, v16, v1, v12, &unk_2698B7F60, v13, v17);
  }
}

uint64_t sub_24E0A740C()
{
  uint64_t v1 = *(void **)(*v0 + 64);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_24E0A751C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A7648, v1, 0);
}

uint64_t sub_24E0A7648()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E0A765C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A76F8, a4, 0);
}

uint64_t sub_24E0A76F8()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = sub_24E1166C0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  void v7[5] = v3;
  v7[6] = v2;
  swift_retain();
  swift_retain();
  sub_24E0E4848(v1, (uint64_t)&unk_2698B7F70, (uint64_t)v7);
  sub_24E095494(v1, &qword_26B1AFD40);
  v6(v1, 1, 1, v5);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  void v8[3] = 0;
  v8[4] = v3;
  void v8[5] = v4;
  v8[6] = v2;
  swift_retain();
  swift_retain();
  sub_24E0E4848(v1, (uint64_t)&unk_2698B7F80, (uint64_t)v8);
  sub_24E095494(v1, &qword_26B1AFD40);
  uint64_t v9 = sub_24E0AA74C(&qword_26B1AFC70, (void (*)(uint64_t))type metadata accessor for WorkItemQueue);
  v0[12] = v9;
  uint64_t v10 = v0[9];
  uint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBC0);
  *uint64_t v11 = v0;
  v11[1] = sub_24E0A794C;
  return MEMORY[0x270FA2048](v0 + 18, v10, v9, v12);
}

uint64_t sub_24E0A794C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v4 = sub_24E0A7D30;
  }
  else {
    uint64_t v4 = sub_24E0A7A78;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A7A78()
{
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBC0);
    *uint64_t v5 = v0;
    v5[1] = sub_24E0A794C;
    return MEMORY[0x270FA2048](v0 + 144, v4, v3, v6);
  }
}

uint64_t sub_24E0A7B98()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 112);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_24E0A7CC4, v2, 0);
}

uint64_t sub_24E0A7CC4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A7D30()
{
  *(void *)(v0 + 128) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
  sub_24E1167C0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0A7DF8;
  return sub_24E0E4A28();
}

uint64_t sub_24E0A7DF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A7F08, v1, 0);
}

uint64_t sub_24E0A7F08()
{
  os_log_type_t v24 = v0;
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13F8);
  swift_retain();
  swift_retain();
  id v3 = v1;
  swift_retain();
  swift_retain();
  id v4 = v1;
  uint64_t v5 = sub_24E115EE0();
  os_log_type_t v6 = sub_24E116970();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[14];
    uint64_t v8 = (void *)v0[9];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v9 = 136446722;
    uint64_t v22 = 91;
    unint64_t v23 = 0xE100000000000000;
    v0[2] = *v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[3] = sub_24E090400(v22, v23, &v21);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[4] = v7;
    id v10 = v7;
    uint64_t v11 = sub_24E116290();
    v0[5] = sub_24E090400(v11, v12, &v21);
    sub_24E116AB0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 22) = 2082;
    sub_24E115E00();
    sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
    uint64_t v13 = sub_24E117040();
    v0[6] = sub_24E090400(v13, v14, &v21);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v5, v6, "%{public}s Completing workItem (.failure [%s]): %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v20, -1, -1);
    MEMORY[0x2533338B0](v9, -1, -1);
  }
  else
  {
    uint64_t v15 = (void *)v0[14];
    swift_release_n();

    swift_release_n();
  }
  uint64_t v16 = (void *)v0[14];
  id v17 = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[15] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_24E0A7B98;
  return sub_24E0E4044((uint64_t)v16, 1);
}

uint64_t sub_24E0A8358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v7 = sub_24E116680();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0A841C, a4, 0);
}

uint64_t sub_24E0A841C()
{
  uint64_t v1 = (unsigned char *)(*(void *)(v0 + 96) + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  swift_beginAccess();
  *(unsigned char *)(v0 + 152) = *v1;
  return MEMORY[0x270FA2498](sub_24E0A84AC, 0, 0);
}

uint64_t sub_24E0A84AC()
{
  uint64_t v16 = v0;
  if (*(unsigned char *)(v0 + 152) == 1)
  {
    if (qword_26B1AFA38 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24E115F00();
    __swift_project_value_buffer(v1, (uint64_t)qword_26B1B13F8);
    swift_retain_n();
    swift_retain_n();
    uint64_t v2 = sub_24E115EE0();
    os_log_type_t v3 = sub_24E116970();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void **)(v0 + 104);
    if (v4)
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446466;
      uint64_t v13 = v12;
      uint64_t v14 = 91;
      unint64_t v15 = 0xE100000000000000;
      *(void *)(v0 + 72) = *v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      *(void *)(v0 + 80) = sub_24E090400(v14, v15, &v13);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      sub_24E115E00();
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v7 = sub_24E117040();
      *(void *)(v0 + 88) = sub_24E090400(v7, v8, &v13);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v2, v3, "%{public}s is cancelled: %{public}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v12, -1, -1);
      MEMORY[0x2533338B0](v6, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    swift_allocError();
    sub_24E116050();
    swift_willThrow();
    swift_task_dealloc();
    id v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 96);
    return MEMORY[0x270FA2498](sub_24E0A88CC, v9, 0);
  }
}

uint64_t sub_24E0A88CC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = sub_24E0AA74C(&qword_26B1AFBC8, (void (*)(uint64_t))type metadata accessor for WorkItemQueue.WorkItem);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v3;
  void *v3 = v0;
  v3[1] = sub_24E0A89DC;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v3, v1, v2, 0xD000000000000019, 0x800000024E118680, sub_24E0ACF44, v4, v5);
}

uint64_t sub_24E0A89DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v4 = sub_24E0A8B6C;
  }
  else {
    uint64_t v4 = sub_24E0A8B08;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0A8B08()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0A8B6C()
{
  return MEMORY[0x270FA2498](sub_24E0A8B88, 0, 0);
}

uint64_t sub_24E0A8B88()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 144);
  *(void *)(v0 + 40) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 112);

    sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    swift_allocError();
    sub_24E116050();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = *(void **)(v0 + 40);
  }
  else
  {

    if (qword_26B1AFA38 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void **)(v0 + 144);
    uint64_t v8 = sub_24E115F00();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B1B13F8);
    swift_retain();
    id v9 = v7;
    swift_retain();
    id v10 = v7;
    uint64_t v11 = sub_24E115EE0();
    os_log_type_t v12 = sub_24E116980();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = *(void **)(v0 + 144);
    unint64_t v15 = *(void **)(v0 + 104);
    if (v13)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = v23;
      *(_DWORD *)uint64_t v16 = 136446466;
      uint64_t v25 = 91;
      unint64_t v26 = 0xE100000000000000;
      *(void *)(v0 + 48) = *v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      *(void *)(v0 + 56) = sub_24E090400(v25, v26, &v24);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2112;
      id v18 = v14;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v19;
      sub_24E116AB0();
      void *v17 = v19;

      _os_log_impl(&dword_24E083000, v11, v12, "%{public}s Unexpected error: %@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v17, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v23, -1, -1);
      MEMORY[0x2533338B0](v16, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    uint64_t v20 = *(void **)(v0 + 144);
    sub_24E0AA74C((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    swift_allocError();
    sub_24E116050();
    swift_willThrow();
    uint64_t v6 = v20;
  }

  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_24E0A9020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 112) = a4;
  *(void *)(v5 + 120) = a5;
  return MEMORY[0x270FA2498](sub_24E0A9040, 0, 0);
}

uint64_t sub_24E0A9040()
{
  uint64_t v17 = v0;
  if (qword_26B1AFA38 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E115F00();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_26B1B13F8);
  swift_retain_n();
  swift_retain_n();
  id v2 = sub_24E115EE0();
  os_log_type_t v3 = sub_24E116970();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[14];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    uint64_t v14 = v12;
    uint64_t v15 = 91;
    unint64_t v16 = 0xE100000000000000;
    v0[11] = *v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[12] = sub_24E090400(v15, v16, &v14);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    sub_24E115E00();
    sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
    uint64_t v7 = sub_24E117040();
    v0[13] = sub_24E090400(v7, v8, &v14);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v2, v3, "%{public}s Start processing workItem: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v12, -1, -1);
    MEMORY[0x2533338B0](v6, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  type = (uint64_t (*)(uint64_t))(*(void *)(v0[15]
                                                     + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_block)
                                         + **(int **)(v0[15]
                                                    + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_block));
  id v9 = (void *)swift_task_alloc();
  v0[17] = v9;
  *id v9 = v0;
  v9[1] = sub_24E0A9434;
  uint64_t v10 = v0[15];
  return type(v10);
}

uint64_t sub_24E0A9434()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24E0A9564, 0, 0);
  }
}

uint64_t sub_24E0A9564()
{
  BOOL v13 = v0;
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_24E115EE0();
  os_log_type_t v2 = sub_24E116970();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (void *)v0[14];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = v9;
    *(_DWORD *)uint64_t v4 = 136446466;
    uint64_t v11 = 91;
    unint64_t v12 = 0xE100000000000000;
    v0[8] = *v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
    sub_24E116290();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    v0[9] = sub_24E090400(v11, v12, &v10);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    sub_24E115E00();
    sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
    uint64_t v5 = sub_24E117040();
    v0[10] = sub_24E090400(v5, v6, &v10);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v1, v2, "%{public}s Done processing workItem: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v9, -1, -1);
    MEMORY[0x2533338B0](v4, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E0A98A0;
  return sub_24E0E4A28();
}

uint64_t sub_24E0A98A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A99B0, v1, 0);
}

uint64_t sub_24E0A99B0()
{
  uint64_t v1 = (unsigned char *)(*(void *)(v0 + 120) + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  swift_beginAccess();
  *(unsigned char *)(v0 + 160) = *v1;
  return MEMORY[0x270FA2498](sub_24E0A9A40, 0, 0);
}

uint64_t sub_24E0A9A40()
{
  uint64_t v15 = v0;
  if (*(unsigned char *)(v0 + 160) & 1) != 0 || (sub_24E116780())
  {
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    uint64_t v3 = sub_24E115EE0();
    os_log_type_t v4 = sub_24E116970();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unint64_t v6 = *(void **)(v0 + 112);
    if (v5)
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      uint64_t v12 = v8;
      uint64_t v13 = 91;
      unint64_t v14 = 0xE100000000000000;
      *(void *)(v0 + 40) = *v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE860);
      sub_24E116290();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      swift_bridgeObjectRetain();
      sub_24E116370();
      swift_bridgeObjectRelease();
      sub_24E116370();
      *(void *)(v0 + 48) = sub_24E090400(v13, v14, &v12);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_24E115E00();
      sub_24E0AA74C(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v9 = sub_24E117040();
      *(void *)(v0 + 56) = sub_24E090400(v9, v10, &v12);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v3, v4, "%{public}s Completing workItem (.success): %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v8, -1, -1);
      MEMORY[0x2533338B0](v7, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24E0A9DE0;
    return sub_24E0E4044(0, 0);
  }
}

uint64_t sub_24E0A9DE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t WorkItemQueue.description.getter()
{
  return 60;
}

uint64_t sub_24E0AA064()
{
  return WorkItemQueue.description.getter();
}

Swift::Void __swiftcall requireWorkItemQueueContext(functionName:)(Swift::String functionName)
{
  object = functionName._object;
  uint64_t countAndFlagsBits = functionName._countAndFlagsBits;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v3 - 8);
  BOOL v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1AFBF0 != -1) {
    swift_once();
  }
  sub_24E117360();
  uint64_t v6 = sub_24E115E00();
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  sub_24E095494((uint64_t)v5, (uint64_t *)&unk_26B1AFD48);
  if (v7 == 1)
  {
    if (qword_26B1AFA10 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24E115F00();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B1B13D8);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_24E115EE0();
    os_log_type_t v10 = sub_24E116990();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v14 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_24E090400(countAndFlagsBits, (unint64_t)object, &v14);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24E083000, v9, v10, "\"%s\" is required to be called from a WorkItemQueue context!", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v12, -1, -1);
      MEMORY[0x2533338B0](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_24E0AA310()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B13D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1B13D8);
  return sub_24E115EF0();
}

uint64_t sub_24E0AA394()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v0 - 8);
  os_log_type_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24E115E00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1AFBF0 != -1) {
    swift_once();
  }
  sub_24E117360();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_24E095494((uint64_t)v2, (uint64_t *)&unk_26B1AFD48);
LABEL_10:
    char v7 = 0;
    return v7 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  if (qword_26B1AFBE8 != -1) {
    swift_once();
  }
  sub_24E117360();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_10;
  }
  char v7 = sub_24E0CCB38((uint64_t)v6, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7 & 1;
}

uint64_t sub_24E0AA5C4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_24E095558;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24E09F964, 0, 0);
}

uint64_t sub_24E0AA66C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E0AA6A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095558;
  return sub_24E0E75E0(a1, v4);
}

uint64_t sub_24E0AA74C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0AA794(uint64_t a1)
{
  return sub_24E0A0108(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24E0AA7A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_24E095558;
  *(void *)(v7 + 48) = v5;
  *(void *)(v7 + 56) = v4;
  *(void *)(v7 + 40) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E0A09D4, v5, 0);
}

void sub_24E0AA874()
{
  sub_24E0A1388(v0);
}

uint64_t sub_24E0AA87C(uint64_t a1)
{
  return sub_24E0A185C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24E0AA888(uint64_t a1)
{
  return sub_24E0A1E74(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_24E0AA898()
{
  return sub_24E0AA74C((unint64_t *)&qword_26B1AFD60, MEMORY[0x263F07508]);
}

uint64_t sub_24E0AA8E0()
{
  return type metadata accessor for WorkItemQueue(0);
}

void sub_24E0AA8E8()
{
  sub_24E115E00();
  if (v0 <= 0x3F)
  {
    sub_24E0AB210();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for WorkItemQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WorkItemQueue);
}

uint64_t dispatch thunk of WorkItemQueue.__allocating_init(name:identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of WorkItemQueue.invalidate()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 288) + **(int **)(*(void *)v0 + 288));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t dispatch thunk of WorkItemQueue.enqueue(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)(uint64_t a1, uint64_t a2)
{
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 320) + **(int **)(*(void *)v2 + 320));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24E095558;
  return v8(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 336) + **(int **)(*(void *)v2 + 336));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24E095558;
  return v8(a1, a2);
}

uint64_t dispatch thunk of WorkItemQueue.enqueueAndAwaitResult<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 328)
                                                                   + **(int **)(*(void *)v4 + 328));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_24E095558;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(cancelAfter:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 344)
                                                                   + **(int **)(*(void *)v4 + 344));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_24E095558;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkItemQueue.flushQueue()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 352) + **(int **)(*(void *)v0 + 352));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095114;
  return v4();
}

uint64_t dispatch thunk of WorkItemQueue.awaitEmpty()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 360) + **(int **)(*(void *)v0 + 360));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

void sub_24E0AB210()
{
  if (!qword_26B1AFCC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1AFCB0);
    unint64_t v0 = sub_24E116A90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1AFCC0);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkItemQueue.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_24E115E00();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for WorkItemQueue.Error(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_24E115E00();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for WorkItemQueue.Error(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_24E115E00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for WorkItemQueue.Error(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_24E115E00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_24E095494((uint64_t)a1, &qword_26B1AE668);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_24E115E00();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for WorkItemQueue.Error(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_24E115E00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for WorkItemQueue.Error(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_24E115E00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_24E095494((uint64_t)a1, &qword_26B1AE668);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_24E115E00();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkItemQueue.Error(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E0ABA58);
}

uint64_t sub_24E0ABA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WorkItemQueue.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E0ABADC);
}

uint64_t sub_24E0ABADC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_24E0ABB64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_24E0ABBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for WorkItemQueue.Error(uint64_t a1)
{
  return sub_24E0ABC64(a1, (uint64_t *)&unk_26B1AE658);
}

uint64_t sub_24E0ABC64(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E0ABC9C()
{
  uint64_t result = sub_24E115E00();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _s8ItemTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8ItemTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0ABE70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ItemTypeOMa()
{
  return &_s8ItemTypeON;
}

unint64_t sub_24E0ABEAC()
{
  unint64_t result = qword_2698B7E88;
  if (!qword_2698B7E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7E88);
  }
  return result;
}

uint64_t sub_24E0ABF00(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095114;
  return sub_24E0E75E0(a1, v4);
}

uint64_t sub_24E0ABFA8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E0AC080()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_24E095558;
  v6[3] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_24E0A2288;
  return sub_24E0E9480(v3, v4);
}

uint64_t sub_24E0AC1B8()
{
  return objectdestroy_67Tm(&qword_26B1AFBA0);
}

uint64_t sub_24E0AC1C4()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24E095558;
  void v4[3] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[4] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24E0A04F0;
  return sub_24E0E8418();
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E0AC32C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E095558;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return sub_24E0E7DCC();
}

void sub_24E0AC400(uint64_t a1)
{
  sub_24E0A0CB8(a1, *(os_unfair_lock_s **)(v1 + 24));
}

uint64_t sub_24E0AC410(uint64_t *a1)
{
  return sub_24E0A0D18(a1, v1[3], v1[4], v1[5], v1[6], v1[2]);
}

uint64_t sub_24E0AC434()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v1 = sub_24E116670();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24E0AC4FC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v3 = *(void *)(sub_24E116670() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0 + v4;
  uint64_t v6 = v0 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(int **)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_24E095558;
  return sub_24E0A1018(v5, v7, v8, v2);
}

uint64_t sub_24E0AC62C()
{
  return objectdestroy_67Tm(&qword_26B1AFBA0);
}

uint64_t sub_24E0AC638()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_24E095558;
  void v4[3] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[4] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24E0A04F0;
  return sub_24E0E8418();
}

uint64_t sub_24E0AC75C(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095558;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2698B8D58 + dword_2698B8D58);
  return v6(a1, v4);
}

uint64_t sub_24E0AC814@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24E0EAA4C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24E0AC830(uint64_t a1)
{
  return sub_24E0E9C9C(a1, *(void *)(v1 + 16));
}

uint64_t sub_24E0AC84C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return sub_24E0A48B0(v0);
}

uint64_t sub_24E0AC8DC(uint64_t *a1)
{
  return sub_24E0E9F44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24E0AC8F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E0AC95C()
{
  return objectdestroy_67Tm(&qword_26B1AFCB0);
}

uint64_t objectdestroy_67Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_24E0ACA38()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCB0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24E095558;
  uint64_t v5 = (void *)swift_task_alloc();
  uint64_t v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24E095558;
  return sub_24E0A4C68(v3);
}

uint64_t sub_24E0ACB5C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24E095558;
  return sub_24E0A50EC(a1, v4, v5);
}

uint64_t sub_24E0ACC10(uint64_t a1)
{
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24E095558;
  return sub_24E0A6CC4(a1, v5, v4);
}

uint64_t sub_24E0ACCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_24E095558;
  return sub_24E0A765C(a1, a2, v6, v7, v8);
}

uint64_t sub_24E0ACD84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24E095558;
  return sub_24E0A8358(a1, v4, v5, v6, v7);
}

uint64_t objectdestroy_128Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24E0ACE98()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24E095558;
  *(_OWORD *)(v2 + 112) = v3;
  return MEMORY[0x270FA2498](sub_24E0A9040, 0, 0);
}

uint64_t sub_24E0ACF44(uint64_t a1)
{
  return sub_24E0EA75C(a1, v1);
}

uint64_t sub_24E0ACF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E09DC14(a1, a2);
}

uint64_t CustomStringConvertible.typeDescription.getter(uint64_t a1, uint64_t a2)
{
  return sub_24E0ACFC0(a1, a2, MEMORY[0x263F8D260]);
}

uint64_t CustomDebugStringConvertible.typeDescription.getter(uint64_t a1, uint64_t a2)
{
  return sub_24E0ACFC0(a1, a2, MEMORY[0x263F8D270]);
}

uint64_t sub_24E0ACFC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t))
{
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  return a3(&DynamicType, MetatypeMetadata);
}

uint64_t _ss23CustomStringConvertibleP10FindMyBaseRlzCrlE18addressDescriptionSSvg_0()
{
  return 30768;
}

uint64_t FixedWidthInteger.bytes.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getDynamicType();
  uint64_t v26 = a1;
  uint64_t v6 = sub_24E116E50();
  uint64_t v7 = v6;
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        break;
      }
      BOOL v11 = __OFADD__(v9, 8);
      v9 += 8;
      if (v11) {
        uint64_t v9 = 0x7FFFFFFFFFFFFFFFLL;
      }
      ++v8;
      if (v9 >= v6) {
        goto LABEL_9;
      }
    }
    __break(1u);
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v10 = 0;
LABEL_9:
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_24E0AEB18(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0) {
    goto LABEL_35;
  }
  uint64_t v12 = v30;
  if (v10)
  {
    uint64_t v13 = 0;
    while (v13 < v7)
    {
      if (__OFADD__(v13, 8)) {
        uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v14 = v13 + 8;
      }
      uint64_t v27 = v13;
      char v28 = 0;
      sub_24E0AD2BC(&v27, v3, v26, a2, &v29);
      char v15 = v29;
      uint64_t v30 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_24E0AEB18(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v30;
      }
      *(void *)(v12 + 16) = v17 + 1;
      *(unsigned char *)(v12 + v17 + 32) = v15;
      uint64_t v13 = v14;
      if (!--v10) {
        goto LABEL_21;
      }
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v14 = 0;
LABEL_21:
  if (v14 < v7)
  {
    uint64_t v25 = a2;
    do
    {
      BOOL v18 = __OFADD__(v14, 8);
      uint64_t v27 = v14;
      uint64_t v19 = v3;
      sub_24E0AD2BC(&v27, v3, v26, v25, &v29);
      char v20 = v29;
      uint64_t v30 = v12;
      unint64_t v22 = *(void *)(v12 + 16);
      unint64_t v21 = *(void *)(v12 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_24E0AEB18(v21 > 1, v22 + 1, 1);
        uint64_t v12 = v30;
      }
      *(void *)(v12 + 16) = v22 + 1;
      *(unsigned char *)(v12 + v22 + 32) = v20;
      char v23 = v14 + 8 >= v7 || v18;
      v14 += 8;
      uint64_t v3 = v19;
    }
    while ((v23 & 1) == 0);
  }
  return v12;
}

uint64_t sub_24E0AD2BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v49 = a5;
  uint64_t v48 = a2;
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 8) + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  BOOL v11 = (char *)&v42 - v10;
  uint64_t v51 = *(char **)(a3 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v44 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v42 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  BOOL v18 = (char *)&v42 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v42 - v20;
  MEMORY[0x270FA5388](v19);
  char v23 = (char *)&v42 - v22;
  uint64_t v53 = *a1;
  sub_24E093D14();
  sub_24E116B30();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = AssociatedTypeWitness;
  sub_24E117100();
  uint64_t v47 = v11;
  uint64_t v48 = v7;
  sub_24E117090();
  sub_24E116B10();
  uint64_t v24 = v18;
  uint64_t v25 = (void (*)(char *, uint64_t))*((void *)v51 + 1);
  v25(v24, a3);
  v25(v21, a3);
  if (sub_24E116B90())
  {
    sub_24E117100();
    sub_24E117090();
    char v26 = sub_24E116170();
    v25(v21, a3);
    if ((v26 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (sub_24E116B80() < 8) {
    goto LABEL_15;
  }
  uint64_t v43 = v25;
  uint64_t v27 = (void (*)(char *))*((void *)v51 + 2);
  uint64_t v51 = v23;
  v27(v50);
  unsigned __int8 v52 = -1;
  char v28 = sub_24E116B90();
  uint64_t v29 = sub_24E116B80();
  if ((v28 & 1) == 0)
  {
    if (v29 >= 9)
    {
LABEL_10:
      sub_24E0AF260();
      sub_24E116B00();
      uint64_t v37 = v50;
      char v38 = sub_24E116160();
      uint64_t v25 = v43;
      v43(v21, a3);
      char v23 = v51;
      if (v38) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    uint64_t v39 = v50;
    sub_24E116B70();
    char v23 = v51;
    uint64_t v25 = v43;
    v43(v39, a3);
LABEL_15:
    char v40 = sub_24E116B70();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v23, a3);
    *uint64_t v49 = v40;
    return result;
  }
  if (v29 > 8) {
    goto LABEL_10;
  }
  uint64_t v30 = v27;
  sub_24E117100();
  sub_24E117090();
  os_log_type_t v31 = v50;
  char v32 = sub_24E116150();
  uint64_t v33 = v21;
  uint64_t v34 = v43;
  v43(v33, a3);
  LODWORD(v48) = v52;
  uint64_t v35 = v44;
  ((void (*)(char *, char *, uint64_t))v30)(v44, v31, a3);
  char v23 = v51;
  if ((v32 & 1) == 0)
  {
    v34(v35, a3);
    uint64_t v37 = v50;
    uint64_t v25 = v34;
    goto LABEL_14;
  }
  unsigned __int8 v36 = sub_24E116B70();
  v34(v35, a3);
  uint64_t v37 = v50;
  uint64_t v25 = v34;
  if (v48 >= v36)
  {
LABEL_14:
    v25(v37, a3);
    goto LABEL_15;
  }
LABEL_16:
  uint64_t result = sub_24E116EB0();
  __break(1u);
  return result;
}

BOOL FixedWidthInteger.BOOLValue.getter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v19 - v9;
  if (sub_24E116B90())
  {
    if (sub_24E116B80() < 64)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v1, a1);
LABEL_11:
      uint64_t v17 = sub_24E116B70();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, a1);
      char v16 = v17 == 0;
      return (v16 & 1) == 0;
    }
    goto LABEL_12;
  }
  char v11 = sub_24E116B90();
  v19[0] = v1;
  uint64_t v12 = sub_24E116B80();
  if ((v11 & 1) == 0)
  {
    if (v12 < 64)
    {
      (*(void (**)(char *, void, uint64_t))(v5 + 16))(v10, v19[0], a1);
      goto LABEL_11;
    }
LABEL_12:
    v19[1] = 0;
    sub_24E093D14();
    sub_24E116B00();
    char v16 = sub_24E116190();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, a1);
    return (v16 & 1) == 0;
  }
  if (v12 > 64) {
    goto LABEL_12;
  }
  swift_getAssociatedConformanceWitness();
  sub_24E117100();
  sub_24E117090();
  uint64_t v13 = v19[0];
  char v14 = sub_24E116170();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v10, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, a1);
  char v16 = (v14 & 1) != 0 && sub_24E116B70() == 0;
  v15(v8, a1);
  return (v16 & 1) == 0;
}

uint64_t FixedWidthInteger.convert(to:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  }
  if (*a1 == 1) {
    return MEMORY[0x270F9EE20](a2, a3);
  }
  return MEMORY[0x270F9EE78](a2, a3);
}

uint64_t FixedWidthInteger.data.getter(uint64_t a1)
{
  v7[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  if (v3)
  {
    if (v3 <= 0xE)
    {
      uint64_t v5 = sub_24E0AF128((unsigned char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &v4[v3]);
    }
    else
    {
      sub_24E1159C0();
      swift_allocObject();
      sub_24E115970();
      if (v3 >= 0x7FFFFFFF)
      {
        sub_24E115BA0();
        uint64_t v5 = swift_allocObject();
        *(void *)(v5 + 16) = 0;
        *(void *)(v5 + 24) = v3;
      }
      else
      {
        uint64_t v5 = v3 << 32;
      }
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t FixedWidthInteger.init(data:ofEndianness:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v27 = a2;
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  int v13 = *a3;
  if (*a3)
  {
    uint64_t v26 = a5;
    if (v13 == 1)
    {
      unint64_t v14 = v27;
      sub_24E08D248(a1, v27);
      uint64_t v15 = a1;
    }
    else
    {
      sub_24E08D248(a1, v27);
      uint64_t v15 = sub_24E088A58(a1, v27);
      unint64_t v14 = v17;
    }
    swift_getAssociatedConformanceWitness();
    sub_24E117100();
    uint64_t v18 = sub_24E117090();
    uint64_t v19 = 0;
    switch(v14 >> 62)
    {
      case 1uLL:
        LODWORD(v19) = HIDWORD(v15) - v15;
        if (__OFSUB__(HIDWORD(v15), v15))
        {
          __break(1u);
LABEL_16:
          __break(1u);
        }
        uint64_t v19 = (int)v19;
LABEL_11:
        if (v19 == v12)
        {
          MEMORY[0x270FA5388](v18);
          *(&v25 - 2) = v15;
          *(&v25 - 1) = v14;
          sub_24E08A680((uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)sub_24E0AF1EC, (uint64_t)(&v25 - 4), a4, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v23);
          sub_24E08D0B0(a1, v27);
          sub_24E08D0B0(v15, v14);
          a5 = v26;
          (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v26, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
          uint64_t v16 = 0;
        }
        else
        {
          sub_24E08D0B0(v15, v14);
          sub_24E08D0B0(a1, v27);
          (*(void (**)(char *, uint64_t))(v11 + 8))((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
          uint64_t v16 = 1;
          a5 = v26;
        }
        break;
      case 2uLL:
        uint64_t v21 = *(void *)(v15 + 16);
        uint64_t v20 = *(void *)(v15 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        uint64_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_11;
        }
        goto LABEL_16;
      case 3uLL:
        goto LABEL_11;
      default:
        uint64_t v19 = BYTE6(v14);
        goto LABEL_11;
    }
  }
  else
  {
    sub_24E08D0B0(a1, v27);
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, v16, 1, a4);
}

uint64_t FixedWidthInteger.init(bits:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v38 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  unsigned __int8 v36 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int v13 = (char *)&v30 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = *(void *)(v16 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_24E117100();
  uint64_t v37 = a3;
  sub_24E117090();
  uint64_t v30 = a1;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v19 = 0;
    char v32 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    uint64_t v33 = v30 + 32;
    uint64_t v20 = (void (**)(char *, uint64_t))(v38 + 8);
    v38 += 16;
    os_log_type_t v31 = (void (**)(uint64_t, char *, uint64_t))(v38 + 16);
    uint64_t v34 = v18;
    uint64_t v21 = v37;
    do
    {
      char v22 = *(unsigned char *)(v33 + v19);
      uint64_t v39 = v19 + 1;
      v32(v13, v21, a2);
      char v41 = v22;
      sub_24E0AF260();
      uint64_t v23 = v15;
      uint64_t v24 = v13;
      uint64_t v25 = v10;
      uint64_t v26 = v36;
      sub_24E116C90();
      uint64_t v40 = v19;
      sub_24E093D14();
      sub_24E116B40();
      unint64_t v27 = *v20;
      uint64_t v28 = v26;
      uint64_t v10 = v25;
      int v13 = v24;
      uint64_t v15 = v23;
      (*v20)(v28, a2);
      sub_24E116B20();
      v27(v10, a2);
      v27(v13, a2);
      v27(v21, a2);
      (*v31)((uint64_t)v21, v23, a2);
      uint64_t v19 = v39;
    }
    while (v34 != v39);
  }
  return swift_bridgeObjectRelease();
}

uint64_t FixedWidthInteger.bits()(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = *(void *)(*(void *)(*(void *)(a2 + 8) + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v41 = (char *)&v33 - v5;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v33 - v16;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v36 = v6 + 16;
  v35((char *)&v33 - v16, v2, a1);
  size_t v18 = sub_24E116E50();
  uint64_t v43 = sub_24E08A16C(0, v18);
  uint64_t result = sub_24E116E50();
  if (result < 0)
  {
LABEL_30:
    __break(1u);
  }
  else
  {
    uint64_t v20 = result;
    if (result)
    {
      uint64_t v34 = v9;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v39 = v17;
      uint64_t v40 = AssociatedConformanceWitness;
      unint64_t v22 = 0;
      unint64_t v23 = v6 + 8;
      uint64_t v33 = v23 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v38 = v20;
      while (1)
      {
        sub_24E117100();
        sub_24E117090();
        sub_24E116B10();
        uint64_t v24 = *(void (**)(char *, uint64_t))v23;
        (*(void (**)(char *, uint64_t))v23)(v12, a1);
        if (sub_24E116B90())
        {
          if (sub_24E116B80() >= 64)
          {
            uint64_t v44 = 0;
            sub_24E093D14();
            sub_24E116B00();
            char v30 = sub_24E116190();
            v24(v12, a1);
            if (v30) {
              goto LABEL_4;
            }
          }
          else if (!sub_24E116B70())
          {
            goto LABEL_4;
          }
        }
        else
        {
          char v25 = sub_24E116B90();
          uint64_t v26 = sub_24E116B80();
          if (v25)
          {
            if (v26 > 64) {
              goto LABEL_19;
            }
            sub_24E117100();
            sub_24E117090();
            char v27 = sub_24E116170();
            v24(v12, a1);
            uint64_t v28 = v34;
            v35(v34, (uint64_t)v15, a1);
            if (v27)
            {
              uint64_t v29 = sub_24E116B70();
              v24(v28, a1);
              if (!v29) {
                goto LABEL_4;
              }
            }
            else
            {
              v24(v28, a1);
            }
          }
          else
          {
            if (v26 >= 64)
            {
LABEL_19:
              uint64_t v44 = 0;
              sub_24E093D14();
              sub_24E116B00();
              char v31 = sub_24E116190();
              v24(v12, a1);
              if (v31) {
                goto LABEL_4;
              }
              goto LABEL_22;
            }
            if (!sub_24E116B70()) {
              goto LABEL_4;
            }
          }
        }
LABEL_22:
        uint64_t v32 = v43;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24E08CFB4(v32);
          uint64_t v32 = result;
        }
        if (v22 >= *(void *)(v32 + 16))
        {
          __break(1u);
          goto LABEL_30;
        }
        uint64_t v43 = v32;
        *(unsigned char *)(v32 + v22 + 32) = 1;
LABEL_4:
        ++v22;
        uint64_t v44 = 1;
        sub_24E093D14();
        unint64_t v17 = v39;
        sub_24E116B60();
        v24(v15, a1);
        if (v38 == v22) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
LABEL_28:
    v24(v17, a1);
    return v43;
  }
  return result;
}

uint64_t sub_24E0AEAD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E0AEB58(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24E0AEAF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E0AED00(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24E0AEB18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E0AEE6C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24E0AEB38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E0AEFBC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24E0AEB58(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7F90);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7F98);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E0AED00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7FA0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E0AEE6C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E0AEFBC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE800);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E0AF128(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_24E0AF1EC@<X0>(uint64_t *a1@<X8>)
{
  sub_24E08F0E4();
  uint64_t result = sub_24E115920();
  *a1 = result;
  return result;
}

unint64_t sub_24E0AF260()
{
  unint64_t result = qword_2698B7F88;
  if (!qword_2698B7F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7F88);
  }
  return result;
}

id PrefixedDefaults.init(prefix:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id result = objc_msgSend(self, sel_standardUserDefaults);
  *a3 = result;
  a3[1] = a1;
  a3[2] = a2;
  return result;
}

Swift::Void __swiftcall PrefixedDefaults.removeValue(for:)(Swift::String a1)
{
  unint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  sub_24E116370();
  sub_24E116370();
  id v3 = (id)sub_24E1161C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);
}

uint64_t PrefixedDefaults.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  char v5 = *(void **)v2;
  uint64_t v6 = *(void *)(v2 + 16);
  *(void *)&v12[0] = *(void *)(v2 + 8);
  *((void *)&v12[0] + 1) = v6;
  swift_bridgeObjectRetain();
  sub_24E116370();
  sub_24E116370();
  int64_t v7 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_objectForKey_, v7);

  if (v8)
  {
    sub_24E116BB0();
    swift_unknownObjectRelease();
    sub_24E094E10(&v11, v12);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  int v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v9 ^ 1u, 1, a1);
}

void sub_24E0AF4EC(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a3 + a2 - 16);
  id v6 = *a1;
  swift_bridgeObjectRetain();
  PrefixedDefaults.subscript.getter(v5, a4);
  swift_bridgeObjectRelease();
}

uint64_t PrefixedDefaults.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24E0B0A68(a1, a2, a3, a4);
  uint64_t v5 = sub_24E116A90();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

void (*PrefixedDefaults.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  long long v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  void v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *long long v11 = a2;
  uint64_t v12 = sub_24E116A90();
  v11[5] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v11[6] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[7] = malloc(v14);
  uint64_t v15 = malloc(v14);
  v11[8] = v15;
  PrefixedDefaults.subscript.getter(a4, (uint64_t)v15);
  return sub_24E0AF718;
}

void sub_24E0AF718(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a1)[7];
  uint64_t v4 = (void *)(*a1)[8];
  uint64_t v5 = (*a1)[5];
  uint64_t v6 = (*a1)[6];
  uint64_t v8 = (*a1)[1];
  uint64_t v7 = (*a1)[2];
  uint64_t v9 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[7], v4, v5);
    swift_bridgeObjectRetain();
    sub_24E0B0A68((uint64_t)v3, v9, v8, v7);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v5);
    v10(v4, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24E0B0A68((uint64_t)v4, v9, v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

unint64_t PrefixedDefaults.subscript.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_24E116370();
  sub_24E116370();
  uint64_t v2 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (v3)
  {
    uint64_t v4 = sub_24E1161F0();
    uint64_t v6 = v5;

    uint64_t v8 = MEMORY[0x270FA5388](v7);
    if ((v6 & 0x1000000000000000) != 0 || !(v6 & 0x2000000000000000 | v4 & 0x1000000000000000))
    {
      sub_24E116C40();
    }
    else
    {
      MEMORY[0x270FA5388](v8);
      if ((v6 & 0x2000000000000000) != 0)
      {
        BOOL v13 = (v4 > 0x20u || ((0x100003E01uLL >> v4) & 1) == 0)
           && (uint64_t v12 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
           && *v12 == 0;
        char v15 = v13;
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v4 & 0x1000000000000000) != 0)
      {
        uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v10 = v4 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v9 = sub_24E116D10();
      }
      char v15 = sub_24E0B0238(v9, v10, (void (*)(uint64_t *__return_ptr))sub_24E0B0CC4) & 1;
    }
    swift_bridgeObjectRelease();
LABEL_16:
    unsigned __int8 v11 = v15 ^ 1;
    return (unint64_t)v11 << 32;
  }
  unsigned __int8 v11 = 1;
  return (unint64_t)v11 << 32;
}

void sub_24E0AFA90(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  swift_bridgeObjectRetain();
  unint64_t v4 = PrefixedDefaults.subscript.getter();
  swift_bridgeObjectRelease();

  *(_DWORD *)a2 = v4;
  *(unsigned char *)(a2 + 4) = BYTE4(v4) & 1;
}

void sub_24E0AFB18(unsigned int *a1)
{
  uint64_t v1 = *a1;
  unsigned __int8 v2 = *((unsigned char *)a1 + 4);
  swift_bridgeObjectRetain();
  PrefixedDefaults.subscript.setter(v1 | ((unint64_t)v2 << 32));
}

void PrefixedDefaults.subscript.setter(uint64_t a1)
{
  unsigned __int8 v2 = *v1;
  if ((a1 & 0x100000000) != 0) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_24E116880();
  }
  id v4 = v2;
  swift_bridgeObjectRetain_n();
  sub_24E116370();
  sub_24E116370();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v5 = (id)sub_24E1161C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setObject_forKey_, v3, v5);
  swift_unknownObjectRelease();
}

void (*PrefixedDefaults.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  unint64_t v5 = PrefixedDefaults.subscript.getter();
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = BYTE4(v5) & 1;
  return sub_24E0AFCE8;
}

void sub_24E0AFCE8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 28);
  swift_bridgeObjectRetain();
  PrefixedDefaults.subscript.setter(v1 | (v2 << 32));
}

uint64_t PrefixedDefaults.description.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t result = sub_24E116330();
  uint64_t v4 = result + 2;
  if (__OFADD__(result, 2))
  {
    __break(1u);
  }
  else
  {
    id v5 = objc_msgSend(v1, sel_dictionaryRepresentation);
    uint64_t v6 = sub_24E116090();

    id v7 = v1;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24E0B0578(v6, v7, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    MEMORY[0x270FA5388](v9);
    v13[2] = v4;
    uint64_t v10 = sub_24E0B0790(v8, (uint64_t (*)(_OWORD *, void, void, _OWORD *))sub_24E0B0D08, (uint64_t)v13);
    swift_release();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7F98);
    uint64_t v12 = MEMORY[0x2533321D0](v10, v11);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_24E0AFEAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24E116330();
  BOOL v11 = __OFSUB__(v10, a5);
  unint64_t result = v10 - a5;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    unint64_t v13 = sub_24E0ED2BC(result, a2, a3);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x253331F40](v13, v15, v17, v19);
    swift_bridgeObjectRelease();
    sub_24E090878(a4, a1);
    return v20;
  }
  return result;
}

uint64_t sub_24E0AFF74(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBC8);
  uint64_t result = sub_24E116F10();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v30) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v30) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v30) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v30) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v30) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_24E090878(*(void *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_24E094E10(v33, v32);
    sub_24E1171C0();
    swift_bridgeObjectRetain();
    sub_24E116320();
    uint64_t result = sub_24E1171F0();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v19;
    v28[1] = v18;
    uint64_t result = (uint64_t)sub_24E094E10(v32, (_OWORD *)(*(void *)(v8 + 56) + 32 * v23));
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24E0B0238(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_24E0B0298(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24E0B0320(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a5;
  uint64_t v20 = (unint64_t *)result;
  uint64_t v21 = 0;
  int64_t v6 = 0;
  uint64_t v22 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v23) {
      return sub_24E0AFF74(v20, a2, v21, a3);
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v23) {
        return sub_24E0AFF74(v20, a2, v21, a3);
      }
      unint64_t v16 = *(void *)(v22 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v23) {
          return sub_24E0AFF74(v20, a2, v21, a3);
        }
        unint64_t v16 = *(void *)(v22 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    unint64_t v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_24E090878(*(void *)(a3 + 56) + 32 * v11, (uint64_t)v26);
    v24[0] = v13;
    v24[1] = v14;
    sub_24E090878((uint64_t)v26, (uint64_t)&v25);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24E116370();
    LOBYTE(v13) = sub_24E116410();
    swift_bridgeObjectRelease();
    sub_24E0B0F68((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    uint64_t result = swift_bridgeObjectRelease();
    if (v13)
    {
      *(unint64_t *)((char *)v20 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
        return sub_24E0AFF74(v20, a2, v21, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v23) {
    return sub_24E0AFF74(v20, a2, v21, a3);
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v23) {
      return sub_24E0AFF74(v20, a2, v21, a3);
    }
    unint64_t v16 = *(void *)(v22 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24E0B0578(uint64_t a1, void *a2, uint64_t a3)
{
  v18[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  id v9 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = (uint64_t)v9;
  unint64_t v11 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    unint64_t v12 = (char *)v18 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v12, 8 * v8);
    id v13 = v11;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24E0B0320((uint64_t)v12, v8, a1, (uint64_t)v13, a3);
    swift_bridgeObjectRelease();

    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, 8 * v8);
    id v16 = v11;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24E0B0320((uint64_t)v15, v8, a1, (uint64_t)v16, a3);
    swift_bridgeObjectRelease();

    MEMORY[0x2533338B0](v15, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v14;
}

uint64_t sub_24E0B0790(uint64_t a1, uint64_t (*a2)(_OWORD *, void, void, _OWORD *), uint64_t a3)
{
  uint64_t v40 = a3;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_24E0AEAD8(0, v3, 0);
  uint64_t result = sub_24E0B0298(a1);
  uint64_t v8 = result;
  uint64_t v9 = 0;
  uint64_t v10 = a1 + 64;
  int v28 = v7;
  uint64_t v29 = a1 + 64;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v8 >> 6;
    if ((*(void *)(v10 + 8 * ((unint64_t)v8 >> 6)) & (1 << v8)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_26;
    }
    int64_t v13 = v3;
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    sub_24E090878(*(void *)(a1 + 56) + 32 * v8, (uint64_t)v36);
    v35[0] = v16;
    v35[1] = v15;
    *(void *)&long long v33 = v16;
    *((void *)&v33 + 1) = v15;
    sub_24E090878((uint64_t)v36, (uint64_t)v34);
    long long v31 = v33;
    v32[0] = v34[0];
    v32[1] = v34[1];
    swift_bridgeObjectRetain_n();
    sub_24E0B0F68((uint64_t)v35);
    *(void *)&long long v37 = a2(v38, v31, *((void *)&v31 + 1), v32);
    *((void *)&v37 + 1) = v17;
    sub_24E0B0F68((uint64_t)&v31);
    uint64_t v4 = v39;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_24E0AEAD8(0, *(void *)(v4 + 16) + 1, 1);
      uint64_t v4 = v39;
    }
    unint64_t v19 = *(void *)(v4 + 16);
    unint64_t v18 = *(void *)(v4 + 24);
    if (v19 >= v18 >> 1)
    {
      uint64_t result = sub_24E0AEAD8(v18 > 1, v19 + 1, 1);
      uint64_t v4 = v39;
    }
    *(void *)(v4 + 16) = v19 + 1;
    uint64_t v20 = (_OWORD *)(v4 + 48 * v19);
    long long v21 = v37;
    long long v22 = v38[1];
    v20[3] = v38[0];
    v20[4] = v22;
    v20[2] = v21;
    int64_t v11 = 1 << *(unsigned char *)(a1 + 32);
    if (v8 >= v11) {
      goto LABEL_27;
    }
    uint64_t v10 = a1 + 64;
    uint64_t v23 = *(void *)(v29 + 8 * v12);
    if ((v23 & (1 << v8)) == 0) {
      goto LABEL_28;
    }
    int v7 = v28;
    if (*(_DWORD *)(a1 + 36) != v28) {
      goto LABEL_29;
    }
    unint64_t v24 = v23 & (-2 << (v8 & 0x3F));
    if (v24)
    {
      int64_t v11 = __clz(__rbit64(v24)) | v8 & 0xFFFFFFFFFFFFFFC0;
      int64_t v3 = v13;
    }
    else
    {
      unint64_t v25 = v12 + 1;
      unint64_t v26 = (unint64_t)(v11 + 63) >> 6;
      int64_t v3 = v13;
      if (v12 + 1 < v26)
      {
        unint64_t v27 = *(void *)(v29 + 8 * v25);
        if (v27)
        {
LABEL_22:
          int64_t v11 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v12)
          {
            unint64_t v27 = *(void *)(a1 + 80 + 8 * v12++);
            if (v27)
            {
              unint64_t v25 = v12 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v9;
    uint64_t v8 = v11;
    if (v9 == v3) {
      return v4;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_24E0B0A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_24E116A90();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v18 - v8;
  uint64_t v10 = *(void **)v4;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)v18 - v8, a1);
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, a4) != 1)
  {
    uint64_t v13 = sub_24E1170A0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, a4);
  }
  uint64_t v14 = *(void **)v4;
  uint64_t v15 = *(void *)(v4 + 16);
  v18[0] = *(void *)(v4 + 8);
  v18[1] = v15;
  id v16 = v14;
  swift_bridgeObjectRetain_n();
  sub_24E116370();
  sub_24E116370();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setObject_forKey_, v13, v17);
  swift_unknownObjectRelease();
}

unsigned char *sub_24E0B0C54@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_24E0B0CC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_24E0B0D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_24E0AFEAC(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_24E0B0D14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t *)((char *)a3 + a4 - 16);
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  swift_bridgeObjectRetain();
  sub_24E0B0A68(a1, v6, v7, v5);
}

uint64_t sub_24E0B0D74()
{
  return 16;
}

__n128 sub_24E0B0D80(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24E0B0D94()
{
  return 0;
}

uint64_t destroy for PrefixedDefaults(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s10FindMyBase16PrefixedDefaultsVwCP_0(void *a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrefixedDefaults(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PrefixedDefaults(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrefixedDefaults(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrefixedDefaults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrefixedDefaults()
{
  return &type metadata for PrefixedDefaults;
}

uint64_t sub_24E0B0F68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7FA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Dictionary<>.dataRepresentation.getter()
{
  sub_24E1158D0();
  swift_allocObject();
  sub_24E1158C0();
  sub_24E1160F0();
  swift_getWitnessTable();
  uint64_t v0 = sub_24E1158B0();
  swift_release();
  return v0;
}

uint64_t Dictionary<>.init(dataRepresentation:)(uint64_t a1, unint64_t a2)
{
  sub_24E1158A0();
  swift_allocObject();
  sub_24E115890();
  sub_24E1160F0();
  swift_getWitnessTable();
  sub_24E115880();
  sub_24E08D0B0(a1, a2);
  uint64_t result = swift_release();
  if (!v5) {
    return v6;
  }
  return result;
}

uint64_t sub_24E0B12B4()
{
  return Dictionary<>.dataRepresentation.getter();
}

uint64_t sub_24E0B12D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Dictionary<>.init(dataRepresentation:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t Dictionary<>.stringRepresentation.getter(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v82 = a4;
  uint64_t v83 = a6;
  uint64_t v6 = a3;
  uint64_t v75 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v86 = sub_24E116A90();
  uint64_t v16 = *(void *)(v86 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v86);
  v87 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v66 - v19;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v21 = sub_24E116E90();
    unint64_t v69 = 0;
    uint64_t v22 = 0;
    unint64_t v23 = 0;
    unint64_t v24 = v21 | 0x8000000000000000;
  }
  else
  {
    uint64_t v25 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = ~v25;
    uint64_t v26 = *(void *)(a1 + 64);
    unint64_t v69 = a1 + 64;
    uint64_t v27 = -v25;
    if (v27 < 64) {
      uint64_t v28 = ~(-1 << v27);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v23 = v28 & v26;
    unint64_t v24 = a1;
  }
  unint64_t v88 = v24;
  uint64_t v71 = v24 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v85 = TupleTypeMetadata2 - 8;
  uint64_t v68 = v22;
  uint64_t v73 = v74 + 16;
  uint64_t v72 = v75 + 16;
  uint64_t v84 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  v81 = (void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v80 = (void (**)(char *, char *, uint64_t))(v75 + 32);
  v76 = (void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v77 = (void (**)(char *, uint64_t))(v75 + 8);
  int64_t v70 = (unint64_t)(v22 + 64) >> 6;
  int64_t v67 = v70 - 1;
  swift_bridgeObjectRetain();
  int64_t v29 = 0;
  v93 = (void *)MEMORY[0x263F8EE80];
  v89 = v20;
  v90 = v14;
  uint64_t v78 = TupleTypeMetadata2;
  uint64_t v79 = a2;
  while (1)
  {
    long long v31 = v87;
    if ((v88 & 0x8000000000000000) == 0) {
      break;
    }
    if (sub_24E116EA0())
    {
      sub_24E117080();
      swift_unknownObjectRelease();
      sub_24E117080();
      swift_unknownObjectRelease();
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
    }
    uint64_t v91 = v23;
    int64_t v92 = v29;
    uint64_t v20 = v89;
LABEL_24:
    uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v31, v35, 1, TupleTypeMetadata2);
    (*v84)(v20, v31, v86);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v20, 1, TupleTypeMetadata2) == 1)
    {
      sub_24E0B1AF4();
      return (uint64_t)v93;
    }
    uint64_t v39 = &v20[*(int *)(TupleTypeMetadata2 + 48)];
    (*v81)(v14, v20, a2);
    (*v80)(v11, v39, v6);
    uint64_t v40 = sub_24E117040();
    uint64_t v42 = v41;
    uint64_t v43 = v11;
    uint64_t v44 = v6;
    uint64_t v45 = sub_24E117040();
    uint64_t v47 = v46;
    uint64_t v48 = v93;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v94 = v48;
    unint64_t v51 = sub_24E093D68(v40, v42);
    uint64_t v52 = v48[2];
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    char v55 = v50;
    if (v48[3] >= v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_24E0B38FC();
      }
    }
    else
    {
      sub_24E0B2228(v54, isUniquelyReferenced_nonNull_native);
      unint64_t v56 = sub_24E093D68(v40, v42);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_52;
      }
      unint64_t v51 = v56;
    }
    uint64_t v58 = v94;
    v93 = v94;
    if (v55)
    {
      uint64_t v30 = (uint64_t *)(v94[7] + 16 * v51);
      swift_bridgeObjectRelease();
      uint64_t *v30 = v45;
      v30[1] = v47;
    }
    else
    {
      v94[(v51 >> 6) + 8] |= 1 << v51;
      unint64_t v59 = (uint64_t *)(v58[6] + 16 * v51);
      *unint64_t v59 = v40;
      v59[1] = v42;
      uint64_t v60 = (uint64_t *)(v58[7] + 16 * v51);
      *uint64_t v60 = v45;
      v60[1] = v47;
      uint64_t v61 = v58[2];
      BOOL v62 = __OFADD__(v61, 1);
      uint64_t v63 = v61 + 1;
      if (v62) {
        goto LABEL_49;
      }
      void v58[2] = v63;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v43;
    uint64_t v6 = v44;
    (*v77)(v43, v44);
    uint64_t v14 = v90;
    a2 = v79;
    (*v76)(v90, v79);
    unint64_t v23 = v91;
    int64_t v29 = v92;
    TupleTypeMetadata2 = v78;
    uint64_t v20 = v89;
  }
  if (v23)
  {
    uint64_t v32 = v11;
    uint64_t v91 = (v23 - 1) & v23;
    int64_t v92 = v29;
    unint64_t v33 = __clz(__rbit64(v23)) | (v29 << 6);
    goto LABEL_13;
  }
  int64_t v36 = v29 + 1;
  if (__OFADD__(v29, 1)) {
    goto LABEL_50;
  }
  if (v36 >= v70)
  {
    uint64_t v91 = 0;
    int64_t v92 = v29;
LABEL_23:
    uint64_t v35 = 1;
    goto LABEL_24;
  }
  unint64_t v37 = *(void *)(v69 + 8 * v36);
  if (v37) {
    goto LABEL_19;
  }
  if (v29 + 2 >= v70)
  {
    uint64_t v91 = 0;
    int64_t v92 = v29 + 1;
    goto LABEL_23;
  }
  unint64_t v37 = *(void *)(v69 + 8 * (v29 + 2));
  if (v37)
  {
    int64_t v36 = v29 + 2;
    goto LABEL_19;
  }
  uint64_t v64 = v29 + 3;
  if (v29 + 3 >= v70)
  {
    uint64_t v91 = 0;
    int64_t v92 = v29 + 2;
    goto LABEL_23;
  }
  unint64_t v37 = *(void *)(v69 + 8 * v64);
  if (v37)
  {
    int64_t v36 = v29 + 3;
LABEL_19:
    uint64_t v32 = v11;
    uint64_t v91 = (v37 - 1) & v37;
    int64_t v92 = v36;
    unint64_t v33 = __clz(__rbit64(v37)) + (v36 << 6);
LABEL_13:
    unint64_t v34 = v88;
    (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v87, *(void *)(v88 + 48) + *(void *)(v74 + 72) * v33, a2);
    (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(&v31[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v34 + 56) + *(void *)(v75 + 72) * v33, v6);
    uint64_t v35 = 0;
    uint64_t v11 = v32;
    uint64_t v14 = v90;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v36 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      break;
    }
    if (v36 >= v70)
    {
      uint64_t v91 = 0;
      uint64_t v35 = 1;
      int64_t v92 = v67;
      goto LABEL_24;
    }
    unint64_t v37 = *(void *)(v69 + 8 * v36);
    ++v64;
    if (v37) {
      goto LABEL_19;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_24E117150();
  __break(1u);
  return result;
}

uint64_t sub_24E0B1AF4()
{
  return swift_release();
}

uint64_t sub_24E0B1AFC(uint64_t a1, int a2)
{
  return sub_24E0B1B24(a1, a2, &qword_26B1AF9D8, &qword_26B1AF9F8);
}

uint64_t sub_24E0B1B10(uint64_t a1, int a2)
{
  return sub_24E0B1B24(a1, a2, &qword_26B1AF9C8, &qword_26B1AF9F0);
}

uint64_t sub_24E0B1B24(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  unint64_t v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v50 = a2;
  uint64_t v11 = sub_24E116F00();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    uint64_t v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    long long v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    sub_24E1171C0();
    sub_24E116320();
    uint64_t result = sub_24E1171F0();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    void *v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  uint64_t v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_24E0B1F10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9E8);
  char v36 = a2;
  uint64_t v6 = sub_24E116F00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24E1171C0();
    sub_24E116320();
    uint64_t result = sub_24E1171F0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_24E0B2228(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D68);
  char v42 = a2;
  uint64_t v6 = sub_24E116F00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24E1171C0();
    sub_24E116320();
    uint64_t result = sub_24E1171F0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_24E0B2550(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E115E00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEB18);
  int v50 = a2;
  uint64_t v12 = sub_24E116F00();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  char v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  int64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  unint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    int64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_24E0B44BC((unint64_t *)&qword_26B1AFD60, MEMORY[0x263F07508]);
    uint64_t result = sub_24E116120();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  int64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_24E0B2A50(uint64_t a1, char a2)
{
  return sub_24E0B2A90(a1, a2, &qword_2698B7FB0, (void (*)(uint64_t, unsigned char *))sub_24E094E10);
}

uint64_t sub_24E0B2A70(uint64_t a1, char a2)
{
  return sub_24E0B2A90(a1, a2, &qword_26B1AEBC8, (void (*)(uint64_t, unsigned char *))sub_24E094E10);
}

uint64_t sub_24E0B2A90(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v9 = sub_24E116F00();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = (void *)(v8 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v38 + 8 * v16);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v38 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v38 + 8 * v16);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    int64_t v25 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v8 + 56) + 32 * v20;
    if (v39)
    {
      a4(v28, v40);
    }
    else
    {
      sub_24E090878(v28, (uint64_t)v40);
      swift_bridgeObjectRetain();
    }
    sub_24E1171C0();
    sub_24E116320();
    uint64_t result = sub_24E1171F0();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
    *uint64_t v18 = v27;
    v18[1] = v26;
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v40, *(void *)(v10 + 56) + 32 * v17);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_24E0B2DC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE828);
  char v46 = a2;
  uint64_t v6 = sub_24E116F00();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v45 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v44 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v22 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v23 = v22 | (v13 << 6);
      }
      else
      {
        int64_t v24 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44) {
          goto LABEL_34;
        }
        unint64_t v25 = v45[v24];
        ++v13;
        if (!v25)
        {
          int64_t v13 = v24 + 1;
          if (v24 + 1 >= v44) {
            goto LABEL_34;
          }
          unint64_t v25 = v45[v13];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v46)
              {
                uint64_t v43 = 1 << *(unsigned char *)(v5 + 32);
                if (v43 >= 64) {
                  bzero(v45, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v45 = -1 << v43;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v13 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v44) {
                  goto LABEL_34;
                }
                unint64_t v25 = v45[v13];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v26;
          }
        }
LABEL_21:
        unint64_t v10 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v13 << 6);
      }
      uint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v23);
      uint64_t v29 = *v27;
      uint64_t v28 = v27[1];
      unint64_t v30 = (long long *)(*(void *)(v5 + 56) + 112 * v23);
      if (v46)
      {
        long long v31 = *v30;
        long long v32 = v30[2];
        long long v48 = v30[1];
        long long v49 = v32;
        long long v47 = v31;
        long long v33 = v30[3];
        long long v34 = v30[4];
        long long v35 = v30[6];
        long long v52 = v30[5];
        long long v53 = v35;
        long long v51 = v34;
        long long v50 = v33;
      }
      else
      {
        sub_24E0B4460((uint64_t)v30, (uint64_t)&v47);
        swift_bridgeObjectRetain();
      }
      sub_24E1171C0();
      swift_bridgeObjectRetain();
      sub_24E116320();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24E1171F0();
      uint64_t v36 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v37 = result & ~v36;
      unint64_t v38 = v37 >> 6;
      if (((-1 << v37) & ~*(void *)(v11 + 8 * (v37 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v37) & ~*(void *)(v11 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v39 = 0;
        unint64_t v40 = (unint64_t)(63 - v36) >> 6;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v41 = v38 == v40;
          if (v38 == v40) {
            unint64_t v38 = 0;
          }
          v39 |= v41;
          uint64_t v42 = *(void *)(v11 + 8 * v38);
        }
        while (v42 == -1);
        unint64_t v14 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v29;
      v15[1] = v28;
      int64_t v16 = (_OWORD *)(*(void *)(v7 + 56) + 112 * v14);
      long long v17 = v47;
      long long v18 = v49;
      v16[1] = v48;
      v16[2] = v18;
      _OWORD *v16 = v17;
      long long v19 = v50;
      long long v20 = v51;
      long long v21 = v53;
      v16[5] = v52;
      v16[6] = v21;
      v16[3] = v19;
      void v16[4] = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_24E0B3124(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B1AE9A0);
  uint64_t v6 = sub_24E116F00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    long long v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_24E094E10(v23, v35);
    }
    else
    {
      sub_24E090878((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    sub_24E1171C0();
    type metadata accessor for CFString(0);
    sub_24E0B44BC((unint64_t *)&unk_26B1AEA80, type metadata accessor for CFString);
    sub_24E115EB0();
    uint64_t result = sub_24E1171F0();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_24E094E10(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  long long v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void *sub_24E0B3460()
{
  return sub_24E0B3488(&qword_26B1AF9D8, &qword_26B1AF9F8);
}

void *sub_24E0B3474()
{
  return sub_24E0B3488(&qword_26B1AF9C8, &qword_26B1AF9F0);
}

void *sub_24E0B3488(uint64_t *a1, uint64_t *a2)
{
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v34 = v2;
  uint64_t v7 = *v2;
  uint64_t v8 = sub_24E116EF0();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v40 = v8;
  if (!v9)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v40;
    uint64_t v31 = v34;
LABEL_28:
    *uint64_t v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  uint64_t result = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    uint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v40;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v35 = v7 + 64;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v18 = v39;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    unint64_t v22 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 56) + v25, v18);
    uint64_t v26 = v40;
    unint64_t v27 = (void *)(*(void *)(v40 + 48) + v21);
    *unint64_t v27 = v23;
    v27[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v26 + 56) + v25, v6, v18);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v34;
    uint64_t v32 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24E0B3744()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AF9E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E116EF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24E0B38FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7D68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E116EF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24E0B3AB8()
{
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  BOOL v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24E115E00();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEB18);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_24E116EF0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v46;
    int64_t v30 = v32;
LABEL_25:
    uint64_t *v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  unint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    int64_t v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    int64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24E0B3E64()
{
  return sub_24E0B3EA4(&qword_2698B7FB0, (void (*)(unsigned char *, uint64_t))sub_24E094E10);
}

void *sub_24E0B3E84()
{
  return sub_24E0B3EA4(&qword_26B1AEBC8, (void (*)(unsigned char *, uint64_t))sub_24E094E10);
}

void *sub_24E0B3EA4(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_24E116EF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  unint64_t v27 = v4;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 32 * v17;
    sub_24E090878(*(void *)(v5 + 56) + 32 * v17, (uint64_t)v29);
    unint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24E0B4094()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE828);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E116EF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v31 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 112 * v15;
    sub_24E0B4460(*(void *)(v2 + 56) + 112 * v15, (uint64_t)v32);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    uint64_t v22 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    long long v24 = v32[1];
    long long v23 = v32[2];
    _OWORD *v22 = v32[0];
    long long v25 = v32[3];
    long long v26 = v32[4];
    long long v27 = v32[6];
    v22[5] = v32[5];
    v22[6] = v27;
    v22[3] = v25;
    v22[4] = v26;
    v22[1] = v24;
    v22[2] = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v31;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_24E0B4298()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B1AE9A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E116EF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_24E090878(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_24E094E10(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24E0B4460(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24E0B44BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t os_activity(name:block:)(const char *a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (a3)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (a1 >> 11 == 27) {
      __break(1u);
    }
    if (a1 >> 16 > 0x10)
    {
      __break(1u);
    }
    else if ((a1 & 0xFFFFFF80) == 0)
    {
      if (a1 > 0xFF)
      {
        __break(1u);
        goto LABEL_21;
      }
      unsigned int v8 = ((_BYTE)a1 + 1);
LABEL_11:
      uint64_t v19 = (v8 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v8) & 0x38)) & 0x38));
      if (qword_26B1AFCF8 == -1)
      {
LABEL_12:
        uint64_t v6 = qword_26B1AFD18;
        unint64_t v7 = (const char *)&v19;
        goto LABEL_13;
      }
LABEL_21:
      swift_once();
      goto LABEL_12;
    }
    int v15 = (a1 & 0x3F) << 8;
    if (a1 >= 0x800)
    {
      unsigned int v16 = (v15 | (a1 >> 6) & 0x3F) << 8;
      unsigned int v17 = (((v16 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
      unsigned int v18 = (v16 | (a1 >> 12)) + 8487393;
      if (a1 >> 16) {
        unsigned int v8 = v17;
      }
      else {
        unsigned int v8 = v18;
      }
    }
    else
    {
      unsigned int v8 = (v15 | (a1 >> 6)) + 33217;
    }
    goto LABEL_11;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (qword_26B1AFCF8 != -1) {
LABEL_16:
  }
    swift_once();
  uint64_t v6 = qword_26B1AFD18;
  unint64_t v7 = a1;
LABEL_13:
  int64_t v9 = _os_activity_create(&dword_24E083000, v7, v6, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v9, &state);
  a4(v10, v11, v12, v13);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

os_activity_t hackyCreateActivity(_:dso:)(char *description, int a2, char a3, void *dso)
{
  if ((a3 & 1) == 0)
  {
    if (description)
    {
      if (dso)
      {
        if (qword_26B1AFCF8 == -1)
        {
LABEL_5:
          uint64_t v6 = qword_26B1AFD18;
          return _os_activity_create(dso, description, v6, OS_ACTIVITY_FLAG_DEFAULT);
        }
LABEL_20:
        swift_once();
        goto LABEL_5;
      }
LABEL_30:
      os_activity_t result = (os_activity_t)sub_24E116EC0();
      __break(1u);
      return result;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((unint64_t)description >> 32) {
    goto LABEL_19;
  }
  if (description >> 11 == 27) {
    goto LABEL_29;
  }
  if (description >> 16 > 0x10)
  {
    __break(1u);
  }
  else if ((description & 0xFFFFFF80) == 0)
  {
    if (description <= 0xFF)
    {
      unsigned int v8 = ((_BYTE)description + 1);
      goto LABEL_14;
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int v9 = (description & 0x3F) << 8;
  unsigned int v10 = (v9 | (description >> 6)) + 33217;
  unsigned int v11 = (v9 | (description >> 6) & 0x3F) << 8;
  unsigned int v12 = (((v11 | (description >> 12) & 0x3F) << 8) | (description >> 18)) - 2122219023;
  unsigned int v13 = (v11 | (description >> 12)) + 8487393;
  if (description >> 16) {
    unsigned int v8 = v12;
  }
  else {
    unsigned int v8 = v13;
  }
  if (description < 0x800) {
    unsigned int v8 = v10;
  }
LABEL_14:
  *(void *)descriptiona = (v8 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v8) & 0x38)) & 0x38));
  if (!dso) {
    goto LABEL_30;
  }
  if (qword_26B1AFCF8 != -1) {
    swift_once();
  }
  return _os_activity_create(dso, descriptiona, (os_activity_t)qword_26B1AFD18, OS_ACTIVITY_FLAG_DEFAULT);
}

uint64_t os_activity(name:block:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = a5;
  *(unsigned char *)(v5 + 88) = a3;
  *(void *)(v5 + 40) = a1;
  return MEMORY[0x270FA2498](sub_24E0B49CC, 0, 0);
}

uint64_t sub_24E0B49CC()
{
  *(void *)(v0 + 16) = 0;
  char v1 = *(unsigned char *)(v0 + 88);
  *(void *)(v0 + 24) = 0;
  *(void *)(swift_task_alloc() + 16) = &dword_24E083000;
  uint64_t v2 = *(const char **)(v0 + 40);
  if ((v1 & 1) == 0)
  {
    if (v2) {
      goto LABEL_11;
    }
    __break(1u);
  }
  unint64_t v3 = (unint64_t)v2 >> 32;
  if ((unint64_t)v2 >> 32)
  {
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    int v9 = (v2 & 0x3F) << 8;
    unsigned int v10 = (v9 | (v2 >> 6)) + 33217;
    unsigned int v11 = (v9 | (v2 >> 6) & 0x3F) << 8;
    unsigned int v12 = (((v11 | (v2 >> 12) & 0x3F) << 8) | (v2 >> 18)) - 2122219023;
    unsigned int v13 = (v11 | (v2 >> 12)) + 8487393;
    if (v3) {
      unsigned int v4 = v12;
    }
    else {
      unsigned int v4 = v13;
    }
    if (v2 < 0x800) {
      unsigned int v4 = v10;
    }
    goto LABEL_10;
  }
  if (v2 >> 11 == 27) {
    goto LABEL_25;
  }
  LODWORD(v3) = v2 >> 16;
  if (v2 >> 16 > 0x10) {
    goto LABEL_17;
  }
  if ((v2 & 0xFFFFFF80) != 0) {
    goto LABEL_18;
  }
  if (v2 > 0xFF)
  {
    __break(1u);
LABEL_25:
    __break(1u);
  }
  unsigned int v4 = ((_BYTE)v2 + 1);
LABEL_10:
  uint64_t v2 = (const char *)(v0 + 32);
  *(void *)(v0 + 32) = (v4 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v4) & 0x38)) & 0x38));
LABEL_11:
  if (qword_26B1AFCF8 != -1) {
    swift_once();
  }
  uint64_t v5 = _os_activity_create(&dword_24E083000, v2, (os_activity_t)qword_26B1AFD18, OS_ACTIVITY_FLAG_DEFAULT);
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = *(int **)(v0 + 48);
  swift_task_dealloc();
  os_activity_scope_enter(v5, (os_activity_scope_state_t)(v0 + 16));
  unint64_t v14 = (uint64_t (*)(void))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E0B4C58;
  return v14();
}

uint64_t sub_24E0B4C58()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0B4E34;
  }
  else {
    uint64_t v2 = sub_24E0B4D98;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0B4D98()
{
  os_activity_scope_leave(v0 + 1);
  swift_unknownObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0->opaque[1];
  return v1();
}

uint64_t sub_24E0B4E34()
{
  os_activity_scope_leave(v0 + 1);
  swift_unknownObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0->opaque[1];
  return v1();
}

uint64_t sub_24E0B4ED0()
{
  qword_26B1AFD18 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t sub_24E0B4F0C()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1338);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1338);
  if (qword_26B1AE738 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1320);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t XPCAlarm.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCAlarm.criteria.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for XPCAlarm(0);
  return sub_24E0B772C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for XPCAlarm.Criteria);
}

uint64_t type metadata accessor for XPCAlarm(uint64_t a1)
{
  return sub_24E0ABC64(a1, (uint64_t *)&unk_26B1AE740);
}

uint64_t type metadata accessor for XPCAlarm.Criteria(uint64_t a1)
{
  return sub_24E0ABC64(a1, qword_26B1AE698);
}

uint64_t XPCAlarm.init(identifier:criteria:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  uint64_t v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0B50B4, 0, 0);
}

uint64_t sub_24E0B50B4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = (void *)v0[2];
  void *v3 = v0[3];
  v3[1] = v1;
  uint64_t v4 = type metadata accessor for XPCAlarm(0);
  sub_24E0B772C(v2, (uint64_t)v3 + *(int *)(v4 + 20), type metadata accessor for XPCAlarm.Criteria);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24E0B517C;
  return sub_24E0B52EC();
}

uint64_t sub_24E0B517C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0B5278, 0, 0);
}

uint64_t sub_24E0B5278()
{
  sub_24E0B7794(*(void *)(v0 + 40), type metadata accessor for XPCAlarm.Criteria);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0B52EC()
{
  v1[3] = v0;
  v1[4] = type metadata accessor for XPCAlarm(0);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0B5380, 0, 0);
}

uint64_t sub_24E0B5380()
{
  uint64_t v15 = v0;
  _s10FindMyBase8XPCAlarmV10unregister10identifierySS_tFZ_0(**(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 8));
  if (qword_26B1AE690 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = sub_24E115F00();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B1B1338);
  sub_24E0B772C(v2, v1, type metadata accessor for XPCAlarm);
  uint64_t v4 = sub_24E115EE0();
  os_log_type_t v5 = sub_24E1169A0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 40);
  if (v6)
  {
    unsigned int v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v9 = v14;
    *(_DWORD *)unsigned int v8 = 136446210;
    uint64_t v10 = XPCAlarm.description.getter();
    *(void *)(v0 + 16) = sub_24E090400(v10, v11, &v14);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    sub_24E0B7794(v7, type metadata accessor for XPCAlarm);
    _os_log_impl(&dword_24E083000, v4, v5, "Registering %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v9, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);
  }
  else
  {
    sub_24E0B7794(*(void *)(v0 + 40), type metadata accessor for XPCAlarm);
  }

  sub_24E0B5740();
  sub_24E1162D0();
  xpc_set_event();
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  unsigned int v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t XPCAlarm.description.getter()
{
  return 60;
}

uint64_t sub_24E0B5740()
{
  xpc_object_t v1 = xpc_dictionary_create(0, 0, 0);
  uint64_t result = sub_24E115D30();
  double v4 = ceil(v3);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  int64_t v5 = 1000000000 * (uint64_t)v4;
  if ((unsigned __int128)((uint64_t)v4 * (__int128)1000000000) >> 64 != v5 >> 63)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  xpc_dictionary_set_date(v1, "Date", v5);
  uint64_t v6 = *(void *)(v0 + *(int *)(type metadata accessor for XPCAlarm.Criteria(0) + 20));
  if ((v6 & 2) != 0) {
    xpc_dictionary_set_BOOL(v1, "ShouldWake", 0);
  }
  if ((v6 & 4) != 0) {
    xpc_dictionary_set_BOOL(v1, "UserVisible", 1);
  }
  return (uint64_t)v1;
}

uint64_t XPCAlarm.Criteria.Options.rawValue.getter()
{
  return *(void *)v0;
}

FindMyBase::XPCAlarm::Criteria::Options __swiftcall XPCAlarm.Criteria.Options.init(rawValue:)(FindMyBase::XPCAlarm::Criteria::Options rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static XPCAlarm.Criteria.Options.shouldNotWake.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static XPCAlarm.Criteria.Options.userVisible.getter(void *a1@<X8>)
{
  *a1 = 4;
}

uint64_t XPCAlarm.Criteria.Options.description.getter()
{
  uint64_t v1 = *v0;
  if ((*v0 & 2) == 0)
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE78];
    if ((v1 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_24E08B2D4(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  int64_t v5 = (char *)&v2[2 * v4];
  strcpy(v5 + 32, ".shouldNotWake");
  v5[47] = -18;
  if ((v1 & 4) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_24E08B2D4((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    unsigned int v8 = (char *)&v2[2 * v7];
    strcpy(v8 + 32, ".userVisible");
    v8[45] = 0;
    *((_WORD *)v8 + 23) = -5120;
  }
LABEL_12:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
  sub_24E085388();
  sub_24E116140();
  swift_bridgeObjectRelease();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  return 91;
}

uint64_t sub_24E0B5A14()
{
  return sub_24E116540();
}

uint64_t sub_24E0B5A74()
{
  return sub_24E116510();
}

uint64_t XPCAlarm.Criteria.init(date:options:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = sub_24E115D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for XPCAlarm.Criteria(0);
  *(void *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t XPCAlarm.Criteria.description.getter()
{
  sub_24E116C70();
  swift_bridgeObjectRelease();
  type metadata accessor for XPCAlarm.Criteria(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7FD8);
  sub_24E116290();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  if (qword_2698B7938 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698B86D0;
  uint64_t v1 = (void *)sub_24E115CF0();
  id v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  sub_24E1161F0();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  if (qword_26B1AE600 != -1) {
    swift_once();
  }
  unint64_t v3 = (void *)qword_26B1AE608;
  unint64_t v4 = (void *)sub_24E115CF0();
  id v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  sub_24E1161F0();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  XPCAlarm.Criteria.Options.description.getter();
  sub_24E116370();
  swift_bridgeObjectRelease();
  return 60;
}

BOOL static XPCAlarm.Criteria.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_24E115D40() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for XPCAlarm.Criteria(0);
  return *(void *)(a1 + *(int *)(v4 + 20)) == *(void *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_24E0B5DE8()
{
  if (*v0) {
    return 0x736E6F6974706FLL;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_24E0B5E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E0B7648(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E0B5E44()
{
  return 0;
}

void sub_24E0B5E50(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24E0B5E5C(uint64_t a1)
{
  unint64_t v2 = sub_24E0B66B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0B5E98(uint64_t a1)
{
  unint64_t v2 = sub_24E0B66B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCAlarm.Criteria.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B7FE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unsigned int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0B66B8();
  sub_24E117240();
  char v12 = 0;
  sub_24E115D80();
  sub_24E0B6760(&qword_2698B7FF0);
  sub_24E117000();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for XPCAlarm.Criteria(0) + 20));
    v10[15] = 1;
    sub_24E0B670C();
    sub_24E117000();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t XPCAlarm.Criteria.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = sub_24E115D80();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8000);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for XPCAlarm.Criteria(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0B66B8();
  sub_24E117220();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v11 = v10;
  uint64_t v12 = v21;
  char v27 = 0;
  sub_24E0B6760(&qword_2698B8008);
  uint64_t v13 = v23;
  sub_24E116FA0();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v19 = (uint64_t)v11;
  v14(v11, v5, v13);
  char v26 = 1;
  sub_24E0B67A4();
  sub_24E116FA0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v24);
  uint64_t v16 = v19;
  uint64_t v15 = v20;
  *(void *)(v19 + *(int *)(v8 + 20)) = v25;
  sub_24E0B772C(v16, v15, type metadata accessor for XPCAlarm.Criteria);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24E0B7794(v16, type metadata accessor for XPCAlarm.Criteria);
}

uint64_t sub_24E0B63E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return XPCAlarm.Criteria.init(from:)(a1, a2);
}

uint64_t sub_24E0B63FC(void *a1)
{
  return XPCAlarm.Criteria.encode(to:)(a1);
}

BOOL sub_24E0B6414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_24E115D40() & 1) != 0 && *(void *)(a1 + *(int *)(a3 + 20)) == *(void *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_24E0B646C()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1320);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1320);
  return sub_24E115EF0();
}

uint64_t _s10FindMyBase8XPCAlarmV10unregister10identifierySS_tFZ_0(uint64_t a1, unint64_t a2)
{
  if (qword_26B1AE690 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24E115F00();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B1B1338);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_24E115EE0();
  os_log_type_t v6 = sub_24E1169A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    sub_24E090400(a1, a2, &v10);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v5, v6, "Unregistering %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v8, -1, -1);
    MEMORY[0x2533338B0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_24E1162D0();
  xpc_set_event();
  return swift_release();
}

unint64_t sub_24E0B66B8()
{
  unint64_t result = qword_2698B7FE8;
  if (!qword_2698B7FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7FE8);
  }
  return result;
}

unint64_t sub_24E0B670C()
{
  unint64_t result = qword_2698B7FF8;
  if (!qword_2698B7FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B7FF8);
  }
  return result;
}

uint64_t sub_24E0B6760(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24E115D80();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E0B67A4()
{
  unint64_t result = qword_2698B8010;
  if (!qword_2698B8010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8010);
  }
  return result;
}

unint64_t sub_24E0B67FC()
{
  unint64_t result = qword_2698B8018;
  if (!qword_2698B8018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8018);
  }
  return result;
}

unint64_t sub_24E0B6854()
{
  unint64_t result = qword_2698B8020;
  if (!qword_2698B8020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8020);
  }
  return result;
}

unint64_t sub_24E0B68AC()
{
  unint64_t result = qword_2698B8028;
  if (!qword_2698B8028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8028);
  }
  return result;
}

unint64_t sub_24E0B6904()
{
  unint64_t result = qword_2698B8030;
  if (!qword_2698B8030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8030);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for XPCAlarm(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24E115D80();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    uint64_t v11 = type metadata accessor for XPCAlarm.Criteria(0);
    *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
  }
  return v3;
}

uint64_t destroy for XPCAlarm(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24E115D80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for XPCAlarm(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24E115D80();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  uint64_t v10 = type metadata accessor for XPCAlarm.Criteria(0);
  *(void *)&v6[*(int *)(v10 + 20)] = *(void *)&v7[*(int *)(v10 + 20)];
  return a1;
}

void *assignWithCopy for XPCAlarm(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E115D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for XPCAlarm.Criteria(0);
  *(void *)&v7[*(int *)(v10 + 20)] = *(void *)&v8[*(int *)(v10 + 20)];
  return a1;
}

_OWORD *initializeWithTake for XPCAlarm(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24E115D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for XPCAlarm.Criteria(0);
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  return a1;
}

void *assignWithTake for XPCAlarm(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E115D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for XPCAlarm.Criteria(0);
  *(void *)&v8[*(int *)(v11 + 20)] = *(void *)&v9[*(int *)(v11 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E0B6D6C);
}

uint64_t sub_24E0B6D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for XPCAlarm.Criteria(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for XPCAlarm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E0B6E30);
}

uint64_t sub_24E0B6E30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for XPCAlarm.Criteria(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E0B6ED8()
{
  uint64_t result = type metadata accessor for XPCAlarm.Criteria(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for XPCAlarm.Criteria(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24E115D80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for XPCAlarm.Criteria(uint64_t a1)
{
  uint64_t v2 = sub_24E115D80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for XPCAlarm.Criteria(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E115D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for XPCAlarm.Criteria(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E115D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for XPCAlarm.Criteria(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E115D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for XPCAlarm.Criteria(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E115D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCAlarm.Criteria(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E0B72A4);
}

uint64_t sub_24E0B72A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115D80();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for XPCAlarm.Criteria(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E0B7324);
}

uint64_t sub_24E0B7324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115D80();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24E0B7394()
{
  uint64_t result = sub_24E115D80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCAlarm.Criteria.Options()
{
  return &type metadata for XPCAlarm.Criteria.Options;
}

unsigned char *storeEnumTagSinglePayload for XPCAlarm.Criteria.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0B7508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCAlarm.Criteria.CodingKeys()
{
  return &type metadata for XPCAlarm.Criteria.CodingKeys;
}

unint64_t sub_24E0B7544()
{
  unint64_t result = qword_2698B8038;
  if (!qword_2698B8038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8038);
  }
  return result;
}

unint64_t sub_24E0B759C()
{
  unint64_t result = qword_2698B8040;
  if (!qword_2698B8040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8040);
  }
  return result;
}

unint64_t sub_24E0B75F4()
{
  unint64_t result = qword_2698B8048;
  if (!qword_2698B8048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8048);
  }
  return result;
}

uint64_t sub_24E0B7648(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E0B772C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E0B7794(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static TimeZone.gmt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698B8050);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E115E50();
  uint64_t v5 = sub_24E115E80();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t static Transaction.current.getter()
{
  return sub_24E0B7A58(&qword_26B1AFD70);
}

uint64_t sub_24E0B7928(uint64_t a1)
{
  return sub_24E0B7974(a1, &qword_26B1AFD58, &qword_26B1AFD90);
}

uint64_t static Transaction.$current.getter()
{
  return sub_24E0B79E8(&qword_26B1AFD70);
}

uint64_t sub_24E0B7960(uint64_t a1)
{
  return sub_24E0B7974(a1, &qword_26B1AFD08, &qword_26B1AFD88);
}

uint64_t sub_24E0B7974(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_allocObject();
  uint64_t result = sub_24E117350();
  *a3 = result;
  return result;
}

uint64_t static Transaction.$currentNSXPCConnection.getter()
{
  return sub_24E0B79E8(&qword_26B1AFD78);
}

uint64_t sub_24E0B79E8(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t static Transaction.currentNSXPCConnection.getter()
{
  return sub_24E0B7A58(&qword_26B1AFD78);
}

uint64_t sub_24E0B7A58(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  sub_24E117360();
  return v2;
}

uint64_t sub_24E0B7AA8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24E095558;
  return v7();
}

uint64_t sub_24E0B7B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  void v7[5] = a5;
  v7[3] = a1;
  return MEMORY[0x270FA2498](sub_24E0B7B9C, 0, 0);
}

uint64_t sub_24E0B7B9C()
{
  if (qword_26B1AFD70 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + 16) = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24E0B7D04;
  uint64_t v5 = *(void *)(v0 + 24);
  return MEMORY[0x270FA23C8](v5, v0 + 16, &unk_2698B80B0, v2, 0, 0, 0xD00000000000001CLL, 0x800000024E1188B0);
}

uint64_t sub_24E0B7D04()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0B7E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  void v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x270FA2498](sub_24E0B7E5C, 0, 0);
}

uint64_t sub_24E0B7E5C()
{
  if (qword_26B1AFD78 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = *(void *)(v0 + 32);
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E0B7FAC;
  uint64_t v3 = *(void *)(v0 + 24);
  return MEMORY[0x270FA23C8](v3, v0 + 16, &unk_2698B80C0, v1, 0, 0, 0xD00000000000001CLL, 0x800000024E1188B0);
}

uint64_t sub_24E0B7FAC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0B80C0(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  void *v3 = v2;
  v3[1] = sub_24E0A6D9C;
  return v5();
}

uint64_t static Transaction.named<A>(_:with:)(char *a1, uint64_t a2, int a3, void (*a4)(void))
{
  return swift_release();
}

uint64_t static Transaction.named<A>(_:with:)(char *a1, uint64_t a2, int a3)
{
  return static Transaction.named<A>(_:with:)(a1, a2, a3, (void (*)(void))sub_24E0B9744);
}

uint64_t static Transaction.named<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = v6;
  *(unsigned char *)(v7 + 88) = a4;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24E0B8294, 0, 0);
}

uint64_t sub_24E0B8294()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(int **)(v0 + 40);
  uint64_t v3 = *(char **)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 88);
  swift_allocObject();
  uint64_t v5 = sub_24E0B88D4(v3, v2, v4);
  *(void *)(v0 + 64) = v5;
  uint64_t v9 = (uint64_t (*)(uint64_t, os_activity_scope_state_s *))((char *)v1 + *v1);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24E0B83B4;
  uint64_t v7 = *(void *)(v0 + 16);
  return v9(v7, v5);
}

uint64_t sub_24E0B83B4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E087714;
  }
  else {
    uint64_t v2 = sub_24E0B84C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0B84C8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static Transaction.named<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = v7;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 48) = a6;
  *(unsigned char *)(v8 + 96) = a4;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E0B855C, 0, 0);
}

uint64_t sub_24E0B855C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_24E0B8654;
  uint64_t v5 = *(void *)(v0 + 64);
  char v6 = *(unsigned char *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 40) = &unk_2698B8078;
  *(unsigned char *)(v4 + 88) = v6;
  *(_OWORD *)(v4 + 24) = v8;
  *(void *)(v4 + 16) = v7;
  return MEMORY[0x270FA2498](sub_24E0B8294, 0, 0);
}

uint64_t sub_24E0B8654()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0B8790, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E0B8790()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0B87F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_24E095114;
  return v7(a1);
}

os_activity_scope_state_s *sub_24E0B88D4(char *a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_24E115E00();
  uint64_t v8 = *(os_activity_scope_state_s ***)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v36 - v10;
  v3[3].opaque[0] = 0;
  v3[3].opaque[1] = 0;
  int v12 = v3 + 48;
  uint64_t v36 = v3 + 3;
  int v37 = a3;
  if ((a3 & 1) == 0)
  {
    if (a1)
    {
      while (1)
      {
        *(void *)description = sub_24E116300();
        unint64_t v40 = v14;
        swift_bridgeObjectRetain();
        sub_24E116370();
        swift_bridgeObjectRelease();
        uint64_t v15 = *(void *)description;
        unint64_t v16 = v40;
        sub_24E115DF0();
        sub_24E115DB0();
        ((void (*)(char *, uint64_t))v8[1])(v11, v7);
        *(void *)description = v15;
        unint64_t v40 = v16;
        swift_bridgeObjectRetain();
        sub_24E116370();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v17 = v40;
        v4[1].opaque[0] = *(void *)description;
        v4[1].opaque[1] = v17;
        uint64_t v7 = sub_24E1162D0();
        uint64_t v18 = os_transaction_create();
        swift_release();
        if (!v18) {
          goto LABEL_50;
        }
        uint64_t v8 = &v36;
        v4[2].opaque[0] = v18;
        LODWORD(v10) = v37;
        if (v37)
        {
          unint64_t v10 = (unint64_t)a1 >> 32;
          if (!((unint64_t)a1 >> 32))
          {
            LODWORD(v10) = a1 >> 11;
            if (a1 >> 11 == 27) {
              goto LABEL_49;
            }
            LODWORD(v10) = a1 >> 16;
            if (a1 >> 16 > 0x10) {
              goto LABEL_44;
            }
            if ((a1 & 0xFFFFFF80) != 0) {
              goto LABEL_45;
            }
            if (a1 <= 0xFF)
            {
              unsigned int v21 = ((_BYTE)a1 + 1);
              goto LABEL_23;
            }
            __break(1u);
            goto LABEL_48;
          }
        }
        else
        {
          if (a1)
          {
            if (qword_26B1AFCF8 != -1) {
              swift_once();
            }
            uint64_t v19 = qword_26B1AFD18;
            uint64_t v20 = a1;
            goto LABEL_26;
          }
LABEL_35:
          __break(1u);
        }
        __break(1u);
LABEL_37:
        int v30 = (a1 & 0x3F) << 8;
        unsigned int v31 = (v30 | (a1 >> 6)) + 33217;
        unsigned int v32 = (v30 | (a1 >> 6) & 0x3F) << 8;
        unsigned int v33 = (((v32 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
        unsigned int v34 = (v32 | (a1 >> 12)) + 8487393;
        if (v10) {
          unsigned int v13 = v33;
        }
        else {
          unsigned int v13 = v34;
        }
        if (a1 < 0x800) {
          unsigned int v13 = v31;
        }
LABEL_10:
        *(void *)description = (v13 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v13) >> 3)) & 7)));
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v10 = (unint64_t)a1 >> 32;
  if ((unint64_t)a1 >> 32)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  LODWORD(v10) = a1 >> 11;
  if (a1 >> 11 == 27)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    unsigned int v35 = (v12 | (a1 >> 6) & 0x3F) << 8;
    if (v10) {
      unsigned int v21 = (((v35 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    }
    else {
      unsigned int v21 = (v35 | (a1 >> 12)) + 8487393;
    }
    goto LABEL_23;
  }
  LODWORD(v10) = a1 >> 16;
  if (a1 >> 16 > 0x10)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((a1 & 0xFFFFFF80) != 0) {
    goto LABEL_37;
  }
  if (a1 <= 0xFF)
  {
    unsigned int v13 = ((_BYTE)a1 + 1);
    goto LABEL_10;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  int v12 = (a1 & 0x3F) << 8;
  if (a1 >= 0x800) {
    goto LABEL_51;
  }
  unsigned int v21 = (v12 | (a1 >> 6)) + 33217;
LABEL_23:
  *(void *)description = (v21 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v21) & 0x38)) & 0x38));
  if (qword_26B1AFCF8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_26B1AFD18;
  uint64_t v20 = description;
LABEL_26:
  v4[2].opaque[1] = (uint64_t)_os_activity_create(&dword_24E083000, v20, v19, OS_ACTIVITY_FLAG_DEFAULT);
  uint64_t v22 = v36;
  swift_beginAccess();
  uint64_t v23 = swift_unknownObjectRetain();
  os_activity_scope_enter(v23, v22);
  swift_endAccess();
  swift_unknownObjectRelease();
  if (qword_26B1AFD20 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24E115F00();
  __swift_project_value_buffer(v24, (uint64_t)qword_26B1B1448);
  swift_retain_n();
  uint64_t v25 = sub_24E115EE0();
  os_log_type_t v26 = sub_24E116960();
  if (os_log_type_enabled(v25, v26))
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)char v27 = 136446210;
    uint64_t v38 = v28;
    *(void *)description = 0x3A4E58545BLL;
    unint64_t v40 = 0xE500000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_release();
    *(void *)description = sub_24E090400(*(uint64_t *)description, v40, &v38);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v25, v26, "Opened %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v28, -1, -1);
    MEMORY[0x2533338B0](v27, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return v4;
}

uint64_t Transaction.deinit()
{
  sub_24E0B8F24();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_24E0B8F24()
{
  if (qword_26B1AFD20 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E115F00();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1B1448);
  swift_retain_n();
  uint64_t v2 = sub_24E115EE0();
  os_log_type_t v3 = sub_24E116960();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v7 = v5;
    uint64_t v8 = 0x3A4E58545BLL;
    unint64_t v9 = 0xE500000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24E116370();
    swift_bridgeObjectRelease();
    sub_24E116370();
    swift_release();
    uint64_t v8 = sub_24E090400(0x3A4E58545BLL, 0xE500000000000000, &v7);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v2, v3, "Closed %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v5, -1, -1);
    MEMORY[0x2533338B0](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  os_activity_scope_leave(v0 + 3);
  return swift_endAccess();
}

uint64_t Transaction.__deallocating_deinit()
{
  sub_24E0B8F24();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Transaction.description.getter()
{
  return 0x3A4E58545BLL;
}

uint64_t sub_24E0B9214()
{
  return 0x3A4E58545BLL;
}

uint64_t sub_24E0B9290()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1448);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1448);
  return sub_24E115EF0();
}

uint64_t _s10FindMyBase11TransactionC9asyncTask4name5blockys12StaticStringV_yyYaYbctFZ_0(char *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1AFD70 != -1) {
    swift_once();
  }
  sub_24E117360();
  uint64_t v13 = v35;
  if (v35)
  {
    uint64_t v33 = a4;
    if (qword_26B1AFD20 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24E115F00();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B1B1448);
    swift_retain_n();
    uint64_t v15 = sub_24E115EE0();
    os_log_type_t v16 = sub_24E116990();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v32 = a5;
      uint64_t v18 = v17;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v35 = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v20 = sub_24E116CB0();
      uint64_t v34 = sub_24E090400(v20, v21, &v35);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v22 = *(void *)(v13 + 16);
      unint64_t v23 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_24E090400(v22, v23, &v35);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v15, v16, "Transaction.asyncTask(name:) called with [%{public}s] when transaction [%{public}s] already exists!", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v19, -1, -1);
      uint64_t v24 = v18;
      a5 = v32;
      MEMORY[0x2533338B0](v24, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v29 = sub_24E1166C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
    int v30 = (void *)swift_allocObject();
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = v33;
    v30[5] = a5;
    swift_retain();
    sub_24E09A98C((uint64_t)v12, (uint64_t)&unk_2698B80A0, (uint64_t)v30);
    swift_release();
  }
  else
  {
    type metadata accessor for Transaction();
    swift_allocObject();
    uint64_t v25 = sub_24E0B88D4(a1, a2, a3);
    id v26 = objc_msgSend(self, sel_currentConnection);
    uint64_t v27 = sub_24E1166C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 1, 1, v27);
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = 0;
    v28[3] = 0;
    void v28[4] = v25;
    v28[5] = v26;
    void v28[6] = a4;
    v28[7] = a5;
    swift_retain();
    swift_retain();
    sub_24E09A98C((uint64_t)v12, (uint64_t)&unk_2698B8090, (uint64_t)v28);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24E0B9744()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_24E0B976C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095114;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  char v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *char v6 = v5;
  v6[1] = sub_24E095114;
  return v8(a1);
}

uint64_t type metadata accessor for Transaction()
{
  return self;
}

uint64_t method lookup function for Transaction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Transaction);
}

uint64_t sub_24E0B98CC()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24E0B991C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_24E095114;
  *(_OWORD *)(v6 + 48) = v7;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 24) = a1;
  return MEMORY[0x270FA2498](sub_24E0B7B9C, 0, 0);
}

uint64_t sub_24E0B99E0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24E0B9A20()
{
  uint64_t v2 = *(int **)(v0 + 32);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_24E095558;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24E095558;
  return v6();
}

uint64_t sub_24E0B9B38(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_24E095558;
  *(_OWORD *)(v5 + 40) = v6;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = v4;
  return MEMORY[0x270FA2498](sub_24E0B7E5C, 0, 0);
}

uint64_t sub_24E0B9BF8()
{
  uint64_t v2 = *(int **)(v0 + 16);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_24E095558;
  long long v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24E0A6D9C;
  return v6();
}

uint64_t dispatch thunk of IsolatedCustomStringConvertible.isolatedDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E0B9E00;
  return v7(a1, a2);
}

uint64_t sub_24E0B9E00(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t BinaryDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for BufferedData();
  uint64_t v9 = (void *)swift_allocObject();
  v9[3] = a3;
  v9[4] = 0;
  _OWORD v9[2] = a2;
  sub_24E08D248(a2, a3);
  uint64_t v12[3] = &type metadata for _BinaryDecoder;
  v12[4] = &off_27002CF18;
  v12[0] = v9;
  v12[1] = 0;
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(a5 + 8);
  swift_retain();
  v10(v12, a4, a5);
  return swift_release();
}

uint64_t BinaryDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v8[0] = a2;
  v8[1] = 0;
  void v8[3] = &type metadata for _BinaryDecoder;
  long long v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  return v6(v8, a3, a4);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(void *, uint64_t, uint64_t);
  void v13[5];

  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24E08DFA8(a2);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  type metadata accessor for BufferedData();
  uint64_t v10 = (void *)swift_allocObject();
  v10[3] = v9;
  v10[4] = 0;
  v10[2] = v7;
  v13[3] = &type metadata for _BinaryDecoder;
  void v13[4] = &off_27002CF18;
  v13[0] = v10;
  v13[1] = 0;
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  v11(v13, a3, a4);
  return swift_release();
}

uint64_t sub_24E0BA150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for BinaryDecodingContainer();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  a1[3] = v4;
  a1[4] = (uint64_t)&off_27002D5A8;
  *a1 = v5;
  return swift_retain();
}

BOOL sub_24E0BA1BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + 24;
  unint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v5 + 8);
  uint64_t v6 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x24E0BA22CLL);
      }
      uint64_t v6 = (int)v6;
      return v3 == v6;
    case 2uLL:
      uint64_t v9 = v2 + 16;
      uint64_t v8 = *(void *)(v2 + 16);
      uint64_t v7 = *(void *)(v9 + 8);
      BOOL v10 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v10) {
        return v3 == v6;
      }
      goto LABEL_8;
    case 3uLL:
      return v3 == v6;
    default:
      uint64_t v6 = BYTE6(v4);
      return v3 == v6;
  }
}

uint64_t sub_24E0BA23C()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24E116E50();
  uint64_t v4 = v3 / 8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v5 + 32);
  swift_retain();
  uint64_t v7 = sub_24E0CC4D4(v3 / 8, v6);
  if (v2) {
    return swift_release();
  }
  uint64_t v10 = *(void *)(v5 + 32);
  BOOL v11 = __OFADD__(v10, v4);
  uint64_t v12 = v10 + v4;
  if (v11)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    JUMPOUT(0x24E0BA41CLL);
  }
  uint64_t v13 = v7;
  unint64_t v14 = v8;
  *(void *)(v5 + 32) = v12;
  uint64_t v15 = swift_release();
  switch(v14 >> 62)
  {
    case 1uLL:
      LODWORD(v16) = HIDWORD(v13) - v13;
      if (__OFSUB__(HIDWORD(v13), v13)) {
        goto LABEL_14;
      }
      uint64_t v16 = (int)v16;
LABEL_9:
      if (v16 >= v4)
      {
LABEL_12:
        MEMORY[0x270FA5388](v15);
        sub_24E115BF0();
        uint64_t result = sub_24E08D0B0(v13, v14);
      }
      else
      {
LABEL_10:
        sub_24E0BAD9C();
        swift_allocError();
        *uint64_t v19 = 0;
        swift_willThrow();
        uint64_t result = sub_24E08D0B0(v13, v14);
      }
      break;
    case 2uLL:
      uint64_t v18 = *(void *)(v13 + 16);
      uint64_t v17 = *(void *)(v13 + 24);
      BOOL v11 = __OFSUB__(v17, v18);
      uint64_t v16 = v17 - v18;
      if (!v11) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 3uLL:
      if (v3 <= 7) {
        goto LABEL_12;
      }
      goto LABEL_10;
    default:
      uint64_t v16 = BYTE6(v14);
      goto LABEL_9;
  }
  return result;
}

uint64_t sub_24E0BA42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_24E117100();
  sub_24E117090();
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  return sub_24E08A680(a4, (uint64_t)sub_24E0BAE0C, (uint64_t)v11, a3, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v9);
}

void *sub_24E0BA58C(void *result, uint64_t a2, void *__src, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a4 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!result)
  {
    if (v5 <= 0) {
      return result;
    }
LABEL_12:
    uint64_t result = (void *)sub_24E116F20();
    __break(1u);
    return result;
  }
  if (a2 - (uint64_t)result < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    size_t v7 = a4 - (void)__src;
    return memmove(result, __src, v7);
  }
  return result;
}

uint64_t sub_24E0BA628(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24E116270();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v9 + 32);
  swift_retain();
  uint64_t result = sub_24E0CC4D4(0x7FFFFFFFFFFFFFFFLL, v10);
  if (v3)
  {
    swift_release();
    return a1;
  }
  uint64_t v13 = *(void *)(v9 + 32);
  BOOL v14 = __OFADD__(v13, 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v15 = v13 + 0x7FFFFFFFFFFFFFFFLL;
  if (!v14)
  {
    uint64_t v16 = result;
    unint64_t v17 = v12;
    *(void *)(v9 + 32) = v15;
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    uint64_t v18 = sub_24E116210();
    if (v19)
    {
      a1 = v18;
    }
    else
    {
      sub_24E0BAD9C();
      swift_allocError();
      unsigned char *v20 = 0;
      swift_willThrow();
    }
    sub_24E08D0B0(v16, v17);
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E0BA7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 16);
  v9[3] = &type metadata for _BinaryDecoder;
  v9[4] = &off_27002CF18;
  v9[0] = v6;
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 8);
  swift_retain();
  swift_retain();
  return v7(v9, a2, a3);
}

uint64_t sub_24E0BA864(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 + 32);
  swift_retain();
  uint64_t v6 = sub_24E0CC4D4(a1, v5);
  unint64_t v8 = v7;
  if (v2)
  {
    swift_release();
  }
  else
  {
    uint64_t v9 = *(void *)(v4 + 32);
    BOOL v10 = __OFADD__(v9, a1);
    uint64_t v11 = v9 + a1;
    if (v10)
    {
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      JUMPOUT(0x24E0BA998);
    }
    *(void *)(v4 + 32) = v11;
    swift_release();
    switch(v8 >> 62)
    {
      case 1uLL:
        LODWORD(v12) = HIDWORD(v6) - v6;
        if (__OFSUB__(HIDWORD(v6), v6)) {
          goto LABEL_15;
        }
        uint64_t v12 = (int)v12;
LABEL_9:
        if (v12 != a1)
        {
LABEL_10:
          sub_24E0BAD9C();
          swift_allocError();
          *uint64_t v15 = 1;
          swift_willThrow();
          sub_24E08D0B0(v6, v8);
        }
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(v6 + 16);
        uint64_t v13 = *(void *)(v6 + 24);
        BOOL v10 = __OFSUB__(v13, v14);
        uint64_t v12 = v13 - v14;
        if (!v10) {
          goto LABEL_9;
        }
        goto LABEL_16;
      case 3uLL:
        if (!a1) {
          return v6;
        }
        goto LABEL_10;
      default:
        uint64_t v12 = BYTE6(v8);
        goto LABEL_9;
    }
  }
  return v6;
}

uint64_t sub_24E0BA9A8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[2];
  unint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v2), v2)) {
        goto LABEL_10;
      }
      uint64_t v5 = HIDWORD(v2) - (int)v2;
LABEL_6:
      sub_24E08D248(v1[2], v1[3]);
LABEL_7:
      if (v5 < v4)
      {
        __break(1u);
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x24E0BAA98);
      }
      swift_retain();
      uint64_t v8 = sub_24E115C60();
      sub_24E08D0B0(v2, v3);
      swift_release();
      return v8;
    case 2uLL:
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v5 = BYTE6(v3);
      goto LABEL_7;
  }
}

uint64_t sub_24E0BAAA8()
{
  swift_release();
  return swift_deallocClassInstance();
}

BOOL sub_24E0BAAE0()
{
  return sub_24E0BA1BC();
}

uint64_t sub_24E0BAB08(uint64_t a1)
{
  return sub_24E0BA628(a1);
}

uint64_t sub_24E0BAB2C()
{
  return sub_24E0BA23C();
}

uint64_t sub_24E0BAB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E0BA7D4(a1, a2, a3);
}

uint64_t sub_24E0BAB74(uint64_t a1)
{
  return sub_24E0BA864(a1);
}

uint64_t sub_24E0BAB98()
{
  return sub_24E0BA9A8();
}

ValueMetadata *type metadata accessor for BinaryDecoder()
{
  return &type metadata for BinaryDecoder;
}

uint64_t type metadata accessor for BinaryDecodingContainer()
{
  return self;
}

uint64_t destroy for _BinaryDecoder()
{
  swift_release();
  return swift_release();
}

void *_s10FindMyBase14_BinaryDecoderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for _BinaryDecoder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for _BinaryDecoder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _BinaryDecoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _BinaryDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _BinaryDecoder()
{
  return &type metadata for _BinaryDecoder;
}

unint64_t sub_24E0BAD9C()
{
  unint64_t result = qword_2698B80D0;
  if (!qword_2698B80D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B80D0);
  }
  return result;
}

uint64_t sub_24E0BADF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24E0BA42C(a1, a2, *(void *)(v3 + 16), a3);
}

void *sub_24E0BAE0C(void *a1, uint64_t a2)
{
  return sub_24E0BA58C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t Bit.rawValue.getter()
{
  return *v0;
}

uint64_t Bit.description.getter()
{
  if (*v0) {
    return 49;
  }
  else {
    return 48;
  }
}

FindMyBase::Bit_optional __swiftcall Bit.init(rawValue:)(FindMyBase::Bit_optional rawValue)
{
  if (rawValue.value == FindMyBase_Bit_one) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue.value == FindMyBase_Bit_zero) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return rawValue;
}

unint64_t sub_24E0BAE70()
{
  unint64_t result = qword_2698B80D8;
  if (!qword_2698B80D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B80D8);
  }
  return result;
}

uint64_t sub_24E0BAEC4()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0BAF0C()
{
  return sub_24E1171E0();
}

uint64_t sub_24E0BAF38()
{
  return sub_24E1171F0();
}

unsigned char *sub_24E0BAF7C@<X0>(unsigned char *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_24E0BAF9C(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24E0BAFA8()
{
  if (*v0) {
    return 49;
  }
  else {
    return 48;
  }
}

unsigned char *storeEnumTagSinglePayload for Bit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0BB08CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Bit()
{
  return &type metadata for Bit;
}

uint64_t withinActor<A, B>(_:block:)(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_24E095114;
  return v8(a1, a2);
}

uint64_t MultiAwait.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  return v0;
}

uint64_t MultiAwait.init()()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  return v0;
}

uint64_t sub_24E0BB21C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E0BB23C, v0, 0);
}

uint64_t sub_24E0BB23C()
{
  sub_24E0BB428();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0BB318;
  return MEMORY[0x270FA2318]();
}

uint64_t sub_24E0BB318()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0A7648, v1, 0);
}

unint64_t sub_24E0BB428()
{
  unint64_t result = qword_2698B80F0;
  if (!qword_2698B80F0)
  {
    type metadata accessor for MultiAwait();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B80F0);
  }
  return result;
}

uint64_t type metadata accessor for MultiAwait()
{
  return self;
}

uint64_t sub_24E0BB4A0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBE0);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E115E00();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E115DF0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v4, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  swift_beginAccess();
  sub_24E0925F0((uint64_t)v4, (uint64_t)v7);
  return swift_endAccess();
}

uint64_t sub_24E0BB61C(uint64_t a1)
{
  return sub_24E0BB4A0(a1);
}

uint64_t sub_24E0BB624()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v22 = (void *)(v0 + 112);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v23 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v24 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v25 = v2 + 16;
  uint64_t v13 = v8;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v24) {
            goto LABEL_25;
          }
          unint64_t v19 = *(void *)(v23 + 8 * v15);
          if (!v19)
          {
            int64_t v15 = v18 + 4;
            if (v18 + 4 >= v24) {
              goto LABEL_25;
            }
            unint64_t v19 = *(void *)(v23 + 8 * v15);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v7, *(void *)(v13 + 56) + *(void *)(v2 + 72) * v17, v1);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    sub_24E116660();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  int64_t v20 = v18 + 5;
  if (v20 >= v24)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    void *v22 = MEMORY[0x263F8EE80];
    return swift_bridgeObjectRelease();
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t MultiAwait.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MultiAwait.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t MultiAwait.unownedExecutor.getter()
{
  return v0;
}

uint64_t method lookup function for MultiAwait(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MultiAwait);
}

uint64_t dispatch thunk of MultiAwait.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MultiAwait.await()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 128) + **(int **)(*(void *)v0 + 128));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095114;
  return v4();
}

uint64_t dispatch thunk of MultiAwait.notify()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t XPCActivity.Criteria.Options.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t XPCActivity.Criteria.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static XPCActivity.Criteria.Options.powerNap.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static XPCActivity.Criteria.Options.wakeDevice.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static XPCActivity.Criteria.Options.significantUserInactivity.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static XPCActivity.Criteria.Options.usesDuetPowerBudgeting.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static XPCActivity.Criteria.Options.requiresClassA.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static XPCActivity.Criteria.Options.requiresClassB.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static XPCActivity.Criteria.Options.requiresClassC.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static XPCActivity.Criteria.Options.requiresNetwork.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static XPCActivity.Criteria.Options.requiresInexpensiveNetwork.getter(void *a1@<X8>)
{
  *a1 = 256;
}

void static XPCActivity.Criteria.Options.allowBattery.getter(void *a1@<X8>)
{
  *a1 = 512;
}

void static XPCActivity.Criteria.Options.memoryIntensive.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

void static XPCActivity.Criteria.Options.cpuIntensive.getter(void *a1@<X8>)
{
  *a1 = 2048;
}

void static XPCActivity.Criteria.Options.diskIntensive.getter(void *a1@<X8>)
{
  *a1 = 4096;
}

void static XPCActivity.Criteria.Options.usesDuetNetworkBudgeting.getter(void *a1@<X8>)
{
  *a1 = 0x2000;
}

void static XPCActivity.Criteria.Options.requiresCompanion.getter(void *a1@<X8>)
{
  *a1 = 0x4000;
}

void static XPCActivity.Criteria.Options.preventDeviceSleep.getter(void *a1@<X8>)
{
  *a1 = 0x8000;
}

void static XPCActivity.Criteria.Options.requireScreenSleep.getter(void *a1@<X8>)
{
  *a1 = 0x10000;
}

uint64_t XPCActivity.Criteria.Options.description.getter()
{
  uint64_t v1 = *v0;
  if ((*v0 & 1) == 0)
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE78];
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_24E08B2D4(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t v5 = &v2[2 * v4];
  v5[4] = 0x614E7265776F702ELL;
  v5[5] = 0xE900000000000070;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_24E08B2D4((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    uint64_t v8 = &v2[2 * v7];
    void v8[4] = 0x766544656B61772ELL;
    void v8[5] = 0xEB00000000656369;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v10 = v2[2];
    unint64_t v9 = v2[3];
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_24E08B2D4((void *)(v9 > 1), v10 + 1, 1, v2);
    }
    v2[2] = v10 + 1;
    uint64_t v11 = &v2[2 * v10];
    void v11[4] = 0xD00000000000001ALL;
    v11[5] = 0x800000024E118A70;
  }
  if ((v1 & 8) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v13 = v2[2];
    unint64_t v12 = v2[3];
    if (v13 >= v12 >> 1) {
      uint64_t v2 = sub_24E08B2D4((void *)(v12 > 1), v13 + 1, 1, v2);
    }
    v2[2] = v13 + 1;
    uint64_t v14 = &v2[2 * v13];
    v14[4] = 0xD000000000000017;
    void v14[5] = 0x800000024E118A50;
  }
  if ((v1 & 0x10) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v16 = v2[2];
    unint64_t v15 = v2[3];
    if (v16 >= v15 >> 1) {
      uint64_t v2 = sub_24E08B2D4((void *)(v15 > 1), v16 + 1, 1, v2);
    }
    v2[2] = v16 + 1;
    unint64_t v17 = &v2[2 * v16];
    v17[4] = 0x657269757165722ELL;
    v17[5] = 0xEF417373616C4373;
    if ((v1 & 0x20) == 0)
    {
LABEL_26:
      if ((v1 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_48;
    }
  }
  else if ((v1 & 0x20) == 0)
  {
    goto LABEL_26;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  int64_t v20 = &v2[2 * v19];
  v20[4] = 0x657269757165722ELL;
  v20[5] = 0xEF427373616C4373;
  if ((v1 & 0x40) == 0)
  {
LABEL_27:
    if ((v1 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_53;
  }
LABEL_48:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v22 = v2[2];
  unint64_t v21 = v2[3];
  if (v22 >= v21 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v21 > 1), v22 + 1, 1, v2);
  }
  v2[2] = v22 + 1;
  uint64_t v23 = &v2[2 * v22];
  v23[4] = 0x657269757165722ELL;
  v23[5] = 0xEF437373616C4373;
  if ((v1 & 0x80) == 0)
  {
LABEL_28:
    if ((v1 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_58;
  }
LABEL_53:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v25 = v2[2];
  unint64_t v24 = v2[3];
  if (v25 >= v24 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v24 > 1), v25 + 1, 1, v2);
  }
  v2[2] = v25 + 1;
  id v26 = &v2[2 * v25];
  v26[4] = 0xD000000000000010;
  v26[5] = 0x800000024E118A30;
  if ((v1 & 0x100) == 0)
  {
LABEL_29:
    if ((v1 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_58:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v28 = v2[2];
  unint64_t v27 = v2[3];
  if (v28 >= v27 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v27 > 1), v28 + 1, 1, v2);
  }
  v2[2] = v28 + 1;
  uint64_t v29 = &v2[2 * v28];
  v29[4] = 0xD00000000000001BLL;
  v29[5] = 0x800000024E118A10;
  if ((v1 & 0x200) == 0)
  {
LABEL_30:
    if ((v1 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_68;
  }
LABEL_63:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v31 = v2[2];
  unint64_t v30 = v2[3];
  if (v31 >= v30 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v30 > 1), v31 + 1, 1, v2);
  }
  v2[2] = v31 + 1;
  uint64_t v32 = (char *)&v2[2 * v31];
  strcpy(v32 + 32, ".allowBattery");
  *((_WORD *)v32 + 23) = -4864;
  if ((v1 & 0x400) == 0)
  {
LABEL_31:
    if ((v1 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_73;
  }
LABEL_68:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v34 = v2[2];
  unint64_t v33 = v2[3];
  if (v34 >= v33 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v33 > 1), v34 + 1, 1, v2);
  }
  v2[2] = v34 + 1;
  uint64_t v35 = &v2[2 * v34];
  v35[4] = 0xD000000000000010;
  v35[5] = 0x800000024E1189F0;
  if ((v1 & 0x800) == 0)
  {
LABEL_32:
    if ((v1 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_78;
  }
LABEL_73:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v37 = v2[2];
  unint64_t v36 = v2[3];
  if (v37 >= v36 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v36 > 1), v37 + 1, 1, v2);
  }
  v2[2] = v37 + 1;
  uint64_t v38 = (char *)&v2[2 * v37];
  strcpy(v38 + 32, ".cpuIntensive");
  *((_WORD *)v38 + 23) = -4864;
  if ((v1 & 0x1000) == 0)
  {
LABEL_33:
    if ((v1 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_83;
  }
LABEL_78:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v40 = v2[2];
  unint64_t v39 = v2[3];
  if (v40 >= v39 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v39 > 1), v40 + 1, 1, v2);
  }
  v2[2] = v40 + 1;
  BOOL v41 = (char *)&v2[2 * v40];
  strcpy(v41 + 32, ".diskIntensive");
  v41[47] = -18;
  if ((v1 & 0x2000) == 0)
  {
LABEL_34:
    if ((v1 & 0x4000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_88;
  }
LABEL_83:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v43 = v2[2];
  unint64_t v42 = v2[3];
  if (v43 >= v42 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v42 > 1), v43 + 1, 1, v2);
  }
  v2[2] = v43 + 1;
  uint64_t v44 = &v2[2 * v43];
  v44[4] = 0xD000000000000019;
  v44[5] = 0x800000024E1189D0;
  if ((v1 & 0x4000) == 0)
  {
LABEL_35:
    if ((v1 & 0x8000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_93;
  }
LABEL_88:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v46 = v2[2];
  unint64_t v45 = v2[3];
  if (v46 >= v45 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v45 > 1), v46 + 1, 1, v2);
  }
  v2[2] = v46 + 1;
  int64_t v47 = &v2[2 * v46];
  v47[4] = 0xD000000000000012;
  v47[5] = 0x800000024E1189B0;
  if ((v1 & 0x8000) == 0)
  {
LABEL_36:
    if ((v1 & 0x10000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_98;
  }
LABEL_93:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
  }
  unint64_t v49 = v2[2];
  unint64_t v48 = v2[3];
  if (v49 >= v48 >> 1) {
    uint64_t v2 = sub_24E08B2D4((void *)(v48 > 1), v49 + 1, 1, v2);
  }
  v2[2] = v49 + 1;
  long long v50 = &v2[2 * v49];
  v50[4] = 0xD000000000000013;
  v50[5] = 0x800000024E118990;
  if ((v1 & 0x10000) != 0)
  {
LABEL_98:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_24E08B2D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v52 = v2[2];
    unint64_t v51 = v2[3];
    if (v52 >= v51 >> 1) {
      uint64_t v2 = sub_24E08B2D4((void *)(v51 > 1), v52 + 1, 1, v2);
    }
    v2[2] = v52 + 1;
    long long v53 = &v2[2 * v52];
    v53[4] = 0xD000000000000013;
    v53[5] = 0x800000024E118970;
  }
LABEL_103:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
  sub_24E085388();
  sub_24E116140();
  swift_bridgeObjectRelease();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  return 91;
}

uint64_t sub_24E0BC540()
{
  return sub_24E116540();
}

uint64_t sub_24E0BC5A0()
{
  return sub_24E116510();
}

unsigned char *XPCActivity.Criteria.init(priority:repeating:delay:gracePeriod:interval:options:)@<X0>(unsigned char *result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = *a6;
  *(unsigned char *)a7 = *result;
  *(unsigned char *)(a7 + 1) = a2;
  *(void *)(a7 + 8) = a3;
  *(void *)(a7 + 16) = a4;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = v7;
  return result;
}

uint64_t XPCActivity.Criteria.description.getter()
{
  return 0;
}

uint64_t sub_24E0BC8DC()
{
  uint64_t result = 0x797469726F697270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E69746165706572;
      break;
    case 2:
      uint64_t result = 0x79616C6564;
      break;
    case 3:
      uint64_t result = 0x7265506563617267;
      break;
    case 4:
      uint64_t result = 0x6C61767265746E69;
      break;
    case 5:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E0BC9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E0BDFC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E0BC9D0(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24E0BC9DC(uint64_t a1)
{
  unint64_t v2 = sub_24E0BD930();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0BCA18(uint64_t a1)
{
  unint64_t v2 = sub_24E0BD930();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCActivity.Criteria.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8100);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v15 = v1[1];
  uint64_t v9 = *((void *)v1 + 1);
  v14[2] = *((void *)v1 + 2);
  void v14[3] = v9;
  uint64_t v10 = *((void *)v1 + 3);
  v14[0] = *((void *)v1 + 4);
  v14[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0BD930();
  sub_24E117240();
  char v23 = v8;
  char v22 = 0;
  sub_24E0BD984();
  sub_24E117000();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v12 = v5;
  uint64_t v13 = v14[0];
  char v21 = 1;
  sub_24E116FF0();
  char v20 = 2;
  sub_24E117010();
  char v19 = 3;
  sub_24E117010();
  char v18 = 4;
  sub_24E117010();
  uint64_t v16 = v13;
  char v17 = 5;
  sub_24E0BD9D8();
  sub_24E117000();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v4);
}

uint64_t XPCActivity.Criteria.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0BD930();
  sub_24E117220();
  if (!v2)
  {
    char v23 = 0;
    sub_24E0BDA2C();
    sub_24E116FA0();
    char v9 = v24;
    char v22 = 1;
    char v10 = sub_24E116F90();
    char v21 = 2;
    uint64_t v16 = sub_24E116FB0();
    char v20 = 3;
    uint64_t v15 = sub_24E116FB0();
    char v19 = 4;
    uint64_t v14 = sub_24E116FB0();
    char v18 = 5;
    sub_24E0BDA80();
    sub_24E116FA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(unsigned char *)(a2 + 1) = v10 & 1;
    uint64_t v12 = v17;
    uint64_t v13 = v15;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E0BCF54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return XPCActivity.Criteria.init(from:)(a1, a2);
}

uint64_t sub_24E0BCF6C(void *a1)
{
  return XPCActivity.Criteria.encode(to:)(a1);
}

uint64_t sub_24E0BCF8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x263EF8280]))
  {
    uint64_t v4 = sub_24E116380();
    uint64_t v6 = v5;
    if (qword_26B1AE7D8 != -1) {
      swift_once();
    }
    if (v4 == qword_26B1AE830 && v6 == *(void *)algn_26B1AE838)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = 0;
    }
    else
    {
      int v8 = sub_24E1170B0();
      swift_bridgeObjectRelease();
      uint64_t v9 = ~v8 & 1;
    }
    BOOL v11 = xpc_dictionary_get_BOOL(a1, (const char *)*MEMORY[0x263EF82A0]);
    int64_t int64 = xpc_dictionary_get_int64(a1, (const char *)*MEMORY[0x263EF81A0]);
    int64_t v13 = xpc_dictionary_get_int64(a1, (const char *)*MEMORY[0x263EF81C0]);
    int64_t v14 = xpc_dictionary_get_int64(a1, (const char *)*MEMORY[0x263EF81D8]);
    uint64_t result = sub_24E0BD118((uint64_t)a1, &v17);
    uint64_t v15 = v17;
    uint64_t v16 = 256;
    if (!v11) {
      uint64_t v16 = 0;
    }
    *a2 = v16 | v9;
    a2[1] = int64;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
  }
  else
  {
    uint64_t result = swift_unknownObjectRelease();
    *a2 = 2;
    *(_OWORD *)(a2 + 1) = 0u;
    *(_OWORD *)(a2 + 3) = 0u;
  }
  return result;
}

uint64_t sub_24E0BD118@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if (!*MEMORY[0x263EF8270])
  {
    __break(1u);
    goto LABEL_55;
  }
  unint64_t v3 = (void *)result;
  uint64_t result = xpc_dictionary_get_BOOL((xpc_object_t)result, (const char *)*MEMORY[0x263EF8270]);
  if (!*MEMORY[0x263EF82E0])
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  unsigned int v4 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82E0]);
  if (!*MEMORY[0x263EF82E8])
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  int v5 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82E8]);
  if (!*MEMORY[0x263EF82F8])
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  int v6 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82F8]);
  if (!*MEMORY[0x263EF82A8])
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  int v7 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82A8]);
  if (!*MEMORY[0x263EF82B0])
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  int v8 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82B0]);
  if (!*MEMORY[0x263EF82B8])
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  int v9 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82B8]);
  if (!*MEMORY[0x263EF82D0])
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  int v10 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82D0]);
  if (!*MEMORY[0x263EF82C8])
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v11 = v4;
  if (v5) {
    uint64_t v11 = v4 | 4;
  }
  if (v6) {
    v11 |= 2uLL;
  }
  if (v7) {
    v11 |= 8uLL;
  }
  if (v8) {
    v11 |= 0x10uLL;
  }
  if (v9) {
    v11 |= 0x20uLL;
  }
  if (v10) {
    v11 |= 0x40uLL;
  }
  if (result) {
    uint64_t v12 = v11 | 0x80;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82C8]);
  if (result) {
    uint64_t v13 = v12 | 0x100;
  }
  else {
    uint64_t v13 = v12;
  }
  if (!*MEMORY[0x263EF81B0]) {
    goto LABEL_63;
  }
  xpc_object_t v14 = xpc_dictionary_get_dictionary(v3, (const char *)*MEMORY[0x263EF81B0]);
  if (v14)
  {
    string = xpc_dictionary_get_string(v14, "DataBudgetName");
    swift_unknownObjectRelease();
    if (string) {
      v13 |= 0x2000uLL;
    }
  }
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF8180]);
  if (!*MEMORY[0x263EF8230]) {
    goto LABEL_64;
  }
  unsigned __int8 v16 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF8230]);
  if (!*MEMORY[0x263EF8198])
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  unsigned __int8 v17 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF8198]);
  if (!*MEMORY[0x263EF81A8])
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  unsigned __int8 v18 = result;
  uint64_t result = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF81A8]);
  if (!*MEMORY[0x263EF8190])
  {
LABEL_67:
    __break(1u);
    return result;
  }
  if ((v16 & ((v13 & 0x200) == 0)) != 0) {
    uint64_t v19 = v13 | 0x200;
  }
  else {
    uint64_t v19 = v13;
  }
  if ((v17 & ((v19 & 0x400) == 0)) != 0) {
    v19 |= 0x400uLL;
  }
  if ((v18 & ((v19 & 0x800) == 0)) != 0) {
    v19 |= 0x800uLL;
  }
  if ((result & ((v19 & 0x1000) == 0)) != 0) {
    uint64_t v20 = v19 | 0x1000;
  }
  else {
    uint64_t v20 = v19;
  }
  if (xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF8190])) {
    v20 |= 0x4000uLL;
  }
  if (xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF8278])) {
    uint64_t v21 = v20 | 0x8000;
  }
  else {
    uint64_t v21 = v20;
  }
  BOOL v22 = xpc_dictionary_get_BOOL(v3, (const char *)*MEMORY[0x263EF82D8]);
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v23 = v21 | 0x10000;
  if (!v22) {
    uint64_t v23 = v21;
  }
  *a2 = v23;
  return result;
}

void sub_24E0BD460()
{
  int v1 = *v0;
  int v2 = v0[1];
  int64_t v3 = *((void *)v0 + 1);
  int64_t v4 = *((void *)v0 + 2);
  int64_t v5 = *((void *)v0 + 3);
  uint64_t v6 = *((void *)v0 + 4);
  xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
  int v8 = v7;
  int v9 = (const char **)MEMORY[0x263EF8290];
  if (v1) {
    int v9 = (const char **)MEMORY[0x263EF8288];
  }
  xpc_dictionary_set_string(v7, (const char *)*MEMORY[0x263EF8280], *v9);
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82A0], v2);
  xpc_dictionary_set_int64(v8, (const char *)*MEMORY[0x263EF81A0], v3);
  xpc_dictionary_set_int64(v8, (const char *)*MEMORY[0x263EF81C0], v4);
  if (v2 == 1) {
    xpc_dictionary_set_int64(v8, (const char *)*MEMORY[0x263EF81D8], v5);
  }
  if (v6)
  {
    if (!*MEMORY[0x263EF8270])
    {
      __break(1u);
      goto LABEL_55;
    }
    xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF8270], 1);
  }
  if ((v6 & 4) == 0) {
    goto LABEL_11;
  }
  if (!*MEMORY[0x263EF82E0])
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82E0], 1);
LABEL_11:
  if ((v6 & 2) == 0) {
    goto LABEL_14;
  }
  if (!*MEMORY[0x263EF82E8])
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82E8], 1);
LABEL_14:
  if ((v6 & 8) == 0) {
    goto LABEL_17;
  }
  if (!*MEMORY[0x263EF82F8])
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82F8], 1);
LABEL_17:
  if ((v6 & 0x10) == 0) {
    goto LABEL_20;
  }
  if (!*MEMORY[0x263EF82A8])
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82A8], 1);
LABEL_20:
  if ((v6 & 0x20) == 0) {
    goto LABEL_23;
  }
  if (!*MEMORY[0x263EF82B0])
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82B0], 1);
LABEL_23:
  if ((v6 & 0x40) == 0) {
    goto LABEL_26;
  }
  if (!*MEMORY[0x263EF82B8])
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82B8], 1);
LABEL_26:
  if ((v6 & 0x80) == 0) {
    goto LABEL_29;
  }
  if (!*MEMORY[0x263EF82D0])
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82D0], 1);
LABEL_29:
  if ((v6 & 0x100) == 0) {
    goto LABEL_32;
  }
  if (!*MEMORY[0x263EF82C8])
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82C8], 1);
LABEL_32:
  if ((v6 & 0x2000) == 0) {
    goto LABEL_35;
  }
  xpc_object_t v10 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v10, "DataBudgetName", "com.apple.dasd.baCellular");
  if (!*MEMORY[0x263EF81B0])
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  xpc_dictionary_set_value(v8, (const char *)*MEMORY[0x263EF81B0], v10);
  swift_unknownObjectRelease();
LABEL_35:
  if ((v6 & 0x200) != 0) {
    xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF8180], 1);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*MEMORY[0x263EF8230])
    {
      xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF8230], 1);
      goto LABEL_40;
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_40:
  if ((v6 & 0x800) == 0) {
    goto LABEL_43;
  }
  if (!*MEMORY[0x263EF8198])
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF8198], 1);
LABEL_43:
  if ((v6 & 0x1000) == 0) {
    goto LABEL_46;
  }
  if (!*MEMORY[0x263EF81A8])
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF81A8], 1);
LABEL_46:
  if ((v6 & 0x4000) != 0)
  {
    if (*MEMORY[0x263EF8190])
    {
      xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF8190], 1);
      goto LABEL_49;
    }
LABEL_67:
    __break(1u);
    return;
  }
LABEL_49:
  if ((v6 & 0x8000) != 0) {
    xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF8278], 1);
  }
  if ((v6 & 0x10000) != 0) {
    xpc_dictionary_set_BOOL(v8, (const char *)*MEMORY[0x263EF82D8], 1);
  }
}

BOOL _s10FindMyBase11XPCActivityC8CriteriaV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 1);
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v26 = *(void *)(a2 + 32);
  BOOL v11 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v12 = 0x616E65746E69616DLL;
  }
  else {
    uint64_t v12 = 0x7974696C697475;
  }
  if (v11) {
    unint64_t v13 = 0xE700000000000000;
  }
  else {
    unint64_t v13 = 0xEB0000000065636ELL;
  }
  if (*(unsigned char *)a2) {
    uint64_t v14 = 0x616E65746E69616DLL;
  }
  else {
    uint64_t v14 = 0x7974696C697475;
  }
  if (*(unsigned char *)a2) {
    unint64_t v15 = 0xEB0000000065636ELL;
  }
  else {
    unint64_t v15 = 0xE700000000000000;
  }
  if (v12 == v14 && v13 == v15)
  {
    uint64_t v20 = v3;
    swift_bridgeObjectRelease_n();
    if ((v2 ^ v7) == 1 || v4 != v9 || v20 != v8 || v5 != v10) {
      return 0;
    }
    return v6 == v26;
  }
  int v25 = *(unsigned __int8 *)(a2 + 1);
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v17 = v3;
  char v18 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if ((v18 & 1) != 0 && v2 == v25 && v4 == v9 && v17 == v24 && v5 == v10) {
    return v6 == v26;
  }
  return result;
}

unint64_t sub_24E0BD930()
{
  unint64_t result = qword_2698B8108;
  if (!qword_2698B8108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8108);
  }
  return result;
}

unint64_t sub_24E0BD984()
{
  unint64_t result = qword_2698B8110;
  if (!qword_2698B8110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8110);
  }
  return result;
}

unint64_t sub_24E0BD9D8()
{
  unint64_t result = qword_2698B8118;
  if (!qword_2698B8118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8118);
  }
  return result;
}

unint64_t sub_24E0BDA2C()
{
  unint64_t result = qword_2698B8128;
  if (!qword_2698B8128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8128);
  }
  return result;
}

unint64_t sub_24E0BDA80()
{
  unint64_t result = qword_2698B8130;
  if (!qword_2698B8130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8130);
  }
  return result;
}

unint64_t sub_24E0BDAD8()
{
  unint64_t result = qword_2698B8138;
  if (!qword_2698B8138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8138);
  }
  return result;
}

unint64_t sub_24E0BDB30()
{
  unint64_t result = qword_2698B8140;
  if (!qword_2698B8140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8140);
  }
  return result;
}

unint64_t sub_24E0BDB88()
{
  unint64_t result = qword_26B1AE5B8;
  if (!qword_26B1AE5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE5B8);
  }
  return result;
}

unint64_t sub_24E0BDBE0()
{
  unint64_t result = qword_26B1AE5C0;
  if (!qword_26B1AE5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE5C0);
  }
  return result;
}

uint64_t _s8CriteriaVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8CriteriaVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s8CriteriaVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity.Criteria()
{
  return &type metadata for XPCActivity.Criteria;
}

ValueMetadata *type metadata accessor for XPCActivity.Criteria.Options()
{
  return &type metadata for XPCActivity.Criteria.Options;
}

uint64_t _s8CriteriaV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8CriteriaV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0BDE88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8CriteriaV10CodingKeysOMa()
{
  return &_s8CriteriaV10CodingKeysON;
}

unint64_t sub_24E0BDEC4()
{
  unint64_t result = qword_2698B8148;
  if (!qword_2698B8148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8148);
  }
  return result;
}

unint64_t sub_24E0BDF1C()
{
  unint64_t result = qword_2698B8150;
  if (!qword_2698B8150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8150);
  }
  return result;
}

unint64_t sub_24E0BDF74()
{
  unint64_t result = qword_2698B8158;
  if (!qword_2698B8158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8158);
  }
  return result;
}

uint64_t sub_24E0BDFC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69746165706572 && a2 == 0xE900000000000067 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79616C6564 && a2 == 0xE500000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265506563617267 && a2 == 0xEB00000000646F69 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24E0BE268()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1AEAF8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1AEAF8);
  if (qword_26B1AEAF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1AEAD8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t AsyncStreamProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AsyncStreamProvider.init()();
  return v0;
}

uint64_t AsyncStreamProvider.init()()
{
  sub_24E115E00();
  type metadata accessor for Transaction();
  swift_getTupleTypeMetadata2();
  sub_24E116730();
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E116030();
  sub_24E1160F0();
  uint64_t v1 = sub_24E0C1044();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v1;
  return v0;
}

Swift::Void __swiftcall AsyncStreamProvider.finish()()
{
  uint64_t v1 = *v0;
  type metadata accessor for Transaction();
  uint64_t v2 = *(void *)(v1 + 80);
  swift_getTupleTypeMetadata2();
  uint64_t v3 = sub_24E116730();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v20 - v5;
  uint64_t v7 = v0[2];
  uint64_t v23 = v2;
  sub_24E115E00();
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E1160F0();
  sub_24E1160D0();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0C10C4, (uint64_t)v22, v7);
  uint64_t v8 = v24;
  uint64_t v9 = *(void *)(v24 + 64);
  uint64_t v21 = v24 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v17 >= v13) {
      goto LABEL_21;
    }
    unint64_t v18 = *(void *)(v21 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v21 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_21;
        }
        unint64_t v18 = *(void *)(v21 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v8 + 56) + *(void *)(v4 + 72) * v16, v3);
    sub_24E116720();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v13)
  {
LABEL_21:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v18 = *(void *)(v21 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_21;
    }
    unint64_t v18 = *(void *)(v21 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_24E0BE754@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  sub_24E115E00();
  type metadata accessor for Transaction();
  swift_getTupleTypeMetadata2();
  sub_24E116730();
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24E116030();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v5;
  *a2 = v4;
  return result;
}

uint64_t AsyncStreamProvider.stream(initialEvents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E0BE8FC((uint64_t)v7, a2, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24E0BE8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v68 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for Transaction();
  int64_t v67 = v3;
  uint64_t v7 = *(void *)(v5 + 80);
  uint64_t v65 = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  v76 = (void *)((char *)v60 - v9);
  uint64_t v75 = sub_24E1166E0();
  uint64_t v66 = *(void *)(v75 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)v60 - v11;
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v64 = *(void *)(v78 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v80 = (char *)v60 - v12;
  uint64_t v13 = sub_24E116700();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)v60 - v15;
  uint64_t v17 = sub_24E116730();
  uint64_t v72 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  BOOL v22 = (char *)v60 - v21;
  uint64_t v23 = sub_24E115E00();
  uint64_t v70 = *(void *)(v23 - 8);
  uint64_t v71 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v73 = (char *)v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (char *)v60 - v26;
  sub_24E115DF0();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F580], v13);
  uint64_t v77 = TupleTypeMetadata2;
  uint64_t v28 = (uint64_t)v22;
  sub_24E1166D0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v29 = v72;
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
  uint64_t v79 = v17;
  v30(v22, v20, v17);
  if (qword_26B1AEA28 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_24E115F00();
  __swift_project_value_buffer(v31, (uint64_t)qword_26B1AEAF8);
  uint64_t v33 = v70;
  uint64_t v32 = v71;
  unint64_t v34 = v73;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v73, v27, v71);
  swift_bridgeObjectRetain_n();
  uint64_t v35 = sub_24E115EE0();
  os_log_type_t v36 = sub_24E1169A0();
  int v37 = v36;
  BOOL v38 = os_log_type_enabled(v35, v36);
  unint64_t v69 = v27;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    os_log_t v62 = v35;
    uint64_t v40 = v39;
    uint64_t v63 = swift_slowAlloc();
    v82[0] = v63;
    *(_DWORD *)uint64_t v40 = 136446466;
    v60[1] = v40 + 4;
    sub_24E0C118C(&qword_26B1AE590);
    int v61 = v37;
    uint64_t v41 = sub_24E117040();
    uint64_t v81 = sub_24E090400(v41, v42, v82);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    *(_WORD *)(v40 + 12) = 2048;
    uint64_t v43 = MEMORY[0x253332220](a3, v7);
    swift_bridgeObjectRelease();
    uint64_t v81 = v43;
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    os_log_t v44 = v62;
    _os_log_impl(&dword_24E083000, v62, (os_log_type_t)v61, "%{public}s: initialEvents: %ld", (uint8_t *)v40, 0x16u);
    uint64_t v45 = v63;
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v45, -1, -1);
    MEMORY[0x2533338B0](v40, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);

    swift_bridgeObjectRelease();
  }
  if (qword_26B1AFD70 != -1) {
    swift_once();
  }
  sub_24E117360();
  uint64_t v46 = v82[0];
  if (v82[0])
  {
    uint64_t v47 = swift_bridgeObjectRetain();
    if (MEMORY[0x253332250](v47, v7))
    {
      uint64_t v73 = (char *)v28;
      uint64_t v48 = 0;
      unint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v78 + 16);
      long long v50 = (void (**)(char *, char *, uint64_t))(v78 + 32);
      unint64_t v51 = (void (**)(char *, uint64_t))(v66 + 8);
      unint64_t v52 = v74;
      while (1)
      {
        char v53 = sub_24E1165C0();
        sub_24E116590();
        if (v53)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v80, a3+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v48, v7);
          uint64_t v54 = v48 + 1;
          if (__OFADD__(v48, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t result = sub_24E116CC0();
          if (v64 != 8)
          {
            __break(1u);
            return result;
          }
          v82[0] = result;
          (*v49)(v80, v82, v7);
          swift_unknownObjectRelease();
          uint64_t v54 = v48 + 1;
          if (__OFADD__(v48, 1))
          {
LABEL_18:
            __break(1u);
LABEL_19:
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v57 = v68;
            uint64_t v32 = v71;
            uint64_t v29 = v72;
            uint64_t v28 = (uint64_t)v73;
            uint64_t v33 = v70;
            goto LABEL_23;
          }
        }
        char v55 = (char *)v76 + *(int *)(v77 + 48);
        uint64_t *v76 = v46;
        (*v50)(v55, v80, v7);
        swift_retain();
        sub_24E116710();
        (*v51)(v52, v75);
        ++v48;
        if (v54 == MEMORY[0x253332250](a3, v7)) {
          goto LABEL_19;
        }
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_allocObject();
    uint64_t v58 = sub_24E0B88D4("AsyncStreamProvider.yield", 25, 2);
    sub_24E0C0024((uint64_t)v58, a3, v28, v7);
    swift_release();
  }
  uint64_t v57 = v68;
LABEL_23:
  uint64_t v59 = (uint64_t)v69;
  sub_24E0C0368((uint64_t)v69, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v79);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v57, v59, v32);
}

uint64_t AsyncStreamProvider.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t WitnessTable = swift_getWitnessTable();
  CustomStringConvertible.typeDescription.getter(v1, WitnessTable);
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  CustomStringConvertible<>.addressDescription.getter();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  return 60;
}

uint64_t AsyncStreamProvider.yield(value:transaction:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    sub_24E0BF3D4(a1, a2);
    return swift_release();
  }
  else
  {
    if (qword_26B1AFD70 != -1) {
      swift_once();
    }
    sub_24E117360();
    uint64_t v5 = v6;
    if (!v6)
    {
      type metadata accessor for Transaction();
      swift_allocObject();
      uint64_t v5 = sub_24E0B88D4("AsyncStreamProvider.yield", 25, 2);
    }
    sub_24E0BF3D4(a1, (uint64_t)v5);
    return swift_release();
  }
}

uint64_t sub_24E0BF3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v94 = a1;
  uint64_t v95 = a2;
  uint64_t v3 = *v2;
  type metadata accessor for Transaction();
  uint64_t v4 = *(void *)(v3 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  int64_t v92 = (uint64_t *)((char *)&v71 - v6);
  uint64_t v91 = sub_24E1166E0();
  uint64_t v7 = *(void (***)(char *, char *, uint64_t))(v91 - 8);
  MEMORY[0x270FA5388](v91);
  v90 = (char *)&v71 - v8;
  uint64_t v93 = TupleTypeMetadata2;
  uint64_t v9 = sub_24E116730();
  uint64_t v81 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v106 = (char *)&v71 - v10;
  uint64_t v11 = sub_24E115E00();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v71 - v15;
  uint64_t v101 = swift_getTupleTypeMetadata2();
  uint64_t v98 = sub_24E116A90();
  int64_t v105 = *(void *)(v98 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v98);
  v100 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v99 = (char *)&v71 - v19;
  v107 = v2;
  uint64_t v20 = v2[2];
  uint64_t v102 = v4;
  uint64_t v109 = v4;
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E1160F0();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0C116C, (uint64_t)v108, v20);
  uint64_t v82 = v111;
  uint64_t v104 = v11;
  uint64_t v78 = v9;
  uint64_t v21 = sub_24E1160C0();
  if (qword_26B1AEA28 != -1) {
LABEL_39:
  }
    swift_once();
  uint64_t v22 = sub_24E115F00();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_26B1AEAF8);
  swift_retain();
  uint64_t v88 = v23;
  uint64_t v24 = sub_24E115EE0();
  os_log_type_t v25 = sub_24E116970();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v27 = MEMORY[0x263F8EE58];
  if (v26)
  {
    uint64_t v28 = swift_slowAlloc();
    v103 = v7;
    v97 = v14;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v111 = v30;
    *(_DWORD *)uint64_t v29 = 136446466;
    v96 = (void (**)(char *, char *, uint64_t))(v29 + 4);
    uint64_t v31 = AsyncStreamProvider.description.getter();
    uint64_t v110 = sub_24E090400(v31, v32, &v111);
    sub_24E116AB0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2048;
    uint64_t v110 = v21;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v24, v25, "%{public}s: Yielding value to %ld clients.", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v30, -1, -1);
    uint64_t v33 = v29;
    uint64_t v14 = v97;
    uint64_t v27 = MEMORY[0x263F8EE58];
    uint64_t v7 = v103;
    MEMORY[0x2533338B0](v33, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v35 = v104;
  uint64_t v36 = v101;
  int64_t v37 = 0;
  uint64_t v38 = *(void *)(v82 + 64);
  uint64_t v73 = v82 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v82 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & v38;
  v97 = (char *)(v101 - 8);
  v103 = (void (**)(char *, char *, uint64_t))(v80 + 16);
  uint64_t v79 = v81 + 16;
  v96 = (void (**)(char *, char *, uint64_t))(v105 + 32);
  v87 = (void (**)(char *, char *, uint64_t))(v80 + 32);
  uint64_t v86 = (void (**)(char *, char *, uint64_t))(v81 + 32);
  uint64_t v85 = (char **)(v80 + 8);
  uint64_t v21 = v102 - 8;
  uint64_t v84 = (void (**)(char *, uint64_t))(v7 + 1);
  uint64_t v83 = (void (**)(char *, uint64_t))(v81 + 8);
  int64_t v77 = (unint64_t)(v39 + 63) >> 6;
  int64_t v72 = v77 - 1;
  *(void *)&long long v34 = 136446466;
  long long v75 = v34;
  uint64_t v74 = v27 + 8;
  uint64_t v42 = v78;
  os_log_t v44 = v99;
  uint64_t v43 = v100;
  v89 = v16;
  uint64_t v76 = v102 - 8;
  while (1)
  {
    if (v41)
    {
      uint64_t v104 = (v41 - 1) & v41;
      int64_t v105 = v37;
      unint64_t v50 = __clz(__rbit64(v41)) | (v37 << 6);
LABEL_12:
      uint64_t v51 = v82;
      (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v43, *(void *)(v82 + 48) + *(void *)(v80 + 72) * v50, v35);
      (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(&v43[*(int *)(v36 + 48)], *(void *)(v51 + 56) + *(void *)(v81 + 72) * v50, v42);
      uint64_t v52 = 0;
      goto LABEL_20;
    }
    int64_t v53 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v53 >= v77)
    {
      int64_t v105 = v37;
    }
    else
    {
      unint64_t v54 = *(void *)(v73 + 8 * v53);
      if (v54) {
        goto LABEL_16;
      }
      if (v37 + 2 >= v77)
      {
        uint64_t v104 = 0;
        int64_t v105 = v37 + 1;
        goto LABEL_19;
      }
      unint64_t v54 = *(void *)(v73 + 8 * (v37 + 2));
      if (v54)
      {
        int64_t v53 = v37 + 2;
LABEL_16:
        uint64_t v104 = (v54 - 1) & v54;
        int64_t v105 = v53;
        unint64_t v50 = __clz(__rbit64(v54)) + (v53 << 6);
        goto LABEL_12;
      }
      uint64_t v69 = v37 + 3;
      if (v37 + 3 < v77)
      {
        unint64_t v54 = *(void *)(v73 + 8 * v69);
        if (!v54)
        {
          while (1)
          {
            int64_t v53 = v69 + 1;
            if (__OFADD__(v69, 1)) {
              goto LABEL_38;
            }
            if (v53 >= v77)
            {
              uint64_t v104 = 0;
              uint64_t v52 = 1;
              int64_t v105 = v72;
              goto LABEL_20;
            }
            unint64_t v54 = *(void *)(v73 + 8 * v53);
            ++v69;
            if (v54) {
              goto LABEL_16;
            }
          }
        }
        int64_t v53 = v37 + 3;
        goto LABEL_16;
      }
      int64_t v105 = v37 + 2;
    }
    uint64_t v104 = 0;
LABEL_19:
    uint64_t v52 = 1;
LABEL_20:
    uint64_t v55 = *(void *)(v36 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v43, v52, 1, v36);
    (*v96)(v44, v43, v98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v44, 1, v36) == 1) {
      return swift_release();
    }
    unint64_t v56 = &v44[*(int *)(v36 + 48)];
    (*v87)(v16, v44, v35);
    (*v86)(v106, v56, v42);
    (*v103)(v14, v16, v35);
    swift_retain();
    uint64_t v57 = sub_24E115EE0();
    uint64_t v58 = v14;
    os_log_type_t v59 = sub_24E116970();
    BOOL v60 = os_log_type_enabled(v57, v59);
    int v61 = (void (***)(char *, char *, uint64_t))v85;
    if (v60)
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v45 = v35;
      uint64_t v63 = swift_slowAlloc();
      uint64_t v111 = v63;
      *(_DWORD *)uint64_t v62 = v75;
      uint64_t v64 = AsyncStreamProvider.description.getter();
      *(void *)(v62 + 4) = sub_24E090400(v64, v65, &v111);
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2082;
      sub_24E0C118C(&qword_26B1AE590);
      uint64_t v66 = sub_24E117040();
      *(void *)(v62 + 14) = sub_24E090400(v66, v67, &v111);
      swift_bridgeObjectRelease();
      uint64_t v7 = *v61;
      ((void (*)(char *, uint64_t))*v61)(v58, v45);
      uint64_t v21 = v76;
      _os_log_impl(&dword_24E083000, v57, v59, "%{public}s: Yielding value to %{public}s.", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v63, -1, -1);
      uint64_t v68 = v62;
      uint64_t v42 = v78;
      MEMORY[0x2533338B0](v68, -1, -1);

      uint64_t v14 = v58;
    }
    else
    {
      swift_release();
      uint64_t v7 = *v61;
      ((void (*)(char *, uint64_t))*v61)(v58, v35);

      uint64_t v14 = v58;
      uint64_t v45 = v35;
    }
    uint64_t v46 = (char *)v92 + *(int *)(v93 + 48);
    uint64_t v47 = v94;
    *int64_t v92 = v95;
    (*(void (**)(char *, uint64_t))(*(void *)(v102 - 8) + 16))(v46, v47);
    swift_retain();
    uint64_t v48 = v90;
    unint64_t v49 = v106;
    sub_24E116710();
    (*v84)(v48, v91);
    (*v83)(v49, v42);
    unint64_t v16 = v89;
    ((void (*)(char *, uint64_t))v7)(v89, v45);
    uint64_t v35 = v45;
    uint64_t v43 = v100;
    uint64_t v36 = v101;
    os_log_t v44 = v99;
    unint64_t v41 = v104;
    int64_t v37 = v105;
  }
}

uint64_t AsyncStreamProvider.deinit()
{
  swift_release();
  return v0;
}

uint64_t AsyncStreamProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24E0C0000()
{
  return AsyncStreamProvider.description.getter();
}

uint64_t sub_24E0C0024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a1;
  type metadata accessor for Transaction();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v9 = (void *)((char *)v24 - v8);
  uint64_t v30 = v10;
  uint64_t v29 = sub_24E1166E0();
  uint64_t v11 = *(void *)(v29 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v29);
  uint64_t v28 = (char *)v24 - v13;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v12);
  unint64_t v32 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_bridgeObjectRetain();
  if (MEMORY[0x253332250](v16, a4))
  {
    v24[0] = v15;
    v24[1] = v4;
    uint64_t v17 = 0;
    BOOL v26 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v27 = (void (**)(char *, uint64_t *, uint64_t))(v14 + 16);
    os_log_type_t v25 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v18 = v31;
    while (1)
    {
      char v19 = sub_24E1165C0();
      sub_24E116590();
      if (v19)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v32, a2+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v17, a4);
        uint64_t v20 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_24E116CC0();
        if (v24[0] != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v33 = result;
        (*v27)(v32, &v33, a4);
        swift_unknownObjectRelease();
        uint64_t v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v21 = (char *)v9 + *(int *)(v30 + 48);
      *uint64_t v9 = v18;
      (*v26)(v21, v32, a4);
      sub_24E116730();
      swift_retain();
      uint64_t v22 = v28;
      sub_24E116710();
      (*v25)(v22, v29);
      ++v17;
      if (v20 == MEMORY[0x253332250](a2, a4)) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0C0368(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = *v2;
  uint64_t v5 = sub_24E115E00();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v35 = v8;
  uint64_t v36 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  if (qword_26B1AEA28 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24E115F00();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B1AEAF8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v37 = a1;
  unint64_t v32 = v12;
  uint64_t v33 = v6 + 16;
  v12(v10, a1, v5);
  swift_retain();
  uint64_t v13 = sub_24E115EE0();
  os_log_type_t v14 = sub_24E1169A0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v39[0] = v30;
    *(_DWORD *)uint64_t v15 = 136446466;
    uint64_t v16 = AsyncStreamProvider.description.getter();
    uint64_t v38 = sub_24E090400(v16, v17, v39);
    uint64_t v31 = a2;
    sub_24E116AB0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    sub_24E0C118C(&qword_26B1AE590);
    uint64_t v18 = sub_24E117040();
    uint64_t v38 = sub_24E090400(v18, v19, v39);
    a2 = v31;
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    _os_log_impl(&dword_24E083000, v13, v14, "%{public}s: Added new client: %{public}s", (uint8_t *)v15, 0x16u);
    uint64_t v20 = v30;
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v20, -1, -1);
    MEMORY[0x2533338B0](v15, -1, -1);
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }

  uint64_t v21 = v2[2];
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = *(void *)(v34 + 80);
  uint64_t v24 = v37;
  *(&v29 - 4) = v23;
  *(&v29 - 3) = v24;
  *(&v29 - 2) = a2;
  type metadata accessor for Transaction();
  swift_getTupleTypeMetadata2();
  sub_24E116730();
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E1160F0();
  OSAllocatedUnfairLock.callAsFunction<A>(_:)((uint64_t)sub_24E0C11D0, (uint64_t)(&v29 - 6), v21);
  os_log_type_t v25 = v36;
  v32(v36, v24, v5);
  unint64_t v26 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v23;
  *(void *)(v27 + 24) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v27 + v26, v25, v5);
  swift_retain();
  return sub_24E1166F0();
}

uint64_t sub_24E0C0810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Transaction();
  swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_24E116730();
  uint64_t v6 = sub_24E116A90();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_24E115E00();
  MEMORY[0x270FA5388](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  uint64_t v12 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, a3, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v5);
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E1160F0();
  return sub_24E116110();
}

void sub_24E0C0A18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_24E115E00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1AEA28 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_24E115F00();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B1AEAF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  swift_retain();
  uint64_t v10 = sub_24E115EE0();
  os_log_type_t v11 = sub_24E1169A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = a1;
    uint64_t v13 = v12;
    uint64_t v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v23 = v4;
    uint64_t v14 = AsyncStreamProvider.description.getter();
    uint64_t v25 = sub_24E090400(v14, v15, v26);
    sub_24E116AB0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    sub_24E0C118C(&qword_26B1AE590);
    uint64_t v16 = sub_24E117040();
    uint64_t v25 = sub_24E090400(v16, v17, v26);
    uint64_t v4 = v23;
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_24E083000, v10, v11, "%{public}s: Removing terminated client: %{public}s", (uint8_t *)v13, 0x16u);
    uint64_t v18 = v22;
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v18, -1, -1);
    uint64_t v19 = v13;
    a1 = v24;
    MEMORY[0x2533338B0](v19, -1, -1);
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  uint64_t v20 = v2[2];
  MEMORY[0x270FA5388](v21);
  *(&v22 - 2) = *(void *)(v4 + 80);
  *(&v22 - 1) = a1;
  type metadata accessor for Transaction();
  swift_getTupleTypeMetadata2();
  sub_24E116730();
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E1160F0();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0C1320, (uint64_t)(&v22 - 4), v20);
}

uint64_t sub_24E0C0DF0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Transaction();
  swift_getTupleTypeMetadata2();
  uint64_t v3 = sub_24E116730();
  uint64_t v4 = sub_24E116A90();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v11 - v5;
  uint64_t v7 = sub_24E115E00();
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v6, 1, 1, v3);
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  sub_24E1160F0();
  return sub_24E116110();
}

uint64_t sub_24E0C0FC0()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1AEAD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1AEAD8);
  return sub_24E115EF0();
}

uint64_t sub_24E0C1044()
{
  return sub_24E116CF0();
}

uint64_t sub_24E0C10C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24E0BE754(a1, a2);
}

uint64_t sub_24E0C10E0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncStreamProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncStreamProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AsyncStreamProvider);
}

uint64_t dispatch thunk of AsyncStreamProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_24E0C116C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E0C118C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24E115E00();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0C11D0(uint64_t a1)
{
  return sub_24E0C0810(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24E0C11F0()
{
  uint64_t v1 = sub_24E115E00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_24E0C12BC()
{
  uint64_t v1 = *(void *)(sub_24E115E00() - 8);
  sub_24E0C0A18(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_24E0C1320(uint64_t a1)
{
  return sub_24E0C0DF0(a1, *(void *)(v1 + 24));
}

uint64_t sub_24E0C133C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2, v3);
}

uint64_t sub_24E0C13D4()
{
  uint64_t v0 = sub_24E115E30();
  __swift_allocate_value_buffer(v0, qword_26B1AEA40);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1AEA40);
  return sub_24E115E10();
}

uint64_t static Locale.en_US_POSIX.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B1AE908 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115E30();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B1AEA40);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t Locale.acceptLanguageCode.getter()
{
  if (*(void *)(sub_24E115E20() + 16))
  {
    uint64_t v0 = self;
    uint64_t v1 = (void *)sub_24E116560();
    swift_bridgeObjectRelease();
    id v2 = objc_msgSend(v0, sel_minimizedLanguagesFromLanguages_, v1);

    sub_24E116570();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
    sub_24E085388();
    uint64_t v3 = sub_24E116140();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0x53552D6E65;
  }
  return v3;
}

void valueOf(entitlement:)(uint64_t a1@<X8>)
{
  task = SecTaskCreateFromSelf(0);
  if (task)
  {
    id v2 = (__CFString *)sub_24E1161C0();
    CFTypeRef v3 = SecTaskCopyValueForEntitlement(task, v2, 0);

    if (v3)
    {
      *(void *)(a1 + 24) = swift_getObjectType();

      *(void *)a1 = v3;
    }
    else
    {
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t static DateIntervalParsingStrategy.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t DateIntervalParsingStrategy.Error.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t DateIntervalParsingStrategy.Error.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t DateIntervalParsingStrategy.parse(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8160);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60[0] = 47;
  v60[1] = 0xE100000000000000;
  os_log_type_t v59 = v60;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_24E0C29B0(0x7FFFFFFFFFFFFFFFLL, 1, sub_24E0C3008, (uint64_t)v58, a1, a2);
  uint64_t v56 = v3;
  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    v60[0] = MEMORY[0x263F8EE78];
    sub_24E0AEB38(0, v9, 0);
    uint64_t v10 = v60[0];
    os_log_type_t v11 = (uint64_t *)(v8 + 56);
    do
    {
      uint64_t v13 = *(v11 - 3);
      uint64_t v12 = *(v11 - 2);
      uint64_t v14 = *(v11 - 1);
      uint64_t v15 = *v11;
      swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x253331F40](v13, v12, v14, v15);
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      v60[0] = v10;
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_24E0AEB38(v19 > 1, v20 + 1, 1);
        uint64_t v10 = v60[0];
      }
      *(void *)(v10 + 16) = v20 + 1;
      uint64_t v21 = v10 + 16 * v20;
      *(void *)(v21 + 32) = v16;
      *(void *)(v21 + 40) = v18;
      v11 += 4;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (*(void *)(v10 + 16) != 2) {
    goto LABEL_12;
  }
  uint64_t result = sub_24E1162C0();
  if (*(void *)(v10 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = result;
    uint64_t v25 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_24E1162C0();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v55 = v24;
    uint64_t v29 = sub_24E0C30B4(1);
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x253331F40](v29, v31, v33, v35);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v39 = v26;
    uint64_t v40 = sub_24E0C30B4(1);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x253331F40](v40, v42, v44, v46);
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();
    char v50 = sub_24E0C3150(v36, v38, v47, v49);
    if (v50 == 3)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
LABEL_13:
      sub_24E0C3060();
      swift_allocError();
      return swift_willThrow();
    }
    uint64_t v51 = v61;
    sub_24E0C1B28(v55, v25, v39, v28, v50, v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_24E115940();
    uint64_t v53 = *(void *)(v52 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) == 1)
    {
      sub_24E095494(v51, &qword_2698B8160);
      goto LABEL_13;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v57, v51, v52);
  }
  return result;
}

uint64_t sub_24E0C1B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v83 = a3;
  uint64_t v84 = a4;
  uint64_t v86 = a6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v77 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v77 - v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v77 - v19;
  uint64_t v85 = sub_24E115D80();
  uint64_t v87 = *(void *)(v85 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v85);
  uint64_t v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v77 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v81 = (char *)&v77 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v82 = (char *)&v77 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v36 = (char *)&v77 - v35;
  if (!a5)
  {
    uint64_t v40 = v34;
    uint64_t v88 = a1;
    uint64_t v89 = a2;
    sub_24E0C3DA0();
    swift_bridgeObjectRetain();
    sub_24E115D90();
    uint64_t v47 = v87;
    uint64_t v48 = v85;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v18, 0, 1, v85);
    int v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v18, 1, v48);
    if (v49 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v27, v18, v48);
      uint64_t v56 = v84;
      swift_bridgeObjectRetain();
      sub_24E0C32F8(v83, v56);
      if (v57)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
LABEL_25:
        uint64_t v68 = sub_24E115940();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v86, 1, 1, v68);
      }
      uint64_t v58 = v82;
      sub_24E115D00();
      os_log_type_t v59 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v59(v81, v27, v48);
      v59(v40, v58, v48);
      uint64_t v60 = v86;
      sub_24E115930();
      uint64_t v61 = *(void (**)(char *, uint64_t))(v47 + 8);
      v61(v58, v48);
      v61(v27, v48);
      goto LABEL_20;
    }
    uint64_t v50 = (uint64_t)v18;
    goto LABEL_24;
  }
  if (a5 != 1)
  {
    uint64_t v80 = v33;
    uint64_t v88 = a1;
    uint64_t v89 = a2;
    sub_24E0C3DA0();
    swift_bridgeObjectRetain();
    sub_24E115D90();
    uint64_t v41 = v87;
    uint64_t v51 = v85;
    uint64_t v79 = *(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56);
    v79(v15, 0, 1, v85);
    uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
    int v53 = v52(v15, 1, v51);
    if (v53 != 1)
    {
      uint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
      v78((uint64_t)v80, v15, v51);
      uint64_t v88 = v83;
      uint64_t v89 = v84;
      swift_bridgeObjectRetain();
      sub_24E115D90();
      uint64_t v66 = (void (*)(char *, char *, uint64_t))v78;
      v79(v12, 0, 1, v51);
      int v67 = v52(v12, 1, v51);
      if (v67 == 1)
      {
        (*(void (**)(char *, uint64_t))(v87 + 8))(v80, v51);
        uint64_t v50 = (uint64_t)v12;
        goto LABEL_24;
      }
      v66(v23, v12, v51);
      sub_24E0C3DF4();
      uint64_t v69 = v80;
      char v70 = sub_24E116160();
      uint64_t v71 = v87;
      if (v70)
      {
        int64_t v72 = *(void (**)(char *, uint64_t))(v87 + 8);
        v72(v23, v51);
        v72(v69, v51);
        goto LABEL_25;
      }
      uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
      v73(v82, (uint64_t)v69, v51);
      v73(v81, (uint64_t)v23, v51);
      uint64_t v74 = v86;
      sub_24E115930();
      long long v75 = *(void (**)(char *, uint64_t))(v71 + 8);
      v75(v23, v51);
      v75(v69, v51);
      uint64_t v76 = sub_24E115940();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v74, 0, 1, v76);
    }
    uint64_t v50 = (uint64_t)v15;
LABEL_24:
    sub_24E095494(v50, (uint64_t *)&unk_26B1AE8F8);
    goto LABEL_25;
  }
  uint64_t v37 = v34;
  swift_bridgeObjectRetain();
  sub_24E0C32F8(a1, a2);
  uint64_t v38 = v87;
  if ((v39 & 1) == 0)
  {
    uint64_t v88 = v83;
    uint64_t v89 = v84;
    sub_24E0C3DA0();
    swift_bridgeObjectRetain();
    sub_24E115D90();
    uint64_t v54 = v85;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v20, 0, 1, v85);
    int v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v20, 1, v54);
    if (v55 == 1)
    {
      uint64_t v50 = (uint64_t)v20;
      goto LABEL_24;
    }
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v36, v20, v54);
    uint64_t v62 = v82;
    sub_24E115D10();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v63(v81, v62, v54);
    v63(v37, v36, v54);
    uint64_t v60 = v86;
    sub_24E115930();
    uint64_t v64 = *(void (**)(char *, uint64_t))(v38 + 8);
    v64(v62, v54);
    v64(v36, v54);
LABEL_20:
    uint64_t v65 = sub_24E115940();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v60, 0, 1, v65);
  }
  uint64_t v42 = sub_24E115940();
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  uint64_t v44 = v42;
  uint64_t v45 = v86;
  return v43(v45, 1, 1, v44);
}

uint64_t static DateIntervalParsingStrategy.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_24E0C2498()
{
  return 0;
}

uint64_t sub_24E0C24A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_24E0C24D4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24E0C24E0(uint64_t a1)
{
  unint64_t v2 = sub_24E0C32A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0C251C(uint64_t a1)
{
  unint64_t v2 = sub_24E0C32A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DateIntervalParsingStrategy.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8170);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0C32A4();
  sub_24E117240();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t DateIntervalParsingStrategy.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t DateIntervalParsingStrategy.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24E0C26C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return DateIntervalParsingStrategy.parse(_:)(*(void *)a1, *(void *)(a1 + 8), a2);
}

uint64_t sub_24E0C26E8(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24E0C2710(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8170);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0C32A4();
  sub_24E117240();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24E0C2820()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0C2858()
{
  return sub_24E1171F0();
}

Swift::Double_optional __swiftcall Double.init(string:)(Swift::String string)
{
  char v1 = sub_24E0C32F8(string._countAndFlagsBits, (uint64_t)string._object);
  result.value = v2;
  result.is_nil = v1;
  return result;
}

double sub_24E0C28A8()
{
  uint64_t v0 = sub_24E115A10();
  if (v1) {
    double v2 = 0.0;
  }
  else {
    double v2 = (double)v0 * 60.0 * 60.0 * 24.0 * 365.25 + 0.0;
  }
  uint64_t v3 = sub_24E115A30();
  if ((v4 & 1) == 0) {
    double v2 = v2 + (double)v3 * 60.0 * 60.0 * 24.0 * 30.4375;
  }
  uint64_t v5 = sub_24E1159D0();
  if (v6) {
    double v7 = v2;
  }
  else {
    double v7 = v2 + (double)v5 * 60.0 * 60.0 * 24.0;
  }
  double v8 = (double)sub_24E1159F0() * 60.0 * 60.0;
  if (v9) {
    double v8 = -0.0;
  }
  double v10 = v7 + v8;
  double v11 = (double)sub_24E115A50() * 60.0;
  if (v12) {
    double v11 = -0.0;
  }
  return v11 + v10;
}

uint64_t sub_24E0C29B0(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_24E0C2E54(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_24E116440();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_24E116340();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_24E116340();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_24E116460();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_24E08B750(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_24E08B750((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  void v28[4] = v45;
  v28[5] = v23;
  void v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_24E116340();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_24E116460();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_24E08B750(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_24E08B750((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_24E116EB0();
  __break(1u);
LABEL_42:
  uint64_t result = sub_24E116EB0();
  __break(1u);
  return result;
}

uint64_t sub_24E0C2E54(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_24E116460();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_24E08B750(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_24E08B750((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_24E116EB0();
  __break(1u);
  return result;
}

uint64_t sub_24E0C2FB0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E1170B0() & 1;
  }
}

uint64_t sub_24E0C3008(void *a1)
{
  double v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_24E1170B0() & 1;
  }
}

unint64_t sub_24E0C3060()
{
  unint64_t result = qword_2698B8168;
  if (!qword_2698B8168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8168);
  }
  return result;
}

uint64_t sub_24E0C30B4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24E116350();
    return sub_24E116460();
  }
  return result;
}

uint64_t sub_24E0C3150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v6 = a1 == 80 && a2 == 0xE100000000000000;
  int v7 = v6;
  if (v6 || (sub_24E1170B0() & 1) != 0)
  {
    if ((a3 != 80 || a4 != 0xE100000000000000) && (sub_24E1170B0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 2;
    }
  }
  char v8 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (a3 == 80 && a4 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  char v10 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v10 & 1) == 0) {
    return 2;
  }
  return result;
}

unint64_t sub_24E0C32A4()
{
  unint64_t result = qword_2698B8178;
  if (!qword_2698B8178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8178);
  }
  return result;
}

uint64_t sub_24E0C32F8(uint64_t a1, uint64_t a2)
{
  v55[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24E115900();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x270FA5388](v4);
  BOOL v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698B8050);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B81B8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_24E115A80();
  uint64_t v13 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24E115E40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
  uint64_t v17 = sub_24E115E80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  sub_24E115A70();
  sub_24E1158E0();
  uint64_t v54 = a2;
  v55[0] = 0;
  uint64_t v53 = a1;
  sub_24E116450();
  id v18 = objc_allocWithZone(MEMORY[0x263F08B08]);
  char v19 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_initWithString_, v19);

  sub_24E116A60();
  double v22 = v21;
  swift_bridgeObjectRelease();
  if (v22 == 0.0)
  {
  }
  else
  {
    sub_24E116A60();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    if (objc_msgSend(v20, sel_isAtEnd))
    {
LABEL_3:
      double v25 = sub_24E0C28A8();

      double v22 = v25;
    }
    else
    {
      char v26 = v24 != 0;
      while (objc_msgSend(v20, sel_scanInteger_, v55))
      {
        uint64_t v28 = sub_24E116A70();
        if (!v29) {
          break;
        }
        uint64_t v30 = v28;
        unint64_t v31 = v29;
        if (v28 == 89 && v29 == 0xE100000000000000
          || (sub_24E1170B0() & 1) != 0
          || v30 == 21593 && v31 == 0xE200000000000000
          || (sub_24E1170B0() & 1) != 0)
        {
          sub_24E115A20();
        }
        else if (v30 == 77 && v31 == 0xE100000000000000 {
               || ((char v42 = sub_24E1170B0(), v30 == 21581) ? (v43 = v31 == 0xE200000000000000) : (v43 = 0),
        }
                   !v43 ? (char v44 = 0) : (char v44 = 1),
                   (v42 & 1) != 0 || (v44 & 1) != 0 || (sub_24E1170B0() & 1) != 0))
        {
          if (v26) {
            sub_24E115A60();
          }
          else {
            sub_24E115A40();
          }
        }
        else if (v30 == 68 && v31 == 0xE100000000000000 {
               || ((char v45 = sub_24E1170B0(), v30 == 21572) ? (v46 = v31 == 0xE200000000000000) : (v46 = 0),
        }
                   !v46 ? (char v47 = 0) : (char v47 = 1),
                   (v45 & 1) != 0 || (v47 & 1) != 0 || (sub_24E1170B0() & 1) != 0))
        {
          sub_24E1159E0();
        }
        else if (v30 == 72 && v31 == 0xE100000000000000 || (sub_24E1170B0() & 1) != 0)
        {
          sub_24E115A00();
        }
        if ((v31 & 0x2000000000000000) != 0) {
          uint64_t v32 = HIBYTE(v31) & 0xF;
        }
        else {
          uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
        }
        unint64_t v33 = sub_24E116350();
        if (v34) {
          unint64_t v33 = 15;
        }
        if (4 * v32 < v33 >> 14) {
          __break(1u);
        }
        unint64_t v35 = sub_24E116460();
        unint64_t v37 = v36;
        uint64_t v39 = v38;
        uint64_t v41 = v40;
        swift_bridgeObjectRelease();
        if (v39 == 84 && v41 == 0xE100000000000000 && !(v35 >> 16) && v37 >> 16 == 1)
        {
          swift_bridgeObjectRelease();
          char v26 = 1;
        }
        else
        {
          char v27 = sub_24E117030();
          swift_bridgeObjectRelease();
          v26 |= v27;
        }
        if (objc_msgSend(v20, sel_isAtEnd)) {
          goto LABEL_3;
        }
      }

      double v22 = 0.0;
    }
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v52);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v50);
  return *(void *)&v22;
}

unint64_t sub_24E0C3A48()
{
  unint64_t result = qword_2698B8180;
  if (!qword_2698B8180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8180);
  }
  return result;
}

unint64_t sub_24E0C3AA0()
{
  unint64_t result = qword_2698B8188;
  if (!qword_2698B8188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8188);
  }
  return result;
}

unint64_t sub_24E0C3AF8()
{
  unint64_t result = qword_2698B8190;
  if (!qword_2698B8190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8190);
  }
  return result;
}

unint64_t sub_24E0C3B50()
{
  unint64_t result = qword_2698B8198;
  if (!qword_2698B8198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8198);
  }
  return result;
}

unint64_t sub_24E0C3BA8()
{
  unint64_t result = qword_2698B81A0;
  if (!qword_2698B81A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DateIntervalParsingStrategy()
{
  return &type metadata for DateIntervalParsingStrategy;
}

unsigned char *storeEnumTagSinglePayload for DateIntervalParsingStrategy.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0C3CA8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateIntervalParsingStrategy.Error()
{
  return &type metadata for DateIntervalParsingStrategy.Error;
}

ValueMetadata *type metadata accessor for DateIntervalParsingStrategy.CodingKeys()
{
  return &type metadata for DateIntervalParsingStrategy.CodingKeys;
}

unint64_t sub_24E0C3CF4()
{
  unint64_t result = qword_2698B81A8;
  if (!qword_2698B81A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81A8);
  }
  return result;
}

unint64_t sub_24E0C3D4C()
{
  unint64_t result = qword_2698B81B0;
  if (!qword_2698B81B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81B0);
  }
  return result;
}

unint64_t sub_24E0C3DA0()
{
  unint64_t result = qword_2698B81C0;
  if (!qword_2698B81C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81C0);
  }
  return result;
}

unint64_t sub_24E0C3DF4()
{
  unint64_t result = qword_2698B81C8;
  if (!qword_2698B81C8)
  {
    sub_24E115D80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81C8);
  }
  return result;
}

uint64_t sub_24E0C3E4C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E0C3E84()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t static Duration.description<A>(_:_:units:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v3 = sub_24E117290();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E117270();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_24E1172D0();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24E1172E0();
  uint64_t v11 = *(void *)(v34 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v34);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - v15;
  sub_24E116DB0();
  uint64_t v27 = v36;
  uint64_t v28 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEA60);
  uint64_t v17 = sub_24E1172A0();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_24E11BE80;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v19, v25, v17);
  sub_24E09A5E0(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_24E1172C0();
  sub_24E117260();
  sub_24E117280();
  sub_24E115870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v29);
  if (qword_26B1AE908 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24E115E30();
  __swift_project_value_buffer(v21, (uint64_t)qword_26B1AEA40);
  sub_24E1172B0();
  double v22 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v23 = v34;
  v22(v14, v34);
  sub_24E0C43CC();
  sub_24E1172F0();
  v22(v16, v23);
  return v35;
}

uint64_t Duration.nanoseconds.getter()
{
  uint64_t result = sub_24E117300();
  uint64_t v2 = 1000000000 * result;
  if ((unsigned __int128)(result * (__int128)1000000000) >> 64 != (1000000000 * result) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t result = v2 + v1 / 1000000000;
  if (__OFADD__(v2, v1 / 1000000000)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t Duration.milliseconds.getter()
{
  uint64_t result = sub_24E117300();
  uint64_t v2 = 1000000000 * result;
  if ((unsigned __int128)(result * (__int128)1000000000) >> 64 == (1000000000 * result) >> 63)
  {
    BOOL v3 = __OFADD__(v2, v1 / 1000000000);
    uint64_t v4 = v2 + v1 / 1000000000;
    if (!v3) {
      return v4 / 1000000;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24E0C43CC()
{
  unint64_t result = qword_26B1AEAD0;
  if (!qword_26B1AEAD0)
  {
    sub_24E1172E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AEAD0);
  }
  return result;
}

uint64_t KeyedThrottle.__allocating_init(throttleInterval:)(double a1)
{
  uint64_t v2 = swift_allocObject();
  KeyedThrottle.init(throttleInterval:)(a1);
  return v2;
}

uint64_t KeyedThrottle.init(throttleInterval:)(double a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBC0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)(v1 + 16) = v3;
  sub_24E115D80();
  swift_getTupleTypeMetadata2();
  sub_24E1165A0();
  *(void *)(v1 + 24) = sub_24E1160B0();
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(double *)(v1 + 32) = a1;
  return v1;
}

void KeyedThrottle.throttle(key:block:)()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_24E0C5230(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24E0C45A4(double *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v43 = a4;
  char v44 = a3;
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(*(void *)a1 + 80);
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v41 = (char *)v37 - v8;
  uint64_t v9 = sub_24E115D80();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v37 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v38 = (uint64_t)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v37 - v19;
  MEMORY[0x270FA5388](v18);
  double v22 = (char *)v37 - v21;
  v37[1] = a1 + 3;
  swift_beginAccess();
  uint64_t v23 = *((void *)a1 + 3);
  uint64_t v24 = *(void *)(v6 + 88);
  uint64_t v40 = a2;
  uint64_t v25 = a2;
  uint64_t v26 = v45;
  uint64_t v42 = v7;
  v37[0] = v24;
  MEMORY[0x253331D50](v25, v23, v7, v9);
  swift_endAccess();
  sub_24E0C5358((uint64_t)v22, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v9) == 1)
  {
    uint64_t v27 = sub_24E0C53C0((uint64_t)v20);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v14, v20, v9);
  sub_24E0C4A24((uint64_t)v12);
  sub_24E115CD0();
  double v29 = v28;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v26 + 8);
  v30(v12, v9);
  uint64_t v27 = ((uint64_t (*)(char *, uint64_t))v30)(v14, v9);
  if (a1[4] < v29)
  {
LABEL_4:
    if (v44(v27))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v40, v42);
      uint64_t v31 = v38;
      sub_24E0C4A24(v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v31, 0, 1, v9);
      swift_beginAccess();
      sub_24E1160F0();
      sub_24E116110();
      swift_endAccess();
    }
    return sub_24E0C53C0((uint64_t)v22);
  }
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_24E115F00();
  __swift_project_value_buffer(v32, (uint64_t)qword_26B1B13B0);
  uint64_t v33 = sub_24E115EE0();
  os_log_type_t v34 = sub_24E1169A0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_24E083000, v33, v34, "KeyedThrottle: Not dispatching, event is throttled", v35, 2u);
    MEMORY[0x2533338B0](v35, -1, -1);
  }

  return sub_24E0C53C0((uint64_t)v22);
}

uint64_t sub_24E0C4A24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void (**)(uint64_t))(v1 + 40);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    sub_24E0C5278((uint64_t)v6);
    uint64_t v8 = sub_24E115D80();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    }
  }
  else
  {
    uint64_t v11 = sub_24E115D80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  }
  sub_24E115D70();
  return sub_24E0C53C0((uint64_t)v5);
}

Swift::Void __swiftcall KeyedThrottle.clearThrottleForKeysExcept(keys:)(Swift::OpaquePointer keys)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  sub_24E0C5420(v3);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_24E0C4C3C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = *a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v31 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v5 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v34 = (char *)&v24 - v13;
  uint64_t v14 = sub_24E115D80();
  swift_getTupleTypeMetadata2();
  sub_24E1165A0();
  uint64_t v29 = *(void *)(v5 + 88);
  uint64_t v30 = v14;
  uint64_t v15 = sub_24E1160B0();
  uint64_t v36 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  if (MEMORY[0x253332250](v16, v9))
  {
    uint64_t v24 = v11;
    uint64_t v25 = v3;
    uint64_t v17 = 0;
    double v28 = v3 + 3;
    uint64_t v32 = (void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
    uint64_t v26 = v2;
    uint64_t v27 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v18 = v34;
    while (1)
    {
      char v19 = sub_24E1165C0();
      sub_24E116590();
      if (v19)
      {
        uint64_t v20 = *(void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
        v20(v34, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v17), v9);
        uint64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_24E116CC0();
        if (v24 != 8)
        {
          __break(1u);
          return result;
        }
        v35[0] = result;
        uint64_t v20 = *v32;
        (*v32)(v34, v35, v9);
        swift_unknownObjectRelease();
        uint64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v15 = v36;
          uint64_t v3 = v25;
          goto LABEL_13;
        }
      }
      v20(v33, (uint64_t *)v18, v9);
      double v22 = v28;
      swift_beginAccess();
      MEMORY[0x253331D50](v18, *v22, v9, v30, v29);
      swift_endAccess();
      (*v27)(v18, v9);
      sub_24E1160F0();
      sub_24E116110();
      ++v17;
      if (v21 == MEMORY[0x253332250](a1, v9)) {
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  swift_beginAccess();
  v3[3] = v15;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0C4FE8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  if (v4) {
    uint64_t v5 = *(void *)(v3 + 48);
  }
  else {
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return sub_24E0C5268(v4);
}

uint64_t sub_24E0C503C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*a1) {
    uint64_t v3 = a1[1];
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *a2;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v3;
  sub_24E0C5268(v2);
  return sub_24E0C5278(v5);
}

uint64_t KeyedThrottle.dateProvider.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  sub_24E0C5268(v1);
  return v1;
}

uint64_t KeyedThrottle.dateProvider.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 40);
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return sub_24E0C5278(v5);
}

uint64_t (*KeyedThrottle.dateProvider.modify())()
{
  return j__swift_endAccess;
}

uint64_t KeyedThrottle.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24E0C5278(*(void *)(v0 + 40));
  return v0;
}

uint64_t KeyedThrottle.__deallocating_deinit()
{
  KeyedThrottle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24E0C5210()
{
  return sub_24E0C45A4(*(double **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24E0C5230(uint64_t a1)
{
  return sub_24E099980(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24E0C524C()
{
  return sub_24E0C4C3C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24E0C5268(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24E0C5278(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24E0C5290()
{
  return 16;
}

__n128 sub_24E0C529C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24E0C52A8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for KeyedThrottle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for KeyedThrottle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for KeyedThrottle);
}

uint64_t dispatch thunk of KeyedThrottle.__allocating_init(throttleInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_24E0C5358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E0C53C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E0C5420(uint64_t a1)
{
  return sub_24E0C5230(a1);
}

uint64_t DateInterval.init<A>(_:strategy:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a3;
  uint64_t v33 = a6;
  uint64_t v34 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8160);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E115D80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B81D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E11BE80;
  *(void *)(inited + 32) = 5721934;
  *(void *)(inited + 40) = 0xE300000000000000;
  sub_24E115D70();
  if (qword_2698B7938 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_2698B86D0;
  uint64_t v17 = (void *)sub_24E115CF0();
  id v18 = objc_msgSend(v16, sel_stringFromDate_, v17);

  uint64_t v19 = sub_24E1161F0();
  uint64_t v21 = v20;

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(void *)(inited + 48) = v19;
  *(void *)(inited + 56) = v21;
  unint64_t v22 = sub_24E090EA4(inited);
  uint64_t MyBaseE5remap_15substitutionMapS2S_SDyS2SGtFZ_0 = _s10Foundation12DateIntervalV10FindMyBaseE5remap_15substitutionMapS2S_SDyS2SGtFZ_0(v34, a2, v22);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = MyBaseE5remap_15substitutionMapS2S_SDyS2SGtFZ_0;
  uint64_t v38 = v25;
  uint64_t v26 = v36;
  sub_24E115950();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(v26, a4);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_24E115940();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
  v29(v10, 0, 1, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v10, 1, v27) == 1)
  {
    sub_24E0C5B18((uint64_t)v10);
    sub_24E115940();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v33, 1, 1, v27);
  }
  else
  {
    uint64_t v31 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v33, v10, v27);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v29)(v31, 0, 1, v27);
  }
}

uint64_t _s10Foundation12DateIntervalV10FindMyBaseE5remap_15substitutionMapS2S_SDyS2SGtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  v35[0] = 47;
  v35[1] = 0xE100000000000000;
  _OWORD v34[2] = v35;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24E0C29B0(0x7FFFFFFFFFFFFFFFLL, 1, sub_24E0C5B78, (uint64_t)v34, a1, a2);
  int64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_15;
    }
LABEL_9:
    uint64_t v20 = sub_24E1162C0();
    if (!*(void *)(a3 + 16)) {
      goto LABEL_14;
    }
    unint64_t v22 = sub_24E093D68(v20, v21);
    if ((v23 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v24 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v22);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if (v8[2])
      {
LABEL_13:
        void v8[4] = v26;
        void v8[5] = v25;
LABEL_14:
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v8 = sub_24E08CFC8(v8);
      if (v8[2]) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_25:
    uint64_t result = (uint64_t)sub_24E08CFC8(v8);
    uint64_t v8 = (void *)result;
    goto LABEL_19;
  }
  v35[0] = MEMORY[0x263F8EE78];
  sub_24E0AEB38(0, v7, 0);
  uint64_t v8 = (void *)v35[0];
  uint64_t v9 = (uint64_t *)(v6 + 56);
  do
  {
    uint64_t v10 = *(v9 - 3);
    uint64_t v11 = *(v9 - 2);
    uint64_t v12 = *(v9 - 1);
    uint64_t v13 = *v9;
    swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x253331F40](v10, v11, v12, v13);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v35[0] = v8;
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1)
    {
      sub_24E0AEB38(v17 > 1, v18 + 1, 1);
      uint64_t v8 = (void *)v35[0];
    }
    v8[2] = v18 + 1;
    uint64_t v19 = &v8[2 * v18];
    v19[4] = v14;
    v19[5] = v16;
    v9 += 4;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  if (v8[2]) {
    goto LABEL_9;
  }
LABEL_15:
  if (v8[2] < 2uLL)
  {
LABEL_22:
    v35[0] = v8;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
    sub_24E085388();
    uint64_t v33 = sub_24E116140();
    swift_bridgeObjectRelease_n();
    return v33;
  }
  uint64_t v27 = sub_24E1162C0();
  if (!*(void *)(a3 + 16) || (unint64_t v29 = sub_24E093D68(v27, v28), (v30 & 1) == 0))
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v31 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v29);
  a3 = *v31;
  uint64_t v25 = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  if (v8[2] >= 2uLL)
  {
    v8[6] = a3;
    v8[7] = v25;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E0C5B18(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E0C5B78(void *a1)
{
  return sub_24E0C2FB0(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t static BinaryEncodingError.== infix(_:_:)()
{
  return 1;
}

uint64_t BinaryEncodingError.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t BinaryEncodingError.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t RawRepresentable<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v16[-1] - v8;
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v16, v11, v10);
  sub_24E1164E0();
  uint64_t v12 = v17;
  uint64_t v13 = v18;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16))(v9, AssociatedTypeWitness, v15, v12, v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t RawRepresentable<>.encode(to:)(void *a1)
{
  uint64_t v2 = sub_24E116270();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v14, v6, v7);
  sub_24E1164E0();
  uint64_t v8 = v13[1];
  uint64_t v9 = v13[2];
  sub_24E116240();
  uint64_t v10 = v15;
  uint64_t v11 = v16;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v11 + 8))(v8, v9, v5, v10, v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

unint64_t sub_24E0C5F90()
{
  unint64_t result = qword_2698B81D8;
  if (!qword_2698B81D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81D8);
  }
  return result;
}

uint64_t dispatch thunk of BinaryEncodable.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of BinaryEncoding.container()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for BinaryEncodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0C60BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryEncodingError()
{
  return &type metadata for BinaryEncodingError;
}

uint64_t dispatch thunk of BinaryEncodingContaining.encode(_:encoding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of BinaryEncodingContaining.encode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of BinaryEncodingContaining.encode<A>(sequence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

id CodableBox.contents.getter()
{
  return *v0;
}

uint64_t CodableBox.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodableBox.encode(to:)(void *a1)
{
  v11[5] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *v1;
  v11[0] = 0;
  id v4 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v3, 1, v11);
  id v5 = v11[0];
  if (v4)
  {
    uint64_t v6 = sub_24E115C10();
    unint64_t v8 = v7;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_24E117230();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, (uint64_t)v11[3]);
    sub_24E0C6304();
    sub_24E1170E0();
    sub_24E08D0B0(v6, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = v5;
    sub_24E115AF0();

    return swift_willThrow();
  }
}

unint64_t sub_24E0C6304()
{
  unint64_t result = qword_2698B81E0;
  if (!qword_2698B81E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81E0);
  }
  return result;
}

uint64_t CodableBox.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E117210();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_24E0C64D8();
    sub_24E1170D0();
    sub_24E0C652C();
    uint64_t v5 = sub_24E1169B0();
    uint64_t v7 = v5;
    if (v5)
    {
      sub_24E08D0B0(v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      *a2 = v7;
    }
    else
    {
      type metadata accessor for CodableBox.Error();
      swift_getWitnessTable();
      swift_allocError();
      swift_willThrow();
      sub_24E08D0B0(v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24E0C64D8()
{
  unint64_t result = qword_2698B81E8;
  if (!qword_2698B81E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B81E8);
  }
  return result;
}

unint64_t sub_24E0C652C()
{
  unint64_t result = qword_2698B81F0[0];
  if (!qword_2698B81F0[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_2698B81F0);
  }
  return result;
}

uint64_t type metadata accessor for CodableBox.Error()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0C6584@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CodableBox.init(from:)(a1, a2);
}

uint64_t sub_24E0C65A0(void *a1)
{
  return CodableBox.encode(to:)(a1);
}

uint64_t static CodableBox.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t CodableBox.Error.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t CodableBox.Error.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0C662C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0C6648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for CodableBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0C6668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_24E0C6670(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0C670CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t UnsafeSendableBox.contents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 88);
  swift_beginAccess();
  uint64_t v4 = sub_24E116A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnsafeSendableBox.contents.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 88);
  swift_beginAccess();
  uint64_t v4 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*UnsafeSendableBox.contents.modify())()
{
  return j__swift_endAccess;
}

uint64_t UnsafeSendableBox.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 56))(v0 + *(void *)(*(void *)v0 + 88), 1, 1);
  return v0;
}

uint64_t UnsafeSendableBox.init()()
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 56))(v0 + *(void *)(*(void *)v0 + 88), 1, 1);
  return v0;
}

uint64_t UnsafeSendableBox.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t UnsafeSendableBox.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24E0C6B5C()
{
  uint64_t result = sub_24E116A90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnsafeSendableBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for UnsafeSendableBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UnsafeSendableBox);
}

uint64_t dispatch thunk of UnsafeSendableBox.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void withPowerAssertion<A>(reason:type:timeout:_:)(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), double a5)
{
}

void sub_24E0C6C4C(uint64_t a1, unint64_t a2, double a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_24E0C8EB0(a3);
  IOPMAssertionID v9 = sub_24E0C7E48();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v21 = a5;
    if (qword_2698B7910 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24E115F00();
    __swift_project_value_buffer(v10, (uint64_t)qword_2698BFAA0);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_24E115EE0();
    os_log_type_t v12 = sub_24E1169A0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v22 = v20;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_24E090400(a1, a2, &v22);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 1024;
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v11, v12, "Successfully created power assertion %s:%u", (uint8_t *)v13, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v20, -1, -1);
      MEMORY[0x2533338B0](v13, -1, -1);
    }
    else
    {

      uint64_t v14 = swift_bridgeObjectRelease_n();
    }
    v21(v14);
    sub_24E0C8130(v9);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_24E115EE0();
    os_log_type_t v16 = sub_24E1169A0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v18 = 136315394;
      swift_bridgeObjectRetain();
      sub_24E090400(a1, a2, &v22);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 1024;
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v15, v16, "Successfully released power assertion %s:%u", (uint8_t *)v18, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v19, -1, -1);
      MEMORY[0x2533338B0](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t withPowerAssertion<A>(reason:type:timeout:_:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *(void *)uint64_t v16 = v8;
  *(void *)(v16 + 8) = sub_24E0C7270;
  *(void *)(v16 + 80) = a7;
  *(void *)(v16 + 88) = a8;
  *(void *)(v16 + 72) = a6;
  *(double *)(v16 + 64) = a4;
  *(void *)(v16 + 48) = a2;
  *(void *)(v16 + 56) = a3;
  *(void *)(v16 + 40) = a1;
  return MEMORY[0x270FA2498](sub_24E0C73EC, 0, 0);
}

uint64_t sub_24E0C7270()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0C73A4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E0C73A4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E0C73BC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(void *)(v8 + 72) = a6;
  *(double *)(v8 + 64) = a4;
  *(void *)(v8 + 48) = a2;
  *(void *)(v8 + 56) = a3;
  *(void *)(v8 + 40) = a1;
  return MEMORY[0x270FA2498](sub_24E0C73EC, 0, 0);
}

uint64_t sub_24E0C73EC()
{
  uint64_t v15 = v0;
  sub_24E0C8EB0(*(double *)(v0 + 64));
  int v1 = sub_24E0C7E48();
  *(_DWORD *)(v0 + 132) = v1;
  swift_bridgeObjectRelease();
  if (qword_2698B7910 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  *(void *)(v0 + 96) = __swift_project_value_buffer(v2, (uint64_t)qword_2698BFAA0);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E1169A0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 56);
  if (v5)
  {
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_24E090400(v7, v6, &v14);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 1024;
    *(_DWORD *)(v0 + 128) = v1;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v3, v4, "Successfully created power assertion %s:%u", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v9, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 72) + **(int **)(v0 + 72));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_24E0C76E8;
  uint64_t v11 = *(void *)(v0 + 40);
  return v13(v11);
}

uint64_t sub_24E0C76E8()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0C7B8C;
  }
  else {
    uint64_t v2 = sub_24E0C77FC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0C77FC()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  sub_24E0C8130(*(_DWORD *)(v0 + 132));
  if (v1)
  {
    (*(void (**)(void))(*(void *)(*(void *)(v0 + 88) - 8) + 8))(*(void *)(v0 + 40));
    sub_24E0C8130(*(_DWORD *)(v0 + 132));
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_24E115EE0();
    uint64_t v9 = sub_24E1169A0();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      int v17 = *(_DWORD *)(v0 + 132);
      unint64_t v11 = *(void *)(v0 + 56);
      uint64_t v16 = *(void *)(v0 + 48);
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v19[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_24E090400(v16, v11, v19);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 1024;
      *(_DWORD *)(v0 + 120) = v17;
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v8, (os_log_type_t)v9, "Successfully released power assertion %s:%u", (uint8_t *)v12, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v13, -1, -1);
      MEMORY[0x2533338B0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_willThrow();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_24E115EE0();
    os_log_type_t v3 = sub_24E1169A0();
    if (os_log_type_enabled(v2, v3))
    {
      int v18 = *(_DWORD *)(v0 + 132);
      uint64_t v5 = *(void *)(v0 + 48);
      unint64_t v4 = *(void *)(v0 + 56);
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      v19[0] = v7;
      *(_DWORD *)uint64_t v6 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_24E090400(v5, v4, v19);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v6 + 12) = 1024;
      *(_DWORD *)(v0 + 124) = v18;
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v2, v3, "Successfully released power assertion %s:%u", (uint8_t *)v6, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v7, -1, -1);
      MEMORY[0x2533338B0](v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v14();
}

uint64_t sub_24E0C7B8C()
{
  uint64_t v11 = v0;
  sub_24E0C8130(*(_DWORD *)(v0 + 132));
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_24E115EE0();
  uint64_t v2 = sub_24E1169A0();
  if (os_log_type_enabled(v1, (os_log_type_t)v2))
  {
    int v9 = *(_DWORD *)(v0 + 132);
    uint64_t v4 = *(void *)(v0 + 48);
    unint64_t v3 = *(void *)(v0 + 56);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v10 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_24E090400(v4, v3, &v10);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 1024;
    *(_DWORD *)(v0 + 120) = v9;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v1, (os_log_type_t)v2, "Successfully released power assertion %s:%u", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_willThrow();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_24E0C7D80()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_2698BFAA0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2698BFAA0);
  if (qword_2698B7918 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2698BFAB8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_24E0C7E48()
{
  v14[1] = *MEMORY[0x263EF8340];
  IOPMAssertionID AssertionID = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B83D8);
  CFDictionaryRef v0 = (const __CFDictionary *)sub_24E116080();
  IOReturn v1 = IOPMAssertionCreateWithProperties(v0, &AssertionID);

  if (!v1) {
    return AssertionID;
  }
  if (qword_2698B7910 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_2698BFAA0);
  swift_bridgeObjectRetain_n();
  unint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116980();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24E1160A0();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_24E090400(v7, v9, v14);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 1024;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v3, v4, "IOPMAssertionCreateWithProperties %s failed with error: %d", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_24E1161F0();
  id v11 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v12 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v12, v1, 0);

  return swift_willThrow();
}

uint64_t sub_24E0C8130(IOPMAssertionID a1)
{
  uint64_t result = IOPMAssertionRelease(a1);
  if (result)
  {
    int v2 = result;
    if (qword_2698B7910 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E115F00();
    __swift_project_value_buffer(v3, (uint64_t)qword_2698BFAA0);
    os_log_type_t v4 = sub_24E115EE0();
    os_log_type_t v5 = sub_24E116980();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 67109120;
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v4, v5, "IOPMAssertionRelease failed with error: %d", v6, 8u);
      MEMORY[0x2533338B0](v6, -1, -1);
    }

    sub_24E1161F0();
    id v7 = objc_allocWithZone(MEMORY[0x263F087E8]);
    unint64_t v8 = (void *)sub_24E1161C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, v2, 0);

    return swift_willThrow();
  }
  return result;
}

uint64_t static PowerAssertion.AssertionType.== infix(_:_:)()
{
  return 1;
}

uint64_t PowerAssertion.AssertionType.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t PowerAssertion.AssertionType.hashValue.getter()
{
  return sub_24E1171F0();
}

unint64_t sub_24E0C8334()
{
  unint64_t result = qword_2698B83D0;
  if (!qword_2698B83D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B83D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerAssertion()
{
  return &type metadata for PowerAssertion;
}

unsigned char *storeEnumTagSinglePayload for PowerAssertion.AssertionType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0C8434);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerAssertion.AssertionType()
{
  return &type metadata for PowerAssertion.AssertionType;
}

uint64_t sub_24E0C846C()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_2698BFAB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698BFAB8);
  return sub_24E115EF0();
}

_OWORD *sub_24E0C84F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  type metadata accessor for CFString(0);
  uint64_t v11 = v10;
  uint64_t v30 = v10;
  *(void *)&long long v29 = a1;
  uint64_t v12 = (void *)*a5;
  unint64_t v14 = sub_24E093D68(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = (void *)*a5;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      return sub_24E094E10(&v29, v21);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_24E0B3E64();
    goto LABEL_7;
  }
  sub_24E0B2A50(v17, a4 & 1);
  unint64_t v23 = sub_24E093D68(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    unint64_t result = (_OWORD *)sub_24E117150();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*a5;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29, v11);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (uint64_t *)((char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  sub_24E0C8E0C(v14, a2, a3, *v27, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_24E0C86DC(uint64_t a1, uint64_t a2, char a3, void *a4, double a5)
{
  v27[0] = a5;
  uint64_t v9 = MEMORY[0x263F8D538];
  uint64_t v28 = MEMORY[0x263F8D538];
  uint64_t v10 = (void *)*a4;
  unint64_t v12 = sub_24E093D68(a1, a2);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a3 & 1) != 0)
  {
LABEL_7:
    char v18 = (void *)*a4;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_24E094E10(v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_24E0B3E64();
    goto LABEL_7;
  }
  sub_24E0B2A50(v15, a3 & 1);
  unint64_t v21 = sub_24E093D68(a1, a2);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    unint64_t result = (_OWORD *)sub_24E117150();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*a4;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v9);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (double *)((char *)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *))(v26 + 16))(v25);
  sub_24E0C8D88(v12, a1, a2, v18, *v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_24E0C88B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v10 = MEMORY[0x263F8D310];
  uint64_t v29 = MEMORY[0x263F8D310];
  *(void *)&long long v28 = a1;
  *((void *)&v28 + 1) = a2;
  char v11 = (void *)*a6;
  unint64_t v13 = sub_24E093D68(a3, a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = (void *)*a6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_24E094E10(&v28, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_24E0B3E64();
    goto LABEL_7;
  }
  sub_24E0B2A50(v16, a5 & 1);
  unint64_t v22 = sub_24E093D68(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    unint64_t result = (_OWORD *)sub_24E117150();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*a6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v10);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_24E0C8D04(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_24E0C8A9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  *(void *)&long long v27 = a1;
  uint64_t v9 = MEMORY[0x263F8D6C8];
  uint64_t v28 = MEMORY[0x263F8D6C8];
  uint64_t v10 = (void *)*a5;
  unint64_t v12 = sub_24E093D68(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_24E094E10(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24E0B3E64();
    goto LABEL_7;
  }
  sub_24E0B2A50(v15, a4 & 1);
  unint64_t v21 = sub_24E093D68(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    unint64_t result = (_OWORD *)sub_24E117150();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v27, v9);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_24E0C8C80(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_24E0C8C80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)&long long v11 = a4;
  uint64_t v12 = MEMORY[0x263F8D6C8];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_24E094E10(&v11, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_24E0C8D04(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)&long long v12 = a4;
  *((void *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  id v7 = (void *)(a6[6] + 16 * a1);
  *id v7 = a2;
  v7[1] = a3;
  unint64_t result = sub_24E094E10(&v12, (_OWORD *)(a6[7] + 32 * a1));
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

_OWORD *sub_24E0C8D88(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  v11[0] = a5;
  uint64_t v12 = MEMORY[0x263F8D538];
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a4[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_24E094E10(v11, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_24E0C8E0C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  type metadata accessor for CFString(0);
  uint64_t v17 = v10;
  *(void *)&long long v16 = a4;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = (void *)(a5[6] + 16 * a1);
  *uint64_t v11 = a2;
  v11[1] = a3;
  unint64_t result = sub_24E094E10(&v16, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

uint64_t sub_24E0C8EB0(double a1)
{
  uint64_t v2 = sub_24E1161C0();
  type metadata accessor for CFString(0);
  uint64_t v4 = v3;
  uint64_t v43 = v3;
  *(void *)&long long v42 = v2;
  sub_24E094E10(&v42, &v40);
  uint64_t v5 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = v5;
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
  MEMORY[0x270FA5388](v7);
  BOOL v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  sub_24E0C84F0(*v9, 0x7954747265737341, 0xEA00000000006570, isUniquelyReferenced_nonNull_native, &v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  uint64_t v11 = v39;
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_24E1161C0();
  uint64_t v43 = v4;
  *(void *)&long long v42 = v12;
  sub_24E094E10(&v42, &v40);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = v11;
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
  MEMORY[0x270FA5388](v14);
  long long v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  sub_24E0C84F0(*v16, 0x614E747265737341, 0xEA0000000000656DLL, v13, &v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  uint64_t v18 = v39;
  swift_bridgeObjectRelease();
  uint64_t v43 = MEMORY[0x263F8D538];
  *(double *)&long long v42 = a1;
  sub_24E094E10(&v42, &v40);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = v18;
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
  MEMORY[0x270FA5388](v20);
  char v22 = (double *)((char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *))(v23 + 16))(v22);
  sub_24E0C86DC(0x5374756F656D6954, 0xEE0073646E6F6365, v19, &v39, *v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  uint64_t v24 = v39;
  swift_bridgeObjectRelease();
  uint64_t v43 = MEMORY[0x263F8D310];
  *(void *)&long long v42 = 0xD000000000000014;
  *((void *)&v42 + 1) = 0x800000024E118BD0;
  sub_24E094E10(&v42, &v40);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = v24;
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (uint64_t *)((char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  sub_24E0C88B8(*v28, v28[1], 0x4174756F656D6954, 0xED00006E6F697463, v25, &v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  uint64_t v30 = v39;
  swift_bridgeObjectRelease();
  uint64_t v43 = MEMORY[0x263F8D6C8];
  *(void *)&long long v42 = 255;
  sub_24E094E10(&v42, &v40);
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = v30;
  uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (uint64_t *)((char *)&v38 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  sub_24E0C8A9C(*v34, 0x654C747265737341, 0xEB000000006C6576, v31, &v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  uint64_t v36 = v39;
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t AsyncSequence.share()()
{
  type metadata accessor for AsyncShareSequence();
  return sub_24E0CA1CC(v0);
}

uint64_t type metadata accessor for AsyncShareSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0C94B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
}

uint64_t sub_24E0C958C(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(v3, a1, AssociatedTypeWitness);
  return swift_endAccess();
}

uint64_t sub_24E0C9668()
{
  return v0;
}

uint64_t sub_24E0C9670(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *v1;
  v2[4] = *(void *)(*v1 + 88);
  v2[5] = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[6] = AssociatedTypeWitness;
  v2[7] = *(void *)(AssociatedTypeWitness - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0C9774, v1, 0);
}

uint64_t sub_24E0C9774()
{
  sub_24E0C94B8(v0[8]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E0C9854;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[2];
  return MEMORY[0x270FA1E80](v4, v3, AssociatedConformanceWitness);
}

uint64_t sub_24E0C9854()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_24E0C9A18;
  }
  else {
    uint64_t v4 = sub_24E0C9980;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0C9980()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_24E0C9AB0(v0[3], v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24E0C9A18()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_24E0C9AB0(v0[3], v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24E0C9AB0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - v4, a2);
  return sub_24E0C958C((uint64_t)v5);
}

uint64_t AsyncShareSequence.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AsyncShareSequence.__deallocating_deinit()
{
  AsyncShareSequence.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t AsyncShareSequence.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0C9C9C()
{
  return AsyncShareSequence.unownedExecutor.getter();
}

uint64_t sub_24E0C9CB8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_24E095114;
  return sub_24E0C9670(a1);
}

uint64_t sub_24E0C9D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = v6;
  v10[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10[3] = AssociatedTypeWitness;
  void v10[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  void v10[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  void v10[6] = v14;
  uint64_t v15 = type metadata accessor for AsyncShareSequence();
  *uint64_t v14 = v10;
  v14[1] = sub_24E0C9EC4;
  return MEMORY[0x270FA1E90](a1, a2, a3, v15, a6, v13);
}

uint64_t sub_24E0C9EC4()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t sub_24E0C9FF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v13 - v10;
  swift_defaultActor_initialize();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_24E1167E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v2 + *(void *)(*(void *)v2 + 104), v11, AssociatedTypeWitness);
  return v2;
}

uint64_t sub_24E0CA1CC(uint64_t a1)
{
  return sub_24E0C9FF8(a1);
}

uint64_t sub_24E0CA210()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0CA22C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24E0CA2CC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AsyncShareSequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AsyncShareSequence);
}

uint64_t dispatch thunk of AsyncShareSequence.makeAsyncIterator()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AsyncShareSequence.next()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E095114;
  return v6(a1);
}

uint64_t DirectorySequence.init(at:includingPropertiesForKeys:options:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)MEMORY[0x2533330F0]();
  id v5 = objc_msgSend(self, sel_defaultManager);
  uint64_t v6 = sub_24E116950();

  uint64_t v7 = sub_24E115B60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

uint64_t sub_24E0CA5A8(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_24E115B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  uint64_t v8 = Error.domain.getter(v31[2]);
  uint64_t v10 = v9;
  if (v8 == sub_24E1161F0() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    swift_getErrorValue();
    if (Error.code.getter(v29) == (id)260) {
      return 1;
    }
    goto LABEL_9;
  }
  char v13 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_8;
  }
LABEL_9:
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24E115F00();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B1B13B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  id v15 = a2;
  id v16 = a2;
  uint64_t v17 = sub_24E115EE0();
  os_log_type_t v18 = sub_24E116980();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = v20;
    *(_DWORD *)uint64_t v19 = 141558531;
    uint64_t v30 = 1752392040;
    v31[0] = v20;
    sub_24E116AB0();
    *(_WORD *)(v19 + 12) = 2081;
    sub_24E0CBFD4();
    uint64_t v21 = sub_24E117040();
    uint64_t v30 = sub_24E090400(v21, v22, v31);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_WORD *)(v19 + 22) = 2112;
    uint64_t v23 = sub_24E115AE0();
    uint64_t v30 = v23;
    sub_24E116AB0();
    uint64_t v24 = v27;
    *uint64_t v27 = v23;

    _os_log_impl(&dword_24E083000, v17, v18, "ERROR: URL: %{private,mask.hash}s error: %@", (uint8_t *)v19, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v24, -1, -1);
    uint64_t v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v25, -1, -1);
    MEMORY[0x2533338B0](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return 1;
}

uint64_t DirectorySequence.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    id v6 = *v1;
    uint64_t v7 = (void *)MEMORY[0x2533330F0]();
    sub_24E0CAAA8(v6, v1, (uint64_t)v5);

    return sub_24E0CACDC((uint64_t)v5, a1);
  }
  else
  {
    uint64_t v9 = sub_24E115B60();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a1, 1, 1, v9);
  }
}

uint64_t sub_24E0CAAA8@<X0>(void *a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_nextObject))
  {
    sub_24E116BB0();
    swift_unknownObjectRelease();
    sub_24E094E10(v16, v17);
    sub_24E094E10(v17, v16);
    uint64_t v9 = sub_24E115B60();
    char v10 = swift_dynamicCast();
    uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      uint64_t v12 = *(void *)(v9 - 8);
      v11(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v8, v9);
        return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(a3, 0, 1, v9);
      }
    }
    else
    {
      v11(v8, 1, 1, v9);
    }
    sub_24E0CBD74((uint64_t)v8);
  }
  uint64_t v14 = *a2;
  *a2 = 0;

  uint64_t v15 = sub_24E115B60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
}

uint64_t sub_24E0CACDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E0CAD48()
{
  unint64_t result = qword_2698B8480;
  if (!qword_2698B8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8480);
  }
  return result;
}

uint64_t sub_24E0CAD9C()
{
  return 0;
}

uint64_t sub_24E0CADA4()
{
  return 2;
}

uint64_t sub_24E0CADAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_24E0CB094(*v0);

  return v2;
}

uint64_t sub_24E0CADE0(void *a1, char *a2, uint64_t a3)
{
  return sub_24E0CB968(a1, a2, a3, *v3);
}

uint64_t sub_24E0CADE8()
{
  return sub_24E1164A0();
}

uint64_t sub_24E0CAE0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    id v6 = *v1;
    uint64_t v7 = (void *)MEMORY[0x2533330F0]();
    sub_24E0CAAA8(v6, v1, (uint64_t)v5);

    return sub_24E0CACDC((uint64_t)v5, a1);
  }
  else
  {
    uint64_t v9 = sub_24E115B60();
    char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a1, 1, 1, v9);
  }
}

void **initializeBufferWithCopyOfBuffer for DirectorySequence(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for DirectorySequence(id *a1)
{
}

void **assignWithCopy for DirectorySequence(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for DirectorySequence(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DirectorySequence(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DirectorySequence(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectorySequence()
{
  return &type metadata for DirectorySequence;
}

uint64_t sub_24E0CB094(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  char v57 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)v53 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v53 - v7;
  uint64_t v9 = sub_24E115B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v53[0] = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v53 - v13;
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  id v16 = a1;
  if (a1)
  {
    uint64_t v17 = 0;
    os_log_type_t v18 = (void *)MEMORY[0x263F8EE78];
    uint64_t v55 = (v15 + 32) & ~v15;
    uint64_t v19 = MEMORY[0x263F8EE78] + v55;
    uint64_t v63 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v65 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v66 = (uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
    v53[1] = v15 | 7;
    uint64_t v56 = MEMORY[0x263F8EE58] + 8;
    uint64_t v54 = v14;
    uint64_t v64 = v10;
    uint64_t v60 = v8;
    while (1)
    {
      id v20 = a1;
      uint64_t v21 = (void *)MEMORY[0x2533330F0]();
      if (objc_msgSend(v20, sel_nextObject))
      {
        uint64_t v62 = v21;
        uint64_t v58 = a1;
        sub_24E116BB0();
        swift_unknownObjectRelease();
        sub_24E094E10(v67, v68);
        sub_24E094E10(v68, v67);
        uint64_t v22 = (uint64_t)v57;
        char v23 = swift_dynamicCast();
        uint64_t v24 = *v65;
        if (v23)
        {
          v24((char *)v22, 0, 1, v9);
          int v25 = (*v63)(v22, 1, v9);
          uint64_t v26 = (uint64_t)v61;
          if (v25 != 1)
          {
            uint64_t v27 = v22;
            uint64_t v28 = *v66;
            uint64_t v29 = (char *)v53[0];
            (*v66)((char *)v53[0], (char *)v27, v9);
            uint64_t v30 = v29;
            uint64_t v14 = v54;
            v28((char *)v26, v30, v9);
            os_log_type_t v59 = v24;
            v24((char *)v26, 0, 1, v9);
            a1 = v58;
            uint64_t v21 = v62;
            goto LABEL_11;
          }
        }
        else
        {
          v24((char *)v22, 1, 1, v9);
          uint64_t v26 = (uint64_t)v61;
        }
        sub_24E0CBD74(v22);

        uint64_t v21 = v62;
      }
      else
      {

        uint64_t v24 = *v65;
        uint64_t v26 = (uint64_t)v61;
      }
      os_log_type_t v59 = v24;
      v24((char *)v26, 1, 1, v9);
      a1 = 0;
LABEL_11:

      uint64_t v8 = v60;
      sub_24E0CACDC(v26, (uint64_t)v60);
      if ((*v63)((uint64_t)v8, 1, v9) == 1)
      {

        goto LABEL_38;
      }
      char v31 = *v66;
      uint64_t result = (*v66)(v14, v8, v9);
      if (v17)
      {
        uint64_t v33 = v18;
        uint64_t v34 = v64;
        BOOL v35 = __OFSUB__(v17--, 1);
        if (v35) {
          goto LABEL_42;
        }
      }
      else
      {
        unint64_t v36 = v18[3];
        uint64_t v37 = v64;
        if ((uint64_t)((v36 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_43;
        }
        uint64_t v38 = v8;
        int64_t v39 = v36 & 0xFFFFFFFFFFFFFFFELL;
        if (v39 <= 1) {
          uint64_t v40 = 1;
        }
        else {
          uint64_t v40 = v39;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8488);
        uint64_t v41 = *(void *)(v37 + 72);
        uint64_t v42 = v55;
        uint64_t v33 = (void *)swift_allocObject();
        uint64_t result = _swift_stdlib_malloc_size(v33);
        if (!v41) {
          goto LABEL_44;
        }
        uint64_t v43 = result - v42;
        if (result - v42 == 0x8000000000000000 && v41 == -1) {
          goto LABEL_45;
        }
        uint64_t v45 = v43 / v41;
        _OWORD v33[2] = v40;
        v33[3] = 2 * (v43 / v41);
        BOOL v46 = (char *)v33 + v42;
        uint64_t v47 = v18[3] >> 1;
        uint64_t v48 = v47 * v41;
        if (v18[2])
        {
          if (v33 < v18 || v46 >= (char *)v18 + v55 + v48)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v33 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          void v18[2] = 0;
        }
        uint64_t v19 = (uint64_t)&v46[v48];
        uint64_t v49 = (v45 & 0x7FFFFFFFFFFFFFFFLL) - v47;
        uint64_t result = swift_release();
        uint64_t v8 = v38;
        uint64_t v34 = v64;
        uint64_t v14 = v54;
        BOOL v35 = __OFSUB__(v49, 1);
        uint64_t v17 = v49 - 1;
        if (v35)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
      }
      v31((char *)v19, v14, v9);
      v19 += *(void *)(v34 + 72);
      os_log_type_t v18 = v33;
      if (!a1)
      {
        v59(v8, 1, 1, v9);
        goto LABEL_36;
      }
    }
  }
  uint64_t v17 = 0;
  uint64_t v33 = (void *)MEMORY[0x263F8EE78];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_36:
  os_log_type_t v18 = v33;
LABEL_38:
  uint64_t result = sub_24E0CBD74((uint64_t)v8);
  unint64_t v50 = v18[3];
  if (v50 >= 2)
  {
    unint64_t v51 = v50 >> 1;
    BOOL v35 = __OFSUB__(v51, v17);
    uint64_t v52 = v51 - v17;
    if (v35) {
      goto LABEL_46;
    }
    void v18[2] = v52;
  }
  return (uint64_t)v18;
}

uint64_t sub_24E0CB644(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  unint64_t v5 = a5 >> 62;
  uint64_t v9 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (uint64_t)a4 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v9 = *(void *)(a4 + 24);
      if (a2) {
        goto LABEL_8;
      }
      goto LABEL_39;
    case 3uLL:
LABEL_5:
      if (!a2) {
        goto LABEL_39;
      }
      goto LABEL_8;
    default:
      uint64_t v9 = BYTE6(a5);
      if (!a2)
      {
LABEL_39:
        uint64_t v14 = 0;
        goto LABEL_40;
      }
LABEL_8:
      if (!a3)
      {
        uint64_t v14 = 0;
        goto LABEL_40;
      }
      if (a3 < 0) {
        goto LABEL_48;
      }
      int v25 = a1;
      uint64_t v10 = 0;
      char v11 = a4;
      uint64_t v38 = (uint64_t)a4 >> 32;
      unint64_t v36 = a4 >> 16;
      unint64_t v37 = a4 >> 8;
      unint64_t v34 = HIDWORD(a4);
      unint64_t v35 = a4 >> 24;
      unint64_t v32 = HIWORD(a4);
      unint64_t v33 = a4 >> 40;
      unint64_t v30 = a5 >> 8;
      unint64_t v31 = HIBYTE(a4);
      unint64_t v28 = a5 >> 24;
      unint64_t v29 = a5 >> 16;
      unint64_t v26 = a5 >> 40;
      unint64_t v27 = HIDWORD(a5);
      uint64_t v24 = v9;
      uint64_t v12 = v5;
      unint64_t v40 = a5 >> 62;
      break;
  }
  while (2)
  {
    uint64_t v14 = v10++;
    uint64_t v15 = (int)a4;
    switch(v12)
    {
      case 0:
        if (!v9) {
          goto LABEL_35;
        }
        BOOL v16 = __OFSUB__(v9--, 1);
        if (v16) {
          goto LABEL_42;
        }
        if (v9 >= BYTE6(a5)) {
          goto LABEL_43;
        }
        v41[0] = v11;
        v41[1] = v37;
        v41[2] = v36;
        v41[3] = v35;
        v41[4] = v34;
        v41[5] = v33;
        v41[6] = v32;
        v41[7] = v31;
        v41[8] = a5;
        v41[9] = v30;
        v41[10] = v29;
        v41[11] = v28;
        v41[12] = v27;
        v41[13] = v26;
        char v13 = v41[v9];
        goto LABEL_12;
      case 1:
        goto LABEL_19;
      case 2:
        uint64_t v15 = *(void *)(a4 + 16);
LABEL_19:
        if (v9 == v15) {
          goto LABEL_35;
        }
        BOOL v16 = __OFSUB__(v9--, 1);
        if (v16)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
        }
        if (v5 == 2)
        {
          if (v9 < *(void *)(a4 + 16)) {
            goto LABEL_44;
          }
          if (v9 >= *(void *)(a4 + 24)) {
            goto LABEL_46;
          }
          uint64_t v17 = sub_24E115980();
          if (!v17) {
            goto LABEL_50;
          }
          uint64_t v18 = v17;
          uint64_t v19 = sub_24E1159B0();
          uint64_t v20 = v9 - v19;
          if (__OFSUB__(v9, v19)) {
            goto LABEL_47;
          }
LABEL_11:
          char v13 = *(unsigned char *)(v18 + v20);
          LODWORD(v5) = v40;
LABEL_12:
          *(unsigned char *)(a2 + v14) = v13;
          if (a3 == v10) {
            goto LABEL_34;
          }
          continue;
        }
        if (v9 < (int)a4 || v9 >= v38) {
          goto LABEL_45;
        }
        uint64_t v21 = sub_24E115980();
        if (!v21) {
          goto LABEL_51;
        }
        uint64_t v18 = v21;
        uint64_t v22 = sub_24E1159B0();
        uint64_t v20 = v9 - v22;
        if (!__OFSUB__(v9, v22)) {
          goto LABEL_11;
        }
        __break(1u);
LABEL_34:
        uint64_t v14 = a3;
LABEL_35:
        a1 = v25;
LABEL_40:
        *a1 = a4;
        a1[1] = a5;
        a1[2] = v9;
        return v14;
      case 3:
        a1 = v25;
        if (v24) {
          goto LABEL_49;
        }
        uint64_t v9 = 0;
        goto LABEL_39;
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t sub_24E0CB968(void *a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  MEMORY[0x270FA5388](v12);
  BOOL v16 = (char *)&v32 - v15;
  uint64_t v17 = sub_24E115B60();
  uint64_t result = MEMORY[0x270FA5388](v17);
  int64_t v39 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    a3 = 0;
    goto LABEL_23;
  }
  if (!a3) {
    goto LABEL_23;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v33 = a1;
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    if (a4)
    {
      unint64_t v35 = v11;
      uint64_t v21 = 0;
      unint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v19 + 32);
      uint64_t v32 = a3;
      uint64_t v38 = a3 - 1;
      uint64_t v34 = MEMORY[0x263F8EE58] + 8;
      uint64_t v37 = v19;
      while (1)
      {
        id v23 = a4;
        uint64_t v24 = (void *)MEMORY[0x2533330F0]();
        if (objc_msgSend(v23, sel_nextObject))
        {
          unint64_t v36 = a4;
          int v25 = v14;
          sub_24E116BB0();
          swift_unknownObjectRelease();
          sub_24E094E10(v42, v43);
          sub_24E094E10(v43, v42);
          uint64_t v26 = (uint64_t)v35;
          char v27 = swift_dynamicCast();
          unint64_t v28 = *v41;
          if (v27)
          {
            v28((char *)v26, 0, 1, v17);
            if ((*v40)(v26, 1, v17) != 1)
            {
              uint64_t v29 = v26;
              uint64_t v14 = v25;
              (*v22)(v25, v29, v17);
              v28(v25, 0, 1, v17);
              a4 = v36;
              goto LABEL_14;
            }
          }
          else
          {
            v28((char *)v26, 1, 1, v17);
          }
          sub_24E0CBD74(v26);

          uint64_t v14 = v25;
          v28(v25, 1, 1, v17);
        }
        else
        {

          (*v41)(v14, 1, 1, v17);
        }
        a4 = 0;
LABEL_14:

        sub_24E0CACDC((uint64_t)v14, (uint64_t)v16);
        if ((*v40)((uint64_t)v16, 1, v17) == 1) {
          goto LABEL_21;
        }
        unint64_t v30 = *v22;
        unint64_t v31 = v39;
        (*v22)(v39, (uint64_t)v16, v17);
        v30(a2, (uint64_t)v31, v17);
        if (v38 == v21)
        {
          a3 = v32;
          a1 = v33;
          goto LABEL_23;
        }
        a2 += *(void *)(v37 + 72);
        ++v21;
        if (!a4) {
          goto LABEL_20;
        }
      }
    }
    uint64_t v21 = 0;
LABEL_20:
    (*v41)(v16, 1, 1, v17);
    a4 = 0;
LABEL_21:
    sub_24E0CBD74((uint64_t)v16);
    a3 = v21;
    a1 = v33;
LABEL_23:
    *a1 = a4;
    return a3;
  }
  return result;
}

uint64_t sub_24E0CBD74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E0CBDD4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *char v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_24E0CBFD4()
{
  unint64_t result = qword_2698B8490;
  if (!qword_2698B8490)
  {
    sub_24E115B60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8490);
  }
  return result;
}

uint64_t GenericError.description.getter()
{
  if (!*(void *)(v0 + 8)) {
    return 0x6C706D49746F6E2ELL;
  }
  sub_24E116370();
  sub_24E116370();
  return 0x28726F7272652ELL;
}

uint64_t sub_24E0CC0B8()
{
  if (!*(void *)(v0 + 8)) {
    return 0x6C706D49746F6E2ELL;
  }
  sub_24E116370();
  sub_24E116370();
  return 0x28726F7272652ELL;
}

void *initializeBufferWithCopyOfBuffer for GenericError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GenericError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for GenericError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for GenericError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GenericError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_24E0CC294(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24E0CC2AC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericError()
{
  return &type metadata for GenericError;
}

void *BufferedData.__allocating_init(data:)(uint64_t a1, uint64_t a2)
{
  unint64_t result = (void *)swift_allocObject();
  result[3] = a2;
  result[4] = 0;
  result[2] = a1;
  return result;
}

BOOL BufferedData.isAtEnd.getter()
{
  unint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  uint64_t v3 = 0;
  switch(v1 >> 62)
  {
    case 1uLL:
      LODWORD(v3) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x24E0CC390);
      }
      uint64_t v3 = (int)v3;
      return v0[4] == v3;
    case 2uLL:
      uint64_t v6 = v2 + 16;
      uint64_t v5 = *(void *)(v2 + 16);
      uint64_t v4 = *(void *)(v6 + 8);
      BOOL v7 = __OFSUB__(v4, v5);
      uint64_t v3 = v4 - v5;
      if (!v7) {
        return v0[4] == v3;
      }
      goto LABEL_8;
    case 3uLL:
      return v0[4] == v3;
    default:
      uint64_t v3 = BYTE6(v1);
      return v0[4] == v3;
  }
}

uint64_t BufferedData.read(maxBytes:)(uint64_t a1)
{
  uint64_t result = sub_24E0CC4D4(a1, *(void *)(v1 + 32));
  if (!v2)
  {
    uint64_t v5 = *(void *)(v1 + 32);
    BOOL v6 = __OFADD__(v5, a1);
    uint64_t v7 = v5 + a1;
    if (v6) {
      __break(1u);
    }
    else {
      *(void *)(v1 + 32) = v7;
    }
  }
  return result;
}

uint64_t BufferedData.read()()
{
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_10;
      }
      uint64_t v4 = HIDWORD(v1) - (int)v1;
LABEL_6:
      sub_24E08D248(v0[2], v0[3]);
LABEL_7:
      if (v4 < v3)
      {
        __break(1u);
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x24E0CC4B4);
      }
      uint64_t v7 = sub_24E115C60();
      sub_24E08D0B0(v1, v2);
      return v7;
    case 2uLL:
      uint64_t v6 = *(void *)(v1 + 16);
      uint64_t v5 = *(void *)(v1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(v2);
      goto LABEL_7;
  }
}

void *BufferedData.init(data:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a2;
  v2[4] = 0;
  v2[2] = a1;
  return v2;
}

uint64_t sub_24E0CC4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + a1;
  if (__OFADD__(a2, a1))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(v5) - v5;
      if (__OFSUB__(HIDWORD(v5), v5)) {
        goto LABEL_14;
      }
      uint64_t v6 = (int)v6;
LABEL_7:
      if (v6 >= v3)
      {
LABEL_8:
        if (v3 >= a2)
        {
          sub_24E08D248(*(void *)(v2 + 16), *(void *)(v2 + 24));
          uint64_t v10 = sub_24E115C60();
          sub_24E08D0B0(v5, v4);
          return v10;
        }
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x24E0CC5FCLL);
      }
LABEL_11:
      sub_24E0BAD9C();
      swift_allocError();
      *int64_t v12 = 1;
      return swift_willThrow();
    case 2uLL:
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v7 = *(void *)(v5 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_11;
      }
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(v4);
      goto LABEL_7;
  }
}

uint64_t BufferedData.deinit()
{
  sub_24E08D0B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return v0;
}

uint64_t BufferedData.__deallocating_deinit()
{
  sub_24E08D0B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BufferedData()
{
  return self;
}

uint64_t method lookup function for BufferedData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BufferedData);
}

uint64_t dispatch thunk of BufferedData.__allocating_init(data:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_24E0CC6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 24);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_24E093D68(a2, a3), (v8 & 1) != 0)) {
    sub_24E090878(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v10);
  }
  else {
    memset(v10, 0, sizeof(v10));
  }
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  if (swift_dynamicCast()) {
    return v11;
  }
  else {
    return 2;
  }
}

uint64_t sub_24E0CC780(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 24);
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_24E093D68(a2, a3), (v11 & 1) != 0))
  {
    sub_24E090878(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  uint64_t v12 = MEMORY[0x263F8D4F8];
  if (swift_dynamicCast())
  {
    char v13 = v28[0] & 1;
    if (qword_26B1AF8D8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24E115F00();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B1B13B0);
    swift_bridgeObjectRetain_n();
    unint64_t v15 = sub_24E115EE0();
    os_log_type_t v16 = sub_24E116960();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v28[0] = v25;
      *(_DWORD *)uint64_t v17 = 141559043;
      *(void *)&long long v26 = 1752392040;
      sub_24E116AB0();
      *(_WORD *)(v17 + 12) = 2081;
      LOBYTE(v26) = v13;
      uint64_t v18 = sub_24E116290();
      void v28[4] = v4;
      *(void *)&long long v26 = sub_24E090400(v18, v19, v28);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2082;
      *(void *)&long long v26 = a2;
      *((void *)&v26 + 1) = a3;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_24E116290();
      *(void *)&long long v26 = sub_24E090400(v20, v21, v28);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 32) = 2160;
      *(void *)&long long v26 = 1752392040;
      sub_24E116AB0();
      *(_WORD *)(v17 + 42) = 2081;
      LOBYTE(v26) = a4 & 1;
      uint64_t v22 = sub_24E116290();
      *(void *)&long long v26 = sub_24E090400(v22, v23, v28);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v15, v16, "Some other thread already stored value %{private,mask.hash}s for '%{public}s' -- ignoring computed value: %{private,mask.hash}s", (uint8_t *)v17, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v25, -1, -1);
      MEMORY[0x2533338B0](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *((void *)&v27 + 1) = v12;
    LOBYTE(v26) = a4 & 1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24E092820((uint64_t)&v26, a2, a3);
    swift_endAccess();
    char v13 = a4;
  }
  return v13 & 1;
}

uint64_t sub_24E0CCB38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24E115E00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_24E0C118C((unint64_t *)&qword_26B1AFD60),
        uint64_t v7 = sub_24E116120(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_24E0C118C(&qword_26B1AE868);
      char v15 = sub_24E116190();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_24E0CCD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_24E1171C0();
    sub_24E116320();
    uint64_t v6 = sub_24E1171F0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_24E1170B0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          os_log_type_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_24E1170B0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24E0CCE5C()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_2698B8498);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2698B8498);
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B13B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_24E0CCF24()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B1AEBF0);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBC0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE80];
  *(void *)(v0 + 16) = result;
  *(void *)(v0 + 24) = v2;
  off_26B1AEBE8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static SystemInfo.architecture.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v3, &qword_26B1AEBD8);
  }
  return 0;
}

uint64_t static SystemInfo.auditUserIdentifier.getter()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  memset(&v1, 0, sizeof(v1));
  getaudit_addr(&v1, 48);
  return v1.ai_auid;
}

uint64_t static SystemInfo.auditSessionIdentifier.getter()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  memset(&v1, 0, sizeof(v1));
  getaudit_addr(&v1, 48);
  return v1.ai_asid;
}

BOOL static SystemInfo.isSystemSession.getter()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  memset(&v1, 0, sizeof(v1));
  getaudit_addr(&v1, 48);
  return v1.ai_auid == -1;
}

uint64_t static SystemInfo.bootSessionUUID.getter@<X0>(uint64_t a1@<X8>)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E116270();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v25 = 37;
  uint64_t v8 = sub_24E1165B0();
  *(void *)(v8 + 16) = 37;
  *(_OWORD *)(v8 + 48) = 0u;
  *(void *)(v8 + 61) = 0;
  *(_OWORD *)(v8 + 32) = 0u;
  if (sysctlbyname("kern.bootsessionuuid", (void *)(v8 + 32), &v25, 0, 0))
  {
    int v13 = MEMORY[0x253331B60]();
    if (!strerror(v13)) {
      __break(1u);
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  sub_24E116250();
  sub_24E0CD5A4(v8, v7);
  if (!v9)
  {
    while (1)
    {
LABEL_9:
      sub_24E116EC0();
      __break(1u);
LABEL_10:
      uint64_t v14 = sub_24E1161A0();
      if (v15) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = 0x6E776F6E6B6E55;
      }
      if (v15) {
        unint64_t v17 = v15;
      }
      else {
        unint64_t v17 = 0xE700000000000000;
      }
      if (qword_2698B7920 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_24E115F00();
      __swift_project_value_buffer(v18, (uint64_t)qword_2698B8498);
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_24E115EE0();
      os_log_type_t v20 = sub_24E116980();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v26[0] = v22;
        *(_DWORD *)uint64_t v21 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_24E090400(v16, v17, v26);
        sub_24E116AB0();
        uint64_t v23 = swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 12) = 1024;
        LODWORD(v24) = MEMORY[0x253331B60](v23);
        sub_24E116AB0();
        _os_log_impl(&dword_24E083000, v19, v20, "Error from sysctlbyname: %{public}s (%d)", (uint8_t *)v21, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x2533338B0](v22, -1, -1);
        MEMORY[0x2533338B0](v21, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  sub_24E115DA0();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24E115E00();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
  {
    sub_24E095494((uint64_t)v4, (uint64_t *)&unk_26B1AFD48);
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v4, v10);
}

uint64_t sub_24E0CD5A4(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_24E116270();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v24 - v9;
  sub_24E116240();
  char v11 = sub_24E116230();
  BOOL v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v10, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, a2, v4);
  if (v11)
  {
    v12(v8, v4);
    goto LABEL_4;
  }
  sub_24E116250();
  char v13 = sub_24E116230();
  v12(v10, v4);
  v12(v8, v4);
  if (v13)
  {
LABEL_4:
    uint64_t v14 = sub_24E0CEB28(0, a1);
    if ((v15 & 1) == 0)
    {
      if ((v14 & 0x8000000000000000) == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_24E1162E0();
        uint64_t v18 = v17;
        swift_unknownObjectRelease();
        if (v18)
        {
          sub_24E116240();
          char v19 = sub_24E116230();
          v12(v10, v4);
          if (v19 & 1) != 0 || (sub_24E116C50())
          {
            swift_bridgeObjectRelease();
LABEL_15:
            v12(a2, v4);
            return v16;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_11:
  uint64_t v20 = sub_24E0CEB28(0, a1);
  if ((v21 & 1) == 0)
  {
    id v22 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithBytes_length_encoding_, a1 + 32, v20, sub_24E116260());
    swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v16 = sub_24E1161F0();
    }
    else
    {
      uint64_t v16 = 0;
    }
    goto LABEL_15;
  }
LABEL_18:
  uint64_t result = sub_24E116EC0();
  __break(1u);
  return result;
}

uint64_t static SystemInfo.isInternalBuild.getter()
{
  return os_variant_has_internal_content();
}

uint64_t static SystemInfo.isFactoryBuild.getter()
{
  return os_variant_has_factory_content();
}

uint64_t static SystemInfo.arrowChipID.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v7, &qword_26B1AEBD8);
  }
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13B0);
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116980();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24E083000, v3, v4, "Could not get arrow chip id", v5, 2u);
    MEMORY[0x2533338B0](v5, -1, -1);
  }

  return 0;
}

uint64_t static SystemInfo.buildVersion.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v7, &qword_26B1AEBD8);
  }
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13B0);
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116980();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24E083000, v3, v4, "Could not get build version", v5, 2u);
    MEMORY[0x2533338B0](v5, -1, -1);
  }

  return 0;
}

uint64_t static SystemInfo.uniqueDeviceID.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v7, &qword_26B1AEBD8);
  }
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13B0);
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116980();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24E083000, v3, v4, "Could not get device unique id", v5, 2u);
    MEMORY[0x2533338B0](v5, -1, -1);
  }

  return 0;
}

uint64_t static SystemInfo.hostUUID.getter()
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  memset(v2, 0, sizeof(v2));
  timespec v1 = (timespec)xmmword_24E11D870;
  gethostuuid(v2, &v1);
  return sub_24E115DD0();
}

uint64_t static SystemInfo.deviceClass.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v7, &qword_26B1AEBD8);
  }
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13B0);
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116980();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24E083000, v3, v4, "Could not get device class", v5, 2u);
    MEMORY[0x2533338B0](v5, -1, -1);
  }

  return 0;
}

uint64_t static SystemInfo.productType.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v3, &qword_26B1AEBD8);
  }
  return 0;
}

uint64_t static SystemInfo.osVersion.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v7, &qword_26B1AEBD8);
  }
  if (qword_26B1AF8D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B13B0);
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116980();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24E083000, v3, v4, "Could not get OS version", v5, 2u);
    MEMORY[0x2533338B0](v5, -1, -1);
  }

  return 0;
}

uint64_t static SystemInfo.platform.getter()
{
  return 0x736F656E6F687069;
}

uint64_t static SystemInfo.deviceSKU.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v3, &qword_26B1AEBD8);
    return 0;
  }
}

uint64_t static SystemInfo.lowPowerExpressModesSupported.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v11);
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
    if (swift_dynamicCast())
    {
      uint64_t v3 = v10;
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v11, &qword_26B1AEBD8);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
LABEL_6:
  uint64_t v4 = sub_24E0D0864(v3);
  swift_bridgeObjectRelease();
  char v5 = sub_24E0CCD24(0x616873696C61, 0xE600000000000000, v4);
  uint64_t v6 = v5 & 1;
  if (sub_24E0CCD24(0x796D2D646E6966, 0xE700000000000000, v4)) {
    uint64_t v6 = v5 & 1 | 2;
  }
  char v7 = sub_24E0CCD24(0x727078652D63666ELL, 0xEB00000000737365, v4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v9 = v6 | 4;
  if ((v7 & 1) == 0) {
    uint64_t v9 = v6;
  }
  *a1 = v9;
  return result;
}

uint64_t static SystemInfo.regionCode.getter()
{
  uint64_t v0 = (void *)MEMORY[0x2533330F0]();
  sub_24E0CE8BC((uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v3, &qword_26B1AEBD8);
  }
  return 0;
}

uint64_t static SystemInfo.isKoreaSKU.getter()
{
  if (static SystemInfo.regionCode.getter() == 18507 && v0 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v2 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
}

uint64_t SystemInfo.LowPowerExpressModes.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t SystemInfo.LowPowerExpressModes.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static SystemInfo.LowPowerExpressModes.alisha.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static SystemInfo.LowPowerExpressModes.findMy.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static SystemInfo.LowPowerExpressModes.nfcExpress.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void *static SystemInfo.LowPowerExpressModes.allCases.getter()
{
  return &unk_27002C0C0;
}

uint64_t SystemInfo.LowPowerExpressModes.description.getter()
{
  uint64_t v1 = 0x616873696C612ELL;
  uint64_t v2 = *v0;
  if ((qword_27002C0A8 & ~*v0) != 0)
  {
    char v7 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    if (qword_27002C0A8)
    {
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x616873696C612ELL;
    }
    else
    {
      uint64_t v3 = 0x7270784563666E2ELL;
      if ((qword_27002C0A8 & 4) == 0) {
        uint64_t v3 = 0x4E574F4E4B4E552ELL;
      }
      unint64_t v4 = 0xEB00000000737365;
      if ((qword_27002C0A8 & 4) == 0) {
        unint64_t v4 = 0xE800000000000000;
      }
      if ((qword_27002C0A8 & 2) != 0) {
        uint64_t v5 = 0x794D646E69662ELL;
      }
      else {
        uint64_t v5 = v3;
      }
      if ((qword_27002C0A8 & 2) != 0) {
        unint64_t v6 = 0xE700000000000000;
      }
      else {
        unint64_t v6 = v4;
      }
    }
    char v7 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v7 = sub_24E08B2D4(0, v7[2] + 1, 1, v7);
    }
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    if (v9 >= v8 >> 1) {
      char v7 = sub_24E08B2D4((void *)(v8 > 1), v9 + 1, 1, v7);
    }
    void v7[2] = v9 + 1;
    uint64_t v10 = &v7[2 * v9];
    void v10[4] = v5;
    void v10[5] = v6;
  }
  if ((qword_27002C0B0 & ~v2) == 0)
  {
    uint64_t v11 = 0x794D646E69662ELL;
    unint64_t v12 = 0xE700000000000000;
    uint64_t v13 = 0x7270784563666E2ELL;
    if ((qword_27002C0B0 & 4) == 0) {
      uint64_t v13 = 0x4E574F4E4B4E552ELL;
    }
    unint64_t v14 = 0xEB00000000737365;
    if ((qword_27002C0B0 & 4) == 0) {
      unint64_t v14 = 0xE800000000000000;
    }
    if ((qword_27002C0B0 & 2) == 0)
    {
      uint64_t v11 = v13;
      unint64_t v12 = v14;
    }
    if (qword_27002C0B0) {
      uint64_t v15 = 0x616873696C612ELL;
    }
    else {
      uint64_t v15 = v11;
    }
    if (qword_27002C0B0) {
      unint64_t v16 = 0xE700000000000000;
    }
    else {
      unint64_t v16 = v12;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v7 = sub_24E08B2D4(0, v7[2] + 1, 1, v7);
    }
    unint64_t v18 = v7[2];
    unint64_t v17 = v7[3];
    if (v18 >= v17 >> 1) {
      char v7 = sub_24E08B2D4((void *)(v17 > 1), v18 + 1, 1, v7);
    }
    void v7[2] = v18 + 1;
    char v19 = &v7[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
  }
  if ((qword_27002C0B8 & ~v2) == 0)
  {
    uint64_t v20 = 0x794D646E69662ELL;
    unint64_t v21 = 0xE700000000000000;
    uint64_t v22 = 0x7270784563666E2ELL;
    if ((qword_27002C0B8 & 4) == 0) {
      uint64_t v22 = 0x4E574F4E4B4E552ELL;
    }
    unint64_t v23 = 0xEB00000000737365;
    if ((qword_27002C0B8 & 4) == 0) {
      unint64_t v23 = 0xE800000000000000;
    }
    if ((qword_27002C0B8 & 2) == 0)
    {
      uint64_t v20 = v22;
      unint64_t v21 = v23;
    }
    if (qword_27002C0B8)
    {
      unint64_t v24 = 0xE700000000000000;
    }
    else
    {
      uint64_t v1 = v20;
      unint64_t v24 = v21;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v7 = sub_24E08B2D4(0, v7[2] + 1, 1, v7);
    }
    unint64_t v26 = v7[2];
    unint64_t v25 = v7[3];
    if (v26 >= v25 >> 1) {
      char v7 = sub_24E08B2D4((void *)(v25 > 1), v26 + 1, 1, v7);
    }
    void v7[2] = v26 + 1;
    long long v27 = &v7[2 * v26];
    v27[4] = v1;
    v27[5] = v24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
  sub_24E08F138((unint64_t *)&qword_26B1AE7E8, &qword_26B1AE990);
  sub_24E116140();
  swift_bridgeObjectRelease();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  return 60;
}

void sub_24E0CE8A8(void *a1@<X8>)
{
  *a1 = &unk_27002C0F8;
}

void sub_24E0CE8BC(uint64_t a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_24E1161C0();
  uint64_t v3 = MGCopyAnswerWithError();

  if (v3)
  {
    *(void *)(a1 + 24) = swift_getObjectType();
    *(void *)a1 = v3;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t sub_24E0CEB28(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(unsigned __int8 *)(a2 + 32) == a1) {
    return 0;
  }
  if (v2 == 1) {
    return 0;
  }
  if (*(unsigned __int8 *)(a2 + 33) == a1) {
    return 1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v2 - 2;
  while (v5 != v4)
  {
    int v6 = *(unsigned __int8 *)(a2 + 34 + v4++);
    if (v6 == a1) {
      return v4 + 1;
    }
  }
  return 0;
}

uint64_t sub_24E0CEBB0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  uint64_t v11 = sub_24E116120();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      unint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_24E0C118C(&qword_26B1AE868);
      char v22 = sub_24E116190();
      unint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      unint64_t v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_24E0CF724((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_24E0CEEAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_24E1171C0();
  swift_bridgeObjectRetain();
  sub_24E116320();
  uint64_t v8 = sub_24E1171F0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_24E1170B0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_24E1170B0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24E0CF99C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24E0CF05C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24E115E00();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCC8);
  uint64_t v5 = sub_24E116C20();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
      uint64_t result = sub_24E116120();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_24E0CF444()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B84D0);
  uint64_t v3 = sub_24E116C20();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_24E1171C0();
      sub_24E116320();
      uint64_t result = sub_24E1171F0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24E0CF724(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_24E0CF05C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_24E0CFB38();
      goto LABEL_12;
    }
    sub_24E0CFF90();
  }
  uint64_t v12 = *v3;
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  uint64_t v13 = sub_24E116120();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_24E0C118C(&qword_26B1AE868);
      char v21 = sub_24E116190();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_24E117140();
  __break(1u);
  return result;
}

uint64_t sub_24E0CF99C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_24E0CF444();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_24E0CFDDC();
      goto LABEL_22;
    }
    sub_24E0D032C();
  }
  uint64_t v11 = *v4;
  sub_24E1171C0();
  sub_24E116320();
  uint64_t result = sub_24E1171F0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_24E1170B0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24E117140();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_24E1170B0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_24E0CFB38()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24E115E00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCC8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24E116C10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_24E0CFDDC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B84D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24E116C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24E0CFF90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24E115E00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCC8);
  uint64_t v7 = sub_24E116C20();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
    uint64_t result = sub_24E116120();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24E0D032C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B84D0);
  uint64_t v3 = sub_24E116C20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_24E1171C0();
    swift_bridgeObjectRetain();
    sub_24E116320();
    uint64_t result = sub_24E1171F0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t _s10FindMyBase10SystemInfoO9underTestSbvgZ_0(uint64_t a1)
{
  if (qword_26B1AEB38 != -1) {
    a1 = swift_once();
  }
  uint64_t v14 = 0x7365547265646E75;
  unint64_t v15 = 0xE900000000000074;
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = v2 + 4;
  os_unfair_lock_lock(v2 + 4);
  sub_24E0D0AEC(&v13);
  os_unfair_lock_unlock(v3);
  if (v13 != 2) {
    return v13 & 1;
  }
  uint64_t has_internal_content = os_variant_has_internal_content();
  if (has_internal_content)
  {
    id v5 = objc_msgSend(self, sel_processInfo);
    id v6 = objc_msgSend(v5, sel_environment);

    uint64_t v7 = sub_24E116090();
    if (*(void *)(v7 + 16) && (sub_24E093D68(0xD00000000000001BLL, 0x800000024E118D50), (v8 & 1) != 0))
    {
      swift_bridgeObjectRetain();
      char v9 = 1;
    }
    else
    {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t has_internal_content = swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  char v13 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](has_internal_content);
  MEMORY[0x270FA5388](v11);
  os_unfair_lock_lock(v3);
  sub_24E0D0B70(v12);
  os_unfair_lock_unlock(v3);
  return v12[0];
}

uint64_t sub_24E0D0864(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_24E1168B0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_24E0CEEAC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_24E0D0900()
{
  unint64_t result = qword_2698B84B0;
  if (!qword_2698B84B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B84B0);
  }
  return result;
}

unint64_t sub_24E0D0958()
{
  unint64_t result = qword_2698B84B8;
  if (!qword_2698B84B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B84B8);
  }
  return result;
}

uint64_t sub_24E0D09AC()
{
  return sub_24E08F138(&qword_2698B84C0, &qword_2698B84C8);
}

unint64_t sub_24E0D09EC()
{
  unint64_t result = qword_26B1AE7A8;
  if (!qword_26B1AE7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE7A8);
  }
  return result;
}

unint64_t sub_24E0D0A44()
{
  unint64_t result = qword_26B1AE7B0;
  if (!qword_26B1AE7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE7B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemInfo()
{
  return &type metadata for SystemInfo;
}

ValueMetadata *type metadata accessor for SystemInfo.LowPowerExpressModes()
{
  return &type metadata for SystemInfo.LowPowerExpressModes;
}

uint64_t sub_24E0D0AB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24E0CC6B4(*(void *)(v1 + 16), **(void **)(v1 + 24), *(void *)(*(void *)(v1 + 24) + 8));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void *sub_24E0D0AEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24E0D0B30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24E0CC780(*(void *)(v1 + 16), **(void **)(v1 + 24), *(void *)(*(void *)(v1 + 24) + 8), **(unsigned char **)(v1 + 32));
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

void *sub_24E0D0B70@<X0>(unsigned char *a1@<X8>)
{
  return sub_24E0FF2D8(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t Identifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24E115E00();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Identifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t Identifier.hash(into:)()
{
  sub_24E115E00();
  sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
  return sub_24E116130();
}

uint64_t sub_24E0D0CD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24E0D0D44()
{
  return 25705;
}

uint64_t sub_24E0D0D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E0D0CD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24E0D0D80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24E08AD54();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24E0D0DB0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24E0D0E04(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t Identifier.encode(to:)(void *a1)
{
  type metadata accessor for Identifier.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_24E117020();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E117240();
  sub_24E115E00();
  sub_24E0C118C(&qword_2698B84D8);
  sub_24E117000();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t type metadata accessor for Identifier.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Identifier.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t Identifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_24E115E00();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  char v25 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Identifier.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_24E116FD0();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for Identifier();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v26;
  sub_24E117220();
  if (!v11)
  {
    int64_t v18 = v10;
    uint64_t v26 = v8;
    uint64_t v12 = v21;
    uint64_t v13 = v23;
    sub_24E0C118C(qword_2698B84E0);
    uint64_t v14 = v24;
    uint64_t v15 = v22;
    sub_24E116FA0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v15);
    int64_t v16 = v18;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v25, v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v20, v16, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24E0D1378@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Identifier.init(from:)(a1, a2);
}

uint64_t sub_24E0D1394(void *a1)
{
  return Identifier.encode(to:)(a1);
}

uint64_t sub_24E0D13B4()
{
  return sub_24E1171F0();
}

uint64_t type metadata accessor for Identifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0D1408(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return IdentifierProtocol.description.getter(a1, WitnessTable);
}

uint64_t IdentifierProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 91;
  v9[1] = 0xE100000000000000;
  CustomStringConvertible.typeDescription.getter(a1, *(void *)(a2 + 8));
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_24E0C118C(&qword_26B1AE590);
  sub_24E117040();
  sub_24E116370();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_24E116370();
  return v9[0];
}

uint64_t sub_24E0D15E4(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  a1[4] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[5] = result;
  return result;
}

uint64_t sub_24E0D16A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0D16C0()
{
  return sub_24E0C118C((unint64_t *)&qword_26B1AFD60);
}

uint64_t dispatch thunk of IdentifierProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_24E0D170C()
{
  uint64_t result = sub_24E115E00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E0D1798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_24E0D1804(uint64_t a1)
{
  uint64_t v2 = sub_24E115E00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_24E0D1868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E0D18CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E0D1930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E0D1994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E0D19F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E0D1A0C);
}

uint64_t sub_24E0D1A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_24E0D1A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E0D1A8C);
}

uint64_t sub_24E0D1A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *sub_24E0D1AFC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0D1B98);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E0D1BC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0D1BDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0D1BF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0D1C14()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_2698BFAD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698BFAD0);
  return sub_24E115EF0();
}

uint64_t withOnceCheckedThrowingContinuation<A>(function:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0D1CC0, 0, 0);
}

uint64_t sub_24E0D1CC0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 48) = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24E0D1DB0;
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v10, 0, 0, v8, v9, sub_24E0D1FA4, v4, v7);
}

uint64_t sub_24E0D1DB0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0A0C54, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E0D1EEC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  type metadata accessor for OnceCheckedContinuation();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_24E0D34C8(a1, a2, a3);
  a4();
  return swift_release();
}

uint64_t sub_24E0D1FA4(uint64_t a1)
{
  return sub_24E0D1EEC(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t sub_24E0D1FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E116670();
  uint64_t v5 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t v6 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v4);
}

void sub_24E0D20B0()
{
  uint64_t v1 = v0;
  if (qword_2698B7930 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_2698BFAD0);
  swift_retain();
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E1169A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = *(void *)(v1 + 24);
    unint64_t v8 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    sub_24E090400(v7, v8, &v9);
    sub_24E116AB0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v3, v4, "Warning: Resume already called from %{public}s. Ignoring.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {

    swift_release();
  }
}

void sub_24E0D2284()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  v3[2] = *(void *)(*v0 + 80);
  v3[3] = *(void *)(v1 + 88);
  v3[4] = *(void *)(v1 + 96);
  sub_24E116670();
  sub_24E116A90();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0D34A8, (uint64_t)v3, v2);
}

uint64_t sub_24E0D2348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E116670();
  uint64_t v5 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
}

void OnceCheckedContinuation.resume(returning:)(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v15 - v4;
  uint64_t v6 = sub_24E116670();
  uint64_t v7 = sub_24E116A90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v15 - v13;
  sub_24E0D2284();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_24E0D20B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
    sub_24E116660();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
  }
}

void OnceCheckedContinuation.resume(throwing:)(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v15 - v4;
  uint64_t v6 = sub_24E116670();
  uint64_t v7 = sub_24E116A90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v15 - v13;
  sub_24E0D2284();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_24E0D20B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
    sub_24E116650();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
  }
}

void OnceCheckedContinuation.resume<A>(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E116670();
  uint64_t v5 = sub_24E116A90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v13 - v11;
  sub_24E0D2284();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    sub_24E0D20B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
    sub_24E0D2B34(a1, v4, a2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
  }
}

uint64_t sub_24E0D2B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[1] = a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24E117200();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v22 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v13, v16, a3);
    uint64_t v19 = swift_allocError();
    v18(v20, v13, a3);
    v22[3] = v19;
    return sub_24E116650();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v16, v5);
    return sub_24E116660();
  }
}

void OnceCheckedContinuation.resume(with:)(uint64_t a1)
{
  uint64_t v2 = sub_24E116670();
  uint64_t v3 = sub_24E116A90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v11 - v9;
  sub_24E0D2284();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_24E0D20B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v2);
    sub_24E0D2F94(a1, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v2);
  }
}

uint64_t sub_24E0D2F94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24E117200();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_24E116650();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_24E116660();
  }
}

void OnceCheckedContinuation.resume<>()()
{
  uint64_t v0 = sub_24E116670();
  uint64_t v1 = sub_24E116A90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v9 - v7;
  sub_24E0D2284();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v0) == 1)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    sub_24E0D20B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v5, v0);
    sub_24E116660();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v0);
  }
}

uint64_t OnceCheckedContinuation.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OnceCheckedContinuation.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24E0D3428()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for OnceCheckedContinuation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for OnceCheckedContinuation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OnceCheckedContinuation);
}

uint64_t sub_24E0D34A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E0D2348(a1, a2);
}

void *sub_24E0D34C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v7 = *(void *)(*v3 + 88);
  uint64_t v8 = *(void *)(*v3 + 96);
  uint64_t v9 = sub_24E116670();
  uint64_t v10 = sub_24E116A90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))((char *)&v17 - v12, 1, 1, v9);
  uint64_t v14 = sub_24E0C10C0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v3[2] = v14;
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  uint64_t v23 = a1;
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0D3694, (uint64_t)v19, v14);
  uint64_t v15 = v18;
  v3[3] = a2;
  v3[4] = v15;
  return v3;
}

uint64_t sub_24E0D3694(uint64_t a1)
{
  return sub_24E0D1FB4(a1, *(void *)(v1 + 40));
}

uint64_t static CaseIterable<>.allMembers.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  sub_24E116CA0();
  swift_getAssociatedConformanceWitness();
  return sub_24E1168F0();
}

uint64_t Error.domain.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_24E117060();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_24E115AE0();

  id v10 = objc_msgSend(v9, sel_domain);
  uint64_t v11 = sub_24E1161F0();

  return v11;
}

id Error.code.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_24E117060();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_24E115AE0();

  id v10 = objc_msgSend(v9, sel_code);
  return v10;
}

uint64_t sub_24E0D3A74(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0D3ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void (**)(uint64_t))(v1 + 152);
  if (v6)
  {
    uint64_t v7 = sub_24E0C5268((uint64_t)v6);
    v6(v7);
    sub_24E0C5278((uint64_t)v6);
    uint64_t v8 = sub_24E115D80();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    }
  }
  else
  {
    uint64_t v11 = sub_24E115D80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  }
  sub_24E115D70();
  return sub_24E0C53C0((uint64_t)v5);
}

uint64_t sub_24E0D3C6C()
{
  uint64_t v0 = sub_24E0D9E78();
  sub_24E0C5268(v0);
  return v0;
}

uint64_t sub_24E0D3CA0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 152);
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = a2;
  return sub_24E0C5278(v5);
}

uint64_t (*sub_24E0D3CF4())()
{
  return j__swift_endAccess;
}

uint64_t AsyncKeyedThrottle.__allocating_init(throttleInterval:)(double a1)
{
  uint64_t v2 = swift_allocObject();
  AsyncKeyedThrottle.init(throttleInterval:)(a1);
  return v2;
}

uint64_t AsyncKeyedThrottle.init(throttleInterval:)(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v17 - v9;
  swift_defaultActor_initialize();
  sub_24E115D80();
  swift_getTupleTypeMetadata2();
  sub_24E1165A0();
  *(void *)(v1 + 112) = sub_24E1160B0();
  sub_24E115DF0();
  uint64_t v11 = sub_24E115DB0();
  uint64_t v13 = v12;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  type metadata accessor for WorkItemQueue(0);
  swift_allocObject();
  uint64_t v14 = WorkItemQueue.init(name:identifier:)(v11, v13, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  *(void *)(v2 + 128) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE670);
  *(void *)(v2 + 136) = sub_24E116030();
  uint64_t v15 = sub_24E116030();
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 144) = v15;
  *(double *)(v2 + 120) = a1;
  return v2;
}

uint64_t sub_24E0D3FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = a3;
  uint64_t v30 = a2;
  uint64_t v6 = *v4;
  uint64_t v33 = sub_24E115E00();
  uint64_t v31 = *(void *)(v33 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v33);
  int64_t v29 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = *(void *)(v6 + 80);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v34 = v4[16];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v12;
  *((void *)v20 + 3) = *(void *)(v6 + 88);
  *((void *)v20 + 4) = v17;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v20[v18], v16, v12);
  uint64_t v21 = &v20[v19];
  uint64_t v22 = v32;
  *(void *)uint64_t v21 = v30;
  *((void *)v21 + 1) = v22;
  swift_retain();
  swift_retain();
  sub_24E115DF0();
  uint64_t v23 = v31;
  uint64_t v24 = (uint64_t)v29;
  uint64_t v25 = v33;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v29, v11, v33);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = &unk_2698B8578;
  *(void *)(v26 + 24) = v20;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v27 = sub_24E0EAD8C(0, v24, (uint64_t)&unk_2698B8588, v26, (uint64_t)&unk_2698B8580, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v25);
  swift_release();
  sub_24E09F3A8(v27);
  return swift_release();
}

uint64_t sub_24E0D42FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  uint64_t v8 = sub_24E115D80();
  v6[14] = v8;
  v6[15] = *(void *)(v8 - 8);
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  v6[18] = *(void *)(a5 - 8);
  v6[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0D4468, 0, 0);
}

uint64_t sub_24E0D4468()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[22] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    (*(void (**)(void, void, void))(v0[18] + 16))(v0[19], v0[9], v0[12]);
    return MEMORY[0x270FA2498](sub_24E0D4584, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_24E0D4584()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_beginAccess();
  *(void *)(v0 + 184) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E0D460C, 0, 0);
}

uint64_t sub_24E0D460C()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  MEMORY[0x253331D50](v3, v0[23], v7, v5, v0[13]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v7);
  sub_24E0C5358(v1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    sub_24E0C53C0(v0[20]);
    uint64_t v11 = (uint64_t (*)(void))(v0[10] + *(int *)v0[10]);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[24] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_24E0D4AB4;
    return v11();
  }
  else
  {
    uint64_t v10 = v0[22];
    (*(void (**)(void, void, void))(v0[15] + 32))(v0[17], v0[20], v0[14]);
    return MEMORY[0x270FA2498](sub_24E0D47E0, v10, 0);
  }
}

uint64_t sub_24E0D47E0()
{
  sub_24E0D3ABC(*(void *)(v0 + 128));
  return MEMORY[0x270FA2498](sub_24E0D484C, 0, 0);
}

uint64_t sub_24E0D484C()
{
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  sub_24E115CD0();
  double v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v3, v4);
  v8(v2, v4);
  if (*(double *)(v1 + 120) >= v7)
  {
    if (qword_26B1AF8D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24E115F00();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B1B13B0);
    uint64_t v12 = sub_24E115EE0();
    os_log_type_t v13 = sub_24E1169A0();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = v0[21];
    if (v14)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_24E083000, v12, v13, "AsyncKeyedThrottle: Not dispatching, event is throttled", v16, 2u);
      MEMORY[0x2533338B0](v16, -1, -1);
    }

    swift_release();
    sub_24E0C53C0(v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  else
  {
    unint64_t v18 = (uint64_t (*)(void))(v0[10] + *(int *)v0[10]);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[24] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_24E0D4AB4;
    return v18();
  }
}

uint64_t sub_24E0D4AB4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0D4BB4, 0, 0);
}

uint64_t sub_24E0D4BB4()
{
  if (*(unsigned char *)(v0 + 200) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 176);
    return MEMORY[0x270FA2498](sub_24E0D4CA4, v1, 0);
  }
  else
  {
    sub_24E0C53C0(*(void *)(v0 + 168));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_24E0D4CA4()
{
  sub_24E0D737C(*(void *)(v0 + 72));
  return MEMORY[0x270FA2498](sub_24E0D4D10, 0, 0);
}

uint64_t sub_24E0D4D10()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  sub_24E0C53C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E0D4DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = *v5;
  return MEMORY[0x270FA2498](sub_24E0D4E04, v5, 0);
}

uint64_t sub_24E0D4E04()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v9 = *(_OWORD *)(v0 + 32);
  type metadata accessor for AsyncKeyedThrottle();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(_OWORD *)(v4 + 40) = v9;
  *(void *)(v4 + 56) = v2;
  double v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *double v6 = v0;
  uint64_t v7 = MEMORY[0x263F8EE60];
  v6[1] = sub_24E0D4F4C;
  return MEMORY[0x270FA2360](v6, v1, WitnessTable, 0xD00000000000001ELL, 0x800000024E118E30, sub_24E0DA1A8, v4, v7 + 8);
}

uint64_t sub_24E0D4F4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = sub_24E0B8790;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 56);
    swift_task_dealloc();
    uint64_t v4 = sub_24E0A17E0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0D5074(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v45 = *a2;
  uint64_t v9 = v45;
  uint64_t v46 = a3;
  uint64_t v10 = sub_24E115E00();
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v50 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v42 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v43 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  char v44 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v9 + 80);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v55 = a2[16];
  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v46, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v24 = (v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (*(unsigned __int8 *)(v15 + 80) + v24 + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v26 = (v16 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = v45;
  *((void *)v27 + 2) = v18;
  uint64_t v29 = v42;
  *((void *)v27 + 3) = *(void *)(v28 + 88);
  *((void *)v27 + 4) = v29;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v27[v23], v22, v18);
  uint64_t v30 = &v27[v24];
  uint64_t v31 = v49;
  *(void *)uint64_t v30 = v48;
  *((void *)v30 + 1) = v31;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v27[v25], v44, v43);
  uint64_t v32 = (uint64_t *)&v27[v26];
  uint64_t v34 = v51;
  uint64_t v33 = v52;
  *uint64_t v32 = v51;
  v32[1] = v33;
  swift_retain();
  swift_retain();
  sub_24E0C5268(v34);
  uint64_t v35 = v47;
  sub_24E115DF0();
  uint64_t v37 = v53;
  uint64_t v36 = v54;
  uint64_t v38 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v35, v54);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = &unk_2698B8660;
  *(void *)(v39 + 24) = v27;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v40 = sub_24E0EAD8C(0, v38, (uint64_t)&unk_2698B8670, v39, (uint64_t)&unk_2698B8668, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  swift_release();
  sub_24E09F3A8(v40);
  return swift_release();
}

uint64_t sub_24E0D54AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[23] = a8;
  v8[24] = v17;
  v8[21] = a6;
  v8[22] = a7;
  v8[19] = a4;
  v8[20] = a5;
  v8[17] = a2;
  v8[18] = a3;
  v8[16] = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  v8[25] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[26] = v11;
  v8[27] = *(void *)(v11 + 64);
  v8[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  v8[29] = swift_task_alloc();
  uint64_t v12 = sub_24E115E00();
  v8[30] = v12;
  v8[31] = *(void *)(v12 - 8);
  v8[32] = swift_task_alloc();
  v8[33] = swift_task_alloc();
  uint64_t v13 = sub_24E115D80();
  v8[34] = v13;
  v8[35] = *(void *)(v13 - 8);
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  uint64_t v14 = *(void *)(a8 - 8);
  v8[38] = v14;
  v8[39] = *(void *)(v14 + 64);
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  v8[42] = swift_task_alloc();
  v8[43] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0D5744, 0, 0);
}

uint64_t sub_24E0D5744()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[44] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = v0[41];
    uint64_t v4 = v0[38];
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[17];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v0[45] = v7;
    v0[46] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v3, v6, v5);
    return MEMORY[0x270FA2498](sub_24E0D58C4, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_24E0D58C4()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_beginAccess();
  *(void *)(v0 + 376) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E0D594C, 0, 0);
}

uint64_t sub_24E0D594C()
{
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 184);
  MEMORY[0x253331D50](v3, *(void *)(v0 + 376), v7, v5, *(void *)(v0 + 192));
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 384) = v8;
  *(void *)(v0 + 392) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v3, v7);
  sub_24E0C5358(v1, v2);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5);
  uint64_t v10 = *(void *)(v0 + 352);
  if (v9 == 1)
  {
    sub_24E0C53C0(*(void *)(v0 + 336));
    uint64_t v11 = *(void *)(v10 + 120);
    *(unsigned char *)(v0 + 441) = 1;
    *(void *)(v0 + 400) = v11;
    uint64_t v10 = *(void *)(v0 + 352);
    (*(void (**)(void, void, void))(v0 + 360))(*(void *)(v0 + 320), *(void *)(v0 + 136), *(void *)(v0 + 184));
    uint64_t v12 = sub_24E0D5C34;
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 296), *(void *)(v0 + 336), *(void *)(v0 + 272));
    uint64_t v12 = sub_24E0D5AB0;
  }
  return MEMORY[0x270FA2498](v12, v10, 0);
}

uint64_t sub_24E0D5AB0()
{
  sub_24E0D3ABC(*(void *)(v0 + 288));
  return MEMORY[0x270FA2498](sub_24E0D5B1C, 0, 0);
}

uint64_t sub_24E0D5B1C()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 280);
  sub_24E115CD0();
  double v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v3, v4);
  LOBYTE(v1) = *(double *)(v1 + 120) < v7;
  sub_24E115CE0();
  sub_24E115D20();
  uint64_t v10 = v9;
  v8(v3, v4);
  v8(v2, v4);
  *(unsigned char *)(v0 + 441) = v1;
  *(void *)(v0 + 400) = v10;
  uint64_t v11 = *(void *)(v0 + 352);
  (*(void (**)(void, void, void))(v0 + 360))(*(void *)(v0 + 320), *(void *)(v0 + 136), *(void *)(v0 + 184));
  return MEMORY[0x270FA2498](sub_24E0D5C34, v11, 0);
}

uint64_t sub_24E0D5C34()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_beginAccess();
  *(void *)(v0 + 408) = *(void *)(v1 + 144);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E0D5CBC, 0, 0);
}

uint64_t sub_24E0D5CBC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 184);
  MEMORY[0x253331D50](v2, *(void *)(v0 + 408), v3, MEMORY[0x263F8D4F8], *(void *)(v0 + 192));
  swift_bridgeObjectRelease();
  v1(v2, v3);
  int v4 = *(unsigned __int8 *)(v0 + 440);
  char v5 = *(unsigned char *)(v0 + 441);
  if (v4 == 2)
  {
    if (!*(unsigned char *)(v0 + 441))
    {
LABEL_3:
      uint64_t v6 = *(void *)(v0 + 352);
      (*(void (**)(void, void, void))(v0 + 360))(*(void *)(v0 + 328), *(void *)(v0 + 136), *(void *)(v0 + 184));
      double v7 = sub_24E0D62A8;
      uint64_t v8 = v6;
      goto LABEL_8;
    }
  }
  else
  {
    if (v4) {
      char v5 = 0;
    }
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = *(void *)(v0 + 352);
  double v7 = sub_24E0D5DBC;
LABEL_8:
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_24E0D5DBC()
{
  uint64_t v1 = (int *)v0[18];
  sub_24E0D78E0(v0[17]);
  int v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E0D5E98;
  return v4();
}

uint64_t sub_24E0D5E98(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 424) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E0D67D8;
  }
  else
  {
    *(unsigned char *)(v4 + 442) = a1 & 1;
    uint64_t v5 = sub_24E0D5FC4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E0D5FC4()
{
  char v13 = *(unsigned char *)(v0 + 442);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, void))(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v14 = *(void *)(v0 + 264);
  uint64_t v15 = *(void *)(v0 + 256);
  uint64_t v16 = *(void *)(v0 + 240);
  uint64_t v17 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = swift_allocObject();
  long long v18 = *(_OWORD *)(v0 + 184);
  swift_weakInit();
  v1(v2, v5, v18);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v18;
  *(void *)(v8 + 32) = v6;
  *(unsigned char *)(v8 + 40) = v13;
  (*(void (**)(unint64_t, uint64_t, void))(v3 + 32))(v8 + v7, v2, v18);
  swift_retain();
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v15, v14, v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_2698B86B0;
  *(void *)(v9 + 24) = v8;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v10 = sub_24E0EAD8C(0, v15, (uint64_t)&unk_2698B86C0, v9, (uint64_t)&unk_2698B86B8, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v16);
  swift_release();
  sub_24E09F3A8(v10);
  swift_release();
  swift_release();
  sub_24E116660();
  swift_release();
  sub_24E0C53C0(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24E0D62A8()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_beginAccess();
  *(void *)(v0 + 432) = *(void *)(v1 + 136);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E0D6330, 0, 0);
}

uint64_t sub_24E0D6330()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[48];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE670);
  MEMORY[0x253331D50](v3, v1, v5, v6, v4);
  swift_bridgeObjectRelease();
  v2(v3, v5);
  uint64_t v7 = v0[14];
  swift_release();
  if (v7)
  {
    if (qword_26B1AF8D8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24E115F00();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B1B13B0);
    uint64_t v9 = sub_24E115EE0();
    os_log_type_t v10 = sub_24E1169A0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24E083000, v9, v10, "AsyncKeyedThrottle: Not dispatching, event is throttled", v11, 2u);
      MEMORY[0x2533338B0](v11, -1, -1);
    }
    uint64_t v25 = v0[43];
    uint64_t v13 = v0[28];
    uint64_t v12 = v0[29];
    uint64_t v14 = v0[26];
    uint64_t v15 = v0[25];
    uint64_t v17 = v0[21];
    uint64_t v16 = v0[22];
    uint64_t v18 = v0[20];

    uint64_t v19 = sub_24E1166C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v18, v15);
    unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v21 = (char *)swift_allocObject();
    *((void *)v21 + 2) = 0;
    *((void *)v21 + 3) = 0;
    *((void *)v21 + 4) = v17;
    *((void *)v21 + 5) = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v21[v20], v13, v15);
    sub_24E0C5268(v17);
    sub_24E09A98C(v12, (uint64_t)&unk_2698B8680, (uint64_t)v21);
    swift_release();
    swift_release();
    sub_24E0C53C0(v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  else
  {
    uint64_t v24 = v0[44];
    return MEMORY[0x270FA2498](sub_24E0D6678, v24, 0);
  }
}

uint64_t sub_24E0D6678()
{
  sub_24E0D7A24(*(void *)(v0 + 136), *(void *)(v0 + 160), *(void *)(v0 + 144), *(void *)(v0 + 152), *(double *)(v0 + 400));
  return MEMORY[0x270FA2498](sub_24E0D66EC, 0, 0);
}

uint64_t sub_24E0D66EC()
{
  uint64_t v1 = *(void *)(v0 + 344);
  swift_release();
  sub_24E0C53C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E0D67D8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, void))(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 424);
  uint64_t v17 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v13 = *(void *)(v0 + 264);
  uint64_t v14 = *(void *)(v0 + 256);
  uint64_t v15 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = swift_allocObject();
  long long v18 = *(_OWORD *)(v0 + 184);
  swift_weakInit();
  v1(v2, v5, v18);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v18;
  *(void *)(v8 + 32) = v6;
  (*(void (**)(unint64_t, uint64_t, void))(v3 + 32))(v8 + v7, v2, v18);
  swift_retain();
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v14, v13, v15);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_2698B8690;
  *(void *)(v9 + 24) = v8;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v10 = sub_24E0EAD8C(0, v14, (uint64_t)&unk_2698B86A0, v9, (uint64_t)&unk_2698B8698, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v13, v15);
  swift_release();
  sub_24E09F3A8(v10);
  swift_release();
  swift_release();
  *(void *)(v0 + 120) = v16;
  sub_24E116650();
  swift_release();
  sub_24E0C53C0(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24E0D6ABC(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a3;
  return MEMORY[0x270FA2498](sub_24E0D6AE0, 0, 0);
}

uint64_t sub_24E0D6AE0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    if (*(unsigned char *)(v0 + 64) == 1) {
      uint64_t v2 = sub_24E0D6BBC;
    }
    else {
      uint64_t v2 = sub_24E0D6C24;
    }
    return MEMORY[0x270FA2498](v2, Strong, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_24E0D6BBC()
{
  sub_24E0D737C(*(void *)(v0 + 48));
  uint64_t v1 = *(void *)(v0 + 56);
  return MEMORY[0x270FA2498](sub_24E0D6C24, v1, 0);
}

uint64_t sub_24E0D6C24()
{
  sub_24E0D78E8(*(void *)(v0 + 48));
  return MEMORY[0x270FA2498](sub_24E0DBB80, 0, 0);
}

uint64_t sub_24E0D6C8C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x270FA2498](sub_24E0D6CAC, 0, 0);
}

uint64_t sub_24E0D6CAC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_24E0D6D6C, Strong, 0);
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_24E0D6D6C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_24E0D737C(v1);
  sub_24E0D78E8(v1);
  return MEMORY[0x270FA2498](sub_24E0DBB80, 0, 0);
}

uint64_t sub_24E0D6DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return MEMORY[0x270FA2498](sub_24E0D6E04, 0, 0);
}

uint64_t sub_24E0D6E04()
{
  uint64_t v1 = *(void (**)(void))(v0 + 24);
  if (v1) {
    v1();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  sub_24E116660();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E0D6EC0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  uint64_t v3 = sub_24E115E00();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0D6FB8, v1, 0);
}

uint64_t sub_24E0D6FB8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = *(void *)(v5 + 80);
  void v8[3] = *(void *)(v5 + 88);
  void v8[4] = v7;
  void v8[5] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_2698B85A8;
  *(void *)(v9 + 24) = v8;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v10 = sub_24E0EAD8C(0, v1, (uint64_t)&unk_2698B85B8, v9, (uint64_t)&unk_2698B85B0, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  sub_24E09F3A8(v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24E0D719C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x270FA2498](sub_24E0D71BC, 0, 0);
}

uint64_t sub_24E0D71BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_24E0D727C, Strong, 0);
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_24E0D727C()
{
  sub_24E0D7544(*(void *)(v0 + 48));
  return MEMORY[0x270FA2498](sub_24E0D72E4, 0, 0);
}

uint64_t sub_24E0D72E4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0D7348()
{
  return sub_24E0DB2F0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24E0D737C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v3 + 80);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v9, a1, v8);
  sub_24E0D3ABC((uint64_t)v7);
  uint64_t v11 = sub_24E115D80();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  swift_beginAccess();
  sub_24E1160F0();
  sub_24E116110();
  return swift_endAccess();
}

uint64_t sub_24E0D7544(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v3 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)&v24 - v11;
  uint64_t v12 = sub_24E115D80();
  swift_getTupleTypeMetadata2();
  sub_24E1165A0();
  uint64_t v29 = *(void *)(v3 + 88);
  uint64_t v30 = v12;
  uint64_t v13 = sub_24E1160B0();
  uint64_t v35 = v13;
  uint64_t v14 = swift_bridgeObjectRetain();
  if (MEMORY[0x253332250](v14, v7))
  {
    uint64_t v25 = v9;
    uint64_t v26 = v1;
    uint64_t v15 = 0;
    uint64_t v32 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
    uint64_t v27 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v28 = v1 + 14;
    uint64_t v16 = v34;
    uint64_t v17 = v30;
    while (1)
    {
      char v18 = sub_24E1165C0();
      sub_24E116590();
      if (v18)
      {
        uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
        v19(v34, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v15), v7);
        uint64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_24E116CC0();
        if (v25 != 8)
        {
          __break(1u);
          return result;
        }
        v36[0] = result;
        uint64_t v19 = *v32;
        (*v32)(v34, v36, v7);
        swift_unknownObjectRelease();
        uint64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v13 = v35;
          uint64_t v1 = v26;
          goto LABEL_13;
        }
      }
      v19(v33, (uint64_t *)v16, v7);
      uint64_t v21 = v28;
      swift_beginAccess();
      uint64_t v22 = *v21;
      swift_bridgeObjectRetain();
      MEMORY[0x253331D50](v16, v22, v7, v17, v29);
      swift_bridgeObjectRelease();
      (*v27)(v16, v7);
      sub_24E1160F0();
      sub_24E116110();
      ++v15;
      if (v20 == MEMORY[0x253332250](a1, v7)) {
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  swift_beginAccess();
  v1[14] = v13;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0D78E0(uint64_t a1)
{
  return sub_24E0D78F0(a1, 1);
}

uint64_t sub_24E0D78E8(uint64_t a1)
{
  return sub_24E0D78F0(a1, 0);
}

uint64_t sub_24E0D78F0(uint64_t a1, char a2)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(unsigned char *))(v4 + 16))(&v6[-v3]);
  v6[31] = a2;
  swift_beginAccess();
  sub_24E1160F0();
  sub_24E116110();
  return swift_endAccess();
}

uint64_t sub_24E0D7A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v34 = a2;
  uint64_t v32 = *v5;
  uint64_t v8 = v32;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v9 = *(void *)(v40 - 8);
  uint64_t v35 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v14;
  uint64_t v15 = *(void *)(v8 + 80);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v12);
  uint64_t v31 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v36 = (char *)&v31 - v19;
  uint64_t v20 = *(void (**)(void))(v16 + 16);
  v20();
  uint64_t v21 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 1, 1, v21);
  ((void (*)(char *, uint64_t, uint64_t))v20)((char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v39, v34, v40);
  uint64_t v22 = *(void *)(v32 + 88);
  type metadata accessor for AsyncKeyedThrottle();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v24 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v25 = (v17 + *(unsigned __int8 *)(v9 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v26 = (v35 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v5;
  *(void *)(v27 + 24) = WitnessTable;
  *(void *)(v27 + 32) = v15;
  *(void *)(v27 + 40) = v22;
  *(double *)(v27 + 48) = a5;
  *(void *)(v27 + 56) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v27 + v24, v31, v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v27 + v25, v39, v40);
  uint64_t v28 = (void *)(v27 + v26);
  uint64_t v29 = v38;
  *uint64_t v28 = v37;
  v28[1] = v29;
  swift_retain_n();
  swift_retain();
  uint64_t v41 = sub_24E1011FC((uint64_t)v33, (uint64_t)&unk_2698B85D8, v27);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1AE670);
  sub_24E1160F0();
  sub_24E116110();
  return swift_endAccess();
}

uint64_t sub_24E0D7DF4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 48) = a8;
  *(void *)(v9 + 56) = a9;
  *(void *)(v9 + 32) = a6;
  *(void *)(v9 + 40) = a7;
  *(void *)(v9 + 24) = a5;
  *(double *)(v9 + 16) = a1;
  uint64_t v11 = *a5;
  *(void *)(v9 + 64) = *a5;
  uint64_t v12 = sub_24E115E00();
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = *(void *)(v12 - 8);
  *(void *)(v9 + 88) = swift_task_alloc();
  *(void *)(v9 + 96) = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  *(void *)(v9 + 104) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)(v9 + 112) = v14;
  *(void *)(v9 + 120) = *(void *)(v14 + 64);
  *(void *)(v9 + 128) = swift_task_alloc();
  uint64_t v15 = *(void *)(v11 + 80);
  *(void *)(v9 + 136) = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)(v9 + 144) = v16;
  *(void *)(v9 + 152) = *(void *)(v16 + 64);
  *(void *)(v9 + 160) = swift_task_alloc();
  uint64_t v17 = sub_24E116D90();
  *(void *)(v9 + 168) = v17;
  *(void *)(v9 + 176) = *(void *)(v17 - 8);
  *(void *)(v9 + 184) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0D803C, a5, 0);
}

uint64_t sub_24E0D803C()
{
  uint64_t v1 = sub_24E117320();
  uint64_t v3 = v2;
  sub_24E116D80();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2698B85E0 + dword_2698B85E0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24E0D8118;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24E0D8118()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 184);
  uint64_t v4 = *(void *)(*v1 + 176);
  uint64_t v5 = *(void *)(*v1 + 168);
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v7 = sub_24E0D85B4;
  }
  else {
    uint64_t v7 = sub_24E0D82A0;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_24E0D82A0()
{
  uint64_t v1 = v0[20];
  uint64_t v19 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v24 = v0[12];
  uint64_t v25 = v0[10];
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[9];
  uint64_t v20 = v0[15];
  uint64_t v21 = v0[8];
  uint64_t v22 = v0[6];
  uint64_t v23 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v16 = v0[5];
  uint64_t v17 = v6;
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v16, v6);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v9 = (v19 + *(unsigned __int8 *)(v5 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v3;
  *((void *)v10 + 3) = *(void *)(v21 + 88);
  *((void *)v10 + 4) = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v10[v8], v1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v10[v9], v4, v17);
  uint64_t v11 = &v10[(v20 + v9 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v11 = v22;
  *((void *)v11 + 1) = v23;
  swift_retain();
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v24, v27);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_2698B85F0;
  *(void *)(v12 + 24) = v10;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v13 = sub_24E0EAD8C(0, v26, (uint64_t)&unk_2698B8600, v12, (uint64_t)&unk_2698B85F8, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v27);
  swift_release();
  sub_24E09F3A8(v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24E0D85B4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0D864C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  unsigned char v7[8] = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  v7[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[16] = v10;
  v7[17] = *(void *)(v10 + 64);
  v7[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  v7[19] = swift_task_alloc();
  uint64_t v11 = *(void *)(a6 - 8);
  v7[20] = v11;
  v7[21] = *(void *)(v11 + 64);
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0D87C0, 0, 0);
}

uint64_t sub_24E0D87C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[24] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = v0[23];
    uint64_t v4 = v0[20];
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[9];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v0[25] = v7;
    v0[26] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v3, v6, v5);
    return MEMORY[0x270FA2498](sub_24E0D88E0, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_24E0D88E0()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_beginAccess();
  *(void *)(v0 + 216) = *(void *)(v1 + 144);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E0D8968, 0, 0);
}

uint64_t sub_24E0D8968()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 104);
  MEMORY[0x253331D50](v1, *(void *)(v0 + 216), v3, MEMORY[0x263F8D4F8], *(void *)(v0 + 112));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v4 = *(unsigned __int8 *)(v0 + 232);
  if (v4 != 2 && (v4 & 1) != 0)
  {
    uint64_t v5 = *(void *)(v0 + 192);
    *(void *)(v0 + 224) = *(void *)(v5 + 120);
    uint64_t v6 = sub_24E0D8CF8;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v6 = sub_24E0D8A48;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_24E0D8A48()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_24E0D78E0(v1);
  sub_24E0D97D8(v1);
  return MEMORY[0x270FA2498](sub_24E0D8AC0, 0, 0);
}

uint64_t sub_24E0D8AC0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, void))(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v16 = v2;
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v20 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 88);
  uint64_t v19 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v10 = sub_24E1166C0();
  long long v21 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v1(v2, v9, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v12 = (v17 + *(unsigned __int8 *)(v6 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(_OWORD *)(v13 + 32) = v21;
  *(void *)(v13 + 48) = v18;
  *(void *)(v13 + 56) = v19;
  *(void *)(v13 + 64) = v20;
  (*(void (**)(unint64_t, uint64_t, void))(v3 + 32))(v13 + v11, v16, v21);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v13 + v12, v5, v7);
  swift_retain();
  swift_retain();
  sub_24E09A98C(v4, (uint64_t)&unk_2698B8610, v13);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_24E0D8CF8()
{
  sub_24E0D7A24(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(double *)(v0 + 224));
  return MEMORY[0x270FA2498](sub_24E0D8D6C, 0, 0);
}

uint64_t sub_24E0D8D6C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0D8DFC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  void v8[4] = a7;
  void v8[5] = a8;
  void v8[3] = a6;
  uint64_t v10 = *a6;
  v8[6] = *a6;
  uint64_t v11 = sub_24E115E00();
  v8[7] = v11;
  v8[8] = *(void *)(v11 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  uint64_t v12 = *(void *)(v10 + 80);
  v8[11] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[12] = v13;
  v8[13] = *(void *)(v13 + 64);
  v8[14] = swift_task_alloc();
  uint64_t v16 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v14 = (void *)swift_task_alloc();
  v8[15] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_24E0D8FF0;
  return v16();
}

uint64_t sub_24E0D8FF0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E0D9390;
  }
  else
  {
    *(unsigned char *)(v4 + 136) = a1 & 1;
    uint64_t v5 = sub_24E0D911C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E0D911C()
{
  char v14 = *(unsigned char *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 56);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = *(void *)(v5 + 88);
  *(void *)(v9 + 32) = v7;
  *(unsigned char *)(v9 + 40) = v14;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v9 + v8, v1, v3);
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v16, v15, v17);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &unk_2698B8640;
  *(void *)(v10 + 24) = v9;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v11 = sub_24E0EAD8C(0, v16, (uint64_t)&unk_2698B8650, v10, (uint64_t)&unk_2698B8648, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v15, v17);
  swift_release();
  sub_24E09F3A8(v11);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  sub_24E116660();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_24E0D9390()
{
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[4];
  uint64_t v17 = v0[16];
  uint64_t v16 = v0[7];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = (char *)swift_allocObject();
  *((void *)v9 + 2) = v3;
  *((void *)v9 + 3) = *(void *)(v5 + 88);
  *((void *)v9 + 4) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v9[v8], v1, v3);
  swift_retain();
  sub_24E115DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v15, v14, v16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &unk_2698B8620;
  *(void *)(v10 + 24) = v9;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v11 = sub_24E0EAD8C(0, v15, (uint64_t)&unk_2698B8630, v10, (uint64_t)&unk_2698B8628, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v16);
  swift_release();
  sub_24E09F3A8(v11);
  swift_release();
  v0[2] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  sub_24E116650();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24E0D9608(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a3;
  return MEMORY[0x270FA2498](sub_24E0D962C, 0, 0);
}

uint64_t sub_24E0D962C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    if (*(unsigned char *)(v0 + 64) == 1) {
      uint64_t v2 = sub_24E0D9708;
    }
    else {
      uint64_t v2 = sub_24E0D9770;
    }
    return MEMORY[0x270FA2498](v2, Strong, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_24E0D9708()
{
  sub_24E0D737C(*(void *)(v0 + 48));
  uint64_t v1 = *(void *)(v0 + 56);
  return MEMORY[0x270FA2498](sub_24E0D9770, v1, 0);
}

uint64_t sub_24E0D9770()
{
  sub_24E0D78E8(*(void *)(v0 + 48));
  return MEMORY[0x270FA2498](sub_24E0D72E4, 0, 0);
}

uint64_t sub_24E0D97D8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(unsigned char *))(v2 + 16))(&v4[-v1]);
  uint64_t v5 = 0;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1AE670);
  sub_24E1160F0();
  sub_24E116110();
  return swift_endAccess();
}

uint64_t AsyncKeyedThrottle.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E0C5278(*(void *)(v0 + 152));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AsyncKeyedThrottle.__deallocating_deinit()
{
  AsyncKeyedThrottle.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t AsyncKeyedThrottle.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0D9990()
{
  return AsyncKeyedThrottle.unownedExecutor.getter();
}

uint64_t sub_24E0D99AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_24E116D70();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_24E0D9AB0, 0, 0);
}

uint64_t sub_24E0D9AB0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_24E116D90();
  uint64_t v5 = sub_24E0DB2A8((unint64_t *)&unk_26B1AE680, MEMORY[0x263F8F710]);
  sub_24E117160();
  sub_24E0DB2A8(&qword_26B1AE678, MEMORY[0x263F8F6D8]);
  sub_24E116DA0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E0D9C50;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_24E0D9C50()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0D9E0C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_24E0D9E0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0D9E78()
{
  swift_beginAccess();
  return *(void *)(v0 + 152);
}

uint64_t sub_24E0D9EAC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E0D9EE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24E0D9FC8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + v4;
  uint64_t v7 = (void *)((char *)v0 + ((*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_24E095558;
  return sub_24E0D42FC(v5, v6, v8, v9, v2, v3);
}

uint64_t sub_24E0DA0E8(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095558;
  return sub_24E0E73C8(a1, v4);
}

uint64_t type metadata accessor for AsyncKeyedThrottle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0DA1A8(uint64_t a1)
{
  return sub_24E0D5074(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24E0DA1B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24E0DA1F8()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24E095558;
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_24E0D71BC, 0, 0);
}

uint64_t sub_24E0DA2A4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E0DA2DC(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095114;
  return sub_24E0E73C8(a1, v4);
}

uint64_t sub_24E0DA384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24E0D9E78();
  if (v2) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  *a1 = v2;
  a1[1] = v4;
  return sub_24E0C5268(v2);
}

uint64_t sub_24E0DA3C8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (*a1) {
    uint64_t v2 = a1[1];
  }
  else {
    uint64_t v2 = 0;
  }
  sub_24E0C5268(*a1);
  return sub_24E0D3CA0(v1, v2);
}

uint64_t sub_24E0DA414()
{
  return 16;
}

__n128 sub_24E0DA420(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24E0DA42C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AsyncKeyedThrottle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AsyncKeyedThrottle);
}

uint64_t dispatch thunk of AsyncKeyedThrottle.now.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of AsyncKeyedThrottle.dateProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of AsyncKeyedThrottle.dateProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of AsyncKeyedThrottle.dateProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of AsyncKeyedThrottle.__allocating_init(throttleInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of AsyncKeyedThrottle.throttle(key:block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 272)
                                                                            + **(int **)(*(void *)v5 + 272));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_24E095558;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AsyncKeyedThrottle.clearThrottleForKeysExcept(keys:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 280) + **(int **)(*(void *)v1 + 280));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E095114;
  return v6(a1);
}

uint64_t sub_24E0DA7D8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x270FA0238](v0, v11, v10);
}

uint64_t sub_24E0DA94C(uint64_t a1)
{
  uint64_t v3 = v2;
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(*((void *)v1 + 4) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*((void *)v1 + 4) - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(*((void *)v1 + 4) - 8) + 64);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  double v11 = v1[6];
  uint64_t v12 = (uint64_t *)*((void *)v1 + 7);
  uint64_t v13 = (uint64_t)v1 + v5;
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = (uint64_t *)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  *uint64_t v18 = v3;
  v18[1] = sub_24E095558;
  return sub_24E0D7DF4(v11, a1, v9, v10, v12, v13, v14, v16, v17);
}

uint64_t sub_24E0DAAFC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x270FA0238](v0, v11, v10);
}

uint64_t sub_24E0DAC68()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0[4];
  uint64_t v9 = (uint64_t)v0 + v4;
  uint64_t v10 = (uint64_t)v0 + v7;
  unint64_t v11 = (void *)((char *)v0 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[1] = sub_24E095558;
  return sub_24E0D864C(v8, v9, v10, v12, v13, v3, v2);
}

uint64_t sub_24E0DADF4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_24E0DAF58(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v1[4] - 8) + 64);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8) + 80);
  unint64_t v7 = v4 + v5 + v6;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = (int *)v1[6];
  uint64_t v11 = v1[7];
  uint64_t v12 = (uint64_t *)v1[8];
  uint64_t v13 = (uint64_t)v1 + v4;
  uint64_t v14 = (uint64_t)v1 + (v7 & ~v6);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_24E095558;
  return sub_24E0D8DFC(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_24E0DB0CC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_24E095558;
  v4[5] = v2;
  v4[6] = v3;
  return MEMORY[0x270FA2498](sub_24E0D6CAC, 0, 0);
}

uint64_t sub_24E0DB1B4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_24E095558;
  *(unsigned char *)(v5 + 64) = v3;
  *(void *)(v5 + 40) = v2;
  *(void *)(v5 + 48) = v4;
  return MEMORY[0x270FA2498](sub_24E0D962C, 0, 0);
}

uint64_t sub_24E0DB2A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0DB2F0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24E0DB2F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v11 + 40) & ~v11;
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 16) & ~v7;
  unint64_t v9 = (*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  if (*(void *)(v0 + v9)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v9 + 16, v11 | v7 | 7);
}

uint64_t sub_24E0DB48C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(v2 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void *)(v0 + v4);
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = v0 + v6;
  uint64_t v13 = (uint64_t *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v16;
  void *v16 = v1;
  v16[1] = sub_24E095558;
  return sub_24E0D54AC(v7, v8, v10, v11, v12, v14, v15, v2);
}

uint64_t sub_24E0DB640()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  uint64_t v5 = v3 | 7;
  uint64_t v6 = (v3 + 48) & ~v3;
  uint64_t v7 = v6 + v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  return MEMORY[0x270FA0238](v0, v7, v5);
}

uint64_t sub_24E0DB720()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_24E095558;
  v6[4] = v4;
  v6[5] = v5;
  v6[3] = v3;
  return MEMORY[0x270FA2498](sub_24E0D6E04, 0, 0);
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E0DB8E0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24E095558;
  v4[5] = v2;
  v4[6] = v3;
  return MEMORY[0x270FA2498](sub_24E0D6CAC, 0, 0);
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 41) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E0DBA8C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_24E095558;
  *(unsigned char *)(v5 + 64) = v3;
  *(void *)(v5 + 40) = v2;
  *(void *)(v5 + 48) = v4;
  return MEMORY[0x270FA2498](sub_24E0D6AE0, 0, 0);
}

uint64_t retry<A>(times:retryDelay:shouldRetry:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 72) = v13;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 56) = a7;
  *(unsigned char *)(v8 + 200) = a5;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = sub_24E116E00();
  *(void *)(v8 + 80) = v9;
  *(void *)(v8 + 88) = *(void *)(v9 - 8);
  *(void *)(v8 + 96) = swift_task_alloc();
  *(void *)(v8 + 104) = swift_task_alloc();
  uint64_t v10 = sub_24E116E20();
  *(void *)(v8 + 112) = v10;
  *(void *)(v8 + 120) = *(void *)(v10 - 8);
  *(void *)(v8 + 128) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0DBCE8, 0, 0);
}

uint64_t sub_24E0DBCE8()
{
  sub_24E116790();
  uint64_t v1 = (int *)v0[8];
  uint64_t v2 = v0[3];
  if (v2 <= 1) {
    uint64_t v2 = 1;
  }
  v0[17] = v2;
  v0[18] = 0;

  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  char v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  void *v3 = v0;
  v3[1] = sub_24E0DBE48;
  uint64_t v4 = v0[2];
  return v6(v4);
}

uint64_t sub_24E0DBE48()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0DBF9C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E0DBF9C()
{
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = *(uint64_t (**)(void *))(v0 + 48);
  id v3 = v1;
  id v4 = v1;
  if (v2(v1))
  {
    if ((*(unsigned char *)(v0 + 200) & 1) == 0)
    {
      uint64_t v5 = *(void *)(v0 + 96);
      uint64_t v6 = *(void *)(v0 + 80);
      uint64_t v7 = *(void *)(v0 + 88);
      sub_24E116E10();
      sub_24E116DC0();
      sub_24E116DE0();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      *(void *)(v0 + 168) = v8;
      *(void *)(v0 + 176) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v8(v5, v6);
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_24E0DC26C;
      uint64_t v10 = *(void *)(v0 + 104);
      return MEMORY[0x270FA21C8](v10, 0, 0, 1);
    }

    uint64_t v11 = *(void **)(v0 + 160);
    if (*(void *)(v0 + 144) != *(void *)(v0 + 136) - 1)
    {

      sub_24E116790();
      uint64_t v13 = *(void **)(v0 + 160);
      ++*(void *)(v0 + 144);
      uint64_t v14 = *(int **)(v0 + 64);

      uint64_t v18 = (uint64_t (*)(uint64_t))((char *)v14 + *v14);
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_24E0DBE48;
      uint64_t v16 = *(void *)(v0 + 16);
      return v18(v16);
    }
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 160);
  }
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_24E0DC26C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {

    id v3 = sub_24E0DC56C;
  }
  else
  {
    id v3 = sub_24E0DC388;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24E0DC388()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 80);

  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (*(void *)(v0 + 144) == *(void *)(v0 + 136) - 1)
  {
    uint64_t v7 = *(void **)(v0 + 160);
    swift_willThrow();

LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  uint64_t v8 = *(void *)(v0 + 192);

  sub_24E116790();
  if (v8)
  {

    goto LABEL_5;
  }
  uint64_t v11 = *(void **)(v0 + 160);
  ++*(void *)(v0 + 144);
  uint64_t v12 = *(int **)(v0 + 64);

  uint64_t v15 = (uint64_t (*)(uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_24E0DBE48;
  uint64_t v14 = *(void *)(v0 + 16);
  return v15(v14);
}

uint64_t sub_24E0DC56C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[21];
  uint64_t v2 = (void *)v0[20];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v7 = v0[10];

  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t Date.iso8601.getter()
{
  return sub_24E0DC68C(&qword_2698B7938, (void **)&qword_2698B86D0);
}

uint64_t Date.localISO8601.getter()
{
  return sub_24E0DC68C(&qword_26B1AE600, (void **)&qword_26B1AE608);
}

uint64_t sub_24E0DC68C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)sub_24E115CF0();
  id v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  uint64_t v6 = sub_24E1161F0();
  return v6;
}

id sub_24E0DC718()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  id result = objc_msgSend(v0, sel_setFormatOptions_, 3955);
  qword_2698B86D0 = (uint64_t)v0;
  return result;
}

void sub_24E0DC768()
{
  uint64_t v0 = sub_24E115E80();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  objc_msgSend(v4, sel_setFormatOptions_, 3955);
  sub_24E115E70();
  id v5 = (void *)sub_24E115E60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setTimeZone_, v5);

  qword_26B1AE608 = (uint64_t)v4;
}

uint64_t Date.epoch.getter()
{
  uint64_t result = sub_24E115D30();
  double v2 = v1 * 1000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 9.22337204e18) {
    return (uint64_t)v2;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24E0DC8F0()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  mach_timebase_info info = 0;
  uint64_t result = mach_timebase_info(&info);
  if (result)
  {
    uint64_t result = sub_24E116EC0();
    __break(1u);
  }
  else
  {
    qword_26B1AE568 = (uint64_t)info;
  }
  return result;
}

Swift::UInt64 __swiftcall convertToNanoseconds(_:)(Swift::UInt64 result)
{
  Swift::UInt64 v1 = result;
  if (qword_26B1AE578 != -1) {
    uint64_t result = swift_once();
  }
  if (is_mul_ok(v1, qword_26B1AE568))
  {
    if (HIDWORD(qword_26B1AE568)) {
      return v1 * qword_26B1AE568 / HIDWORD(qword_26B1AE568);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24E0DCA24()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B86F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E11BE80;
  Swift::UInt64 v1 = (void *)*MEMORY[0x263F08078];
  *(void *)(inited + 64) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = 508;
  id v2 = v1;
  unint64_t result = sub_24E090FC8(inited);
  qword_2698B86D8 = result;
  return result;
}

uint64_t static NSFileManager.daemonAgentDirectoryAttributes.getter()
{
  if (qword_2698B7940 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t static NSFileManager.createDirectoryIfNecessary(url:attributes:)(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = objc_msgSend(self, sel_defaultManager);
  char v14 = 0;
  sub_24E115B50();
  id v5 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  unsigned int v6 = objc_msgSend(v4, sel_fileExistsAtPath_isDirectory_, v5, &v14);

  if (v6)
  {
    if ((v14 & 1) == 0)
    {
      sub_24E116980();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE5F0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_24E11BE80;
      uint64_t v8 = sub_24E115B00();
      uint64_t v10 = v9;
      *(void *)(v7 + 56) = MEMORY[0x263F8D310];
      *(void *)(v7 + 64) = sub_24E0DCEDC();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v10;
      sub_24E0DD13C(0, &qword_2698B86E8);
      uint64_t v11 = (void *)sub_24E116A80();
      sub_24E115ED0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x2533330F0]();
    sub_24E0DCCAC(v4, a1, a2);
  }

  return v6 ^ 1;
}

void sub_24E0DCCAC(void *a1, uint64_t a2, void *a3)
{
  v16[1] = *(id *)MEMORY[0x263EF8340];
  id v5 = (void *)sub_24E115B30();
  if (a3)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_24E0DEB28(&qword_2698B7BA0, type metadata accessor for FileAttributeKey);
    a3 = (void *)sub_24E116080();
  }
  v16[0] = 0;
  unsigned int v6 = objc_msgSend(a1, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 1, a3, v16);

  if (v6)
  {
    id v7 = v16[0];
  }
  else
  {
    id v8 = v16[0];
    uint64_t v9 = (void *)sub_24E115AF0();

    swift_willThrow();
    sub_24E116980();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE5F0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24E11BE80;
    v16[0] = v9;
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
    uint64_t v12 = sub_24E116290();
    uint64_t v14 = v13;
    *(void *)(v10 + 56) = MEMORY[0x263F8D310];
    *(void *)(v10 + 64) = sub_24E0DCEDC();
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v14;
    sub_24E0DD13C(0, &qword_2698B86E8);
    uint64_t v15 = (void *)sub_24E116A80();
    sub_24E115ED0();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_24E0DCEDC()
{
  unint64_t result = qword_2698B86E0;
  if (!qword_2698B86E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B86E0);
  }
  return result;
}

void static NSFileManager.removeDirectory(url:)()
{
  v14[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  Swift::UInt64 v1 = (void *)sub_24E115B30();
  v14[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v14);

  if (v2)
  {
    id v3 = v14[0];
    return;
  }
  id v4 = v14[0];
  id v5 = (void *)sub_24E115AF0();

  swift_willThrow();
  v14[0] = v5;
  id v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
  sub_24E0DD13C(0, &qword_26B1AE758);
  if (!swift_dynamicCast()) {
    goto LABEL_11;
  }

  id v7 = objc_msgSend(v13, sel_domain);
  uint64_t v8 = sub_24E1161F0();
  uint64_t v10 = v9;

  if (sub_24E1161F0() == v8 && v11 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v12 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_8:
    if (objc_msgSend(v13, sel_code) == (id)4)
    {

      return;
    }
  }
  swift_willThrow();
LABEL_11:
}

uint64_t sub_24E0DD13C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void static NSFileManager.emptyDirectory(url:)(uint64_t a1)
{
  uint64_t v74 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  os_log_type_t v59 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v58 = (char *)v56 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)v56 - v7;
  uint64_t v8 = sub_24E115B60();
  uint64_t v9 = *(void **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v56 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v56 - v16;
  uint64_t v18 = self;
  id v64 = objc_msgSend(v18, sel_defaultManager);
  id v19 = objc_msgSend(v18, sel_defaultManager);
  uint64_t v62 = (uint64_t (*)(char *, uint64_t, uint64_t))v9[2];
  uint64_t v63 = v9 + 2;
  uint64_t v20 = v62(v17, a1, v8);
  long long v21 = (void *)MEMORY[0x2533330F0](v20);
  id v22 = objc_msgSend(v18, sel_defaultManager);
  uint64_t v23 = sub_24E116950();

  uint64_t v24 = (void (*)(char *, uint64_t))v9[1];
  uint64_t v65 = v9 + 1;
  uint64_t v68 = v24;
  v24(v17, v8);

  uint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 7);
  if (v23)
  {
    uint64_t v26 = (void *)v23;
    uint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 6);
    int v67 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 4);
    *(void *)&long long v25 = 141558531;
    long long v57 = v25;
    v56[1] = MEMORY[0x263F8EE58] + 8;
    uint64_t v27 = (uint64_t)v59;
    uint64_t v28 = (uint64_t)v60;
    uint64_t v29 = (uint64_t)v58;
    uint64_t v30 = v64;
    while (1)
    {
      uint64_t v71 = v26;
      id v32 = v26;
      uint64_t v33 = (void *)MEMORY[0x2533330F0]();
      if (objc_msgSend(v32, sel_nextObject))
      {
        sub_24E116BB0();
        swift_unknownObjectRelease();
        sub_24E094E10(v72, v73);
        sub_24E094E10(v73, v72);
        char v34 = swift_dynamicCast();
        uint64_t v35 = *v66;
        char v70 = *v66;
        if (v34)
        {
          v35(v27, 0, 1, v8);
          if ((*v69)(v27, 1, v8) != 1)
          {
            (*v67)(v29, v27, v8);
            v70(v29, 0, 1, v8);
            goto LABEL_12;
          }
        }
        else
        {
          v35(v27, 1, 1, v8);
        }
        sub_24E095494(v27, &qword_26B1AE588);

        uint64_t v36 = v70;
      }
      else
      {

        uint64_t v36 = *v66;
      }
      char v70 = v36;
      v36(v29, 1, 1, v8);
      uint64_t v71 = 0;
LABEL_12:

      sub_24E0CACDC(v29, v28);
      if ((*v69)(v28, 1, v8) == 1)
      {

        uint64_t v30 = v71;
        goto LABEL_24;
      }
      (*v67)((uint64_t)v15, v28, v8);
      uint64_t v37 = (void *)sub_24E115B30();
      *(void *)&v73[0] = 0;
      unsigned int v38 = objc_msgSend(v30, sel_removeItemAtURL_error_, v37, v73);

      if (v38)
      {
        id v31 = *(id *)&v73[0];
        v68(v15, v8);
        uint64_t v26 = v71;
        if (!v71) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v39 = v15;
        id v40 = *(id *)&v73[0];
        uint64_t v41 = (void *)sub_24E115AF0();

        swift_willThrow();
        if (qword_26B1AF8D8 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_24E115F00();
        __swift_project_value_buffer(v42, (uint64_t)qword_26B1B13B0);
        v62(v12, (uint64_t)v39, v8);
        id v43 = v41;
        id v44 = v41;
        uint64_t v45 = sub_24E115EE0();
        os_log_type_t v46 = sub_24E116980();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = swift_slowAlloc();
          uint64_t v48 = (void *)swift_slowAlloc();
          uint64_t v61 = swift_slowAlloc();
          *(void *)&v73[0] = v61;
          *(_DWORD *)uint64_t v47 = v57;
          *(void *)(v47 + 4) = 1752392040;
          *(_WORD *)(v47 + 12) = 2081;
          sub_24E0DEB28((unint64_t *)&qword_2698B8490, MEMORY[0x263F06EA8]);
          uint64_t v49 = sub_24E117040();
          *(void *)(v47 + 14) = sub_24E090400(v49, v50, (uint64_t *)v73);
          swift_bridgeObjectRelease();
          v68(v12, v8);
          *(_WORD *)(v47 + 22) = 2114;
          uint64_t v51 = sub_24E115AE0();
          *(void *)(v47 + 24) = v51;
          *uint64_t v48 = v51;

          _os_log_impl(&dword_24E083000, v45, v46, "Error deleting %{private,mask.hash}s: %{public}@)", (uint8_t *)v47, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
          swift_arrayDestroy();
          uint64_t v52 = v48;
          uint64_t v27 = (uint64_t)v59;
          MEMORY[0x2533338B0](v52, -1, -1);
          uint64_t v53 = v61;
          swift_arrayDestroy();
          uint64_t v28 = (uint64_t)v60;
          MEMORY[0x2533338B0](v53, -1, -1);
          uint64_t v54 = v47;
          uint64_t v29 = (uint64_t)v58;
          MEMORY[0x2533338B0](v54, -1, -1);

          v68(v39, v8);
        }
        else
        {

          uint64_t v55 = v68;
          v68(v12, v8);

          v55(v39, v8);
        }
        uint64_t v15 = v39;
        uint64_t v30 = v64;
        uint64_t v26 = v71;
        if (!v71) {
          goto LABEL_22;
        }
      }
    }
  }
  char v70 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9[7];
  uint64_t v28 = (uint64_t)v60;
  uint64_t v30 = v64;
LABEL_22:
  v70(v28, 1, 1, v8);
LABEL_24:
}

uint64_t NSFileManager.flatSequence(at:includingPropertiesForKeys:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_24E115B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x2533330F0](v8);
  id v10 = objc_msgSend(self, sel_defaultManager);
  uint64_t v11 = sub_24E116950();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v11;
  return result;
}

uint64_t NSFileManager.deepSequence(at:includingPropertiesForKeys:options:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_24E115B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x2533330F0](v8);
  id v10 = objc_msgSend(self, sel_defaultManager);
  uint64_t v11 = sub_24E116950();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v11;
  return result;
}

uint64_t NSFileManager.entryCount(directory:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v36 - v8;
  MEMORY[0x270FA5388](v7);
  id v40 = (char *)v36 - v10;
  uint64_t v11 = sub_24E115B60();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((URL.isDirectory.getter() & 1) == 0)
  {
LABEL_16:
    sub_24E1161F0();
    uint64_t v22 = v32;
    id v33 = objc_allocWithZone(MEMORY[0x263F087E8]);
    char v34 = (void *)sub_24E1161C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_initWithDomain_code_userInfo_, v34, 258, 0);

    swift_willThrow();
    return v22;
  }
  uint64_t v39 = v6;
  v36[1] = v1;
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v16 = (void *)MEMORY[0x2533330F0](v15);
  id v17 = objc_msgSend(self, sel_defaultManager);
  id v18 = (id)sub_24E116950();

  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v19 = v12 + 8;
  v20(v14, v11);
  id v43 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 48);
  long long v21 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v19 + 24);
  v36[0] = v18;
  uint64_t v22 = 0;
  uint64_t v38 = MEMORY[0x263F8EE58] + 8;
  uint64_t v23 = (uint64_t)v40;
  while (1)
  {
    if (!v18)
    {
      (*v43)(v23, 1, 1, v11);
      id v18 = v36[0];
      goto LABEL_19;
    }
    id v24 = v18;
    long long v25 = (void *)MEMORY[0x2533330F0]();
    if (objc_msgSend(v24, sel_nextObject))
    {
      uint64_t v26 = v9;
      sub_24E116BB0();
      swift_unknownObjectRelease();
      sub_24E094E10(v41, v42);
      sub_24E094E10(v42, v41);
      uint64_t v27 = (uint64_t)v39;
      char v28 = swift_dynamicCast();
      uint64_t v29 = *v43;
      if (v28)
      {
        v29(v27, 0, 1, v11);
        if ((*v21)(v27, 1, v11) != 1)
        {
          uint64_t v30 = v27;
          uint64_t v9 = v26;
          (*v37)(v26, v30, v11);
          v29((uint64_t)v26, 0, 1, v11);
          uint64_t v23 = (uint64_t)v40;
          goto LABEL_12;
        }
      }
      else
      {
        v29(v27, 1, 1, v11);
      }
      sub_24E095494(v27, &qword_26B1AE588);

      uint64_t v9 = v26;
      uint64_t v23 = (uint64_t)v40;
      v29((uint64_t)v9, 1, 1, v11);
    }
    else
    {

      (*v43)((uint64_t)v9, 1, 1, v11);
    }
    id v18 = 0;
LABEL_12:

    sub_24E0CACDC((uint64_t)v9, v23);
    if ((*v21)(v23, 1, v11) == 1) {
      break;
    }
    sub_24E095494(v23, &qword_26B1AE588);
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
  }

LABEL_19:
  return v22;
}

void NSFileManager.removeEmptyDirectoriesRecursively(baseURL:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE580);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE588);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  char v70 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v76 = (char *)&v60 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v77 = (uint64_t)&v60 - v12;
  uint64_t v13 = sub_24E115B60();
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v60 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v60 - v21;
  if ((URL.isDirectory.getter() & 1) == 0)
  {
    sub_24E1161F0();
    id v58 = objc_allocWithZone(MEMORY[0x263F087E8]);
    os_log_type_t v59 = (void *)sub_24E1161C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v58, sel_initWithDomain_code_userInfo_, v59, 258, 0);

    swift_willThrow();
    return;
  }
  uint64_t v23 = (void (*)(char *, char *, uint64_t))v14[2];
  uint64_t v69 = v14 + 2;
  uint64_t v68 = v23;
  uint64_t v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v23)(v22, a1, v13);
  uint64_t v81 = (void *)MEMORY[0x2533330F0](v24);
  id v25 = objc_msgSend(self, sel_defaultManager);
  uint64_t v26 = (void *)sub_24E116950();

  uint64_t v73 = (void (*)(char *, uint64_t))v14[1];
  v73(v22, v13);
  uint64_t v74 = v14 + 1;
  uint64_t v81 = v14 + 7;
  if (v26)
  {
    int v67 = v17;
    uint64_t v78 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 6);
    long long v75 = (void (**)(void))(v14 + 4);
    int64_t v72 = (void *)*MEMORY[0x263EFF6A8];
    *((void *)&v27 + 1) = 2;
    long long v71 = xmmword_24E11BE80;
    *(void *)&long long v27 = 136315138;
    long long v66 = v27;
    uint64_t v65 = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      id v28 = v26;
      uint64_t v29 = (void *)MEMORY[0x2533330F0]();
      if (objc_msgSend(v28, sel_nextObject))
      {
        sub_24E116BB0();
        swift_unknownObjectRelease();
        sub_24E094E10(v79, &v80);
        sub_24E094E10(&v80, v79);
        uint64_t v30 = (uint64_t)v70;
        char v31 = swift_dynamicCast();
        uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v81;
        if (v31)
        {
          v32(v30, 0, 1, v13);
          if ((*v78)(v30, 1, v13) != 1)
          {
            uint64_t v33 = (uint64_t)v76;
            (*v75)();
            v32(v33, 0, 1, v13);
            goto LABEL_12;
          }
        }
        else
        {
          v32(v30, 1, 1, v13);
        }
        sub_24E095494(v30, &qword_26B1AE588);
      }
      else
      {

        uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v81;
      }
      uint64_t v33 = (uint64_t)v76;
      v32((uint64_t)v76, 1, 1, v13);
      uint64_t v26 = 0;
LABEL_12:

      uint64_t v34 = v77;
      sub_24E0CACDC(v33, v77);
      if ((*v78)(v34, 1, v13) == 1)
      {

        return;
      }
      ((void (*)(char *, uint64_t, uint64_t))*v75)(v20, v34, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE5E8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v71;
      uint64_t v36 = v72;
      *(void *)(inited + 32) = v72;
      id v37 = v36;
      sub_24E09A2A8(inited);
      swift_setDeallocating();
      type metadata accessor for URLResourceKey(0);
      swift_arrayDestroy();
      sub_24E115B10();
      if (v2)
      {

        swift_bridgeObjectRelease();
        uint64_t v38 = sub_24E115AD0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v6, 1, 1, v38);
        uint64_t v2 = 0;
LABEL_16:
        sub_24E095494((uint64_t)v6, &qword_26B1AE580);
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      uint64_t v39 = sub_24E115AD0();
      uint64_t v40 = *(void *)(v39 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v6, 0, 1, v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v6, 1, v39) == 1) {
        goto LABEL_16;
      }
      char v41 = sub_24E115AA0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v39);
      if (v41)
      {
        sub_24E115B50();
        uint64_t v42 = sub_24E1162D0();
        swift_bridgeObjectRelease();
        int v43 = rmdir((const char *)(v42 + 32));
        swift_release();
        if (!v43)
        {
          if (qword_26B1AF8D8 != -1) {
            swift_once();
          }
          uint64_t v44 = sub_24E115F00();
          __swift_project_value_buffer(v44, (uint64_t)qword_26B1B13B0);
          uint64_t v45 = v67;
          v68(v67, v20, v13);
          os_log_type_t v46 = sub_24E115EE0();
          os_log_type_t v47 = sub_24E1169A0();
          int v48 = v47;
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v49 = swift_slowAlloc();
            int v64 = v48;
            uint64_t v50 = v49;
            uint64_t v63 = swift_slowAlloc();
            *(void *)&long long v80 = v63;
            *(_DWORD *)uint64_t v50 = v66;
            uint64_t v61 = v50;
            sub_24E0DEB28((unint64_t *)&qword_2698B8490, MEMORY[0x263F06EA8]);
            os_log_t v62 = v46;
            uint64_t v51 = sub_24E117040();
            *(void *)(v50 + 4) = sub_24E090400(v51, v52, (uint64_t *)&v80);
            swift_bridgeObjectRelease();
            uint64_t v53 = v45;
            uint64_t v54 = v73;
            v73(v53, v13);
            os_log_t v55 = v62;
            _os_log_impl(&dword_24E083000, v62, (os_log_type_t)v64, "Pruning empty directory: %s", (uint8_t *)v50, 0xCu);
            uint64_t v56 = v63;
            swift_arrayDestroy();
            MEMORY[0x2533338B0](v56, -1, -1);
            MEMORY[0x2533338B0](v61, -1, -1);

            v54(v20, v13);
          }
          else
          {

            long long v57 = v73;
            v73(v45, v13);
            v57(v20, v13);
          }
          goto LABEL_18;
        }
      }
LABEL_17:
      v73(v20, v13);
LABEL_18:
      if (!v26) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14[7];
LABEL_29:
  v32(v77, 1, 1, v13);
}

uint64_t sub_24E0DEB28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0DEB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E0E2568(a1, (uint64_t)v9);
  uint64_t v10 = sub_24E1166C0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24E0E1B04((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_24E116640();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E1166B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    uint64_t v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  void v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t withTimeout<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = sub_24E116E00();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  uint64_t v8 = sub_24E116E20();
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0DEE78, 0, 0);
}

uint64_t sub_24E0DEE78()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  sub_24E116E10();
  sub_24E116DC0();
  MEMORY[0x253332A40](v5, v4);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 128) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 136) = v7;
  uint64_t v8 = sub_24E0E24CC(&qword_26B1AEAB8, MEMORY[0x263F8F740]);
  *(void *)uint64_t v7 = v0;
  *(void *)(v7 + 8) = sub_24E0DEFEC;
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 16);
  long long v13 = *(_OWORD *)(v0 + 40);
  *(void *)(v7 + 64) = *(void *)(v0 + 96);
  *(void *)(v7 + 72) = v8;
  *(void *)(v7 + 56) = v11;
  *(_OWORD *)(v7 + 40) = v13;
  *(void *)(v7 + 24) = v10;
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 16) = v12;
  return MEMORY[0x270FA2498](sub_24E0DF29C, 0, 0);
}

uint64_t sub_24E0DEFEC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0DF1B8;
  }
  else {
    uint64_t v2 = sub_24E0DF100;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0DF100()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24E0DF1B8()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t withDeadline<A, B>(_:clock:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  void v8[4] = a3;
  void v8[5] = a4;
  v8[2] = a1;
  void v8[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0DF29C, 0, 0);
}

uint64_t sub_24E0DF29C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  long long v4 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  *(_OWORD *)(v2 + 56) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24E0DF398;
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA22B8](v7, v6, v6, 0, 0, &unk_2698B8710, v2, v6);
}

uint64_t sub_24E0DF398()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0DF4D4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E0DF4D4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t withTimeout<A, B>(_:clock:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  void v8[4] = a3;
  void v8[5] = a4;
  v8[2] = a1;
  void v8[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  v8[11] = *(void *)(AssociatedTypeWitness - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0DF62C, 0, 0);
}

uint64_t sub_24E0DF62C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_24E117160();
  swift_getAssociatedConformanceWitness();
  sub_24E116DA0();
  long long v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 112) = v4;
  *(void *)(v0 + 120) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_24E0DF780;
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v5 + 64) = v9;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 16) = v7;
  *(void *)(v5 + 24) = v6;
  return MEMORY[0x270FA2498](sub_24E0DF29C, 0, 0);
}

uint64_t sub_24E0DF780()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0DF914;
  }
  else {
    uint64_t v2 = sub_24E0DF894;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0DF894()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0DF914()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0DF994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v16;
  v8[7] = a6;
  v8[8] = a7;
  void v8[5] = a4;
  v8[6] = a5;
  void v8[3] = a2;
  void v8[4] = a3;
  v8[2] = a1;
  uint64_t v10 = sub_24E116A90();
  v8[11] = v10;
  v8[12] = *(void *)(v10 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  uint64_t v11 = *(void *)(a8 - 8);
  v8[15] = v11;
  v8[16] = *(void *)(v11 + 64);
  v8[17] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[18] = AssociatedTypeWitness;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  v8[19] = v13;
  v8[20] = *(void *)(v13 + 64);
  v8[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  v8[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0DFB90, 0, 0);
}

uint64_t sub_24E0DFB90()
{
  uint64_t v1 = v0[22];
  uint64_t v21 = v0[21];
  uint64_t v23 = v0[20];
  uint64_t v18 = v0[19];
  uint64_t v24 = v0[18];
  uint64_t v22 = v0[17];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v19 = v0[15];
  uint64_t v20 = v0[7];
  uint64_t v5 = v0[5];
  uint64_t v17 = v0[6];
  uint64_t v15 = v0[4];
  uint64_t v6 = sub_24E1166C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  long long v8 = (void *)swift_allocObject();
  v8[2] = 0;
  void v8[3] = 0;
  void v8[4] = v4;
  void v8[5] = v2;
  v8[6] = v3;
  v8[7] = v15;
  v8[8] = v5;
  swift_retain();
  v0[23] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v16 = sub_24E1167D0();
  sub_24E0DEB70(v1, (uint64_t)&unk_2698B8728, (uint64_t)v8);
  sub_24E0E1B04(v1);
  v7(v1, 1, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21, v17, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v22, v20, v2);
  unint64_t v9 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v10 = (v23 + *(unsigned __int8 *)(v19 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 4) = v4;
  *((void *)v11 + 5) = v2;
  *((void *)v11 + 6) = v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(&v11[v9], v21, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v11[v10], v22, v2);
  sub_24E0DEB70(v1, (uint64_t)&unk_2698B8738, (uint64_t)v11);
  sub_24E0E1B04(v1);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[24] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_24E0DFEAC;
  uint64_t v13 = v0[14];
  return MEMORY[0x270FA2048](v13, 0, 0, v16);
}

uint64_t sub_24E0DFEAC()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0E0220;
  }
  else {
    uint64_t v2 = sub_24E0DFFC0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0DFFC0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[8];
  sub_24E1167C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  long long v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  if (v7 == 1)
  {
    uint64_t v9 = v0[14];
    uint64_t v10 = v0[11];
    v8(v0[13], v10);
    sub_24E116680();
    sub_24E0E24CC((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    swift_allocError();
    sub_24E116050();
    swift_willThrow();
    v8(v9, v10);
  }
  else
  {
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[8];
    uint64_t v14 = v0[2];
    v8(v0[14], v0[11]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v14, v12, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24E0E0220()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E02BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_24E095114;
  return sub_24E0DF994(a1, a2, v8, v9, v10, v11, v6, v7);
}

ValueMetadata *type metadata accessor for TimeoutError()
{
  return &type metadata for TimeoutError;
}

uint64_t sub_24E0E03BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a1;
  v8[7] = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  v8[12] = sub_24E116670();
  uint64_t v9 = sub_24E116A90();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E04B4, 0, 0);
}

uint64_t sub_24E0E04B4()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 96) - 8) + 56))(v1, 1, 1);
  uint64_t v4 = sub_24E0C10C0();
  *(void *)(v0 + 128) = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE8F0);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 136) = inited;
  *(_DWORD *)(inited + 24) = 0;
  *(void *)(inited + 16) = 0;
  sub_24E116790();
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 144) = v9;
  long long v10 = *(_OWORD *)(v0 + 56);
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = inited;
  *(_OWORD *)(v9 + 56) = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v11;
  void v11[2] = v8;
  double v11[3] = v7;
  void v11[4] = v6;
  v11[5] = inited;
  id v11[6] = v4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_24E0E06D4;
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 48);
  return MEMORY[0x270FA2338](v14, &unk_2698B8748, v9, sub_24E0E26A4, v11, 0, 0, v13);
}

uint64_t sub_24E0E06D4()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E0E0884;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_24E0E07F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0E07F8()
{
  swift_setDeallocating();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E0884()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E0914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  void v8[4] = a3;
  void v8[5] = a4;
  v8[2] = a1;
  void v8[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0E0940, 0, 0);
}

uint64_t sub_24E0E0940()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  long long v3 = *(_OWORD *)(v0 + 24);
  long long v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  *(_OWORD *)(v2 + 56) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24E0E0A44;
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, 0, 0, 0xD00000000000001CLL, 0x800000024E118F30, sub_24E0E26D4, v2, v6);
}

uint64_t sub_24E0E0A44()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0E28A0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

void sub_24E0E0B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = a6;
  uint64_t v12 = a7;
  uint64_t v13 = a8;
  uint64_t v14 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  sub_24E116A90();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0E26E8, (uint64_t)v10, a2);
  os_unfair_lock_lock((os_unfair_lock_t)(a3 + 24));
  sub_24E0E2708((uint64_t *)(a3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(a3 + 24));
}

uint64_t sub_24E0E0C74(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v4 = sub_24E116670();
  uint64_t v5 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t v6 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v4);
}

uint64_t sub_24E0E0D84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_release();
  uint64_t v17 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = 0;
  v18[3] = 0;
  void v18[4] = a5;
  v18[5] = a6;
  v18[6] = a7;
  v18[7] = a2;
  v18[8] = a3;
  v18[9] = a4;
  swift_retain();
  swift_retain();
  uint64_t result = sub_24E09A98C((uint64_t)v16, (uint64_t)&unk_2698B8758, (uint64_t)v18);
  *a1 = result;
  return result;
}

uint64_t sub_24E0E0ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v11;
  void v8[4] = a6;
  void v8[5] = a7;
  v8[2] = a4;
  void v8[3] = a5;
  v8[8] = *(void *)(a7 - 8);
  v8[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E0F98, 0, 0);
}

uint64_t sub_24E0E0F98()
{
  sub_24E116790();
  uint64_t v4 = (uint64_t (*)(uint64_t))(v0[2] + *(int *)v0[2]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0E1168;
  uint64_t v2 = v0[9];
  return v4(v2);
}

uint64_t sub_24E0E1168()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0E13A8;
  }
  else {
    uint64_t v2 = sub_24E0E127C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0E127C()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v5 + 16) = v8;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  sub_24E116A90();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0E2880, v5, v4);
  swift_task_dealloc();
  (*(void (**)(uint64_t, void))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24E0E13A8()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  sub_24E116A90();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0E2860, v4, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24E0E14B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  long long v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v9 = sub_24E116670();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - v11;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, a3);
    sub_24E116660();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v13 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
}

uint64_t sub_24E0E16F0(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v4 = sub_24E116670();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - v6;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v11[1] = a2;
    id v8 = a2;
    sub_24E116650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v9 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
}

void sub_24E0E18A0(os_unfair_lock_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t *)&a1[4];
  uint64_t v10 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_24E0E1980(v9, &v12);
  os_unfair_lock_unlock(v10);
  void v11[2] = a3;
  double v11[3] = a4;
  void v11[4] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  sub_24E116A90();
  sub_24E0FC39C((void (*)(uint64_t))sub_24E0E26B4, (uint64_t)v11, a2);
}

uint64_t *sub_24E0E1980@<X0>(uint64_t *result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result) {
    uint64_t result = (uint64_t *)sub_24E116770();
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_24E0E19E8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24E0E1A28(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24E095558;
  return sub_24E0E03BC(a1, v6, v7, v9, v10, v4, v5, v8);
}

uint64_t sub_24E0E1B04(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E0E1B64(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v2 = sub_24E116670();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v9 - v4;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    sub_24E116680();
    sub_24E0E24CC((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    uint64_t v6 = swift_allocError();
    sub_24E116050();
    v9[1] = v6;
    sub_24E116650();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v7 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
}

uint64_t sub_24E0E1D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[4] = a7;
  void v8[5] = a8;
  v8[2] = a4;
  void v8[3] = a5;
  v8[6] = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24E116A90();
  v8[7] = v9;
  v8[8] = *(void *)(v9 - 8);
  v8[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E1E50, 0, 0);
}

uint64_t sub_24E0E1E50()
{
  sub_24E116790();
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0[6] - 8) + 56))(v0[9], 1, 1);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0E1F7C;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return MEMORY[0x270FA1FF8](v6, v2, v5, v3, v4);
}

uint64_t sub_24E0E1F7C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_24E0E217C;
  }
  else {
    uint64_t v5 = sub_24E0E20EC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E0E20EC()
{
  sub_24E0E2514();
  swift_allocError();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E217C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E21E0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);
  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_24E0E2344(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = (uint64_t)v1 + v9;
  uint64_t v13 = (uint64_t)v1
      + ((v9 + *(void *)(v8 + 64) + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_24E095558;
  return sub_24E0E1D64(a1, v10, v11, v12, v13, v6, v5, v7);
}

uint64_t sub_24E0E24CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E0E2514()
{
  unint64_t result = qword_26B1AEA68;
  if (!qword_26B1AEA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AEA68);
  }
  return result;
}

uint64_t sub_24E0E2568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E0E25D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 40);
  long long v7 = *(_OWORD *)(v1 + 56);
  long long v8 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_24E095558;
  *(void *)(v5 + 72) = v4;
  *(_OWORD *)(v5 + 56) = v8;
  *(_OWORD *)(v5 + 40) = v7;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E0E0940, 0, 0);
}

void sub_24E0E26A4()
{
  sub_24E0E18A0(*(os_unfair_lock_s **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24E0E26B4(uint64_t a1)
{
  return sub_24E0E1B64(a1);
}

void sub_24E0E26D4(uint64_t a1)
{
  sub_24E0E0B80(a1, v1[5], v1[6], v1[7], v1[8], v1[2], v1[3], v1[4]);
}

uint64_t sub_24E0E26E8(uint64_t a1)
{
  return sub_24E0E0C74(a1, *(void *)(v1 + 40));
}

uint64_t sub_24E0E2708(uint64_t *a1)
{
  return sub_24E0E0D84(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_24E0E272C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_24E0E2774(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24E095114;
  return sub_24E0E0ED4(a1, v6, v7, v8, v10, v9, v4, v5);
}

uint64_t sub_24E0E2860(uint64_t a1)
{
  return sub_24E0E16F0(a1, *(void **)(v1 + 40));
}

uint64_t sub_24E0E2880(uint64_t a1)
{
  return sub_24E0E14B8(a1, *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_24E0E28A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 104);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_24E0E2948(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_24E0E29F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_24E0E2A98(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 120);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_24E0E2B44()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 128));
}

uint64_t sub_24E0E2B60(uint64_t result)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 128)) = result;
  return result;
}

uint64_t HysteresisFilter.__allocating_init(currentValue:threshold:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  HysteresisFilter.init(currentValue:threshold:)(a1, a2);
  return v4;
}

uint64_t *HysteresisFilter.init(currentValue:threshold:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v22 = a2;
  uint64_t v5 = *v2;
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - v11;
  swift_defaultActor_initialize();
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 128)) = 1;
  uint64_t v13 = *(void *)(*v2 + 136);
  sub_24E115DF0();
  uint64_t v14 = sub_24E115DB0();
  uint64_t v16 = v15;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  type metadata accessor for WorkItemQueue(0);
  swift_allocObject();
  uint64_t v17 = WorkItemQueue.init(name:identifier:)(v14, v16, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  *(uint64_t *)((char *)v3 + v13) = (uint64_t)v17;
  uint64_t v18 = *(void *)(v5 + 80);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))((uint64_t)v3 + *(void *)(*v3 + 104), a1, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))((uint64_t)v3 + *(void *)(*v3 + 120), a1, v18);
  *(uint64_t *)((char *)v3 + *(void *)(*v3 + 112)) = v22;
  return v3;
}

uint64_t sub_24E0E2E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v36 = a3;
  uint64_t v34 = a2;
  uint64_t v8 = (void *)*v5;
  uint64_t v9 = sub_24E115E00();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = v8[10];
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v41 = *(void *)((char *)v5 + v8[17]);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v34 - v18, a1, v15);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v15;
  *((void *)v22 + 3) = v8[11];
  *((void *)v22 + 4) = v6;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v22[v20], v19, v15);
  uint64_t v23 = &v22[v21];
  uint64_t v25 = v36;
  uint64_t v24 = v37;
  *(void *)uint64_t v23 = v34;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = (uint64_t *)&v22[(v21 + 23) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v27 = v38;
  *uint64_t v26 = v24;
  v26[1] = v27;
  swift_retain();
  swift_retain();
  sub_24E0C5268(v24);
  sub_24E115DF0();
  uint64_t v29 = v39;
  uint64_t v28 = v40;
  uint64_t v30 = (uint64_t)v35;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v35, v14, v40);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = &unk_2698B8768;
  *(void *)(v31 + 24) = v22;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v32 = sub_24E0EAD8C(0, v30, (uint64_t)&unk_2698B8588, v31, (uint64_t)&unk_2698B8770, 0);
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
  sub_24E09F3A8(v32);
  return swift_release();
}

uint64_t sub_24E0E3180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_24E0A6D9C;
  return sub_24E0E3474(a2, a3, a4, a5, a6);
}

uint64_t sub_24E0E324C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  if (*(void *)(v0 + v5)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v5 + 16, v3 | 7);
}

uint64_t sub_24E0E3344()
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = (uint64_t *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_24E095558;
  return sub_24E0E3180(v4, v5, v6, v7, v9, v10);
}

uint64_t sub_24E0E3474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = *v5;
  v6[8] = *v5;
  uint64_t v8 = *(void *)(v7 + 80);
  v6[9] = v8;
  v6[10] = *(void *)(v8 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E3584, v5, 0);
}

uint64_t sub_24E0E3584()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  sub_24E0E29F4(v1);
  char v5 = sub_24E116190();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[13] = v6;
  v0[14] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = *(void *)(*(void *)v4 + 128);
  if ((v5 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v4 + v7);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
LABEL_5:
    uint64_t v10 = 1;
  }
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[10];
  uint64_t v14 = v0[2];
  *(void *)(v4 + v7) = v10;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v15(v11, v14, v12);
  sub_24E0E2A98(v11);
  sub_24E0E28A4(v11);
  char v16 = sub_24E116190();
  v6(v11, v12);
  if (v16)
  {
    uint64_t v17 = (int *)v0[5];
    if (v17)
    {
      uint64_t v30 = (uint64_t (*)(void))((char *)v17 + *v17);
      uint64_t v18 = (void *)swift_task_alloc();
      v0[17] = v18;
      *uint64_t v18 = v0;
      uint64_t v19 = sub_24E0E3C94;
LABEL_12:
      v18[1] = v19;
      return v30();
    }
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  if (*(void *)(v0[7] + *(void *)(*(void *)v0[7] + 128)) < *(void *)(v0[7]
                                                                              + *(void *)(*(void *)v0[7] + 112)))
  {
    unint64_t v20 = (int *)v0[5];
    if (v20)
    {
      uint64_t v30 = (uint64_t (*)(void))((char *)v20 + *v20);
      uint64_t v18 = (void *)swift_task_alloc();
      v0[16] = v18;
      *uint64_t v18 = v0;
      uint64_t v19 = sub_24E0E3B68;
      goto LABEL_12;
    }
    goto LABEL_15;
  }
  uint64_t v23 = v0[11];
  uint64_t v24 = v0[9];
  uint64_t v26 = v0[2];
  uint64_t v25 = (int *)v0[3];
  sub_24E0E28A4(v0[12]);
  v15(v23, v26, v24);
  sub_24E0E2948(v23);
  sub_24E0E28A4(v23);
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))((char *)v25 + *v25);
  uint64_t v27 = (void *)swift_task_alloc();
  v0[15] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_24E0E3974;
  uint64_t v29 = v0[11];
  uint64_t v28 = v0[12];
  return v31(v29, v28);
}

uint64_t sub_24E0E3974()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 72);
  uint64_t v4 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  v1(v2, v3);
  return MEMORY[0x270FA2498](sub_24E0E3AF0, v4, 0);
}

uint64_t sub_24E0E3AF0()
{
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 96), *(void *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E3B68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0E3C94()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t HysteresisFilter.deinit()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v2(v0 + *(void *)(*(void *)v0 + 104), v1);
  v2(v0 + *(void *)(*(void *)v0 + 120), v1);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t HysteresisFilter.__deallocating_deinit()
{
  HysteresisFilter.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t HysteresisFilter.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0E3EC8()
{
  return HysteresisFilter.unownedExecutor.getter();
}

uint64_t sub_24E0E3EE4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E0E3F1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for HysteresisFilter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for HysteresisFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HysteresisFilter);
}

uint64_t dispatch thunk of HysteresisFilter.__allocating_init(currentValue:threshold:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of HysteresisFilter.processInput(newValue:outputBlock:ignoreBlock:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_24E0E4044(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = *v2;
  return MEMORY[0x270FA2498](sub_24E0E4090, v2, 0);
}

uint64_t sub_24E0E4090()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancellationBlock);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  sub_24E0EC1A4((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  uint64_t v3 = *(void *)(v0 + 32);
  swift_task_dealloc();
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completionAlreadyCalled))
  {
    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24E115F00();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B1B1308);
    swift_retain_n();
    char v5 = sub_24E115EE0();
    os_log_type_t v6 = sub_24E116980();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v28 = v8;
      sub_24E115E00();
      sub_24E0EBD10(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v9 = sub_24E117040();
      *(void *)(v0 + 16) = sub_24E090400(v9, v10, &v28);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24E083000, v5, v6, "completion called more than once for %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v8, -1, -1);
      MEMORY[0x2533338B0](v7, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    goto LABEL_12;
  }
  uint64_t v12 = *(void *)(v0 + 32);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v13 = *(void **)(v0 + 24);
  char v14 = *(unsigned char *)(v0 + 56) & 1;
  *(unsigned char *)(v3 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completionAlreadyCalled) = 1;
  uint64_t v15 = v12 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult;
  char v16 = *(void **)(v12 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult);
  *(void *)uint64_t v15 = v13;
  unsigned __int8 v17 = *(unsigned char *)(v15 + 8);
  *(unsigned char *)(v15 + 8) = v14;
  sub_24E0EB1F0(v13, v14);
  sub_24E0EB118(v16, v17);
  uint64_t v18 = *(void *)(v12 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_willDeadlock);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v19 + 16) = v12;
  *(void *)(v19 + 24) = v11;
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 20));
  sub_24E0EC04C((unsigned char *)(v18 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 20));
  uint64_t v20 = *(void *)(v0 + 32);
  swift_task_dealloc();
  sub_24E0EA29C();
  unint64_t v21 = *(int **)(v20 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completion);
  if (!v21)
  {
LABEL_12:
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  char v22 = *(unsigned char *)(v0 + 56);
  uint64_t v27 = (int *)((char *)v21 + *v21);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_24E0E44BC;
  uint64_t v24 = *(void *)(v0 + 24);
  return ((uint64_t (*)(uint64_t, void))v27)(v24, v22 & 1);
}

uint64_t sub_24E0E44BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t WorkItemQueue.WorkItem.__allocating_init(identifier:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v11 = sub_24E0EAD8C(0, (uint64_t)v9, (uint64_t)&unk_2698B7E08, v10, 0, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v11;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v10 = sub_24E0EAD8C(0, (uint64_t)v9, a2, a3, 0, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v10;
}

uint64_t sub_24E0E4848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E0954F0(a1, (uint64_t)v9, &qword_26B1AFD40);
  uint64_t v10 = sub_24E1166C0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24E095494((uint64_t)v9, &qword_26B1AFD40);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_24E116640();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E1166B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  char v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    char v16 = v19;
    uint64_t v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  void v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_24E0E4A28()
{
  v1[8] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E4B2C, v0, 0);
}

uint64_t sub_24E0E4B2C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancellationBlockNeeded) = 0;
  uint64_t v5 = v4 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancelContinuation;
  swift_beginAccess();
  sub_24E0954F0(v5, v1, &qword_26B1AFBA8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v7 = v0[13];
  if (v6)
  {
    sub_24E095494(v0[13], &qword_26B1AFBA8);
  }
  else
  {
    uint64_t v9 = v0[10];
    uint64_t v8 = v0[11];
    uint64_t v10 = v0[9];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 16))(v8, v0[13], v10);
    sub_24E095494(v7, &qword_26B1AFBA8);
    sub_24E116660();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = v0[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[10] + 56))(v11, 1, 1, v0[9]);
  swift_beginAccess();
  sub_24E0EC124(v11, v5);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_24E115E00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v15 = sub_24E0EAD8C(0, (uint64_t)v13, (uint64_t)&unk_2698B8588, v14, a4, a5);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v15;
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  uint64_t v10 = sub_24E115E00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  uint64_t v14 = sub_24E0EAD8C(0, (uint64_t)v13, a2, a3, a4, a5);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v14;
}

uint64_t sub_24E0E4E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_24E116E00();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_24E116E20();
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E4F94, 0, 0);
}

uint64_t sub_24E0E4F94()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  long long v16 = *(_OWORD *)(v0 + 40);
  sub_24E116E10();
  sub_24E116DC0();
  MEMORY[0x253332A40](v7, v6);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v3, v4);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 128) = v9;
  *(_OWORD *)(v9 + 16) = v16;
  *(void *)(v9 + 32) = v2;
  *(void *)(v9 + 40) = v1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_24E0E5108;
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v12 = MEMORY[0x263F8EE60] + 8;
  uint64_t v13 = MEMORY[0x263F8EE60] + 8;
  uint64_t v14 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v11, v12, v13, 0, 0, &unk_2698B8870, v9, v14);
}

uint64_t sub_24E0E5108()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E0E52DC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24E0E5224;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0E5224()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24E0E52DC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[7];
  swift_task_dealloc();
  v2(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24E0E53A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[3] = a3;
  v6[4] = a4;
  v6[2] = a2;
  uint64_t v7 = sub_24E116E20();
  v6[7] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[8] = v8;
  v6[9] = *(void *)(v8 + 64);
  v6[10] = swift_task_alloc();
  uint64_t v9 = sub_24E116E00();
  v6[11] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[12] = v10;
  v6[13] = *(void *)(v10 + 64);
  v6[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E5508, 0, 0);
}

uint64_t sub_24E0E5508()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v22 = v0[13];
  uint64_t v23 = v0 + 18;
  uint64_t v4 = v0[11];
  uint64_t v21 = v0[10];
  uint64_t v17 = v0[8];
  uint64_t v18 = v0[14];
  uint64_t v19 = v0[6];
  uint64_t v20 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v16 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = sub_24E1166C0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v2, 1, 1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = v6;
  void v9[5] = v5;
  swift_retain();
  sub_24E0E4848(v2, (uint64_t)&unk_2698B8880, (uint64_t)v9);
  sub_24E095494(v2, &qword_26B1AFD40);
  v8(v2, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v18, v16, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, v19, v20);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v11 = (v22 + *(unsigned __int8 *)(v17 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v10, v18, v4);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v12 + v11, v21, v20);
  sub_24E0E4848(v2, (uint64_t)&unk_2698B8890, v12);
  sub_24E095494(v2, &qword_26B1AFD40);
  uint64_t v13 = (void *)swift_task_alloc();
  v1[16] = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBC0);
  *uint64_t v13 = v1;
  v13[1] = sub_24E0E57DC;
  return MEMORY[0x270FA2048](v23, 0, 0, v14);
}

uint64_t sub_24E0E57DC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0E5A3C;
  }
  else {
    uint64_t v2 = sub_24E0E58F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0E58F0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
  sub_24E1167C0();
  if (*(unsigned char *)(v0 + 144))
  {
    sub_24E116680();
    sub_24E0EBD10((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    swift_allocError();
    sub_24E116050();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E5A3C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E5ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E5B54, 0, 0);
}

uint64_t sub_24E0E5B54()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8898);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 80) = v3;
  *(_DWORD *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_24E0954F0(v1, v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16), &qword_26B1AFBA8);
  sub_24E095494(v1, &qword_26B1AFBA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE8F0);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 88) = inited;
  *(_DWORD *)(inited + 24) = 0;
  *(void *)(inited + 16) = 0;
  sub_24E116790();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 96) = v5;
  long long v6 = *(_OWORD *)(v0 + 56);
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = inited;
  *(_OWORD *)(v5 + 32) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  *(void *)(v7 + 16) = inited;
  *(void *)(v7 + 24) = v3;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_24E0E5DF8;
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2338](v9, &unk_2698B88A8, v5, sub_24E0EBE10, v7, 0, 0, v10);
}

uint64_t sub_24E0E5DF8()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E0E5FA8;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_24E0E5F1C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0E5F1C()
{
  swift_setDeallocating();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E5FA8()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E6038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_24E0E6060, 0, 0);
}

uint64_t sub_24E0E6060()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  void *v3 = v0;
  v3[1] = sub_24E0E6158;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v4, 0, 0, 0xD00000000000001CLL, 0x800000024E118F30, sub_24E0EBE18, v1, v5);
}

uint64_t sub_24E0E6158()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0A1E10, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

void sub_24E0E6294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a2 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(void *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_24E0EBE24(v4);
  os_unfair_lock_unlock(v5);
  os_unfair_lock_lock((os_unfair_lock_t)(a3 + 24));
  sub_24E0EBE40((uint64_t *)(a3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(a3 + 24));
}

uint64_t sub_24E0E637C(uint64_t a1, uint64_t a2)
{
  sub_24E095494(a1, &qword_26B1AFBA8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_24E0E6440(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_release();
  uint64_t v11 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = 0;
  uint64_t v12[3] = 0;
  v12[4] = a2;
  void v12[5] = a3;
  v12[6] = a4;
  swift_retain();
  swift_retain();
  uint64_t result = sub_24E09A98C((uint64_t)v10, (uint64_t)&unk_2698B88B8, (uint64_t)v12);
  *a1 = result;
  return result;
}

uint64_t sub_24E0E6570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x270FA2498](sub_24E0E6594, 0, 0);
}

uint64_t sub_24E0E6594()
{
  sub_24E116790();
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(v0 + 16) + **(int **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0E6760;
  return v3();
}

uint64_t sub_24E0E6760()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0E6978;
  }
  else {
    uint64_t v2 = sub_24E0E6874;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_24E0E6874()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  swift_task_alloc();
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E0EBF78(v3);
  os_unfair_lock_unlock(v4);
  if (!v1)
  {
    swift_task_dealloc();
    uint64_t v5 = (void (*)(void))v0[1];
    v5();
  }
}

uint64_t sub_24E0E6978()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v0[4];
  *(void *)(swift_task_alloc() + 16) = v1;
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E0EBF5C(v3);
  os_unfair_lock_unlock(v4);

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24E0E6A8C(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v10[1] = a2;
    id v8 = a2;
    sub_24E116650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_24E095494(a1, &qword_26B1AFBA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
}

void sub_24E0E6BF8(os_unfair_lock_s *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)&a1[4];
  uint64_t v4 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_24E0E1980(v3, &v7);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = a2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a2 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(void *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_24E0E6CC8(v5);
  os_unfair_lock_unlock(v6);
}

uint64_t sub_24E0E6CC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    sub_24E116680();
    sub_24E0EBD10((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    uint64_t v6 = swift_allocError();
    sub_24E116050();
    v8[1] = v6;
    sub_24E116650();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_24E095494(a1, &qword_26B1AFBA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
}

uint64_t sub_24E0E6E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_24E0E6EA4, 0, 0);
}

uint64_t sub_24E0E6EA4()
{
  sub_24E116790();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  uint64_t v2 = sub_24E116E20();
  uint64_t v3 = sub_24E0EBD10(&qword_26B1AEAB8, MEMORY[0x263F8F740]);
  *uint64_t v1 = v0;
  v1[1] = sub_24E0E6FE8;
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  return MEMORY[0x270FA1FF8](v4, v0 + 16, v5, v2, v3);
}

uint64_t sub_24E0E6FE8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0E7184;
  }
  else {
    uint64_t v2 = sub_24E0E70FC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0E70FC()
{
  sub_24E0E2514();
  swift_allocError();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E7184()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E0E719C()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1308);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1308);
  if (qword_26B1AFA10 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B13D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t WorkItemQueue.WorkItem.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_id;
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_24E0E72D8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_24E0E7320(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_24E0E736C())()
{
  return j__swift_endAccess;
}

uint64_t sub_24E0E73C8(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  void *v3 = v2;
  v3[1] = sub_24E095114;
  return v5();
}

uint64_t sub_24E0E75E0(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  void *v3 = v2;
  v3[1] = sub_24E095558;
  return v5();
}

uint64_t sub_24E0E76AC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t type metadata accessor for WorkItemQueue.WorkItem()
{
  uint64_t result = qword_26B1AFA28;
  if (!qword_26B1AFA28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E0E7730()
{
  return sub_24E0EC118(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24E0E7768()
{
  if (qword_26B1AFBE8 != -1) {
    swift_once();
  }
  uint64_t result = sub_24E117360();
  if (v4)
  {
    MEMORY[0x270FA5388](result);
    uint64_t v2 = v1 + 4;
    uint64_t v3 = v1 + 6;
    os_unfair_lock_lock(v1 + 6);
    sub_24E0EC0D0(v2);
    os_unfair_lock_unlock(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t WorkItemQueue.WorkItem.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24E115E00();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)v22 - v7;
  uint64_t v9 = *(void (**)(char *))(v3 + 16);
  uint64_t v24 = (char *)(v0 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_id);
  v9((char *)v22 - v7);
  uint64_t v25 = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_assocatedQueueIdentifier;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_assocatedQueueIdentifier);
  uint64_t v11 = v10 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v10 + 16);
  uint64_t v12 = (os_unfair_lock_s *)(v10 + ((*(unsigned int *)(*(void *)v10 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v12);
  sub_24E0E7CB0(v11, v27);
  os_unfair_lock_unlock(v12);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completionAlreadyCalled) & 1) != 0
    || !LOBYTE(v27[0]))
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
  }
  else
  {
    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_24E115F00();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B1B1308);
    ((void (*)(char *, char *, uint64_t))v9)(v6, v8, v2);
    uint64_t v14 = sub_24E115EE0();
    os_log_type_t v15 = sub_24E116990();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)uint64_t v16 = 136446210;
      v22[1] = v16 + 4;
      sub_24E0EBD10(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v17 = sub_24E117040();
      uint64_t v26 = sub_24E090400(v17, v18, v27);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v6, v2);
      _os_log_impl(&dword_24E083000, v14, v15, "completion block never called for WorkItem: %{public}s!", v16, 0xCu);
      uint64_t v20 = v23;
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v20, -1, -1);
      MEMORY[0x2533338B0](v16, -1, -1);
    }
    else
    {

      uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v6, v2);
    }
    v19(v8, v2);
  }
  v19(v24, v2);
  swift_release();
  swift_release();
  sub_24E0C5278(*(void *)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completion));
  swift_release();
  sub_24E095494(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancelContinuation, &qword_26B1AFBA8);
  sub_24E0EB118(*(void **)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult), *(unsigned char *)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_24E0E7CB0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E0954F0(a1, (uint64_t)v6, (uint64_t *)&unk_26B1AFD48);
  uint64_t v7 = sub_24E115E00();
  LOBYTE(a1) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) != 1;
  uint64_t result = sub_24E095494((uint64_t)v6, (uint64_t *)&unk_26B1AFD48);
  *a2 = a1;
  return result;
}

uint64_t WorkItemQueue.WorkItem.__deallocating_deinit()
{
  WorkItemQueue.WorkItem.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E0E7DCC()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_24E0E7DEC, v0, 0);
}

void sub_24E0E7DEC()
{
  unint64_t v18 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = (unsigned char *)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  swift_beginAccess();
  *uint64_t v2 = 1;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancellationBlock);
  v0[6] = v3;
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 8;
  os_unfair_lock_lock(v3 + 8);
  sub_24E0E825C(v4, v17);
  v0[7] = 0;
  os_unfair_lock_unlock(v5);
  uint64_t v6 = (int *)v17[0];
  uint64_t v7 = v17[1];
  v0[8] = v17[0];
  v0[9] = v7;
  if (v6)
  {
    uint64_t v8 = swift_allocObject();
    v0[10] = v8;
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    sub_24E0C5268((uint64_t)v6);
    uint64_t v16 = (void (*)(void))((char *)v6 + *v6);
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[11] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_24E0E8014;
    v16();
  }
  else
  {
    uint64_t v10 = v0[6];
    uint64_t v11 = v0[7];
    uint64_t v12 = (os_unfair_lock_s *)(v10 + 32);
    uint64_t v13 = (uint64_t *)(v10 + 16);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    os_unfair_lock_lock(v12);
    sub_24E0AC8DC(v13);
    os_unfair_lock_unlock(v12);
    if (!v11)
    {
      sub_24E0C5278(0);
      swift_task_dealloc();
      os_log_type_t v15 = (void (*)(void))v0[1];
      v15();
    }
  }
}

uint64_t sub_24E0E8014()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  sub_24E0C5278(v1);
  return MEMORY[0x270FA2498](sub_24E0E817C, v2, 0);
}

void sub_24E0E817C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = (os_unfair_lock_s *)(v1 + 32);
  uint64_t v4 = (uint64_t *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  os_unfair_lock_lock(v3);
  sub_24E0AC8DC(v4);
  os_unfair_lock_unlock(v3);
  if (!v2)
  {
    sub_24E0C5278((uint64_t)&unk_2698B8820);
    swift_task_dealloc();
    uint64_t v6 = (void (*)(void))v0[1];
    v6();
  }
}

void *sub_24E0E825C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  if (*result)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = &unk_2698B88D0;
    *(void *)(v4 + 24) = v6;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = &unk_2698B88D0;
    *(void *)(v7 + 24) = v6;
    uint64_t result = (void *)swift_retain();
    uint64_t v8 = &unk_2698B88E0;
    uint64_t v9 = &unk_2698B88D8;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = result[1];
  }
  *a2 = v9;
  a2[1] = v4;
  *uint64_t v2 = v8;
  v2[1] = v7;
  return result;
}

uint64_t sub_24E0E834C(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t sub_24E0E8418()
{
  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  uint64_t v2 = sub_24E115E00();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0E8528, v0, 0);
}

uint64_t sub_24E0E8528()
{
  uint64_t v56 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0[8] + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_willDeadlock);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_24E0E9440(v2, v55);
  os_unfair_lock_unlock(v3);
  if (v55[0])
  {
    if (qword_26B1AFBF0 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[11];
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[10];
    sub_24E117360();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      uint64_t v7 = v0[10];
      sub_24E115DD0();
      sub_24E095494(v7, (uint64_t *)&unk_26B1AFD48);
    }
    else
    {
      (*(void (**)(void, void, void))(v0[12] + 32))(v0[14], v0[10], v0[11]);
    }
    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v23 = v0[13];
    uint64_t v22 = v0[14];
    uint64_t v24 = v0[11];
    uint64_t v25 = v0[12];
    uint64_t v26 = sub_24E115F00();
    __swift_project_value_buffer(v26, (uint64_t)qword_26B1B1308);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v22, v24);
    swift_retain_n();
    uint64_t v27 = sub_24E115EE0();
    os_log_type_t v28 = sub_24E116990();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v31 = v0[12];
    uint64_t v30 = v0[13];
    uint64_t v32 = v0[11];
    if (v29)
    {
      uint64_t v52 = v0[13];
      uint64_t v33 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v55[0] = v54;
      *(_DWORD *)uint64_t v33 = 136446722;
      os_log_type_t type = v28;
      sub_24E0EBD10(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v34 = sub_24E117040();
      v0[5] = sub_24E090400(v34, v35, v55);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      v0[6] = sub_24E090400(0xD000000000000011, 0x800000024E118F80, v55);
      sub_24E116AB0();
      *(_WORD *)(v33 + 22) = 2082;
      uint64_t v36 = sub_24E117040();
      v0[7] = sub_24E090400(v36, v37, v55);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void (**)(void, void))(v31 + 8);
      uint64_t v39 = v31 + 8;
      uint64_t v38 = v40;
      v40(v52, v32);
      _os_log_impl(&dword_24E083000, v27, type, "Cancelling WorkItem %{public}s because calling %s from %{public}s WorkItemQueue context will cause a deadlock!", (uint8_t *)v33, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v54, -1, -1);
      MEMORY[0x2533338B0](v33, -1, -1);
    }
    else
    {
      swift_release_n();
      uint64_t v41 = *(void (**)(void, void))(v31 + 8);
      uint64_t v39 = v31 + 8;
      uint64_t v38 = v41;
      v41(v30, v32);
    }

    v0[15] = v39;
    v0[16] = v38;
    uint64_t v42 = (void *)swift_task_alloc();
    v0[17] = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_24E0E8E8C;
    uint64_t v43 = v0[8];
    v42[5] = v43;
    return MEMORY[0x270FA2498](sub_24E0E7DEC, v43, 0);
  }
  uint64_t v8 = v0[9];
  uint64_t v9 = *(void *)(v0[8] + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_assocatedQueueIdentifier);
  uint64_t v10 = v9 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v9 + 16);
  uint64_t v11 = (os_unfair_lock_s *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v11);
  sub_24E0E944C(v10, v8);
  os_unfair_lock_unlock(v11);
  uint64_t v12 = v0[9];
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v0[12] + 48))(v12, 1, v0[11]);
  sub_24E095494(v12, (uint64_t *)&unk_26B1AFD48);
  if (v13 == 1)
  {
    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24E115F00();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B1B1308);
    os_log_type_t v15 = sub_24E115EE0();
    os_log_type_t v16 = sub_24E116990();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v55[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      v0[2] = sub_24E090400(0xD000000000000011, 0x800000024E118F80, v55);
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v15, v16, "%s called on WorkItem that was never enqueued!", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v18, -1, -1);
      MEMORY[0x2533338B0](v17, -1, -1);
    }

    type metadata accessor for WorkItemQueue.Error(0);
    sub_24E0EBD10(&qword_26B1AE650, (void (*)(uint64_t))type metadata accessor for WorkItemQueue.Error);
    swift_allocError();
    uint64_t v20 = v19;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 2, 2, v21);
    swift_willThrow();
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = (uint64_t (*)(void))v0[1];
    return v50();
  }
  uint64_t v44 = v0[8];
  uint64_t v45 = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult;
  v0[18] = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult;
  uint64_t v46 = v44 + v45;
  int v47 = *(unsigned __int8 *)(v46 + 8);
  if (v47 != 255)
  {
    if (v47)
    {
      uint64_t v49 = *(void **)v46;
      v0[4] = *(void *)v46;
      sub_24E0EB1F0(v49, 1);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
      swift_willThrowTypedImpl();
    }
    goto LABEL_27;
  }
  sub_24E0EBD10(&qword_26B1AFBC8, (void (*)(uint64_t))type metadata accessor for WorkItemQueue.WorkItem);
  int v48 = (void *)swift_task_alloc();
  v0[19] = v48;
  *int v48 = v0;
  v48[1] = sub_24E0E90FC;
  return MEMORY[0x270FA2318]();
}

uint64_t sub_24E0E8E8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0E8F9C, v1, 0);
}

uint64_t sub_24E0E8F9C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[16];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  type metadata accessor for WorkItemQueue.Error(0);
  sub_24E0EBD10(&qword_26B1AE650, (void (*)(uint64_t))type metadata accessor for WorkItemQueue.Error);
  swift_allocError();
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 2, v6);
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24E0E90FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0E920C, v1, 0);
}

uint64_t sub_24E0E920C()
{
  uint64_t v1 = v0[8] + v0[18];
  int v2 = *(unsigned __int8 *)(v1 + 8);
  if (v2 == 255)
  {
    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E115F00();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1B1308);
    uint64_t v4 = sub_24E115EE0();
    os_log_type_t v5 = sub_24E116990();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_24E083000, v4, v5, "Expected storedResult to be non-nil!", v6, 2u);
      MEMORY[0x2533338B0](v6, -1, -1);
    }

    sub_24E116680();
    sub_24E0EBD10((unint64_t *)&qword_26B1AE8E0, MEMORY[0x263F8F488]);
    swift_allocError();
    sub_24E116050();
    swift_willThrow();
  }
  else if (v2)
  {
    uint64_t v7 = *(void **)v1;
    v0[3] = *(void *)v1;
    sub_24E0EB1F0(v7, 1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
    swift_willThrowTypedImpl();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

unsigned char *sub_24E0E9440@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24E0E944C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E0954F0(a1, a2, (uint64_t *)&unk_26B1AFD48);
}

uint64_t sub_24E0E9480(uint64_t a1, uint64_t a2)
{
  void v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return MEMORY[0x270FA2498](sub_24E0E94A4, v2, 0);
}

uint64_t sub_24E0E94A4()
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2698B8848 + dword_2698B8848);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E0E956C;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  return v6((uint64_t)v6, v4, v2, (uint64_t)&unk_2698B8840, v3);
}

uint64_t sub_24E0E956C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0)
  {
    uint64_t v4 = sub_24E0E96A4;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_24E0A17E0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E0E96A4()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD30);
  if (swift_dynamicCast())
  {

    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E115F00();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1B1308);
    swift_retain_n();
    uint64_t v4 = sub_24E115EE0();
    os_log_type_t v5 = sub_24E116980();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = v15;
      *(_DWORD *)uint64_t v6 = 136446466;
      sub_24E115E00();
      sub_24E0EBD10(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v7 = sub_24E117040();
      *(void *)(v0 + 24) = sub_24E090400(v7, v8, &v16);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v6 + 12) = 2082;
      uint64_t v9 = sub_24E117310();
      *(void *)(v0 + 32) = sub_24E090400(v9, v10, &v16);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v4, v5, "Cancelling %{public}s after %{public}s timeout.", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v15, -1, -1);
      MEMORY[0x2533338B0](v6, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    int v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v13;
    *int v13 = v0;
    v13[1] = sub_24E0E9A14;
    uint64_t v14 = *(void *)(v0 + 56);
    v13[5] = v14;
    return MEMORY[0x270FA2498](sub_24E0E7DEC, v14, 0);
  }
  else
  {

    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_24E0E9A14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0E9B24, v1, 0);
}

uint64_t sub_24E0E9B24()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0E9B88()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E095558;
  return sub_24E0E8418();
}

uint64_t WorkItemQueue.WorkItem.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0E9C24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_id;
  uint64_t v4 = sub_24E115E00();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_24E0E9C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E115E00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E0954F0(a1, (uint64_t)v6, (uint64_t *)&unk_26B1AFD48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24E095494(a1, (uint64_t *)&unk_26B1AFD48);
    sub_24E095494((uint64_t)v6, (uint64_t *)&unk_26B1AFD48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    type metadata accessor for WorkItemQueue.Error(0);
    sub_24E0EBD10(&qword_26B1AE650, (void (*)(uint64_t))type metadata accessor for WorkItemQueue.Error);
    swift_allocError();
    uint64_t v13 = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v12, v10, v7);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 2, v14);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_24E0E9F44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  if (v6) {
    sub_24E0C5278(v6);
  }
  if (a2)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    *(void *)(v7 + 24) = a3;
    uint64_t v8 = &unk_2698B88C8;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  *a1 = (uint64_t)v8;
  a1[1] = v7;
  return sub_24E0C5268(a2);
}

void sub_24E0E9FD4(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = sub_24E115E00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    uint64_t v9 = a2 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_id;
    if (qword_26B1AE648 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24E115F00();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B1B1308);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
    uint64_t v11 = sub_24E115EE0();
    os_log_type_t v12 = sub_24E1169A0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v2;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v18 = v14 + 4;
      sub_24E0EBD10(&qword_26B1AE590, MEMORY[0x263F07508]);
      uint64_t v15 = sub_24E117040();
      uint64_t v21 = sub_24E090400(v15, v16, &v22);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl(&dword_24E083000, v11, v12, "Clearing willDeadlock since %{public}s completed and awaitCompletion can now successfully be called from any context.", v14, 0xCu);
      uint64_t v17 = v19;
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v17, -1, -1);
      MEMORY[0x2533338B0](v14, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  *a1 = 0;
}

uint64_t sub_24E0EA29C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC80);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = (void *)(v0 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_waiterContinuations);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v14 = (void *)(*v11 + 64);
  uint64_t v13 = *v14;
  uint64_t v36 = v11;
  unint64_t v37 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v13;
  uint64_t v39 = v2 + 16;
  uint64_t v40 = v2;
  uint64_t v41 = v12;
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v18 = (void (**)(char *, uint64_t))(v2 + 8);
  int64_t v38 = (unint64_t)(v15 + 63) >> 6;
  int64_t v35 = v38 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v43 = 0;
  if (!v17) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v43 << 6);
  while (2)
  {
    uint64_t v23 = v41;
    uint64_t v24 = *(void *)(v41 + 48);
    uint64_t v25 = sub_24E115E00();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v8, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v22, v25);
    uint64_t v26 = *(void *)(v23 + 56);
    uint64_t v27 = v40;
    uint64_t v28 = v26 + *(void *)(v40 + 72) * v22;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC78);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(&v8[*(int *)(v29 + 48)], v28, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 0, 1, v29);
    while (1)
    {
      sub_24E0EC068((uint64_t)v8, (uint64_t)v10);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC78);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v10, 1, v34) == 1)
      {
        swift_release();
        *uint64_t v36 = MEMORY[0x263F8EE80];
        return swift_bridgeObjectRelease();
      }
      (*v42)(v4, &v10[*(int *)(v34 + 48)], v1);
      sub_24E116660();
      (*v18)(v4, v1);
      uint64_t v20 = sub_24E115E00();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v10, v20);
      if (v17) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v30 = v43 + 1;
      if (__OFADD__(v43, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v30 < v38)
      {
        unint64_t v31 = v37[v30];
        if (v31) {
          goto LABEL_11;
        }
        int64_t v32 = v43 + 2;
        ++v43;
        if (v30 + 1 < v38)
        {
          unint64_t v31 = v37[v32];
          if (v31) {
            goto LABEL_14;
          }
          int64_t v43 = v30 + 1;
          if (v30 + 2 < v38)
          {
            unint64_t v31 = v37[v30 + 2];
            if (v31)
            {
              v30 += 2;
              goto LABEL_11;
            }
            int64_t v32 = v30 + 3;
            int64_t v43 = v30 + 2;
            if (v30 + 3 < v38) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC78);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
      unint64_t v17 = 0;
    }
    unint64_t v31 = v37[v32];
    if (v31)
    {
LABEL_14:
      int64_t v30 = v32;
LABEL_11:
      unint64_t v17 = (v31 - 1) & v31;
      unint64_t v22 = __clz(__rbit64(v31)) + (v30 << 6);
      int64_t v43 = v30;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v38)
    {
      int64_t v43 = v35;
      goto LABEL_25;
    }
    unint64_t v31 = v37[v30];
    ++v32;
    if (v31) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24E0EA75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancellationBlockNeeded);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v9 = v8;
  if (v7 != 1) {
    return sub_24E116660();
  }
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  uint64_t v11 = a2 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancelContinuation;
  swift_beginAccess();
  sub_24E0EC124((uint64_t)v6, v11);
  return swift_endAccess();
}

uint64_t sub_24E0EA8C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E115E00();
  MEMORY[0x270FA5388](v5 - 8);
  int v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E115DF0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v4, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  swift_beginAccess();
  sub_24E0925F0((uint64_t)v4, (uint64_t)v7);
  return swift_endAccess();
}

uint64_t sub_24E0EAA4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_24E115E00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - v11;
  if (sub_24E0CCB38(a2, *a1))
  {
    type metadata accessor for WorkItemQueue.Error(0);
    sub_24E0EBD10(&qword_26B1AE650, (void (*)(uint64_t))type metadata accessor for WorkItemQueue.Error);
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE668);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 2, v15);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
    sub_24E0CEBB0((uint64_t)v12, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    *a3 = *a1;
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24E0EAC3C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    sub_24E116660();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_24E095494(a1, &qword_26B1AFBA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
}

uint64_t sub_24E0EAD8C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  int v32 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(unsigned char *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled) = 0;
  uint64_t v13 = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_assocatedQueueIdentifier;
  uint64_t v14 = sub_24E115E00();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v12, 1, 1, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBD8);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + ((*(unsigned int *)(*(void *)v16 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_24E0954F0((uint64_t)v12, v16 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v16 + 16), (uint64_t *)&unk_26B1AFD48);
  sub_24E095494((uint64_t)v12, (uint64_t *)&unk_26B1AFD48);
  *(void *)(v6 + v13) = v16;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completionAlreadyCalled) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancellationBlockNeeded) = 1;
  uint64_t v17 = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancellationBlock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCE8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(_DWORD *)(v18 + 32) = 0;
  *(void *)(v6 + v17) = v18;
  uint64_t v19 = v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_cancelContinuation;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_storedResult;
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = -1;
  *(void *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_waiterContinuations) = MEMORY[0x263F8EE80];
  uint64_t v22 = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_visitedQueueIdentifiers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCE0);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x263F8EE88];
  *(_DWORD *)(v23 + 24) = 0;
  *(void *)(v23 + 16) = v24;
  *(void *)(v6 + v22) = v23;
  uint64_t v25 = OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_willDeadlock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFCD0);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 20) = 0;
  *(unsigned char *)(v26 + 16) = 0;
  *(void *)(v6 + v25) = v26;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_itemType) = v32;
  uint64_t v27 = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_id, v33, v14);
  uint64_t v28 = (void *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_block);
  *uint64_t v28 = v34;
  v28[1] = a4;
  uint64_t v29 = (uint64_t *)(v6 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_completion);
  *uint64_t v29 = a5;
  v29[1] = a6;
  swift_retain();
  sub_24E0C5268(a5);
  sub_24E0E7768();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v27, v14);
  return v6;
}

void sub_24E0EB118(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_24E0EB130(a1, a2 & 1);
  }
}

void sub_24E0EB130(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_24E0EB13C()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_24E095558;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_2698B8818 + dword_2698B8818);
  return v4(v2);
}

uint64_t sub_24E0EB1E8(uint64_t a1)
{
  return sub_24E0EA8C8(a1);
}

id sub_24E0EB1F0(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_24E0EB1FC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E095558;
  return sub_24E0E9B88();
}

uint64_t sub_24E0EB298()
{
  return sub_24E0EBD10((unint64_t *)&qword_26B1AFD60, MEMORY[0x263F07508]);
}

uint64_t sub_24E0EB2E0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_24E0EB334(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtCC10FindMyBase13WorkItemQueue8WorkItem_isCancelled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_24E0EB384()
{
  return type metadata accessor for WorkItemQueue.WorkItem();
}

void sub_24E0EB38C()
{
  sub_24E115E00();
  if (v0 <= 0x3F)
  {
    sub_24E0EB84C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for WorkItemQueue.WorkItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WorkItemQueue.WorkItem);
}

uint64_t dispatch thunk of WorkItemQueue.WorkItem.isCancelled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of WorkItemQueue.WorkItem.isCancelled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of WorkItemQueue.WorkItem.isCancelled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of WorkItemQueue.WorkItem.cancel()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 352) + **(int **)(*(void *)v0 + 352));
  char v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *char v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t dispatch thunk of WorkItemQueue.WorkItem.awaitCompletion()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 360) + **(int **)(*(void *)v0 + 360));
  char v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *char v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t dispatch thunk of WorkItemQueue.WorkItem.awaitCompletion(cancelAfter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 368) + **(int **)(*(void *)v2 + 368));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24E095558;
  return v8(a1, a2);
}

void sub_24E0EB84C()
{
  if (!qword_26B1AFBB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1AFBA0);
    unint64_t v0 = sub_24E116A90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1AFBB0);
    }
  }
}

uint64_t sub_24E0EB8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_24E095558;
  return sub_24E0E53A4(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_24E0EB970()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24E0EB9B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24E095558;
  return sub_24E0E5ABC(a1, v4, v5, v7, v6);
}

uint64_t sub_24E0EBA70()
{
  uint64_t v1 = sub_24E116E00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_24E116E20();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_24E0EBBC8()
{
  uint64_t v2 = *(void *)(sub_24E116E00() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_24E116E20() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + (v6 & ~v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_24E095114;
  void v9[5] = v7;
  v9[6] = v8;
  return MEMORY[0x270FA2498](sub_24E0E6EA4, 0, 0);
}

uint64_t sub_24E0EBD10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0EBD58(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24E095558;
  *(_OWORD *)(v4 + 40) = v6;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E0E6060, 0, 0);
}

void sub_24E0EBE10()
{
  sub_24E0E6BF8(*(os_unfair_lock_s **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_24E0EBE18(uint64_t a1)
{
  sub_24E0E6294(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24E0EBE24(uint64_t a1)
{
  return sub_24E0E637C(a1, *(void *)(v1 + 16));
}

uint64_t sub_24E0EBE40(uint64_t *a1)
{
  return sub_24E0E6440(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24E0EBE60()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24E0EBEA8()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_24E095114;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_24E0E6594, 0, 0);
}

uint64_t sub_24E0EBF5C(uint64_t a1)
{
  return sub_24E0E6A8C(a1, *(void **)(v1 + 16));
}

uint64_t sub_24E0EBF78(uint64_t a1)
{
  return sub_24E0EAC3C(a1);
}

uint64_t sub_24E0EBF94(uint64_t a1)
{
  long long v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_24E095558;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2698B88C0 + dword_2698B88C0);
  return v6(a1, v4);
}

void sub_24E0EC04C(unsigned char *a1)
{
  sub_24E0E9FD4(a1, *(void *)(v1 + 16));
}

uint64_t sub_24E0EC068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E0EC0D0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E0EC118(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24E0EC124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E0EC1A4(uint64_t *a1)
{
  return sub_24E0AC8DC(a1);
}

uint64_t MachServiceName.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FindMyBase::MachServiceName __swiftcall MachServiceName.init(_:)(FindMyBase::MachServiceName result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t MachServiceName.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24E116320();
  return swift_bridgeObjectRelease();
}

uint64_t static MachServiceName.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E1170B0();
  }
}

uint64_t MachServiceName.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0EC2D8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24E0EC308()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0EC364()
{
  swift_bridgeObjectRetain();
  sub_24E116320();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0EC3BC()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0EC414(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E1170B0();
  }
}

uint64_t XPCServiceDescription.init(name:exportedObject:exportedInterface:remoteObjectInterface:options:requiredEntitlement:shouldAccept:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = a1[1];
  *a9 = *a1;
  a9[1] = v15;
  a9[2] = a5;
  uint64_t result = sub_24E0EC6C4(a6, (uint64_t)(a9 + 6), &qword_26B1AFD10);
  a9[3] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[11] = a7;
  a9[12] = a8;
  return result;
}

double XPCServiceDescription.init(name:remoteObjectInterface:options:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  double result = 0.0;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(void *)a4 = v4;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = 0;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 88) = 0;
  *(void *)(a4 + 96) = 0;
  *(void *)(a4 + 80) = 0;
  return result;
}

uint64_t XPCServiceDescription.init(name:exportedObject:exportedInterface:options:requiredEntitlement:shouldAccept:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v13 = a1[1];
  *a8 = *a1;
  a8[1] = v13;
  a8[2] = a4;
  uint64_t result = sub_24E0EC6C4(a5, (uint64_t)(a8 + 6), &qword_26B1AFD10);
  a8[3] = a2;
  a8[4] = a3;
  a8[5] = 0;
  a8[11] = a6;
  a8[12] = a7;
  return result;
}

void XPCServiceDescription.init(connection:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_serviceName);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_24E1161F0();
    uint64_t v8 = v7;

    if (objc_msgSend(a1, sel_exportedObject))
    {
      sub_24E116BB0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v13, 0, sizeof(v13));
    }
    sub_24E0EC6C4((uint64_t)v13, (uint64_t)v14, &qword_26B1AEBD8);
    if (v15)
    {
      sub_24E0EC788();
      if (swift_dynamicCast()) {
        uint64_t v9 = v12;
      }
      else {
        uint64_t v9 = 0;
      }
    }
    else
    {
      sub_24E0EC728((uint64_t)v14);
      uint64_t v9 = 0;
    }
    id v10 = objc_msgSend(a1, sel_exportedInterface);
    id v11 = objc_msgSend(a1, sel_remoteObjectInterface);
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(void *)(a2 + 80) = 0;

    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = v10;
    *(void *)(a2 + 40) = v11;
    *(void *)(a2 + 88) = 0;
    *(void *)(a2 + 96) = 0;
  }
  else
  {

    *(void *)(a2 + 96) = 0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t sub_24E0EC6C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E0EC728(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24E0EC788()
{
  unint64_t result = qword_26B1AE5B0;
  if (!qword_26B1AE5B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B1AE5B0);
  }
  return result;
}

unint64_t sub_24E0EC7CC()
{
  unint64_t result = qword_26B1AEA70;
  if (!qword_26B1AEA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AEA70);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MachServiceName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MachServiceName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MachServiceName()
{
  return &type metadata for MachServiceName;
}

void destroy for XPCServiceDescription(uint64_t a1)
{
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  if (*(void *)(a1 + 88))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for XPCServiceDescription(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (void *)a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a2[5];
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a2 + 6;
  uint64_t v9 = a2[9];
  swift_bridgeObjectRetain();
  id v10 = v5;
  id v11 = v6;
  id v12 = v7;
  if (v9)
  {
    uint64_t v13 = a2[10];
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v13;
    (**(void (***)(uint64_t, void *, uint64_t))(v9 - 8))(a1 + 48, v8, v9);
  }
  else
  {
    long long v14 = *((_OWORD *)v8 + 1);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 64) = v14;
    *(void *)(a1 + 80) = v8[4];
  }
  uint64_t v15 = a2[11];
  if (v15)
  {
    uint64_t v16 = a2[12];
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  }
  return a1;
}

uint64_t assignWithCopy for XPCServiceDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 40);
  id v11 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  uint64_t v13 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v13)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else if (v13)
  {
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = v15;
LABEL_8:
  uint64_t v16 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v16)
    {
      uint64_t v18 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v16;
      *(void *)(a1 + 96) = v18;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v17 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for XPCServiceDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;

  uint64_t v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v10;
      *(void *)(a1 + 96) = v12;
      return a1;
    }
LABEL_9:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCServiceDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCServiceDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCServiceDescription()
{
  return &type metadata for XPCServiceDescription;
}

BOOL static DefaultStringInterpolation.BinaryIntegerRadix.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DefaultStringInterpolation.BinaryIntegerRadix.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t DefaultStringInterpolation.BinaryIntegerRadix.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:radix:padded:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  long long v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*v10 & 1) == 0)
  {
    if (v7)
    {
      uint64_t v16 = sub_24E116B80();
      uint64_t v26 = MEMORY[0x253332070](48, 0xE100000000000000, v16);
      unint64_t v27 = v17;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a4);
      sub_24E116430();
      sub_24E116370();
      swift_bridgeObjectRelease();
      uint64_t v13 = v26;
      unint64_t v14 = v27;
      unint64_t v15 = sub_24E116B80();
      goto LABEL_6;
    }
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a4);
    sub_24E116430();
    goto LABEL_8;
  }
  if ((v7 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_24E116B80();
  uint64_t v26 = MEMORY[0x253332070](48, 0xE100000000000000, v11 / 4);
  unint64_t v27 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a4);
  sub_24E116430();
  sub_24E116370();
  swift_bridgeObjectRelease();
  uint64_t v13 = v26;
  unint64_t v14 = v27;
  unint64_t v15 = sub_24E116B80() / 4;
LABEL_6:
  unint64_t v18 = sub_24E0ED2BC(v15, v13, v14);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  MEMORY[0x253331F40](v18, v20, v22, v24);
  swift_bridgeObjectRelease();
LABEL_8:
  sub_24E116370();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24E0ED2BC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  __n128 result = sub_24E116350();
  if (v4) {
    __n128 result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }
  return sub_24E116460();
}

unint64_t sub_24E0ED37C()
{
  unint64_t result = qword_2698B8900;
  if (!qword_2698B8900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8900);
  }
  return result;
}

unsigned char *_s18BinaryIntegerRadixOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0ED49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultStringInterpolation.BinaryIntegerRadix()
{
  return &type metadata for DefaultStringInterpolation.BinaryIntegerRadix;
}

uint64_t AsyncSequence<>.unique()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  return sub_24E0ED5B4((uint64_t)v8, a1, a2, a3);
}

uint64_t sub_24E0ED5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  v16[1] = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)v16 - v12;
  swift_getAssociatedTypeWitness();
  *a4 = sub_24E116060();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a2);
  sub_24E1167E0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  uint64_t v14 = type metadata accessor for UniqueAsyncSequence();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))((char *)a4 + *(int *)(v14 + 44), v13, AssociatedTypeWitness);
}

uint64_t AsyncSequence.unique<A>(by:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v5, a2);
  swift_retain();
  return sub_24E0ED8A8((uint64_t)v12, a1, a2, a3, a4, a5);
}

uint64_t sub_24E0ED8A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v11 = *a2;
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = *(void *)(*MEMORY[0x263F8EA20] + v11 + 8);
  uint64_t v19 = sub_24E116060();
  uint64_t v24 = a6;
  *(void *)a6 = a2;
  *((void *)a6 + 1) = v19;
  uint64_t v20 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v25, a3);
  sub_24E1167E0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, a3);
  uint64_t v27 = a3;
  uint64_t v28 = v18;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v21 = type metadata accessor for UniqueIndirectAsyncSequence();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(&v24[*(int *)(v21 + 56)], v17, AssociatedTypeWitness);
}

uint64_t UniqueAsyncSequence.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 24);
  void v3[6] = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(void *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_24E116A90();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0EDC68, 0, 0);
}

uint64_t sub_24E0EDC68()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  unsigned int v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[18] = v4;
  v0[19] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  sub_24E116790();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E0EDE5C;
  uint64_t v8 = v0[16];
  return MEMORY[0x270FA1E80](v8, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E0EDE5C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0EE3CC;
  }
  else {
    uint64_t v2 = sub_24E0EDF70;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0EDF70()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[8];
  uint64_t v41 = v0[7];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v2, v5);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v8(v2, v1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v41) == 1)
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[18];
    uint64_t v10 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[7];
    uint64_t v13 = v0[2];
    v7(v0[17], v11);
    v7(v10, v11);
    v9(v13, 1, 1, v12);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_8;
  }
  uint64_t v40 = v8;
  int64_t v38 = v7;
  uint64_t v14 = v0[11];
  uint64_t v15 = v0[12];
  uint64_t v16 = v0[7];
  uint64_t v17 = v0[8];
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v15, v0[15], v16);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v18(v14, v15, v16);
  char v19 = sub_24E1168D0();
  uint64_t v20 = v0[11];
  uint64_t v21 = v0[12];
  if ((v19 & 1) == 0)
  {
    uint64_t v37 = v0[13];
    uint64_t v39 = v0[17];
    uint64_t v35 = v0[12];
    uint64_t v26 = v0[10];
    uint64_t v28 = v0[7];
    uint64_t v27 = v0[8];
    uint64_t v36 = v0[2];
    v18(v0[9], v20, v28);
    sub_24E1168E0();
    sub_24E1168C0();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v29(v26, v28);
    v29(v20, v28);
    v29(v35, v28);
    v40(v36, v39, v37);
    goto LABEL_7;
  }
  uint64_t v22 = v0[21];
  uint64_t v23 = v0[7];
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0[8] + 8);
  v24(v0[11], v23);
  v24(v21, v23);
  sub_24E116790();
  if (v22)
  {
    v38(v0[17], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_8:
    return v25();
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v33 = (void *)swift_task_alloc();
  v0[20] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_24E0EDE5C;
  uint64_t v34 = v0[16];
  return MEMORY[0x270FA1E80](v34, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E0EE3CC()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[17], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E0EE4A0(uint64_t a1, uint64_t a2)
{
  return sub_24E0EF20C(a1, a2, (void (*)(void))UniqueAsyncSequence.makeAsyncIterator());
}

uint64_t sub_24E0EE4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095114;
  return UniqueAsyncSequence.next()(a1, a2);
}

uint64_t sub_24E0EE560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_24E0EE640;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_24E0EE640()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t _s10FindMyBase19UniqueAsyncSequenceV04makeE8IteratorACyxGyF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t UniqueIndirectAsyncSequence.next()(uint64_t a1, void *a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v5 = a2[3];
  v3[5] = v5;
  void v3[6] = *(void *)(v5 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v3[10] = a2[4];
  v3[11] = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[12] = AssociatedTypeWitness;
  v3[13] = *(void *)(AssociatedTypeWitness - 8);
  v3[14] = swift_task_alloc();
  uint64_t v7 = sub_24E116A90();
  v3[15] = v7;
  v3[16] = *(void *)(v7 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0EE968, 0, 0);
}

uint64_t sub_24E0EE968()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[20] = v4;
  v0[21] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  sub_24E116790();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[22] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24E0EEB5C;
  uint64_t v8 = v0[18];
  return MEMORY[0x270FA1E80](v8, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E0EEB5C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E0EF0DC;
  }
  else {
    uint64_t v2 = sub_24E0EEC70;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0EEC70()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  uint64_t v36 = v0[12];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v2, v5);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v8(v2, v1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v36) == 1)
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[20];
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[15];
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[2];
    v7(v0[19], v11);
    v7(v10, v11);
    v9(v13, 1, 1, v12);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    goto LABEL_8;
  }
  uint64_t v35 = v8;
  uint64_t v14 = v7;
  (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[17], v0[12]);
  swift_getAtKeyPath();
  char v15 = sub_24E1168D0();
  uint64_t v16 = v0[13];
  uint64_t v17 = v0[14];
  uint64_t v18 = v0[12];
  uint64_t v19 = v0[9];
  if ((v15 & 1) == 0)
  {
    uint64_t v33 = v0[15];
    uint64_t v34 = v0[19];
    uint64_t v32 = v0[12];
    uint64_t v22 = v0[8];
    uint64_t v24 = v0[5];
    uint64_t v23 = v0[6];
    uint64_t v31 = v0[2];
    (*(void (**)(void, uint64_t, uint64_t))(v23 + 16))(v0[7], v19, v24);
    sub_24E1168E0();
    sub_24E1168C0();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v25(v22, v24);
    v25(v19, v24);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v32);
    v35(v31, v34, v33);
    goto LABEL_7;
  }
  uint64_t v20 = v0[23];
  (*(void (**)(void, void))(v0[6] + 8))(v0[9], v0[5]);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  sub_24E116790();
  if (v20)
  {
    v14(v0[19], v0[15]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
LABEL_8:
    return v21();
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v29 = (void *)swift_task_alloc();
  v0[22] = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_24E0EEB5C;
  uint64_t v30 = v0[18];
  return MEMORY[0x270FA1E80](v30, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E0EF0DC()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[19], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E0EF1B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0EF1CC()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_24E0EF1D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E0EF1F4(uint64_t a1, uint64_t a2)
{
  return sub_24E0EF20C(a1, a2, (void (*)(void))UniqueIndirectAsyncSequence.makeAsyncIterator());
}

uint64_t sub_24E0EF20C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v5(v3, a1);
}

uint64_t sub_24E0EF270(uint64_t a1, void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095558;
  return UniqueIndirectAsyncSequence.next()(a1, a2);
}

uint64_t sub_24E0EF318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_24E0F0858;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_24E0EF3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24E0EF400()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E0EF4B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ~v6;
    uint64_t v13 = (char *)a1 + v6;
    uint64_t v14 = (char *)a2 + v6;
    uint64_t v15 = (unint64_t)(v13 + 8) & v12;
    uint64_t v16 = (unint64_t)(v14 + 8) & v12;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v17(v15, v16, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_24E0EF5D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return v4(v6, v5);
}

void *sub_24E0EF668(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, AssociatedTypeWitness);
  return a1;
}

void *sub_24E0EF724(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_24E0EF7D0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_24E0EF860(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24E0EF904(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v8 + 8) & ~v8) + v9;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0)
      {
        uint64_t v17 = *(uint64_t (**)(unint64_t))(v5 + 48);
        return v17(((unint64_t)a1 + v8 + 8) & ~v8);
      }
      else
      {
        uint64_t v16 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_24E0EFAF4(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x24E0EFD74);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          uint64_t v17 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
          v17((unint64_t)&a1[v8 + 8] & ~v8, a2);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v16 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v16 = (a2 - 1);
          }
          *(void *)a1 = v16;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for UniqueAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0EFDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24E0EFDBC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E0EFE7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 16) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    int v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v12 = *v13;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v16(v14, v15, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_24E0EFFC8(uint64_t a1)
{
  uint64_t v1 = a1 + 15;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = ((v1 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return v4(v6, v5);
}

void *sub_24E0F006C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v3 = *v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v3 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v4 + v8 + 8) & ~v8;
  swift_retain();
  swift_bridgeObjectRetain();
  v7(v9, v10, AssociatedTypeWitness);
  return a1;
}

void *sub_24E0F0144(void *a1, void *a2)
{
  unint64_t v3 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *(void *)(v3 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 8 + (v3 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_24E0F0220(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v3 = *v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v3 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_24E0F02CC(void *a1, void *a2)
{
  unint64_t v3 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v3 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v4 = *(void *)v3;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 8 + v3) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24E0F0390(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v8 + 16) & ~v8) + v9;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0)
      {
        uint64_t v17 = *(uint64_t (**)(unint64_t))(v5 + 48);
        return v17(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8);
      }
      else
      {
        uint64_t v16 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_24E0F058C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x24E0F0818);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          uint64_t v17 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
          v17((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8, a2);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v16 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v16 = (a2 - 1);
          }
          *(void *)a1 = v16;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for UniqueIndirectAsyncSequence()
{
  return swift_getGenericMetadata();
}

uint64_t DispatchTimer.isCancelled.getter()
{
  return sub_24E116A10() & 1;
}

uint64_t DispatchTimer.__allocating_init(deadline:repeating:leeway:queue:block:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v12 = swift_allocObject();
  DispatchTimer.init(deadline:repeating:leeway:queue:block:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t DispatchTimer.init(deadline:repeating:leeway:queue:block:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_24E115F30();
  uint64_t v79 = *(void *)(v14 - 8);
  uint64_t v80 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v78 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24E115F20();
  uint64_t v87 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v76 = (uint64_t *)((char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v67 - v19);
  uint64_t v83 = sub_24E115F70();
  uint64_t v21 = *(void *)(v83 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v83);
  uint64_t v77 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v86 = (char *)&v67 - v24;
  uint64_t v25 = sub_24E1169F0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v72 = (void *)sub_24E1169D0();
  uint64_t v70 = *(v72 - 1);
  MEMORY[0x270FA5388](v72);
  long long v71 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_24E1169C0();
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_24E115F50();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v82 = (char *)&v67 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 16) = 0x408F400000000000;
  double v35 = a4 * 1000.0;
  double v36 = fmin(v35, 2147483650.0);
  if ((~*(void *)&v36 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v36 <= -2147483650.0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v36 >= 2147483650.0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  a5 = a5 * 1000.0;
  *(_DWORD *)(v7 + 24) = (int)v36;
  double v37 = fmin(a5, 2147483650.0);
  if ((~*(void *)&v37 & 0x7FF0000000000000) == 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v37 <= -2147483650.0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v37 >= 2147483650.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  a6 = a6 * 1000.0;
  *(_DWORD *)(v7 + 28) = (int)v37;
  double v38 = fmin(a6, 2147483650.0);
  if ((~*(void *)&v38 & 0x7FF0000000000000) == 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v38 <= -2147483650.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v38 >= 2147483650.0)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v73 = v26;
  uint64_t v74 = v33;
  uint64_t v75 = v32;
  *(_DWORD *)(v7 + 32) = (int)v38;
  uint64_t v84 = v7;
  uint64_t v85 = v21;
  uint64_t v81 = a3;
  if (v35 <= 2147483650.0 && a5 <= 2147483650.0 && a6 <= 2147483650.0) {
    goto LABEL_17;
  }
  uint64_t v67 = (uint64_t)a1;
  if (qword_2698B7950 != -1) {
    goto LABEL_33;
  }
LABEL_14:
  uint64_t v39 = sub_24E115F00();
  __swift_project_value_buffer(v39, (uint64_t)qword_2698BFAE8);
  uint64_t v40 = sub_24E115EE0();
  os_log_type_t v41 = sub_24E116980();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134218752;
    aBlock[0] = 0x41DFFFFFFFC00000;
    sub_24E116AB0();
    *(_WORD *)(v42 + 12) = 2048;
    *(double *)aBlock = v35;
    sub_24E116AB0();
    *(_WORD *)(v42 + 22) = 2048;
    *(double *)aBlock = a5;
    sub_24E116AB0();
    *(_WORD *)(v42 + 32) = 2048;
    *(double *)aBlock = a6;
    a3 = v81;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v40, v41, "DispatchTimer: Exceeded maximum value of %f: deadline: %f, repeating: %f, leeway: %f", (uint8_t *)v42, 0x2Au);
    uint64_t v43 = v42;
    uint64_t v7 = v84;
    MEMORY[0x2533338B0](v43, -1, -1);
  }

  a1 = (void *)v67;
LABEL_17:
  *(void *)(v7 + 48) = a2;
  *(void *)(v7 + 56) = a3;
  uint64_t v44 = MEMORY[0x263F8EE78];
  if (a1)
  {
    swift_retain();
    uint64_t v45 = a1;
  }
  else
  {
    uint64_t v67 = sub_24E0DD13C(0, &qword_2698B8A40);
    swift_retain();
    sub_24E115F40();
    aBlock[0] = v44;
    sub_24E0F1878(&qword_2698B8A48, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8A50);
    sub_24E0F18C0(&qword_2698B8A58, &qword_2698B8A50);
    sub_24E116BE0();
    (*(void (**)(char *, void, void *))(v70 + 104))(v71, *MEMORY[0x263F8F130], v72);
    uint64_t v44 = MEMORY[0x263F8EE78];
    a1 = 0;
    uint64_t v45 = (void *)sub_24E1169E0();
  }
  uint64_t v46 = v84;
  *(void *)(v84 + 64) = v45;
  sub_24E0DD13C(0, &qword_26B1AE750);
  aBlock[0] = v44;
  sub_24E0F1878(&qword_26B1AE798, MEMORY[0x263F8F148]);
  int64_t v72 = a1;
  long long v71 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE780);
  sub_24E0F18C0((unint64_t *)&unk_26B1AE788, &qword_26B1AE780);
  sub_24E116BE0();
  uint64_t v47 = sub_24E116A00();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v28, v25);
  *(void *)(v46 + 40) = v47;
  int v48 = v77;
  sub_24E115F60();
  void *v20 = *(int *)(v46 + 24);
  uint64_t v49 = *MEMORY[0x263F8F000];
  uint64_t v50 = v87;
  uint64_t v51 = *(void (**)(void *, uint64_t, uint64_t))(v87 + 104);
  v51(v20, v49, v16);
  MEMORY[0x253331BD0](v48, v20);
  uint64_t v52 = v20;
  uint64_t v53 = v20;
  uint64_t v54 = v16;
  uint64_t v73 = *(void *)(v50 + 8);
  ((void (*)(void *, uint64_t))v73)(v53, v16);
  os_log_t v55 = *(char **)(v85 + 8);
  v85 += 8;
  uint64_t v77 = v55;
  ((void (*)(char *, uint64_t))v55)(v48, v83);
  uint64_t v56 = *(unsigned int *)(v46 + 28);
  if ((int)v56 < 1)
  {
    uint64_t v58 = *MEMORY[0x263F8F010];
    uint64_t v57 = v76;
  }
  else
  {
    uint64_t v57 = v76;
    void *v76 = v56;
    uint64_t v58 = v49;
  }
  v51(v57, v58, v16);
  uint64_t v59 = v84;
  uint64_t ObjectType = swift_getObjectType();
  *uint64_t v52 = *(int *)(v59 + 32);
  v51(v52, v49, v16);
  MEMORY[0x2533326A0](v86, v57, v52, ObjectType);
  uint64_t v87 = v50 + 8;
  uint64_t v61 = (void (*)(void *, uint64_t))v73;
  ((void (*)(void *, uint64_t))v73)(v52, v16);
  swift_getObjectType();
  uint64_t v62 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_24E0F15A8;
  aBlock[5] = v62;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24E0F15B0;
  aBlock[3] = &block_descriptor;
  uint64_t v63 = _Block_copy(aBlock);
  swift_retain();
  int v64 = v82;
  sub_24E115F40();
  uint64_t v65 = v78;
  sub_24E0F160C();
  sub_24E116A20();
  _Block_release(v63);

  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v80);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v75);
  v61(v57, v54);
  ((void (*)(char *, uint64_t))v77)(v86, v83);
  swift_release();
  swift_release();
  return v59;
}

uint64_t sub_24E0F14F8()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E0F1530()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(result + 48);
    swift_retain();
    uint64_t v2 = swift_release();
    v1(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_24E0F15A8()
{
  return sub_24E0F1530();
}

uint64_t sub_24E0F15B0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_24E0F160C()
{
  return sub_24E116BE0();
}

Swift::Void __swiftcall DispatchTimer.resume()()
{
}

Swift::Void __swiftcall DispatchTimer.cancel()()
{
}

uint64_t DispatchTimer.deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  return v0;
}

uint64_t DispatchTimer.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24E0F17A4()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_2698BFAE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698BFAE8);
  return sub_24E115EF0();
}

uint64_t type metadata accessor for DispatchTimer()
{
  return self;
}

uint64_t method lookup function for DispatchTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DispatchTimer);
}

uint64_t dispatch thunk of DispatchTimer.__allocating_init(deadline:repeating:leeway:queue:block:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_24E0F1878(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E0F18C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DateParsingStrategy.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t DateParsingStrategy.Error.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t DateParsingStrategy.Error.hashValue.getter()
{
  return sub_24E1171F0();
}

id sub_24E0F1988(uint64_t a1)
{
  return sub_24E0F19A8(a1, 3955, &qword_2698B8A60);
}

id sub_24E0F1998(uint64_t a1)
{
  return sub_24E0F19A8(a1, 1907, &qword_2698B8A68);
}

id sub_24E0F19A8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  id result = objc_msgSend(v5, sel_setFormatOptions_, a2);
  *a3 = v5;
  return result;
}

void sub_24E0F1A04()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  uint64_t v1 = (void *)sub_24E1161C0();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_2698B8A70 = (uint64_t)v0;
}

uint64_t DateParsingStrategy.parse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v5 = sub_24E115D80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v43 = (char *)&v39 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v39 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v45 = (char *)&v39 - v18;
  if (qword_2698B7960 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_2698B8A68;
  uint64_t v46 = a1;
  uint64_t v20 = (void *)sub_24E1161C0();
  id v21 = objc_msgSend(v19, sel_dateFromString_, v20);

  os_log_type_t v41 = v12;
  uint64_t v44 = a2;
  if (v21)
  {
    sub_24E115D50();

    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v22(v17, v8, v5);
    uint64_t v23 = v6;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v24(v17, 0, 1, v5);
    uint64_t v40 = v23;
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v25(v17, 1, v5) != 1)
    {
      uint64_t v32 = (uint64_t)v45;
      v22(v45, v17, v5);
      v24((char *)v32, 0, 1, v5);
      uint64_t v6 = v40;
      goto LABEL_21;
    }
    uint64_t v26 = v24;
    uint64_t v6 = v40;
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v26(v17, 1, 1, v5);
  }
  if (qword_2698B7958 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_2698B8A60;
  uint64_t v28 = (void *)sub_24E1161C0();
  id v29 = objc_msgSend(v27, sel_dateFromString_, v28);

  if (!v29)
  {
    uint64_t v31 = (uint64_t)v43;
    v26(v43, 1, 1, v5);
    goto LABEL_14;
  }
  sub_24E115D50();

  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v31 = (uint64_t)v43;
  v30(v43, v8, v5);
  v26((char *)v31, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v31, 1, v5) == 1)
  {
LABEL_14:
    if (qword_2698B7968 != -1) {
      swift_once();
    }
    uint64_t v33 = (void *)qword_2698B8A70;
    uint64_t v34 = (void *)sub_24E1161C0();
    id v35 = objc_msgSend(v33, sel_dateFromString_, v34);

    uint64_t v36 = (uint64_t)v41;
    if (v35)
    {
      sub_24E115D50();

      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v37 = 1;
    }
    uint64_t v32 = (uint64_t)v45;
    v26((char *)v36, v37, 1, v5);
    sub_24E0F2004(v36, v32);
    sub_24E0C53C0(v31);
    goto LABEL_20;
  }
  uint64_t v32 = (uint64_t)v45;
  v30(v45, (char *)v31, v5);
  v26((char *)v32, 0, 1, v5);
LABEL_20:
  sub_24E0C53C0((uint64_t)v17);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
LABEL_21:
  if (v25((char *)v32, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v42, v32, v5);
  }
  sub_24E0C53C0(v32);
  sub_24E0F206C();
  uint64_t v47 = swift_allocError();
  return swift_willThrow();
}

uint64_t sub_24E0F2004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E0F206C()
{
  unint64_t result = qword_2698B8A78;
  if (!qword_2698B8A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8A78);
  }
  return result;
}

uint64_t static DateParsingStrategy.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_24E0F20CC(uint64_t a1)
{
  unint64_t v2 = sub_24E0F2254();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F2108(uint64_t a1)
{
  unint64_t v2 = sub_24E0F2254();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DateParsingStrategy.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8A80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0F2254();
  sub_24E117240();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24E0F2254()
{
  unint64_t result = qword_2698B8A88;
  if (!qword_2698B8A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8A88);
  }
  return result;
}

uint64_t DateParsingStrategy.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t DateParsingStrategy.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24E0F2308@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return DateParsingStrategy.parse(_:)(*a1, a1[1], a2);
}

uint64_t sub_24E0F2328(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8A80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0F2254();
  sub_24E117240();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24E0F243C()
{
  unint64_t result = qword_2698B8A90;
  if (!qword_2698B8A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8A90);
  }
  return result;
}

unint64_t sub_24E0F2494()
{
  unint64_t result = qword_2698B8A98;
  if (!qword_2698B8A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8A98);
  }
  return result;
}

unint64_t sub_24E0F24EC()
{
  unint64_t result = qword_2698B8AA0;
  if (!qword_2698B8AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8AA0);
  }
  return result;
}

unint64_t sub_24E0F2544()
{
  unint64_t result = qword_2698B8AA8;
  if (!qword_2698B8AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8AA8);
  }
  return result;
}

unint64_t sub_24E0F259C()
{
  unint64_t result = qword_2698B8AB0;
  if (!qword_2698B8AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8AB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DateParsingStrategy()
{
  return &type metadata for DateParsingStrategy;
}

unsigned char *storeEnumTagSinglePayload for DateParsingStrategy.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0F269CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateParsingStrategy.Error()
{
  return &type metadata for DateParsingStrategy.Error;
}

ValueMetadata *type metadata accessor for DateParsingStrategy.CodingKeys()
{
  return &type metadata for DateParsingStrategy.CodingKeys;
}

unint64_t sub_24E0F26E8()
{
  unint64_t result = qword_2698B8AB8;
  if (!qword_2698B8AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8AB8);
  }
  return result;
}

unint64_t sub_24E0F2740()
{
  unint64_t result = qword_2698B8AC0;
  if (!qword_2698B8AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2698B8AC0);
  }
  return result;
}

uint64_t static FM.XPCSession.== infix(_:_:)()
{
  return _s10FindMyBase10IdentifierV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t sub_24E0F27A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24E106ECC(a1, a2);
  unint64_t v4 = v3;
  unint64_t v6 = v3;
  sub_24E08D248(v2, v3);
  sub_24E115CA0();
  sub_24E08D0B0(v2, v4);
  sub_24E115BE0();
  sub_24E115CA0();
  sub_24E115BE0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115CA0();
  sub_24E115DD0();
  return sub_24E08D0B0(v2, v6);
}

uint64_t FM.XPCSession.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_26B1B1410;
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FM.XPCSession.service.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E0F2A78(v1 + qword_26B1B1418, a1);
}

uint64_t sub_24E0F2A78(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24E0F2AD4(uint64_t a1)
{
  *(void *)(v1 + qword_26B1AFB40) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t sub_24E0F2AE8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v0, 0);
}

uint64_t sub_24E0F2B08()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + qword_26B1AFB40);
  if (v2)
  {
    id v3 = *(id *)(v1 + qword_26B1AFB40);
  }
  else
  {
    uint64_t v4 = (void *)(v1 + qword_26B1B1418);
    uint64_t v5 = *(void *)(v1 + qword_26B1B1418 + 16);
    id v6 = objc_allocWithZone(MEMORY[0x263F08D68]);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_24E1161C0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, v5);

    objc_msgSend(v8, sel_setExportedInterface_, v4[4]);
    objc_msgSend(v8, sel_setExportedObject_, v4[3]);
    objc_msgSend(v8, sel_setRemoteObjectInterface_, v4[5]);
    uint64_t v9 = *(void **)(v1 + qword_26B1AFB40);
    *(void *)(v1 + qword_26B1AFB40) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  uint64_t v12 = *(uint64_t (**)(id))(v0 + 8);
  id v10 = v2;
  return v12(v3);
}

uint64_t FM.XPCSession.__allocating_init(service:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  FM.XPCSession.init(service:)(a1);
  return v2;
}

uint64_t FM.XPCSession.init(service:)(uint64_t a1)
{
  uint64_t v3 = sub_24E115E00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(void *)(v1 + qword_26B1AFB40) = 0;
  sub_24E115DF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + qword_26B1B1410, v6, v3);
  uint64_t v7 = v1 + qword_26B1B1418;
  long long v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v7 + 80) = v8;
  *(void *)(v7 + 96) = *(void *)(a1 + 96);
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v9;
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 48) = v10;
  return v1;
}

uint64_t FM.XPCSession.__allocating_init(connection:)(void *a1)
{
  return FM.XPCSession.init(connection:)(a1);
}

uint64_t FM.XPCSession.init(connection:)(void *a1)
{
  uint64_t v3 = sub_24E115E00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(void *)(v1 + qword_26B1AFB40) = 0;
  id v7 = a1;
  id v8 = objc_msgSend(v7, sel_serviceName);
  if (v8)
  {
    long long v9 = v8;
    uint64_t v10 = sub_24E1161F0();
    uint64_t v12 = v11;

    if (objc_msgSend(v7, sel_exportedObject))
    {
      sub_24E116BB0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v20, 0, sizeof(v20));
    }
    sub_24E0F4D88((uint64_t)v20, (uint64_t)v21);
    if (v22)
    {
      sub_24E0EC788();
      if (swift_dynamicCast()) {
        uint64_t v13 = v19[1];
      }
      else {
        uint64_t v13 = 0;
      }
    }
    else
    {
      sub_24E0EC728((uint64_t)v21);
      uint64_t v13 = 0;
    }
    id v14 = objc_msgSend(v7, sel_exportedInterface);
    id v15 = objc_msgSend(v7, sel_remoteObjectInterface);

    sub_24E115DF0();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + qword_26B1B1410, v6, v3);
    uint64_t v16 = v1 + qword_26B1B1418;
    *(void *)uint64_t v16 = v10;
    *(void *)(v16 + 8) = v12;
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = v13;
    *(void *)(v16 + 32) = v14;
    *(void *)(v16 + 40) = v15;
    *(_OWORD *)(v16 + 48) = 0u;
    *(_OWORD *)(v16 + 64) = 0u;
    *(_OWORD *)(v16 + 80) = 0u;
    *(void *)(v16 + 96) = 0;
    uint64_t v17 = *(void **)(v1 + qword_26B1AFB40);
    *(void *)(v1 + qword_26B1AFB40) = v7;
  }
  else
  {

    type metadata accessor for FM.XPCSession();
    swift_defaultActor_destroy();

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t FM.XPCSession.deinit()
{
  uint64_t v1 = v0;
  if (qword_26B1AEC80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E115F00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1B1398);
  swift_retain_n();
  uint64_t v3 = sub_24E115EE0();
  os_log_type_t v4 = sub_24E116970();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for FM.XPCSession();
    swift_retain();
    uint64_t v7 = sub_24E116290();
    sub_24E090400(v7, v8, &v15);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v3, v4, "Deallocating %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = qword_26B1AFB40;
  uint64_t v10 = *(void **)(v1 + qword_26B1AFB40);
  if (v10)
  {
    objc_msgSend(v10, sel_invalidate);
    uint64_t v11 = *(void **)(v1 + v9);
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)(v1 + v9) = 0;

  uint64_t v12 = v1 + qword_26B1B1410;
  uint64_t v13 = sub_24E115E00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  sub_24E0F4DF0(v1 + qword_26B1B1418);

  swift_defaultActor_destroy();
  return v1;
}

uint64_t FM.XPCSession.__deallocating_deinit()
{
  FM.XPCSession.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E0F3388(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[5] = v3;
  void *v3 = v2;
  v3[1] = sub_24E0F345C;
  v3[2] = v1;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v1, 0);
}

uint64_t sub_24E0F345C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F35A0, v2, 0);
}

uint64_t sub_24E0F35A0()
{
  uint64_t v1 = (void *)v0[6];
  v0[2] = v1;
  uint64_t v2 = sub_24E089078((uint64_t)(v0 + 2), (uint64_t)(v0 + 3));
  unint64_t v4 = v3;
  sub_24E0F27A8(v2, v3);
  sub_24E08D0B0(v2, v4);

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24E0F366C(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_24E115E00();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  unint64_t v4 = (void *)swift_task_alloc();
  v2[10] = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_24E0F37B4;
  uint64_t v4[2] = v1;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v1, 0);
}

uint64_t sub_24E0F37B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F38F8, v2, 0);
}

uint64_t sub_24E0F38F8()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v16 = v0[6];
  uint64_t v5 = v0[4];
  v0[2] = v1;
  uint64_t v6 = sub_24E089078((uint64_t)(v0 + 2), (uint64_t)(v0 + 3));
  unint64_t v8 = v7;
  sub_24E0F27A8(v6, v7);
  sub_24E08D0B0(v6, v8);

  v0[3] = v5;
  uint64_t v9 = sub_24E089078((uint64_t)(v0 + 3), (uint64_t)(v0 + 4));
  unint64_t v11 = v10;
  sub_24E0F27A8(v9, v10);
  sub_24E08D0B0(v9, v11);
  char MyBase10IdentifierV2eeoiySbACyxG_AEtFZ_0 = _s10FindMyBase10IdentifierV2eeoiySbACyxG_AEtFZ_0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(v3, v16);
  v13(v2, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14(MyBase10IdentifierV2eeoiySbACyxG_AEtFZ_0 & 1);
}

uint64_t sub_24E0F3A68()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E0F3B10;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v0, 0);
}

uint64_t sub_24E0F3B10(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F3C28, v2, 0);
}

uint64_t sub_24E0F3C28()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_resume);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E0F3C98()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E0F3D40;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v0, 0);
}

uint64_t sub_24E0F3D40(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F3E58, v2, 0);
}

uint64_t sub_24E0F3E58()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_suspend);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E0F3EC8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095114;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_24E0F4870, v0, 0);
}

uint64_t sub_24E0F3F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = *(void *)(*(void *)v3 + 80);
  uint64_t v5 = sub_24E116A90();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[20] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_24E0F408C;
  v6[2] = v3;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v3, 0);
}

uint64_t sub_24E0F408C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F41A4, v2, 0);
}

uint64_t sub_24E0F41A4()
{
  id v1 = objc_msgSend((id)v0[21], sel_remoteObjectInterface);

  if (v1)
  {
    uint64_t v2 = (void *)v0[21];
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[14];
    v0[6] = v0[13];
    v0[7] = v4;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_24E0F4428;
    v0[5] = &block_descriptor_0;
    uint64_t v5 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    id v6 = objc_msgSend(v2, sel_remoteObjectProxyWithErrorHandler_, v5);
    _Block_release(v5);
    sub_24E116BB0();
    swift_unknownObjectRelease();
    int v7 = swift_dynamicCast();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    if (v7)
    {
      uint64_t v9 = *(void *)(v3 - 8);
      unint64_t v10 = (void *)v0[21];
      uint64_t v11 = v0[19];
      uint64_t v12 = v0[16];
      uint64_t v13 = v0[12];
      v8(v11, 0, 1, v12);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v13, v11, v12);
      swift_task_dealloc();
      id v14 = (uint64_t (*)(void))v0[1];
      goto LABEL_7;
    }
    uint64_t v17 = v0[18];
    uint64_t v16 = v0[19];
    uint64_t v18 = v0[17];
    char v15 = 1;
    v8(v16, 1, 1, v0[16]);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  else
  {
    char v15 = 0;
  }
  sub_24E0F4E44();
  swift_allocError();
  uint64_t v19 = (void *)v0[21];
  char *v20 = v15;
  swift_willThrow();

  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v14();
}

void sub_24E0F4428(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_24E0F4490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = *v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[17] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24E0F4564;
  v5[2] = v3;
  return MEMORY[0x270FA2498](sub_24E0F2B08, v3, 0);
}

uint64_t sub_24E0F4564(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F467C, v2, 0);
}

uint64_t sub_24E0F467C()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  v0[6] = v0[13];
  v0[7] = v3;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_24E0F4428;
  v0[5] = &block_descriptor_10;
  uint64_t v5 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  id v6 = objc_msgSend(v1, sel_synchronousRemoteObjectProxyWithErrorHandler_, v5);
  _Block_release(v5);

  sub_24E116BB0();
  swift_unknownObjectRelease();
  uint64_t v7 = *(void *)(v2 + 80);
  int v8 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, v8 ^ 1u, 1, v7);
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_24E0F4800()
{
  objc_msgSend(*(id *)(v0 + qword_26B1AFB40), sel_invalidate);
  uint64_t v1 = *(void **)(v0 + qword_26B1AFB40);
  *(void *)(v0 + qword_26B1AFB40) = 0;
}

uint64_t sub_24E0F4850()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24E0F4870, v0, 0);
}

uint64_t sub_24E0F4870()
{
  uint64_t v1 = *(void *)(v0 + 16);
  objc_msgSend(*(id *)(v1 + qword_26B1AFB40), sel_invalidate);
  uint64_t v2 = *(void **)(v1 + qword_26B1AFB40);
  *(void *)(v1 + qword_26B1AFB40) = 0;

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t FM.XPCSession.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0F4900()
{
  return FM.XPCSession.unownedExecutor.getter();
}

uint64_t FM.XPCSession.hash(into:)()
{
  return sub_24E116130();
}

uint64_t FM.XPCSession.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0F49B0()
{
  return FM.XPCSession.hashValue.getter();
}

uint64_t sub_24E0F49D4()
{
  return FM.XPCSession.hash(into:)();
}

uint64_t sub_24E0F49F8()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0F4A38()
{
  return static FM.XPCSession.== infix(_:_:)() & 1;
}

uint64_t static XPCSessionError.== infix(_:_:)()
{
  return 1;
}

uint64_t XPCSessionError.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t XPCSessionError.hashValue.getter()
{
  return sub_24E1171F0();
}

void NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C0]), sel_init);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE598);
      objc_msgSend(v2, sel_addObject_, sub_24E117110());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  id v5 = v2;
  sub_24E1168A0();

  sub_24E116EC0();
  __break(1u);
}

uint64_t NSXPCConnection.shortDescription.getter()
{
  return 60;
}

uint64_t type metadata accessor for FM.XPCSession()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0F4D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E0F4DF0(uint64_t a1)
{
  return a1;
}

unint64_t sub_24E0F4E44()
{
  unint64_t result = qword_2698B8B08;
  if (!qword_2698B8B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8B08);
  }
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_24E0F4EB0()
{
  unint64_t result = qword_26B1AFD60;
  if (!qword_26B1AFD60)
  {
    sub_24E115E00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AFD60);
  }
  return result;
}

uint64_t sub_24E0F4F08()
{
  return swift_getWitnessTable();
}

unint64_t sub_24E0F4F28()
{
  unint64_t result = qword_2698B8B18;
  if (!qword_2698B8B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8B18);
  }
  return result;
}

ValueMetadata *type metadata accessor for FM()
{
  return &type metadata for FM;
}

uint64_t sub_24E0F4F8C()
{
  uint64_t result = sub_24E115E00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FM.XPCSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FM.XPCSession);
}

uint64_t dispatch thunk of FM.XPCSession.connection.getter()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 144) + **(int **)(*(void *)v0 + 144));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E087974;
  return v4();
}

uint64_t dispatch thunk of FM.XPCSession.__allocating_init(service:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of FM.XPCSession.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 168) + **(int **)(*(void *)v1 + 168));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E095558;
  return v6(a1);
}

uint64_t dispatch thunk of FM.XPCSession.represents(underlyingConnection:)(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E087974;
  return v6(a1);
}

uint64_t dispatch thunk of FM.XPCSession.resume()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 184) + **(int **)(*(void *)v0 + 184));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t dispatch thunk of FM.XPCSession.suspend()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 192) + **(int **)(*(void *)v0 + 192));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t dispatch thunk of FM.XPCSession.invalidate()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 200) + **(int **)(*(void *)v0 + 200));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E095558;
  return v4();
}

uint64_t dispatch thunk of FM.XPCSession.proxy(errorHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 208)
                                                          + **(int **)(*(void *)v3 + 208));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *int v8 = v4;
  v8[1] = sub_24E095114;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of FM.XPCSession.syncProxy(errorHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 216)
                                                          + **(int **)(*(void *)v3 + 216));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *int v8 = v4;
  v8[1] = sub_24E095558;
  return v10(a1, a2, a3);
}

unsigned char *storeEnumTagSinglePayload for XPCSessionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E0F5934);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCSessionError()
{
  return &type metadata for XPCSessionError;
}

uint64_t sub_24E0F5974(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x616E65746E69616DLL;
  }
  else {
    uint64_t v3 = 0x7974696C697475;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEB0000000065636ELL;
  }
  if (a2) {
    uint64_t v5 = 0x616E65746E69616DLL;
  }
  else {
    uint64_t v5 = 0x7974696C697475;
  }
  if (a2) {
    unint64_t v6 = 0xEB0000000065636ELL;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24E1170B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24E0F5A24()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1380);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1380);
  if (qword_26B1AE840 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1350);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t XPCActivity.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCActivity.__allocating_init(name:qos:criteriaBlock:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a5;
  v7[4] = a7;
  void v7[2] = a3;
  uint64_t v14 = swift_allocObject();
  void v7[5] = v14;
  swift_defaultActor_initialize();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v14 + 168) = 0;
  *(void *)(v14 + 176) = 0;
  *(void *)(v14 + 184) = 0;
  *(void *)(v14 + 112) = a1;
  *(void *)(v14 + 120) = a2;
  *(void *)(v14 + 128) = a4;
  *(void *)(v14 + 136) = a5;
  *(void *)(v14 + 144) = a6;
  *(void *)(v14 + 152) = a7;
  swift_retain();
  swift_retain();
  char v15 = (void *)swift_task_alloc();
  v7[6] = v15;
  *char v15 = v7;
  v15[1] = sub_24E0F5C4C;
  v15[8] = v14;
  return MEMORY[0x270FA2498](sub_24E0F6040, v14, 0);
}

uint64_t sub_24E0F5C4C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24E115F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  unint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  uint64_t v5 = *(void *)(v1 + 40);
  return v4(v5);
}

uint64_t XPCActivity.init(name:qos:criteriaBlock:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2698B8B78
                                                                                              + dword_2698B8B78);
  void v7[2] = a5;
  v7[3] = a7;
  char v15 = (void *)swift_task_alloc();
  v7[4] = v15;
  *char v15 = v7;
  v15[1] = sub_24E0F5EE4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_24E0F5EE4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_24E0F6020()
{
  *(void *)(v1 + 64) = v0;
  return MEMORY[0x270FA2498](sub_24E0F6040, v0, 0);
}

uint64_t sub_24E0F6040(uint64_t a1)
{
  if ((_s10FindMyBase10SystemInfoO9underTestSbvgZ_0(a1) & 1) == 0)
  {
    uint64_t v2 = v1[8];
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    uint64_t v4 = *(void *)(v2 + 176);
    *(void *)(v2 + 176) = sub_24E0FC1B4;
    *(void *)(v2 + 184) = v3;
    swift_retain();
    sub_24E0C5278(v4);
    uint64_t v5 = (void *)*MEMORY[0x263EF8188];
    v1[6] = sub_24E0FC1B4;
    v1[7] = v3;
    v1[2] = MEMORY[0x263EF8330];
    v1[3] = 1107296256;
    v1[4] = sub_24E0F8EF8;
    v1[5] = &block_descriptor_1;
    uint64_t v6 = _Block_copy(v1 + 2);
    swift_retain();
    swift_release();
    uint64_t v7 = sub_24E1162D0();
    xpc_activity_register((const char *)(v7 + 32), v5, v6);
    swift_release();
    _Block_release(v6);
    swift_release();
  }
  uint64_t v8 = (uint64_t (*)(void))v1[1];
  return v8();
}

uint64_t sub_24E0F61B8()
{
  return 60;
}

void sub_24E0F62FC(unsigned char *a1@<X8>)
{
  uint64_t v3 = (_xpc_activity_s *)MEMORY[0x2533339C0](v1 + 160);
  if (v3)
  {
    xpc_activity_state_t state = xpc_activity_get_state(v3);
    sub_24E0F651C(state, a1);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26B1AE7C0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24E115F00();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B1B1380);
    swift_retain_n();
    uint64_t v6 = sub_24E115EE0();
    os_log_type_t v7 = sub_24E116980();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_retain();
      uint64_t v10 = sub_24E0F61B8();
      unint64_t v12 = v11;
      swift_release();
      sub_24E090400(v10, v12, &v13);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24E083000, v6, v7, "%{public}s: state called on invalidated XPCActivity", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v9, -1, -1);
      MEMORY[0x2533338B0](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    *a1 = 0;
  }
}

unint64_t sub_24E0F651C@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 6)
  {
    sub_24E116C70();
    swift_bridgeObjectRelease();
    sub_24E117040();
    sub_24E116370();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24E116EC0();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

BOOL sub_24E0F65F0()
{
  uint64_t v1 = (_xpc_activity_s *)MEMORY[0x2533339C0](v0 + 160);
  if (v1)
  {
    BOOL should_defer = xpc_activity_should_defer(v1);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26B1AE7C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24E115F00();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1B1380);
    swift_retain_n();
    uint64_t v4 = sub_24E115EE0();
    os_log_type_t v5 = sub_24E116980();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = v7;
      *(_DWORD *)uint64_t v6 = 136446210;
      swift_retain();
      uint64_t v8 = sub_24E0F61B8();
      unint64_t v10 = v9;
      swift_release();
      sub_24E090400(v8, v10, &v12);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24E083000, v4, v5, "%{public}s: shouldDefer called on invalidated XPCActivity", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v7, -1, -1);
      MEMORY[0x2533338B0](v6, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    return 0;
  }
  return should_defer;
}

BOOL sub_24E0F67E4()
{
  return sub_24E0F6814(3, "%{public}s: defer called on invalidated XPCActivity");
}

BOOL sub_24E0F67F4()
{
  return sub_24E0F6814(4, "%{public}s: continue called on invalidated XPCActivity");
}

BOOL sub_24E0F6804()
{
  return sub_24E0F6814(5, "%{public}s: done called on invalidated XPCActivity");
}

BOOL sub_24E0F6814(xpc_activity_state_t a1, const char *a2)
{
  os_log_type_t v5 = (_xpc_activity_s *)MEMORY[0x2533339C0](v2 + 160);
  if (v5)
  {
    BOOL v6 = xpc_activity_set_state(v5, a1);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26B1AE7C0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24E115F00();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B1B1380);
    swift_retain_n();
    uint64_t v8 = sub_24E115EE0();
    os_log_type_t v9 = sub_24E116980();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v16 = v11;
      *(_DWORD *)unint64_t v10 = 136446210;
      swift_retain();
      uint64_t v12 = sub_24E0F61B8();
      unint64_t v14 = v13;
      swift_release();
      sub_24E090400(v12, v14, &v16);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24E083000, v8, v9, a2, v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v11, -1, -1);
      MEMORY[0x2533338B0](v10, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    return 0;
  }
  return v6;
}

uint64_t sub_24E0F6A10(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_24E0F6A30, v1, 0);
}

uint64_t sub_24E0F6A30()
{
  uint64_t v36 = v0;
  if (qword_26B1AE7C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E115F00();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1B1380);
  swift_retain_n();
  uint64_t v2 = sub_24E115EE0();
  os_log_type_t v3 = sub_24E1169A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v35 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_retain();
    uint64_t v6 = sub_24E0F61B8();
    unint64_t v8 = v7;
    swift_release();
    v0[6] = sub_24E090400(v6, v8, &v35);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v2, v3, "%{public}s: updateCriteria called on XPCActivity", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v5, -1, -1);
    MEMORY[0x2533338B0](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = MEMORY[0x2533339C0](v0[8] + 160);
  v0[9] = v9;
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[10] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24E0F7088;
    uint64_t v13 = v0[7];
    uint64_t v12 = v0[8];
    v11[31] = v10;
    v11[32] = v12;
    v11[30] = v13;
    unint64_t v14 = sub_24E0F734C;
LABEL_15:
    return MEMORY[0x270FA2498](v14, v12, 0);
  }
  uint64_t v15 = v0[8];
  uint64_t v17 = *(void *)(v15 + 112);
  unint64_t v16 = *(void *)(v15 + 120);
  int v18 = *(unsigned __int8 *)(v15 + 168);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_24E115EE0();
  os_log_type_t v20 = sub_24E1169A0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  if (v18 == 1)
  {
    if (v21)
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v35 = v33;
      *(_DWORD *)uint64_t v22 = 136446466;
      swift_retain();
      uint64_t v23 = sub_24E0F61B8();
      unint64_t v25 = v24;
      swift_release();
      v0[4] = sub_24E090400(v23, v25, &v35);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[5] = sub_24E090400(v17, v16, &v35);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24E083000, v19, v20, "%{public}s: No current activity -- re-registering %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v33, -1, -1);
      MEMORY[0x2533338B0](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v30 = (void *)swift_task_alloc();
    v0[11] = v30;
    void *v30 = v0;
    v30[1] = sub_24E0F71F8;
    uint64_t v12 = v0[8];
    v30[8] = v12;
    unint64_t v14 = sub_24E0F6040;
    goto LABEL_15;
  }
  if (v21)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = v34;
    *(_DWORD *)uint64_t v26 = 136446466;
    swift_retain();
    uint64_t v27 = sub_24E0F61B8();
    unint64_t v29 = v28;
    swift_release();
    v0[2] = sub_24E090400(v27, v29, &v35);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[3] = sub_24E090400(v17, v16, &v35);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v19, v20, "%{public}s: No current activity -- hasn't checked in yet %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v34, -1, -1);
    MEMORY[0x2533338B0](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  *(unsigned char *)v0[7] = 6;
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_24E0F7088()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F7198, v1, 0);
}

uint64_t sub_24E0F7198()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0F71F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F7308, v1, 0);
}

uint64_t sub_24E0F7308()
{
  **(unsigned char **)(v0 + 56) = 6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E0F7328(uint64_t a1, uint64_t a2)
{
  v3[31] = a2;
  v3[32] = v2;
  v3[30] = a1;
  return MEMORY[0x270FA2498](sub_24E0F734C, v2, 0);
}

uint64_t sub_24E0F734C()
{
  uint64_t v20 = v0;
  xpc_object_t v1 = xpc_activity_copy_criteria(*(xpc_activity_t *)(v0 + 248));
  *(void *)(v0 + 264) = v1;
  if (!v1) {
    goto LABEL_4;
  }
  uint64_t v2 = (void *)swift_unknownObjectRetain();
  sub_24E0BCF8C(v2, v16);
  uint64_t v3 = v16[0];
  uint64_t v4 = v16[1];
  *(void *)(v0 + 272) = v16[0];
  *(void *)(v0 + 280) = v4;
  uint64_t v5 = v17;
  uint64_t v6 = v18;
  *(void *)(v0 + 288) = v17;
  *(void *)(v0 + 296) = v6;
  uint64_t v7 = v19;
  *(void *)(v0 + 304) = v19;
  if (v3 == 2)
  {
    swift_unknownObjectRelease();
LABEL_4:
    uint64_t v8 = v0 + 16;
    uint64_t v9 = *(int **)(*(void *)(v0 + 256) + 128);
    *(void *)(v0 + 56) = 2;
    uint64_t v10 = v0 + 56;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v9 + *v9);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v11;
    *uint64_t v11 = v0;
    uint64_t v12 = sub_24E0F7D90;
    goto LABEL_6;
  }
  uint64_t v8 = v0 + 136;
  uint64_t v13 = *(int **)(*(void *)(v0 + 256) + 128);
  *(void *)(v0 + 96) = v3;
  uint64_t v10 = v0 + 96;
  *(void *)(v0 + 104) = v4;
  *(void *)(v0 + 112) = v5;
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 128) = v7;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v13 + *v13);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v11;
  *uint64_t v11 = v0;
  uint64_t v12 = sub_24E0F7520;
LABEL_6:
  v11[1] = v12;
  return v15(v8, v10);
}

uint64_t sub_24E0F7520()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F7630, v1, 0);
}

uint64_t sub_24E0F7630()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  if (v1 == 2)
  {
    uint64_t v2 = *(unsigned char **)(v0 + 240);
    sub_24E0F8F58();
    swift_unknownObjectRelease();
    *uint64_t v2 = 6;
    goto LABEL_20;
  }
  long long v3 = *(_OWORD *)(v0 + 296);
  long long v66 = *(_OWORD *)(v0 + 280);
  long long v67 = v3;
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  unsigned int v8 = *(_DWORD *)(v0 + 272);
  char v9 = v1 & 1;
  LOWORD(v64[0]) = v1 & 0x101;
  unsigned int v10 = (v1 >> 8) & 1;
  v64[1] = v5;
  v64[2] = v4;
  v64[3] = v6;
  v64[4] = v7;
  char v11 = v8 & 1;
  __int16 v65 = v8 & 0x101;
  int v12 = (v8 >> 8) & 1;
  if (!_s10FindMyBase11XPCActivityC8CriteriaV2eeoiySbAE_AEtFZ_0((uint64_t)v64, (uint64_t)&v65))
  {
    char type = v12;
    char v55 = v10;
    char v57 = v9;
    if (qword_26B1AE7C0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_24E115F00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B1B1380);
    swift_retain_n();
    uint64_t v23 = sub_24E115EE0();
    os_log_type_t v24 = sub_24E1169A0();
    *((void *)&v59 + 1) = v4;
    uint64_t v61 = v6;
    *(void *)&long long v59 = v5;
    if (os_log_type_enabled(v23, v24))
    {
      long long v53 = *(_OWORD *)(v0 + 296);
      long long v52 = *(_OWORD *)(v0 + 280);
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v64[0] = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      swift_retain();
      uint64_t v27 = sub_24E0F61B8();
      unint64_t v29 = v28;
      swift_release();
      *(void *)(v0 + 208) = sub_24E090400(v27, v29, v64);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      LOBYTE(v65) = v11;
      HIBYTE(v65) = type;
      long long v66 = v52;
      long long v67 = v53;
      uint64_t v30 = XPCActivity.Criteria.description.getter();
      *(void *)(v0 + 216) = sub_24E090400(v30, v31, v64);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v23, v24, "%{public}s: Existing criteria: %{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v26, -1, -1);
      MEMORY[0x2533338B0](v25, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_retain_n();
    uint64_t v32 = sub_24E115EE0();
    os_log_type_t v33 = sub_24E1169A0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v64[0] = v54;
      *(_DWORD *)uint64_t v34 = 136446466;
      swift_retain();
      uint64_t v35 = sub_24E0F61B8();
      unint64_t v37 = v36;
      swift_release();
      *(void *)(v0 + 192) = sub_24E090400(v35, v37, v64);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2082;
      char v38 = v57;
      LOBYTE(v65) = v57;
      char v39 = v55;
      HIBYTE(v65) = v55;
      uint64_t v41 = *((void *)&v59 + 1);
      uint64_t v40 = v59;
      long long v66 = v59;
      uint64_t v42 = v61;
      *(void *)&long long v67 = v61;
      *((void *)&v67 + 1) = v7;
      uint64_t v43 = XPCActivity.Criteria.description.getter();
      *(void *)(v0 + 200) = sub_24E090400(v43, v44, v64);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v32, v33, "%{public}s: Registering updated criteria: %{public}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v54, -1, -1);
      MEMORY[0x2533338B0](v34, -1, -1);

      uint64_t v45 = v7;
    }
    else
    {

      swift_release_n();
      uint64_t v45 = v7;
      uint64_t v41 = *((void *)&v59 + 1);
      uint64_t v42 = v61;
      uint64_t v40 = v59;
      char v38 = v57;
      char v39 = v55;
    }
    uint64_t v46 = *(_xpc_activity_s **)(v0 + 248);
    LOBYTE(v65) = v38;
    HIBYTE(v65) = v39;
    *(void *)&long long v66 = v40;
    *((void *)&v66 + 1) = v41;
    *(void *)&long long v67 = v42;
    *((void *)&v67 + 1) = v45;
    sub_24E0BD460();
    xpc_activity_set_criteria(v46, v47);
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  if (qword_26B1AE7C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_24E115F00();
  __swift_project_value_buffer(v13, (uint64_t)qword_26B1B1380);
  swift_retain_n();
  unint64_t v14 = sub_24E115EE0();
  os_log_type_t v15 = sub_24E1169A0();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_release_n();
LABEL_18:
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  long long v58 = *(_OWORD *)(v0 + 296);
  long long v56 = *(_OWORD *)(v0 + 280);
  uint64_t v16 = swift_slowAlloc();
  uint64_t v60 = swift_slowAlloc();
  v64[0] = v60;
  *(_DWORD *)uint64_t v16 = 136446466;
  swift_retain();
  char typea = v12;
  uint64_t v17 = sub_24E0F61B8();
  unint64_t v19 = v18;
  swift_release();
  *(void *)(v0 + 224) = sub_24E090400(v17, v19, v64);
  sub_24E116AB0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 12) = 2082;
  LOBYTE(v65) = v11;
  HIBYTE(v65) = typea;
  long long v66 = v56;
  long long v67 = v58;
  uint64_t v20 = XPCActivity.Criteria.description.getter();
  *(void *)(v0 + 232) = sub_24E090400(v20, v21, v64);
  sub_24E116AB0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_24E083000, v14, v15, "%{public}s: Keeping existing criteria: %{public}s", (uint8_t *)v16, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2533338B0](v60, -1, -1);
  MEMORY[0x2533338B0](v16, -1, -1);
  swift_unknownObjectRelease();

LABEL_19:
  int v48 = *(unsigned char **)(v0 + 240);
  xpc_activity_state_t state = xpc_activity_get_state(*(xpc_activity_t *)(v0 + 248));
  sub_24E0F651C(state, v48);
LABEL_20:
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_24E0F7D90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F7EA0, v1, 0);
}

uint64_t sub_24E0F7EA0()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1 == 2)
  {
    uint64_t v2 = *(unsigned char **)(v0 + 240);
    sub_24E0F8F58();
    *uint64_t v2 = 6;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 32);
    uint64_t v25 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 48);
    char v5 = v1 & 1;
    if (qword_26B1AE7C0 != -1) {
      swift_once();
    }
    unint64_t v6 = v1 & 0x100;
    uint64_t v7 = sub_24E115F00();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B1B1380);
    swift_retain_n();
    unsigned int v8 = sub_24E115EE0();
    os_log_type_t type = sub_24E1169A0();
    if (os_log_type_enabled(v8, type))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)uint64_t v9 = 136446466;
      swift_retain();
      uint64_t v10 = sub_24E0F61B8();
      unint64_t v12 = v11;
      swift_release();
      *(void *)(v0 + 184) = sub_24E090400(v10, v12, &v26);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      char v27 = v1 & 1;
      unint64_t v13 = v6 >> 8;
      char v28 = (unsigned __int16)(v1 & 0x100) >> 8;
      uint64_t v29 = v25;
      uint64_t v30 = v24;
      uint64_t v31 = v3;
      uint64_t v32 = v4;
      uint64_t v14 = XPCActivity.Criteria.description.getter();
      *(void *)(v0 + 176) = sub_24E090400(v14, v15, &v26);
      char v5 = v1 & 1;
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v8, type, "%{public}s: Registering new criteria: %{public}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v22, -1, -1);
      MEMORY[0x2533338B0](v9, -1, -1);
    }
    else
    {

      swift_release_n();
      unint64_t v13 = v6 >> 8;
    }
    uint64_t v16 = *(_xpc_activity_s **)(v0 + 248);
    char v27 = v5;
    char v28 = v13;
    uint64_t v29 = v25;
    uint64_t v30 = v24;
    uint64_t v31 = v3;
    uint64_t v32 = v4;
    sub_24E0BD460();
    xpc_activity_set_criteria(v16, v17);
    swift_unknownObjectRelease();
    unint64_t v18 = *(unsigned char **)(v0 + 240);
    xpc_activity_state_t state = xpc_activity_get_state(*(xpc_activity_t *)(v0 + 248));
    sub_24E0F651C(state, v18);
  }
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t XPCActivity.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_24E0FAE90(v0 + 160);
  sub_24E0C5278(*(void *)(v0 + 176));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCActivity.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_24E0FAE90(v0 + 160);
  sub_24E0C5278(*(void *)(v0 + 176));
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t XPCActivity.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E0F8270()
{
  return sub_24E0F61B8();
}

uint64_t sub_24E0F8294(_xpc_activity_s *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    xpc_activity_state_t state = xpc_activity_get_state(a1);
    sub_24E0F651C(state, &v7);
    char v4 = v7;
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(unsigned char *)(v6 + 24) = v4;
    *(void *)(v6 + 32) = a1;
    swift_retain();
    swift_unknownObjectRetain();
    _s10FindMyBase11TransactionC9asyncTask4name5blockys12StaticStringV_yyYaYbctFZ_0("XPCActivity", 11, 2, (uint64_t)&unk_2698B8D20, v6);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24E0F83A4(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 73) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a3;
  return MEMORY[0x270FA2498](sub_24E0F83C8, 0, 0);
}

uint64_t sub_24E0F83C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    *(unsigned char *)(v0 + 72) = *(unsigned char *)(v0 + 73);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 64) = v3;
    *(void *)uint64_t v3 = v0;
    *(void *)(v3 + 8) = sub_24E0F84E4;
    *(void *)(v3 + 48) = *(void *)(v0 + 48);
    *(void *)(v3 + 56) = v2;
    *(unsigned char *)(v3 + 91) = *(unsigned char *)(v0 + 72);
    return MEMORY[0x270FA2498](sub_24E0F861C, v2, 0);
  }
  else
  {
    char v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_24E0F84E4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0F85F4(unsigned char *a1, uint64_t a2)
{
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = v2;
  *(unsigned char *)(v3 + 91) = *a1;
  return MEMORY[0x270FA2498](sub_24E0F861C, v2, 0);
}

uint64_t sub_24E0F861C()
{
  uint64_t v25 = v0;
  if (qword_26B1AE7C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E115F00();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1B1380);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  uint64_t v2 = sub_24E115EE0();
  os_log_type_t v3 = sub_24E1169A0();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v22 = v3;
    uint64_t v20 = *(unsigned __int8 *)(v0 + 91);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v5 = 136446722;
    swift_retain();
    uint64_t v6 = sub_24E0F61B8();
    unint64_t v8 = v7;
    swift_release();
    *(void *)(v0 + 16) = sub_24E090400(v6, v8, &v24);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    *(void *)(v0 + 32) = v4;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE7F0);
    uint64_t v9 = sub_24E116290();
    *(void *)(v0 + 24) = sub_24E090400(v9, v10, &v24);
    sub_24E116AB0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2082;
    unint64_t v11 = 0xE800000000000000;
    uint64_t v12 = 0x6E496B636568632ELL;
    switch(v20)
    {
      case 1:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x746961772ELL;
        break;
      case 2:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1853190702;
        break;
      case 3:
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x72656665642ELL;
        break;
      case 4:
        unint64_t v11 = 0xE900000000000065;
        uint64_t v12 = 0x756E69746E6F632ELL;
        break;
      case 5:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x656E6F642ELL;
        break;
      case 6:
        unint64_t v11 = 0xEC00000064657461;
        uint64_t v12 = 0x64696C61766E692ELL;
        break;
      default:
        break;
    }
    *(void *)(v0 + 40) = sub_24E090400(v12, v11, &v24);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v2, v22, "%{public}s: activityHandler() for %{public}s\nstate: %{public}s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v21, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_release_n();
  }
  uint64_t v13 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v0 + 91))
  {
    uint64_t v14 = *(int **)(v13 + 144);
    *(unsigned char *)(v0 + 90) = *(unsigned char *)(v0 + 91);
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))((char *)v14 + *v14);
    unint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v15;
    *unint64_t v15 = v0;
    v15[1] = sub_24E0F8E04;
    uint64_t v16 = *(void *)(v0 + 56);
    return v23(v16, v0 + 90);
  }
  else
  {
    swift_unknownObjectWeakAssign();
    *(unsigned char *)(v13 + 168) = 1;
    unint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v18;
    *unint64_t v18 = v0;
    v18[1] = sub_24E0F8B18;
    uint64_t v19 = *(void *)(v0 + 56);
    v18[31] = *(void *)(v0 + 48);
    v18[32] = v19;
    v18[30] = v0 + 89;
    return MEMORY[0x270FA2498](sub_24E0F734C, v19, 0);
  }
}

uint64_t sub_24E0F8B18()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E0F8C28, v1, 0);
}

uint64_t sub_24E0F8C28()
{
  uint64_t v1 = *(int **)(*(void *)(v0 + 56) + 144);
  *(unsigned char *)(v0 + 88) = *(unsigned char *)(v0 + 89);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E0F8D10;
  uint64_t v3 = *(void *)(v0 + 56);
  return v5(v3, v0 + 88);
}

uint64_t sub_24E0F8D10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0F8E04()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E0F8EF8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_24E0F8F58()
{
  uint64_t v1 = sub_24E1162D0();
  xpc_activity_unregister((const char *)(v1 + 32));
  swift_release();
  uint64_t v2 = *(void *)(v0 + 176);
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0;
  sub_24E0C5278(v2);
  swift_unknownObjectWeakAssign();
  if (qword_26B1AE7C0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24E115F00();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B1B1380);
  swift_retain_n();
  oslog = sub_24E115EE0();
  os_log_type_t v4 = sub_24E1169A0();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v7 = sub_24E0F61B8();
    unint64_t v9 = v8;
    swift_release();
    sub_24E090400(v7, v9, &v11);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24E083000, oslog, v4, "%{public}s: Unregistered criteria", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v6, -1, -1);
    MEMORY[0x2533338B0](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }
}

uint64_t XPCActivity.State.description.getter()
{
  uint64_t result = 0x6E496B636568632ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746961772ELL;
      break;
    case 2:
      uint64_t result = 1853190702;
      break;
    case 3:
      uint64_t result = 0x72656665642ELL;
      break;
    case 4:
      uint64_t result = 0x756E69746E6F632ELL;
      break;
    case 5:
      uint64_t result = 0x656E6F642ELL;
      break;
    case 6:
      uint64_t result = 0x64696C61766E692ELL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static XPCActivity.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t XPCActivity.State.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t sub_24E0F9298(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB104();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F92D4(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB104();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F9318()
{
  uint64_t result = 0x6E496B63656863;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953063287;
      break;
    case 2:
      uint64_t result = 7239026;
      break;
    case 3:
      uint64_t result = 0x7265666564;
      break;
    case 4:
      uint64_t result = 0x65756E69746E6F63;
      break;
    case 5:
      uint64_t result = 1701736292;
      break;
    case 6:
      uint64_t result = 0x6164696C61766E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E0F93E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E0FBE60(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E0F9410(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24E0F941C(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAEB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F9458(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAEB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F9494(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAFB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F94D0(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAFB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F950C(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB008();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F9548(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB008();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F9584(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAF60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F95C0(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAF60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F95FC(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAF0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F9638(uint64_t a1)
{
  unint64_t v2 = sub_24E0FAF0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F9674(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB05C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F96B0(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB05C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E0F96EC(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB0B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E0F9728(uint64_t a1)
{
  unint64_t v2 = sub_24E0FB0B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCActivity.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8B90);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8B98);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8BA0);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  char v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8BA8);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8BB0);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8BB8);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8BC0);
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8BC8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  os_log_type_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E0FAEB8();
  sub_24E117240();
  switch(v23)
  {
    case 1:
      char v51 = 1;
      sub_24E0FB0B0();
      uint64_t v26 = v48;
      sub_24E116FE0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      goto LABEL_10;
    case 2:
      char v52 = 2;
      sub_24E0FB05C();
      char v27 = v33;
      uint64_t v26 = v48;
      sub_24E116FE0();
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_24E0FB008();
      char v27 = v36;
      uint64_t v26 = v48;
      sub_24E116FE0();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_24E0FAFB4();
      char v27 = v39;
      uint64_t v26 = v48;
      sub_24E116FE0();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_24E0FAF60();
      char v27 = v42;
      uint64_t v26 = v48;
      sub_24E116FE0();
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_24E0FAF0C();
      char v27 = v45;
      uint64_t v26 = v48;
      sub_24E116FE0();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v26);
      break;
    default:
      char v50 = 0;
      sub_24E0FB104();
      uint64_t v24 = v48;
      sub_24E116FE0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v24);
      break;
  }
  return result;
}

uint64_t XPCActivity.State.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t XPCActivity.State.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C10);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C18);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C20);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C28);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C30);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388](v13);
  long long v59 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C38);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C40);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C48);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  __int16 v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_24E0FAEB8();
  uint64_t v26 = v66;
  sub_24E117220();
  if (!v26)
  {
    uint64_t v44 = v20;
    uint64_t v43 = v18;
    uint64_t v45 = v17;
    uint64_t v28 = v61;
    char v27 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v66 = v22;
    uint64_t v31 = v24;
    uint64_t v32 = sub_24E116FC0();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v68 = 1;
          sub_24E0FB0B0();
          char v27 = v45;
          sub_24E116F70();
          uint64_t v40 = v47;
          uint64_t v39 = v48;
          goto LABEL_13;
        case 2:
          char v69 = 2;
          sub_24E0FB05C();
          char v27 = v59;
          sub_24E116F70();
          uint64_t v40 = v49;
          uint64_t v39 = v50;
          goto LABEL_13;
        case 3:
          char v70 = 3;
          sub_24E0FB008();
          char v27 = v28;
          sub_24E116F70();
          uint64_t v40 = v51;
          uint64_t v39 = v52;
          goto LABEL_13;
        case 4:
          char v71 = 4;
          sub_24E0FAFB4();
          sub_24E116F70();
          uint64_t v39 = v53;
          uint64_t v40 = v54;
          goto LABEL_13;
        case 5:
          char v72 = 5;
          sub_24E0FAF60();
          sub_24E116F70();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
          break;
        case 6:
          char v73 = 6;
          sub_24E0FAF0C();
          char v27 = v60;
          sub_24E116F70();
          uint64_t v40 = v57;
          uint64_t v39 = v58;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
          break;
        default:
          char v67 = 0;
          sub_24E0FB104();
          uint64_t v34 = v44;
          sub_24E116F70();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v21);
      unsigned char *v30 = v33;
    }
    else
    {
      uint64_t v35 = sub_24E116CE0();
      swift_allocError();
      uint64_t v36 = v21;
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8C50);
      *uint64_t v38 = &type metadata for XPCActivity.State;
      sub_24E116F80();
      sub_24E116CD0();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v36);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
}

uint64_t sub_24E0FA690@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return XPCActivity.State.init(from:)(a1, a2);
}

uint64_t sub_24E0FA6A8(void *a1)
{
  return XPCActivity.State.encode(to:)(a1);
}

uint64_t sub_24E0FA6C0()
{
  uint64_t result = 0x6E496B636568632ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746961772ELL;
      break;
    case 2:
      uint64_t result = 1853190702;
      break;
    case 3:
      uint64_t result = 0x72656665642ELL;
      break;
    case 4:
      uint64_t result = 0x756E69746E6F632ELL;
      break;
    case 5:
      uint64_t result = 0x656E6F642ELL;
      break;
    case 6:
      uint64_t result = 0x64696C61766E692ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E0FA79C()
{
  uint64_t result = sub_24E116380();
  qword_26B1AE830 = result;
  *(void *)algn_26B1AE838 = v1;
  return result;
}

uint64_t XPCActivity.Priority.description.getter()
{
  if (*v0) {
    return 0x6E65746E69616D2ELL;
  }
  else {
    return 0x7974696C6974752ELL;
  }
}

FindMyBase::XPCActivity::Priority_optional __swiftcall XPCActivity.Priority.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_24E116F40();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t XPCActivity.Priority.rawValue.getter()
{
  if (*v0) {
    return 0x616E65746E69616DLL;
  }
  else {
    return 0x7974696C697475;
  }
}

uint64_t sub_24E0FA8B8(char *a1, char *a2)
{
  return sub_24E0F5974(*a1, *a2);
}

uint64_t sub_24E0FA8C4()
{
  return sub_24E1171F0();
}

uint64_t sub_24E0FA950()
{
  sub_24E116320();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E0FA9C8()
{
  return sub_24E1171F0();
}

FindMyBase::XPCActivity::Priority_optional sub_24E0FAA50(Swift::String *a1)
{
  return XPCActivity.Priority.init(rawValue:)(*a1);
}

void sub_24E0FAA5C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7974696C697475;
  if (*v1) {
    uint64_t v2 = 0x616E65746E69616DLL;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB0000000065636ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24E0FAAA4()
{
  return sub_24E116530();
}

uint64_t sub_24E0FAB04()
{
  return sub_24E116500();
}

uint64_t sub_24E0FAB54()
{
  if (*v0) {
    return 0x6E65746E69616D2ELL;
  }
  else {
    return 0x7974696C6974752ELL;
  }
}

uint64_t sub_24E0FAB98()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1350);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1350);
  return sub_24E115EF0();
}

uint64_t sub_24E0FAC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v8[2] = a3;
  void v8[3] = v7;
  swift_defaultActor_initialize();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v7 + 168) = 0;
  *(void *)(v7 + 176) = 0;
  *(void *)(v7 + 184) = 0;
  *(void *)(v7 + 112) = a1;
  *(void *)(v7 + 120) = a2;
  *(void *)(v7 + 128) = a4;
  *(void *)(v7 + 136) = a5;
  *(void *)(v7 + 144) = a6;
  *(void *)(v7 + 152) = a7;
  swift_retain();
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc();
  void v8[4] = v15;
  *uint64_t v15 = v8;
  v15[1] = sub_24E0FAD30;
  v15[8] = v7;
  return MEMORY[0x270FA2498](sub_24E0F6040, v7, 0);
}

uint64_t sub_24E0FAD30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24E115F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  return v4(v5);
}

uint64_t sub_24E0FAE90(uint64_t a1)
{
  return a1;
}

unint64_t sub_24E0FAEB8()
{
  unint64_t result = qword_2698B8BD0;
  if (!qword_2698B8BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8BD0);
  }
  return result;
}

unint64_t sub_24E0FAF0C()
{
  unint64_t result = qword_2698B8BD8;
  if (!qword_2698B8BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8BD8);
  }
  return result;
}

unint64_t sub_24E0FAF60()
{
  unint64_t result = qword_2698B8BE0;
  if (!qword_2698B8BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8BE0);
  }
  return result;
}

unint64_t sub_24E0FAFB4()
{
  unint64_t result = qword_2698B8BE8;
  if (!qword_2698B8BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8BE8);
  }
  return result;
}

unint64_t sub_24E0FB008()
{
  unint64_t result = qword_2698B8BF0;
  if (!qword_2698B8BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8BF0);
  }
  return result;
}

unint64_t sub_24E0FB05C()
{
  unint64_t result = qword_2698B8BF8;
  if (!qword_2698B8BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8BF8);
  }
  return result;
}

unint64_t sub_24E0FB0B0()
{
  unint64_t result = qword_2698B8C00;
  if (!qword_2698B8C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C00);
  }
  return result;
}

unint64_t sub_24E0FB104()
{
  unint64_t result = qword_2698B8C08;
  if (!qword_2698B8C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C08);
  }
  return result;
}

unint64_t sub_24E0FB15C()
{
  unint64_t result = qword_2698B8C58;
  if (!qword_2698B8C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C58);
  }
  return result;
}

unint64_t sub_24E0FB1B4()
{
  unint64_t result = qword_2698B8C60;
  if (!qword_2698B8C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C60);
  }
  return result;
}

uint64_t type metadata accessor for XPCActivity()
{
  return self;
}

uint64_t method lookup function for XPCActivity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCActivity);
}

uint64_t dispatch thunk of XPCActivity.__allocating_init(name:qos:criteriaBlock:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 208)
                                                                                              + **(int **)(v7 + 208));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  void *v16 = v8;
  v16[1] = sub_24E087974;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of XPCActivity.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of XPCActivity.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of XPCActivity.shouldDefer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of XPCActivity.defer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of XPCActivity.continue()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of XPCActivity.done()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of XPCActivity.updateCriteria()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 264) + **(int **)(*(void *)v1 + 264));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E095114;
  return v6(a1);
}

ValueMetadata *type metadata accessor for XPCActivity.State()
{
  return &type metadata for XPCActivity.State;
}

unsigned char *storeEnumTagSinglePayload for XPCActivity.Priority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0FB64CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity.Priority()
{
  return &type metadata for XPCActivity.Priority;
}

uint64_t _s10FindMyBase11XPCActivityC5StateOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10FindMyBase11XPCActivityC5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E0FB7E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity.State.CodingKeys()
{
  return &type metadata for XPCActivity.State.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.CheckInCodingKeys()
{
  return &type metadata for XPCActivity.State.CheckInCodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.WaitCodingKeys()
{
  return &type metadata for XPCActivity.State.WaitCodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.RunCodingKeys()
{
  return &type metadata for XPCActivity.State.RunCodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.DeferCodingKeys()
{
  return &type metadata for XPCActivity.State.DeferCodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.ContinueCodingKeys()
{
  return &type metadata for XPCActivity.State.ContinueCodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.DoneCodingKeys()
{
  return &type metadata for XPCActivity.State.DoneCodingKeys;
}

ValueMetadata *type metadata accessor for XPCActivity.State.InvalidatedCodingKeys()
{
  return &type metadata for XPCActivity.State.InvalidatedCodingKeys;
}

unint64_t sub_24E0FB88C()
{
  unint64_t result = qword_2698B8C88;
  if (!qword_2698B8C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C88);
  }
  return result;
}

unint64_t sub_24E0FB8E4()
{
  unint64_t result = qword_2698B8C90;
  if (!qword_2698B8C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C90);
  }
  return result;
}

unint64_t sub_24E0FB93C()
{
  unint64_t result = qword_2698B8C98;
  if (!qword_2698B8C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8C98);
  }
  return result;
}

unint64_t sub_24E0FB994()
{
  unint64_t result = qword_2698B8CA0;
  if (!qword_2698B8CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CA0);
  }
  return result;
}

unint64_t sub_24E0FB9EC()
{
  unint64_t result = qword_2698B8CA8;
  if (!qword_2698B8CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CA8);
  }
  return result;
}

unint64_t sub_24E0FBA44()
{
  unint64_t result = qword_2698B8CB0;
  if (!qword_2698B8CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CB0);
  }
  return result;
}

unint64_t sub_24E0FBA9C()
{
  unint64_t result = qword_2698B8CB8;
  if (!qword_2698B8CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CB8);
  }
  return result;
}

unint64_t sub_24E0FBAF4()
{
  unint64_t result = qword_2698B8CC0;
  if (!qword_2698B8CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CC0);
  }
  return result;
}

unint64_t sub_24E0FBB4C()
{
  unint64_t result = qword_2698B8CC8;
  if (!qword_2698B8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CC8);
  }
  return result;
}

unint64_t sub_24E0FBBA4()
{
  unint64_t result = qword_2698B8CD0;
  if (!qword_2698B8CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CD0);
  }
  return result;
}

unint64_t sub_24E0FBBFC()
{
  unint64_t result = qword_2698B8CD8;
  if (!qword_2698B8CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CD8);
  }
  return result;
}

unint64_t sub_24E0FBC54()
{
  unint64_t result = qword_2698B8CE0;
  if (!qword_2698B8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CE0);
  }
  return result;
}

unint64_t sub_24E0FBCAC()
{
  unint64_t result = qword_2698B8CE8;
  if (!qword_2698B8CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CE8);
  }
  return result;
}

unint64_t sub_24E0FBD04()
{
  unint64_t result = qword_2698B8CF0;
  if (!qword_2698B8CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CF0);
  }
  return result;
}

unint64_t sub_24E0FBD5C()
{
  unint64_t result = qword_2698B8CF8;
  if (!qword_2698B8CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8CF8);
  }
  return result;
}

unint64_t sub_24E0FBDB4()
{
  unint64_t result = qword_2698B8D00;
  if (!qword_2698B8D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8D00);
  }
  return result;
}

unint64_t sub_24E0FBE0C()
{
  unint64_t result = qword_2698B8D08;
  if (!qword_2698B8D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8D08);
  }
  return result;
}

uint64_t sub_24E0FBE60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E496B63656863 && a2 == 0xE700000000000000;
  if (v2 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953063287 && a2 == 0xE400000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7239026 && a2 == 0xE300000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265666564 && a2 == 0xE500000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65756E69746E6F63 && a2 == 0xE800000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6164696C61766E69 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_24E0FC128()
{
  unint64_t result = qword_2698B8D10;
  if (!qword_2698B8D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2698B8D10);
  }
  return result;
}

uint64_t sub_24E0FC17C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E0FC1B4(_xpc_activity_s *a1)
{
  return sub_24E0F8294(a1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24E0FC1D4()
{
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E0FC214()
{
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_24E095558;
  *(unsigned char *)(v5 + 73) = v3;
  *(void *)(v5 + 40) = v2;
  *(void *)(v5 + 48) = v4;
  return MEMORY[0x270FA2498](sub_24E0F83C8, 0, 0);
}

void OSAllocatedUnfairLock.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_24E0FC50C();
  os_unfair_lock_unlock(v3);
}

{
  os_unfair_lock_s *v3;

  char v3 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_24E0FC534();
  os_unfair_lock_unlock(v3);
}

void sub_24E0FC39C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_24E0FC50C()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_24E0FC534()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

void OSAllocatedUnfairLock<A>.stateSnapshot.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E0FC600(v3, a2);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24E0FC600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t UnsignedInteger.reversed.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = *(void (***)(char *, char *, uint64_t))(a1 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v34 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v34 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v15 = *(void *)(*(void *)(*(void *)(v14 + 8) + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v39 = AssociatedConformanceWitness;
  sub_24E117100();
  uint64_t v37 = a2;
  uint64_t v40 = v18;
  uint64_t v42 = v15;
  sub_24E117090();
  uint64_t result = sub_24E116B80();
  if (result < 0) {
    goto LABEL_25;
  }
  uint64_t v21 = result;
  if (result)
  {
    unint64_t v43 = sub_24E093D14();
    uint64_t v22 = 0;
    uint64_t v23 = (void (**)(char *, uint64_t))(v35 + 1);
    v35 += 2;
    uint64_t v38 = v21;
    while (1)
    {
      uint64_t v44 = v22;
      sub_24E116B30();
      sub_24E117100();
      sub_24E117090();
      sub_24E116B10();
      uint64_t v24 = *v23;
      (*v23)(v8, a1);
      v24(v11, a1);
      if (sub_24E116B90()) {
        break;
      }
      char v25 = sub_24E116B90();
      uint64_t v26 = sub_24E116B80();
      if ((v25 & 1) == 0)
      {
        if (v26 >= 64)
        {
LABEL_16:
          uint64_t v44 = 0;
          sub_24E116B00();
          char v30 = sub_24E116190();
          v24(v11, a1);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v13, a1);
          if (v30) {
            goto LABEL_4;
          }
          goto LABEL_19;
        }
        goto LABEL_13;
      }
      if (v26 > 64) {
        goto LABEL_16;
      }
      sub_24E117100();
      sub_24E117090();
      char v27 = sub_24E116170();
      v24(v11, a1);
      uint64_t v28 = v36;
      (*v35)(v36, v13, a1);
      if (v27)
      {
        uint64_t v29 = sub_24E116B70();
        v24(v28, a1);
        goto LABEL_14;
      }
      v24(v28, a1);
      v24(v13, a1);
LABEL_19:
      sub_24E117100();
      sub_24E117090();
      uint64_t result = sub_24E116B80();
      uint64_t v31 = result - 1;
      if (__OFSUB__(result, 1))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
      BOOL v32 = __OFSUB__(v31, v22);
      uint64_t v33 = v31 - v22;
      if (v32) {
        goto LABEL_24;
      }
      uint64_t v44 = v33;
      sub_24E116B40();
      v24(v8, a1);
      sub_24E116B50();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v11, a1);
LABEL_4:
      if (v38 == ++v22) {
        return result;
      }
    }
    if (sub_24E116B80() >= 64) {
      goto LABEL_16;
    }
LABEL_13:
    uint64_t v29 = sub_24E116B70();
LABEL_14:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v13, a1);
    if (!v29) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
  return result;
}

int8x8_t static UInt64.interleave(x:y:)(unsigned int a1, unsigned int a2)
{
  int8x16_t v2 = (int8x16_t)vdupq_n_s64(a2);
  int8x16_t v3 = (int8x16_t)vdupq_n_s64(a1);
  int8x16_t v4 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F390), (uint64x2_t)xmmword_24E11F3D0), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F330), (uint64x2_t)xmmword_24E11F370), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F2D0), (uint64x2_t)xmmword_24E11F2F0)), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F330), (uint64x2_t)xmmword_24E11F350))), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F390), (uint64x2_t)xmmword_24E11F3B0)), vorrq_s8(
             vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F2D0), (uint64x2_t)xmmword_24E11F310), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F270), (uint64x2_t)xmmword_24E11F2B0), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F210), (uint64x2_t)xmmword_24E11F230)), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F270), (uint64x2_t)xmmword_24E11F290))), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F210), (uint64x2_t)xmmword_24E11F250),
                 vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F1B0), (uint64x2_t)xmmword_24E11F1F0), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F1B0), (uint64x2_t)xmmword_24E11F1D0))), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F150), (uint64x2_t)xmmword_24E11F190), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F150), (uint64x2_t)xmmword_24E11F170)), vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F100), (uint64x2_t)xmmword_24E11F130), (int8x16_t)vshlq_u64(
                                (uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F100),
                                (uint64x2_t)xmmword_24E11F120)))))),
         vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F380), (uint64x2_t)xmmword_24E11F3C0), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F320), (uint64x2_t)xmmword_24E11F360), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F2C0), (uint64x2_t)xmmword_24E11F2E0)), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F320), (uint64x2_t)xmmword_24E11F340))), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F380), (uint64x2_t)xmmword_24E11F3A0)), vorrq_s8(vorrq_s8(
               (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F2C0), (uint64x2_t)xmmword_24E11F300), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F260), (uint64x2_t)xmmword_24E11F2A0), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F200), (uint64x2_t)xmmword_24E11F220)), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F260), (uint64x2_t)xmmword_24E11F280))), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F200), (uint64x2_t)xmmword_24E11F240), vorrq_s8(
                   (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F1A0), (uint64x2_t)xmmword_24E11F1E0), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F1A0), (uint64x2_t)xmmword_24E11F1C0))), vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11F140), (uint64x2_t)xmmword_24E11F180), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11F140), (uint64x2_t)xmmword_24E11F160)), vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v2, (int8x16_t)xmmword_24E11BE80), (uint64x2_t)xmmword_24E11BE80), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v3, (int8x16_t)xmmword_24E11BE80),
                                (uint64x2_t)xmmword_24E11F110)))))));
  return vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
}

uint64_t UInt64.deinterleave.getter(unint64_t a1)
{
  char v1 = 0;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0;
  uint64_t v4 = 0;
  while (1)
  {
    unint64_t v5 = ((1 << v4) & a1) >> v1;
    if (HIDWORD(v5)) {
      break;
    }
    uint64_t v6 = v4 + 1;
    unint64_t v7 = ((1 << v6) & a1) >> ++v1;
    if (HIDWORD(v7)) {
      break;
    }
    uint64_t v3 = v3 | v5;
    uint64_t v2 = v2 | v7;
    unint64_t v8 = v6 - 1;
    uint64_t v4 = v6 + 1;
    if (v8 >= 0x3E) {
      return v3 | (v2 << 32);
    }
  }
  uint64_t result = sub_24E116EB0();
  __break(1u);
  return result;
}

uint64_t withCancellableCheckedThrowingContinuation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  uint64_t v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0FCFF8, 0, 0);
}

uint64_t sub_24E0FCFF8()
{
  type metadata accessor for ContinuationBox();
  swift_allocObject();
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = sub_24E0FE1B4();
  *(void *)(v0 + 48) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  void *v3 = v0;
  v3[1] = sub_24E0FD120;
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2338](v5, &unk_2698B8D40, v2, sub_24E0FDA98, v1, 0, 0, v4);
}

uint64_t sub_24E0FD120()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E0FD2A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24E0FD23C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0FD23C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0FD2A0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for ContinuationBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E0FD324()
{
  return sub_24E0FE1B4();
}

uint64_t sub_24E0FD358(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  uint64_t v4[2] = a1;
  void v4[3] = a2;
  v4[6] = *a2;
  return MEMORY[0x270FA2498](sub_24E0FD3A4, 0, 0);
}

uint64_t sub_24E0FD3A4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 32) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = *(void *)(v1 + 80);
  *uint64_t v4 = v0;
  v4[1] = sub_24E0E6158;
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v6, 0, 0, 0xD00000000000002ELL, 0x800000024E119390, sub_24E0FE4C8, v3, v5);
}

uint64_t sub_24E0FD4A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_24E095114;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 48) = *(void *)v6;
  return MEMORY[0x270FA2498](sub_24E0FD3A4, 0, 0);
}

uint64_t sub_24E0FD590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v20[1] = a4;
  uint64_t v7 = *(void *)(*(void *)a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v8 = sub_24E116670();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E116790();
  uint64_t v15 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  v20[0] = a3;
  uint64_t v17 = (v16 + 48) & ~v16;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  *((void *)v18 + 4) = v7;
  *((void *)v18 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v11, v8);
  swift_retain();
  sub_24E09A98C((uint64_t)v14, (uint64_t)&unk_2698B8D68, (uint64_t)v18);
  swift_release();
  return ((uint64_t (*)(uint64_t))v20[0])(a1);
}

uint64_t sub_24E0FD7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_24E0FD7FC, a4, 0);
}

uint64_t sub_24E0FD7FC()
{
  sub_24E0FDBE8(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0FD85C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E1166C0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_24E0E1B04((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_24E1166B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_24E116640();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_2698B8D50;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    id v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_24E0FDA98()
{
  return sub_24E0FD85C(v0);
}

uint64_t sub_24E0FDAA0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  uint64_t result = sub_24E116A90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24E0FDB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24E0FDB88, a4, 0);
}

uint64_t sub_24E0FDB88()
{
  sub_24E0FDDDC();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0FDBE8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v3 = sub_24E116670();
  uint64_t v4 = sub_24E116A90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v12, v8, v4);
  return swift_endAccess();
}

uint64_t sub_24E0FDDDC()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v2 = sub_24E116670();
  uint64_t v3 = sub_24E116A90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v14 = (char *)v0 + *(void *)(v1 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v14, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v2) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v2);
  sub_24E116680();
  sub_24E0FE274();
  uint64_t v16 = swift_allocError();
  sub_24E116050();
  v17[0] = v16;
  sub_24E116650();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v2);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 40))(v14, v7, v3);
  return swift_endAccess();
}

uint64_t sub_24E0FE0CC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  sub_24E116670();
  uint64_t v2 = sub_24E116A90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_24E0FE18C()
{
  uint64_t v0 = sub_24E0FE0CC();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E0FE1B4()
{
  swift_defaultActor_initialize();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v2 = sub_24E116670();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

unint64_t sub_24E0FE274()
{
  unint64_t result = qword_26B1AE8E0;
  if (!qword_26B1AE8E0)
  {
    sub_24E116680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE8E0);
  }
  return result;
}

uint64_t sub_24E0FE2CC()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E0FE30C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_24E095558;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24E0FDB88, v2, 0);
}

uint64_t sub_24E0FE3B4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E0A6D9C;
  return v6(a1);
}

uint64_t sub_24E0FE490()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E0FE4C8(uint64_t a1)
{
  return sub_24E0FD590(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24E0FE4D4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v1 = sub_24E116670();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E0FE5C8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v2 = *(void *)(sub_24E116670() - 8);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_24E095114;
  return MEMORY[0x270FA2498](sub_24E0FD7FC, v3, 0);
}

uint64_t Bool.intValue.getter(char a1)
{
  return a1 & 1;
}

uint64_t TokenBucket.__allocating_init(fillRate:capacity:initialAllocation:)(double a1, double a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  TokenBucket.init(fillRate:capacity:initialAllocation:)(a1, a2, a3);
  return v6;
}

uint64_t TokenBucket.init(fillRate:capacity:initialAllocation:)(double a1, double a2, double a3)
{
  uint64_t v7 = sub_24E115D80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBC0);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)(v3 + 16) = v11;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  if (a1 <= 0.0)
  {
    sub_24E0FEA14();
    swift_allocError();
    *uint64_t v12 = 0xD000000000000015;
    uint64_t v13 = "fillRate must be > 0.";
  }
  else if (a2 <= 0.0)
  {
    sub_24E0FEA14();
    swift_allocError();
    *uint64_t v12 = 0xD000000000000015;
    uint64_t v13 = "capacity must be > 0.";
  }
  else if (a3 >= 0.0)
  {
    if (a3 <= a2)
    {
      *(double *)(v3 + 32) = a2;
      *(double *)(v3 + 40) = a3;
      *(double *)(v3 + 24) = a1;
      sub_24E115D60();
      sub_24E115CB0();
      uint64_t v16 = v15;
      uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
      v17(v10, v7);
      *(void *)(v3 + 104) = v16;
      sub_24E115CC0();
      sub_24E115CB0();
      uint64_t v19 = v18;
      v17(v10, v7);
      *(void *)(v3 + 48) = v19;
      return v3;
    }
    sub_24E0FEA14();
    swift_allocError();
    *uint64_t v12 = 0xD000000000000027;
    uint64_t v13 = "Initial allocation must be <= capacity.";
  }
  else
  {
    sub_24E0FEA14();
    swift_allocError();
    *uint64_t v12 = 0xD00000000000001FLL;
    uint64_t v13 = "initialAllocation must be >= 0.";
  }
  v12[1] = (unint64_t)(v13 - 32) | 0x8000000000000000;
  swift_willThrow();
  swift_release();
  swift_deallocPartialClassInstance();
  return v3;
}

unint64_t sub_24E0FEA14()
{
  unint64_t result = qword_2698B8D70;
  if (!qword_2698B8D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8D70);
  }
  return result;
}

Swift::Bool __swiftcall TokenBucket.operationAllowed(cost:)(Swift::Double cost)
{
  if (cost < 1.0) {
    return 0;
  }
  ((void (*)())MEMORY[0x270FA5388])();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_24E0D0AEC(&v5);
  os_unfair_lock_unlock(v4);
  return v5;
}

uint64_t sub_24E0FEB34@<X0>(unsigned char *a1@<X8>)
{
  double v3 = *(double *)(v1 + 24);
  sub_24E0FEB8C();
  uint64_t result = sub_24E0FECA8(v3);
  *a1 = result & 1;
  return result;
}

uint64_t sub_24E0FEB8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24E115D80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  Swift::Bool v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E115D70();
  sub_24E115CB0();
  double v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v9 = v1[4];
  double v10 = v1[5];
  if (v10 < v9)
  {
    double v11 = v1[3] * (v7 - v1[13]);
    double v12 = v1[9] + v11;
    double v13 = v10 + v11;
    v1[8] = v1[8] + fabs(v13) - v9;
    v1[9] = v12;
    if (v13 < v9) {
      double v9 = v13;
    }
    v1[5] = v9;
  }
  v1[13] = v7;
  return result;
}

uint64_t sub_24E0FECA8(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24E115D80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= 0.0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_24E115D70();
  sub_24E115CB0();
  double v10 = v9;
  double v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  double v12 = *(double *)(v2 + 48);
  sub_24E115CC0();
  sub_24E115CB0();
  double v14 = v13;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v8, v4);
  double v15 = 0.0;
  if (v12 != v14) {
    double v15 = v10 - *(double *)(v2 + 48);
  }
  *(double *)(v2 + 112) = v15;
  double v16 = v15 + *(double *)(v2 + 56);
  *(double *)(v2 + 48) = v10;
  *(double *)(v2 + 56) = v16;
  uint64_t v17 = *(void *)(v2 + 88);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    goto LABEL_10;
  }
  *(void *)(v2 + 88) = v19;
  double v20 = *(double *)(v2 + 40);
  if (v20 < a1) {
    return v20 >= a1;
  }
  *(double *)(v2 + 40) = v20 - a1;
  *(double *)(v2 + 80) = *(double *)(v2 + 80) + a1;
  uint64_t v21 = *(void *)(v2 + 96);
  BOOL v18 = __OFADD__(v21, 1);
  uint64_t v22 = v21 + 1;
  if (!v18)
  {
    *(void *)(v2 + 96) = v22;
    return v20 >= a1;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t TokenBucket.durationUntilOperationAllowed(cost:)()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_24E0FF378(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

Swift::Int __swiftcall TokenBucket.countOfOperationsAllowed(cost:)(Swift::Double cost)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  sub_24E0FF3DC(&v4);
  os_unfair_lock_unlock(v2);
  return v4;
}

uint64_t sub_24E0FEF28@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  uint64_t result = sub_24E0FEB8C();
  double v7 = floor(*(double *)(a1 + 40) / a3);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18)
  {
    *a2 = (uint64_t)v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

Swift::Void __swiftcall TokenBucket.reset()()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_24E0C5230(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24E0FF024(void *a1)
{
  uint64_t v2 = sub_24E115D80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[7] = 0;
  a1[11] = 0;
  a1[12] = 0;
  a1[5] = a1[4];
  sub_24E115CC0();
  sub_24E115CB0();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  a1[6] = v7;
  a1[14] = 0;
  sub_24E115D70();
  sub_24E115CB0();
  uint64_t v10 = v9;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v8)(v5, v2);
  a1[13] = v10;
  a1[9] = 0;
  a1[10] = 0;
  a1[8] = 0;
  return result;
}

void TokenBucket.statistics.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_24E0C5230(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24E0FF1BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 88);
  uint64_t v3 = *(void *)(result + 96);
  if (__OFSUB__(v2, v3))
  {
    __break(1u);
    goto LABEL_10;
  }
  double v4 = *(double *)(result + 72);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v5 = *(double *)(result + 80);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v5 < 9.22337204e18)
  {
    uint64_t v6 = *(void *)(result + 112);
    double v7 = *(double *)(result + 56);
    uint64_t v8 = *(void *)(result + 64);
    *(void *)a2 = v2;
    *(void *)(a2 + 8) = v3;
    *(void *)(a2 + 16) = v2 - v3;
    *(void *)(a2 + 24) = v6;
    *(double *)(a2 + 32) = v7 / (double)v2;
    *(void *)(a2 + 40) = v8;
    *(void *)(a2 + 48) = (uint64_t)v4;
    *(void *)(a2 + 56) = (uint64_t)v5;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t TokenBucket.deinit()
{
  swift_release();
  return v0;
}

uint64_t TokenBucket.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_24E0FF2D8@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_24E0FF31C@<X0>(uint64_t *a1@<X8>)
{
  if (*(double *)(*(void *)(v1 + 16) + 40) <= *(double *)(v1 + 24))
  {
    uint64_t result = sub_24E117320();
  }
  else
  {
    uint64_t result = 0;
    uint64_t v4 = 0;
  }
  *a1 = result;
  a1[1] = v4;
  return result;
}

double sub_24E0FF378@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24E0FF3BC@<X0>(void *a1@<X8>)
{
  return sub_24E0FEF28(*(void *)(v1 + 16), a1, *(double *)(v1 + 24));
}

void *sub_24E0FF3DC@<X0>(void *a1@<X8>)
{
  double result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24E0FF420()
{
  return sub_24E0FF024(v0);
}

uint64_t sub_24E0FF43C@<X0>(uint64_t a1@<X8>)
{
  return sub_24E0FF1BC(v1, a1);
}

uint64_t type metadata accessor for TokenBucket()
{
  return self;
}

uint64_t method lookup function for TokenBucket(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TokenBucket);
}

uint64_t dispatch thunk of TokenBucket.__allocating_init(fillRate:capacity:initialAllocation:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TokenBucket.Statistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TokenBucket.Statistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TokenBucket.Statistics()
{
  return &type metadata for TokenBucket.Statistics;
}

uint64_t AsyncSequence.collect()(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  void v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24E0FF560, 0, 0);
}

uint64_t sub_24E0FF560()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  swift_getAssociatedTypeWitness();
  v0[3] = sub_24E116040();
  uint64_t v3 = swift_task_alloc();
  v0[7] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  long long v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  uint64_t v5 = sub_24E116610();
  *long long v4 = v0;
  v4[1] = sub_24E0FF690;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[4];
  return MEMORY[0x270FA20A8](v0 + 2, v0 + 3, &unk_2698B8D88, v3, v7, v5, v6);
}

uint64_t sub_24E0FF690()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E0A1E10;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24E0FF7AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E0FF7AC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_24E0FF7C8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[4] = AssociatedTypeWitness;
  v2[5] = *(void *)(AssociatedTypeWitness - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E0FF8A0, 0, 0);
}

uint64_t sub_24E0FF8A0()
{
  (*(void (**)(void, void, void))(v0[5] + 16))(v0[6], v0[3], v0[4]);
  sub_24E116610();
  sub_24E1165F0();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E0FF948(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E095114;
  return sub_24E0FF7C8(a1, a2);
}

uint64_t AsyncSequence.first()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  uint64_t v4[2] = a1;
  void v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24E0FFA1C, 0, 0);
}

uint64_t sub_24E0FFA1C()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E0FFAE8;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  return MEMORY[0x270FA20A0](v4, &unk_2698B8DA0, v1, v5, v3);
}

uint64_t sub_24E0FFAE8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E0FFC24, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E0FFC24()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E0FFC88()
{
  return sub_24E0FFD58(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_24E0FFCC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E087B88;
  return sub_24E087B88(1);
}

uint64_t sub_24E0FFD58(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

const char *Feature.FindMy.domain.getter()
{
  return "FindMy";
}

const char *Feature.FindMy.feature.getter()
{
  __n128 result = "AirPods_Pairing_With_FindMyBluetooth";
  switch(*v0)
  {
    case 1:
      __n128 result = "AlphaWasp";
      break;
    case 2:
      __n128 result = "BA_AirPods";
      break;
    case 3:
      __n128 result = "BA_AirPods_Multipart_UI";
      break;
    case 4:
      __n128 result = "BA_LPEM";
      break;
    case 5:
      __n128 result = "BA_Power_Off";
      break;
    case 6:
      __n128 result = "Beep_On_Move";
      break;
    case 7:
      __n128 result = "CowardlyCarrot";
      break;
    case 8:
      __n128 result = "BT_RSSI_Finding";
      break;
    case 9:
      __n128 result = "Item_Sharing";
      break;
    case 0xA:
      __n128 result = "Fences_Migration";
      break;
    case 0xB:
      __n128 result = "FM_NiftyCurve";
      break;
    case 0xC:
      __n128 result = "ManagedCBPeripheral";
      break;
    case 0xD:
      __n128 result = "Network_Scaling_Improvements";
      break;
    case 0xE:
      __n128 result = "FM_Beacons_Optimizations";
      break;
    case 0xF:
      __n128 result = "FM_OwnerProactive";
      break;
    case 0x10:
      __n128 result = "RedStripe";
      break;
    case 0x11:
      __n128 result = "Separation_Alerts";
      break;
    case 0x12:
      __n128 result = "SPPlaySound";
      break;
    case 0x13:
      __n128 result = "SPPlaySoundAll";
      break;
    case 0x14:
      __n128 result = "SPPlaySoundNonOwner";
      break;
    case 0x15:
      __n128 result = "SmilingWheel";
      break;
    case 0x16:
      __n128 result = "Springfield_Integration";
      break;
    case 0x17:
      __n128 result = "Tribeca";
      break;
    case 0x18:
      __n128 result = "TrustedNowUsesReferenceClock";
      break;
    case 0x19:
      __n128 result = "UT_Precision_Finding";
      break;
    case 0x1A:
      __n128 result = "Secure_Locations_Migration";
      break;
    case 0x1B:
      __n128 result = "LineUp";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static Feature.FindMy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Feature.FindMy.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t Feature.FindMy.hashValue.getter()
{
  return sub_24E1171F0();
}

const char *sub_24E100078()
{
  return "FindMy";
}

const char *sub_24E10008C()
{
  return Feature.FindMy.feature.getter();
}

const char *Feature.Bluetooth.domain.getter()
{
  return "BluetoothFeatures";
}

const char *Feature.Bluetooth.feature.getter()
{
  return "SentinelNewLocationFeatures";
}

uint64_t static Feature.Bluetooth.== infix(_:_:)()
{
  return 1;
}

const char *sub_24E1000DC()
{
  return "BluetoothFeatures";
}

const char *sub_24E1000F0()
{
  return "SentinelNewLocationFeatures";
}

const char *Feature.CoreLocation.domain.getter()
{
  return "CoreLocation";
}

const char *Feature.CoreLocation.feature.getter()
{
  return "StandardUT";
}

uint64_t static Feature.CoreLocation.== infix(_:_:)()
{
  return 1;
}

uint64_t Feature.CoreLocation.hash(into:)()
{
  return sub_24E1171D0();
}

unint64_t sub_24E100164()
{
  unint64_t result = qword_2698B8DA8;
  if (!qword_2698B8DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8DA8);
  }
  return result;
}

unint64_t sub_24E1001BC()
{
  unint64_t result = qword_2698B8DB0;
  if (!qword_2698B8DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8DB0);
  }
  return result;
}

unint64_t sub_24E100214()
{
  unint64_t result = qword_2698B8DB8;
  if (!qword_2698B8DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8DB8);
  }
  return result;
}

const char *sub_24E100268()
{
  return "CoreLocation";
}

const char *sub_24E10027C()
{
  return "StandardUT";
}

ValueMetadata *type metadata accessor for Feature()
{
  return &type metadata for Feature;
}

uint64_t getEnumTagSinglePayload for Feature.FindMy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Feature.FindMy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E1003FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.FindMy()
{
  return &type metadata for Feature.FindMy;
}

ValueMetadata *type metadata accessor for Feature.Bluetooth()
{
  return &type metadata for Feature.Bluetooth;
}

unsigned char *_s10FindMyBase7FeatureO9BluetoothOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E1004E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.CoreLocation()
{
  return &type metadata for Feature.CoreLocation;
}

uint64_t Result.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  double v5 = MEMORY[0x270FA5388](a1);
  BOOL v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
}

uint64_t Result.error.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  double v5 = MEMORY[0x270FA5388](a1);
  BOOL v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *(void *)(a1 + 24);
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 56))(a2, 1, 1);
  }
}

uint64_t BinaryDecodable.init(data:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24E08D0B0(a1, a2);
}

BOOL static BinaryDecodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BinaryDecodingError.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t BinaryDecodingError.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t RawRepresentable<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v27 = a5;
  uint64_t v8 = sub_24E116A90();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)&v25 - v9;
  uint64_t v28 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)&v25 - v14;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v32, v16, v17);
  uint64_t v18 = v33;
  uint64_t v19 = v34;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  uint64_t v20 = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 24))(AssociatedTypeWitness, AssociatedTypeWitness, v31, v18, v19);
  if (!v20)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v12, v15, AssociatedTypeWitness);
    uint64_t v21 = v29;
    sub_24E1164F0();
    uint64_t v22 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v8);
      sub_24E0BAD9C();
      swift_allocError();
      *uint64_t v23 = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, AssociatedTypeWitness);
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v27, v29, a2);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t RawRepresentable<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v28 = a4;
  uint64_t v7 = sub_24E116A90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v27 - v9;
  uint64_t v10 = sub_24E116270();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v34, v15, v14);
  sub_24E116240();
  uint64_t v16 = v35;
  uint64_t v17 = v36;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, v16, v17);
  if (v4)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v20 = v18;
    uint64_t v21 = v19;
    uint64_t v22 = v30;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v32 = v20;
    uint64_t v33 = v21;
    uint64_t v23 = v37;
    sub_24E1164F0();
    uint64_t v24 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v29);
      sub_24E0BAD9C();
      swift_allocError();
      *uint64_t v25 = 0;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v28, v23, a2);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24E100F8C()
{
  unint64_t result = qword_2698B8DC0;
  if (!qword_2698B8DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8DC0);
  }
  return result;
}

uint64_t dispatch thunk of BinaryDecodable.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of BinaryDecoding.container()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for BinaryDecodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E1010E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecodingError()
{
  return &type metadata for BinaryDecodingError;
}

uint64_t dispatch thunk of BinaryDecodingContaining.isAtEnd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BinaryDecodingContaining.decodeString(encoding:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BinaryDecodingContaining.decode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of BinaryDecodingContaining.decode(length:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BinaryDecodingContaining.decode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_24E1011FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24E1166C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_24E1166B0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24E095494(a1, &qword_26B1AFD40);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24E116640();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t NSXPCConnection.id.getter()
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24E089078((uint64_t)&v4, (uint64_t)&v5);
  unint64_t v2 = v1;
  sub_24E0F27A8(v0, v1);
  return sub_24E08D0B0(v0, v2);
}

uint64_t sub_24E101410()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1368);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1368);
  if (qword_26B1AEC80 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1398);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t XPCSessionManager.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v2 + 32) = v5;
  swift_defaultActor_initialize();
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(void *)(v5 + 128) = 0;
  *(void *)(v5 + 136) = v6;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(void *)(v5 + 112) = a1;
  *(void *)(v5 + 120) = a2;
  return MEMORY[0x270FA2498](sub_24E10157C, v5, 0);
}

uint64_t sub_24E10157C()
{
  receiver = v0[2].receiver;
  uint64_t v2 = (objc_class *)type metadata accessor for XPCSessionManager.DelegateTrampoline();
  int v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtCC10FindMyBase17XPCSessionManagerP33_A03603F91824D587CF1B3EB0B5E03C5F18DelegateTrampoline_sessionManager] = receiver;
  swift_unownedRetain();
  v0[1].receiver = v3;
  v0[1].super_class = v2;
  id v4 = objc_msgSendSuper2(v0 + 1, sel_init);
  uint64_t v5 = (void *)receiver[16];
  receiver[16] = v4;

  super_class = (uint64_t (*)(id))v0->super_class;
  id v7 = v0[2].receiver;
  return super_class(v7);
}

uint64_t XPCSessionManager.init(name:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 32) = v2;
  swift_defaultActor_initialize();
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = v6;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return MEMORY[0x270FA2498](sub_24E10157C, v2, 0);
}

uint64_t type metadata accessor for XPCSessionManager.DelegateTrampoline()
{
  return self;
}

uint64_t sub_24E1016E8(uint64_t *a1)
{
  uint64_t v3 = v1;
  if (qword_26B1AE7B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24E115F00();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B1B1368);
  sub_24E0F2A78((uint64_t)a1, (uint64_t)v23);
  swift_retain();
  uint64_t v6 = sub_24E115EE0();
  os_log_type_t v7 = sub_24E1169A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v23[16] = v2;
    uint64_t v10 = v9;
    v22[0] = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v11 = v3[14];
    unint64_t v12 = v3[15];
    swift_bridgeObjectRetain();
    sub_24E090400(v11, v12, v22);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v13 = v23[0];
    unint64_t v14 = v23[1];
    swift_bridgeObjectRetain();
    sub_24E090400(v13, v14, v22);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    sub_24E0F4DF0((uint64_t)v23);
    _os_log_impl(&dword_24E083000, v6, v7, "XPCSessionManager(%{public}s: Registering Mach Service: [%{public}s]", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v10, -1, -1);
    MEMORY[0x2533338B0](v8, -1, -1);
  }
  else
  {
    swift_release();
    sub_24E0F4DF0((uint64_t)v23);
  }

  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  id v17 = objc_allocWithZone(MEMORY[0x263F08D88]);
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_24E1161C0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithMachServiceName_, v18);

  sub_24E0F2A78((uint64_t)a1, (uint64_t)v23);
  v23[13] = v19;
  sub_24E0B4460((uint64_t)v23, (uint64_t)v22);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v20 = v19;
  sub_24E0928F8((uint64_t)v22, v15, v16);
  swift_endAccess();
  objc_msgSend(v20, sel_setDelegate_, v3[16]);
  objc_msgSend(v20, sel_resume);

  return sub_24E1019E4((uint64_t)v23);
}

uint64_t sub_24E1019E4(uint64_t a1)
{
  return a1;
}

void sub_24E101A14()
{
  uint64_t v16 = (void *)(v0 + 136);
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v17 = v1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(v1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (!v4) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v9 = v8 | (v6 << 6);
  while (2)
  {
    uint64_t v10 = *(void *)(v1 + 56);
    uint64_t v11 = (void *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v12 = v11[1];
    *(void *)&long long v18 = *v11;
    *((void *)&v18 + 1) = v12;
    sub_24E0B4460(v10 + 112 * v9, (uint64_t)v19);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24E0EC6C4((uint64_t)&v18, (uint64_t)v20, (uint64_t *)&unk_2698B8DE8);
      if (!v21)
      {
        swift_release();
        void *v16 = MEMORY[0x263F8EE80];
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      id v7 = v22[13];
      sub_24E1019E4((uint64_t)v22);
      objc_msgSend(v7, sel_invalidate);

      if (v4) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v13 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v13 < v5)
      {
        unint64_t v14 = *(void *)(v17 + 8 * v13);
        if (v14) {
          goto LABEL_11;
        }
        int64_t v15 = v6 + 2;
        ++v6;
        if (v13 + 1 < v5)
        {
          unint64_t v14 = *(void *)(v17 + 8 * v15);
          if (v14) {
            goto LABEL_14;
          }
          int64_t v6 = v13 + 1;
          if (v13 + 2 < v5)
          {
            unint64_t v14 = *(void *)(v17 + 8 * (v13 + 2));
            if (v14)
            {
              v13 += 2;
              goto LABEL_11;
            }
            int64_t v15 = v13 + 3;
            int64_t v6 = v13 + 2;
            if (v13 + 3 < v5) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v4 = 0;
      long long v18 = 0u;
      memset(v19, 0, sizeof(v19));
    }
    unint64_t v14 = *(void *)(v17 + 8 * v15);
    if (v14)
    {
LABEL_14:
      int64_t v13 = v15;
LABEL_11:
      unint64_t v4 = (v14 - 1) & v14;
      unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
      int64_t v6 = v13;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v5)
    {
      int64_t v6 = v5 - 1;
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_24E101C68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 144);
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  swift_retain();
  return sub_24E0C5278(v3);
}

uint64_t sub_24E101CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 160);
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  swift_retain();
  return sub_24E0C5278(v3);
}

uint64_t XPCSessionManager.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_24E0C5278(*(void *)(v0 + 144));
  sub_24E0C5278(*(void *)(v0 + 160));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCSessionManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_24E0C5278(*(void *)(v0 + 144));
  sub_24E0C5278(*(void *)(v0 + 160));
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t XPCSessionManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E101DAC(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24E1166C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  void v9[5] = a2;
  v9[6] = v4;
  swift_retain();
  id v10 = a2;
  sub_24E1011FC((uint64_t)v7, (uint64_t)&unk_2698B8E78, (uint64_t)v9);
  swift_release();
  return 1;
}

uint64_t sub_24E101EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 712) = a5;
  *(void *)(v5 + 704) = a4;
  return MEMORY[0x270FA2498](sub_24E101F7C, a4, 0);
}

uint64_t sub_24E101F7C()
{
  uint64_t v1 = *(void *)(v0 + 704);
  swift_beginAccess();
  *(void *)(v0 + 720) = *(void *)(v1 + 136);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E102030, 0, 0);
}

uint64_t sub_24E102030()
{
  uint64_t v79 = v0;
  uint64_t v78 = *MEMORY[0x263EF8340];
  id v1 = objc_msgSend(*(id *)(v0 + 712), sel_serviceName);
  uint64_t v2 = *(void *)(v0 + 720);
  if (!v1)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    if (qword_26B1AE7B8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24E115F00();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B1B1368);
    swift_retain();
    uint64_t v22 = sub_24E115EE0();
    os_log_type_t v23 = sub_24E116980();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void *)(v0 + 704);
    if (v24)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(void *)&v77[0] = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v29 = *(void *)(v25 + 112);
      unint64_t v28 = *(void *)(v25 + 120);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 656) = sub_24E090400(v29, v28, (uint64_t *)v77);
      sub_24E116AB0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v22, v23, "XPCSessionManager(%{public}s: Not accepting connection since a service description is not registered", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v27, -1, -1);
      MEMORY[0x2533338B0](v26, -1, -1);
    }
    else
    {

      swift_release();
    }
    objc_msgSend(*(id *)(v0 + 712), sel_invalidate);
    goto LABEL_19;
  }
  uint64_t v3 = v1;
  uint64_t v4 = (_OWORD *)(v0 + 16);
  uint64_t v5 = sub_24E1161F0();
  uint64_t v7 = v6;

  if (*(void *)(v2 + 16) && (unint64_t v8 = sub_24E093F10(v5, v7), (v9 & 1) != 0))
  {
    sub_24E0B4460(*(void *)(*(void *)(v0 + 720) + 56) + 112 * v8, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *uint64_t v4 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 24))
  {
    sub_24E095494(v0 + 16, (uint64_t *)&unk_2698B8E80);
    goto LABEL_13;
  }
  uint64_t v10 = v0 + 240;
  uint64_t v11 = *(void **)(v0 + 712);
  uint64_t v12 = v0 + 560;
  long long v13 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 208) = v13;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 112);
  long long v14 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 128) = *v4;
  *(_OWORD *)(v0 + 144) = v14;
  long long v15 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 176) = v15;
  sub_24E0F2A78(v0 + 128, v0 + 240);
  sub_24E1044AC(v0 + 176, v0 + 560);
  objc_msgSend(v11, sel_auditToken);
  long long v16 = v77[1];
  *(_OWORD *)(v0 + 752) = v77[0];
  *(_OWORD *)(v0 + 768) = v16;
  uint64_t v17 = xpc_copy_code_signing_identity_for_token();
  if (!v17)
  {
    sub_24E103D04();
    swift_allocError();
    swift_willThrow();
    sub_24E095494(v0 + 560, &qword_26B1AFD10);
    sub_24E1019E4(v0 + 128);
    sub_24E0F4DF0(v0 + 240);
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  uint64_t v18 = v17;
  uint64_t v75 = sub_24E116380();
  unint64_t v20 = v19;
  MEMORY[0x2533338B0](v18, -1, -1);
  sub_24E1044AC(v0 + 560, v0 + 520);
  if (!*(void *)(v0 + 544))
  {
    sub_24E095494(v0 + 520, &qword_26B1AFD10);
    goto LABEL_25;
  }
  sub_24E08F05C((long long *)(v0 + 520), v0 + 480);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 480), *(void *)(v0 + 504));
  if (NSXPCConnection.hasEntitlement<A>(_:)())
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 480);
LABEL_25:
    if (qword_26B1AE7B8 != -1) {
      swift_once();
    }
    uint64_t v32 = *(void **)(v0 + 712);
    uint64_t v33 = sub_24E115F00();
    __swift_project_value_buffer(v33, (uint64_t)qword_26B1B1368);
    swift_retain_n();
    id v34 = v32;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_24E115EE0();
    os_log_type_t v36 = sub_24E1169A0();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void **)(v0 + 712);
    uint64_t v39 = *(void *)(v0 + 704);
    if (v37)
    {
      os_log_type_t type = v36;
      uint64_t v40 = swift_slowAlloc();
      char v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(void *)&v77[0] = v72;
      *(_DWORD *)uint64_t v40 = 136446722;
      uint64_t v42 = *(void *)(v39 + 112);
      unint64_t v41 = *(void *)(v39 + 120);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 688) = sub_24E090400(v42, v41, (uint64_t *)v77);
      sub_24E116AB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2114;
      *(void *)(v0 + 640) = v38;
      id v43 = v38;
      sub_24E116AB0();
      *char v69 = v38;

      uint64_t v12 = v0 + 560;
      *(_WORD *)(v40 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 648) = sub_24E090400(v75, v20, (uint64_t *)v77);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24E083000, v35, type, "XPCSessionManager(%{public}s: New XPC connection: %{public}@ from %s", (uint8_t *)v40, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v69, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v72, -1, -1);
      MEMORY[0x2533338B0](v40, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v44 = *(void **)(v0 + 712);
    objc_msgSend(v44, sel_setExportedInterface_, *(void *)(v0 + 272));
    objc_msgSend(v44, sel_setExportedObject_, *(void *)(v0 + 264));
    objc_msgSend(v44, sel_setRemoteObjectInterface_, *(void *)(v0 + 280));
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    *(void *)(v46 + 24) = v44;
    *(void *)(v0 + 376) = sub_24E104550;
    *(void *)(v0 + 384) = v46;
    *(void *)(v0 + 344) = MEMORY[0x263EF8330];
    *(void *)(v0 + 352) = 1107296256;
    *(void *)(v0 + 360) = sub_24E0F15B0;
    *(void *)(v0 + 368) = &block_descriptor_2;
    uint64_t v47 = _Block_copy((const void *)(v0 + 344));
    id v48 = v44;
    swift_release();
    objc_msgSend(v48, sel_setInterruptionHandler_, v47);
    _Block_release(v47);
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v49;
    *(void *)(v50 + 24) = v48;
    *(void *)(v0 + 424) = sub_24E1045E4;
    *(void *)(v0 + 432) = v50;
    *(void *)(v0 + 392) = MEMORY[0x263EF8330];
    *(void *)(v0 + 400) = 1107296256;
    *(void *)(v0 + 408) = sub_24E0F15B0;
    *(void *)(v0 + 416) = &block_descriptor_32;
    uint64_t v51 = _Block_copy((const void *)(v0 + 392));
    id v52 = v48;
    swift_release();
    objc_msgSend(v52, sel_setInvalidationHandler_, v51);
    _Block_release(v51);
    uint64_t v53 = *(int **)(v0 + 328);
    *(void *)(v0 + 728) = v53;
    if (v53)
    {
      *(void *)(v0 + 736) = *(void *)(v0 + 336);
      aBlock = (uint64_t (*)(uint64_t))((char *)v53 + *v53);
      swift_retain();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 744) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_24E102DB4;
      uint64_t v55 = *(void *)(v0 + 712);
      return aBlock(v55);
    }
    objc_msgSend(*(id *)(v0 + 712), sel_resume);
    sub_24E095494(v12, &qword_26B1AFD10);
    sub_24E1019E4(v0 + 128);
    sub_24E0F4DF0(v0 + 240);
    goto LABEL_19;
  }
  objc_msgSend(*(id *)(v0 + 712), sel_invalidate);
  if (qword_26B1AE7B8 != -1) {
    swift_once();
  }
  uint64_t v56 = *(void **)(v0 + 712);
  uint64_t v57 = sub_24E115F00();
  __swift_project_value_buffer(v57, (uint64_t)qword_26B1B1368);
  sub_24E10461C(v0 + 480, v0 + 440);
  swift_retain_n();
  id v58 = v56;
  swift_bridgeObjectRetain();
  long long v59 = sub_24E115EE0();
  os_log_type_t v60 = sub_24E1169A0();
  BOOL v61 = os_log_type_enabled(v59, v60);
  uint64_t v62 = *(void **)(v0 + 712);
  uint64_t v63 = *(void *)(v0 + 704);
  if (v61)
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v74 = (void *)swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(void *)&v77[0] = v73;
    *(_DWORD *)uint64_t v64 = 136446978;
    char v70 = v59;
    unint64_t v68 = v20;
    uint64_t v65 = *(void *)(v63 + 112);
    unint64_t v66 = *(void *)(v63 + 120);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 664) = sub_24E090400(v65, v66, (uint64_t *)v77);
    sub_24E116AB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2114;
    *(void *)(v0 + 672) = v62;
    id v67 = v62;
    uint64_t v10 = v0 + 240;
    sub_24E116AB0();
    *uint64_t v74 = v62;

    *(_WORD *)(v64 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 680) = sub_24E090400(v75, v68, (uint64_t *)v77);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v64 + 32) = 2080;
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 440), *(void *)(v0 + 464));
    sub_24E1164E0();
    *(void *)(v0 + 696) = sub_24E090400(*(void *)(v0 + 624), *(void *)(v0 + 632), (uint64_t *)v77);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 440);
    _os_log_impl(&dword_24E083000, v70, v60, "XPCSessionManager(%{public}s: Ignoring unentitled XPC connection: %{public}@ from %s [Missing %s entitlement]", (uint8_t *)v64, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v74, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v73, -1, -1);
    MEMORY[0x2533338B0](v64, -1, -1);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1(v0 + 440);
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_24E095494(v0 + 560, &qword_26B1AFD10);
  sub_24E1019E4(v0 + 128);
  sub_24E0F4DF0(v10);
  __swift_destroy_boxed_opaque_existential_1(v0 + 480);
LABEL_19:
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
  return v30();
}

uint64_t sub_24E102DB4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 784) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E102EE0, 0, 0);
}

uint64_t sub_24E102EE0()
{
  int v1 = *(unsigned __int8 *)(v0 + 784);
  sub_24E0C5278(*(void *)(v0 + 728));
  uint64_t v2 = &selRef_resume;
  if (!v1) {
    uint64_t v2 = &selRef_invalidate;
  }
  [*(id *)(v0 + 712) *v2];
  sub_24E095494(v0 + 560, &qword_26B1AFD10);
  sub_24E1019E4(v0 + 128);
  sub_24E0F4DF0(v0 + 240);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void NSXPCConnection.machServiceName.getter(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_serviceName);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_24E1161F0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
}

void *NSXPCConnection.codeSigningIdentity.getter()
{
  objc_msgSend(v0, sel_auditToken);
  uint64_t v1 = xpc_copy_code_signing_identity_for_token();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v0 = (void *)sub_24E116380();
    MEMORY[0x2533338B0](v2, -1, -1);
  }
  else
  {
    sub_24E103D04();
    swift_allocError();
    swift_willThrow();
  }
  return v0;
}

BOOL NSXPCConnection.hasEntitlement<A>(_:)()
{
  sub_24E1164E0();
  Swift::Bool v0 = NSXPCConnection.hasEntitlement(_:)(v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24E103184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_24E1031A4, a4, 0);
}

uint64_t sub_24E1031A4()
{
  sub_24E103204(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24E103204(void *a1)
{
  uint64_t v3 = *(void (**)(void *))(v1 + 144);
  if (v3)
  {
    swift_retain();
    v3(a1);
    sub_24E0C5278((uint64_t)v3);
  }
  else
  {
    if (qword_26B1AE7B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24E115F00();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B1B1368);
    id v10 = a1;
    uint64_t v5 = sub_24E115EE0();
    os_log_type_t v6 = sub_24E1169A0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v9 = v10;
      sub_24E116AB0();
      *unint64_t v8 = v10;

      _os_log_impl(&dword_24E083000, v5, v6, "Connection interrupted: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v8, -1, -1);
      MEMORY[0x2533338B0](v7, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_24E103424(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD40);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = sub_24E1166C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = 0;
    uint64_t v12[3] = 0;
    v12[4] = v10;
    void v12[5] = a2;
    id v13 = a2;
    sub_24E09A98C((uint64_t)v8, a4, (uint64_t)v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_24E10354C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_24E10356C, a4, 0);
}

uint64_t sub_24E10356C()
{
  sub_24E1035CC(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24E1035CC(void *a1)
{
  uint64_t v3 = *(void (**)(void *))(v1 + 160);
  if (v3)
  {
    swift_retain();
    v3(a1);
    sub_24E0C5278((uint64_t)v3);
  }
  else
  {
    if (qword_26B1AE7B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24E115F00();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B1B1368);
    id v10 = a1;
    uint64_t v5 = sub_24E115EE0();
    os_log_type_t v6 = sub_24E1169A0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v9 = v10;
      sub_24E116AB0();
      *unint64_t v8 = v10;

      _os_log_impl(&dword_24E083000, v5, v6, "Connection invalidated: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v8, -1, -1);
      MEMORY[0x2533338B0](v7, -1, -1);
    }
    else
    {
    }
  }
}

Swift::Bool __swiftcall NSXPCConnection.hasEntitlement(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v4 = (void *)sub_24E1161C0();
  id v5 = objc_msgSend(v1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_24E116BB0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_24E0EC6C4((uint64_t)v17, (uint64_t)v18, &qword_26B1AEBD8);
  if (v18[3])
  {
    if (swift_dynamicCast() & 1) != 0 && (v16) {
      return 1;
    }
  }
  else
  {
    sub_24E095494((uint64_t)v18, &qword_26B1AEBD8);
  }
  if (qword_26B1AEC80 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24E115F00();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B1B1398);
  id v8 = v1;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  id v10 = sub_24E115EE0();
  os_log_type_t v11 = sub_24E116980();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    id v13 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v18[0] = v15;
    *(_DWORD *)uint64_t v12 = 138543618;
    *(void *)&v17[0] = v9;
    id v14 = v9;
    sub_24E116AB0();
    *id v13 = v9;

    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&v17[0] = sub_24E090400(countAndFlagsBits, (unint64_t)object, v18);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v10, v11, "Connection %{public}@ does not have entitlement: [%{public}s]", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE820);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v15, -1, -1);
    MEMORY[0x2533338B0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_24E103AEC()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v5 = *v0;
  uint64_t v1 = sub_24E089078((uint64_t)&v5, (uint64_t)&v6);
  unint64_t v3 = v2;
  sub_24E0F27A8(v1, v2);
  return sub_24E08D0B0(v1, v3);
}

id sub_24E103C3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24E103C84()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B1398);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1B1398);
  return sub_24E115EF0();
}

unint64_t sub_24E103D04()
{
  unint64_t result = qword_26B1AE7A0;
  if (!qword_26B1AE7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE7A0);
  }
  return result;
}

uint64_t type metadata accessor for XPCSessionManager()
{
  return self;
}

uint64_t method lookup function for XPCSessionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCSessionManager);
}

uint64_t dispatch thunk of XPCSessionManager.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  id v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 224) + **(int **)(v2 + 224));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24E087974;
  return v8(a1, a2);
}

uint64_t dispatch thunk of XPCSessionManager.register(service:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of XPCSessionManager.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of XPCSessionManager.setInterruptionHandler(block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of XPCSessionManager.setInvalidationHandler(block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

void destroy for XPCSessionManager.ListenerRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  if (*(void *)(a1 + 88)) {
    swift_release();
  }
  uint64_t v2 = *(void **)(a1 + 104);
}

uint64_t initializeWithCopy for XPCSessionManager.ListenerRecord(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (void *)a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a2[5];
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  id v8 = a2 + 6;
  uint64_t v9 = a2[9];
  swift_bridgeObjectRetain();
  id v10 = v5;
  id v11 = v6;
  id v12 = v7;
  if (v9)
  {
    uint64_t v13 = a2[10];
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v13;
    (**(void (***)(uint64_t, void *, uint64_t))(v9 - 8))(a1 + 48, v8, v9);
  }
  else
  {
    long long v14 = *((_OWORD *)v8 + 1);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 64) = v14;
    *(void *)(a1 + 80) = v8[4];
  }
  uint64_t v15 = a2[11];
  if (v15)
  {
    uint64_t v16 = a2[12];
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  }
  uint64_t v17 = (void *)a2[13];
  *(void *)(a1 + 104) = v17;
  id v18 = v17;
  return a1;
}

uint64_t assignWithCopy for XPCSessionManager.ListenerRecord(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 40);
  id v11 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  uint64_t v13 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v13)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else if (v13)
  {
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = v15;
LABEL_8:
  uint64_t v16 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v16)
    {
      uint64_t v18 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v16;
      *(void *)(a1 + 96) = v18;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_15;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v17 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  swift_retain();
  swift_release();
LABEL_15:
  unint64_t v19 = *(void **)(a2 + 104);
  unint64_t v20 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v19;
  id v21 = v19;

  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for XPCSessionManager.ListenerRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;

  uint64_t v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  id v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v10;
      *(void *)(a1 + 96) = v12;
      goto LABEL_10;
    }
LABEL_9:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_10;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  swift_release();
LABEL_10:
  uint64_t v13 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  return a1;
}

uint64_t getEnumTagSinglePayload for XPCSessionManager.ListenerRecord(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCSessionManager.ListenerRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCSessionManager.ListenerRecord()
{
  return &type metadata for XPCSessionManager.ListenerRecord;
}

uint64_t sub_24E1043F8()
{
  return objectdestroyTm_0(56);
}

uint64_t sub_24E104400()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24E095114;
  *(_OWORD *)(v2 + 704) = v3;
  return MEMORY[0x270FA2498](sub_24E101F7C, v3, 0);
}

uint64_t sub_24E1044AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFD10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E104514()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E104550()
{
  return sub_24E103424(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_27002F238, (uint64_t)&unk_2698B8EA8);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t objectdestroy_24Tm()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E1045E4()
{
  return sub_24E103424(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_27002F210, (uint64_t)&unk_2698B8E98);
}

uint64_t sub_24E10461C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24E104680()
{
  return objectdestroyTm_0(48);
}

uint64_t sub_24E104688()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24E095114;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_24E10356C, v3, 0);
}

uint64_t sub_24E104734()
{
  return objectdestroyTm_0(48);
}

uint64_t objectdestroyTm_0(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24E104790()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24E095558;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_24E1031A4, v3, 0);
}

uint64_t sub_24E104844()
{
  uint64_t v0 = sub_24E115F00();
  __swift_allocate_value_buffer(v0, qword_26B1B13B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1B13B0);
  return sub_24E115EF0();
}

uint64_t sub_24E1048B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24E115C70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = sub_24E08CFDC(0xD000000000000010, 0x800000024E117FD0);
  uint64_t v24 = v5;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_24;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 + 0x4000000000000000 < 0) {
        goto LABEL_23;
      }
      uint64_t v13 = sub_24E08B1C8(0, (2 * v9) & ~((2 * v9) >> 63), 0, MEMORY[0x263F8EE78]);
      if (a2 >> 62)
      {
        sub_24E08D248(a1, a2);
        sub_24E08D248(a1, a2);
      }
LABEL_10:
      sub_24E115C80();
      sub_24E08D0B0(a1, a2);
      sub_24E107AFC(&qword_26B1AE5C8, MEMORY[0x263F06F40]);
      sub_24E116AA0();
      if (v26) {
        goto LABEL_11;
      }
      unint64_t v16 = v25;
      uint64_t v17 = v8 + 4;
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_25;
    case 3uLL:
      uint64_t v13 = sub_24E08B1C8(0, 0, 0, MEMORY[0x263F8EE78]);
      goto LABEL_10;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
  do
  {
    if (v16 >> 4 >= v8[2])
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      JUMPOUT(0x24E104C08);
    }
    __int16 v18 = *((_WORD *)v17 + (v16 >> 4));
    unint64_t v20 = *((void *)v13 + 2);
    unint64_t v19 = *((void *)v13 + 3);
    unint64_t v21 = v20 + 1;
    if (v20 >= v19 >> 1) {
      uint64_t v13 = sub_24E08B1C8((char *)(v19 > 1), v20 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v21;
    *(_WORD *)&v13[2 * v20 + 32] = v18;
    if ((v16 & 0xF) >= v8[2]) {
      goto LABEL_22;
    }
    __int16 v22 = *((_WORD *)v17 + (v16 & 0xF));
    unint64_t v23 = *((void *)v13 + 3);
    if ((uint64_t)(v20 + 2) > (uint64_t)(v23 >> 1)) {
      uint64_t v13 = sub_24E08B1C8((char *)(v23 > 1), v20 + 2, 1, v13);
    }
    *((void *)v13 + 2) = v20 + 2;
    *(_WORD *)&v13[2 * v21 + 32] = v22;
    sub_24E116AA0();
    unint64_t v16 = v25;
  }
  while (v26 != 1);
LABEL_11:
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
  swift_release();
  uint64_t v14 = sub_24E1161B0();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t static MACAddress.length.getter()
{
  return 6;
}

uint64_t MACAddress.AddressType.description.getter(char a1)
{
  if (a1) {
    return 0x6D6F646E61722ELL;
  }
  else {
    return 0x63696C6275702ELL;
  }
}

FindMyBase::MACAddress::AddressType_optional __swiftcall MACAddress.AddressType.init(rawValue:)(Swift::UInt8 rawValue)
{
  if (rawValue == 1) {
    v1.value = FindMyBase_MACAddress_AddressType_random;
  }
  else {
    v1.value = FindMyBase_MACAddress_AddressType_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t MACAddress.AddressType.rawValue.getter(char a1)
{
  return a1 & 1;
}

uint64_t sub_24E104C74()
{
  return sub_24E116550();
}

uint64_t sub_24E104CD4()
{
  return sub_24E116520();
}

uint64_t sub_24E104D24()
{
  if (*v0) {
    return 0x6D6F646E61722ELL;
  }
  else {
    return 0x63696C6275702ELL;
  }
}

uint64_t MACAddress.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_24E08D248(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t MACAddress.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E08D248(*v0, v2);
  sub_24E1048B0(v1, v2);
  sub_24E08D0B0(v1, v2);
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  sub_24E116370();
  sub_24E116370();
  return 60;
}

uint64_t MACAddress.hexString.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E08D248(v1, v2);
  uint64_t v3 = sub_24E1048B0(v1, v2);
  sub_24E08D0B0(v1, v2);
  return v3;
}

uint64_t MACAddress.type.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MACAddress.init(addressToSanitize:type:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3 & 1;
  unint64_t v5 = a2;
  uint64_t v6 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x24E105078);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      if (v8 == 6)
      {
        uint64_t v16 = a1;
        unint64_t v17 = a2;
        sub_24E08D248(a1, a2);
        sub_24E115CA0();
        sub_24E115BE0();
        switch(v17 >> 62)
        {
          case 1uLL:
            uint64_t result = sub_24E08D0B0(v6, v5);
            LODWORD(v13) = HIDWORD(v16) - v16;
            if (__OFSUB__(HIDWORD(v16), v16)) {
              goto LABEL_21;
            }
            uint64_t v13 = (int)v13;
LABEL_13:
            if (v13 == 6)
            {
              *(void *)a4 = v16;
              *(void *)(a4 + 8) = v17;
              *(unsigned char *)(a4 + 16) = v4;
              return result;
            }
LABEL_16:
            a1 = v16;
            a2 = v17;
            break;
          case 2uLL:
            uint64_t v15 = *(void *)(v16 + 16);
            uint64_t v14 = *(void *)(v16 + 24);
            uint64_t result = sub_24E08D0B0(v6, v5);
            uint64_t v13 = v14 - v15;
            if (!__OFSUB__(v14, v15)) {
              goto LABEL_13;
            }
            goto LABEL_22;
          case 3uLL:
            sub_24E08D0B0(v6, v5);
            goto LABEL_16;
          default:
            uint64_t result = sub_24E08D0B0(v6, v5);
            uint64_t v13 = BYTE6(v17);
            goto LABEL_13;
        }
      }
LABEL_17:
      uint64_t result = sub_24E08D0B0(a1, a2);
      *(void *)a4 = 0;
      *(void *)(a4 + 8) = 0;
      *(unsigned char *)(a4 + 16) = 2;
      return result;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t MACAddress.init(data:type:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v5 = a3 & 1;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(result) - result;
      if (__OFSUB__(HIDWORD(result), result))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x24E105130);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if (v6 == 6)
      {
        *(void *)a4 = result;
        *(void *)(a4 + 8) = a2;
      }
      else
      {
LABEL_8:
        uint64_t result = sub_24E08D0B0(result, a2);
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        char v5 = 2;
      }
      *(unsigned char *)(a4 + 16) = v5;
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(result + 16);
      uint64_t v7 = *(void *)(result + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

double MACAddress.init(string:type:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_24E105190(a1, a2, a3 & 1, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  char v5 = v8;
  double result = *(double *)&v7;
  *(_OWORD *)a4 = v7;
  *(unsigned char *)(a4 + 16) = v5;
  return result;
}

uint64_t sub_24E105190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24E115900();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v20 - v13;
  sub_24E1158E0();
  sub_24E1158F0();
  if (a2)
  {
    v20[0] = a1;
    v20[1] = a2;
    sub_24E085334();
    v20[0] = sub_24E116AD0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
    sub_24E085388();
    sub_24E116140();
    swift_bridgeObjectRelease();
    if (sub_24E116330() == 12)
    {
      uint64_t v15 = sub_24E089C10();
      if (v16 >> 60 != 15)
      {
        MACAddress.init(data:type:)(v15, v16, a3 & 1, a4);
        unint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
        v17(v11, v8);
        return ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 2;
  return result;
}

uint64_t MACAddress.init(stringLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24E089C10();
  if (v7 >> 60 == 15)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    sub_24E105190(a1, a2, 1, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    char v16 = v19;
    if (v19 != 2)
    {
      uint64_t v9 = v17;
      unint64_t v8 = v18;
      uint64_t result = swift_bridgeObjectRelease();
      char v15 = v16 & 1;
      goto LABEL_12;
    }
LABEL_15:
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_24E116C70();
    sub_24E116370();
    sub_24E116370();
    sub_24E116370();
    sub_24E116EC0();
    __break(1u);
    JUMPOUT(0x24E105570);
  }
  unint64_t v8 = v7;
  uint64_t v9 = v6;
  switch(v7 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(v6) - v6;
      if (__OFSUB__(HIDWORD(v6), v6))
      {
        __break(1u);
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      uint64_t v10 = (int)v10;
LABEL_7:
      if (v10 != 6)
      {
LABEL_9:
        sub_24E09886C(v6, v7);
        goto LABEL_10;
      }
      uint64_t result = swift_bridgeObjectRelease();
      char v15 = 1;
LABEL_12:
      *(void *)a3 = v9;
      *(void *)(a3 + 8) = v8;
      *(unsigned char *)(a3 + 16) = v15;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(v6 + 16);
      uint64_t v11 = *(void *)(v6 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_7;
      }
      goto LABEL_14;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v10 = BYTE6(v7);
      goto LABEL_7;
  }
}

uint64_t MACAddress.bluetoothAddress.getter()
{
  uint64_t v1 = 0;
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v4 = (int)*v0;
  uint64_t v37 = *v0 >> 32;
  unint64_t v38 = BYTE6(v2);
  char v5 = (void *)MEMORY[0x263F8EE78];
  unint64_t v6 = v2 >> 62;
  unint64_t v35 = (unint64_t)*v0 >> 8;
  unint64_t v33 = (unint64_t)*v0 >> 24;
  unint64_t v34 = (unint64_t)*v0 >> 16;
  unint64_t v31 = (unint64_t)*v0 >> 40;
  unint64_t v32 = HIDWORD(*v0);
  unint64_t v29 = HIBYTE(*v0);
  unint64_t v30 = HIWORD(*v0);
  unint64_t v27 = v2 >> 16;
  unint64_t v28 = v2 >> 8;
  unint64_t v25 = HIDWORD(v2);
  unint64_t v26 = v2 >> 24;
  char v36 = v2;
  unint64_t v24 = v2 >> 40;
  do
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE5F0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_24E11BE80;
    uint64_t v8 = v7;
    switch(v6)
    {
      case 1uLL:
        if (v1 < v4 || v1 >= v37) {
          goto LABEL_23;
        }
        uint64_t v10 = sub_24E115980();
        if (!v10) {
          goto LABEL_29;
        }
        uint64_t v11 = v10;
        uint64_t v12 = sub_24E1159B0();
        uint64_t v13 = v1 - v12;
        if (!__OFSUB__(v1, v12)) {
          goto LABEL_15;
        }
        goto LABEL_25;
      case 2uLL:
        if (v1 < *(void *)(v3 + 16)) {
          goto LABEL_24;
        }
        if (v1 >= *(void *)(v3 + 24)) {
          goto LABEL_26;
        }
        uint64_t v14 = sub_24E115980();
        if (!v14) {
          goto LABEL_30;
        }
        uint64_t v11 = v14;
        uint64_t v15 = sub_24E1159B0();
        uint64_t v13 = v1 - v15;
        if (__OFSUB__(v1, v15)) {
          goto LABEL_27;
        }
LABEL_15:
        char v9 = *(unsigned char *)(v11 + v13);
        break;
      case 3uLL:
        goto LABEL_28;
      default:
        if (v1 >= v38)
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
        }
        LOBYTE(v39) = v4;
        BYTE1(v39) = v35;
        BYTE2(v39) = v34;
        BYTE3(v39) = v33;
        BYTE4(v39) = v32;
        BYTE5(v39) = v31;
        BYTE6(v39) = v30;
        HIBYTE(v39) = v29;
        char v40 = v36;
        char v41 = v28;
        char v42 = v27;
        char v43 = v26;
        char v44 = v25;
        char v45 = v24;
        char v9 = *((unsigned char *)&v39 + v1);
        break;
    }
    *(void *)(v8 + 56) = MEMORY[0x263F8E778];
    *(void *)(v8 + 64) = MEMORY[0x263F8E7C0];
    *(unsigned char *)(v8 + 32) = v9;
    uint64_t v16 = sub_24E116220();
    uint64_t v18 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v5 = sub_24E08B2D4(0, v5[2] + 1, 1, v5);
    }
    unint64_t v20 = v5[2];
    unint64_t v19 = v5[3];
    if (v20 >= v19 >> 1) {
      char v5 = sub_24E08B2D4((void *)(v19 > 1), v20 + 1, 1, v5);
    }
    v5[2] = v20 + 1;
    unint64_t v21 = &v5[2 * v20];
    v21[4] = v16;
    v21[5] = v18;
    ++v1;
  }
  while (v1 != 6);
  uint64_t v39 = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
  sub_24E085388();
  uint64_t v22 = sub_24E116140();
  swift_bridgeObjectRelease_n();
  return v22;
}

uint64_t MACAddress.bluetoothAddressWithType.getter()
{
  uint64_t v2 = *(unsigned __int8 *)(v0 + 16);
  sub_24E115C50();
  return v2;
}

uint64_t MACAddress.udid.getter()
{
  MACAddress.bluetoothAddress.getter();
  sub_24E116370();
  swift_bridgeObjectRelease();
  uint64_t v0 = String.utf8Data.getter();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_24E106ECC(v0, v2);
  unint64_t v5 = v4;
  sub_24E08D0B0(v0, v2);
  sub_24E08D248(v3, v5);
  sub_24E1048B0(v3, v5);
  sub_24E08D0B0(v3, v5);
  uint64_t v6 = sub_24E1162A0();
  swift_bridgeObjectRelease();
  sub_24E08D0B0(v3, v5);
  return v6;
}

uint64_t MACAddress.isNull.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_24E115C70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *v1;
  unint64_t v7 = v1[1];
  switch(v7 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_24E08D248(v6, v7);
      sub_24E08D248(v6, v7);
      sub_24E08D248(v6, v7);
      break;
    default:
      break;
  }
  sub_24E115C80();
  sub_24E08D0B0(v6, v7);
  sub_24E107AFC(&qword_26B1AE5C8, MEMORY[0x263F06F40]);
  do
  {
    sub_24E116AA0();
    uint64_t v8 = v11;
  }
  while ((v11 & 1) == 0 && !v10[14]);
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24E08D0B0(v6, v7);
  return v8;
}

uint64_t MACAddress.dataRepresentation.getter()
{
  sub_24E1158D0();
  swift_allocObject();
  sub_24E1158C0();
  sub_24E10730C();
  uint64_t v0 = sub_24E1158B0();
  swift_release();
  return v0;
}

double MACAddress.init(dataRepresentation:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24E1158A0();
  swift_allocObject();
  sub_24E115890();
  sub_24E107360();
  sub_24E115880();
  sub_24E08D0B0(a1, a2);
  swift_release();
  if (!v3)
  {
    double result = *(double *)&v8;
    *(_OWORD *)a3 = v8;
    *(unsigned char *)(a3 + 16) = v9;
  }
  return result;
}

uint64_t MACAddress.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E08D248(*v0, v2);
  sub_24E115C20();
  sub_24E08D0B0(v1, v2);
  return sub_24E1171E0();
}

uint64_t static MACAddress.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  return sub_24E106C34(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & ~(v2 ^ v3) & 1;
}

uint64_t sub_24E105FC4()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_24E105FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E1079D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E106010(uint64_t a1)
{
  unint64_t v2 = sub_24E1073B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E10604C(uint64_t a1)
{
  unint64_t v2 = sub_24E1073B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MACAddress.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8EC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  int v14 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E1073B4();
  sub_24E117240();
  uint64_t v12 = v8;
  uint64_t v13 = v7;
  char v15 = 0;
  sub_24E0C6304();
  uint64_t v9 = v11[1];
  sub_24E117000();
  if (!v9)
  {
    LOBYTE(v12) = v14;
    char v15 = 1;
    sub_24E107408();
    sub_24E117000();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MACAddress.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E1171C0();
  sub_24E08D248(v1, v2);
  sub_24E115C20();
  sub_24E08D0B0(v1, v2);
  sub_24E1171E0();
  return sub_24E1171F0();
}

uint64_t MACAddress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8ED8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E1073B4();
  sub_24E117220();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v15 = 0;
  sub_24E0C64D8();
  sub_24E116FA0();
  uint64_t v9 = v13;
  unint64_t v10 = v14;
  char v15 = 1;
  sub_24E08D248(v13, v14);
  sub_24E10745C();
  sub_24E116FA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v11 = v13;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24E08D0B0(v9, v10);
}

uint64_t sub_24E1064A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MACAddress.init(from:)(a1, a2);
}

uint64_t sub_24E1064BC(void *a1)
{
  return MACAddress.encode(to:)(a1);
}

uint64_t sub_24E1064D4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E1171C0();
  sub_24E08D248(v1, v2);
  sub_24E115C20();
  sub_24E08D0B0(v1, v2);
  sub_24E1171E0();
  return sub_24E1171F0();
}

uint64_t sub_24E106550()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E08D248(*v0, v2);
  sub_24E115C20();
  sub_24E08D0B0(v1, v2);
  return sub_24E1171E0();
}

uint64_t sub_24E1065B4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E1171C0();
  sub_24E08D248(v1, v2);
  sub_24E115C20();
  sub_24E08D0B0(v1, v2);
  sub_24E1171E0();
  return sub_24E1171F0();
}

uint64_t sub_24E106630@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return MACAddress.init(stringLiteral:)(*a1, a1[1], a2);
}

double sub_24E106640@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24E1158A0();
  swift_allocObject();
  sub_24E115890();
  sub_24E107360();
  sub_24E115880();
  sub_24E08D0B0(a1, a2);
  swift_release();
  if (!v3)
  {
    double result = *(double *)&v8;
    *(_OWORD *)a3 = v8;
    *(unsigned char *)(a3 + 16) = v9;
  }
  return result;
}

uint64_t sub_24E10670C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  return sub_24E106C34(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & ~(v2 ^ v3) & 1;
}

uint64_t sub_24E106750@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_24E08D248(a2, a3);
      unint64_t v10 = (char *)sub_24E115980();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_24E1159B0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_24E1159A0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24E1069B4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_24E08D0B0(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_24E115980();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_24E1159B0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_24E1159A0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_24E1069C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24E115980();
  if (!result || (uint64_t result = sub_24E1159B0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24E1159A0();
      sub_24E116020();
      sub_24E107AFC(&qword_26B1AE858, MEMORY[0x263F047F8]);
      return sub_24E115F90();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24E106AA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_24E106750((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_24E106B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_24E115980();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_24E1159B0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_24E1159A0();
  sub_24E106750(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_24E106C34(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x24E106E9CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_24E08D248(a3, a4);
                  sub_24E08D248(a1, a2);
                  char v17 = sub_24E106B7C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_24E08D0B0(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_24E08D248(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_24E106B7C(v21, v22, v20, a3, a4);
                  sub_24E08D0B0(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_24E08D248(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_24E08D248(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_24E106AA4(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_24E08D0B0(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24E106ECC(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24E116020();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E115FD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E107AFC(&qword_26B1AE858, MEMORY[0x263F047F8]);
  sub_24E115FC0();
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v18 = v8;
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      uint64_t v17 = 0;
      sub_24E08D248(a1, a2);
      sub_24E1069C4((int)a1, a1 >> 32);
      sub_24E08D0B0(a1, a2);
      uint64_t v8 = v18;
      goto LABEL_9;
    case 2uLL:
      uint64_t v17 = 0;
      uint64_t v18 = v8;
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      sub_24E08D248(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v13 = v12;
      uint64_t v8 = v18;
      sub_24E1069C4(v13, v11);
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v21, 0, 14);
      goto LABEL_7;
    default:
      v21[0] = a1;
      LOWORD(v21[1]) = a2;
      BYTE2(v21[1]) = BYTE2(a2);
      BYTE3(v21[1]) = BYTE3(a2);
      BYTE4(v21[1]) = BYTE4(a2);
      BYTE5(v21[1]) = BYTE5(a2);
LABEL_7:
      sub_24E115F90();
LABEL_8:
      sub_24E08D0B0(a1, a2);
LABEL_9:
      sub_24E115FA0();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      uint64_t v22 = v7;
      uint64_t v23 = sub_24E107AFC(&qword_26B1AE850, MEMORY[0x263F045C0]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v10, v7);
      __swift_project_boxed_opaque_existential_1(v21, v22);
      sub_24E115A90();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      return v15;
  }
}

unint64_t sub_24E10730C()
{
  unint64_t result = qword_2698B8EB0;
  if (!qword_2698B8EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EB0);
  }
  return result;
}

unint64_t sub_24E107360()
{
  unint64_t result = qword_2698B8EB8;
  if (!qword_2698B8EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EB8);
  }
  return result;
}

unint64_t sub_24E1073B4()
{
  unint64_t result = qword_2698B8EC8;
  if (!qword_2698B8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EC8);
  }
  return result;
}

unint64_t sub_24E107408()
{
  unint64_t result = qword_2698B8ED0;
  if (!qword_2698B8ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8ED0);
  }
  return result;
}

unint64_t sub_24E10745C()
{
  unint64_t result = qword_2698B8EE0;
  if (!qword_2698B8EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EE0);
  }
  return result;
}

unint64_t sub_24E1074B4()
{
  unint64_t result = qword_2698B8EE8;
  if (!qword_2698B8EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EE8);
  }
  return result;
}

unint64_t sub_24E10750C()
{
  unint64_t result = qword_2698B8EF0;
  if (!qword_2698B8EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EF0);
  }
  return result;
}

unint64_t sub_24E107564()
{
  unint64_t result = qword_2698B8EF8;
  if (!qword_2698B8EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8EF8);
  }
  return result;
}

unint64_t sub_24E1075BC()
{
  unint64_t result = qword_2698B8F00;
  if (!qword_2698B8F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F00);
  }
  return result;
}

uint64_t destroy for MACAddress(uint64_t a1)
{
  return sub_24E08D0B0(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t _s10FindMyBase10MACAddressVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_24E08D248(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for MACAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_24E08D248(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_24E08D0B0(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MACAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_24E08D0B0(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MACAddress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MACAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MACAddress()
{
  return &type metadata for MACAddress;
}

ValueMetadata *type metadata accessor for MACAddress.AddressType()
{
  return &type metadata for MACAddress.AddressType;
}

unsigned char *_s10FindMyBase10MACAddressV11AddressTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E107894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MACAddress.CodingKeys()
{
  return &type metadata for MACAddress.CodingKeys;
}

unint64_t sub_24E1078D0()
{
  unint64_t result = qword_2698B8F08;
  if (!qword_2698B8F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F08);
  }
  return result;
}

unint64_t sub_24E107928()
{
  unint64_t result = qword_2698B8F10;
  if (!qword_2698B8F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F10);
  }
  return result;
}

unint64_t sub_24E107980()
{
  unint64_t result = qword_2698B8F18;
  if (!qword_2698B8F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F18);
  }
  return result;
}

uint64_t sub_24E1079D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_24E1170B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24E107AA8()
{
  unint64_t result = qword_2698B8F20;
  if (!qword_2698B8F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F20);
  }
  return result;
}

uint64_t sub_24E107AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E107B4C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  long long v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_24E116A90();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v40 - v21;
  MEMORY[0x270FA5388](v23);
  char v40 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  char v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  id v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  char v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_24E116480();
  uint64_t v61 = sub_24E116040();
  uint64_t v56 = sub_24E116D60();
  sub_24E116D30();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  long long v59 = v30;
  uint64_t result = sub_24E116470();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    unint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    unint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_24E116AA0();
      uint64_t result = (*v33)(v22, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v22, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v22, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v22, AssociatedTypeWitness);
      sub_24E116D40();
      if (!--v31)
      {
        uint64_t v35 = v54;
        char v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  char v36 = v51;
LABEL_9:
  sub_24E116AA0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    id v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    unint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_24E116D40();
      sub_24E116AA0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t Array<A>.uniqued()()
{
  sub_24E116060();
  sub_24E116610();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_24E116D20();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24E108310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  char v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v13 - v9;
  (*(void (**)(char *, double))(v4 + 16))(v6, v8);
  sub_24E1168E0();
  char v11 = sub_24E1168C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, a3);
  return v11 & 1;
}

uint64_t sub_24E108448(uint64_t a1)
{
  return sub_24E108310(a1, *(void *)(v1 + 32), *(void *)(v1 + 16)) & 1;
}

uint64_t Array<A>.mean.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v23 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v22 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v20 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v24 = a1;
  sub_24E116610();
  swift_getWitnessTable();
  uint64_t result = sub_24E116920();
  if ((result & 1) == 0)
  {
    uint64_t v20 = a1;
    uint64_t v24 = a1;
    swift_getAssociatedConformanceWitness();
    sub_24E117100();
    uint64_t v16 = sub_24E117090();
    MEMORY[0x270FA5388](v16);
    uint64_t v17 = v21;
    *(&v20 - 4) = a2;
    *(&v20 - 3) = v17;
    *(&v20 - 2) = a2;
    swift_getWitnessTable();
    sub_24E1164C0();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v18(v11, a2);
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v14, a2);
    if (sub_24E116B80() < 65)
    {
      sub_24E116B90();
      sub_24E116B70();
    }
    else
    {
      sub_24E08F7A0();
      sub_24E08F7F4();
      sub_24E116070();
    }
    v18(v19, a2);
    MEMORY[0x253332220](v20, a2);
    return ((uint64_t (*)(char *, uint64_t))v18)(v14, a2);
  }
  return result;
}

uint64_t sub_24E108834()
{
  return sub_24E116ED0();
}

uint64_t Array.chunked(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x253332220](a2, a3);
  if (a1)
  {
    void v11[7] = 0;
    v11[8] = result;
    v11[9] = a1;
    MEMORY[0x270FA5388](result);
    void v11[2] = a3;
    double v11[3] = a2;
    void v11[4] = a1;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8F28);
    uint64_t v8 = (char *)sub_24E116610();
    unint64_t v9 = sub_24E108A58();
    return sub_24E107B4C((void (*)(char *, char *))sub_24E108A34, (uint64_t)v11, v7, v8, MEMORY[0x263F8E628], v9, MEMORY[0x263F8E658], v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_24E108960@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v5 = *result;
  uint64_t v6 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t *)MEMORY[0x253332220](a2, a4);
    if ((uint64_t)result >= v6) {
      uint64_t v8 = (void *)v6;
    }
    else {
      uint64_t v8 = result;
    }
    if ((uint64_t)v8 >= v5)
    {
      sub_24E116630();
      sub_24E116BC0();
      swift_getWitnessTable();
      uint64_t result = (uint64_t *)sub_24E116620();
      *a5 = result;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_24E108A34@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_24E108960(a1, v2[3], v2[4], v2[2], a2);
}

unint64_t sub_24E108A58()
{
  unint64_t result = qword_2698B8F30;
  if (!qword_2698B8F30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698B8F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F30);
  }
  return result;
}

uint64_t Array<A>.data.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_24E08DFA8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Array<A>.dataRepresentation.getter()
{
  sub_24E1158D0();
  swift_allocObject();
  sub_24E1158C0();
  sub_24E116610();
  swift_getWitnessTable();
  uint64_t v0 = sub_24E1158B0();
  swift_release();
  return v0;
}

uint64_t Array<A>.init(dataRepresentation:)(uint64_t a1, unint64_t a2)
{
  sub_24E1158A0();
  swift_allocObject();
  sub_24E115890();
  sub_24E116610();
  swift_getWitnessTable();
  sub_24E115880();
  sub_24E08D0B0(a1, a2);
  uint64_t result = swift_release();
  if (!v2) {
    return v6;
  }
  return result;
}

uint64_t sub_24E108DA4()
{
  return Array<A>.dataRepresentation.getter();
}

uint64_t sub_24E108DB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Array<A>.init(dataRepresentation:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t Array<A>.asyncFlatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  v6[10] = swift_task_alloc();
  uint64_t v8 = *(void *)(a4 - 8);
  v6[11] = v8;
  v6[12] = *(void *)(v8 + 64);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E108EE8, 0, 0);
}

uint64_t sub_24E108EE8()
{
  uint64_t v1 = v0[7];
  v0[15] = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24E116040();
  v0[2] = v2;
  uint64_t v3 = swift_bridgeObjectRetain();
  if (MEMORY[0x253332250](v3, v1))
  {
    char v4 = sub_24E1165C0();
    sub_24E116590();
    if (v4)
    {
      (*(void (**)(void, unint64_t, void))(v0[11] + 16))(v0[14], v0[6] + ((*(unsigned __int8 *)(v0[11] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[11] + 80)), v0[7]);
    }
    else
    {
      uint64_t v11 = v0[12];
      uint64_t result = sub_24E116CC0();
      if (v11 != 8)
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = result;
      uint64_t v13 = v0[14];
      uint64_t v14 = v0[11];
      uint64_t v15 = v0[7];
      v0[3] = v12;
      (*(void (**)(uint64_t, void *, uint64_t))(v14 + 16))(v13, v0 + 3, v15);
      swift_unknownObjectRelease();
    }
    v0[16] = 1;
    uint64_t v5 = (int *)v0[4];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[13], v0[14], v0[7]);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[17] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_24E109148;
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[10];
    return v16(v8, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
    return v10(v2);
  }
}

uint64_t sub_24E109148()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24E10951C;
  }
  else
  {
    uint64_t v2 = sub_24E10926C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E10926C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  sub_24E116610();
  sub_24E1165E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v1 == MEMORY[0x253332250](v5, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v6);
  }
  uint64_t v9 = v0[16];
  char v10 = sub_24E1165C0();
  sub_24E116590();
  if (v10)
  {
    uint64_t result = (*(uint64_t (**)(void, unint64_t, void))(v0[11] + 16))(v0[14], v0[6]+ ((*(unsigned __int8 *)(v0[11] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[11] + 80))+ *(void *)(v0[11] + 72) * v9, v0[7]);
  }
  else
  {
    uint64_t v15 = v0[12];
    uint64_t result = sub_24E116CC0();
    if (v15 != 8)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[11];
    uint64_t v18 = v0[7];
    v0[3] = result;
    (*(void (**)(uint64_t, void *, uint64_t))(v17 + 16))(v16, v0 + 3, v18);
    uint64_t result = swift_unknownObjectRelease();
  }
  v0[16] = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = (int *)v0[4];
  (*(void (**)(void, void, void))(v0[11] + 32))(v0[13], v0[14], v0[7]);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[17] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_24E109148;
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[10];
  return v19(v14, v13);
}

uint64_t sub_24E10951C()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[13], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t Array<A>.asyncStream()(uint64_t a1, uint64_t a2)
{
  return sub_24E109810(a1, a2);
}

uint64_t sub_24E1095D0()
{
  return sub_24E116720();
}

uint64_t Array<A>.asyncThrowingStream()(uint64_t a1, uint64_t a2)
{
  return sub_24E109AA8(a1, a2);
}

uint64_t sub_24E109690()
{
  return sub_24E116840();
}

uint64_t sub_24E10975C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F8F680];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v3 = sub_24E116820();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t Array<A>.infiniteAsyncStream()(uint64_t a1, uint64_t a2)
{
  return sub_24E109810(a1, a2);
}

uint64_t sub_24E109810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E116700();
  double v5 = MEMORY[0x270FA5388](v4);
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-v6], *MEMORY[0x263F8F580], v5);
  return sub_24E116760();
}

uint64_t sub_24E109908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24E1166E0();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a1, a3, v10);
  sub_24E116730();
  sub_24E116710();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t Array<A>.infiniteAsyncThrowingStream()(uint64_t a1, uint64_t a2)
{
  return sub_24E109AA8(a1, a2);
}

uint64_t sub_24E109AA8(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v4 = sub_24E116820();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v8 = a2;
  uint64_t v9 = a1;
  sub_24E10975C((uint64_t)&v7[-v5]);
  return sub_24E116860();
}

uint64_t sub_24E109B74()
{
  return sub_24E1164D0();
}

uint64_t sub_24E109BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[1] = a2;
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B1AFD30);
  uint64_t v8 = sub_24E116810();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a1, a3, v10);
  sub_24E116850();
  sub_24E116830();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_24E109DAC()
{
  return sub_24E1095D0();
}

uint64_t sub_24E109DB4()
{
  return sub_24E109690();
}

uint64_t sub_24E109DBC()
{
  return sub_24E109B74();
}

uint64_t sub_24E109DEC()
{
  return sub_24E109B74();
}

uint64_t sub_24E109E1C(uint64_t a1)
{
  return sub_24E109BF4(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_24E109E38(uint64_t a1)
{
  return sub_24E109908(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_24E109E54(uint64_t a1)
{
  return sub_24E109E1C(a1);
}

uint64_t sub_24E109E6C(uint64_t a1)
{
  return sub_24E109E38(a1);
}

uint64_t sub_24E109E84()
{
  type metadata accessor for BackgroundActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_2698B8F40 = v0;
  return result;
}

uint64_t static BackgroundActor.shared.getter()
{
  if (qword_2698B7970 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t BackgroundActor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BackgroundActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t BackgroundActor.unownedExecutor.getter()
{
  return v0;
}

unint64_t sub_24E109F7C()
{
  unint64_t result = qword_2698B8F48;
  if (!qword_2698B8F48)
  {
    type metadata accessor for BackgroundActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F48);
  }
  return result;
}

uint64_t type metadata accessor for BackgroundActor()
{
  return self;
}

uint64_t sub_24E109FF4()
{
  if (qword_2698B7970 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_24E10A050(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for BackgroundActor();
  return MEMORY[0x270FA2150](v3, a2);
}

uint64_t method lookup function for BackgroundActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BackgroundActor);
}

void ManagedDefault.wrappedValue.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  id v5 = *v2;
  swift_bridgeObjectRetain();
  PrefixedDefaults.subscript.getter(v4, a2);
  swift_bridgeObjectRelease();
}

void sub_24E10A140(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ManagedDefault();
  ManagedDefault.wrappedValue.getter(v2, a1);
}

uint64_t ManagedDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_24E10A458(a1, a2);
  uint64_t v3 = sub_24E116A90();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

void (*ManagedDefault.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  id v5 = malloc(0x38uLL);
  *a1 = v5;
  *id v5 = a2;
  v5[1] = v2;
  v5[2] = *(void *)(a2 + 16);
  uint64_t v6 = sub_24E116A90();
  v5[3] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[4] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[6] = v9;
  ManagedDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_24E10A310;
}

void sub_24E10A310(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 48);
  uint64_t v5 = *(void *)(*(void *)a1 + 24);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = *(void *)(*(void *)a1 + 8);
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 40), v4, v5);
    uint64_t v9 = *(void *)(v7 + 24);
    uint64_t v10 = *(void *)(v7 + 32);
    swift_bridgeObjectRetain();
    sub_24E0B0A68((uint64_t)v3, v9, v10, v8);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v6 + 8);
    v11(v3, v5);
    v11(v4, v5);
  }
  else
  {
    uint64_t v12 = *(void *)(v7 + 24);
    uint64_t v13 = *(void *)(v7 + 32);
    swift_bridgeObjectRetain();
    sub_24E0B0A68((uint64_t)v4, v12, v13, v8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

__n128 ManagedDefault.init(prefixedDefaults:key:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result = *a1;
  unint64_t v5 = a1[1].n128_u64[0];
  *a4 = *a1;
  a4[1].n128_u64[0] = v5;
  a4[1].n128_u64[1] = a2;
  a4[2].n128_u64[0] = a3;
  return result;
}

void sub_24E10A458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_24E0B0A68(a1, v4, v5, v6);
}

void sub_24E10A4C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManagedDefault();
  sub_24E10A458(a1, v2);
}

uint64_t sub_24E10A500()
{
  return 16;
}

__n128 sub_24E10A50C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24E10A518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24E10A520(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_24E10A564(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(void *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24E10A5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24E10A640(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24E10A698(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24E10A6E0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ManagedDefault()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24E10A740(unint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v1 == 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v1 < 3)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v1 == 3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v1 < 5)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v1 == 5)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v1 < 7)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v1 == 7)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v1 < 9)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v1 == 9)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v1 < 0xB)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v1 == 11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v1 < 0xD)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v1 == 13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v1 < 0xF)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v1 != 15) {
    return *(unsigned __int8 *)(result + 32) | ((unint64_t)*(unsigned __int8 *)(result + 33) << 8) | ((unint64_t)*(unsigned __int8 *)(result + 34) << 16) | ((unint64_t)*(unsigned __int8 *)(result + 35) << 24) | ((unint64_t)*(unsigned __int8 *)(result + 36) << 32) | ((unint64_t)*(unsigned __int8 *)(result + 37) << 40) | ((unint64_t)*(unsigned __int8 *)(result + 38) << 48) | ((unint64_t)*(unsigned __int8 *)(result + 39) << 56);
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t UUID.init(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x24E10AA2CLL);
      }
      uint64_t v6 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v9 = sub_24E115E00();
      uint64_t v14 = *(void *)(v9 - 8);
      if (v6 == *(void *)(v14 + 64))
      {
        uint64_t v10 = sub_24E10B188(a1, a2);
        sub_24E10A740((unint64_t)v10);
        swift_release();
        sub_24E115DD0();
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = 1;
      }
      sub_24E08D0B0(a1, a2);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      return v12(a3, v11, 1, v9);
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      uint64_t v6 = v7 - v8;
      if (!__OFSUB__(v7, v8)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t UUID.init(bytes:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_24E115E00();
  uint64_t v9 = *(void *)(v5 - 8);
  if (v4 == *(void *)(v9 + 64))
  {
    sub_24E10A740(a1);
    swift_bridgeObjectRelease();
    sub_24E115DD0();
    uint64_t v6 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = 1;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  return v7(a2, v6, 1, v5);
}

uint64_t UUID.data.getter()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_24E115DE0();
  char v10 = v0;
  char v11 = v1;
  char v12 = v2;
  char v13 = v3;
  char v14 = v4;
  char v15 = v5;
  char v16 = v6;
  char v17 = v7;
  return sub_24E08899C((uint64_t)&v9, (uint64_t)&v18);
}

double UUID.bytes.getter()
{
  unint64_t v0 = sub_24E115DE0();
  char v1 = v0;
  char v3 = v2;
  unint64_t v4 = v0 >> 8;
  unint64_t v5 = v0 >> 16;
  unint64_t v6 = v0 >> 24;
  unint64_t v7 = HIDWORD(v0);
  unint64_t v8 = v0 >> 40;
  unint64_t v9 = HIWORD(v0);
  unint64_t v10 = HIBYTE(v0);
  unint64_t v11 = v2 >> 8;
  unint64_t v14 = v2 >> 16;
  unint64_t v15 = v2 >> 24;
  unint64_t v16 = HIDWORD(v2);
  unint64_t v17 = v2 >> 40;
  unint64_t v18 = HIWORD(v2);
  unint64_t v19 = HIBYTE(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
  uint64_t v12 = swift_allocObject();
  *(void *)&double result = 16;
  *(_OWORD *)(v12 + 16) = xmmword_24E11F140;
  *(unsigned char *)(v12 + 32) = v1;
  *(unsigned char *)(v12 + 33) = v4;
  *(unsigned char *)(v12 + 34) = v5;
  *(unsigned char *)(v12 + 35) = v6;
  *(unsigned char *)(v12 + 36) = v7;
  *(unsigned char *)(v12 + 37) = v8;
  *(unsigned char *)(v12 + 38) = v9;
  *(unsigned char *)(v12 + 39) = v10;
  *(unsigned char *)(v12 + 40) = v3;
  *(unsigned char *)(v12 + 41) = v11;
  *(unsigned char *)(v12 + 42) = v14;
  *(unsigned char *)(v12 + 43) = v15;
  *(unsigned char *)(v12 + 44) = v16;
  *(unsigned char *)(v12 + 45) = v17;
  *(unsigned char *)(v12 + 46) = v18;
  *(unsigned char *)(v12 + 47) = v19;
  return result;
}

uint64_t UUID.init(mock:template:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AFD48);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v44 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a2;
  unint64_t v7 = sub_24E115DE0();
  char v8 = v7;
  char v10 = v9;
  unint64_t v11 = v7 >> 8;
  unint64_t v12 = v7 >> 16;
  unint64_t v33 = v7 >> 16;
  unint64_t v34 = v7 >> 8;
  unint64_t v13 = v7 >> 24;
  unint64_t v14 = HIDWORD(v7);
  unint64_t v31 = HIDWORD(v7);
  unint64_t v32 = v7 >> 24;
  unint64_t v15 = v7 >> 40;
  unint64_t v30 = v7 >> 40;
  unint64_t v28 = HIWORD(v7);
  unint64_t v16 = HIBYTE(v7);
  unint64_t v41 = v9 >> 24;
  unint64_t v42 = v9 >> 8;
  unint64_t v38 = HIDWORD(v9);
  unint64_t v39 = v9 >> 16;
  unint64_t v40 = v9 >> 40;
  unint64_t v36 = HIBYTE(v7);
  unint64_t v37 = HIWORD(v9);
  unint64_t v43 = HIBYTE(v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
  uint64_t v17 = swift_allocObject();
  long long v29 = xmmword_24E11F140;
  *(_OWORD *)(v17 + 16) = xmmword_24E11F140;
  *(unsigned char *)(v17 + 32) = v8;
  *(unsigned char *)(v17 + 33) = v11;
  *(unsigned char *)(v17 + 34) = v12;
  *(unsigned char *)(v17 + 35) = v13;
  *(unsigned char *)(v17 + 36) = v14;
  *(unsigned char *)(v17 + 37) = v15;
  LOBYTE(v13) = v28;
  *(unsigned char *)(v17 + 38) = v28;
  *(unsigned char *)(v17 + 39) = v16;
  *(unsigned char *)(v17 + 40) = v10;
  unint64_t v35 = a1 >> 8;
  *(unsigned char *)(v17 + 41) = v42;
  *(unsigned char *)(v17 + 42) = v39;
  unint64_t v42 = a1 >> 16;
  *(unsigned char *)(v17 + 43) = v41;
  *(unsigned char *)(v17 + 44) = v38;
  *(unsigned char *)(v17 + 45) = v40;
  *(unsigned char *)(v17 + 46) = v37;
  *(unsigned char *)(v17 + 47) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v29;
  *(unsigned char *)(inited + 32) = v8;
  *(unsigned char *)(inited + 33) = v34;
  *(unsigned char *)(inited + 34) = v33;
  *(unsigned char *)(inited + 35) = v32;
  *(unsigned char *)(inited + 36) = v31;
  *(unsigned char *)(inited + 37) = v30;
  *(unsigned char *)(inited + 38) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(inited + 39) = v36;
  *(unsigned char *)(inited + 40) = HIBYTE(a1);
  *(unsigned char *)(inited + 41) = BYTE6(a1);
  *(unsigned char *)(inited + 42) = BYTE5(a1);
  *(unsigned char *)(inited + 43) = BYTE4(a1);
  *(unsigned char *)(inited + 44) = BYTE3(a1);
  *(unsigned char *)(inited + 45) = v42;
  *(unsigned char *)(inited + 46) = v35;
  *(unsigned char *)(inited + 47) = a1;
  unint64_t v43 = sub_24E115E00();
  uint64_t v19 = *(void *)(v43 - 8);
  if (*(void *)(v19 + 64) == 16)
  {
    unint64_t v20 = sub_24E10A740(inited);
    unint64_t v41 = v20 >> 16;
    unint64_t v42 = v20 >> 8;
    unint64_t v39 = HIDWORD(v20);
    unint64_t v40 = v20 >> 24;
    unint64_t v37 = HIWORD(v20);
    unint64_t v38 = v20 >> 40;
    unint64_t v35 = v21 >> 8;
    unint64_t v36 = HIBYTE(v20);
    swift_setDeallocating();
    uint64_t v22 = v44;
    sub_24E115DD0();
    unint64_t v23 = v43;
    (*(void (**)(char *, void, uint64_t, unint64_t))(v19 + 56))(v22, 0, 1, v43);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, unint64_t))(v19 + 48))(v22, 1, v23);
    if (result != 1)
    {
      (*(void (**)(uint64_t, unint64_t))(v19 + 8))(v26, v23);
      return (*(uint64_t (**)(uint64_t, char *, unint64_t))(v19 + 32))(v27, v22, v23);
    }
  }
  else
  {
    swift_setDeallocating();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, unint64_t))(v19 + 56))(v44, 1, 1, v43);
  }
  __break(1u);
  return result;
}

void *sub_24E10B188(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24E115C70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEBD0);
          char v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          void v8[2] = v9;
          void v8[3] = 2 * v12 - 64;
        }
        sub_24E08D248(a1, a2);
        uint64_t v13 = sub_24E115B90();
        sub_24E08D0B0(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x24E10B334);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24E10B344(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_24E08B958(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for Keychain.Item() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *char v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E10B4E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_24E08B2D4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24E116F20();
  __break(1u);
  return result;
}

uint64_t sub_24E10B63C(uint64_t a1)
{
  return sub_24E10E248(a1, qword_26B1B12F0);
}

uint64_t static Keychain.set<A>(data:account:service:dataProtectionClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7)
{
  unsigned __int8 v8 = *a6;
  return sub_24E111538(a1, a2, a3, a4, a5, &v8, 0, 0, a7);
}

uint64_t static Keychain.set<A>(data:account:service:dataProtectionClass:accessGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 v10 = *a6;
  return sub_24E111538(a1, a2, a3, a4, a5, &v10, a7, a8, a9);
}

void static Keychain.item(account:service:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
}

void static Keychain.item(account:service:accessGroup:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
}

char *static Keychain.data(account:service:)(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEA78);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Keychain.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Keychain.item(account:service:useSystemKeychain:nonDestructive:accessGroup:)(a1, a2, a3, a4, 0, 0, 0, (uint64_t)v11);
  if (!v4)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_24E095494((uint64_t)v11, &qword_26B1AEA78);
      return 0;
    }
    else
    {
      sub_24E111C78((uint64_t)v11, (uint64_t)v15);
      unint64_t v16 = &v15[*(int *)(v12 + 40)];
      uint64_t v11 = *(char **)v16;
      sub_24E111CDC(*(void *)v16, *((void *)v16 + 1));
      sub_24E111CF0((uint64_t)v15);
    }
  }
  return v11;
}

char *static Keychain.data(account:service:accessGroup:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  int64_t v22 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEA78);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Keychain.Item();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v23;
  static Keychain.item(account:service:useSystemKeychain:nonDestructive:accessGroup:)(a1, a2, a3, a4, 0, a5, v22, (uint64_t)v13);
  if (!v18)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_24E095494((uint64_t)v13, &qword_26B1AEA78);
      return 0;
    }
    else
    {
      sub_24E111C78((uint64_t)v13, (uint64_t)v17);
      uint64_t v19 = &v17[*(int *)(v14 + 40)];
      uint64_t v13 = *(char **)v19;
      sub_24E111CDC(*(void *)v19, *((void *)v19 + 1));
      sub_24E111CF0((uint64_t)v17);
    }
  }
  return v13;
}

uint64_t static Keychain.deleteData(account:service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24E113C10(a1, a2, a3, a4, 0, 0);
}

uint64_t static Keychain.deleteData(account:service:accessGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24E113C10(a1, a2, a3, a4, a5, a6);
}

uint64_t static Keychain.set<A>(data:account:service:dataProtectionClass:useSystemKeychain:accessGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_24E111538(a1, a2, a3, a4, a5, a6, a8, a9, a10);
}

void static Keychain.item(account:service:useSystemKeychain:nonDestructive:accessGroup:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W5>, void *a6@<X6>, void *a7@<X7>, uint64_t a8@<X8>)
{
  sub_24E110548();
  if (v8) {
    return;
  }
  char v56 = a5;
  uint64_t v55 = a8;
  unint64_t v17 = (void *)*MEMORY[0x263F17090];
  uint64_t v18 = MEMORY[0x263F8D310];
  uint64_t v59 = MEMORY[0x263F8D310];
  v58[0] = a3;
  v58[1] = a4;
  sub_24E094E10(v58, v57);
  id v19 = v17;
  swift_bridgeObjectRetain();
  unint64_t v20 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v57, v19, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  int64_t v22 = (void *)*MEMORY[0x263F16ED8];
  uint64_t v59 = v18;
  v58[0] = a1;
  v58[1] = a2;
  sub_24E094E10(v58, v57);
  id v23 = v22;
  swift_bridgeObjectRetain();
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v57, v23, v24);

  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)*MEMORY[0x263F17400];
  uint64_t v26 = (void *)*MEMORY[0x263F17410];
  type metadata accessor for CFString(0);
  uint64_t v59 = v27;
  v58[0] = v26;
  sub_24E094E10(v58, v57);
  id v28 = v25;
  id v29 = v26;
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v57, v28, v30);
  unint64_t v60 = v20;

  swift_bridgeObjectRelease();
  unint64_t v31 = (void *)*MEMORY[0x263F17520];
  unint64_t v32 = (void *)*MEMORY[0x263EFFB40];
  if (!*MEMORY[0x263EFFB40])
  {
    id v48 = v31;
    sub_24E10E9BC((uint64_t)v48, v57);

    sub_24E095494((uint64_t)v57, &qword_26B1AEBD8);
    id v49 = (id)*MEMORY[0x263F17580];
    sub_24E10E9BC((uint64_t)v49, v57);

    sub_24E095494((uint64_t)v57, &qword_26B1AEBD8);
    char v42 = v56;
    if (a7) {
      goto LABEL_4;
    }
LABEL_6:
    unint64_t v47 = v60;
    goto LABEL_7;
  }
  type metadata accessor for CFBoolean(0);
  uint64_t v34 = v33;
  uint64_t v59 = v33;
  v58[0] = v32;
  sub_24E094E10(v58, v57);
  id v35 = v31;
  id v36 = v32;
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v57, v35, v37);

  swift_bridgeObjectRelease();
  unint64_t v38 = (void *)*MEMORY[0x263F17580];
  uint64_t v59 = v34;
  v58[0] = v36;
  sub_24E094E10(v58, v57);
  id v39 = v38;
  id v40 = v36;
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v57, v39, v41);
  unint64_t v60 = v20;

  swift_bridgeObjectRelease();
  char v42 = v56;
  if (!a7) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v43 = (void *)*MEMORY[0x263F16E80];
  uint64_t v59 = MEMORY[0x263F8D310];
  v58[0] = a6;
  v58[1] = a7;
  sub_24E094E10(v58, v57);
  swift_bridgeObjectRetain();
  id v44 = v43;
  unint64_t v45 = v60;
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v57, v44, v46);
  unint64_t v47 = v45;
  unint64_t v60 = v45;

  swift_bridgeObjectRelease();
LABEL_7:
  unint64_t v50 = sub_24E112510(v47, v42 & 1);
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v50 + 16);
  uint64_t v52 = type metadata accessor for Keychain.Item();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = v53;
  if (v51)
  {
    sub_24E113F00(v50 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)), v55);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v52);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v55, 1, 1, v52);
  }
  swift_bridgeObjectRelease();
}

uint64_t static Keychain.deleteItem(account:service:useSystemKeychain:accessGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_24E113C10(a1, a2, a3, a4, a6, a7);
}

uint64_t static Keychain.allItems(accessGroup:)(uint64_t a1, uint64_t a2)
{
  return sub_24E113F64(0, a1, a2);
}

uint64_t static Keychain.allItems(useSystemKeychain:nondestructive:accessGroup:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_24E113F64(a2, a3, a4);
}

void *static Keychain.allServices(accessGroup:)(uint64_t a1, void *a2)
{
  return sub_24E1147CC(0, a1, a2);
}

void *static Keychain.allServices(useSystemKeychain:nonDestructive:accessGroup:)(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  return sub_24E1147CC(a2, a3, a4);
}

void *static Keychain.allAccounts(accessGroup:)(uint64_t a1, void *a2)
{
  return sub_24E1149E0(0, a1, a2);
}

void *static Keychain.allAccounts(useSystemKeychain:nonDestructive:accessGroup:)(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  return sub_24E1149E0(a2, a3, a4);
}

void *static Keychain.allServices(account:accessGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_24E1147CC(0, a3, a4);
}

void *static Keychain.allAccounts(service:accessGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_24E1149E0(0, a3, a4);
}

BOOL static Keychain.DataProtectionClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Keychain.DataProtectionClass.hash(into:)()
{
  return sub_24E1171D0();
}

uint64_t Keychain.DataProtectionClass.hashValue.getter()
{
  return sub_24E1171F0();
}

uint64_t Keychain.Item.accessGroup.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Keychain.Item.service.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Keychain.Item.account.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Keychain.Item.created.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Keychain.Item() + 28);
  uint64_t v4 = sub_24E115D80();
  int64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Keychain.Item.modified.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Keychain.Item() + 32);
  uint64_t v4 = sub_24E115D80();
  int64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Keychain.Item.dataProtectionClass.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Keychain.Item();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t Keychain.Item.data.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Keychain.Item() + 40);
  uint64_t v2 = *(void *)v1;
  sub_24E111CDC(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

unint64_t static Keychain.allItems(service:useSystemKeychain:nondestructive:accessGroup:)(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, void *a6)
{
  return sub_24E10C420(a1, a2, a3, a4, a5, a6, MEMORY[0x263F17090]);
}

unint64_t static Keychain.allItems(account:useSystemKeychain:nondestructive:accessGroup:)(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, void *a6)
{
  return sub_24E10C420(a1, a2, a3, a4, a5, a6, MEMORY[0x263F16ED8]);
}

unint64_t sub_24E10C420(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, void *a6, void **a7)
{
  sub_24E110548();
  if (!v7)
  {
    uint64_t v14 = *a7;
    uint64_t v15 = MEMORY[0x263F8D310];
    uint64_t v39 = MEMORY[0x263F8D310];
    v38[0] = a1;
    v38[1] = a2;
    sub_24E094E10(v38, v37);
    id v16 = v14;
    swift_bridgeObjectRetain();
    unint64_t v17 = MEMORY[0x263F8EE80];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v37, v16, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    id v19 = (void *)*MEMORY[0x263F17400];
    unint64_t v20 = (void *)*MEMORY[0x263F17408];
    type metadata accessor for CFString(0);
    uint64_t v39 = v21;
    v38[0] = v20;
    sub_24E094E10(v38, v37);
    id v22 = v19;
    id v23 = v20;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v37, v22, v24);
    unint64_t v40 = v17;

    swift_bridgeObjectRelease();
    uint64_t v25 = (void *)*MEMORY[0x263F17580];
    uint64_t v26 = (void *)*MEMORY[0x263EFFB40];
    if (*MEMORY[0x263EFFB40])
    {
      type metadata accessor for CFBoolean(0);
      uint64_t v39 = v27;
      v38[0] = v26;
      sub_24E094E10(v38, v37);
      id v28 = v25;
      id v29 = v26;
      char v30 = swift_isUniquelyReferenced_nonNull_native();
      sub_24E110058(v37, v28, v30);
      unint64_t v40 = v17;

      swift_bridgeObjectRelease();
      if (a6)
      {
LABEL_4:
        unint64_t v31 = (void *)*MEMORY[0x263F16E80];
        uint64_t v39 = v15;
        v38[0] = a5;
        v38[1] = a6;
        sub_24E094E10(v38, v37);
        swift_bridgeObjectRetain();
        id v32 = v31;
        unint64_t v33 = v40;
        char v34 = swift_isUniquelyReferenced_nonNull_native();
        sub_24E110058(v37, v32, v34);

        swift_bridgeObjectRelease();
LABEL_7:
        a4 = sub_24E112510(v33, a4 & 1);
        swift_bridgeObjectRelease();
        return a4;
      }
    }
    else
    {
      id v35 = v25;
      sub_24E10E9BC((uint64_t)v35, v38);

      sub_24E095494((uint64_t)v38, &qword_26B1AEBD8);
      if (a6) {
        goto LABEL_4;
      }
    }
    unint64_t v33 = v40;
    goto LABEL_7;
  }
  return a4;
}

uint64_t sub_24E10C750@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1AE8F8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v111 = (char *)v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v116 = (char *)v103 - v7;
  uint64_t v8 = sub_24E115D80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v110 = (char *)v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v112 = (char *)v103 - v12;
  unint64_t v125 = a1;
  id v13 = (id)*MEMORY[0x263F175A8];
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    id v14 = v13;
    unint64_t v15 = sub_24E093F98((uint64_t)v14);
    if (v16)
    {
      sub_24E090878(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v123);

      if (*((void *)&v124 + 1))
      {
        sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
        *((void *)&v124 + 1) = MEMORY[0x263F8D310];
        *(void *)&long long v123 = 0x455443414445523CLL;
        *((void *)&v123 + 1) = 0xEA00000000003E44;
        sub_24E094E10(&v123, v119);
        id v17 = v14;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v118 = v125;
        unint64_t v125 = 0x8000000000000000;
        sub_24E110058(v119, v17, isUniquelyReferenced_nonNull_native);
        unint64_t v125 = v118;

        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    else
    {
      long long v123 = 0u;
      long long v124 = 0u;
    }
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
LABEL_8:
  if (qword_26B1AEB10 != -1) {
    swift_once();
  }
  uint64_t v109 = (uint8_t *)sub_24E115F00();
  __swift_project_value_buffer((uint64_t)v109, (uint64_t)qword_26B1AEB20);
  id v19 = sub_24E115EE0();
  os_log_type_t v20 = sub_24E1169A0();
  if (os_log_type_enabled(v19, v20))
  {
    v113 = a2;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(void *)&long long v123 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v114 = v8;
    *((void *)&v108 + 1) = v21 + 4;
    swift_beginAccess();
    type metadata accessor for CFString(0);
    id v115 = v13;
    uint64_t v23 = v9;
    sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
    swift_bridgeObjectRetain();
    uint64_t v117 = a1;
    uint64_t v24 = sub_24E1160A0();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = v24;
    a2 = v113;
    *(void *)&v119[0] = sub_24E090400(v27, v26, (uint64_t *)&v123);
    uint64_t v8 = v114;
    sub_24E116AB0();
    uint64_t v9 = v23;
    id v13 = v115;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v19, v20, "Creating Keychain.Item from cfDictionary: %s", v21, 0xCu);
    a1 = v117;
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v22, -1, -1);
    MEMORY[0x2533338B0](v21, -1, -1);
  }

  if (!*(void *)(a1 + 16))
  {
    long long v123 = 0u;
    long long v124 = 0u;
    goto LABEL_24;
  }
  id v28 = (id)*MEMORY[0x263F16F30];
  unint64_t v29 = sub_24E093F98((uint64_t)v28);
  if (v30)
  {
    sub_24E090878(*(void *)(a1 + 56) + 32 * v29, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  if (!*((void *)&v124 + 1))
  {
LABEL_24:
    sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
    if (*(void *)(a1 + 16)) {
      goto LABEL_22;
    }
LABEL_25:
    long long v123 = 0u;
    long long v124 = 0u;
LABEL_33:
    sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
    goto LABEL_34;
  }
  if (swift_dynamicCast())
  {
    unint64_t v31 = *((void *)&v119[0] + 1);
    uint64_t v32 = *(void *)&v119[0];
    if ((sub_24E106C34(*(uint64_t *)&v119[0], *((unint64_t *)&v119[0] + 1), 0, 0xC000000000000000) & 1) == 0) {
      goto LABEL_30;
    }
    sub_24E08D0B0(v32, v31);
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_25;
  }
LABEL_22:
  id v33 = v13;
  unint64_t v34 = sub_24E093F98((uint64_t)v33);
  if (v35)
  {
    sub_24E090878(*(void *)(a1 + 56) + 32 * v34, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  if (!*((void *)&v124 + 1)) {
    goto LABEL_33;
  }
  if (swift_dynamicCast())
  {
    unint64_t v31 = *((void *)&v119[0] + 1);
    uint64_t v32 = *(void *)&v119[0];
LABEL_30:
    if (*(void *)(a1 + 16)) {
      goto LABEL_31;
    }
LABEL_35:
    long long v123 = 0u;
    long long v124 = 0u;
LABEL_42:
    sub_24E09886C(v32, v31);
LABEL_43:
    swift_bridgeObjectRelease();
    unint64_t v43 = &qword_26B1AEBD8;
    id v44 = &v123;
LABEL_44:
    sub_24E095494((uint64_t)v44, v43);
LABEL_47:
    swift_bridgeObjectRelease();
LABEL_48:
    uint64_t v45 = type metadata accessor for Keychain.Item();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(a2, 1, 1, v45);
  }
LABEL_34:
  uint64_t v32 = 0;
  unint64_t v31 = 0xF000000000000000;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_35;
  }
LABEL_31:
  id v36 = (id)*MEMORY[0x263F16ED8];
  unint64_t v37 = sub_24E093F98((uint64_t)v36);
  if (v38)
  {
    sub_24E090878(*(void *)(a1 + 56) + 32 * v37, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  if (!*((void *)&v124 + 1)) {
    goto LABEL_42;
  }
  uint64_t v39 = MEMORY[0x263F8EE58];
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24E09886C(v32, v31);
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if (!*(void *)(a1 + 16))
  {
    long long v123 = 0u;
    long long v124 = 0u;
LABEL_56:
    sub_24E09886C(v32, v31);
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  long long v108 = v119[0];
  id v40 = (id)*MEMORY[0x263F17090];
  unint64_t v41 = sub_24E093F98((uint64_t)v40);
  if (v42)
  {
    sub_24E090878(*(void *)(a1 + 56) + 32 * v41, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  if (!*((void *)&v124 + 1)) {
    goto LABEL_56;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24E09886C(v32, v31);
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v107 = *((void *)&v119[0] + 1);
  uint64_t v47 = *(void *)(a1 + 16);
  uint64_t v117 = a1;
  if (!v47)
  {
    long long v123 = 0u;
    long long v124 = 0u;
LABEL_65:
    sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
    uint64_t v54 = (long long *)v116;
    (*(void (**)(void))(v9 + 56))();
    goto LABEL_66;
  }
  uint64_t v106 = *(void *)&v119[0];
  id v48 = (id)*MEMORY[0x263F16F10];
  unint64_t v49 = sub_24E093F98((uint64_t)v48);
  if (v50)
  {
    sub_24E090878(*(void *)(a1 + 56) + 32 * v49, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  if (!*((void *)&v124 + 1)) {
    goto LABEL_65;
  }
  id v115 = v13;
  uint64_t v51 = v116;
  int v52 = swift_dynamicCast();
  int64_t v105 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v105(v51, v52 ^ 1u, 1, v8);
  uint64_t v53 = v8;
  uint64_t v54 = (long long *)v51;
  uint64_t v55 = *(unsigned int (**)(long long *, uint64_t, uint64_t))(v9 + 48);
  if (v55(v54, 1, v53) == 1)
  {
LABEL_66:
    sub_24E09886C(v32, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v43 = (uint64_t *)&unk_26B1AE8F8;
    id v44 = v54;
    goto LABEL_44;
  }
  uint64_t v104 = v9;
  uint64_t v57 = *(char **)(v9 + 32);
  uint64_t v56 = v9 + 32;
  uint64_t v58 = v54;
  uint64_t v59 = v112;
  uint64_t v114 = v53;
  v116 = v57;
  ((void (*)(char *, long long *, uint64_t))v57)(v112, v58, v53);
  uint64_t v60 = v117;
  if (!*(void *)(v117 + 16))
  {
    long long v123 = 0u;
    long long v124 = 0u;
    uint64_t v63 = v111;
LABEL_74:
    sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
    uint64_t v68 = v114;
    v105(v63, 1, 1, v114);
    goto LABEL_75;
  }
  v103[2] = v56;
  v113 = a2;
  id v61 = (id)*MEMORY[0x263F17008];
  unint64_t v62 = sub_24E093F98((uint64_t)v61);
  uint64_t v63 = v111;
  if (v64)
  {
    sub_24E090878(*(void *)(v60 + 56) + 32 * v62, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  a2 = v113;
  if (!*((void *)&v124 + 1)) {
    goto LABEL_74;
  }
  uint64_t v65 = v114;
  int v66 = swift_dynamicCast();
  v105(v63, v66 ^ 1u, 1, v65);
  unsigned int v67 = v55((long long *)v63, 1, v65);
  uint64_t v68 = v65;
  if (v67 == 1)
  {
LABEL_75:
    sub_24E09886C(v32, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v59, v68);
    unint64_t v43 = (uint64_t *)&unk_26B1AE8F8;
    id v44 = (long long *)v63;
    goto LABEL_44;
  }
  ((void (*)(char *, char *, uint64_t))v116)(v110, v63, v65);
  uint64_t v69 = v117;
  uint64_t v70 = v104;
  if (!*(void *)(v117 + 16))
  {
    long long v123 = 0u;
    long long v124 = 0u;
LABEL_81:
    sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
    goto LABEL_82;
  }
  id v71 = (id)*MEMORY[0x263F16E80];
  unint64_t v72 = sub_24E093F98((uint64_t)v71);
  if (v73)
  {
    sub_24E090878(*(void *)(v69 + 56) + 32 * v72, (uint64_t)&v123);
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }

  if (!*((void *)&v124 + 1)) {
    goto LABEL_81;
  }
  if (swift_dynamicCast())
  {
    unint64_t v74 = *((void *)&v119[0] + 1);
    uint64_t v75 = *(void *)&v119[0];
    goto LABEL_95;
  }
LABEL_82:
  uint64_t v121 = v69;
  if (*(void *)(v69 + 16))
  {
    swift_bridgeObjectRetain();
    id v76 = v115;
    unint64_t v77 = sub_24E093F98((uint64_t)v76);
    if (v78)
    {
      sub_24E090878(*(void *)(v69 + 56) + 32 * v77, (uint64_t)&v123);
    }
    else
    {
      long long v123 = 0u;
      long long v124 = 0u;
    }
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
    swift_bridgeObjectRetain();
  }
  uint64_t v79 = *((void *)&v124 + 1);
  sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
  if (v79)
  {
    *((void *)&v124 + 1) = MEMORY[0x263F8D310];
    *(void *)&long long v123 = 0x455443414445523CLL;
    *((void *)&v123 + 1) = 0xEA00000000003E44;
    sub_24E094E10(&v123, v119);
    id v80 = v115;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v120 = v69;
    sub_24E110058(v119, v80, v81);
    uint64_t v121 = v120;

    swift_bridgeObjectRelease();
  }
  if (qword_2698B7980 != -1) {
    swift_once();
  }
  __swift_project_value_buffer((uint64_t)v109, (uint64_t)qword_2698B8F50);
  uint64_t v82 = sub_24E115EE0();
  os_log_type_t v83 = sub_24E116980();
  int v84 = v83;
  if (os_log_type_enabled(v82, v83))
  {
    LODWORD(v115) = v84;
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    uint64_t v111 = (char *)swift_slowAlloc();
    *(void *)&long long v123 = v111;
    uint64_t v109 = v85;
    *(_DWORD *)uint64_t v85 = 136315138;
    int64_t v105 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v85 + 4);
    swift_beginAccess();
    type metadata accessor for CFString(0);
    sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
    swift_bridgeObjectRetain();
    v103[1] = v39 + 8;
    uint64_t v86 = sub_24E1160A0();
    unint64_t v88 = v87;
    swift_bridgeObjectRelease();
    uint64_t v120 = sub_24E090400(v86, v88, (uint64_t *)&v123);
    sub_24E116AB0();
    uint64_t v70 = v104;
    swift_bridgeObjectRelease();
    uint64_t v89 = v109;
    _os_log_impl(&dword_24E083000, v82, (os_log_type_t)v115, "Missing kSecAttrAccessGroup from %s", v109, 0xCu);
    v90 = v111;
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v90, -1, -1);
    MEMORY[0x2533338B0](v89, -1, -1);
  }

  swift_bridgeObjectRelease();
  uint64_t v75 = 0;
  unint64_t v74 = 0xE000000000000000;
LABEL_95:
  uint64_t v91 = v117;
  if (*(void *)(v117 + 16))
  {
    id v92 = (id)*MEMORY[0x263F16E90];
    unint64_t v93 = sub_24E093F98((uint64_t)v92);
    if (v94)
    {
      sub_24E090878(*(void *)(v91 + 56) + 32 * v93, (uint64_t)&v123);
    }
    else
    {
      long long v123 = 0u;
      long long v124 = 0u;
    }
  }
  else
  {
    long long v123 = 0u;
    long long v124 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v124 + 1))
  {
    sub_24E09886C(v32, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24E095494((uint64_t)&v123, &qword_26B1AEBD8);
LABEL_108:
    v96 = *(void (**)(char *, uint64_t))(v70 + 8);
    v96(v110, v68);
    v96(v59, v68);
    swift_bridgeObjectRelease();
    a2 = v113;
    goto LABEL_48;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24E09886C(v32, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
  sub_24E10DBC0(v121, v122, (char *)&v123);
  char v95 = v123;
  if (v123 == 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24E09886C(v32, v31);
LABEL_107:
    swift_bridgeObjectRelease();
    goto LABEL_108;
  }
  v97 = (int *)type metadata accessor for Keychain.Item();
  uint64_t v98 = (char *)v113;
  v99 = (void (*)(char *, char *, uint64_t))v116;
  ((void (*)(char *, char *, uint64_t))v116)((char *)v113 + v97[7], v59, v68);
  v99(&v98[v97[8]], v110, v68);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v98 = v75;
  *((void *)v98 + 1) = v74;
  uint64_t v100 = v107;
  *((void *)v98 + 2) = v106;
  *((void *)v98 + 3) = v100;
  uint64_t v101 = *((void *)&v108 + 1);
  *((void *)v98 + 4) = v108;
  *((void *)v98 + 5) = v101;
  v98[v97[9]] = v95;
  uint64_t v102 = (uint64_t *)&v98[v97[10]];
  *uint64_t v102 = v32;
  v102[1] = v31;
  return (*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v97 - 1) + 56))(v98, 0, 1, v97);
}

uint64_t sub_24E10D808(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B1AE9A0);
    uint64_t v2 = sub_24E116F10();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v30 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v29) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v12);
    int64_t v14 = v8 + 1;
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v29) {
        goto LABEL_37;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 3;
        if (v8 + 3 >= v29) {
          goto LABEL_37;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 4;
          if (v8 + 4 >= v29) {
            goto LABEL_37;
          }
          unint64_t v13 = *(void *)(v30 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v8 = v14;
LABEL_28:
    char v16 = *(void **)(*(void *)(a1 + 48) + 8 * v11);
    id v17 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v11);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    *(void *)&v33[0] = v16;
    *(void *)&v32[0] = v18;
    *((void *)&v32[0] + 1) = v19;
    id v20 = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v21 = *(void *)&v33[0];
    sub_24E094E10((_OWORD *)((char *)v33 + 8), v31);
    sub_24E094E10(v31, v33);
    sub_24E094E10(v33, v32);
    sub_24E1171C0();
    type metadata accessor for CFString(0);
    sub_24E115828((unint64_t *)&unk_26B1AEA80, type metadata accessor for CFString);
    sub_24E115EB0();
    uint64_t result = sub_24E1171F0();
    uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v6 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v23) & ~*(void *)(v6 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v6 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(void *)(*(void *)(v2 + 48) + 8 * v9) = v21;
    uint64_t result = (uint64_t)sub_24E094E10(v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_24E0B1AF4();
    return v2;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_24E10DBC0(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  id v6 = (id)*MEMORY[0x263F16EC8];
  if (sub_24E116280() == a1 && v7 == a2) {
    goto LABEL_20;
  }
  char v9 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char v20 = 0;
    goto LABEL_22;
  }
  id v10 = (id)*MEMORY[0x263F16ED0];
  if (sub_24E116280() == a1 && v11 == a2)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  char v13 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_21;
  }
  id v14 = (id)*MEMORY[0x263F16E98];
  if (sub_24E116280() == a1 && v15 == a2) {
    goto LABEL_18;
  }
  char v17 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    char v20 = 1;
LABEL_22:
    *a3 = v20;
    return;
  }
  id v18 = (id)*MEMORY[0x263F16EA0];
  if (sub_24E116280() == a1 && v19 == a2)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v21 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_19;
  }
  if (*MEMORY[0x263F16EB0])
  {
    id v22 = (id)*MEMORY[0x263F16EB0];
    if (sub_24E116280() == a1 && v23 == a2)
    {
LABEL_27:
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      char v20 = 2;
      goto LABEL_22;
    }
    char v24 = sub_24E1170B0();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_29;
    }
    if (*MEMORY[0x263F16EB8])
    {
      id v25 = (id)*MEMORY[0x263F16EB8];
      if (sub_24E116280() != a1 || v26 != a2)
      {
        char v27 = sub_24E1170B0();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          if (qword_26B1AE628 != -1) {
            swift_once();
          }
          uint64_t v28 = sub_24E115F00();
          __swift_project_value_buffer(v28, (uint64_t)qword_26B1AE610);
          swift_bridgeObjectRetain();
          int64_t v29 = sub_24E115EE0();
          os_log_type_t v30 = sub_24E116980();
          if (os_log_type_enabled(v29, v30))
          {
            unint64_t v31 = (uint8_t *)swift_slowAlloc();
            uint64_t v32 = swift_slowAlloc();
            uint64_t v33 = v32;
            *(_DWORD *)unint64_t v31 = 136315138;
            swift_bridgeObjectRetain();
            sub_24E090400(a1, a2, &v33);
            sub_24E116AB0();
            char v20 = 3;
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24E083000, v29, v30, "Unexpected raw DataProtectionClass: %s", v31, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2533338B0](v32, -1, -1);
            MEMORY[0x2533338B0](v31, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            char v20 = 3;
          }
          goto LABEL_22;
        }
        goto LABEL_29;
      }
      goto LABEL_27;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t Keychain.Item.description.getter()
{
  sub_24E116C70();
  sub_24E116370();
  swift_bridgeObjectRetain();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  swift_bridgeObjectRetain();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  swift_bridgeObjectRetain();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  uint64_t v1 = type metadata accessor for Keychain.Item();
  sub_24E115D80();
  sub_24E115828(&qword_2698B8F68, MEMORY[0x263F07490]);
  sub_24E117040();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  sub_24E117040();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  sub_24E116E30();
  sub_24E116370();
  sub_24E111CDC(*(void *)(v0 + *(int *)(v1 + 40)), *(void *)(v0 + *(int *)(v1 + 40) + 8));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8F70);
  sub_24E116290();
  sub_24E116370();
  swift_bridgeObjectRelease();
  sub_24E116370();
  return 0;
}

uint64_t sub_24E10E23C(uint64_t a1)
{
  return sub_24E10E248(a1, qword_2698B8F50);
}

uint64_t sub_24E10E248(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24E115F00();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_26B1AE628 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)qword_26B1AE610);
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v6(v4, v5, v3);
}

uint64_t sub_24E10E30C(uint64_t a1)
{
  return sub_24E10E334(a1, qword_26B1AE610);
}

uint64_t sub_24E10E31C(uint64_t a1)
{
  return sub_24E10E334(a1, qword_26B1AEB20);
}

uint64_t sub_24E10E334(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24E115F00();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_24E115EF0();
}

uint64_t sub_24E10E3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24E10E3F4(a1, a2, &qword_26B1AF9D8, (void (*)(void))sub_24E0B3460, a3);
}

uint64_t sub_24E10E3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24E10E3F4(a1, a2, &qword_26B1AF9C8, (void (*)(void))sub_24E0B3474, a3);
}

uint64_t sub_24E10E3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  int64_t v8 = v5;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_24E093D68(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v8;
    uint64_t v25 = *v8;
    *int64_t v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v25;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 56);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v24 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 32))(a5, v16 + *(void *)(v24 + 72) * v12, v17);
    sub_24E10EAB4(v12, v15, a3);
    *int64_t v8 = v15;
    swift_bridgeObjectRelease();
    id v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v19 = a5;
    uint64_t v20 = 0;
    uint64_t v21 = v17;
  }
  else
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(a3);
    id v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v21 = v22;
    uint64_t v19 = a5;
    uint64_t v20 = 1;
  }
  return v18(v19, v20, 1, v21);
}

uint64_t sub_24E10E5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24E093DE0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24E0B3AB8();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24E115E00();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_24E10EEA8(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_24E10E78C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24E093D68(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24E0B3E84();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_24E094E10((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_24E10F1F4(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_24E10E890@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24E093F10(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v17 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24E0B4094();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = (_OWORD *)(*(void *)(v11 + 56) + 112 * v8);
    long long v13 = v12[5];
    a3[4] = v12[4];
    a3[5] = v13;
    a3[6] = v12[6];
    long long v14 = v12[1];
    *a3 = *v12;
    a3[1] = v14;
    long long v15 = v12[3];
    a3[2] = v12[2];
    a3[3] = v15;
    sub_24E10F3CC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[5] = 0u;
    a3[6] = 0u;
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

double sub_24E10E9BC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24E093F98(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24E0B4298();
      uint64_t v9 = v11;
    }

    sub_24E094E10((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_24E10F5B0(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_24E10EAB4(unint64_t result, uint64_t a2, uint64_t *a3)
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    double result = sub_24E116BF0();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_24E1171C0();
        swift_bridgeObjectRetain();
        sub_24E116320();
        uint64_t v11 = sub_24E1171F0();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        long long v14 = (_OWORD *)(v13 + 16 * v4);
        long long v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *long long v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 72);
        int64_t v18 = v17 * v4;
        double result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E10ECD0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_24E116BF0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24E1171C0();
        swift_bridgeObjectRetain();
        sub_24E116320();
        uint64_t v9 = sub_24E1171F0();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          long long v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *long long v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E10EEA8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E115E00();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_24E116BF0();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      unint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      char v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_24E115828((unint64_t *)&qword_26B1AFD60, MEMORY[0x263F07508]);
        uint64_t v19 = sub_24E116120();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *int64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E10F1F4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24E116BF0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24E1171C0();
        swift_bridgeObjectRetain();
        sub_24E116320();
        uint64_t v10 = sub_24E1171F0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24E10F3CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24E116BF0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24E1171C0();
        swift_bridgeObjectRetain();
        sub_24E116320();
        uint64_t v9 = sub_24E1171F0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t result = v14 + 112 * v3;
          uint64_t v15 = (const void *)(v14 + 112 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 112))
          {
            unint64_t result = (unint64_t)memmove((void *)result, v15, 0x70uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_24E10F5B0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_24E116BF0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_24E1171C0();
        type metadata accessor for CFString(0);
        sub_24E115828((unint64_t *)&unk_26B1AEA80, type metadata accessor for CFString);
        id v12 = v11;
        sub_24E115EB0();
        uint64_t v13 = sub_24E1171F0();

        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            void *v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          uint64_t v19 = (_OWORD *)(v18 + 32 * v3);
          BOOL v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 2))
          {
            long long v10 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_24E10F7D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_24E10F83C(a1, a2, a3, a4, (void (*)(void))sub_24E0B3460, (void (*)(void))sub_24E0B1AFC, &qword_26B1AF9D8);
}

uint64_t sub_24E10F808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_24E10F83C(a1, a2, a3, a4, (void (*)(void))sub_24E0B3474, (void (*)(void))sub_24E0B1B10, &qword_26B1AF9C8);
}

uint64_t sub_24E10F83C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t *a7)
{
  uint64_t v11 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = sub_24E093D68(a2, a3);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a4 & 1) == 0)
  {
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    unint64_t v31 = sub_24E093D68(a2, a3);
    if ((v21 & 1) == (v32 & 1))
    {
      unint64_t v17 = v31;
      uint64_t v23 = *v11;
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24E117150();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v23 = *v11;
  if (v21)
  {
LABEL_8:
    uint64_t v24 = v23[7];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a7);
    uint64_t v26 = *(void *)(v25 - 8);
    unint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 40);
    uint64_t v28 = v25;
    uint64_t v29 = v24 + *(void *)(v26 + 72) * v17;
    return v27(v29, a1, v28);
  }
LABEL_13:
  sub_24E11019C(v17, a2, a3, a1, v23, a7);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E10F9EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24E093D68(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24E0B3744();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24E0B1F10(v15, a4 & 1);
  unint64_t v21 = sub_24E093D68(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_24E117150();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E10FB5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24E115E00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24E093DE0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_24E0B3AB8();
      goto LABEL_7;
    }
    sub_24E0B2550(v17, a3 & 1);
    unint64_t v28 = sub_24E093DE0(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_24E110294(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_24E117150();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;
  return v24(v26, a1, v25);
}

_OWORD *sub_24E10FD64(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24E093D68(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24E0B3E84();
      goto LABEL_7;
    }
    sub_24E0B2A70(v15, a4 & 1);
    unint64_t v21 = sub_24E093D68(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_24E117150();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_24E094E10(a1, v19);
  }
LABEL_13:
  sub_24E11038C(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_24E10FEB8(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24E093F10(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24E0B4094();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 112 * v12;
      return sub_24E1157CC((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_24E0B2DC0(v15, a4 & 1);
  unint64_t v21 = sub_24E093F10(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_24E117150();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (_OWORD *)(v18[7] + 112 * v12);
  long long v25 = *a1;
  long long v26 = a1[2];
  v24[1] = a1[1];
  void v24[2] = v26;
  _OWORD *v24 = v25;
  long long v27 = a1[3];
  long long v28 = a1[4];
  long long v29 = a1[6];
  v24[5] = a1[5];
  v24[6] = v29;
  void v24[3] = v27;
  v24[4] = v28;
  uint64_t v30 = v18[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v18[2] = v32;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_24E110058(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_24E093F98((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_24E0B4298();
      goto LABEL_7;
    }
    sub_24E0B3124(v12, a3 & 1);
    unint64_t v18 = sub_24E093F98((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)sub_24E117150();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_24E094E10(a1, v16);
  }
LABEL_13:
  sub_24E1103F8(v9, (uint64_t)a2, a1, v15);
  return a2;
}

uint64_t sub_24E11019C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v9 = (void *)(a5[6] + 16 * a1);
  *unint64_t v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

unint64_t sub_24E11024C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_24E110294(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24E115E00();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AFBB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

_OWORD *sub_24E11038C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_24E094E10(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_24E1103F8(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_24E094E10(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_24E110460(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE800);
  int64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_24E0CBDD4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24E0B1AF4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24E110548()
{
  SecTaskRef v0 = SecTaskCreateFromSelf(0);
  if (!v0)
  {
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_8:
    sub_24E095494((uint64_t)&v19, &qword_26B1AEBD8);
    uint64_t v4 = 0;
    goto LABEL_9;
  }
  uint64_t v1 = v0;
  uint64_t v2 = (__CFString *)sub_24E1161C0();
  CFTypeRef v3 = SecTaskCopyValueForEntitlement(v1, v2, 0);

  if (!v3)
  {
    long long v19 = 0u;
    long long v20 = 0u;

    goto LABEL_8;
  }
  *((void *)&v20 + 1) = swift_getObjectType();

  *(void *)&long long v19 = v3;
  if (swift_dynamicCast()) {
    uint64_t v4 = v18;
  }
  else {
    uint64_t v4 = 0;
  }
LABEL_9:
  SecTaskRef v5 = SecTaskCreateFromSelf(0);
  if (!v5)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_13;
  }
  uint64_t v6 = v5;
  BOOL v7 = (__CFString *)sub_24E1161C0();
  CFTypeRef v8 = SecTaskCopyValueForEntitlement(v6, v7, 0);

  if (v8)
  {
    *((void *)&v20 + 1) = swift_getObjectType();

    *(void *)&long long v19 = v8;
    goto LABEL_16;
  }
  long long v19 = 0u;
  long long v20 = 0u;

  if (!*((void *)&v20 + 1))
  {
LABEL_13:
    sub_24E095494((uint64_t)&v19, &qword_26B1AEBD8);
    if (v4)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
  if (swift_dynamicCast()) {
    uint64_t v9 = v17;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v4) {
    goto LABEL_20;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_24:
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24E115F00();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B1B12F0);
    uint64_t v12 = sub_24E115EE0();
    os_log_type_t v13 = sub_24E116990();
    if (os_log_type_enabled(v12, v13))
    {
      BOOL v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(void *)&long long v19 = v15;
      *(_DWORD *)BOOL v14 = 136315138;
      sub_24E090400(0xD000000000000016, 0x800000024E119AC0, (uint64_t *)&v19);
      sub_24E116AB0();
      _os_log_impl(&dword_24E083000, v12, v13, "Must have %s or keychain-access-groups entitlement.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v15, -1, -1);
      MEMORY[0x2533338B0](v14, -1, -1);
    }

    sub_24E113EAC();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 4) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24E1108BC(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v2 = (void *)*MEMORY[0x263F171B8];
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    id v3 = v2;
    unint64_t v4 = sub_24E093F98((uint64_t)v3);
    if (v5)
    {
      sub_24E090878(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v38);

      if (*((void *)&v39 + 1))
      {
        sub_24E095494((uint64_t)&v38, &qword_26B1AEBD8);
        goto LABEL_8;
      }
    }
    else
    {
      long long v38 = 0u;
      long long v39 = 0u;
    }
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_24E095494((uint64_t)&v38, &qword_26B1AEBD8);
  uint64_t v6 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  *((void *)&v39 + 1) = v7;
  *(void *)&long long v38 = v6;
  sub_24E094E10(&v38, v37);
  id v8 = v2;
  id v9 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = a1;
  sub_24E110058(v37, v8, isUniquelyReferenced_nonNull_native);
  uint64_t v40 = a1;

  swift_bridgeObjectRelease();
LABEL_8:
  if (qword_26B1AEB10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24E115F00();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B1AEB20);
  uint64_t v12 = sub_24E115EE0();
  os_log_type_t v13 = sub_24E1169A0();
  if (os_log_type_enabled(v12, v13))
  {
    BOOL v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = v11;
    uint64_t v15 = swift_slowAlloc();
    *(void *)&long long v38 = v15;
    *(_DWORD *)BOOL v14 = 136315138;
    swift_beginAccess();
    type metadata accessor for CFString(0);
    sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24E1160A0();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_24E090400(v16, v18, (uint64_t *)&v38);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v12, v13, "SecItemAdd() attributes: %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v15;
    uint64_t v11 = v35;
    MEMORY[0x2533338B0](v19, -1, -1);
    MEMORY[0x2533338B0](v14, -1, -1);
  }

  swift_beginAccess();
  type metadata accessor for CFString(0);
  sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
  swift_bridgeObjectRetain();
  CFDictionaryRef v20 = (const __CFDictionary *)sub_24E116080();
  swift_bridgeObjectRelease();
  uint64_t v21 = SecItemAdd(v20, 0);

  char v22 = sub_24E115EE0();
  os_log_type_t v23 = sub_24E1169A0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 67109120;
    LODWORD(v36) = v21;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v22, v23, "SecItemAdd() status: %d", v24, 8u);
    MEMORY[0x2533338B0](v24, -1, -1);
  }

  if (v21 && v21 != -25299)
  {
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v11, (uint64_t)qword_26B1B12F0);
    long long v25 = sub_24E115EE0();
    os_log_type_t v26 = sub_24E116980();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v36 = v28;
      *(_DWORD *)uint64_t v27 = 67109378;
      sub_24E116AB0();
      *(_WORD *)(v27 + 8) = 2082;
      CFStringRef v29 = SecCopyErrorMessageString(v21, 0);
      if (v29)
      {
        uint64_t v30 = (__CFString *)v29;
        uint64_t v31 = sub_24E1161F0();
        unint64_t v33 = v32;
      }
      else
      {
        unint64_t v33 = 0xE90000000000003ELL;
        uint64_t v31 = 0x6E776F6E6B6E753CLL;
      }
      sub_24E090400(v31, v33, &v36);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v25, v26, "SecItemAdd error: %d [%{public}s]", (uint8_t *)v27, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v28, -1, -1);
      MEMORY[0x2533338B0](v27, -1, -1);
    }
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_24E110EA4(uint64_t a1)
{
  uint64_t v42 = a1;
  uint64_t v2 = (void *)*MEMORY[0x263F171B8];
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    id v3 = v2;
    unint64_t v4 = sub_24E093F98((uint64_t)v3);
    if (v5)
    {
      sub_24E090878(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v40);

      if (*((void *)&v41 + 1))
      {
        sub_24E095494((uint64_t)&v40, &qword_26B1AEBD8);
        goto LABEL_8;
      }
    }
    else
    {
      long long v40 = 0u;
      long long v41 = 0u;
    }
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_24E095494((uint64_t)&v40, &qword_26B1AEBD8);
  uint64_t v6 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  *((void *)&v41 + 1) = v7;
  *(void *)&long long v40 = v6;
  sub_24E094E10(&v40, v39);
  id v8 = v2;
  id v9 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = a1;
  sub_24E110058(v39, v8, isUniquelyReferenced_nonNull_native);
  uint64_t v42 = a1;

  swift_bridgeObjectRelease();
LABEL_8:
  if (qword_26B1AEB10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24E115F00();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B1AEB20);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_24E115EE0();
  os_log_type_t v13 = sub_24E1169A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(void *)&long long v40 = v37;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_beginAccess();
    type metadata accessor for CFString(0);
    sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_24E1160A0();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_24E090400(v15, v17, (uint64_t *)&v40);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_24E1160A0();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_24E090400(v18, v20, (uint64_t *)&v40);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v12, v13, "SecItemUpate() query: %s attributes: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v37, -1, -1);
    MEMORY[0x2533338B0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  type metadata accessor for CFString(0);
  sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
  swift_bridgeObjectRetain();
  CFDictionaryRef v21 = (const __CFDictionary *)sub_24E116080();
  swift_bridgeObjectRelease();
  CFDictionaryRef v22 = (const __CFDictionary *)sub_24E116080();
  uint64_t v23 = SecItemUpdate(v21, v22);

  uint64_t v24 = sub_24E115EE0();
  os_log_type_t v25 = sub_24E1169A0();
  if (os_log_type_enabled(v24, v25))
  {
    os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v26 = 67109120;
    LODWORD(v38) = v23;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v24, v25, "SecItemUpate() status: %d", v26, 8u);
    MEMORY[0x2533338B0](v26, -1, -1);
  }

  if (v23)
  {
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v11, (uint64_t)qword_26B1B12F0);
    uint64_t v27 = sub_24E115EE0();
    os_log_type_t v28 = sub_24E116980();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v38 = v30;
      *(_DWORD *)uint64_t v29 = 67109378;
      sub_24E116AB0();
      *(_WORD *)(v29 + 8) = 2082;
      CFStringRef v31 = SecCopyErrorMessageString(v23, 0);
      if (v31)
      {
        unint64_t v32 = (__CFString *)v31;
        uint64_t v33 = sub_24E1161F0();
        unint64_t v35 = v34;
      }
      else
      {
        unint64_t v35 = 0xE90000000000003ELL;
        uint64_t v33 = 0x6E776F6E6B6E753CLL;
      }
      sub_24E090400(v33, v35, &v38);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v27, v28, "SecItemUpdate error: %d [%{public}s]", (uint8_t *)v29, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v30, -1, -1);
      MEMORY[0x2533338B0](v29, -1, -1);
    }
  }
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_24E111538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v17 = *a6;
  uint64_t result = sub_24E110548();
  if (v9) {
    return result;
  }
  uint64_t v81 = a7;
  uint64_t v82 = a8;
  uint64_t v19 = a3;
  uint64_t v20 = a2;
  CFDictionaryRef v21 = (void *)*MEMORY[0x263F17090];
  uint64_t v22 = MEMORY[0x263F8D310];
  uint64_t v86 = MEMORY[0x263F8D310];
  uint64_t v79 = a4;
  *(void *)&long long v85 = a4;
  *((void *)&v85 + 1) = a5;
  sub_24E094E10(&v85, v84);
  id v23 = v21;
  uint64_t v83 = a5;
  swift_bridgeObjectRetain();
  uint64_t v24 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v23, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  os_log_type_t v26 = (void *)*MEMORY[0x263F16ED8];
  uint64_t v86 = v22;
  uint64_t v80 = v20;
  *(void *)&long long v85 = v20;
  *((void *)&v85 + 1) = v19;
  uint64_t v27 = v19;
  sub_24E094E10(&v85, v84);
  id v28 = v26;
  swift_bridgeObjectRetain();
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v28, v29);

  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)*MEMORY[0x263F175A8];
  uint64_t v86 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v85);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 16))(boxed_opaque_existential_1, a1, a9);
  sub_24E094E10(&v85, v84);
  id v32 = v30;
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v32, v33);
  uint64_t v87 = v24;

  swift_bridgeObjectRelease();
  unint64_t v34 = (void *)*MEMORY[0x263F170B0];
  unint64_t v35 = (void *)*MEMORY[0x263EFFB38];
  if (*MEMORY[0x263EFFB38])
  {
    type metadata accessor for CFBoolean(0);
    uint64_t v86 = v36;
    *(void *)&long long v85 = v35;
    sub_24E094E10(&v85, v84);
    id v37 = v34;
    id v38 = v35;
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v84, v37, v39);
    uint64_t v87 = v24;

    swift_bridgeObjectRelease();
  }
  else
  {
    id v40 = v34;
    sub_24E10E9BC((uint64_t)v40, &v85);

    sub_24E095494((uint64_t)&v85, &qword_26B1AEBD8);
  }
  long long v41 = (void *)*MEMORY[0x263F16E90];
  if (!v17)
  {
    uint64_t v42 = (void **)MEMORY[0x263F16ED0];
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    uint64_t v42 = (void **)MEMORY[0x263F16EA0];
LABEL_9:
    unint64_t v43 = *v42;
    uint64_t v44 = v82;
LABEL_11:
    id v45 = v43;
    type metadata accessor for CFString(0);
    uint64_t v86 = v46;
    *(void *)&long long v85 = v45;
    sub_24E094E10(&v85, v84);
    id v47 = v41;
    uint64_t v48 = v87;
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v84, v47, v49);
    uint64_t v87 = v48;

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  unint64_t v43 = (void *)*MEMORY[0x263F16EB8];
  uint64_t v44 = v82;
  if (*MEMORY[0x263F16EB8]) {
    goto LABEL_11;
  }
  id v78 = v41;
  sub_24E10E9BC((uint64_t)v78, &v85);

  sub_24E095494((uint64_t)&v85, &qword_26B1AEBD8);
LABEL_12:
  char v50 = (void *)*MEMORY[0x263F17580];
  uint64_t v51 = (void *)*MEMORY[0x263EFFB40];
  if (!*MEMORY[0x263EFFB40])
  {
    id v60 = v50;
    sub_24E10E9BC((uint64_t)v60, &v85);

    sub_24E095494((uint64_t)&v85, &qword_26B1AEBD8);
    if (!v44) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  type metadata accessor for CFBoolean(0);
  uint64_t v86 = v52;
  *(void *)&long long v85 = v51;
  sub_24E094E10(&v85, v84);
  id v53 = v50;
  id v54 = v51;
  uint64_t v55 = v87;
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v53, v56);
  uint64_t v87 = v55;

  swift_bridgeObjectRelease();
  if (v44)
  {
LABEL_14:
    uint64_t v57 = (void *)*MEMORY[0x263F16E80];
    uint64_t v86 = MEMORY[0x263F8D310];
    *(void *)&long long v85 = v81;
    *((void *)&v85 + 1) = v44;
    sub_24E094E10(&v85, v84);
    swift_bridgeObjectRetain();
    id v58 = v57;
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v84, v58, v59);

    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v61 = swift_bridgeObjectRetain();
  int v62 = sub_24E1108BC(v61);
  swift_bridgeObjectRelease();
  if (v62 != -25299)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (!v62) {
      return result;
    }
    goto LABEL_23;
  }
  uint64_t v63 = (void *)*MEMORY[0x263F16F30];
  uint64_t v86 = MEMORY[0x263F06F78];
  long long v85 = xmmword_24E11BB50;
  sub_24E094E10(&v85, v84);
  id v64 = v63;
  char v65 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v64, v65);

  swift_bridgeObjectRelease();
  uint64_t v66 = MEMORY[0x263F8D310];
  uint64_t v86 = MEMORY[0x263F8D310];
  *(void *)&long long v85 = v79;
  *((void *)&v85 + 1) = v83;
  sub_24E094E10(&v85, v84);
  swift_bridgeObjectRetain();
  id v67 = v23;
  uint64_t v68 = MEMORY[0x263F8EE80];
  char v69 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v67, v69);

  swift_bridgeObjectRelease();
  uint64_t v86 = v66;
  *(void *)&long long v85 = v80;
  *((void *)&v85 + 1) = v27;
  sub_24E094E10(&v85, v84);
  swift_bridgeObjectRetain();
  id v70 = v28;
  char v71 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v84, v70, v71);

  swift_bridgeObjectRelease();
  if (v51)
  {
    type metadata accessor for CFBoolean(0);
    uint64_t v86 = v72;
    *(void *)&long long v85 = v51;
    sub_24E094E10(&v85, v84);
    id v73 = v50;
    id v74 = v51;
    char v75 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v84, v73, v75);

    swift_bridgeObjectRelease();
  }
  else
  {
    id v76 = v50;
    sub_24E10E9BC((uint64_t)v76, &v85);

    sub_24E095494((uint64_t)&v85, &qword_26B1AEBD8);
  }
  int v62 = sub_24E110EA4(v68);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v62)
  {
LABEL_23:
    sub_24E113EAC();
    swift_allocError();
    *(_DWORD *)uint64_t v77 = v62;
    *(unsigned char *)(v77 + 4) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t type metadata accessor for Keychain.Item()
{
  uint64_t result = qword_26B1AEA30;
  if (!qword_26B1AEA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E111C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Keychain.Item();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E111CDC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24E08D248(a1, a2);
  }
  return a1;
}

uint64_t sub_24E111CF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Keychain.Item();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24E111D4C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16))
  {
    long long v49 = 0u;
    long long v48 = 0u;
    goto LABEL_11;
  }
  id v4 = (id)*MEMORY[0x263F16F30];
  unint64_t v5 = sub_24E093F98((uint64_t)v4);
  if ((v6 & 1) == 0)
  {
    long long v49 = 0u;
    long long v48 = 0u;

    goto LABEL_11;
  }
  sub_24E090878(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v48);

  if (!*((void *)&v49 + 1))
  {
LABEL_11:
    sub_24E095494((uint64_t)&v48, &qword_26B1AEBD8);
    return;
  }
  uint64_t v7 = MEMORY[0x263F06F78];
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  long long v8 = *(_OWORD *)v47;
  if (sub_24E106C34(v47[0], v47[1], 0, 0xC000000000000000))
  {
LABEL_37:
    sub_24E08D0B0(v8, *((unint64_t *)&v8 + 1));
    return;
  }
  uint64_t v9 = (void *)*MEMORY[0x263F175A8];
  *((void *)&v49 + 1) = v7;
  long long v48 = *(_OWORD *)v47;
  sub_24E094E10(&v48, v47);
  id v10 = v9;
  sub_24E08D248(v8, *((unint64_t *)&v8 + 1));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v47, v10, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  *((void *)&v49 + 1) = v7;
  long long v48 = xmmword_24E11BB50;
  sub_24E094E10(&v48, v47);
  id v12 = v4;
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v47, v12, v13);

  swift_bridgeObjectRelease();
  if (!*(void *)(a2 + 16))
  {
    long long v49 = 0u;
    long long v48 = 0u;
LABEL_31:
    sub_24E095494((uint64_t)&v48, &qword_26B1AEBD8);
    goto LABEL_32;
  }
  id v14 = (id)*MEMORY[0x263F17090];
  unint64_t v15 = sub_24E093F98((uint64_t)v14);
  if (v16)
  {
    sub_24E090878(*(void *)(a2 + 56) + 32 * v15, (uint64_t)&v48);
  }
  else
  {
    long long v49 = 0u;
    long long v48 = 0u;
  }

  if (!*((void *)&v49 + 1)) {
    goto LABEL_31;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_24E115F00();
    __swift_project_value_buffer(v38, (uint64_t)qword_26B1B12F0);
    char v29 = sub_24E115EE0();
    os_log_type_t v39 = sub_24E116980();
    if (!os_log_type_enabled(v29, v39))
    {
LABEL_38:
      sub_24E08D0B0(v8, *((unint64_t *)&v8 + 1));

      return;
    }
    id v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v40 = 0;
    _os_log_impl(&dword_24E083000, v29, v39, "SecItemCopyMatching item migration error: missing account and service.", v40, 2u);
    uint64_t v41 = (uint64_t)v40;
LABEL_36:
    MEMORY[0x2533338B0](v41, -1, -1);

    goto LABEL_37;
  }
  unint64_t v17 = v47[1];
  if (!*(void *)(a2 + 16))
  {
    long long v49 = 0u;
    long long v48 = 0u;
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v46 = v47[0];
  id v18 = (id)*MEMORY[0x263F16ED8];
  unint64_t v19 = sub_24E093F98((uint64_t)v18);
  if (v20)
  {
    sub_24E090878(*(void *)(a2 + 56) + 32 * v19, (uint64_t)&v48);
  }
  else
  {
    long long v49 = 0u;
    long long v48 = 0u;
  }

  if (!*((void *)&v49 + 1)) {
    goto LABEL_30;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  long long v21 = *(_OWORD *)v47;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698B8F90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E11FED0;
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v46;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  *(_OWORD *)(inited + 64) = v21;
  id v23 = v14;
  swift_bridgeObjectRetain();
  id v24 = v18;
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_24E0910F8(inited);
  uint64_t v26 = sub_24E10D808(v25);
  swift_bridgeObjectRelease();
  OSStatus v27 = sub_24E110EA4(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_24E115F00();
    __swift_project_value_buffer(v28, (uint64_t)qword_26B1B12F0);
    char v29 = sub_24E115EE0();
    os_log_type_t v30 = sub_24E116980();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(void *)&long long v48 = v32;
      *(_DWORD *)uint64_t v31 = 67109378;
      LODWORD(v47[0]) = v27;
      sub_24E116AB0();
      *(_WORD *)(v31 + 8) = 2082;
      CFStringRef v33 = SecCopyErrorMessageString(v27, 0);
      if (v33)
      {
        unint64_t v34 = (__CFString *)v33;
        uint64_t v35 = sub_24E1161F0();
        unint64_t v37 = v36;
      }
      else
      {
        unint64_t v37 = 0xE90000000000003ELL;
        uint64_t v35 = 0x6E776F6E6B6E753CLL;
      }
      v47[0] = sub_24E090400(v35, v37, (uint64_t *)&v48);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v29, v30, "SecItemCopyMatching item migration error: %d [%{public}s]", (uint8_t *)v31, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v32, -1, -1);
      uint64_t v41 = v31;
      goto LABEL_36;
    }
    goto LABEL_38;
  }
  if (qword_26B1AE638 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_24E115F00();
  __swift_project_value_buffer(v42, (uint64_t)qword_26B1B12F0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v29 = sub_24E115EE0();
  os_log_type_t v43 = sub_24E1169A0();
  if (os_log_type_enabled(v29, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(void *)&long long v48 = v45;
    *(_DWORD *)uint64_t v44 = 136315394;
    swift_bridgeObjectRetain();
    v47[0] = sub_24E090400(v46, v17, (uint64_t *)&v48);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v44 + 12) = 2080;
    swift_bridgeObjectRetain();
    v47[0] = sub_24E090400(v21, *((unint64_t *)&v21 + 1), (uint64_t *)&v48);
    sub_24E116AB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E083000, v29, v43, "SecItemCopyMatching item migration success. s:%s, a: %s.", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v45, -1, -1);
    uint64_t v41 = v44;
    goto LABEL_36;
  }
  sub_24E08D0B0(v8, *((unint64_t *)&v8 + 1));

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
}

unint64_t sub_24E112510(unint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v115 = a2;
  result[1] = *(CFTypeRef *)MEMORY[0x263EF8340];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEA78);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v10 = (uint8_t *)v113 - v9;
  uint64_t v125 = type metadata accessor for Keychain.Item();
  unint64_t v11 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v117 = (uint64_t)v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v124 = (uint64_t)v113 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v122 = (uint64_t)v113 - v16;
  unint64_t v128 = a1;
  result[0] = 0;
  uint64_t v17 = *(void *)(a1 + 16);
  v116 = v7;
  if (!v17)
  {
    long long v131 = 0u;
    long long v132 = 0u;
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  id v18 = (void *)*MEMORY[0x263F17400];
  swift_bridgeObjectRetain();
  id v19 = v18;
  unint64_t v20 = sub_24E093F98((uint64_t)v19);
  if ((v21 & 1) == 0)
  {
    long long v131 = 0u;
    long long v132 = 0u;

    goto LABEL_10;
  }
  sub_24E090878(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v131);

  if (!*((void *)&v132 + 1))
  {
LABEL_10:
    sub_24E095494((uint64_t)&v131, &qword_26B1AEBD8);
LABEL_11:
    int v25 = 0;
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  long long v22 = v130[0];
  id v23 = (id)*MEMORY[0x263F17408];
  if ((void)v22 == sub_24E116280() && *((void *)&v22 + 1) == v24)
  {
    swift_bridgeObjectRelease_n();
    int v25 = 1;
    goto LABEL_12;
  }
  char v112 = sub_24E1170B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v112 & 1) == 0) {
    goto LABEL_11;
  }
  int v25 = 1;
LABEL_12:
  uint64_t v26 = (void *)*MEMORY[0x263F171B8];
  unint64_t v27 = v128;
  if (*(void *)(v128 + 16))
  {
    id v28 = v26;
    unint64_t v29 = sub_24E093F98((uint64_t)v28);
    if (v30)
    {
      sub_24E090878(*(void *)(v27 + 56) + 32 * v29, (uint64_t)&v131);
    }
    else
    {
      long long v131 = 0u;
      long long v132 = 0u;
    }

    if (*((void *)&v132 + 1))
    {
      sub_24E095494((uint64_t)&v131, &qword_26B1AEBD8);
      goto LABEL_20;
    }
  }
  else
  {
    long long v131 = 0u;
    long long v132 = 0u;
  }
  sub_24E095494((uint64_t)&v131, &qword_26B1AEBD8);
  uint64_t v31 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  *((void *)&v132 + 1) = v32;
  *(void *)&long long v131 = v31;
  sub_24E094E10(&v131, v130);
  id v33 = v26;
  id v34 = v31;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v129 = v128;
  unint64_t v128 = 0x8000000000000000;
  sub_24E110058(v130, v33, isUniquelyReferenced_nonNull_native);
  unint64_t v128 = v129;

  swift_bridgeObjectRelease();
LABEL_20:
  unint64_t v36 = (void *)*MEMORY[0x263F17518];
  unint64_t v37 = v128;
  if (*(void *)(v128 + 16))
  {
    id v38 = v36;
    unint64_t v39 = sub_24E093F98((uint64_t)v38);
    if (v40)
    {
      sub_24E090878(*(void *)(v37 + 56) + 32 * v39, (uint64_t)&v131);
    }
    else
    {
      long long v131 = 0u;
      long long v132 = 0u;
    }

    if (*((void *)&v132 + 1)) {
      goto LABEL_29;
    }
  }
  else
  {
    long long v131 = 0u;
    long long v132 = 0u;
  }
  sub_24E095494((uint64_t)&v131, &qword_26B1AEBD8);
  uint64_t v41 = (void *)*MEMORY[0x263EFFB40];
  if (*MEMORY[0x263EFFB40])
  {
    type metadata accessor for CFBoolean(0);
    *((void *)&v132 + 1) = v42;
    *(void *)&long long v131 = v41;
    sub_24E094E10(&v131, v130);
    id v43 = v36;
    id v44 = v41;
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v129 = v128;
    unint64_t v128 = 0x8000000000000000;
    sub_24E110058(v130, v43, v45);
    unint64_t v128 = v129;

    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  id v46 = v36;
  sub_24E10E9BC((uint64_t)v46, &v131);

LABEL_29:
  sub_24E095494((uint64_t)&v131, &qword_26B1AEBD8);
LABEL_30:
  long long v123 = v10;
  if (qword_26B1AEB10 != -1) {
    swift_once();
  }
  uint64_t v120 = sub_24E115F00();
  uint64_t v121 = __swift_project_value_buffer(v120, (uint64_t)qword_26B1AEB20);
  id v47 = sub_24E115EE0();
  os_log_type_t v48 = sub_24E1169A0();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v118 = v3;
  unint64_t v119 = v11;
  if (v49)
  {
    uint64_t v50 = swift_slowAlloc();
    int v114 = v25;
    uint64_t v51 = (uint8_t *)v50;
    uint64_t v52 = swift_slowAlloc();
    *(void *)&long long v131 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    v113[1] = v51 + 4;
    swift_beginAccess();
    type metadata accessor for CFString(0);
    sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_24E1160A0();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    *(void *)&v130[0] = sub_24E090400(v53, v55, (uint64_t *)&v131);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v47, v48, "SecItemCopyMatching() query: %s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533338B0](v52, -1, -1);
    char v56 = v51;
    int v25 = v114;
    MEMORY[0x2533338B0](v56, -1, -1);
  }

  swift_beginAccess();
  type metadata accessor for CFString(0);
  sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
  swift_bridgeObjectRetain();
  CFDictionaryRef v57 = (const __CFDictionary *)sub_24E116080();
  swift_bridgeObjectRelease();
  OSStatus v58 = SecItemCopyMatching(v57, result);

  char v59 = sub_24E115EE0();
  os_log_type_t v60 = sub_24E1169A0();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 67109120;
    LODWORD(v131) = v58;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v59, v60, "SecItemCopyMatching() status: %d", v61, 8u);
    MEMORY[0x2533338B0](v61, -1, -1);
  }

  if (v58)
  {
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    unint64_t v62 = __swift_project_value_buffer(v120, (uint64_t)qword_26B1B12F0);
    uint64_t v63 = sub_24E115EE0();
    os_log_type_t v64 = sub_24E116980();
    if (os_log_type_enabled(v63, v64))
    {
      unint64_t v62 = swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(void *)&long long v131 = v65;
      *(_DWORD *)unint64_t v62 = 67109378;
      LODWORD(v130[0]) = v58;
      sub_24E116AB0();
      *(_WORD *)(v62 + 8) = 2082;
      CFStringRef v66 = SecCopyErrorMessageString(v58, 0);
      if (v66)
      {
        id v67 = (__CFString *)v66;
        uint64_t v68 = sub_24E1161F0();
        unint64_t v70 = v69;
      }
      else
      {
        unint64_t v70 = 0xE90000000000003ELL;
        uint64_t v68 = 0x6E776F6E6B6E753CLL;
      }
      *(void *)&v130[0] = sub_24E090400(v68, v70, (uint64_t *)&v131);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v63, v64, "SecItemCopyMatching error: %d [%{public}s]", (uint8_t *)v62, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v65, -1, -1);
      MEMORY[0x2533338B0](v62, -1, -1);
    }

    sub_24E113EAC();
    swift_allocError();
    *(_DWORD *)uint64_t v85 = v58;
    *(unsigned char *)(v85 + 4) = 0;
    swift_willThrow();
  }
  else if (v25)
  {
    if (result[0]
      && (*(CFTypeRef *)&long long v131 = result[0],
          swift_unknownObjectRetain(),
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8F88),
          swift_dynamicCast()))
    {
      uint64_t v71 = *(void *)&v130[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698B8F80);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_24E11BE80;
      *(void *)(v71 + 32) = sub_24E091210(MEMORY[0x263F8EE78]);
    }
    swift_bridgeObjectRetain_n();
    id v73 = sub_24E115EE0();
    os_log_type_t v74 = sub_24E1169A0();
    if (os_log_type_enabled(v73, v74))
    {
      char v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(void *)&long long v131 = v76;
      *(_DWORD *)char v75 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE8E8);
      uint64_t v78 = MEMORY[0x2533321D0](v71, v77);
      unint64_t v80 = v79;
      swift_bridgeObjectRelease();
      *(void *)&v130[0] = sub_24E090400(v78, v80, (uint64_t *)&v131);
      sub_24E116AB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v73, v74, "SecItemCopyMatching() result: %s", v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v76, -1, -1);
      MEMORY[0x2533338B0](v75, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v86 = v119;
    uint64_t v87 = v123;
    uint64_t v88 = *(void *)(v71 + 16);
    if (v88)
    {
      uint64_t v89 = (unsigned int (**)(uint8_t *, uint64_t, uint64_t))(v119 + 48);
      swift_bridgeObjectRetain();
      uint64_t v90 = 0;
      unint64_t v62 = MEMORY[0x263F8EE78];
      do
      {
        unint64_t v91 = swift_bridgeObjectRetain();
        sub_24E10C750(v91, v87);
        if ((*v89)(v87, 1, v125) == 1)
        {
          sub_24E095494((uint64_t)v87, &qword_26B1AEA78);
        }
        else
        {
          uint64_t v92 = (uint64_t)v87;
          uint64_t v93 = v122;
          sub_24E111C78(v92, v122);
          sub_24E111C78(v93, v124);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v62 = sub_24E08B958(0, *(void *)(v62 + 16) + 1, 1, v62);
          }
          unint64_t v95 = *(void *)(v62 + 16);
          unint64_t v94 = *(void *)(v62 + 24);
          if (v95 >= v94 >> 1) {
            unint64_t v62 = sub_24E08B958(v94 > 1, v95 + 1, 1, v62);
          }
          *(void *)(v62 + 16) = v95 + 1;
          sub_24E111C78(v124, v62+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v95);
          uint64_t v87 = v123;
        }
        ++v90;
      }
      while (v88 != v90);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v62 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    if (result[0]
      && (*(CFTypeRef *)&long long v131 = result[0],
          swift_unknownObjectRetain(),
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE8E8),
          swift_dynamicCast()))
    {
      unint64_t v72 = *(void *)&v130[0];
    }
    else
    {
      unint64_t v72 = sub_24E091210(MEMORY[0x263F8EE78]);
    }
    unint64_t v127 = v72;
    uint64_t v81 = (void *)*MEMORY[0x263F175A8];
    if (*(void *)(v72 + 16))
    {
      swift_bridgeObjectRetain();
      id v82 = v81;
      unint64_t v83 = sub_24E093F98((uint64_t)v82);
      if (v84)
      {
        sub_24E090878(*(void *)(v72 + 56) + 32 * v83, (uint64_t)&v131);
      }
      else
      {
        long long v131 = 0u;
        long long v132 = 0u;
      }
    }
    else
    {
      long long v131 = 0u;
      long long v132 = 0u;
      swift_bridgeObjectRetain();
    }
    uint64_t v96 = *((void *)&v132 + 1);
    sub_24E095494((uint64_t)&v131, &qword_26B1AEBD8);
    if (v96)
    {
      *((void *)&v132 + 1) = MEMORY[0x263F8D310];
      *(void *)&long long v131 = 0x455443414445523CLL;
      *((void *)&v131 + 1) = 0xEA00000000003E44;
      sub_24E094E10(&v131, v130);
      id v97 = v81;
      char v98 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v126 = v72;
      sub_24E110058(v130, v97, v98);
      unint64_t v127 = v126;

      swift_bridgeObjectRelease();
    }
    v99 = sub_24E115EE0();
    os_log_type_t v100 = sub_24E1169A0();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      uint64_t v124 = swift_slowAlloc();
      *(void *)&v130[0] = v124;
      *(_DWORD *)uint64_t v101 = 136315138;
      long long v123 = v101 + 4;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_24E1160A0();
      unint64_t v104 = v103;
      swift_bridgeObjectRelease();
      uint64_t v126 = sub_24E090400(v102, v104, (uint64_t *)v130);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v99, v100, "SecItemCopyMatching() result: %s", v101, 0xCu);
      uint64_t v105 = v124;
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v105, -1, -1);
      MEMORY[0x2533338B0](v101, -1, -1);
    }

    unint64_t v62 = v119;
    uint64_t v106 = v116;
    unint64_t v107 = swift_bridgeObjectRetain();
    sub_24E10C750(v107, v106);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v62 + 48))(v106, 1, v125) == 1)
    {
      swift_bridgeObjectRelease();
      sub_24E095494((uint64_t)v106, &qword_26B1AEA78);
      sub_24E113EAC();
      swift_allocError();
      *(_DWORD *)uint64_t v108 = 1;
      *(unsigned char *)(v108 + 4) = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24E111C78((uint64_t)v106, v117);
      if ((v115 & 1) == 0)
      {
        uint64_t v109 = v128;
        swift_bridgeObjectRetain();
        sub_24E111D4C(v72, v109);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AEAC0);
      unint64_t v110 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      unint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_24E11BE80;
      sub_24E111C78(v117, v62 + v110);
      swift_bridgeObjectRelease();
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_24E113638(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v2 = (void *)*MEMORY[0x263F171B8];
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    id v3 = v2;
    unint64_t v4 = sub_24E093F98((uint64_t)v3);
    if (v5)
    {
      sub_24E090878(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v38);

      if (*((void *)&v39 + 1))
      {
        sub_24E095494((uint64_t)&v38, &qword_26B1AEBD8);
        goto LABEL_8;
      }
    }
    else
    {
      long long v38 = 0u;
      long long v39 = 0u;
    }
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_24E095494((uint64_t)&v38, &qword_26B1AEBD8);
  uint64_t v6 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  *((void *)&v39 + 1) = v7;
  *(void *)&long long v38 = v6;
  sub_24E094E10(&v38, v37);
  id v8 = v2;
  id v9 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = a1;
  sub_24E110058(v37, v8, isUniquelyReferenced_nonNull_native);
  uint64_t v40 = a1;

  swift_bridgeObjectRelease();
LABEL_8:
  if (qword_26B1AEB10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24E115F00();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B1AEB20);
  uint64_t v12 = sub_24E115EE0();
  os_log_type_t v13 = sub_24E1169A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = v11;
    uint64_t v15 = swift_slowAlloc();
    *(void *)&long long v38 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_beginAccess();
    type metadata accessor for CFString(0);
    sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24E1160A0();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_24E090400(v16, v18, (uint64_t *)&v38);
    sub_24E116AB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E083000, v12, v13, "SecItemDelete() query: %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v15;
    uint64_t v11 = v35;
    MEMORY[0x2533338B0](v19, -1, -1);
    MEMORY[0x2533338B0](v14, -1, -1);
  }

  swift_beginAccess();
  type metadata accessor for CFString(0);
  sub_24E115828(&qword_26B1AEA90, type metadata accessor for CFString);
  swift_bridgeObjectRetain();
  CFDictionaryRef v20 = (const __CFDictionary *)sub_24E116080();
  swift_bridgeObjectRelease();
  uint64_t v21 = SecItemDelete(v20);

  long long v22 = sub_24E115EE0();
  os_log_type_t v23 = sub_24E1169A0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 67109120;
    LODWORD(v36) = v21;
    sub_24E116AB0();
    _os_log_impl(&dword_24E083000, v22, v23, "SecItemDelete() status: %d", v24, 8u);
    MEMORY[0x2533338B0](v24, -1, -1);
  }

  if (v21)
  {
    if (qword_26B1AE638 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v11, (uint64_t)qword_26B1B12F0);
    int v25 = sub_24E115EE0();
    os_log_type_t v26 = sub_24E116980();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v36 = v28;
      *(_DWORD *)uint64_t v27 = 67109378;
      sub_24E116AB0();
      *(_WORD *)(v27 + 8) = 2082;
      CFStringRef v29 = SecCopyErrorMessageString(v21, 0);
      if (v29)
      {
        char v30 = (__CFString *)v29;
        uint64_t v31 = sub_24E1161F0();
        unint64_t v33 = v32;
      }
      else
      {
        unint64_t v33 = 0xE90000000000003ELL;
        uint64_t v31 = 0x6E776F6E6B6E753CLL;
      }
      sub_24E090400(v31, v33, &v36);
      sub_24E116AB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E083000, v25, v26, "SecItemDelete error: %d [%{public}s]", (uint8_t *)v27, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2533338B0](v28, -1, -1);
      MEMORY[0x2533338B0](v27, -1, -1);
    }
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_24E113C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_24E110548();
  if (!v6)
  {
    uint64_t v14 = (void *)*MEMORY[0x263F17090];
    uint64_t v15 = MEMORY[0x263F8D310];
    uint64_t v38 = MEMORY[0x263F8D310];
    *(void *)&long long v37 = a3;
    *((void *)&v37 + 1) = a4;
    sub_24E094E10(&v37, v36);
    id v16 = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x263F8EE80];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v36, v16, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)*MEMORY[0x263F16ED8];
    uint64_t v38 = v15;
    *(void *)&long long v37 = a1;
    *((void *)&v37 + 1) = a2;
    sub_24E094E10(&v37, v36);
    id v20 = v19;
    swift_bridgeObjectRetain();
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v36, v20, v21);
    uint64_t v39 = v17;

    swift_bridgeObjectRelease();
    long long v22 = (void *)*MEMORY[0x263F17580];
    os_log_type_t v23 = (void *)*MEMORY[0x263EFFB40];
    if (*MEMORY[0x263EFFB40])
    {
      type metadata accessor for CFBoolean(0);
      uint64_t v38 = v24;
      *(void *)&long long v37 = v23;
      sub_24E094E10(&v37, v36);
      id v25 = v22;
      id v26 = v23;
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      sub_24E110058(v36, v25, v27);
      uint64_t v39 = v17;

      swift_bridgeObjectRelease();
      if (a6)
      {
LABEL_4:
        uint64_t v28 = (void *)*MEMORY[0x263F16E80];
        uint64_t v38 = v15;
        *(void *)&long long v37 = a5;
        *((void *)&v37 + 1) = a6;
        sub_24E094E10(&v37, v36);
        swift_bridgeObjectRetain();
        id v29 = v28;
        uint64_t v30 = v39;
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        sub_24E110058(v36, v29, v31);
        uint64_t v32 = v30;

        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    else
    {
      id v33 = v22;
      sub_24E10E9BC((uint64_t)v33, &v37);

      sub_24E095494((uint64_t)&v37, &qword_26B1AEBD8);
      if (a6) {
        goto LABEL_4;
      }
    }
    uint64_t v32 = v39;
LABEL_7:
    int v34 = sub_24E113638(v32);
    uint64_t result = swift_bridgeObjectRelease();
    if (v34)
    {
      sub_24E113EAC();
      swift_allocError();
      *(_DWORD *)uint64_t v35 = v34;
      *(unsigned char *)(v35 + 4) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

unint64_t sub_24E113EAC()
{
  unint64_t result = qword_26B1AE630;
  if (!qword_26B1AE630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1AE630);
  }
  return result;
}

uint64_t sub_24E113F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Keychain.Item();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E113F64(char a1, uint64_t a2, uint64_t a3)
{
  sub_24E110548();
  if (v4) {
    return v3;
  }
  id v8 = (void *)*MEMORY[0x263F17400];
  id v9 = (void *)*MEMORY[0x263F17408];
  type metadata accessor for CFString(0);
  *((void *)&v81 + 1) = v10;
  *(void *)&long long v80 = v9;
  sub_24E094E10(&v80, v79);
  id v11 = v8;
  id v12 = v9;
  unint64_t v13 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v79, v11, isUniquelyReferenced_nonNull_native);
  unint64_t v82 = v13;

  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)*MEMORY[0x263F17580];
  id v16 = (void *)*MEMORY[0x263EFFB40];
  if (*MEMORY[0x263EFFB40])
  {
    type metadata accessor for CFBoolean(0);
    *((void *)&v81 + 1) = v17;
    *(void *)&long long v80 = v16;
    sub_24E094E10(&v80, v79);
    id v18 = v15;
    id v19 = v16;
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    sub_24E110058(v79, v18, v20);
    unint64_t v82 = v13;

    swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = v15;
    sub_24E10E9BC((uint64_t)v21, &v80);

    sub_24E095494((uint64_t)&v80, &qword_26B1AEBD8);
  }
  long long v22 = (void **)MEMORY[0x263F16E80];
  uint64_t v23 = MEMORY[0x263F8D310];
  if (!a3)
  {
    id v60 = objc_msgSend(self, sel_mainBundle);
    id v61 = objc_msgSend(v60, sel_bundleIdentifier);

    if (v61)
    {
      uint64_t v62 = sub_24E1161F0();
      unint64_t v64 = v63;
    }
    else
    {
      uint64_t v62 = 0xD000000000000019;
      unint64_t v64 = 0x800000024E119A80;
    }
    SecTaskRef v65 = SecTaskCreateFromSelf(0);
    if (v65)
    {
      CFStringRef v66 = v65;
      uint64_t v67 = v23;
      uint64_t v68 = (__CFString *)sub_24E1161C0();
      CFTypeRef v69 = SecTaskCopyValueForEntitlement(v66, v68, 0);

      if (v69)
      {
        *((void *)&v81 + 1) = swift_getObjectType();

        *(void *)&long long v80 = v69;
        uint64_t v23 = v67;
        goto LABEL_47;
      }
      long long v80 = 0u;
      long long v81 = 0u;

      uint64_t v23 = v67;
      if (*((void *)&v81 + 1))
      {
LABEL_47:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE990);
        if (swift_dynamicCast())
        {
          uint64_t v70 = *(void *)&v79[0];
          goto LABEL_50;
        }
LABEL_49:
        uint64_t v70 = MEMORY[0x263F8EE78];
LABEL_50:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1AE800);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24E11BE80;
        *(void *)(inited + 32) = v62;
        *(void *)(inited + 40) = v64;
        *(void *)&long long v80 = inited;
        sub_24E10B4E8(v70);
        uint64_t v28 = sub_24E0D0864(v80);
        swift_bridgeObjectRelease();
        if (*(void *)(v28 + 16)) {
          goto LABEL_7;
        }
        goto LABEL_51;
      }
    }
    else
    {
      long long v80 = 0u;
      long long v81 = 0u;
    }
    sub_24E095494((uint64_t)&v80, &qword_26B1AEBD8);
    goto LABEL_49;
  }
  uint64_t v24 = (void *)*MEMORY[0x263F16E80];
  *((void *)&v81 + 1) = MEMORY[0x263F8D310];
  *(void *)&long long v80 = a2;
  *((void *)&v80 + 1) = a3;
  sub_24E094E10(&v80, v79);
  swift_bridgeObjectRetain();
  id v25 = v24;
  unint64_t v26 = v82;
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_24E110058(v79, v25, v27);
  unint64_t v82 = v26;

  swift_bridgeObjectRelease();
  uint64_t v28 = MEMORY[0x263F8EE88];
  if (!*(void *)(MEMORY[0x263F8EE88] + 16))
  {
LABEL_51:
    swift_bridgeObjectRelease();
    unint64_t v3 = sub_24E112510(v82, a1 & 1);
    swift_bridgeObjectRelease();
    return v3;
  }
LABEL_7:
  int64_t v29 = 0;
  uint64_t v30 = *(void *)(v28 + 56);
  uint64_t v78 = MEMORY[0x263F8EE78];
  uint64_t v73 = v28 + 56;
  uint64_t v31 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v30;
  int64_t v74 = (unint64_t)(v31 + 63) >> 6;
  unint64_t v34 = v82;
  uint64_t v76 = *v22;
  char v75 = a1;
  if ((v32 & v30) == 0) {
    goto LABEL_12;
  }
LABEL_10:
  unint64_t v35 = __clz(__rbit64(v33));
  v33 &= v33 - 1;
  int64_t v77 = v29;
  for (unint64_t i = v35 | (v29 << 6); ; unint64_t i = __clz(__rbit64(v40)) + (v39 << 6))
  {
    uint64_t v42 = v28;
    id v43 = (uint64_t *)(*(void *)(v28 + 48) + 16 * i);
    uint64_t v44 = *v43;
    uint64_t v45 = v43[1];
    uint64_t v46 = v23;
    *((void *)&v81 + 1) = v23;
    *(void *)&long long v80 = v44;
    *((void *)&v80 + 1) = v45;
    sub_24E094E10(&v80, v79);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v47 = v76;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v50 = sub_24E093F98((uint64_t)v47);
    uint64_t v51 = *(void *)(v34 + 16);
    BOOL v52 = (v49 & 1) == 0;
    uint64_t v53 = v51 + v52;
    if (__OFADD__(v51, v52))
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    char v54 = v49;
    if (*(void *)(v34 + 24) >= v53)
    {
      if (v48)
      {
        CFDictionaryRef v57 = (void *)v34;
        if (v49) {
          goto LABEL_30;
        }
      }
      else
      {
        sub_24E0B4298();
        CFDictionaryRef v57 = (void *)v34;
        if (v54) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_24E0B3124(v53, v48);
      unint64_t v55 = sub_24E093F98((uint64_t)v47);
      if ((v54 & 1) != (v56 & 1)) {
        goto LABEL_57;
      }
      unint64_t v50 = v55;
      CFDictionaryRef v57 = (void *)v34;
      if (v54)
      {
LABEL_30:
        char v59 = (_OWORD *)(v57[7] + 32 * v50);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
        sub_24E094E10(v79, v59);
        goto LABEL_31;
      }
    }
    sub_24E1103F8(v50, (uint64_t)v47, v79, v57);
    id v58 = v47;
LABEL_31:

    swift_bridgeObjectRelease();
    uint64_t v23 = v46;
    unint64_t v37 = sub_24E112510((unint64_t)v57, v75 & 1);
    swift_bridgeObjectRelease();
    sub_24E10B344(v37);
    uint64_t v28 = v42;
    int64_t v29 = v77;
    if (v33) {
      goto LABEL_10;
    }
LABEL_12:
    BOOL v38 = __OFADD__(v29, 1);
    int64_t v39 = v29 + 1;
    if (v38) {
      goto LABEL_55;
    }
    if (v39 >= v74) {
      goto LABEL_52;
    }
    unint64_t v40 = *(void *)(v73 + 8 * v39);
    if (!v40) {
      break;
    }
LABEL_22:
    unint64_t v33 = (v40 - 1) & v40;
    int64_t v77 = v39;
  }
  int64_t v41 = v39 + 1;
  if (v39 + 1 >= v74) {
    goto LABEL_52;
  }
  unint64_t v40 = *(void *)(v73 + 8 * v41);
  if (v40) {
    goto LABEL_21;
  }
  int64_t v41 = v39 + 2;
  if (v39 + 2 >= v74) {
    goto LABEL_52;
  }
  unint64_t v40 = *(void *)(v73 + 8 * v41);
  if (v40) {
    goto LABEL_21;
  }
  int64_t v41 = v39 + 3;
  if (v39 + 3 >= v74)
  {
LABEL_52:
    swift_release();
    swift_bridgeObjectRelease();
    return v78;
  }
  unint64_t v40 = *(void *)(v73 + 8 * v41);
  if (v40)
  {
LABEL_21:
    int64_t v39 = v41;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v39 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v39 >= v74) {
      goto LABEL_52;
    }
    unint64_t v40 = *(void *)(v73 + 8 * v39);
    ++v41;
    if (v40) {
      goto LABEL_22;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_24E117150();
  __break(1u);
  return result;
}

void *sub_24E1147CC(char a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for Keychain.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E113F64(a1, a2, (uint64_t)a3);
  if (!v3)
  {
    uint64_t v12 = v11;
    int64_t v13 = *(void *)(v11 + 16);
    if (v13)
    {
      v25[1] = 0;
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_24E0AEB38(0, v13, 0);
      uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
      v25[0] = v12;
      uint64_t v15 = v12 + ((v14 + 32) & ~v14);
      uint64_t v16 = *(void *)(v8 + 72);
      uint64_t v17 = v26;
      do
      {
        sub_24E113F00(v15, (uint64_t)v10);
        uint64_t v18 = *((void *)v10 + 2);
        uint64_t v19 = *((void *)v10 + 3);
        swift_bridgeObjectRetain();
        sub_24E111CF0((uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24E0AEB38(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v26;
        }
        unint64_t v21 = *(void *)(v17 + 16);
        unint64_t v20 = *(void *)(v17 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_24E0AEB38(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v26;
        }
        *(void *)(v17 + 16) = v21 + 1;
        uint64_t v22 = v17 + 16 * v21;
        *(void *)(v22 + 32) = v18;
        *(void *)(v22 + 40) = v19;
        v15 += v16;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = sub_24E0D0864(v17);
    swift_bridgeObjectRelease();
    a3 = sub_24E110460(v23);
    swift_bridgeObjectRelease();
  }
  return a3;
}

void *sub_24E1149E0(char a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for Keychain.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E113F64(a1, a2, (uint64_t)a3);
  if (!v3)
  {
    uint64_t v12 = v11;
    int64_t v13 = *(void *)(v11 + 16);
    if (v13)
    {
      v25[1] = 0;
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_24E0AEB38(0, v13, 0);
      uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
      v25[0] = v12;
      uint64_t v15 = v12 + ((v14 + 32) & ~v14);
      uint64_t v16 = *(void *)(v8 + 72);
      uint64_t v17 = v26;
      do
      {
        sub_24E113F00(v15, (uint64_t)v10);
        uint64_t v18 = *((void *)v10 + 4);
        uint64_t v19 = *((void *)v10 + 5);
        swift_bridgeObjectRetain();
        sub_24E111CF0((uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24E0AEB38(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v26;
        }
        unint64_t v21 = *(void *)(v17 + 16);
        unint64_t v20 = *(void *)(v17 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_24E0AEB38(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v26;
        }
        *(void *)(v17 + 16) = v21 + 1;
        uint64_t v22 = v17 + 16 * v21;
        *(void *)(v22 + 32) = v18;
        *(void *)(v22 + 40) = v19;
        v15 += v16;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = sub_24E0D0864(v17);
    swift_bridgeObjectRelease();
    a3 = sub_24E110460(v23);
    swift_bridgeObjectRelease();
  }
  return a3;
}

unint64_t sub_24E114BF8()
{
  unint64_t result = qword_2698B8F78;
  if (!qword_2698B8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698B8F78);
  }
  return result;
}

ValueMetadata *type metadata accessor for Keychain()
{
  return &type metadata for Keychain;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Keychain.Error(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Keychain.Error(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_24E114CBC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24E114CD8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Keychain.Error()
{
  return &type metadata for Keychain.Error;
}

unsigned char *storeEnumTagSinglePayload for Keychain.DataProtectionClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E114DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Keychain.DataProtectionClass()
{
  return &type metadata for Keychain.DataProtectionClass;
}

char *initializeBufferWithCopyOfBuffer for Keychain.Item(char *a1, char *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *((void *)a2 + 5);
    uint64_t v10 = a3[7];
    unint64_t v21 = &a1[v10];
    uint64_t v11 = &a2[v10];
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v9;
    uint64_t v12 = sub_24E115D80();
    int64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v21, v11, v12);
    v13(&v4[a3[8]], &a2[a3[8]], v12);
    uint64_t v14 = a3[10];
    v4[a3[9]] = a2[a3[9]];
    uint64_t v15 = &v4[v14];
    uint64_t v16 = (uint64_t *)&a2[v14];
    unint64_t v17 = *(void *)&a2[v14 + 8];
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v19 = *v16;
      sub_24E08D248(*v16, v17);
      *(void *)uint64_t v15 = v19;
      *((void *)v15 + 1) = v17;
    }
  }
  return v4;
}

uint64_t destroy for Keychain.Item(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_24E115D80();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + a2[8], v5);
  uint64_t v8 = (uint64_t *)(a1 + a2[10]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_24E08D0B0(v10, v9);
  }
  return result;
}

char *initializeWithCopy for Keychain.Item(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  uint64_t v9 = a3[7];
  uint64_t v19 = &a1[v9];
  uint64_t v10 = &a2[v9];
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  uint64_t v11 = sub_24E115D80();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v19, v10, v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  uint64_t v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = (uint64_t *)&a2[v13];
  unint64_t v16 = *(void *)&a2[v13 + 8];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *v15;
    sub_24E08D248(*v15, v16);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
  }
  return a1;
}

char *assignWithCopy for Keychain.Item(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24E115D80();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  a1[a3[9]] = a2[a3[9]];
  uint64_t v11 = a3[10];
  uint64_t v12 = (uint64_t *)&a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  unint64_t v14 = *(void *)&a2[v11 + 8];
  if (*(void *)&a1[v11 + 8] >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v16 = *v13;
      sub_24E08D248(v16, v14);
      uint64_t v17 = *v12;
      unint64_t v18 = v12[1];
      *uint64_t v12 = v16;
      v12[1] = v14;
      sub_24E08D0B0(v17, v18);
      return a1;
    }
    sub_24E115344((uint64_t)v12);
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    return a1;
  }
  uint64_t v15 = *v13;
  sub_24E08D248(v15, v14);
  *uint64_t v12 = v15;
  v12[1] = v14;
  return a1;
}

uint64_t sub_24E115344(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for Keychain.Item(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_24E115D80();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  return a1;
}

char *assignWithTake for Keychain.Item(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24E115D80();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(&a1[a3[8]], &a2[a3[8]], v12);
  uint64_t v14 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v15 = (uint64_t *)&a1[v14];
  uint64_t v16 = (uint64_t *)&a2[v14];
  unint64_t v17 = *(void *)&a1[v14 + 8];
  if (v17 >> 60 != 15)
  {
    unint64_t v18 = v16[1];
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v15;
      *uint64_t v15 = *v16;
      v15[1] = v18;
      sub_24E08D0B0(v19, v17);
      return a1;
    }
    sub_24E115344((uint64_t)v15);
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for Keychain.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E1155B0);
}

uint64_t sub_24E1155B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24E115D80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Keychain.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E115674);
}

uint64_t sub_24E115674(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24E115D80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E11571C()
{
  uint64_t result = sub_24E115D80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E1157CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24E115828(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E115870()
{
  return MEMORY[0x270EEDD58]();
}

uint64_t sub_24E115880()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24E115890()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24E1158A0()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24E1158B0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24E1158C0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24E1158D0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24E1158E0()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_24E1158F0()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_24E115900()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24E115910()
{
  return MEMORY[0x270EEE280]();
}

uint64_t sub_24E115920()
{
  return MEMORY[0x270EEE298]();
}

uint64_t sub_24E115930()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_24E115940()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_24E115950()
{
  return MEMORY[0x270EEE460]();
}

uint64_t sub_24E115960()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_24E115970()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_24E115980()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24E115990()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_24E1159A0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24E1159B0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24E1159C0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_24E1159D0()
{
  return MEMORY[0x270EEE768]();
}

uint64_t sub_24E1159E0()
{
  return MEMORY[0x270EEE780]();
}

uint64_t sub_24E1159F0()
{
  return MEMORY[0x270EEE7B8]();
}

uint64_t sub_24E115A00()
{
  return MEMORY[0x270EEE7C8]();
}

uint64_t sub_24E115A10()
{
  return MEMORY[0x270EEE7D8]();
}

uint64_t sub_24E115A20()
{
  return MEMORY[0x270EEE7F0]();
}

uint64_t sub_24E115A30()
{
  return MEMORY[0x270EEE800]();
}

uint64_t sub_24E115A40()
{
  return MEMORY[0x270EEE810]();
}

uint64_t sub_24E115A50()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_24E115A60()
{
  return MEMORY[0x270EEE838]();
}

uint64_t sub_24E115A70()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_24E115A80()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_24E115A90()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_24E115AA0()
{
  return MEMORY[0x270EEEEF0]();
}

uint64_t sub_24E115AB0()
{
  return MEMORY[0x270EEEF88]();
}

uint64_t sub_24E115AC0()
{
  return MEMORY[0x270EEEFE8]();
}

uint64_t sub_24E115AD0()
{
  return MEMORY[0x270EEEFF8]();
}

uint64_t sub_24E115AE0()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_24E115AF0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24E115B00()
{
  return MEMORY[0x270EEFBD8]();
}

uint64_t sub_24E115B10()
{
  return MEMORY[0x270EEFC88]();
}

uint64_t sub_24E115B20()
{
  return MEMORY[0x270EEFCE8]();
}

uint64_t sub_24E115B30()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24E115B40()
{
  return MEMORY[0x270EEFE00]();
}

uint64_t sub_24E115B50()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24E115B60()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24E115B70()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_24E115B80()
{
  return MEMORY[0x270EF0000]();
}

uint64_t sub_24E115B90()
{
  return MEMORY[0x270EF0048]();
}

uint64_t sub_24E115BA0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_24E115BB0()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_24E115BC0()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_24E115BD0()
{
  return MEMORY[0x270EF00D0]();
}

uint64_t sub_24E115BE0()
{
  return MEMORY[0x270EF00E8]();
}

uint64_t sub_24E115BF0()
{
  return MEMORY[0x270EF00F8]();
}

uint64_t sub_24E115C00()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_24E115C10()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24E115C20()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_24E115C30()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_24E115C40()
{
  return MEMORY[0x270EF01D0]();
}

uint64_t sub_24E115C50()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_24E115C60()
{
  return MEMORY[0x270EF0218]();
}

uint64_t sub_24E115C70()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_24E115C80()
{
  return MEMORY[0x270EF0248]();
}

uint64_t sub_24E115C90()
{
  return MEMORY[0x270EF0290]();
}

uint64_t sub_24E115CA0()
{
  return MEMORY[0x270EF02A8]();
}

uint64_t sub_24E115CB0()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_24E115CC0()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_24E115CD0()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_24E115CE0()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_24E115CF0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24E115D00()
{
  return MEMORY[0x270EF09C0]();
}

uint64_t sub_24E115D10()
{
  return MEMORY[0x270EF09C8]();
}

uint64_t sub_24E115D20()
{
  return MEMORY[0x270EF09E0]();
}

uint64_t sub_24E115D30()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24E115D40()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_24E115D50()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24E115D60()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24E115D70()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24E115D80()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24E115D90()
{
  return MEMORY[0x270EF0C48]();
}

uint64_t sub_24E115DA0()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_24E115DB0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t _s10FindMyBase10IdentifierV2eeoiySbACyxG_AEtFZ_0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24E115DD0()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_24E115DE0()
{
  return MEMORY[0x270EF0CF0]();
}

uint64_t sub_24E115DF0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24E115E00()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24E115E10()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_24E115E20()
{
  return MEMORY[0x270EF0ED0]();
}

uint64_t sub_24E115E30()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24E115E40()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_24E115E50()
{
  return MEMORY[0x270EF1590]();
}

uint64_t sub_24E115E60()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_24E115E70()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_24E115E80()
{
  return MEMORY[0x270EF1608]();
}

uint64_t _s10FindMyBase16isFeatureEnabledySb0E5Flags0eG3Key_pF_0()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_24E115EA0()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_24E115EB0()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_24E115EC0()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_24E115ED0()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_24E115EE0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24E115EF0()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24E115F00()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24E115F10()
{
  return MEMORY[0x270FA2C30]();
}

uint64_t sub_24E115F20()
{
  return MEMORY[0x270FA0970]();
}

uint64_t sub_24E115F30()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24E115F40()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24E115F50()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24E115F60()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_24E115F70()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_24E115F80()
{
  return MEMORY[0x270FA0BB0]();
}

uint64_t sub_24E115F90()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_24E115FA0()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_24E115FB0()
{
  return MEMORY[0x270EEAA88]();
}

uint64_t sub_24E115FC0()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_24E115FD0()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_24E115FE0()
{
  return MEMORY[0x270EEAB00]();
}

uint64_t sub_24E115FF0()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_24E116000()
{
  return MEMORY[0x270EEAC18]();
}

uint64_t sub_24E116010()
{
  return MEMORY[0x270EEAD48]();
}

uint64_t sub_24E116020()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_24E116030()
{
  return MEMORY[0x270F9CFB0]();
}

uint64_t sub_24E116040()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_24E116050()
{
  return MEMORY[0x270FA1DF0]();
}

uint64_t sub_24E116060()
{
  return MEMORY[0x270F9CFC8]();
}

uint64_t sub_24E116070()
{
  return MEMORY[0x270F9D030]();
}

uint64_t sub_24E116080()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24E116090()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24E1160A0()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24E1160B0()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_24E1160C0()
{
  return MEMORY[0x270F9D120]();
}

uint64_t sub_24E1160D0()
{
  return MEMORY[0x270F9D148]();
}

uint64_t sub_24E1160E0()
{
  return MEMORY[0x270F9D1C8]();
}

uint64_t sub_24E1160F0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_24E116100()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_24E116110()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_24E116120()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24E116130()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24E116140()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24E116150()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_24E116160()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_24E116170()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_24E116180()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_24E116190()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24E1161A0()
{
  return MEMORY[0x270EF1890]();
}

uint64_t sub_24E1161B0()
{
  return MEMORY[0x270EF18B8]();
}

uint64_t sub_24E1161C0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24E1161D0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24E1161E0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24E1161F0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24E116200()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_24E116210()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_24E116220()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_24E116230()
{
  return MEMORY[0x270EF1A98]();
}

uint64_t sub_24E116240()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24E116250()
{
  return MEMORY[0x270EF1AB8]();
}

uint64_t sub_24E116260()
{
  return MEMORY[0x270EF1AC8]();
}

uint64_t sub_24E116270()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24E116280()
{
  return MEMORY[0x270EF1B18]();
}

uint64_t sub_24E116290()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24E1162A0()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24E1162B0()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_24E1162C0()
{
  return MEMORY[0x270F9D610]();
}

uint64_t sub_24E1162D0()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24E1162E0()
{
  return MEMORY[0x270F9D630]();
}

uint64_t sub_24E1162F0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24E116300()
{
  return MEMORY[0x270F9D6B0]();
}

uint64_t sub_24E116310()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_24E116320()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24E116330()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24E116340()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_24E116350()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_24E116360()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_24E116370()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24E116380()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24E116390()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24E1163A0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24E1163B0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24E1163D0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24E1163E0()
{
  return MEMORY[0x270F9D830]();
}

uint64_t sub_24E1163F0()
{
  return MEMORY[0x270F9D840]();
}

uint64_t sub_24E116400()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24E116410()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_24E116420()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_24E116430()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_24E116440()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_24E116450()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24E116460()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24E116470()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_24E116480()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_24E116490()
{
  return MEMORY[0x270F9D930]();
}

uint64_t sub_24E1164A0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_24E1164B0()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_24E1164C0()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_24E1164D0()
{
  return MEMORY[0x270F9D9D0]();
}

uint64_t sub_24E1164E0()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_24E1164F0()
{
  return MEMORY[0x270F9DA78]();
}

uint64_t sub_24E116500()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24E116510()
{
  return MEMORY[0x270F9DAA0]();
}

uint64_t sub_24E116520()
{
  return MEMORY[0x270F9DAC8]();
}

uint64_t sub_24E116530()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24E116540()
{
  return MEMORY[0x270F9DB20]();
}

uint64_t sub_24E116550()
{
  return MEMORY[0x270F9DB48]();
}

uint64_t sub_24E116560()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24E116570()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24E116580()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24E116590()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_24E1165A0()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24E1165B0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24E1165C0()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_24E1165D0()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_24E1165E0()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_24E1165F0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_24E116600()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_24E116610()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24E116620()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_24E116630()
{
  return MEMORY[0x270F9DD10]();
}

uint64_t sub_24E116640()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24E116650()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24E116660()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24E116670()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_24E116680()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_24E1166B0()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24E1166C0()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24E1166D0()
{
  return MEMORY[0x270FA1F18]();
}

uint64_t sub_24E1166E0()
{
  return MEMORY[0x270FA1F28]();
}

uint64_t sub_24E1166F0()
{
  return MEMORY[0x270FA1F30]();
}

uint64_t sub_24E116700()
{
  return MEMORY[0x270FA1F38]();
}

uint64_t sub_24E116710()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_24E116720()
{
  return MEMORY[0x270FA1F50]();
}

uint64_t sub_24E116730()
{
  return MEMORY[0x270FA1F58]();
}

uint64_t sub_24E116740()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_24E116760()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_24E116770()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_24E116780()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_24E116790()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_24E1167C0()
{
  return MEMORY[0x270FA2068]();
}

uint64_t sub_24E1167D0()
{
  return MEMORY[0x270FA2070]();
}

uint64_t sub_24E1167E0()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_24E116810()
{
  return MEMORY[0x270FA20B8]();
}

uint64_t sub_24E116820()
{
  return MEMORY[0x270FA20C8]();
}

uint64_t sub_24E116830()
{
  return MEMORY[0x270FA20D8]();
}

uint64_t sub_24E116840()
{
  return MEMORY[0x270FA20E0]();
}

uint64_t sub_24E116850()
{
  return MEMORY[0x270FA20E8]();
}

uint64_t sub_24E116860()
{
  return MEMORY[0x270FA2120]();
}

uint64_t sub_24E116870()
{
  return MEMORY[0x270FA2138]();
}

uint64_t sub_24E116880()
{
  return MEMORY[0x270EF1C48]();
}

uint64_t sub_24E116890()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_24E1168A0()
{
  return MEMORY[0x270EF1CB8]();
}

uint64_t sub_24E1168B0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24E1168C0()
{
  return MEMORY[0x270F9DF58]();
}

uint64_t sub_24E1168D0()
{
  return MEMORY[0x270F9DF90]();
}

uint64_t sub_24E1168E0()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_24E1168F0()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_24E116900()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_24E116910()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_24E116920()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_24E116930()
{
  return MEMORY[0x270F9E1A8]();
}

uint64_t sub_24E116940()
{
  return MEMORY[0x270F9E1C0]();
}

uint64_t sub_24E116950()
{
  return MEMORY[0x270EF1EE8]();
}

uint64_t sub_24E116960()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24E116970()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24E116980()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24E116990()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24E1169A0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24E1169B0()
{
  return MEMORY[0x270EF1F60]();
}

uint64_t sub_24E1169C0()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24E1169D0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24E1169E0()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24E1169F0()
{
  return MEMORY[0x270FA0DE8]();
}

uint64_t sub_24E116A00()
{
  return MEMORY[0x270FA0E28]();
}

uint64_t sub_24E116A10()
{
  return MEMORY[0x270FA0E90]();
}

uint64_t sub_24E116A20()
{
  return MEMORY[0x270FA0EA0]();
}

uint64_t sub_24E116A30()
{
  return MEMORY[0x270FA0EC0]();
}

uint64_t sub_24E116A40()
{
  return MEMORY[0x270FA0EC8]();
}

uint64_t sub_24E116A50()
{
  return MEMORY[0x270FA0F58]();
}

uint64_t sub_24E116A60()
{
  return MEMORY[0x270EF2350]();
}

uint64_t sub_24E116A70()
{
  return MEMORY[0x270EF2378]();
}

uint64_t sub_24E116A80()
{
  return MEMORY[0x270FA2ED0]();
}

uint64_t sub_24E116A90()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24E116AA0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_24E116AB0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24E116AC0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24E116AD0()
{
  return MEMORY[0x270EF23D8]();
}

uint64_t sub_24E116AE0()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24E116AF0()
{
  return MEMORY[0x270F9E590]();
}

uint64_t sub_24E116B00()
{
  return MEMORY[0x270F9E5B8]();
}

uint64_t sub_24E116B10()
{
  return MEMORY[0x270F9E5C0]();
}

uint64_t sub_24E116B20()
{
  return MEMORY[0x270F9E5D0]();
}

uint64_t sub_24E116B30()
{
  return MEMORY[0x270F9E600]();
}

uint64_t sub_24E116B40()
{
  return MEMORY[0x270F9E608]();
}

uint64_t sub_24E116B50()
{
  return MEMORY[0x270F9E610]();
}

uint64_t sub_24E116B60()
{
  return MEMORY[0x270F9E620]();
}

uint64_t sub_24E116B70()
{
  return MEMORY[0x270F9E640]();
}

uint64_t sub_24E116B80()
{
  return MEMORY[0x270F9E648]();
}

uint64_t sub_24E116B90()
{
  return MEMORY[0x270F9E650]();
}

uint64_t sub_24E116BA0()
{
  return MEMORY[0x270F9E660]();
}

uint64_t sub_24E116BB0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24E116BC0()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_24E116BE0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24E116BF0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24E116C10()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24E116C20()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24E116C30()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24E116C40()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_24E116C50()
{
  return MEMORY[0x270F9E990]();
}

uint64_t sub_24E116C60()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_24E116C70()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24E116C80()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24E116C90()
{
  return MEMORY[0x270F9E9C0]();
}

uint64_t sub_24E116CA0()
{
  return MEMORY[0x270F9E9C8]();
}

uint64_t sub_24E116CB0()
{
  return MEMORY[0x270F9E9E8]();
}

uint64_t sub_24E116CC0()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_24E116CD0()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24E116CE0()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24E116CF0()
{
  return MEMORY[0x270F9EAD0]();
}

uint64_t sub_24E116D00()
{
  return MEMORY[0x270F9EAE0]();
}

uint64_t sub_24E116D10()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24E116D20()
{
  return MEMORY[0x270F9EB80]();
}

uint64_t sub_24E116D30()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_24E116D40()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_24E116D50()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_24E116D60()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_24E116D70()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_24E116D80()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_24E116D90()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_24E116DA0()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_24E116DB0()
{
  return MEMORY[0x270F9ECE0]();
}

uint64_t sub_24E116DC0()
{
  return MEMORY[0x270FA21B8]();
}

uint64_t sub_24E116DE0()
{
  return MEMORY[0x270FA21D0]();
}

uint64_t sub_24E116DF0()
{
  return MEMORY[0x270FA21E8]();
}

uint64_t sub_24E116E00()
{
  return MEMORY[0x270FA21F8]();
}

uint64_t sub_24E116E10()
{
  return MEMORY[0x270FA2200]();
}

uint64_t sub_24E116E20()
{
  return MEMORY[0x270FA2208]();
}

uint64_t sub_24E116E30()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24E116E40()
{
  return MEMORY[0x270F9EDB0]();
}

uint64_t sub_24E116E50()
{
  return MEMORY[0x270F9EE10]();
}

uint64_t sub_24E116E70()
{
  return MEMORY[0x270F9EE68]();
}

uint64_t sub_24E116E90()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_24E116EA0()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_24E116EB0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24E116EC0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24E116ED0()
{
  return MEMORY[0x270F9F010]();
}

uint64_t sub_24E116EE0()
{
  return MEMORY[0x270F9F018]();
}

uint64_t sub_24E116EF0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24E116F00()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24E116F10()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24E116F20()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24E116F40()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24E116F60()
{
  return MEMORY[0x270FA22C0]();
}

uint64_t sub_24E116F70()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24E116F80()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24E116F90()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24E116FA0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24E116FB0()
{
  return MEMORY[0x270F9F338]();
}

uint64_t sub_24E116FC0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24E116FD0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_24E116FE0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24E116FF0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24E117000()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24E117010()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_24E117020()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_24E117030()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_24E117040()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24E117060()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_24E117070()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_24E117080()
{
  return MEMORY[0x270F9F7A8]();
}

uint64_t sub_24E117090()
{
  return MEMORY[0x270F9F7B0]();
}

uint64_t sub_24E1170A0()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_24E1170B0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24E1170D0()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_24E1170E0()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_24E117100()
{
  return MEMORY[0x270F9FA80]();
}

uint64_t sub_24E117110()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_24E117120()
{
  return MEMORY[0x270F9FA98]();
}

uint64_t sub_24E117130()
{
  return MEMORY[0x270F9FAA8]();
}

uint64_t sub_24E117140()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24E117150()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24E117160()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_24E117180()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24E117190()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24E1171A0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24E1171B0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24E1171C0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24E1171D0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24E1171E0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24E1171F0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24E117200()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_24E117210()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_24E117220()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24E117230()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_24E117240()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24E117250()
{
  return MEMORY[0x270F9FF50]();
}

uint64_t sub_24E117260()
{
  return MEMORY[0x270EF2860]();
}

uint64_t sub_24E117270()
{
  return MEMORY[0x270EF2870]();
}

uint64_t sub_24E117280()
{
  return MEMORY[0x270EF2920]();
}

uint64_t sub_24E117290()
{
  return MEMORY[0x270EF2928]();
}

uint64_t sub_24E1172A0()
{
  return MEMORY[0x270EF2980]();
}

uint64_t sub_24E1172B0()
{
  return MEMORY[0x270EF2998]();
}

uint64_t sub_24E1172C0()
{
  return MEMORY[0x270EF29A0]();
}

uint64_t sub_24E1172D0()
{
  return MEMORY[0x270EF29D0]();
}

uint64_t sub_24E1172E0()
{
  return MEMORY[0x270EF29F0]();
}

uint64_t sub_24E1172F0()
{
  return MEMORY[0x270EF2A10]();
}

uint64_t sub_24E117300()
{
  return MEMORY[0x270F9FF68]();
}

uint64_t sub_24E117310()
{
  return MEMORY[0x270F9FF78]();
}

uint64_t sub_24E117320()
{
  return MEMORY[0x270F9FFE8]();
}

uint64_t sub_24E117350()
{
  return MEMORY[0x270FA23A8]();
}

uint64_t sub_24E117360()
{
  return MEMORY[0x270FA23B8]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B88]();
}

IOReturn IOPMAssertionCreateWithProperties(CFDictionaryRef AssertionProperties, IOPMAssertionID *AssertionID)
{
  return MEMORY[0x270EF4848](AssertionProperties, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return MEMORY[0x270EF4868](*(void *)&AssertionID);
}

uint64_t MGCopyAnswerWithError()
{
  return MEMORY[0x270F95FA8]();
}

CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved)
{
  return (CFStringRef)MEMORY[0x270EFD8F0](*(void *)&status, reserved);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x270EFD970](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x270EFD978](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x270EFD980](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x270EFD988](query, attributesToUpdate);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x270EFDCB0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x270EFDCD0](allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

double __exp10(double a1)
{
  MEMORY[0x270ED7DC8](a1);
  return result;
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x270ED8028](dso, description, activity, *(void *)&flags);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x270FA0178]();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

void free(void *a1)
{
}

int getaudit_addr(auditinfo_addr *a1, int a2)
{
  return MEMORY[0x270ED9BB8](a1, *(void *)&a2);
}

int gethostuuid(uuid_t a1, const timespec *a2)
{
  return MEMORY[0x270ED9C60](a1, a2);
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x270ED9DC0](path, name, value, size, *(void *)&position, *(void *)&options);
}

int isxdigit(int _c)
{
  return MEMORY[0x270ED9F30](*(void *)&_c);
}

long double log10(long double __x)
{
  MEMORY[0x270EDA0B0](__x);
  return result;
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x270EDA288](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x270EDA748](*(void *)&token, state64);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x270EDA768](name, out_token);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x270EDAA90]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_factory_content()
{
  return MEMORY[0x270EDAB28]();
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

int rmdir(const char *a1)
{
  return MEMORY[0x270EDB268](a1);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x270EDB460](path, name, value, size, *(void *)&position, *(void *)&options);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x270EDB5D8](*(void *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_task_localValuePop()
{
  return MEMORY[0x270FA2480]();
}

uint64_t swift_task_localValuePush()
{
  return MEMORY[0x270FA2488]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x270FA0618]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x270FA0620]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x270EDBCA8](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCB8](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x270EDBCE8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCF0](activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

uint64_t xpc_copy_code_signing_identity_for_token()
{
  return MEMORY[0x270EDBF30]();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x270EDC008](keys, values, count);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x270EDC050](xdict, key);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x270EDC078](xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x270EDC088](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x270EDC0A8](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_date(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}