@interface CKChatController
+ (id)representationFromFileURL:(id)a3;
+ (void)donateStickerToRecents:(id)a3;
+ (void)donateStickerToRecentsWithIdentifier:(id)a3 representations:(id)a4 stickerEffectType:(int64_t)a5 externalURI:(id)a6 name:(id)a7 accessibilityLabel:(id)a8 metadata:(id)a9 ckAttributionInfo:(id)a10;
- (BOOL)_CKRunningInSOSBuddy;
- (BOOL)_allowsMultipleSelectionForMessage:(id)a3;
- (BOOL)_anyLegacyBannerIsVisible;
- (BOOL)_anySuggestionPresenterWantsToShowBanner;
- (BOOL)_balloonViewOfCell:(id)a3 containsPoint:(CGPoint)a4 fromView:(id)a5;
- (BOOL)_canReloadEntryView;
- (BOOL)_canShowBackButtonView;
- (BOOL)_chatShowsAccountRegistrationFailureBanner;
- (BOOL)_clickyOrbEnabled;
- (BOOL)_displayMediaObjectFullscreen:(id)a3;
- (BOOL)_displayPreviewItemForMediaObject:(id)a3;
- (BOOL)_dropSessionIsNewSticker:(id)a3;
- (BOOL)_dropSessionIsTargetingEntryView:(id)a3;
- (BOOL)_hasExistingBannerMatchingStyle:(unint64_t)a3 withNicknames:(id)a4;
- (BOOL)_hasPreviewViewControllerForChatItem:(id)a3;
- (BOOL)_isFirstUnreadMessageVisibleForContentOffset:(CGPoint)a3;
- (BOOL)_isRunningInMacCatalyst;
- (BOOL)_isRunningPPT;
- (BOOL)_lastAddressedHandleIsAvailableAsiMessageAlias:(id)a3 SIMID:(id)a4;
- (BOOL)_macShouldShowFaceTimeButtonInToolbar;
- (BOOL)_mediaObjectHasTrimMetadata:(id)a3;
- (BOOL)_mediaObjectNeedsTrimming:(id)a3;
- (BOOL)_noticeIsExpired:(id)a3;
- (BOOL)_point:(CGPoint)a3 visuallyIntersectsBalloonViewInCollectionView:(id)a4;
- (BOOL)_presentCollabInvalidFileProviderLocationAlertIfNecessaryForPayload:(id)a3 collaborationType:(int64_t)a4;
- (BOOL)_sharingAllowOthersToInviteFromOptionsGroups:(id)a3;
- (BOOL)_shouldCheckWithSafetyMonitor;
- (BOOL)_shouldConfigureChatItemMenuForCommSafety:(id)a3;
- (BOOL)_shouldHideNavigationBarForSendAnimationContext:(id)a3;
- (BOOL)_shouldPresentDetailsViewFromCanvasViewController:(id)a3 tappedView:(id)a4;
- (BOOL)_shouldRestoreDraftState;
- (BOOL)_shouldRestoreFirstResponderAfterDetailsViewDismiss;
- (BOOL)_shouldShowNicknameOnboardingFlow;
- (BOOL)_shouldShowReadRecieptAlert;
- (BOOL)_shouldShowSaveStickerActionForChatItem:(id)a3;
- (BOOL)_shouldValidatePayloadBeforeSendingPayload:(id)a3;
- (BOOL)_showOrHideNicknameBannerIfNeeded;
- (BOOL)_smsEnabled;
- (BOOL)_supportsCollaborationNotices;
- (BOOL)_transcriptScrollsOnEntryViewActivation;
- (BOOL)_wantsCatchUpAffordance;
- (BOOL)_wantsThreeColumnLayout;
- (BOOL)_wantsToShowCollaborationNotices;
- (BOOL)accountCanCreateNickname;
- (BOOL)actionMenuGestureRecognizerButtonIsShowingHint:(id)a3;
- (BOOL)actionMenuGestureRecognizerButtonShouldRecognizeGesture:(id)a3;
- (BOOL)actionMenuGestureRecognizerButtonShouldShowHint:(id)a3;
- (BOOL)actionPerformer:(id)a3 transitionToViewController:(id)a4 transitionType:(int64_t)a5;
- (BOOL)allowDebugItems;
- (BOOL)allowEffectPickerToBePresented;
- (BOOL)allowsLoadingIndicatorPresentation;
- (BOOL)allowsMentions;
- (BOOL)appManagerDisplayedInMessages;
- (BOOL)appModalIsDisplayed;
- (BOOL)audioMessageWasPlayedAndIsLatestMessage;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canPerformAction:(SEL)a3 withSender:(id)a4;
- (BOOL)canShowBusinessOnboarding;
- (BOOL)chatInputControllerCanSend:(id)a3;
- (BOOL)chatInputControllerShouldShowHandwriting:(id)a3;
- (BOOL)clearCommSafetyCompositionIfNecessary;
- (BOOL)clickInteractionShouldBegin:(id)a3;
- (BOOL)commitStickerAsTapback:(id)a3;
- (BOOL)contextMenuInteractionIsOutsideOfVisibleBalloonCells:(id)a3;
- (BOOL)didComputeInitiallyVisibleIndexPaths;
- (BOOL)didDisplayFirstUnreadMessage;
- (BOOL)dismissingContextMenu;
- (BOOL)dragInteraction:(id)a3 sessionIsRestrictedToDraggingApplication:(id)a4;
- (BOOL)dragManager:(id)a3 canPeelItem:(id)a4;
- (BOOL)dragManager:(id)a3 canRotateItem:(id)a4;
- (BOOL)dragManager:(id)a3 canScaleItem:(id)a4;
- (BOOL)dragManager:(id)a3 shouldCancelDraggingForItem:(id)a4 toDragTarget:(id)a5 dropArea:(int)a6;
- (BOOL)dropInteraction:(id)a3 canHandleSession:(id)a4;
- (BOOL)effectPickerIsPresented;
- (BOOL)entryViewRequiresCollectionView;
- (BOOL)entryViewShouldBecomeTargetFirstResponderForPendingDraft;
- (BOOL)entryViewWasActiveBeforePresentingDataDetector;
- (BOOL)entryViewWasActiveOnContextMenuPresentation;
- (BOOL)entryViewWasActiveOnPreview;
- (BOOL)firstLayoutAfterResume;
- (BOOL)fullScreenBalloonViewControllerShouldShowHightlightButton:(id)a3 forChatItem:(id)a4;
- (BOOL)fullScreenBalloonViewControllerShouldShowReplyButton:(id)a3;
- (BOOL)gestureRecognizer:(id)a3 shouldReceiveTouch:(id)a4;
- (BOOL)gestureRecognizer:(id)a3 shouldRequireFailureOfGestureRecognizer:(id)a4;
- (BOOL)hasAlreadyPresentedSatelliteConnectionBanner;
- (BOOL)hasFinishedRestoringDraftState;
- (BOOL)hasSelectedChatItems;
- (BOOL)hasSelectedChatItemsIncludingAssociatedTapback;
- (BOOL)inlineReplyController:(id)a3 containerWidth:(double *)a4 offset:(double *)a5;
- (BOOL)inputAccessoryViewControllerEnabled;
- (BOOL)isAnimatingMessageSend;
- (BOOL)isAnimatingStickerReaction;
- (BOOL)isCatchUpButtonNeededOnFirstLoad;
- (BOOL)isChatAllowedByScreenTime:(id)a3;
- (BOOL)isChatControllerShowingStandaloneWindow:(id)a3;
- (BOOL)isCollapsed;
- (BOOL)isDeferringSystemNavigationPopGestureForPlusButton;
- (BOOL)isDetailsNavigationControllerDetached;
- (BOOL)isEditingMessage;
- (BOOL)isEntryViewResizeAnimationRunning;
- (BOOL)isFullScreenBalloonViewOnScreen;
- (BOOL)isFunCamPresented;
- (BOOL)isHandwritingLandscape;
- (BOOL)isInlineReply;
- (BOOL)isKeyboardSnapshotVisible;
- (BOOL)isKeyboardSnapshotted;
- (BOOL)isMainTranscript;
- (BOOL)isModal;
- (BOOL)isSafeToMarkAsRead;
- (BOOL)isSettingUpCollaboration;
- (BOOL)isShowingBusinessOnboarding;
- (BOOL)isShowingCamera;
- (BOOL)isShowingEmojiKeyboard;
- (BOOL)isShowingOscarChat;
- (BOOL)isShowingPreview;
- (BOOL)isShowingVideoMessageRecordingView;
- (BOOL)isTesting;
- (BOOL)isTransitioningFromQLPreviewToGrid;
- (BOOL)isTransitioningSize;
- (BOOL)isUsingVisibleInputViewHeightWhenUpdatingScrollGeometry;
- (BOOL)isWebViewVisible;
- (BOOL)itemProviderDisablesTouches;
- (BOOL)keyboardIsQuickPathing;
- (BOOL)messageEditingViewController:(id)a3 balloonHasTailForChatItemGuid:(id)a4;
- (BOOL)messageEntryView:(id)a3 shouldInsertMediaObjects:(id)a4;
- (BOOL)messageEntryViewShouldBeginEditing:(id)a3;
- (BOOL)messageEntryViewWidth:(double *)a3 andOffset:(double *)a4;
- (BOOL)needToEnforceScrollIntent;
- (BOOL)needsDarkEffectStyleCleanUp;
- (BOOL)nextEntryViewSafeAreaInsetUpdateIsSynchronous;
- (BOOL)photosGridFullScreenBalloonViewControllerShouldShowHightlightButton:(id)a3 forChatItem:(id)a4;
- (BOOL)photosGridFullScreenBalloonViewControllerShouldShowReplyButton:(id)a3;
- (BOOL)photosGridViewPresented;
- (BOOL)photosViewController:(id)a3 didPickAssetReference:(id)a4;
- (BOOL)pluginButtonsEnabled;
- (BOOL)prefersBottomDividerHidden;
- (BOOL)prefersStatusBarHidden;
- (BOOL)presentUpdateBanner;
- (BOOL)previewController:(id)a3 canShareItem:(id)a4;
- (BOOL)previewController:(id)a3 shouldDetectMachineReadableCodeForPreviewItem:(id)a4;
- (BOOL)previewController:(id)a3 shouldOpenURL:(id)a4 forPreviewItem:(id)a5;
- (BOOL)previewController:(id)a3 shouldShowTapbackAttributionForChatItem:(id)a4;
- (BOOL)previewController:(id)a3 shouldShowTapbackPickerForChatItem:(id)a4;
- (BOOL)previewControllerIsInGroupConversation:(id)a3;
- (BOOL)previewControllerShouldEnableStickerTapbacks:(id)a3;
- (BOOL)primeTranscriptWithInitialScrollGeometries;
- (BOOL)recipientsAreHEIFCapable;
- (BOOL)reloadEntryViewForStagedPluginMessage;
- (BOOL)reparentToolbarItem:(id)a3;
- (BOOL)repositionSticker:(id)a3 stickerChatItem:(id)a4 parentMessagePartChatItem:(id)a5 stickerPositioningInfo:(id)a6;
- (BOOL)respondsToSelector:(SEL)a3;
- (BOOL)scrollDownIsValid;
- (BOOL)shouldAutorotate;
- (BOOL)shouldConfigureForJunkModalInNavbarCanvasViewController:(id)a3;
- (BOOL)shouldDisableEntryView;
- (BOOL)shouldDismissKeyboardWhenShowingFullScreenAcknowledgmentPickerForBalloonChatItem:(id)a3;
- (BOOL)shouldFetchCollaborationNotices;
- (BOOL)shouldHideInteractionOptions;
- (BOOL)shouldListParticipantsInTitle;
- (BOOL)shouldMessageEntryViewReportBrowserButtonHitToInputDelegate:(id)a3;
- (BOOL)shouldNotShowGroupBanners;
- (BOOL)shouldPageSelectedChatItem;
- (BOOL)shouldPresentBlockingDowntimeViewController;
- (BOOL)shouldQuickLookChatItem:(id)a3;
- (BOOL)shouldQuickLookSelectedChatItem;
- (BOOL)shouldShowAvatarViewInNavBarCanvas;
- (BOOL)shouldShowBanners;
- (BOOL)shouldShowChevronInNavbarCanvasViewController:(id)a3;
- (BOOL)shouldShowDoneButton;
- (BOOL)shouldShowEntryView;
- (BOOL)shouldShowFacetimeButtonInNavbarCanvasViewController:(id)a3;
- (BOOL)shouldShowFullScreenAcknowledgmentPickerForChatItem:(id)a3;
- (BOOL)shouldShowReplyButtonForMediaObject:(id)a3 previewController:(id)a4;
- (BOOL)shouldShowTapbackPickerForChatItem:(id)a3;
- (BOOL)shouldShowTips;
- (BOOL)shouldUpdateEntryViewPasteConfiguration;
- (BOOL)shouldUseMacRecipientsView;
- (BOOL)shouldUseMinimumSafeAreas;
- (BOOL)shouldUseNavigationBarCanvasView;
- (BOOL)shouldUseThrowAnimationForComposition:(id)a3;
- (BOOL)shouldViewDetailsForSelectedChatItem;
- (BOOL)showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:(id)a3;
- (BOOL)showGroupBannerUpdateIfNeeded;
- (BOOL)showKeyboardForReply;
- (BOOL)showNicknameSharingOnboardingWithMemoji:(BOOL)a3;
- (BOOL)showSendAlertIfNecessaryForComposition:(id)a3;
- (BOOL)suppressEntryViewKeyboardNotifications;
- (BOOL)throwAnimationUsesAnimatedReloadForMessages:(id)a3;
- (BOOL)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 shouldSelectChatItem:(id)a5;
- (BOOL)transcriptCollectionViewController:(id)a3 balloonViewDidRequestCommitPayload:(id)a4 forPlugin:(id)a5 allowAllCommits:(BOOL)a6 error:(id *)a7;
- (BOOL)transcriptCollectionViewController:(id)a3 balloonViewDidRequestCommitSticker:(id)a4 forPlugin:(id)a5 allowAllCommits:(BOOL)a6 error:(id *)a7;
- (BOOL)transcriptCollectionViewController:(id)a3 shouldCleanupFullscreenEffectUI:(id)a4;
- (BOOL)transcriptCollectionViewController:(id)a3 shouldSetupFullscreenEffectUI:(id)a4;
- (BOOL)transcriptCollectionViewControllerShouldPlayAudio:(id)a3;
- (BOOL)transcriptCollectionViewControllerShouldScrollToBottomForLocalSentMessage:(id)a3;
- (BOOL)transcriptCollectionViewControllerShouldShouldScrollToTopForStatusBarTap:(id)a3;
- (BOOL)transcriptWasScrolledToBottomBeforeInlinePresentation;
- (BOOL)viewDidMoveToWindowAndNeedsToScrollToInsertionTime;
- (BOOL)wantsEmojiDetails;
- (BOOL)wantsInlineOverlay;
- (BOOL)wantsOverKeyboardAnimationForSendAnimationContext:(id)a3;
- (BOOL)wantsStickerDetails;
- (BOOL)wasKeyboardShowingWithApp;
- (CADisplayLink)stickerTranscriptScrollDisplayLink;
- (CGAffineTransform)stickerPreviewTransform;
- (CGPoint)contentOffsetForFirstUnreadMessage;
- (CGPoint)fullScreenBalloonViewController:(id)a3 stickerCenterForChatItem:(id)a4;
- (CGPoint)initialContentOffset;
- (CGRect)_convertedNavigationBarFrameInSendAnimationContainerView:(id)a3;
- (CGRect)_targetStickerFrameFromStickerCell:(id)a3 coordinateSpace:(id)a4;
- (CGRect)effectiveVisibleRectOfCollectionViewForTranscriptCollectionViewController:(id)a3;
- (CGRect)fullScreenBalloonViewController:(id)a3 balloonFrameForChatItem:(id)a4;
- (CGRect)fullScreenBalloonViewController:(id)a3 stickerBoundsForChatItem:(id)a4;
- (CGRect)fullScreenBalloonViewControllerSafeAreaLayoutFrame:(id)a3;
- (CGRect)fullScreenBalloonViewControllerSafeAreaLayoutFrameIgnoreEntryView:(id)a3;
- (CGRect)inlineReplyController:(id)a3 gradientFrameWithInsets:(UIEdgeInsets)a4;
- (CGRect)inputAccessoryViewFrameForFloatingKeyboard;
- (CGRect)messageEntryView:(id)a3 frameInThrowViewCoordinatesForView:(id)a4;
- (CGRect)photoGridTapbackSnapshotRect;
- (CGRect)photosGridFullScreenBalloonViewControllerSafeAreaLayoutFrame:(id)a3;
- (CGRect)previewController:(id)a3 frameForPreviewItem:(id)a4 inSourceView:(id *)a5;
- (CGRect)screenFrameForNotification:(id)a3;
- (CGRect)throwAnimationWindowFrame:(id)a3;
- (CGSize)lastLaidOutSize;
- (CGSize)messageEntryViewMaxShelfPluginViewSize:(id)a3;
- (CKAggregateAttachmentMessagePartChatItem)photoGridMomentShareChatItem;
- (CKAttachmentMessagePartChatItem)photoGridClickyOrbChatItem;
- (CKAudioTrimViewController)audioTrimController;
- (CKBrowserDragManager)browserDragManager;
- (CKBusinessMacToolbarViewController)businessMacToolbarController;
- (CKChatController)initWithConversation:(id)a3;
- (CKChatControllerSendMenuDelegate)sendMenuDelegate;
- (CKComposition)composition;
- (CKComposition)compositionBeingTrimmed;
- (CKComposition)initialComposition;
- (CKComposition)originalComposition;
- (CKDetailsContactsManager)detailsContactsManager;
- (CKEffectPickerViewController)effectPickerViewController;
- (CKExternalPluginViewControllerProvider)externalPluginControllerProvider;
- (CKFunCameraViewController)funCameraViewController;
- (CKGroupUpdateBannerView)groupPhotoUpdateBanner;
- (CKInlineReplyChatController)inlineReplyController;
- (CKInvisibleInkEffectController)previewInvisibleInkEffectController;
- (CKMacBarButtonToolbarItem)detailsToolbarItem;
- (CKMacMenuToolbarItem)macFaceTimeStartCallToolbarItem;
- (CKMacRecipientsController)macRecipientsController;
- (CKMacToolBarImageProperties)macToolbarDetailsButtonProps;
- (CKMacToolBarImageProperties)macToolbarFaceTimeButtonProps;
- (CKMacToolbarController)macToolbarController;
- (CKMacToolbarItem)macFaceTimeJoinCallToolbarItem;
- (CKMacToolbarItem)macFaceTimeJoinedCallToolbarItem;
- (CKMediaObject)mediaObjectToDownload;
- (CKMediaObjectAssetDataSourceManager)photoGridDataSourceManager;
- (CKMentionsController)mentionsController;
- (CKMessageEditingViewController)messageEditingViewController;
- (CKMessageEntryBackgroundViewProtocol)keyboardCandidateBarBackgroundView;
- (CKMessageEntryView)entryView;
- (CKMessageEntryViewContainerView)entryViewContainerView;
- (CKMessageEntryViewController)entryViewController;
- (CKMessagePartChatItem)clickyOrbChatItem;
- (CKNavBarUnifiedCallButton)wolfFaceTimeButton;
- (CKNavbarCanvasViewController)navbarCanvasViewController;
- (CKNavigationBarTitleController)navigationBarTitleController;
- (CKNicknameBannerView)nicknameBanner;
- (CKNicknameUpdate)currentNicknameUpdate;
- (CKOnboardingController)onboardingController;
- (CKQLPreviewController)previewController;
- (CKQLPreviewControllerDataSource)qlPreviewDataSource;
- (CKRaiseGesture)raiseGesture;
- (CKRotationLockUtility)rotationLockUtility;
- (CKScheduledUpdater)transcriptInlineNotificationUpdater;
- (CKScheduledUpdater)typingUpdater;
- (CKTapbackPickerContainerAccessoryView)pickerContainerAccessoryView;
- (CKThrowAnimationManager)throwAnimationManager;
- (CKTranscriptCollectionView)collectionView;
- (CKTranscriptSharingSuggestion)transcriptSharingBannerSuggestion;
- (CKVideoMessageRecordingViewController)videoMessageRecordingViewController;
- (CKVideoTrimController)videoTrimController;
- (CNContactPickerViewController)contactPicker;
- (Class)CKCloudSharingClass;
- (IMPluginPayload)extensionPayloadBeingSent;
- (IMScheduledUpdater)autorotationUpdater;
- (IMTimingCollection)timingCollectionSendGelato;
- (NSArray)appCardBackgroundViewConstraints;
- (NSArray)collaborationNoticeSuggestions;
- (NSArray)internalBarButtonItems;
- (NSArray)keyCommands;
- (NSIndexPath)indexPathForFirstUnreadMessage;
- (NSLayoutConstraint)catchUpButtonTopConstraint;
- (NSLayoutConstraint)entryViewAppCardLayoutConstraint;
- (NSLayoutConstraint)entryViewFauxKeyboardLayoutConstraint;
- (NSLayoutConstraint)entryViewKeyboardLayoutConstraint;
- (NSLayoutConstraint)entryViewKeyboardSnapshotLayoutConstraint;
- (NSLayoutConstraint)entryViewLeadingLayoutConstraint;
- (NSLayoutConstraint)entryViewTrailingLayoutConstraint;
- (NSLayoutConstraint)suggestionBannerTopConstraint;
- (NSMutableDictionary)activeDropPreviews;
- (NSMutableDictionary)fileURLKeyToGuidMapping;
- (NSNumber)frozenEntryViewHeightDuringDismissAnimation;
- (NSNumber)transcriptBottomContentOffsetAtSuspend;
- (NSString)firstUnreadMessageGUID;
- (NSString)firstUnreadMessageGUIDForTextEffects;
- (NSString)lastPopulatedMessageGuidFromMe;
- (NSString)messageGUIDForTranscriptExtension;
- (NSString)photoGridDisplayedChatItemGUID;
- (NSString)shareSheetHostBundleIdentifier;
- (OS_dispatch_group)revealAnimationGroup;
- (SCUIInterventionViewController)commSafetyInterventionController;
- (SGBannerProtocol)suggestionBannerView;
- (SGFoundInSuggestionPresenter)foundInSuggestionPresenter;
- (SGSuggestionPresenter)standardSuggestionPresenter;
- (STConversationContext)conversationContext;
- (UIDragSession)dragSession;
- (UIDropSession)dropSession;
- (UIEdgeInsets)_avoidanceInsets;
- (UIEdgeInsets)_contentInsetForSendAnimation;
- (UIEdgeInsets)_marginInsetsForEntryView;
- (UIEdgeInsets)additionalSafeAreaInsets;
- (UIEdgeInsets)bannerInsets;
- (UIEdgeInsets)initialContentInset;
- (UIEdgeInsets)macToolbarInsets;
- (UIEdgeInsets)messageEditingViewController:(id)a3 contentInsetsForChatItemGuid:(id)a4;
- (UIEdgeInsets)parentTranscriptContentInsetsForInlineReplyController:(id)a3;
- (UIEdgeInsets)transcriptContentInsetsForMessageEditingViewController:(id)a3;
- (UIEdgeInsets)virtualToolbarContentInsets;
- (UIImagePickerController)imagePickerController;
- (UIKeyboardInputMode)savedKeyboardInputMode;
- (UIMenu)macFaceTimeButtonMenu;
- (UITapGestureRecognizer)tapGestureRecognizer;
- (UIView)catchUpButton;
- (UIView)keyboardSnapshotView;
- (UIView)loadingIndicatorCoverView;
- (UIView)lockoutView;
- (UIView)notificationBannerView;
- (UIView)previewRevealView;
- (UIView)previewSourceView;
- (UIView)recipientsVirtualToolbarItem;
- (UIViewController)appCardBackgroundViewController;
- (UIViewController)collaborationPopoverController;
- (UIViewController)footerViewController;
- (UIViewController)nicknameUpdateController;
- (UIViewController)walletOrderImportViewController;
- (UIWindow)effectPickerWindow;
- (_TtC7ChatKit16CKChatTipManager)tipManager;
- (_TtC7ChatKit22CKCatchUpButtonManager)catchUpButtonManager;
- (_TtC7ChatKit25CKSuggestedActionsHandler)suggestedActionsHandler;
- (char)messageEditingViewController:(id)a3 colorForChatItemGuid:(id)a4;
- (double)_currentScrollDelta;
- (double)_currentlyVisibleBannerHeight;
- (double)_entryViewTopInsetPadding;
- (double)_expectedAppCardAndEntryViewHeight;
- (double)_keyboardHeightFromLayoutGuide;
- (double)_maxEntryViewHeight;
- (double)balloonMaxWidth;
- (double)bottomInsetPadding;
- (double)entryViewMaxYFromPreviousLayout;
- (double)firstUnreadMessageCellOriginY;
- (double)gradientBottomPlaceholderHeight;
- (double)keyboardHeightFromPreviousLayout;
- (double)minimumBottomInset;
- (double)preferredMacToolbarHeight;
- (double)stickerTranscriptScrollDelta;
- (double)suggestionBannerHeight;
- (double)throwAnimationFinalFrameOffset:(id)a3;
- (double)throwAnimationManagerTopHeaderHeight:(id)a3;
- (double)topInsetPadding;
- (double)transcriptCollectionViewController:(id)a3 targetAlphaForChatItem:(id)a4;
- (double)visibleInputViewHeight;
- (id)_actionsToolbar;
- (id)_addStickerActionForChatItem:(id)a3 parentChatItem:(id)a4 sourceView:(id)a5;
- (id)_animationPropertiesToUseForUpdateAfterHoldForReason:(id)a3;
- (id)_animationPropertiesToUseInUpdateForReasons:(id)a3 followingHoldForReason:(id)a4;
- (id)_assetReferenceForDisplayedGridChatItem:(id)a3 selectionSnapshot:(id)a4;
- (id)_associatedStickerChatItemInInsertedIndexes:(id)a3 matchingSticker:(id)a4;
- (id)_attributionFromHighlight:(id)a3 forChatGUID:(id)a4;
- (id)_balloonViewForCellAtIndexPath:(id)a3;
- (id)_chatItemForContextMenuWithConfiguration:(id)a3;
- (id)_chatItemForMediaObject:(id)a3;
- (id)_chatItemForReplyingToChatItem:(id)a3 explicitlySelected:(BOOL)a4;
- (id)_chatItemToEdit;
- (id)_compositionForEmojiSticker:(id)a3 mediaObject:(id)a4;
- (id)_copyActionForChatItem:(id)a3 shouldUseTopMostChatItemIfAggregateChatItem:(BOOL)a4;
- (id)_currentPresentationController;
- (id)_debugSelectedGuidSummary;
- (id)_defaultTranscriptNavBarAppearance;
- (id)_deleteActionForChatItem:(id)a3 shouldUseTopMostChatItemIfAggregateChatItem:(BOOL)a4;
- (id)_deleteActionsForChatItem:(id)a3;
- (id)_deleteMenuForChatItem:(id)a3;
- (id)_downgradeMessageActionForChatItem:(id)a3;
- (id)_dragInteraction:(id)a3 sessionPropertiesForSession:(id)a4;
- (id)_dragItemsForInteraction:(id)a3;
- (id)_dragItemsFromChatItem:(id)a3 balloonView:(id)a4;
- (id)_dragItemsIfRepositioningForInteraction:(id)a3;
- (id)_emojiDetailsActionForChatItem:(id)a3;
- (id)_exportActionForChatItem:(id)a3 shouldUseTopMostChatItemIfAggregateChatItem:(BOOL)a4;
- (id)_exportActionsForChatItem:(id)a3;
- (id)_exportMenuForChatItem:(id)a3;
- (id)_forwardActionForChatItem:(id)a3;
- (id)_forwardAndCopyActionsForChatItem:(id)a3;
- (id)_forwardAndCopyMenuForChatItem:(id)a3;
- (id)_fullScreenBalloonViewControllerForPhotosGridViewWithChatItem:(id)a3 snapshotView:(id)a4 presentTapbackKeyboardInput:(BOOL)a5;
- (id)_fullscreenEffectsManager;
- (id)_gridViewNavigationControllerForMomentShare:(id)a3 chatItem:(id)a4 tapbackManager:(id)a5;
- (id)_groupConversationContainingSharedURL:(id)a3;
- (id)_highlightActionForChatItem:(id)a3;
- (id)_inlineReplyActionForChatItem:(id)a3;
- (id)_interfaceActionsForChatItem:(id)a3;
- (id)_internalMenuForChatItem:(id)a3;
- (id)_itemProvidersFromDragItems:(id)a3;
- (id)_localizedTitleStringForAggregateAction:(int64_t)a3 numberOfPhotos:(int64_t)a4 numberOfVideos:(int64_t)a5 numberOfOther:(int64_t)a6;
- (id)_makeInternalMenu;
- (id)_meContact;
- (id)_mediaAttributionActionForChatItem:(id)a3;
- (id)_menuForChatItem:(id)a3 withParentChatItem:(id)a4 menuAppearance:(int64_t)a5;
- (id)_moreActionForChatItem:(id)a3;
- (id)_moreActionForChatItem:(id)a3 configureForCommSafety:(BOOL)a4;
- (id)_navigationControllerToPop;
- (id)_newCollaborationPayloadFromPayload:(id)a3 shareURL:(id)a4 updatedMetadata:(id)a5;
- (id)_newImageConfiguredForNSToolbarWithName:(id)a3 tintColor:(id)a4;
- (id)_originalIndexPathForRepositioningDropSession:(id)a3;
- (id)_parentChatItemForIndexPath:(id)a3;
- (id)_parentIndexPathForCellAtIndexPath:(id)a3;
- (id)_previewViewControllerForAssetReference:(id)a3 dataSource:(id)a4 previewDelegate:(id)a5 previewMode:(int64_t)a6;
- (id)_previewViewControllerForAssetReference:(id)a3 photosViewController:(id)a4 previewMode:(int64_t)a5;
- (id)_previewingViewControllerForHitView:(id)a3 indexPath:(id)a4;
- (id)_previewingViewControllerForLocation:(CGPoint)a3 inSourceView:(id)a4;
- (id)_progressBarHostView;
- (id)_recipientHandle;
- (id)_recipientHandleID;
- (id)_regularGridViewNavigationControllerForChatItem:(id)a3 assetReference:(id)a4 tapbackManager:(id)a5;
- (id)_responsesSubmenuForChatItem:(id)a3 withParentChatItem:(id)a4 menuAppearance:(int64_t)a5;
- (id)_retractionActionForChatItem:(id)a3;
- (id)_saveStickerActionForChatItem:(id)a3 sourceView:(id)a4;
- (id)_selectedBalloonFromTouchForDropSession:(id)a3;
- (id)_sendertHandleID;
- (id)_showTimestampsAction;
- (id)_stickerChatItemForDragItem:(id)a3;
- (id)_stickerDetailsActionForChatItem:(id)a3;
- (id)_stickerDragPreviewForDragItem:(id)a3 defaultPreview:(id)a4;
- (id)_stickerDropProposalForItem:(id)a3 inSession:(id)a4;
- (id)_stickerDropProposalForSession:(id)a3;
- (id)_stickerFromChatItem:(id)a3;
- (id)_tapbackStatusManagerForChatItem:(id)a3;
- (id)_threadIdentifierForMessagePart:(id)a3;
- (id)_threadOriginatorForMessagePart:(id)a3;
- (id)_transcriptOverlayTransitionContextForAnchoredMessagePart:(id)a3 threadIdentifier:(id)a4 presentKeyboard:(BOOL)a5;
- (id)_transcriptOverlayTransitionContextForModalPresentation;
- (id)_transcriptStickerCellContainingInteraction:(id)a3;
- (id)_updatedDetailsToolbarItemImage;
- (id)_updatedFaceTimeToolbarItemImage;
- (id)_viewControllerForModalPresentation;
- (id)_visibleChatItemsToScreenFrameMap;
- (id)_votingViewForChatItem:(id)a3 containingViewController:(id)a4;
- (id)actionManager:(id)a3 tapbackElementsForChatItem:(id)a4;
- (id)activeSendMenuPresentationForChatController:(id)a3;
- (id)activeSendMenuPresentationForChatInputController:(id)a3;
- (id)addContactOptionsMenuWithNicknameUpdate:(id)a3;
- (id)addToExistingContactActionWithNicknameUpdate:(id)a3;
- (id)additionalActivitiesTypesForPreviewController:(id)a3;
- (id)audioMessageThrowBalloonsForSendAnimationContext:(id)a3;
- (id)buildTapbackMenuElementsForChatItem:(id)a3 sendHandler:(id)a4 emojiKeyboardHandler:(id)a5 detailsHandler:(id)a6;
- (id)cellIndexPathForDragTarget:(id)a3;
- (id)chatInputTranscriptIdentifier;
- (id)chatItems;
- (id)compositionForSticker:(id)a3 mediaObject:(id)a4;
- (id)consumingBundleIdentifiers;
- (id)contactForNickname:(id)a3;
- (id)contextMenuAccessoryViewsForChatItem:(id)a3 containingViewController:(id)a4;
- (id)contextMenuInteraction:(id)a3 configurationForMenuAtLocation:(CGPoint)a4;
- (id)contextMenuInteractionOutsideOfVisibleBalloonCells;
- (id)contextualCKChatItemsForPreviewController:(id)a3;
- (id)contextualCKChatItemsForTapbackPickerViewController:(id)a3;
- (id)createAlertControllerForAccountComposition:(id)a3 completion:(id)a4;
- (id)createAnalyticsDictionaryForCollaborationForType:(int64_t)a3 sharingURL:(id)a4;
- (id)createBannerForGroupUpdates:(id)a3;
- (id)createGroupUpdateWithType:(int64_t)a3;
- (id)createNewContactActionWithNicknameUpdate:(id)a3;
- (id)currentChatController;
- (id)currentDragPreviewContainer;
- (id)currentNavigationBarBasedOnSizeClass;
- (id)currentNicknameUpdates;
- (id)currentTopChatItemForAggregateChatItem:(id)a3;
- (id)dateOfNewestVisibleMessageForMessageHistoryViewController:(id)a3;
- (id)deferredPresentationBlock;
- (id)deferredSendAnimationBlock;
- (id)dragInteraction:(id)a3 itemsForAddingToSession:(id)a4 withTouchAtPoint:(CGPoint)a5;
- (id)dragInteraction:(id)a3 previewForCancellingItem:(id)a4 withDefault:(id)a5;
- (id)dragInteraction:(id)a3 previewForLiftingItem:(id)a4 session:(id)a5;
- (id)dragPreviewParametersForBalloonView:(id)a3;
- (id)dropInteraction:(id)a3 previewForDroppingItem:(id)a4 withDefault:(id)a5;
- (id)dropInteraction:(id)a3 sessionDidUpdate:(id)a4;
- (id)editingToolbarItems;
- (id)effectsPresenterViewController;
- (id)excludedActivityTypesForPreviewController:(id)a3;
- (id)firstUnreadMessageItemGUIDForTranscriptCollectionViewController:(id)a3;
- (id)generatedSummary;
- (id)generativeContext;
- (id)getCurrentContext;
- (id)hashKeyForDragItem:(id)a3;
- (id)innermostToolbarItemIdentifier;
- (id)inputAccessoryView;
- (id)inputAccessoryViewController;
- (id)inputContextHistoryForMessageEntryView:(id)a3;
- (id)inputViewController;
- (id)insertItemsCallback;
- (id)keyboardLayoutGuideForAppCardPresentation;
- (id)lastOutgoingMessagePartItem;
- (id)launchURLForMode:(id)a3;
- (id)makeThrowAnimationManager;
- (id)mediaObjectsFromComposition:(id)a3;
- (id)messageEditingViewController:(id)a3 originalMessageCompositionForMessageWithGuid:(id)a4;
- (id)messageEntryViewActiveSendMenuPresentation:(id)a3;
- (id)modalInlineReplyControllerForChatItem:(id)a3;
- (id)nameAndPhotoForContact:(id)a3 andNicknameUpdate:(id)a4 withCompletionBlock:(id)a5;
- (id)nameOnlyForContact:(id)a3 andNicknameUpdate:(id)a4 withCompletionBlock:(id)a5;
- (id)newInputSnapshotView;
- (id)nextMediaObjectToTrimInComposition:(id)a3;
- (id)outgoingComposeViewForSendAnimation;
- (id)photoOnlyForContact:(id)a3 andNicknameUpdate:(id)a4 withCompletionBlock:(id)a5;
- (id)photosGridViewController;
- (id)photosViewController:(id)a3 accessoriesForContextMenuInteraction:(id)a4 assetReference:(id)a5;
- (id)photosViewController:(id)a3 configurationForContextMenuInteraction:(id)a4 assetReference:(id)a5;
- (id)photosViewController:(id)a3 contextMenuInteraction:(id)a4 styleForMenuWithConfiguration:(id)a5;
- (id)photosViewController:(id)a3 dragItemProviderForAssetReference:(id)a4;
- (id)pickerAccessoryViewForChatItem:(id)a3 containingViewController:(id)a4;
- (id)preferredFocusEnvironments;
- (id)presentedControllerDoneButtonItem;
- (id)presentingViewControllerForGroupAlertsFromDetailsAdapter:(id)a3;
- (id)presentingViewControllerForOnboardingController:(id)a3;
- (id)previewActionsForPreviewController:(id)a3;
- (id)previewController:(id)a3 transitionImageForPreviewItem:(id)a4 contentRect:(CGRect *)a5;
- (id)previewController:(id)a3 transitionViewForPreviewItem:(id)a4 uncroppedSourceFrame:(CGRect *)a5;
- (id)previewItemsForMediaObject:(id)a3 currentItemIndex:(int64_t *)a4 containsRestoring:(BOOL *)a5;
- (id)previewingContext:(id)a3 viewControllerForLocation:(CGPoint)a4;
- (id)progressBar;
- (id)proofReadingInfoForMessageEditingViewController:(id)a3;
- (id)representationForRole:(id)a3 sticker:(id)a4;
- (id)scrollBlock;
- (id)selectedBalloonForTarget:(id)a3;
- (id)selectedBalloonIntersectingRect:(CGRect)a3;
- (id)selectedBalloonIntersectingRect:(CGRect)a3 chatItemForRepositioning:(id)a4;
- (id)selectedChatItems;
- (id)selectedChatItemsIncludingTapbackedChatItem;
- (id)selectedMessagePartItem;
- (id)shareMetadataWithDugongTokensForCKShare:(id)a3 shareURL:(id)a4;
- (id)smartEmojiResponses:(id)a3 chatItem:(id)a4;
- (id)splitViewController;
- (id)tapbackMenuElementsForChatItem:(id)a3;
- (id)textDroppableView:(id)a3 proposalForDrop:(id)a4;
- (id)textInputContextIdentifierForPreviewController:(void *)a3;
- (id)textPasteConfigurationSupporting:(id)a3 combineItemAttributedStrings:(id)a4 forRange:(id)a5;
- (id)textPasteConfigurationSupporting:(id)a3 performPasteOfAttributedString:(id)a4 toRange:(id)a5;
- (id)throwAnimationContainerSuperview:(id)a3;
- (id)throwBalloonsForSendAnimationContext:(id)a3;
- (id)toolbarItemForIdentifier:(id)a3;
- (id)transcriptCollectionViewController:(id)a3 accessoriesForContextMenuWithConfiguration:(id)a4;
- (id)transcriptCollectionViewController:(id)a3 chatItemForContextMenuWithConfiguration:(id)a4;
- (id)transcriptCollectionViewController:(id)a3 contextMenuConfigurationForItemAtIndexPath:(id)a4 point:(CGPoint)a5 interaction:(id)a6;
- (id)transcriptCollectionViewController:(id)a3 previewForDismissingContextMenuWithConfiguration:(id)a4;
- (id)transcriptCollectionViewController:(id)a3 previewForHighlightingContextMenuWithConfiguration:(id)a4;
- (id)transcriptCollectionViewController:(id)a3 styleForContextMenuWithConfiguration:(id)a4;
- (id)transcriptCollectionViewControllerOuterEffectPresentingView:(id)a3;
- (id)updateDataSourceForPluginPayload:(id)a3 forGUID:(id)a4 withCollaborationMetadata:(id)a5 shareURL:(id)a6;
- (id)updateOptionsMenuForContact:(id)a3 withNicknameUpdate:(id)a4 withCompletionBlock:(id)a5;
- (id)viewControllerToPresentFrom;
- (id)viewForDragAndChatInputDropTarget;
- (id)viewToInsertTranscriptCollectionViewBelow;
- (id)virtualView;
- (int)dragManager:(id)a3 dropAreaForDragTarget:(id)a4;
- (int64_t)_determineEntryViewPositioningGuideToActivate;
- (int64_t)_sharingAccessTypeFromOptionsGroups:(id)a3;
- (int64_t)_sharingPermissionTypeFromOptionsGroups:(id)a3;
- (int64_t)acknowledgmentToSend;
- (int64_t)collaborationFailureCount;
- (int64_t)entryViewPositioningGuideForCurrentTapbackPickerPresentation;
- (int64_t)initialFrameIndexForCurrentDrag;
- (int64_t)lastKnownDeviceOrientation;
- (int64_t)macJoinStyle;
- (int64_t)momentShareFetchGeneration;
- (int64_t)notificationBannerType;
- (int64_t)preferredStatusBarStyle;
- (int64_t)previewController:(id)a3 editingModeForPreviewItem:(id)a4;
- (int64_t)sceneInterfaceOrientation;
- (int64_t)targetFirstResponder;
- (int64_t)transcriptCollectionViewControllerWantsCurrentDesiredIntent:(id)a3;
- (int64_t)unreadCountForCurrentFilterModeForNavbarCanvasViewController:(id)a3;
- (unint64_t)_animationOptionsFromCurve:(int64_t)a3;
- (unint64_t)_maxAllowedSVSize;
- (unint64_t)keyboardSnapshotReason;
- (unint64_t)preferredScreenEdgesDeferringSystemGestures;
- (unint64_t)recipientsCount;
- (unint64_t)sendingCompositionBackgroundTask;
- (unint64_t)supportedInterfaceOrientations;
- (void)__raiseGestureRecognized:(id)a3;
- (void)__setEntryViewFrame:(CGRect)a3;
- (void)_actuallyPresentCollaborationFailureAlertForComposition:(id)a3 sharingURL:(id)a4 error:(id)a5 completion:(id)a6;
- (void)_addAppCardBackgroundView;
- (void)_addDefaultButtonToSharingErrorAlertController:(id)a3 sharingURL:(id)a4 defaultButtonAction:(int64_t)a5 completion:(id)a6;
- (void)_addOtherButtonToSharingErrorAlertController:(id)a3 otherButtonAction:(int64_t)a4 completion:(id)a5;
- (void)_addParticipant:(id)a3 toShareBearURL:(id)a4 containerSetupInfo:(id)a5 completionHandler:(id)a6;
- (void)_addParticipant:(id)a3 toShareURL:(id)a4 forChatGUID:(id)a5 completionHandler:(id)a6;
- (void)_addParticipantToShare:(id)a3 withHandle:(id)a4 toCollaboration:(id)a5 containerSetupInfo:(id)a6 completionHandler:(id)a7;
- (void)_addStickerToStoreWithUISticker:(id)a3 sourceRect:(CGRect)a4 browserViewController:(id)a5;
- (void)_applicationDidBecomeActive:(id)a3;
- (void)_applicationWillResignActive:(id)a3;
- (void)_askToTurnOnReadReceiptsIfNeeded;
- (void)_askToTurnOnSMSRelayIfNeeded;
- (void)_autoAcceptNicknameIfNeeded;
- (void)_autorotationUpdaterFired;
- (void)_backbuttonPressed;
- (void)_beginDeferringSystemNavigationPopGestureForPlusButton;
- (void)_callButtonPressed;
- (void)_callButtonPressedWithVideoEnabled:(BOOL)a3;
- (void)_cancelDeletion:(id)a3;
- (void)_catchUpButtonTapped;
- (void)_clearBalloonViewOverlays;
- (void)_clearCompositionAndPendingConversation;
- (void)_clearStagedSensitiveContentUsingContextDictionary:(id)a3;
- (void)_collaborationMetadataForURL:(id)a3 forChatGUID:(id)a4 completionHandler:(id)a5;
- (void)_commitSticker:(id)a3 toCoordinate:(CGPoint)a4 withInitialSize:(CGSize)a5 dropPreviewTransform:(CGAffineTransform *)a6;
- (void)_commitSticker:(id)a3 toCoordinate:(CGPoint)a4 withInitialSize:(CGSize)a5 dropPreviewTransform:(CGAffineTransform *)a6 isRepositioningSticker:(BOOL)a7 localStickerChatItem:(id)a8;
- (void)_configureDetailsToolbarItem;
- (void)_configureEditMessageCommand:(id)a3;
- (void)_configureGridControllerForStackTransition:(id)a3 chatItem:(id)a4;
- (void)_configureMacFaceTimeButtonMenu;
- (void)_configureTitleView;
- (void)_confirmReadReceiptSettings;
- (void)_conversationJoinStateDidChange:(id)a3;
- (void)_conversationParticipantsChanged:(id)a3;
- (void)_dataDetectorsDidDismissNotification:(id)a3;
- (void)_dataDetectorsWillPresentNotification:(id)a3;
- (void)_dealloc;
- (void)_deleteSelectedMessages:(id)a3;
- (void)_deleteStickerWithTransferGUID:(id)a3;
- (void)_detailsAdapterWantsDismiss:(id)a3;
- (void)_detailsButtonPressed;
- (void)_didSendCompositionInConversation:(id)a3;
- (void)_dismissBannerView:(id)a3 completion:(id)a4;
- (void)_dismissCollaborationPopoverUI;
- (void)_dismissFullScreenBubbleViewControllerAnimated:(BOOL)a3 withSendAnimation:(BOOL)a4 completion:(id)a5;
- (void)_dismissFullScreenBubbleViewControllerAnimated:(BOOL)a3 withSendAnimation:(BOOL)a4 dismissAppCard:(BOOL)a5 completion:(id)a6;
- (void)_dismissInterventionController;
- (void)_dismissPresentedViewController:(id)a3;
- (void)_dismissSendMenuIfNecessaryForChangedPresentationStyle;
- (void)_dismissSentWithSiriUI;
- (void)_displayNameUpdatedNotification:(id)a3;
- (void)_doneButtonPressed;
- (void)_dragInteraction:(id)a3 prepareForSession:(id)a4 completion:(id)a5;
- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)a3;
- (void)_editCancelButtonPressed;
- (void)_editingToolbarSelectedForward:(id)a3;
- (void)_endDeferringSystemNavigationPopGestureForPlusButton;
- (void)_fetchCollaborationNotices;
- (void)_fetchRecipientCapabilitiesDeferred;
- (void)_finishSendAnimation;
- (void)_gridViewNavigationControllerForChatItem:(id)a3 assetReference:(id)a4 completionHandler:(id)a5;
- (void)_gridViewNavigationControllerForMomentShareURL:(id)a3 chatItem:(id)a4 tapbackManager:(id)a5 completionHandler:(id)a6;
- (void)_handleAddressBookChangedNotification:(id)a3;
- (void)_handleChatItemDidChange:(id)a3;
- (void)_handleCollaborationNoticesChanged:(id)a3;
- (void)_handleContactStoreBatchLoadCompleteNotification:(id)a3;
- (void)_handleDictationEnded:(id)a3;
- (void)_handleDictationStarted:(id)a3;
- (void)_handleGroupNameChanged:(id)a3;
- (void)_handleGroupPhotoChanged:(id)a3;
- (void)_handleInterworkingStateChanged:(id)a3;
- (void)_handleIsUnexpectedlyLoggedOutChanged:(id)a3;
- (void)_handleKeyTransparencyShouldRefresh:(id)a3;
- (void)_handleTranscriptPluginChatItem:(id)a3;
- (void)_handleTranscriptPluginChatItem:(id)a3 presentationConfiguration:(id)a4;
- (void)_hideCatchUpButtonIfNeededAndRemoveOnCompletion:(BOOL)a3;
- (void)_highlightForShareURL:(id)a3 completionHandler:(id)a4;
- (void)_inheritHiddenKeyboardAppearanceIfNeeded;
- (void)_initializeEffectPicker;
- (void)_initializeNavigationBarCanvasViewIfNecessary;
- (void)_invalidateChatItemLayoutIfNecessary:(CGSize)a3;
- (void)_invalidateEntryViewConstraints;
- (void)_isShareBearURL:(id)a3 completionHandler:(id)a4;
- (void)_kickPhotoKit;
- (void)_layoutEntryViewSuperview;
- (void)_markAsReadIfNecessary;
- (void)_markMessagesAsReadOnPushIfNeeded;
- (void)_markVisibleMentionsAsRead;
- (void)_maxEntryViewHeight;
- (void)_messageReceived:(id)a3;
- (void)_passKitUIDismissed:(id)a3;
- (void)_performResume;
- (void)_prepareForDropAnimationWithItem:(id)a3 preview:(id)a4;
- (void)_presentAlertForDebugSummary:(id)a3;
- (void)_presentAppStoreForAdamID:(id)a3;
- (void)_presentBannerView:(id)a3 completion:(id)a4;
- (void)_presentBannerView:(id)a3 placingHandlesUnderScrutiny:(id)a4 completion:(id)a5;
- (void)_presentBrowserForPlugin:(id)a3;
- (void)_presentBrowserOrAppStoreForAdamID:(id)a3 url:(id)a4 identifier:(id)a5;
- (void)_presentBrowserOrAppStoreForAdamID:(id)a3 url:(id)a4 identifier:(id)a5 isForSticker:(BOOL)a6;
- (void)_presentCollabAddToMessagesGroupAlert:(id)a3 sendBlock:(id)a4 completionHandler:(id)a5;
- (void)_presentCollabAddToMessagesGroupAlertIfNecessary:(id)a3 collaborationType:(int64_t)a4 sendBlock:(id)a5 completionHandler:(id)a6;
- (void)_presentCollaborationAlertsIfNecessaryForPayload:(id)a3 collaborationType:(int64_t)a4 sendBlock:(id)a5 completionHandler:(id)a6;
- (void)_presentDetailsViewControllerAnimated:(BOOL)a3;
- (void)_presentGridForChatItem:(id)a3 assetReference:(id)a4;
- (void)_presentGridForPendingMomentShareChatItem:(id)a3;
- (void)_presentGridViewNavigationController:(id)a3;
- (void)_presentPreviewViewControllerFromPhotosViewController:(id)a3 assetReference:(id)a4;
- (void)_presentSentWithSiriUI;
- (void)_presentTranscriptSharingBannerIfNecessary;
- (void)_presentViewerForChatItem:(id)a3 assetReference:(id)a4;
- (void)_processCollaborationNoticesForBanner:(id)a3;
- (void)_raiseToListenSettingChanged:(id)a3;
- (void)_reduceTransparencyStatusDidChange;
- (void)_registerRepresentationsInItemProvider:(id)a3 sticker:(id)a4;
- (void)_registerSendProgressDelegate;
- (void)_registerStandardRepresentationsInItemProvider:(id)a3 sticker:(id)a4 effectView:(id)a5;
- (void)_reloadMentionsData;
- (void)_removeParticipant:(id)a3 fromShareBearURL:(id)a4 containerSetupInfo:(id)a5 completionHandler:(id)a6;
- (void)_removeParticipant:(id)a3 fromShareURL:(id)a4 forChatGUID:(id)a5 completionHandler:(id)a6;
- (void)_removeSubsharesAndSendFileProviderComposition:(id)a3 shareURL:(id)a4 completion:(id)a5;
- (void)_replaceBannerView:(id)a3 withNewBannerView:(id)a4 placingHandlesUnderScrutiny:(id)a5 completion:(id)a6;
- (void)_reportSelectedMessages:(id)a3;
- (void)_resetEffectPickerViewController;
- (void)_resizeNavigationBarIfNecessary;
- (void)_resizeNavigationBarIfNecessaryWithAnimation:(BOOL)a3;
- (void)_restoreDraftState;
- (void)_retryGroupPhotoUploadIfNecessary;
- (void)_satelliteStateChangedNotification:(id)a3;
- (void)_saveDraftState;
- (void)_sendAutomaticallyPlacedSticker:(id)a3 stickerReactionSession:(id)a4 forChatItem:(id)a5 forParentChatItem:(id)a6 stickerFrame:(CGRect)a7 animationCompletionHandler:(id)a8;
- (void)_sendCollaborationCompositionForCloudKit:(id)a3 sharingURL:(id)a4 share:(id)a5 completion:(id)a6;
- (void)_sendCollaborationCompositionForFileProvider:(id)a3 sharingURL:(id)a4 share:(id)a5 completion:(id)a6;
- (void)_sendCommSafetyVerifiedSticker:(id)a3 withMediaObject:(id)a4 composition:(id)a5 parentMessagePartChatItem:(id)a6 messageSummaryInfo:(id)a7;
- (void)_sendCompositionForFileProviderCloudDrive:(id)a3 completion:(id)a4;
- (void)_sendCompositionForNewCloudKitShare:(id)a3 completion:(id)a4;
- (void)_sendNewStickerFromDropSession:(id)a3;
- (void)_sendStickerForDragItem:(id)a3 previewSize:(CGSize)a4 dropLocation:(CGPoint)a5;
- (void)_setBannersHidden:(BOOL)a3;
- (void)_setConversationDeferredSetup;
- (void)_setEntryViewFrame:(CGRect)a3 animated:(BOOL)a4;
- (void)_setEntryViewFrame:(CGRect)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5;
- (void)_setEntryViewFrame:(CGRect)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5 completionHandler:(id)a6;
- (void)_setOverlayForBalloonViewAtIndexPath:(id)a3;
- (void)_setTitle:(id)a3 animated:(BOOL)a4;
- (void)_setUpEntryViewAppCardLayoutConstraint;
- (void)_setupNavbar;
- (void)_showAutoDonationAlertForAppName:(id)a3 bundleID:(id)a4;
- (void)_showCatchUpButtonIfNeeded;
- (void)_showCatchUpButtonIfNeededResumingFromBackground:(BOOL)a3;
- (void)_showMapViewerForMediaObject:(id)a3;
- (void)_showPassbookCardViewForMediaObject:(id)a3;
- (void)_showReaderForAggregateChatItem:(id)a3 balloonView:(id)a4;
- (void)_showTapbackReplyOverlayFromPhotosViewController:(id)a3 assetReference:(id)a4 presentTapbackKeyboardInput:(BOOL)a5;
- (void)_showVCalViewerForMediaObject:(id)a3;
- (void)_showVCardViewerForMediaObject:(id)a3;
- (void)_showWalletOrderImportViewForMediaObject:(id)a3;
- (void)_sizeEffectPickerWindow;
- (void)_stageFindMyLocationRequest;
- (void)_startSharingForURLForFileProviderCloudDrive:(id)a3 completion:(id)a4;
- (void)_stickerTranscriptScrollDisplayLinkFired;
- (void)_switchedAwayFromEmojiKeyboard:(id)a3;
- (void)_switchedToEmojiKeyboard:(id)a3;
- (void)_textInputModeDidChange:(id)a3;
- (void)_transferCompleted:(id)a3;
- (void)_transferFileTooLarge:(id)a3;
- (void)_transferFinishedNotification:(id)a3;
- (void)_transferRestoredNotification:(id)a3;
- (void)_transferUpdated:(id)a3;
- (void)_updateAccountRegistrationFailureNotification;
- (void)_updateAndSendCompositionForExistingCloudKitShare:(id)a3 share:(id)a4 attempt:(unint64_t)a5 completion:(id)a6;
- (void)_updateAndSendCompositionForExistingCloudKitShare:(id)a3 share:(id)a4 completion:(id)a5;
- (void)_updateAndSendCompositionForFileProvider:(id)a3 share:(id)a4 sharingURL:(id)a5 completion:(id)a6;
- (void)_updateBannerNotifications;
- (void)_updateCatchUpButtonVisibilityResumingFromBackground:(BOOL)a3;
- (void)_updateEntryViewConstraintsIfNeeded;
- (void)_updateEntryViewFrameIfNeeded:(BOOL)a3;
- (void)_updateEntryViewPasteConfiguration;
- (void)_updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:(id)a3;
- (void)_updateFauxKeyboardLayoutGuideIfNeededWithKeyboardFrame:(CGRect)a3;
- (void)_updateForNewPreferredService;
- (void)_updateIndexPathForFirstUnreadMessage;
- (void)_updateLogoutBannerNotification;
- (void)_updateNavigationButtons;
- (void)_updateNavigationUI;
- (void)_updateNotificationBannerOfType:(int64_t)a3 show:(BOOL)a4;
- (void)_updatePhotoGridIfNeeded;
- (void)_updateRecipientCapabilities;
- (void)_updateShare:(id)a3 containerSetupInfo:(id)a4 completionHandler:(id)a5;
- (void)_updateSuggestionsBanners;
- (void)_updateTitleViewHeight:(id)a3;
- (void)_updateTitleViewLayout;
- (void)_updateToolbarItems;
- (void)_updateTranscriptOffsetForBannerView;
- (void)_validateAndSendComposition:(id)a3 completion:(id)a4;
- (void)_walletOrderImportControllerDismissed;
- (void)_willSendComposition:(id)a3 inConversation:(id)a4;
- (void)actionCancelIsTappedForChatItem:(id)a3;
- (void)actionEditIsTappedForChatItem:(id)a3;
- (void)actionManager:(id)a3 copyChatItems:(id)a4;
- (void)actionManager:(id)a3 forwardChatItems:(id)a4;
- (void)actionManager:(id)a3 presentInlineReplyControllerForChatItem:(id)a4;
- (void)actionManager:(id)a3 quickLookChatItem:(id)a4;
- (void)actionManager:(id)a3 tapbackChatItem:(id)a4;
- (void)actionMenuGestureRecognizerButtonDidTouchDownButton:(id)a3;
- (void)actionMenuGestureRecognizerButtonGestureDidBegin:(id)a3;
- (void)actionMoreIsTappedForChatItem:(id)a3;
- (void)actionRetractIsTappedForChatItem:(id)a3;
- (void)addAppCardBackgroundViewIfNecessary;
- (void)addHEICImage:(id)a3 completion:(id)a4;
- (void)addOrRemoveEntryViewIfNeeded;
- (void)addPNGImage:(id)a3 completion:(id)a4;
- (void)addParticipant:(id)a3 toCollaboration:(id)a4 forChatGUID:(id)a5 containerSetupInfo:(id)a6 completionHandler:(id)a7;
- (void)addPassesViewControllerDidFinish:(id)a3;
- (void)addSuggestionBanner:(id)a3 animated:(BOOL)a4;
- (void)addToCollaboration:(id)a3;
- (void)animateRevealWithInteractionProgress:(id)a3 forPreviewingAtLocation:(CGPoint)a4 inSourceView:(id)a5 containerView:(id)a6;
- (void)animateSendMenuStatusBarAppearanceUpdate;
- (void)animatedDismissalOfKeyboardSnapshot;
- (void)appCardDidChangeEntryViewAlignmentHeight:(double)a3 animated:(BOOL)a4;
- (void)appCardDidDismiss;
- (void)appCardViewStateDidChange:(BOOL)a3;
- (void)appendCompositionFromItemProviders:(id)a3;
- (void)askToShareScreenFromBuddyMenu:(id)a3;
- (void)associatedStickerCells:(id *)a3 stickerChatItems:(id *)a4 chatItemGUID:(id)a5;
- (void)avatarViewPressed:(id)a3;
- (void)beginHoldingAutorotationForKey:(id)a3;
- (void)beginThrowAnimationForComposition:(id)a3;
- (void)chatAllowedByScreenTimeChanged:(id)a3;
- (void)chatController:(id)a3 didFinishDismissAnimationForSendMenuViewController:(id)a4;
- (void)chatController:(id)a3 requestPresentSendMenu:(id)a4;
- (void)chatControllerWillBeginResizing;
- (void)chatInputController:(id)a3 didFinishDismissAnimationForSendMenuViewController:(id)a4;
- (void)chatInputController:(id)a3 didPresentStickerPickerForChatItem:(id)a4;
- (void)chatInputController:(id)a3 didRequestAppendToCompositionForPayload:(id)a4;
- (void)chatInputController:(id)a3 presentShelfModal:(id)a4 animated:(BOOL)a5 completion:(id)a6;
- (void)chatInputController:(id)a3 requestPresentSendMenu:(id)a4;
- (void)chatInputController:(id)a3 willPresentStickerPickerForChatItem:(id)a4;
- (void)chatInputControllerCancelSelectFunCamera:(id)a3;
- (void)chatInputControllerDidDismissCompactBrowserViewController:(id)a3;
- (void)chatInputControllerDidDismissModalBrowserViewController:(id)a3;
- (void)chatInputControllerDidSelectFunCamera:(id)a3;
- (void)chatInputControllerDidSelectRequestLocation:(id)a3;
- (void)chatInputControllerDidTransitionCollapsed:(id)a3;
- (void)chatInputControllerDidTransitionExpanded:(id)a3;
- (void)chatInputControllerRequestDismissKeyboardSnapshot:(id)a3;
- (void)chatInputControllerRequestInputViewFocusFromFullscreen:(id)a3;
- (void)chatInputControllerRequestShowKeyboardSnapshot:(id)a3;
- (void)chatInputControllerWillDismissModalBrowserViewController:(id)a3;
- (void)chatInputControllerWillPresentModalBrowserViewController:(id)a3;
- (void)chatInputControllerWillSelectFunCamera:(id)a3;
- (void)chatInputControllerWillTransitionCollapsed:(id)a3;
- (void)chatInputControllerWillTransitionExpanded:(id)a3;
- (void)chatInputDidChangeSize;
- (void)chatInputDidSelectEffectPicker;
- (void)chatInputDidSelectPhotoPicker;
- (void)chatInputDidUpdateInputViewShowingBrowser:(BOOL)a3 entryFieldCollapsed:(BOOL)a4 animated:(BOOL)a5;
- (void)chatInputDidUpdateWithNewInputViewController:(id)a3;
- (void)chatInputSentComposition:(id)a3;
- (void)chatInputWillChangeHeightForCompactPresentation:(double)a3;
- (void)checkForSensitivePhotosAndSendComposition:(id)a3;
- (void)checkSuggestionsForBanner;
- (void)ckVideoMessageRecordingViewController:(id)a3 mediaObjectCaptured:(id)a4 error:(id)a5;
- (void)ckVideoMessageRecordingViewControllerRecordingCanceled:(id)a3;
- (void)cleanUpDarkEffectStyle;
- (void)cleanupPostComposeTransitionWithKBFrame:(CGRect)a3;
- (void)clearEntryViewPasteConfiguration;
- (void)clearHandlesFromScrutiny:(id)a3;
- (void)collaborationNoticeSuggestionWillDismiss:(id)a3;
- (void)composeRecipientViewShouldResignFirstResponder;
- (void)configureForCurrentTraitCollection;
- (void)configureMacToolbarProperties;
- (void)configureWithToolbarController:(id)a3;
- (void)contactPicker:(id)a3 didSelectContact:(id)a4;
- (void)contactPickerDidCancel:(id)a3;
- (void)contactViewController:(id)a3 didCompleteWithContact:(id)a4;
- (void)contentInsetDidChangeWithAnimationProperties:(id)a3;
- (void)contentInsetWillChange:(UIEdgeInsets)a3 withAnimationProperties:(id)a4;
- (void)contextMenuInteraction:(id)a3 willDisplayMenuForConfiguration:(id)a4 animator:(id)a5;
- (void)contextMenuInteraction:(id)a3 willEndForConfiguration:(id)a4 animator:(id)a5;
- (void)controller:(id)a3 didCompleteClassificationRequest:(id)a4 withResponse:(id)a5;
- (void)copy:(id)a3;
- (void)createCollaborationFailureAlertForFailedMetadataLoadWithFallback:(BOOL)a3 URL:(id)a4;
- (void)createCollaborationFailureAlertForNotice:(id)a3;
- (void)createContactWithNicknameUpdate:(id)a3;
- (void)dealloc;
- (void)delete:(id)a3;
- (void)deleteMediaObjectAttachmentGUIDs:(id)a3 originalStackCount:(int64_t)a4;
- (void)detailsAdapter:(id)a3 shouldComposeConversationWithRecipientAddresses:(id)a4;
- (void)detailsAdapter:(id)a3 wantsToStageComposition:(id)a4;
- (void)detailsAdapterDidDismiss:(id)a3;
- (void)detailsAdapterWantsToPresentKTContactVerificationUI:(id)a3;
- (void)detailsAdapterWantsToPresentReportToAppleUI:(id)a3;
- (void)detailsAdapterWillDismiss:(id)a3;
- (void)determineIfSendMenuShouldElevateCheckInWithCompletion:(id)a3;
- (void)didConfirmForInterventionViewController:(id)a3;
- (void)didDismissFunCamera:(id)a3;
- (void)didDismissPreviewViewController:(id)a3 committing:(BOOL)a4;
- (void)didReceiveMemoryWarning;
- (void)didRejectForInterventionViewController:(id)a3;
- (void)didRequestComposeAudio:(id)a3;
- (void)didRequestComposeText:(id)a3 text:(id)a4;
- (void)didRequestComposeVideo:(id)a3;
- (void)didRequestCreateCalendarEvent:(id)a3;
- (void)didRequestLocationPush:(BOOL)a3;
- (void)didRequestOpenWebView:(id)a3;
- (void)didRequestSendDeviceDetails;
- (void)didRequestSendResponseForAction:(id)a3;
- (void)didRequestSettings;
- (void)dimsmissCurrentBannerAndShowNewBannerForGroupUpdate:(id)a3;
- (void)disableRotationWhileRecordingAudioMessage;
- (void)disableSendButtonSpinner;
- (void)dismissBusinessOnboardingIfShowing;
- (void)dismissCollaborationNoticeBannersIfNecessary;
- (void)dismissCollaborationNoticeSuggestion:(id)a3;
- (void)dismissContextMenuInteractionMenu;
- (void)dismissDetailsController:(id)a3;
- (void)dismissDetailsControllerAnimated:(BOOL)a3;
- (void)dismissDetailsNavigationController;
- (void)dismissDetailsViewAndShowConversationList;
- (void)dismissEffectPickerAnimated:(BOOL)a3;
- (void)dismissInlineReplyController:(BOOL)a3;
- (void)dismissInlineReplyIfNeededAndScrollToBottom;
- (void)dismissKeyboard;
- (void)dismissMessageEditingViewController:(BOOL)a3;
- (void)dismissPickerWithCompletion:(id)a3;
- (void)dismissPresentedViewController:(id)a3;
- (void)dismissTipIfPresented;
- (void)dismissTranscriptOverlayViewController:(id)a3 presentKeyboard:(BOOL)a4;
- (void)dismissVideoMessageRecordingViewController;
- (void)dismissViewControllerAnimated:(BOOL)a3 completion:(id)a4;
- (void)dragInteraction:(id)a3 item:(id)a4 willAnimateCancelWithAnimator:(id)a5;
- (void)dragInteraction:(id)a3 session:(id)a4 didEndWithOperation:(unint64_t)a5;
- (void)dragInteraction:(id)a3 sessionWillBegin:(id)a4;
- (void)dragManager:(id)a3 draggedItemWithTarget:(id)a4;
- (void)dragManagerDidBeginDragging:(id)a3;
- (void)dragManagerDidEndDragging:(id)a3;
- (void)dropInteraction:(id)a3 concludeDrop:(id)a4;
- (void)dropInteraction:(id)a3 item:(id)a4 willAnimateDropWithAnimator:(id)a5;
- (void)dropInteraction:(id)a3 performDrop:(id)a4;
- (void)dropInteraction:(id)a3 sessionDidEnd:(id)a4;
- (void)dropInteraction:(id)a3 sessionDidEnter:(id)a4;
- (void)effectPickerViewController:(id)a3 effectWithIdentifierSelected:(id)a4;
- (void)effectPickerViewControllerClose:(id)a3 animated:(BOOL)a4;
- (void)effectPickerViewControllerClose:(id)a3 keepingSideMountContainer:(BOOL)a4 animated:(BOOL)a5;
- (void)emphasizeMessageWithMessageGUID:(id)a3;
- (void)enableRotationAfterRecording;
- (void)enableSendButtonSpinner;
- (void)endHoldingAutorotationForKey:(id)a3;
- (void)enforceSendMenuOrderingInWindowSubviews;
- (void)entryViewContainerViewDidLayoutSubviews:(id)a3;
- (void)escButtonPressed:(id)a3;
- (void)eventEditViewController:(id)a3 didCompleteWithAction:(int64_t)a4;
- (void)flagSensitiveMediaObjects:(id)a3;
- (void)forciblyUnloadChatInputController;
- (void)fullScreenBalloonViewController:(id)a3 deleteStickerWithTransferGUID:(id)a4;
- (void)fullScreenBalloonViewController:(id)a3 didAppearAnimated:(BOOL)a4;
- (void)fullScreenBalloonViewController:(id)a3 didRequestSaveSticker:(id)a4;
- (void)fullScreenBalloonViewController:(id)a3 didTapToSaveSticker:(id)a4;
- (void)fullScreenBalloonViewController:(id)a3 replyButtonPressedForChatItem:(id)a4;
- (void)fullScreenBalloonViewController:(id)a3 sendMessageAcknowledgment:(int64_t)a4 forChatItem:(id)a5;
- (void)fullScreenBalloonViewController:(id)a3 sendMessageHighlight:(BOOL)a4 forChatItem:(id)a5;
- (void)fullScreenBalloonViewController:(id)a3 stickerPackTappedWithAdamID:(id)a4;
- (void)fullScreenBalloonViewController:(id)a3 verticallyScrollTranscriptByAmount:(double)a4 animated:(BOOL)a5 duration:(double)a6 completion:(id)a7;
- (void)fullScreenBalloonViewController:(id)a3 willAppearAnimated:(BOOL)a4;
- (void)fullScreenBalloonViewController:(id)a3 willDisappearWithSendAnimation:(BOOL)a4 duration:(double)a5;
- (void)fullScreenBalloonViewControllerDidDisappear:(id)a3;
- (void)fullScreenBalloonViewControllerHandleDismissTap:(id)a3;
- (void)fullScreenBalloonViewControllerRequestDismissKeyboardSnapshot:(id)a3;
- (void)fullScreenBalloonViewControllerRequestShowKeyboardSnapshot:(id)a3;
- (void)fullScreenBalloonViewControllerWillReturnToSuggestionsPicker:(id)a3;
- (void)fullScreenBalloonViewControllerWillTransitionToKeyboardInput:(id)a3;
- (void)groupPhotoUpdateBanner:(id)a3 dismissedUpdate:(id)a4;
- (void)handleAutomaticallyPlacedStickerCommSafetySendContext:(id)a3;
- (void)handleContentSizeCategoryDidChangeNotification:(id)a3;
- (void)handleStickerDropConfirmCommSafetySendContext:(id)a3;
- (void)handleStickerTapbackConfirmCommSafetySendContext:(id)a3;
- (void)handleiOSConfirmCommSafetySendContext:(id)a3;
- (void)hideAcknowledgmentsAssociatedWithChatItem:(id)a3;
- (void)hideAssociatedCellsForChatItem:(id)a3;
- (void)hideExistingKeyboardSnapshot;
- (void)hideMediaPickerAnimated:(BOOL)a3;
- (void)hideMediaPickerAnimated:(BOOL)a3 completion:(id)a4;
- (void)imagePickerController:(id)a3 didFinishPickingMediaWithInfo:(id)a4;
- (void)inlineReplyController:(id)a3 appCardDidChangeEntryViewAlignmentHeight:(double)a4 animated:(BOOL)a5;
- (void)inlineReplyController:(id)a3 messageEntryView:(id)a4 didMoveToWindow:(id)a5;
- (void)inlineReplyController:(id)a3 setIsShowingPreview:(BOOL)a4;
- (void)inlineReplyController:(id)a3 setTargetFirstResponder:(int64_t)a4;
- (void)inlineReplyControllerIsAppearing:(id)a3;
- (void)inlineReplyControllerRequestsDismissal:(id)a3 presentKeyboard:(BOOL)a4;
- (void)inputController:(id)a3 willDismissPresentationController:(id)a4;
- (void)inputLanguageDidChange:(id)a3;
- (void)insertInitialCompositionIfNeeded;
- (void)interactionProgress:(id)a3 didEnd:(BOOL)a4;
- (void)interactionProgressDidUpdate:(id)a3;
- (void)invalidateEntryViewForNewCompose;
- (void)inviteToShareScreenFromBuddyMenu:(id)a3;
- (void)keyCommandApplyTextEffect:(id)a3;
- (void)keyCommandApplyTextStyle:(id)a3;
- (void)keyCommandDelete:(id)a3;
- (void)keyCommandDeleteConversation:(id)a3;
- (void)keyCommandEditMessage:(id)a3;
- (void)keyCommandPage:(id)a3;
- (void)keyCommandPrint:(id)a3;
- (void)keyCommandReply:(id)a3;
- (void)keyCommandReply:(id)a3 withModifier:(BOOL)a4;
- (void)keyCommandReplyAlternate:(id)a3;
- (void)keyCommandSelectTapback:(id)a3;
- (void)keyCommandShowDetails:(id)a3;
- (void)keyCommandTapback:(id)a3;
- (void)keyCommandToggleDetails;
- (void)keyCommandToggleUnreadState;
- (void)keyTransparencyConversationViewControllerDidComplete:(id)a3;
- (void)keyboardDidChangeFrame:(id)a3;
- (void)keyboardDidHide:(id)a3;
- (void)keyboardDidShow:(id)a3;
- (void)keyboardShouldShowCandidates:(id)a3;
- (void)keyboardShouldShowPredictions:(id)a3;
- (void)keyboardWillBeginInteractiveDismissal:(id)a3;
- (void)keyboardWillChangeFrame:(id)a3;
- (void)keyboardWillHide:(id)a3;
- (void)keyboardWillShow:(id)a3;
- (void)layoutFooterView;
- (void)layoutLockoutView;
- (void)learnMoreButtonTapped;
- (void)loadChatInputController;
- (void)loadView;
- (void)lockoutViewControllerDidFinishDismissing:(id)a3;
- (void)macRecipientsControllerDidUpdateToFieldSizing:(id)a3;
- (void)makeEntryViewActiveAfterSend;
- (void)mentionsControllerDidFinishAnimation:(id)a3;
- (void)messageEditingViewController:(id)a3 confirmedEditWithComposition:(id)a4;
- (void)messageEditingViewController:(id)a3 didUpdateFrameForBalloonView:(id)a4;
- (void)messageEditingViewControllerDidFinishAnimatingOut:(id)a3;
- (void)messageEditingViewControllerIsAnimatingIn:(id)a3;
- (void)messageEditingViewControllerIsAnimatingOut:(id)a3;
- (void)messageEditingViewControllerRequestsDismissal:(id)a3 presentKeyboard:(BOOL)a4;
- (void)messageEditingViewControllerWillAnimateOut:(id)a3;
- (void)messageEntryView:(id)a3 didInsertPluginPayload:(id)a4;
- (void)messageEntryView:(id)a3 didMoveToWindow:(id)a4;
- (void)messageEntryView:(id)a3 shouldShowAppStrip:(BOOL)a4 animated:(BOOL)a5;
- (void)messageEntryViewDidBeginEditing:(id)a3;
- (void)messageEntryViewDidBeginEditingNotAlreadyActive:(id)a3;
- (void)messageEntryViewDidChange:(id)a3 isTextChange:(BOOL)a4 isShelfChange:(BOOL)a5;
- (void)messageEntryViewDidDismissCustomizationPicker:(id)a3;
- (void)messageEntryViewDidPresentCustomizationPicker:(id)a3;
- (void)messageEntryViewPlusButtonHit:(id)a3;
- (void)messageEntryViewPopulateNextSentMessage:(id)a3;
- (void)messageEntryViewPopulatePreviousSentMessage:(id)a3;
- (void)messageEntryViewRecordingDidChange:(id)a3;
- (void)messageEntryViewSafeAreaInsetsDidChange:(id)a3;
- (void)messageEntryViewSendButtonHit:(id)a3;
- (void)messageEntryViewSendLaterPluginInfoUpdated:(id)a3;
- (void)messageEntryViewSwipeDownGestureRecognized:(id)a3;
- (void)messageEntryViewTextFormattingAnimationsOptionsPresentationInProgress:(BOOL)a3;
- (void)messageEntryViewWantsGenerativePlaygroundPluginPresented:(id)a3 presentationStyle:(unint64_t)a4;
- (void)messageEntryViewWantsSendLaterPickerPresented:(id)a3;
- (void)messageEntryViewWillDismissCustomizationPicker:(id)a3;
- (void)messageEntryViewWillPresentCustomizationPicker:(id)a3;
- (void)messageHistoryViewController:(id)a3 didSelectDate:(id)a4 withMessages:(id)a5;
- (void)navbarCanvasViewController:(id)a3 didTapView:(id)a4;
- (void)navbarCanvasViewController:(id)a3 selectedChipAction:(id)a4;
- (void)navbarCanvasViewController:(id)a3 selectedSuggestedReply:(id)a4;
- (void)navbarCanvasViewController:(id)a3 updatedJoinStateWithStyle:(int64_t)a4;
- (void)navbarCanvasViewControllerCanvasHeightDidChange:(id)a3;
- (void)navbarCanvasViewControllerFaceTimeAudioButtonTapped:(id)a3;
- (void)navbarCanvasViewControllerFaceTimeVideoButtonTapped:(id)a3;
- (void)navbarCanvasViewControllerLegacyCanvasHeightDidChange:(id)a3;
- (void)nicknameBannerDidInteractWithOnboardingOffer;
- (void)nicknameBannerView:(id)a3 actionButtonTapped:(id)a4 forUpdates:(id)a5;
- (void)nicknameStoreDidChange:(id)a3;
- (void)nicknameUpdatesViewController:(id)a3 selectedAction:(unint64_t)a4 forNicknameUpdate:(id)a5 sourceView:(id)a6;
- (void)onboardingControllerDidFinish:(id)a3;
- (void)openURLInExtensionContextForMode:(id)a3;
- (void)parentControllerDidBecomeActive;
- (void)performAnimatedJunkRecoveryTransition:(id)a3;
- (void)performResumeDeferredSetup;
- (void)photoGridDisplayedChatItemChanged:(id)a3;
- (void)photosGridFullScreenBalloonViewController:(id)a3 replyButtonPressedForChatItem:(id)a4;
- (void)photosGridFullScreenBalloonViewController:(id)a3 verticallyScrollTranscriptByAmount:(double)a4 animated:(BOOL)a5 duration:(double)a6 completion:(id)a7;
- (void)photosGridFullScreenBalloonViewControllerHandleDismissTap:(id)a3;
- (void)photosViewController:(id)a3 commitPreviewViewControllerForContextMenuInteraction:(id)a4;
- (void)photosViewController:(id)a3 contextMenuInteraction:(id)a4 willEndForConfiguration:(id)a5 animator:(id)a6;
- (void)photosViewController:(id)a3 didDoubleTapAssetReference:(id)a4;
- (void)prepareForSuspend;
- (void)prepareInputForPreviewPresentation;
- (void)prepareToDismissForSecondInstance;
- (void)presentActionMenuForAccountSelection:(id)a3 completion:(id)a4;
- (void)presentAppStoreForURL:(id)a3 fromSourceApplication:(id)a4;
- (void)presentCollaborationFailureAlertForComposition:(id)a3 sharingURL:(id)a4 error:(id)a5 completion:(id)a6;
- (void)presentCollaborationPopoverUI;
- (void)presentCommSafetyInterventionIfNecessaryForFileURL:(id)a3 withSendContext:(id)a4 completion:(id)a5;
- (void)presentDetailsViewController;
- (void)presentDetailsViewControllerAnimated:(BOOL)a3;
- (void)presentEmojiDetailsControllerWithIndexPath:(id)a3;
- (void)presentLoadingIndicatorCoverIfNeeded;
- (void)presentNicknameUpdatesViewControllerFromView:(id)a3;
- (void)presentPhotosApp;
- (void)presentReplaceCompositionAlertWithConfirmationBlock:(id)a3 cancelBlock:(id)a4;
- (void)presentStickerDetailControllerWithIndexPath:(id)a3;
- (void)presentStickerDetailsViewController:(id)a3 fromChatItem:(id)a4;
- (void)presentTranscriptOverlayViewController:(id)a3;
- (void)presentTrimControllerForMediaObject:(id)a3;
- (void)presentViewController:(id)a3 animated:(BOOL)a4 completion:(id)a5;
- (void)presentationControllerDidDismiss:(id)a3;
- (void)presentedPreviewControllerDidSelectDismissToGrid;
- (void)presentedPreviewControllerDidSelectNavigateToGrid;
- (void)previewController:(id)a3 didTransitionToState:(int64_t)a4;
- (void)previewController:(id)a3 sendTapback:(id)a4 targetChatItem:(id)a5 isRemoval:(BOOL)a6;
- (void)previewController:(id)a3 willTransitionToState:(int64_t)a4;
- (void)previewControllerDidCancelDismiss:(id)a3;
- (void)previewControllerDidDismiss:(id)a3;
- (void)previewControllerWillDismiss:(id)a3;
- (void)previewingContext:(id)a3 commitViewController:(id)a4;
- (void)prewarmCamera:(id)a3;
- (void)prewarmFunCamera;
- (void)primeTranscriptWithInitialOffset:(CGPoint)a3 inset:(UIEdgeInsets)a4;
- (void)providerWillBeRemovedFromToolbarController:(id)a3;
- (void)purgeAttachmentsForChat:(id)a3;
- (void)quickLookSelectedChatItem;
- (void)raiseGestureRecognized:(id)a3;
- (void)readerViewControllerWillDismiss:(id)a3;
- (void)receivedBalloonEmphasisNotification:(id)a3;
- (void)recoverableDeleteConversation;
- (void)refreshMacToolbar;
- (void)registerChatForScreenTime:(id)a3;
- (void)registerForTextInputPayloadHandling;
- (void)registerForTextinputPayloadHandlingForCheckInForConversation:(id)a3;
- (void)registerNotifications;
- (void)registerNotificationsForConversation:(id)a3;
- (void)reloadEntryViewIfNeeded;
- (void)reloadFooterViewIfNecessaryForNewConversation:(id)a3;
- (void)removeAppCardBackgroundViewIfNecessary;
- (void)removeFooterView;
- (void)removeFromCollaboration:(id)a3;
- (void)removeLoadingIndicatorCoverIfNeeded;
- (void)removeLockoutControllerIfNeeded;
- (void)removeParticipant:(id)a3 fromCollaboration:(id)a4 forChatGUID:(id)a5 containerSetupInfo:(id)a6 completionHandler:(id)a7;
- (void)removeSuggestionsBanner:(id)a3 animated:(BOOL)a4;
- (void)replyButtonTappedForMediaObject:(id)a3 previewController:(id)a4;
- (void)requestDismissKeyboardSnapshotForEffectPickerIfNeeded;
- (void)requestDismissKeyboardSnapshotForReason:(unint64_t)a3;
- (void)requestDismissKeyboardSnapshotForSendMenu;
- (void)requestShowKeyboardSnapshotForReason:(unint64_t)a3;
- (void)requestShowKeyboardSnapshotForSendMenu;
- (void)resignFirstResponderOnEntryViewIfNeeded;
- (void)restoreEntryViewAfterPreview;
- (void)restoreEntryViewPasteConfiguration;
- (void)restoreInputAfterPreviewPresentation;
- (void)restoreInputAfterSearchPresentation;
- (void)retractScheduledChatItem:(id)a3;
- (void)retractScheduledChatItems:(id)a3 fromAggregateChatItem:(id)a4;
- (void)revealExistingKeyboardSnapshot;
- (void)safariViewControllerDidFinish:(id)a3;
- (void)saveSticker:(id)a3 sourceRect:(CGRect)a4;
- (void)saveStickerFromChatItem:(id)a3 pluginSourceView:(id)a4 animateFlyIn:(BOOL)a5;
- (void)saveStickerFromDetailViewController:(id)a3 chatItemContainingSticker:(id)a4;
- (void)saveStickerFromEmojiDetails:(id)a3;
- (void)saveStickerFromTapbackAttributionFlow:(id)a3;
- (void)scrollGeometryIsUpdatingForReasons:(id)a3 followingHoldForReason:(id)a4;
- (void)scrollToMessage:(id)a3 atSpecificMessagePartIndex:(int64_t)a4 highlight:(BOOL)a5 withInlineReplyOverlay:(BOOL)a6;
- (void)scrollToMessage:(id)a3 atSpecificMessagePartIndex:(int64_t)a4 highlight:(BOOL)a5 withInlineReplyOverlay:(BOOL)a6 alignedWithView:(id)a7 allowOverScroll:(BOOL)a8;
- (void)scrollToMessage:(id)a3 highlight:(BOOL)a4;
- (void)scrollToMessage:(id)a3 highlight:(BOOL)a4 withInlineReplyOverlay:(BOOL)a5;
- (void)scrollToMessageGUID:(id)a3 atSpecificMessagePartIndex:(int64_t)a4 highlight:(BOOL)a5 autoDismissHighlight:(BOOL)a6 withInlineReplyOverlay:(BOOL)a7 alignedWithView:(id)a8 allowOverScroll:(BOOL)a9 scrollPosition:(unint64_t)a10;
- (void)scrollToMessageGUID:(id)a3 partIndex:(int64_t)a4 highlight:(BOOL)a5;
- (void)scrollToMessageGUID:(id)a3 partIndex:(int64_t)a4 highlight:(BOOL)a5 autoDismissHighlight:(BOOL)a6;
- (void)scrollToMessageGUID:(id)a3 partIndex:(int64_t)a4 highlight:(BOOL)a5 scrollPosition:(unint64_t)a6;
- (void)scrollTranscriptEnd;
- (void)scrollTranscriptPageDown;
- (void)scrollTranscriptPageUp;
- (void)scrollTranscriptPageUpDirection:(BOOL)a3 toBounds:(BOOL)a4;
- (void)scrollTranscriptToAlignWithMessageEditingBalloonView;
- (void)selectAccountAndSendComposition:(id)a3 completion:(id)a4;
- (void)selectAllForActionManager:(id)a3;
- (void)selectContact;
- (void)sendAnalyticsForElapsedSendTimeForType:(int64_t)a3 sharingURL:(id)a4 timeInterval:(double)a5;
- (void)sendAnimationManagerDidStopAnimation:(id)a3 context:(id)a4;
- (void)sendAnimationManagerWillStartAnimation:(id)a3 context:(id)a4;
- (void)sendAutomaticallyPlacedSticker:(id)a3 stickerReactionSession:(id)a4 forChatItem:(id)a5 forParentChatItem:(id)a6 stickerFrame:(CGRect)a7 animationCompletionHandler:(id)a8;
- (void)sendCollaborationCompositionAndSetSendingState:(id)a3;
- (void)sendComposition:(id)a3;
- (void)sendComposition:(id)a3 animations:(id)a4;
- (void)sendCompositionForCloudKit:(id)a3 completion:(id)a4;
- (void)sendCompositionForCollaboration:(id)a3 collaborationType:(int64_t)a4 completion:(id)a5;
- (void)sendCompositionForFileProvider:(id)a3 completion:(id)a4;
- (void)sendCompositionForPendingCollaboration:(id)a3 completion:(id)a4;
- (void)sendCompositionIfAllowed:(id)a3;
- (void)sendCompositionWithoutThrow:(id)a3;
- (void)sendMessage:(id)a3 forConversation:(id)a4 newComposition:(BOOL)a5;
- (void)sendMessage:(id)a3 forConversation:(id)a4 onService:(id)a5 newComposition:(BOOL)a6;
- (void)sendMessageAcknowledgment:(int64_t)a3 chatItem:(id)a4 previewController:(id)a5;
- (void)sendSelectedSuggestedReply:(id)a3 messageGUID:(id)a4;
- (void)sendSticker:(id)a3 toCoordinate:(CGPoint)a4 withInitialSize:(CGSize)a5 dropPreviewTransform:(CGAffineTransform *)a6 isRepositioningSticker:(BOOL)a7 localStickerChatItem:(id)a8;
- (void)sendSticker:(id)a3 withDragTarget:(id)a4 draggedSticker:(id)a5;
- (void)sendSticker:(id)a3 withMediaObject:(id)a4 composition:(id)a5 parentMessagePartChatItem:(id)a6;
- (void)sendSticker:(id)a3 withMediaObject:(id)a4 composition:(id)a5 parentMessagePartChatItem:(id)a6 messageSummaryInfo:(id)a7;
- (void)setAcknowledgmentToSend:(int64_t)a3;
- (void)setActiveDropPreviews:(id)a3;
- (void)setAnimatingStickerReaction:(BOOL)a3;
- (void)setAppCardBackgroundViewConstraints:(id)a3;
- (void)setAppCardBackgroundViewController:(id)a3;
- (void)setAudioMessageWasPlayedAndIsLatestMessage:(BOOL)a3;
- (void)setAudioTrimController:(id)a3;
- (void)setAutorotationUpdater:(id)a3;
- (void)setBrowserDragManager:(id)a3;
- (void)setBusinessMacToolbarController:(id)a3;
- (void)setCatchUpButton:(id)a3;
- (void)setCatchUpButtonManager:(id)a3;
- (void)setCatchUpButtonTopConstraint:(id)a3;
- (void)setClickyOrbChatItem:(id)a3;
- (void)setCollaborationFailureCount:(int64_t)a3;
- (void)setCollaborationNoticeSuggestions:(id)a3;
- (void)setCollaborationPopoverController:(id)a3;
- (void)setCollectionViewController:(id)a3;
- (void)setCommSafetyInterventionController:(id)a3;
- (void)setComposition:(id)a3;
- (void)setCompositionBeingTrimmed:(id)a3;
- (void)setContactPicker:(id)a3;
- (void)setContentOffsetForFirstUnreadMessage:(CGPoint)a3;
- (void)setConversation:(id)a3;
- (void)setConversation:(id)a3 forceReload:(BOOL)a4;
- (void)setConversationContext:(id)a3;
- (void)setCurrentDragPreviewContainer:(id)a3;
- (void)setCurrentNicknameUpdate:(id)a3;
- (void)setDeferSystemNavigationPopGestureForPlusButton:(BOOL)a3;
- (void)setDeferredPresentationBlock:(id)a3;
- (void)setDeferredSendAnimationBlock:(id)a3;
- (void)setDetailsContactsManager:(id)a3;
- (void)setDetailsToolbarItem:(id)a3;
- (void)setDidComputeInitiallyVisibleIndexPaths:(BOOL)a3;
- (void)setDidDisplayFirstUnreadMessage:(BOOL)a3;
- (void)setDismissingContextMenu:(BOOL)a3;
- (void)setDragSession:(id)a3;
- (void)setDropSession:(id)a3;
- (void)setEditing:(BOOL)a3 animated:(BOOL)a4;
- (void)setEffectPickerIsPresented:(BOOL)a3;
- (void)setEffectPickerViewController:(id)a3;
- (void)setEffectPickerWindow:(id)a3;
- (void)setEntryView:(id)a3;
- (void)setEntryViewContainerView:(id)a3;
- (void)setEntryViewController:(id)a3;
- (void)setEntryViewMaxYFromPreviousLayout:(double)a3;
- (void)setEntryViewOverrideForNewCompose:(id)a3;
- (void)setEntryViewResizeAnimationRunning:(BOOL)a3;
- (void)setEntryViewShouldBecomeTargetFirstResponderForPendingDraft:(BOOL)a3;
- (void)setEntryViewWasActiveBeforePresentingDataDetector:(BOOL)a3;
- (void)setEntryViewWasActiveOnContextMenuPresentation:(BOOL)a3;
- (void)setEntryViewWasActiveOnPreview:(BOOL)a3;
- (void)setExtensionPayloadBeingSent:(id)a3;
- (void)setExternalPluginControllerProvider:(id)a3;
- (void)setFileURLKeyToGuidMapping:(id)a3;
- (void)setFirstLayoutAfterResume:(BOOL)a3;
- (void)setFirstUnreadMessageCellOriginY:(double)a3;
- (void)setFirstUnreadMessageGUID:(id)a3;
- (void)setFirstUnreadMessageGUIDForTextEffects:(id)a3;
- (void)setFooterViewController:(id)a3;
- (void)setFoundInSuggestionPresenter:(id)a3;
- (void)setFrozenEntryViewHeightDuringDismissAnimation:(id)a3;
- (void)setFunCameraViewController:(id)a3;
- (void)setGroupPhotoUpdateBanner:(id)a3;
- (void)setHasAlreadyPresentedSatelliteConnectionBanner:(BOOL)a3;
- (void)setHasFinishedRestoringDraftState:(BOOL)a3;
- (void)setIgnoresAutomaticScrollsTowardBottom:(BOOL)a3;
- (void)setImagePickerController:(id)a3;
- (void)setIndexPathForFirstUnreadMessage:(id)a3;
- (void)setInitialComposition:(id)a3;
- (void)setInitialContentInset:(UIEdgeInsets)a3;
- (void)setInitialContentOffset:(CGPoint)a3;
- (void)setInitialFrameIndexForCurrentDrag:(int64_t)a3;
- (void)setInlineReplyController:(id)a3;
- (void)setInsertItemsCallback:(id)a3;
- (void)setIsAnimatingMessageSend:(BOOL)a3;
- (void)setIsCatchUpButtonNeededOnFirstLoad:(BOOL)a3;
- (void)setIsSettingUpCollaboration:(BOOL)a3;
- (void)setIsShowingCamera:(BOOL)a3;
- (void)setIsShowingEmojiKeyboard:(BOOL)a3;
- (void)setIsShowingPreview:(BOOL)a3;
- (void)setIsTransitioningFromQLPreviewToGrid:(BOOL)a3;
- (void)setIsWebViewVisible:(BOOL)a3;
- (void)setKeyboardAlpha:(double)a3;
- (void)setKeyboardCandidateBarBackgroundView:(id)a3;
- (void)setKeyboardHeightFromPreviousLayout:(double)a3;
- (void)setKeyboardSnapshotReason:(unint64_t)a3;
- (void)setKeyboardSnapshotView:(id)a3;
- (void)setLastKnownDeviceOrientation:(int64_t)a3;
- (void)setLastLaidOutSize:(CGSize)a3;
- (void)setLastPopulatedMessageGuidFromMe:(id)a3;
- (void)setLoadingIndicatorCoverView:(id)a3;
- (void)setLocalUserIsComposing:(BOOL)a3 withPluginBundleID:(id)a4 typingIndicatorData:(id)a5;
- (void)setLockoutView:(id)a3;
- (void)setMacFaceTimeButtonMenu:(id)a3;
- (void)setMacFaceTimeJoinCallToolbarItem:(id)a3;
- (void)setMacFaceTimeJoinedCallToolbarItem:(id)a3;
- (void)setMacFaceTimeStartCallToolbarItem:(id)a3;
- (void)setMacJoinStyle:(int64_t)a3;
- (void)setMacRecipientsController:(id)a3;
- (void)setMacToolbarController:(id)a3;
- (void)setMacToolbarDetailsButtonProps:(id)a3;
- (void)setMacToolbarFaceTimeButtonProps:(id)a3;
- (void)setMediaObjectToDownload:(id)a3;
- (void)setMentionsController:(id)a3;
- (void)setMessageEditingViewController:(id)a3;
- (void)setMessageGUIDForTranscriptExtension:(id)a3;
- (void)setMomentShareFetchGeneration:(int64_t)a3;
- (void)setNavbarCanvasViewController:(id)a3;
- (void)setNavigationBarTitleController:(id)a3;
- (void)setNeedToEnforceScrollIntent:(BOOL)a3;
- (void)setNeedsDarkEffectStyleCleanUp:(BOOL)a3;
- (void)setNextEntryViewSafeAreaInsetUpdateIsSynchronous:(BOOL)a3;
- (void)setNicknameBanner:(id)a3;
- (void)setNicknameUpdateController:(id)a3;
- (void)setNotificationBannerType:(int64_t)a3;
- (void)setNotificationBannerView:(id)a3;
- (void)setOnboardingController:(id)a3;
- (void)setOriginalComposition:(id)a3;
- (void)setPhotoGridClickyOrbChatItem:(id)a3;
- (void)setPhotoGridDataSourceManager:(id)a3;
- (void)setPhotoGridDisplayedChatItemGUID:(id)a3;
- (void)setPhotoGridMomentShareChatItem:(id)a3;
- (void)setPhotoGridTapbackSnapshotRect:(CGRect)a3;
- (void)setPickerContainerAccessoryView:(id)a3;
- (void)setPreferredAudioMessageAppLaunchBehaviorForComposition:(id)a3;
- (void)setPreviewController:(id)a3;
- (void)setPreviewInvisibleInkEffectController:(id)a3;
- (void)setPreviewRevealView:(id)a3;
- (void)setPreviewSourceView:(id)a3;
- (void)setPrimeTranscriptWithInitialScrollGeometries:(BOOL)a3;
- (void)setQlPreviewDataSource:(id)a3;
- (void)setRaiseGesture:(id)a3;
- (void)setRecipientsAreHEIFCapable:(BOOL)a3;
- (void)setRecipientsVirtualToolbarItem:(id)a3;
- (void)setRevealAnimationGroup:(id)a3;
- (void)setRotationLockUtility:(id)a3;
- (void)setSavedKeyboardInputMode:(id)a3;
- (void)setScrollBlock:(id)a3;
- (void)setScrollDownIsValid:(BOOL)a3;
- (void)setSendMenuDelegate:(id)a3;
- (void)setSendingCompositionBackgroundTask:(unint64_t)a3;
- (void)setSendingMessage:(BOOL)a3;
- (void)setShareSheetHostBundleIdentifier:(id)a3;
- (void)setShouldDisableEntryView:(BOOL)a3;
- (void)setShouldFetchCollaborationNotices:(BOOL)a3;
- (void)setShouldShowAudioButtonInEntryView:(BOOL)a3;
- (void)setShouldShowDoneButton:(BOOL)a3;
- (void)setShouldUpdateEntryViewPasteConfiguration:(BOOL)a3;
- (void)setShowingVideoMessageRecordingView:(BOOL)a3;
- (void)setStandardSuggestionPresenter:(id)a3;
- (void)setStickerTranscriptScrollDelta:(double)a3;
- (void)setStickerTranscriptScrollDisplayLink:(id)a3;
- (void)setSuggestedActionsHandler:(id)a3;
- (void)setSuggestionBannerHeight:(double)a3;
- (void)setSuggestionBannerTopConstraint:(id)a3;
- (void)setSuggestionBannerView:(id)a3;
- (void)setSuppressEntryViewKeyboardNotifications:(BOOL)a3;
- (void)setTapGestureRecognizer:(id)a3;
- (void)setTargetFirstResponder:(int64_t)a3;
- (void)setThrowAnimationManager:(id)a3;
- (void)setTimingCollectionSendGelato:(id)a3;
- (void)setTipManager:(id)a3;
- (void)setTranscriptBottomContentOffsetAtSuspend:(id)a3;
- (void)setTranscriptInlineNotificationUpdater:(id)a3;
- (void)setTranscriptSharingBannerSuggestion:(id)a3;
- (void)setTranscriptWasScrolledToBottomBeforeInlinePresentation:(BOOL)a3;
- (void)setTransitioningSize:(BOOL)a3;
- (void)setTypingUpdater:(id)a3;
- (void)setUpEntryViewLayoutConstraintsIfNecessary;
- (void)setUpStyleForDarkEffect;
- (void)setVideoMessageRecordingViewController:(id)a3;
- (void)setVideoTrimController:(id)a3;
- (void)setViewDidMoveToWindowAndNeedsToScrollToInsertionTime:(BOOL)a3;
- (void)setWalletOrderImportViewController:(id)a3;
- (void)setWantsEmojiDetails:(BOOL)a3;
- (void)setWantsInlineOverlay:(BOOL)a3;
- (void)setWantsStickerDetails:(BOOL)a3;
- (void)setWasKeyboardShowingWithApp:(BOOL)a3;
- (void)setWolfFaceTimeButton:(id)a3;
- (void)setupClickyOrbForConversation:(id)a3;
- (void)setupScrollingForKeyboardInteraction;
- (void)setupStateForLaunchAudio;
- (void)setupStateForLaunchPluginWithBundleID:(id)a3 pluginPayload:(id)a4;
- (void)setupStateForLaunchURL:(id)a3;
- (void)showAcknowledgmentsAssociatedWithChatItem:(id)a3;
- (void)showAlternateViewerForMediaObject:(id)a3;
- (void)showAssociatedCellsForChatItem:(id)a3 animated:(BOOL)a4 completion:(id)a5;
- (void)showBannerForGroupUpdate:(id)a3;
- (void)showCheckInTips:(id)a3;
- (void)showContactForHandle:(id)a3;
- (void)showEffectPicker;
- (void)showFullScreenBalloonFocusForChatItem:(id)a3;
- (void)showInlineReplyControllerForChatItem:(id)a3 presentKeyboard:(BOOL)a4;
- (void)showInlineReplyControllerForChatItem:(id)a3 presentKeyboard:(BOOL)a4 replyTransitionProperties:(id)a5;
- (void)showKeyboard;
- (void)showMediaPicker:(id)a3 animated:(BOOL)a4;
- (void)showMessageEditingViewControllerForChatItem:(id)a3 presentKeyboard:(BOOL)a4;
- (void)showMessageHistoryViewController;
- (void)showModalInlineReplyControllerForChatItem:(id)a3 fromViewController:(id)a4;
- (void)showPayloadValidationAlertWithDescription:(id)a3;
- (void)showSMSReportSpamExtensionControllerForMessages:(id)a3;
- (void)showScreenTimeShieldIfNeeded;
- (void)showUpdatePromptForNicknameUpdate:(id)a3 sourceView:(id)a4 completionBlock:(id)a5;
- (void)showViewerForMediaObject:(id)a3;
- (void)spacePressed:(id)a3;
- (void)stageAssetArchive:(id)a3 skipShelf:(BOOL)a4 completionHandler:(id)a5;
- (void)stageSelectedSuggestedReply:(id)a3;
- (void)startCommitPayload:(id)a3 forConversation:(id)a4;
- (void)startDeferredEditingPayload:(id)a3 forConversation:(id)a4;
- (void)startTrimmingMediaObjectsInComposition:(id)a3;
- (void)stickerDetailViewController:(id)a3 deletedStickerWithTransferGUID:(id)a4;
- (void)stickerDetailViewController:(id)a3 didRequestSaveSticker:(id)a4;
- (void)stickerDetailViewController:(id)a3 selectedStickerPackWithAdamID:(id)a4;
- (void)stopForcingOrientation;
- (void)suggestionPresenterWantsToHideBanner:(id)a3;
- (void)suggestionPresenterWantsToShowBanner:(id)a3;
- (void)tapGestureRecognized:(id)a3;
- (void)tapbackPickerBalloonParentView:(id)a3 didInsertTapback:(id)a4;
- (void)tapbackPickerBalloonParentView:(id)a3 requestedPresentPlugin:(id)a4 payloadID:(id)a5;
- (void)tapbackPickerBalloonParentViewRequestedAppCardDismiss:(id)a3;
- (void)tapbackPickerViewController:(id)a3 didDeselectTapback:(id)a4;
- (void)tapbackPickerViewController:(id)a3 didSelectTapback:(id)a4;
- (void)tapbackPileViewTapped:(id)a3 asset:(id)a4;
- (void)testEmphasis;
- (void)textPasteConfigurationSupporting:(id)a3 transformPasteItem:(id)a4;
- (void)throwAnimationManager:(id)a3 canNowSendMessages:(id)a4;
- (void)throwAnimationManagerPrepareForThrowAnimation:(id)a3 context:(id)a4;
- (void)toggleUnreadState:(id)a3;
- (void)traitCollectionDidChange:(id)a3;
- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 didRequestPresentationStyle:(unint64_t)a5 forChatItem:(id)a6 allowAllStyles:(BOOL)a7;
- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 didRequestReaderViewControllerForChatItem:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 doubleTappedItemAtIndexPath:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 selectedItemAtIndexPath:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 tappedForChatItem:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 balloonViewDidRequestStartEditingPayload:(id)a4 forPlugin:(id)a5 allowAllCommits:(BOOL)a6 completionHandler:(id)a7;
- (void)transcriptCollectionViewController:(id)a3 didEndImpactEffectAnimationWithSendAnimationContext:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 didInsertChatItems:(id)a4 associatedChatItems:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 didPinchPhotoStackForChatItem:(id)a4 assetReference:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 didScroll:(CGPoint)a4;
- (void)transcriptCollectionViewController:(id)a3 didTapAttributionButtonForChatItem:(id)a4 parentIndexPath:(id)a5 sender:(id)a6;
- (void)transcriptCollectionViewController:(id)a3 didTapPendingMomentShareForChatItem:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackAdditionalItemsForChatItem:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackButtonForChatItem:(id)a4 assetReference:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackButtonForPendingMomentShareChatItem:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackForChatItem:(id)a4 assetReference:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 didTapPluginStatusButtonForChatItem:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 didTapReplyCountStatusButtonForChatItem:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 selectedChipAction:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 selectedSuggestedReply:(id)a4 messageGUID:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 sendQuickReplyComposition:(id)a4 withSourceView:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 willBeginImpactEffectAnimationWithSendAnimationContext:(id)a4;
- (void)transcriptCollectionViewController:(id)a3 willDisplayBalloonForGUID:(id)a4 withIndexPath:(id)a5 withOriginY:(double)a6;
- (void)transcriptCollectionViewController:(id)a3 willDisplayContextMenuWithConfiguration:(id)a4 animator:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 willEndContextMenuInteractionWithConfiguration:(id)a4 animator:(id)a5;
- (void)transcriptCollectionViewController:(id)a3 willPerformPreviewActionForMenuWithConfiguration:(id)a4 animator:(id)a5;
- (void)transcriptCollectionViewControllerAudioControllerDidStop:(id)a3;
- (void)transcriptCollectionViewControllerDidChangeAssociatedChatItem:(id)a3 chatItemDiff:(id)a4;
- (void)transcriptCollectionViewControllerDidInset:(id)a3;
- (void)transcriptCollectionViewControllerDidSetChatItems:(id)a3;
- (void)transcriptCollectionViewControllerDidUpdateTranscriptChatItems:(id)a3;
- (void)transcriptCollectionViewControllerDisplaySMSSpamReporting:(id)a3;
- (void)transcriptCollectionViewControllerNeedsChatItemLayoutInvalidation:(id)a3;
- (void)transcriptCollectionViewControllerPerformBatchUpdateCompleted:(id)a3;
- (void)transcriptCollectionViewControllerWillBeginFullscreenEffectAnimationForOutgoingMessage:(id)a3;
- (void)transcriptCollectionViewControllerWillDisplayLastBalloon:(id)a3;
- (void)transcriptCollectionViewControllerWillUpdateTranscriptChatItems:(id)a3;
- (void)transcriptOverlayViewController:(id)a3 visibleGUIDsDidChange:(id)a4;
- (void)transcriptOverlayViewControllerDidAnimateIn:(id)a3;
- (void)transcriptOverlayViewControllerDidAnimateOut:(id)a3;
- (void)transcriptOverlayViewControllerIsAnimatingIn:(id)a3;
- (void)transcriptOverlayViewControllerIsAnimatingOut:(id)a3;
- (void)transcriptOverlayViewControllerWillAnimateIn:(id)a3;
- (void)transcriptOverlayViewControllerWillAnimateOut:(id)a3;
- (void)transcriptScrollWithConfiguration:(id)a3;
- (void)transcriptSharingBannerWillDismiss:(id)a3;
- (void)transcriptStopSharingButtonTapped:(id)a3;
- (void)trimController:(id)a3 didFinishTrimmingMediaObject:(id)a4 withReplacementMediaObject:(id)a5;
- (void)trimControllerDidCancel:(id)a3;
- (void)unregisterChatForScreenTime:(id)a3;
- (void)updateActiveEntryViewPositioningGuide;
- (void)updateAppStripVisibility:(BOOL)a3 animated:(BOOL)a4;
- (void)updateChatControllerForRecoveredJunkConversation;
- (void)updateChatItemBalloonViewAndStickerViews:(id)a3 hidden:(BOOL)a4;
- (void)updateContact:(id)a3 withNicknameUpdate:(id)a4 updateType:(unint64_t)a5 addHandleToContact:(BOOL)a6 presentationMode:(unint64_t)a7;
- (void)updateContactQuietlyForNicknameUpdate:(id)a3 updateType:(unint64_t)a4;
- (void)updateEmphasis;
- (void)updateEntryViewHeightIncludingAppStrip:(BOOL)a3 animated:(BOOL)a4;
- (void)updateEntryViewHeightIncludingAppStrip:(BOOL)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5;
- (void)updateEntryViewHeightIncludingAppStrip:(BOOL)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5 completionHandler:(id)a6;
- (void)updateFoundInSuggestionPresenter;
- (void)updateInterfaceSelectedAction:(unint64_t)a3 forUpdate:(id)a4;
- (void)updateQLPreviewControllerBarButtonItemsIfVisible;
- (void)updateQLPreviewControllerIfVisible;
- (void)updateRaiseGesture;
- (void)updateScreenTimeShieldIfNeededForChat:(id)a3;
- (void)updateSendMenuShouldElevateCheckIn;
- (void)updateStyleForCurrentEffect;
- (void)updateSupportedInterfaceOrientations:(unint64_t)a3;
- (void)updateTyping;
- (void)validateCommand:(id)a3;
- (void)viewDidAppear:(BOOL)a3;
- (void)viewDidAppearDeferredSetup;
- (void)viewDidDisappear:(BOOL)a3;
- (void)viewDidLayoutSubviews;
- (void)viewDidLayoutSubviewsForTranscriptCollectionViewController:(id)a3;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)a3 shouldAppearOrDisappear:(BOOL)a4;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillAppear:(BOOL)a3;
- (void)viewWillDisappear:(BOOL)a3;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(CGSize)a3 withTransitionCoordinator:(id)a4;
- (void)willDismissFunCamera:(id)a3;
- (void)willMoveToParentViewController:(id)a3;
- (void)willPresentPreviewViewController:(id)a3 forLocation:(CGPoint)a4 inSourceView:(id)a5;
- (void)windowDidResignKey:(id)a3;
@end

@implementation CKChatController

void __109__CKChatController_PhotosSupport___gridViewNavigationControllerForChatItem_assetReference_completionHandler___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  v6 = v5;
  if (v5 || a3 != 3)
  {
    if (v5)
    {
      [*(id *)(a1 + 32) setPhotoGridMomentShareChatItem:*(void *)(a1 + 40)];
      v9 = *(void **)(a1 + 32);
      v10 = [*(id *)(a1 + 40) IMChatItem];
      v11 = [v10 guid];
      [v9 setPhotoGridDisplayedChatItemGUID:v11];
    }
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      __109__CKChatController_PhotosSupport___gridViewNavigationControllerForChatItem_assetReference_completionHandler___block_invoke_cold_1();
    }

    v8 = [*(id *)(a1 + 32) _regularGridViewNavigationControllerForChatItem:*(void *)(a1 + 40) assetReference:*(void *)(a1 + 48) tapbackManager:*(void *)(a1 + 56)];
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
}

- (id)_regularGridViewNavigationControllerForChatItem:(id)a3 assetReference:(id)a4 tapbackManager:(id)a5
{
  id v7 = a3;
  id v8 = a5;
  v29 = [v7 dataSource];
  v9 = [[CKMediaObjectAssetDataSourceManager alloc] initWithDataSource:v29];
  v10 = [v7 IMChatItem];
  v11 = [v10 guid];
  [(CKChatController *)self setPhotoGridDisplayedChatItemGUID:v11];

  [(CKChatController *)self setPhotoGridDataSourceManager:v9];
  v12 = (void *)[objc_alloc(MEMORY[0x1E4F90658]) initWithDataSourceManager:v9];
  v13 = [[CKMediaObjectAssetActionManager alloc] initWithChatItem:v7 presentedFromInlineReply:[(CKCoreChatController *)self isInline] chatActionHelper:self selectionManager:v12];
  id v14 = objc_alloc(MEMORY[0x1E4F90598]);
  v15 = objc_alloc_init(CKMediaObjectImageProvider);
  v28 = v13;
  v16 = (void *)[v14 initWithDataSourceManager:v9 mediaProvider:v15 selectionManager:v12 assetActionManager:v13 assetCollectionActionManager:0];

  v17 = objc_alloc_init(CKImportStatusManager);
  [v16 setAssetImportStatusManager:v17];

  _ApplyCommonGridConfiguration(v16, self);
  [v16 setTapbackStatusManager:v8];

  objc_msgSend(v16, "setAllowedActions:", objc_msgSend(v16, "allowedActions") | 0x1A000);
  objc_msgSend(v16, "setAllowedActions:", objc_msgSend(v16, "allowedActions") & 0xFFFFFFFFFFFFFB7FLL);
  objc_msgSend(v16, "setAllowedBehaviors:", objc_msgSend(v16, "allowedBehaviors") | 0x80);
  if ([(CKCoreChatController *)self isInline]
    || ([v7 message],
        v18 = objc_claimAutoreleasedReturnValue(),
        BOOL v19 = [(CKChatController *)self _allowsMultipleSelectionForMessage:v18],
        v18,
        !v19))
  {
    objc_msgSend(v16, "setAllowedActions:", objc_msgSend(v16, "allowedActions") & 0xFFFFFFFFFFFFFFDFLL);
  }
  [v16 setWantsTabBarHidden:1];
  [v16 setPrefersActionsInToolbar:1];
  v20 = [v7 message];
  if ([v20 isFromMe])
  {
    v21 = 0;
  }
  else
  {
    v22 = (void *)MEMORY[0x1E4F6BD68];
    v23 = [v7 IMChatItem];
    v21 = [v22 photosSyndicationIdentifiersForMessage:v20 transcriptChatItem:v23];
  }
  id v24 = [[CKPhotosGridFooterViewModel alloc] initAssetsDataSourceManager:v9 syndicationIdentifiers:v21];
  [v16 setFooterViewModel:v24];
  [v16 setFooterVisibilityStyle:2];
  v25 = (void *)[objc_alloc(MEMORY[0x1E4F90590]) initWithConfiguration:v16];
  objc_msgSend(v25, "setCk_chatController:", self);
  v26 = (void *)[objc_alloc(MEMORY[0x1E4F42BF8]) initWithRootViewController:v25];
  [v26 setModalPresentationStyle:3];
  [(CKChatController *)self _configureGridControllerForStackTransition:v26 chatItem:v7];

  return v26;
}

- (void)configureMacToolbarProperties
{
  v3 = objc_alloc_init(CKMacToolBarImageProperties);
  [(CKChatController *)self setMacToolbarFaceTimeButtonProps:v3];

  v4 = objc_alloc_init(CKMacToolBarImageProperties);
  [(CKChatController *)self setMacToolbarDetailsButtonProps:v4];

  [(CKChatController *)self _configureMacFaceTimeButtonMenu];
  [(CKChatController *)self _configureFaceTimeStartCallToolbarItem];
  [(CKChatController *)self _configureMacFaceTimeJoinCallToolbarItem];
  [(CKChatController *)self _configureMacFaceTimeJoinedCallToolbarItem];

  [(CKChatController *)self _configureDetailsToolbarItem];
}

- (void)_configureMacFaceTimeButtonMenu
{
  v42[1] = *MEMORY[0x1E4F143B8];
  id location = 0;
  objc_initWeak(&location, self);
  v2 = (void *)MEMORY[0x1E4F426E8];
  v3 = CKFrameworkBundle();
  v4 = [v3 localizedStringForKey:@"FACETIME_AUDIO" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v37[0] = MEMORY[0x1E4F143A8];
  v37[1] = 3221225472;
  v37[2] = __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke;
  v37[3] = &unk_1E5620ED8;
  objc_copyWeak(&v38, &location);
  v29 = [v2 actionWithTitle:v4 image:0 identifier:0 handler:v37];

  id v5 = (void *)MEMORY[0x1E4F426E8];
  v6 = CKFrameworkBundle();
  id v7 = [v6 localizedStringForKey:@"FACETIME_VIDEO" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v35[0] = MEMORY[0x1E4F143A8];
  v35[1] = 3221225472;
  v35[2] = __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke_2;
  v35[3] = &unk_1E5620ED8;
  objc_copyWeak(&v36, &location);
  id v8 = [v5 actionWithTitle:v7 image:0 identifier:0 handler:v35];

  v9 = (void *)MEMORY[0x1E4F426E8];
  v10 = CKFrameworkBundle();
  v11 = [v10 localizedStringForKey:@"INVITE_TO_SHARE_MY_SCREEN" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v33[0] = MEMORY[0x1E4F143A8];
  v33[1] = 3221225472;
  v33[2] = __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke_3;
  v33[3] = &unk_1E5620ED8;
  objc_copyWeak(&v34, &location);
  v12 = [v9 actionWithTitle:v11 image:0 identifier:0 handler:v33];

  v13 = (void *)MEMORY[0x1E4F426E8];
  id v14 = CKFrameworkBundle();
  v15 = [v14 localizedStringForKey:@"ASK_TO_SHARE_THEIR_SCREEN" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v31[0] = MEMORY[0x1E4F143A8];
  v31[1] = 3221225472;
  v31[2] = __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke_4;
  v31[3] = &unk_1E5620ED8;
  objc_copyWeak(&v32, &location);
  v16 = [v13 actionWithTitle:v15 image:0 identifier:0 handler:v31];

  if (!IMDeviceIsGreenTea())
  {
    v20 = [(CKChatController *)self detailsContactsManager];
    v21 = [(CKCoreChatController *)self conversation];
    v22 = [v21 recipient];
    int v23 = [v20 showScreenSharingButtonForEntity:v22];

    if (v23)
    {
      v41[0] = v29;
      v41[1] = v8;
      id v24 = v41;
      uint64_t v25 = 4;
      v41[2] = v12;
      v41[3] = v16;
    }
    else
    {
      v40[0] = v29;
      v40[1] = v8;
      id v24 = v40;
      uint64_t v25 = 2;
    }
    goto LABEL_8;
  }
  v17 = [(CKCoreChatController *)self conversation];
  char v18 = [v17 isGroupConversation];

  if ((v18 & 1) == 0)
  {
    v42[0] = v8;
    id v24 = v42;
    uint64_t v25 = 1;
LABEL_8:
    BOOL v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v24 count:v25];
    goto LABEL_9;
  }
  BOOL v19 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_9:
  v26 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v19];
  [(CKChatController *)self setMacFaceTimeButtonMenu:v26];

  objc_destroyWeak(&v32);
  objc_destroyWeak(&v34);

  objc_destroyWeak(v27);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
}

void __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = [WeakRetained conversation];
  v2 = [v1 chat];
  [v2 initiateTUConversationWithVideoEnabled:0];
}

void __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke_2(uint64_t a1)
{
  int IsGreenTea = IMDeviceIsGreenTea();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = [WeakRetained conversation];
  v4 = [v3 chat];
  id v5 = v4;
  if (IsGreenTea) {
    [v4 initiateTUDialRequestWithVideoEnabled:1];
  }
  else {
    [v4 initiateTUConversationWithVideoEnabled:1];
  }
}

void __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke_3(uint64_t a1)
{
  v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = [WeakRetained detailsContactsManager];
  id v3 = objc_loadWeakRetained(v1);
  v4 = [v3 conversation];
  id v5 = [v4 recipient];
  [v2 shareMyScreenWithEntity:v5];
}

void __63__CKChatController_MacToolbar___configureMacFaceTimeButtonMenu__block_invoke_4(uint64_t a1)
{
  v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = [WeakRetained detailsContactsManager];
  id v3 = objc_loadWeakRetained(v1);
  v4 = [v3 conversation];
  id v5 = [v4 recipient];
  [v2 inviteEntityToShareTheirScreen:v5];
}

- (void)_configureDetailsToolbarItem
{
  id v3 = [(CKCoreChatController *)self chat];
  int v4 = [v3 isStewieSharingChat];

  if (v4)
  {
    [(CKChatController *)self setDetailsToolbarItem:0];
  }
  else
  {
    id v5 = [(CKChatController *)self detailsToolbarItem];
  }
}

- (BOOL)shouldUseMacRecipientsView
{
  id v3 = +[CKUIBehavior sharedBehaviors];
  if ([v3 useMacToolbar])
  {
    int v4 = [(CKCoreChatController *)self conversation];
    int v5 = [v4 isBusinessConversation] ^ 1;
  }
  else
  {
    LOBYTE(v5) = 0;
  }

  return v5;
}

- (double)preferredMacToolbarHeight
{
  if (![(CKChatController *)self shouldUseMacRecipientsView]) {
    return 0.0;
  }
  id v3 = [(CKChatController *)self macRecipientsController];
  [v3 preferredMacToolbarHeight];
  double v5 = v4;

  return v5;
}

- (id)innermostToolbarItemIdentifier
{
  id v3 = @"CKMacToolbarChatDetailsItemIdentifier";
  if ([(CKChatController *)self _macShouldShowFaceTimeButtonInToolbar])
  {
    int64_t v4 = [(CKChatController *)self macJoinStyle];
    BOOL v5 = [(CKChatController *)self macJoinStyle] == 1
      || [(CKChatController *)self macJoinStyle] == 3;
    v6 = @"CKMacToolbarFacetimeJoinedCallItemIdentifier";
    if ([(CKChatController *)self macJoinStyle] != 4
      && [(CKChatController *)self macJoinStyle] != 6)
    {
      v6 = @"CKMacToolbarChatDetailsItemIdentifier";
    }
    id v7 = @"CKMacToolbarFacetimeJoinCallItemIdentifier";
    if (!v5) {
      id v7 = v6;
    }
    if (v4) {
      return v7;
    }
    else {
      return @"CKMacToolbarFacetimeStartCallItemIdentifier";
    }
  }
  return v3;
}

- (void)macRecipientsControllerDidUpdateToFieldSizing:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self macRecipientsController];

  if (v5 == v4)
  {
    v6 = +[CKUIBehavior sharedBehaviors];
    int v7 = [v6 useMacToolbar];

    if (v7)
    {
      id v8 = [(CKChatController *)self view];
      v9 = [v8 window];
      [v9 frame];
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;

      id v18 = [(CKChatController *)self macToolbarController];
      objc_msgSend(v18, "updateWithFrame:", v11, v13, v15, v17);
    }
  }
}

- (void)refreshMacToolbar
{
  id v3 = [(CKChatController *)self macToolbarController];
  [v3 reloadToolbarItems];

  id v4 = [(CKChatController *)self macToolbarController];
  [v4 updateVirtualViewForProvider:self];
}

- (id)_newImageConfiguredForNSToolbarWithName:(id)a3 tintColor:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = +[CKUIBehavior sharedBehaviors];
  v9 = [v8 macToolbarSymbolConfiguration];

  id v10 = objc_alloc_init(MEMORY[0x1E4F42A60]);
  double v11 = [(CKChatController *)self traitCollection];
  [v11 displayScale];
  objc_msgSend(v10, "setScale:");

  double v12 = [MEMORY[0x1E4F42A80] systemImageNamed:v7 withConfiguration:v9];

  id v13 = objc_alloc(MEMORY[0x1E4F42A58]);
  [v12 size];
  double v14 = objc_msgSend(v13, "initWithSize:format:", v10);
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = __82__CKChatController_MacToolbar___newImageConfiguredForNSToolbarWithName_tintColor___block_invoke;
  v21[3] = &unk_1E5620DE8;
  id v22 = v12;
  double v15 = [v14 imageWithActions:v21];
  double v16 = [v15 imageWithRenderingMode:2];

  if (v6)
  {
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = __82__CKChatController_MacToolbar___newImageConfiguredForNSToolbarWithName_tintColor___block_invoke_2;
    v18[3] = &unk_1E5620F00;
    id v19 = v16;
    id v20 = v6;
    double v16 = [v14 imageWithActions:v18];
  }
  return v16;
}

uint64_t __82__CKChatController_MacToolbar___newImageConfiguredForNSToolbarWithName_tintColor___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "drawAtPoint:", *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8));
}

void __82__CKChatController_MacToolbar___newImageConfiguredForNSToolbarWithName_tintColor___block_invoke_2(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) imageWithTintColor:*(void *)(a1 + 40)];
  objc_msgSend(v1, "drawAtPoint:", *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8));
}

- (id)_updatedDetailsToolbarItemImage
{
  id v3 = [(CKChatController *)self macToolbarDetailsButtonProps];
  id v4 = [v3 image];
  id v5 = [(CKCoreChatController *)self conversation];
  int v6 = [v5 isBusinessConversation];

  if (v6)
  {
    id v7 = +[CKUIBehavior sharedBehaviors];
    id v8 = [v7 theme];
    v9 = [(CKCoreChatController *)self conversation];
    id v10 = [v9 chat];
    double v11 = [v8 secondaryBrandColorForBusinessChat:v10];

    if (!v4) {
      goto LABEL_9;
    }
  }
  else
  {
    double v11 = 0;
    if (!v4) {
      goto LABEL_9;
    }
  }
  double v12 = [v3 tintColor];
  if (([v12 isEqual:v11] & 1) == 0)
  {

    goto LABEL_9;
  }
  id v13 = [(CKChatController *)self traitCollection];
  [v13 displayScale];
  double v15 = v14;
  [v4 scale];
  double v17 = v16;

  if (v15 != v17)
  {
LABEL_9:
    id v18 = +[CKUIBehavior sharedBehaviors];
    id v19 = [v18 macToolbarDetailsImageName];
    id v20 = [(CKChatController *)self _newImageConfiguredForNSToolbarWithName:v19 tintColor:v11];

    v21 = [(CKChatController *)self macToolbarDetailsButtonProps];
    [v21 setTintColor:v11];

    id v22 = [(CKChatController *)self macToolbarDetailsButtonProps];
    [v22 setImage:v20];

    id v4 = v20;
  }

  return v4;
}

- (id)_updatedFaceTimeToolbarItemImage
{
  id v3 = [(CKChatController *)self macToolbarFaceTimeButtonProps];
  id v4 = [v3 image];
  switch([(CKChatController *)self macJoinStyle])
  {
    case 1:
      id v5 = +[CKUIBehavior sharedBehaviors];
      uint64_t v6 = [v5 macToolbarJoinableFaceTimeAudioImageName];
      goto LABEL_5;
    case 3:
      id v5 = +[CKUIBehavior sharedBehaviors];
      uint64_t v6 = [v5 macToolbarJoinableFaceTimeVideoImageName];
      goto LABEL_5;
    case 4:
      id v8 = [MEMORY[0x1E4F428B8] ckColorNamed:@"CKSystemGreenColor"];
      id v5 = +[CKUIBehavior sharedBehaviors];
      uint64_t v9 = [v5 macToolbarJoinedFaceTimeAudioImageName];
      goto LABEL_8;
    case 6:
      id v8 = [MEMORY[0x1E4F428B8] ckColorNamed:@"CKSystemGreenColor"];
      id v5 = +[CKUIBehavior sharedBehaviors];
      uint64_t v9 = [v5 macToolbarJoinedFaceTimeVideoImageName];
LABEL_8:
      id v7 = (void *)v9;
      break;
    default:
      id v5 = +[CKUIBehavior sharedBehaviors];
      uint64_t v6 = [v5 macToolbarFaceTimeImageName];
LABEL_5:
      id v7 = (void *)v6;
      id v8 = 0;
      break;
  }

  if (!v4) {
    goto LABEL_16;
  }
  id v10 = [v3 tintColor];
  if (![v10 isEqual:v8]) {
    goto LABEL_15;
  }
  double v11 = [v3 imageName];
  if (([v11 isEqualToString:v7] & 1) == 0)
  {

LABEL_15:
    goto LABEL_16;
  }
  double v12 = [(CKChatController *)self traitCollection];
  [v12 displayScale];
  double v14 = v13;
  [v4 scale];
  double v16 = v15;

  if (v14 != v16)
  {
LABEL_16:
    id v17 = [(CKChatController *)self _newImageConfiguredForNSToolbarWithName:v7 tintColor:v8];

    [v3 setTintColor:v8];
    [v3 setImage:v17];
    id v4 = v17;
  }

  return v4;
}

- (void)configureWithToolbarController:(id)a3
{
  id v6 = a3;
  id v7 = [(CKCoreChatController *)self conversation];
  int v8 = [v7 isBusinessConversation];

  if (v8)
  {
    uint64_t v9 = [(CKCoreChatController *)self conversation];
    id v10 = [v9 handles];
    double v11 = [v10 firstObject];

    double v12 = [[CKBusinessMacToolbarViewController alloc] initWithConversation:v11 showingInStandAloneWindow:[(CKCoreChatController *)self showingInStandAloneWindow]];
    [(CKChatController *)self setBusinessMacToolbarController:v12];
  }
  else
  {
    if (![(CKChatController *)self shouldUseMacRecipientsView]) {
      goto LABEL_6;
    }
    double v13 = [CKMacRecipientsController alloc];
    double v14 = [(CKCoreChatController *)self conversation];
    double v15 = [(CKMacRecipientsController *)v13 initWithConversation:v14];
    [(CKChatController *)self setMacRecipientsController:v15];

    double v11 = [(CKChatController *)self macRecipientsController];
    [v11 setDelegate:self];
  }

LABEL_6:
  v22.receiver = self;
  v22.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v22 configureWithToolbarController:v6];
  double v16 = [(CKCoreChatController *)self conversation];
  id v17 = [v16 chat];
  char v18 = [v17 allowedByScreenTime];
  if (v18)
  {
    BOOL v19 = 1;
  }
  else
  {
    id v3 = [(CKCoreChatController *)self conversation];
    id v4 = [v3 chat];
    BOOL v19 = v4 == 0;
  }
  id v20 = [(CKChatController *)self macToolbarController];
  [v20 setShouldDrawSecondaryBlur:v19];

  if ((v18 & 1) == 0)
  {
  }
  v21 = [(CKChatController *)self macToolbarController];
  [v21 updateVirtualViewForProvider:self];
}

- (void)providerWillBeRemovedFromToolbarController:(id)a3
{
  id v4 = [(CKChatController *)self recipientsVirtualToolbarItem];

  if (v4)
  {
    id v5 = [(CKChatController *)self recipientsVirtualToolbarItem];
    [v5 removeFromSuperview];
  }
}

- (BOOL)itemProviderDisablesTouches
{
  return 0;
}

- (BOOL)_macShouldShowFaceTimeButtonInToolbar
{
  id v3 = [(CKCoreChatController *)self conversation];
  id v4 = [v3 chat];
  int v5 = [v4 supportsCapabilities:1024];

  if (!v5) {
    return 0;
  }
  id v6 = [(CKCoreChatController *)self conversation];
  int v7 = [v6 isGroupConversation];

  if (v7)
  {
    if (IMDeviceIsGreenTea()) {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = [(CKCoreChatController *)self conversation];
    id v10 = [v9 chat];
    char v11 = [v10 isSMS];

    if (v11) {
      return 0;
    }
  }
  double v12 = [(CKCoreChatController *)self conversation];
  if ([v12 isBusinessConversation])
  {
    BOOL v8 = 0;
  }
  else
  {
    double v13 = [(CKCoreChatController *)self conversation];
    BOOL v8 = +[CKFaceTimeUtilities isFaceTimeVideoAvailable:v13];
  }
  return v8;
}

- (id)toolbarItemForIdentifier:(id)a3
{
  return 0;
}

- (BOOL)reparentToolbarItem:(id)a3
{
  return 0;
}

- (UIEdgeInsets)virtualToolbarContentInsets
{
  double v4 = *MEMORY[0x1E4F437F8];
  double v3 = *(double *)(MEMORY[0x1E4F437F8] + 8);
  double v5 = *(double *)(MEMORY[0x1E4F437F8] + 16);
  double v6 = *(double *)(MEMORY[0x1E4F437F8] + 24);
  if ([(CKCoreChatController *)self showingInStandAloneWindow])
  {
    int v7 = [(CKCoreChatController *)self conversation];
    char v8 = [v7 isBusinessConversation];

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = [(CKChatController *)self view];
      int v10 = [v9 _shouldReverseLayoutDirection];

      char v11 = +[CKUIBehavior sharedBehaviors];
      [v11 macToolbarStoplightButtonsLeadingPadding];
      double v3 = v12;

      double v5 = 0.0;
      if (v10) {
        double v6 = v3;
      }
      else {
        double v6 = 0.0;
      }
      if (v10) {
        double v3 = 0.0;
      }
      double v4 = 0.0;
    }
  }
  double v13 = v4;
  double v14 = v3;
  double v15 = v5;
  double v16 = v6;
  result.right = v16;
  result.bottom = v15;
  result.left = v14;
  result.top = v13;
  return result;
}

- (id)virtualView
{
  if (([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled] & 1) == 0)
  {
    [(CKChatController *)self effectPickerIsPresented];
LABEL_6:
    char v8 = [(CKChatController *)self macToolbarController];
    [v8 setShouldDrawSecondaryBlur:0];
    uint64_t v9 = 0;
LABEL_7:

    goto LABEL_8;
  }
  if ([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled])
  {
    double v3 = [(CKCoreChatController *)self conversation];
    double v4 = [v3 chat];
    if (v4)
    {
      double v5 = [(CKCoreChatController *)self conversation];
      double v6 = [v5 chat];
      int v7 = [v6 allowedByScreenTime] ^ 1;
    }
    else
    {
      int v7 = 0;
    }
  }
  else
  {
    int v7 = 0;
  }
  if ([(CKChatController *)self effectPickerIsPresented] || v7) {
    goto LABEL_6;
  }
  char v11 = [(CKCoreChatController *)self conversation];
  if ([v11 isBusinessConversation])
  {
    double v12 = [(CKChatController *)self businessMacToolbarController];
    double v13 = [v12 view];

    if (v13)
    {
      double v14 = [(CKChatController *)self businessMacToolbarController];
      uint64_t v9 = [v14 view];

LABEL_22:
      char v8 = [(CKChatController *)self macToolbarController];
      [v8 setShouldDrawSecondaryBlur:1];
      goto LABEL_7;
    }
  }
  else
  {
  }
  if ([(CKChatController *)self shouldUseMacRecipientsView])
  {
    uint64_t v9 = [(CKChatController *)self recipientsVirtualToolbarItem];
    goto LABEL_22;
  }
  uint64_t v9 = 0;
LABEL_8:

  return v9;
}

- (BOOL)prefersBottomDividerHidden
{
  [(CKChatController *)self preferredMacToolbarHeight];
  double v4 = v3;
  double v5 = +[CKUIBehavior sharedBehaviors];
  [v5 macAppKitToolbarHeight];
  double v7 = v6;

  BOOL result = [(CKChatController *)self effectPickerIsPresented];
  if (v4 > v7) {
    return 1;
  }
  return result;
}

- (id)transcriptCollectionViewController:(id)a3 contextMenuConfigurationForItemAtIndexPath:(id)a4 point:(CGPoint)a5 interaction:(id)a6
{
  double y = a5.y;
  double x = a5.x;
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  id v87 = a3;
  id v11 = a4;
  id v12 = a6;
  if ([(CKChatController *)self _clickyOrbEnabled])
  {
    if (CKIsRunningInMacCatalyst()
      && [(CKChatController *)self contextMenuInteractionIsOutsideOfVisibleBalloonCells:v12])
    {
      if (IMOSLoggingEnabled())
      {
        double v13 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "clicky orb: enabled - context menu interaction is outside of visible balloonCell", buf, 2u);
        }
      }
      double v14 = [(CKChatController *)self contextMenuInteractionOutsideOfVisibleBalloonCells];
      goto LABEL_77;
    }
    id v86 = [(CKChatController *)self _parentChatItemForIndexPath:v11];
    id v16 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v11];
    id v17 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v16];
    if (IMOSLoggingEnabled())
    {
      char v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        BOOL v19 = [v86 IMChatItem];
        id v20 = [v19 guid];
        v21 = [v86 IMChatItem];
        objc_super v22 = [v21 guid];
        *(_DWORD *)buf = 138413058;
        id v100 = v20;
        __int16 v101 = 2112;
        id v102 = v22;
        __int16 v103 = 2112;
        id v104 = v16;
        __int16 v105 = 2112;
        id v106 = v17;
        _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "clicky orb: initial values of chatItem.guid: %@, parentChatItem.guid: %@, parentIndexPath: %@, parentBalloonView: %@", buf, 0x2Au);
      }
    }
    if (!CKIsRunningInMacCatalyst())
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & (v17 != 0)) == 1)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (IMOSLoggingEnabled())
          {
            int v23 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_18EF18000, v23, OS_LOG_TYPE_INFO, "clicky orb: disabled because no context menu for the moment share placeholder item", buf, 2u);
            }
          }
LABEL_32:
          double v14 = 0;
          id v28 = v86;
          goto LABEL_76;
        }
      }
    }
    id v24 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v25 = [v24 isStickerRepositioningEnabled];

    if (v25)
    {
      v26 = [(CKCoreChatController *)self collectionViewController];
      if (objc_msgSend(v26, "pointIntersectsRepositionEnabledSticker:chatItem:", v86, x, y))
      {
        if (IMOSLoggingEnabled())
        {
          v27 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_18EF18000, v27, OS_LOG_TYPE_INFO, "clicky orb: disabled because touch intersects a repositionable sticker", buf, 2u);
          }
        }
        goto LABEL_32;
      }
    }
    v29 = v86;
    if (!CKIsRunningInMacCatalyst())
    {
      objc_opt_class();
      v29 = v86;
      if ((objc_opt_isKindOfClass() & (v17 != 0)) == 1)
      {
        objc_opt_class();
        v29 = v86;
        if (objc_opt_isKindOfClass())
        {
          id v30 = v17;
          v29 = [v30 currentAssetChatItem];

          if (IMOSLoggingEnabled())
          {
            v31 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              id v100 = v29;
              _os_log_impl(&dword_18EF18000, v31, OS_LOG_TYPE_INFO, "clicky orb: found photo stack. updating target chatItem to chatItem: %@", buf, 0xCu);
            }
          }
        }
      }
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_51;
    }
    id v32 = [(CKChatController *)self collectionView];
    [v17 frame];
    double v34 = v33;
    double v36 = v35;
    double v38 = v37;
    double v40 = v39;
    v41 = [v17 superview];
    objc_msgSend(v32, "convertRect:fromView:", v41, v34, v36, v38, v40);
    CGFloat v43 = v42;
    CGFloat v45 = v44;
    CGFloat v47 = v46;
    CGFloat v49 = v48;

    v113.origin.double x = v43;
    v113.origin.double y = v45;
    v113.size.width = v47;
    v113.size.height = v49;
    v111.double x = x;
    v111.double y = y;
    if (CGRectContainsPoint(v113, v111) || [v11 row] < 1)
    {
LABEL_51:
      id v69 = v17;
      id v68 = v16;
      id v28 = v29;
    }
    else
    {
      v85 = objc_msgSend(MEMORY[0x1E4F28D58], "indexPathForRow:inSection:", objc_msgSend(v11, "row") - 1, objc_msgSend(v11, "section"));
      v83 = [(CKChatController *)self _parentChatItemForIndexPath:v85];
      v84 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v85];
      v82 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v84];
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_80;
      }
      v50 = [(CKChatController *)self collectionView];
      [v82 frame];
      double v52 = v51;
      double v54 = v53;
      double v56 = v55;
      double v58 = v57;
      v59 = [v82 superview];
      objc_msgSend(v50, "convertRect:fromView:", v59, v52, v54, v56, v58);
      CGFloat v61 = v60;
      CGFloat v63 = v62;
      CGFloat v65 = v64;
      CGFloat v67 = v66;

      v114.origin.double x = v61;
      v114.origin.double y = v63;
      v114.size.width = v65;
      v114.size.height = v67;
      v112.double x = x;
      v112.double y = y;
      if (CGRectContainsPoint(v114, v112))
      {
        id v28 = v83;

        id v68 = v84;
        id v69 = v82;

        if (IMOSLoggingEnabled())
        {
          v70 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            id v100 = v28;
            _os_log_impl(&dword_18EF18000, v70, OS_LOG_TYPE_INFO, "clicky orb: found orangic layout. updating target chatItem to chatItem: %@", buf, 0xCu);
          }
        }
      }
      else
      {
LABEL_80:
        id v69 = v17;
        id v68 = v16;
        id v28 = v29;
      }
    }
    if (v28)
    {
      int v71 = [v28 isReplyContextPreview];
      int v72 = IMOSLoggingEnabled();
      if (!v71)
      {
        if (v72)
        {
          v75 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_18EF18000, v75, OS_LOG_TYPE_INFO, "clicky orb: enabled", buf, 2u);
          }
        }
        if (!CKIsRunningInMacCatalyst() && [v12 menuAppearance] == 1) {
          [v69 setIsBeingShownAsPreview:1];
        }
        [(CKChatController *)self setClickyOrbChatItem:v28];
        v76 = [(CKChatController *)self entryView];
        v77 = [v76 contentView];
        -[CKChatController setEntryViewWasActiveOnContextMenuPresentation:](self, "setEntryViewWasActiveOnContextMenuPresentation:", [v77 isActive]);

        [(CKChatController *)self hideAssociatedCellsForChatItem:v86];
        id location = 0;
        objc_initWeak(&location, self);
        v78 = (void *)MEMORY[0x1E4F428F0];
        v93[0] = MEMORY[0x1E4F143A8];
        v93[1] = 3221225472;
        v93[2] = __138__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_contextMenuConfigurationForItemAtIndexPath_point_interaction___block_invoke;
        v93[3] = &unk_1E5621038;
        id v79 = v28;
        id v94 = v79;
        objc_copyWeak(&v97, &location);
        id v17 = v69;
        id v95 = v17;
        id v16 = v68;
        id v96 = v16;
        v88[0] = MEMORY[0x1E4F143A8];
        v88[1] = 3221225472;
        v88[2] = __138__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_contextMenuConfigurationForItemAtIndexPath_point_interaction___block_invoke_95;
        v88[3] = &unk_1E5621060;
        objc_copyWeak(&v92, &location);
        id v28 = v79;
        id v89 = v28;
        id v90 = v86;
        id v91 = v12;
        double v14 = [v78 configurationWithIdentifier:v11 previewProvider:v93 actionProvider:v88];
        if (IMOSLoggingEnabled())
        {
          v80 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138413314;
            id v100 = v14;
            __int16 v101 = 2112;
            id v102 = v28;
            __int16 v103 = 2112;
            id v104 = v11;
            __int16 v105 = 2112;
            id v106 = v16;
            __int16 v107 = 2112;
            id v108 = v17;
            _os_log_impl(&dword_18EF18000, v80, OS_LOG_TYPE_INFO, "clicky orb: configuration:%@ made from chatItem:%@, at indexPath:%@, with parentIndexPath:%@, parentBalloonView:%@", buf, 0x34u);
          }
        }
        objc_destroyWeak(&v92);

        objc_destroyWeak(&v97);
        objc_destroyWeak(&location);
        goto LABEL_76;
      }
      if (v72)
      {
        v73 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18EF18000, v73, OS_LOG_TYPE_INFO, "clicky orb: disabled because chatItem isReplyContextPreview=YES", buf, 2u);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        v74 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v74, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          id v100 = v11;
          _os_log_impl(&dword_18EF18000, v74, OS_LOG_TYPE_INFO, "clicky orb: disabled because nil chatItem from indexPath: %@", buf, 0xCu);
        }
      }
      id v28 = 0;
    }
    double v14 = 0;
    id v17 = v69;
    id v16 = v68;
LABEL_76:

    goto LABEL_77;
  }
  if (IMOSLoggingEnabled())
  {
    double v15 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "clicky orb: disabled. Returning nil configuration", buf, 2u);
    }
  }
  double v14 = 0;
LABEL_77:

  return v14;
}

id __138__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_contextMenuConfigurationForItemAtIndexPath_point_interaction___block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    v2 = [*(id *)(a1 + 32) mediaObject];
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 && ([v2 needsAnimation])
    {

      double v3 = 0;
      goto LABEL_10;
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  double v3 = [WeakRetained _previewingViewControllerForHitView:*(void *)(a1 + 40) indexPath:*(void *)(a1 + 48)];

  if (IMOSLoggingEnabled())
  {
    double v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v7 = 138412290;
      char v8 = v3;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "clicky orb: providing previewingViewController: %@", (uint8_t *)&v7, 0xCu);
    }
  }
LABEL_10:

  return v3;
}

id __138__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_contextMenuConfigurationForItemAtIndexPath_point_interaction___block_invoke_95(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  double v3 = objc_msgSend(WeakRetained, "_menuForChatItem:withParentChatItem:menuAppearance:", *(void *)(a1 + 32), *(void *)(a1 + 40), objc_msgSend(*(id *)(a1 + 48), "menuAppearance"));

  return v3;
}

- (void)transcriptCollectionViewController:(id)a3 willPerformPreviewActionForMenuWithConfiguration:(id)a4 animator:(id)a5
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = [v10 previewViewController];
  id v12 = [v9 identifier];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    double v14 = [v9 identifier];
    double v15 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v14];
    id v16 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v15];
    int v25 = [(CKChatController *)self _chatItemForContextMenuWithConfiguration:v9];
  }
  else
  {
    id v16 = 0;
    int v25 = 0;
    double v15 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      id v22 = v8;
      id v24 = [v25 IMChatItem];
      int v23 = [v24 guid];
      char v18 = [(CKChatController *)self clickyOrbChatItem];
      BOOL v19 = [v18 IMChatItem];
      id v20 = [v19 guid];
      *(_DWORD *)buf = 138412546;
      v31 = v23;
      __int16 v32 = 2112;
      double v33 = v20;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, " willPerformPreviewActionForMenuWithConfiguration chatItem: %@, self.clickyOrb:%@", buf, 0x16u);

      id v8 = v22;
    }
  }
  if (!v11 && v16 && v15)
  {
    id v11 = [(CKChatController *)self _previewingViewControllerForHitView:v16 indexPath:v15];
  }
  if (v11)
  {
    v21 = [MEMORY[0x1E4F6E890] sharedInstance];
    [v21 trackEvent:*MEMORY[0x1E4F6DA88]];

    [v10 setPreferredCommitStyle:1];
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    v26[2] = __135__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_willPerformPreviewActionForMenuWithConfiguration_animator___block_invoke;
    v26[3] = &unk_1E5621088;
    v26[4] = self;
    id v27 = v11;
    id v28 = v15;
    id v29 = v25;
    [v10 addCompletion:v26];
  }
}

void __135__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_willPerformPreviewActionForMenuWithConfiguration_animator___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsShowingPreview:1];
  if (IMOSLoggingEnabled())
  {
    v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "willPerformPreviewActionForMenuWithConfiguration: Setting showing preview to YES", buf, 2u);
    }
  }
  double v3 = *(void **)(a1 + 40);
  double v4 = [*(id *)(a1 + 32) previewController];

  if (v3 == v4)
  {
    v11.receiver = *(id *)(a1 + 32);
    v11.super_class = (Class)CKChatController;
    objc_msgSendSuper2(&v11, sel_becomeFirstResponder);
    [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
    return;
  }
  [*(id *)(a1 + 32) restoreEntryViewAfterPreview];
  if (!*(void *)(a1 + 48)) {
    goto LABEL_13;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_13;
  }
  double v5 = *(void **)(a1 + 56);
  double v6 = [*(id *)(a1 + 32) collectionViewController];
  int v7 = [v6 transcriptIdentifier];
  id v8 = [v5 balloonControllerForContext:v7];

  if ((objc_opt_respondsToSelector() & 1) == 0)
  {

    goto LABEL_13;
  }
  char v9 = [v8 handlePresentationAction];

  if ((v9 & 1) == 0)
  {
LABEL_13:
    id v10 = [*(id *)(a1 + 32) navigationController];
    [v10 pushViewController:*(void *)(a1 + 40) animated:0];
  }
}

- (id)transcriptCollectionViewController:(id)a3 previewForHighlightingContextMenuWithConfiguration:(id)a4
{
  uint64_t v183 = *MEMORY[0x1E4F143B8];
  id v172 = a3;
  id v6 = a4;
  if (IMOSLoggingEnabled())
  {
    int v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "generating reviewForHighlightingContextMenuWithConfiguration", buf, 2u);
    }
  }
  id v8 = [v6 identifier];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    v173 = [v6 identifier];
    v170 = [(CKChatController *)self _parentChatItemForIndexPath:v173];
    v171 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v173];
    id v10 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v171];
    objc_super v11 = [(CKCoreChatController *)self fullScreenBalloonViewController];
    id v12 = [v11 displayConfiguration];
    BOOL v13 = [v12 type] == 2;

    if (v13)
    {
      v174 = [(CKCoreChatController *)self fullScreenBalloonViewController];
      double v14 = [v174 balloonView];
      objc_opt_class();
      char v15 = objc_opt_isKindOfClass();

      if ((v15 & 1) == 0)
      {
        BOOL v19 = [v174 balloonView];
        [v19 bounds];
        double v21 = v20;
        double v23 = v22;
        double v25 = v24;
        double v27 = v26;

        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v28 = +[CKUIBehavior sharedBehaviors];
          [v28 dragBalloonTailCropWidth];
          double v30 = v29;

          if (v10)
          {
            [v10 balloonDescriptor];
            double v31 = -0.0;
            if (!v176) {
              double v31 = v30;
            }
          }
          else
          {
            double v31 = v30;
          }
          double v21 = v21 + v31;
          double v25 = v25 - v30;
        }
        id v86 = objc_alloc_init(MEMORY[0x1E4F42CF8]);
        v139 = +[CKUIBehavior sharedBehaviors];
        [v139 dragBalloonCornerRadius];
        double v141 = v140;

        v142 = objc_msgSend(MEMORY[0x1E4F427D0], "bezierPathWithRoundedRect:cornerRadius:", v21, v23, v25, v27, v141);
        [v86 setVisiblePath:v142];

        v143 = [v174 balloonView];
        char v18 = [objc_alloc(MEMORY[0x1E4F42ED8]) initWithView:v143 parameters:v86];
        [v18 _setOverridePositionTrackingView:v143];
        if (objc_opt_respondsToSelector()) {
          [v18 _setPrefersUnmaskedPlatterStyle:1];
        }
        if (IMOSLoggingEnabled())
        {
          v144 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v144, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412546;
            v178 = v18;
            __int16 v179 = 2112;
            v180 = v143;
            _os_log_impl(&dword_18EF18000, v144, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration returning preview for add sticker configuration: %@, trackingView: %@", buf, 0x16u);
          }
        }
        goto LABEL_118;
      }
      if (v174)
      {
        id v16 = [v174 balloonView];
      }
      else
      {
        id v16 = v10;
      }
    }
    else
    {
      id v16 = v10;
    }
    v174 = [(CKChatController *)self _chatItemForContextMenuWithConfiguration:v6];
    if (IMOSLoggingEnabled())
    {
      __int16 v32 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        double v33 = [v174 IMChatItem];
        uint64_t v34 = [v33 guid];
        double v35 = [(CKChatController *)self clickyOrbChatItem];
        double v36 = [v35 IMChatItem];
        double v37 = [v36 guid];
        *(_DWORD *)buf = 138412802;
        v178 = v34;
        __int16 v179 = 2112;
        v180 = v37;
        __int16 v181 = 2112;
        v182 = v170;
        _os_log_impl(&dword_18EF18000, v32, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration contextMenuChatItem: %@, self.clickyOrb:%@, chatItem: %@", buf, 0x20u);
      }
    }
    if (!v174)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        double v38 = v16;
        [v38 setCanUseOpaqueMask:1];
        [v38 prepareForDisplayIfNeeded];
      }
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double v39 = [v172 collectionView];
      [v16 frame];
      double v41 = v40;
      double v43 = v42;
      double v45 = v44;
      double v47 = v46;
      double v48 = [v16 superview];
      objc_msgSend(v39, "convertRect:fromView:", v48, v41, v43, v45, v47);
      CGFloat v50 = v49;
      CGFloat v52 = v51;
      CGFloat v54 = v53;
      CGFloat v56 = v55;

      double v57 = [v39 contextMenuInteraction];
      [v57 locationInView:v39];
      CGFloat v59 = v58;
      CGFloat v61 = v60;

      v187.origin.double x = v50;
      v187.origin.double y = v52;
      v187.size.width = v54;
      v187.size.height = v56;
      v185.double x = v59;
      v185.double y = v61;
      if (CGRectContainsPoint(v187, v185) || [v173 row] < 1)
      {
        id v10 = v16;
      }
      else
      {
        double v62 = objc_msgSend(MEMORY[0x1E4F28D58], "indexPathForRow:inSection:", objc_msgSend(v173, "row") - 1, objc_msgSend(v173, "section"));
        CGFloat v63 = [(CKChatController *)self _parentChatItemForIndexPath:v62];
        double v64 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v62];
        CGFloat v65 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v64];
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          goto LABEL_41;
        }
        [v65 frame];
        double v67 = v66;
        double v69 = v68;
        double v71 = v70;
        double v73 = v72;
        v74 = [v65 superview];
        objc_msgSend(v39, "convertRect:fromView:", v74, v67, v69, v71, v73);
        CGFloat v76 = v75;
        CGFloat v78 = v77;
        CGFloat v80 = v79;
        CGFloat v82 = v81;

        v188.origin.double x = v76;
        v188.origin.double y = v78;
        v188.size.width = v80;
        v188.size.height = v82;
        v186.double x = v59;
        v186.double y = v61;
        if (CGRectContainsPoint(v188, v186))
        {
          id v10 = v65;

          if (IMOSLoggingEnabled())
          {
            v83 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v83, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v178 = v10;
              _os_log_impl(&dword_18EF18000, v83, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration updating parentBalloonView: %@", buf, 0xCu);
            }
          }
        }
        else
        {
LABEL_41:
          id v10 = v16;
        }
      }
    }
    else
    {
      id v10 = v16;
    }
    if (v10)
    {
      v84 = [v10 window];
      BOOL v85 = v84 == 0;

      if (v85)
      {
        id v86 = IMLogHandleForCategory();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
          -[CKChatController(ClickyOrbConformance) transcriptCollectionViewController:previewForHighlightingContextMenuWithConfiguration:]();
        }
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v86 = v10;
          if (IMOSLoggingEnabled())
          {
            id v87 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v87, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v178 = v86;
              _os_log_impl(&dword_18EF18000, v87, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration generating preview from photoStackBalloonView: %@", buf, 0xCu);
            }
          }
          v88 = [v86 stackView];
          v169 = [v88 currentAssetReference];
          id v89 = [v88 regionOfInterestForAssetReference:v169];
          id v90 = v89;
          if (!v89) {
            goto LABEL_71;
          }
          id v91 = [v89 placeholderViewFactory];

          if (v91)
          {
            id v92 = [v90 placeholderViewFactory];
            v93 = ((void (**)(void, void *))v92)[2](v92, v90);

            if (v93) {
              goto LABEL_124;
            }
          }
          id v94 = [(CKChatController *)self view];
          [v90 rectInCoordinateSpace:v94];
          double v96 = v95;
          double v98 = v97;
          double v100 = v99;
          double v102 = v101;

          __int16 v103 = [(CKChatController *)self view];
          v93 = objc_msgSend(v103, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 0, v96, v98, v100, v102, *MEMORY[0x1E4F437F8], *(double *)(MEMORY[0x1E4F437F8] + 8), *(double *)(MEMORY[0x1E4F437F8] + 16), *(double *)(MEMORY[0x1E4F437F8] + 24));

          if (v93)
          {
LABEL_124:
            if ((objc_opt_respondsToSelector() & 1) != 0
              && ([v90 trackingContainerView],
                  v168 = objc_claimAutoreleasedReturnValue(),
                  [v93 bounds],
                  double v108 = CGRectPxCenterPoint(v104, v105, v106, v107),
                  v168))
            {
              double v110 = v108;
              double v111 = v109;
              int v112 = 0;
            }
            else
            {
              v168 = [(CKChatController *)self view];
              v126 = [v168 coordinateSpace];
              [v90 rectInCoordinateSpace:v126];
              double v110 = CGRectPxCenterPoint(v127, v128, v129, v130);
              double v111 = v131;

              int v112 = 1;
            }
            v132 = objc_msgSend(objc_alloc(MEMORY[0x1E4F42D00]), "initWithContainer:center:", v168, v110, v111);
            id v133 = objc_alloc_init(MEMORY[0x1E4F42CF8]);
            v134 = +[CKUIBehavior sharedBehaviors];
            [v134 dragBalloonCornerRadius];

            v135 = (void *)MEMORY[0x1E4F427D0];
            [v93 bounds];
            v136 = objc_msgSend(v135, "bezierPathWithRoundedRect:cornerRadius:");
            [v133 setVisiblePath:v136];

            v137 = [objc_alloc(MEMORY[0x1E4F42ED8]) initWithView:v93 parameters:v133 target:v132];
            char v18 = v137;
            if (v112) {
              [v137 _setOverridePositionTrackingView:v86];
            }
            if (objc_opt_respondsToSelector()) {
              [v18 _setPrefersUnmaskedPlatterStyle:1];
            }
            if (IMOSLoggingEnabled())
            {
              v138 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v138, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138412290;
                v178 = v18;
                _os_log_impl(&dword_18EF18000, v138, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration generated photoStackBalloonView preview: %@", buf, 0xCu);
              }
            }
          }
          else
          {
LABEL_71:
            char v18 = 0;
          }

          id v10 = v86;
          goto LABEL_118;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (IMOSLoggingEnabled())
          {
            CGRect v113 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v113, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v178 = v10;
              _os_log_impl(&dword_18EF18000, v113, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration generated parentBalloonView preview: %@", buf, 0xCu);
            }
          }
          if (((v174 != 0) & [v10 canUseOpaqueMask]) == 1)
          {
            [v10 setCanUseOpaqueMask:0];
            [v10 setNeedsPrepareForDisplay];
            [v10 prepareForDisplayIfNeeded];
            [v10 layoutIfNeeded];
            [MEMORY[0x1E4F39CF8] flush];
          }
          [v10 bounds];
          double v115 = v114;
          double v117 = v116;
          double v119 = v118;
          double v121 = v120;
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            [v10 imageInsets];
          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0)
            {
LABEL_98:
              v145 = +[CKUIBehavior sharedBehaviors];
              [v145 dragBalloonTailCropWidth];
              double v147 = v146;

              [v10 balloonDescriptor];
              if (v175) {
                double v148 = -0.0;
              }
              else {
                double v148 = v147;
              }
              id v86 = objc_alloc_init(MEMORY[0x1E4F42CF8]);
              v149 = +[CKUIBehavior sharedBehaviors];
              [v149 dragBalloonCornerRadius];
              double v151 = v150;

              v152 = objc_msgSend(MEMORY[0x1E4F427D0], "bezierPathWithRoundedRect:cornerRadius:", v115 + v148, v117, v119 - v147, v121, v151);
              [v86 setVisiblePath:v152];
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0
                && [v10 shouldProvideDragPreview])
              {
                v153 = v10;
                uint64_t v154 = [v153 attachmentBalloonViewPreview];
                v155 = (void *)v154;
                if (v154) {
                  v156 = (void *)v154;
                }
                else {
                  v156 = v153;
                }
                v157 = v156;

                v158 = [v153 superview];
                id v159 = objc_alloc(MEMORY[0x1E4F42D00]);
                [v153 frame];
                v164 = objc_msgSend(v159, "initWithContainer:center:", v158, CGRectPxCenterPoint(v160, v161, v162, v163));
                char v18 = [objc_alloc(MEMORY[0x1E4F42ED8]) initWithView:v157 parameters:v86 target:v164];
                if (IMOSLoggingEnabled())
                {
                  v165 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v165, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)buf = 138412802;
                    v178 = v157;
                    __int16 v179 = 2112;
                    v180 = v158;
                    __int16 v181 = 2112;
                    v182 = v18;
                    _os_log_impl(&dword_18EF18000, v165, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration previewContentView: %@, containerView: %@, preview: %@", buf, 0x20u);
                  }
                }
              }
              else
              {
                char v18 = [objc_alloc(MEMORY[0x1E4F42ED8]) initWithView:v10 parameters:v86];
                if (IMOSLoggingEnabled())
                {
                  v166 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v166, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)buf = 138412546;
                    v178 = v18;
                    __int16 v179 = 2112;
                    v180 = v10;
                    _os_log_impl(&dword_18EF18000, v166, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration generated preview: %@, parentBalloonView: %@", buf, 0x16u);
                  }
                }
              }
              [v18 _setOverridePositionTrackingView:v10];
              if (objc_opt_respondsToSelector()) {
                [v18 _setPrefersUnmaskedPlatterStyle:1];
              }

              goto LABEL_118;
            }
            [v10 pluginInsets];
          }
          double v115 = v115 + v123;
          double v117 = v117 + v122;
          double v119 = v119 - (v123 + v125);
          double v121 = v121 - (v122 + v124);
          goto LABEL_98;
        }
        id v86 = IMLogHandleForCategory();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
          -[CKChatController(ClickyOrbConformance) transcriptCollectionViewController:previewForHighlightingContextMenuWithConfiguration:]();
        }
      }
    }
    else
    {
      id v86 = IMLogHandleForCategory();
      if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(ClickyOrbConformance) transcriptCollectionViewController:previewForHighlightingContextMenuWithConfiguration:]();
      }
    }
    char v18 = 0;
LABEL_118:

    goto LABEL_119;
  }
  if (IMOSLoggingEnabled())
  {
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "previewForHighlightingContextMenuWithConfiguration unknown indexPath. No preview available", buf, 2u);
    }
  }
  char v18 = 0;
LABEL_119:

  return v18;
}

- (id)transcriptCollectionViewController:(id)a3 previewForDismissingContextMenuWithConfiguration:(id)a4
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      char v9 = [(CKChatController *)self pickerContainerAccessoryView];
      int v12 = 136315394;
      BOOL v13 = "-[CKChatController(ClickyOrbConformance) transcriptCollectionViewController:previewForDismissingContextMenuW"
            "ithConfiguration:]";
      __int16 v14 = 2112;
      char v15 = v9;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "%s clearing TapbackContainerAccessoryView: %@", (uint8_t *)&v12, 0x16u);
    }
  }
  [(CKChatController *)self setClickyOrbChatItem:0];
  [(CKChatController *)self setPickerContainerAccessoryView:0];
  id v10 = [(CKChatController *)self transcriptCollectionViewController:v6 previewForHighlightingContextMenuWithConfiguration:v7];

  return v10;
}

- (id)contextMenuAccessoryViewsForChatItem:(id)a3 containingViewController:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  if ([(CKChatController *)self shouldShowTapbackPickerForChatItem:v6])
  {
    char v9 = [(CKChatController *)self pickerAccessoryViewForChatItem:v6 containingViewController:v7];
    [v8 addObject:v9];
    [(CKChatController *)self setPickerContainerAccessoryView:v9];
  }
  if ([(CKCoreChatController *)self shouldShowTapbackAttributionForChatItem:v6])
  {
    id v10 = [(CKChatController *)self _votingViewForChatItem:v6 containingViewController:v7];
    [v8 addObject:v10];
  }

  return v8;
}

- (id)transcriptCollectionViewController:(id)a3 styleForContextMenuWithConfiguration:(id)a4
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self _chatItemForContextMenuWithConfiguration:v7];
  if (IMOSLoggingEnabled())
  {
    char v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v10 = [v8 IMChatItem];
      objc_super v11 = [v10 guid];
      int v12 = [(CKChatController *)self clickyOrbChatItem];
      BOOL v13 = [v12 IMChatItem];
      __int16 v14 = [v13 guid];
      int v43 = 138412546;
      double v44 = v11;
      __int16 v45 = 2112;
      double v46 = v14;
      _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, " styleForContextMenuWithConfiguration chatItem: %@, self.clickyOrb:%@", (uint8_t *)&v43, 0x16u);
    }
  }
  char v15 = [MEMORY[0x1E4F43130] defaultStyle];
  uint64_t v16 = [(CKChatController *)self collectionView];
  [v16 layoutMargins];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  double v23 = 0.0;
  if ([(CKChatController *)self shouldShowTapbackPickerForChatItem:v8])
  {
    +[CKTapbackPickerBalloonLayoutTemplate requiredDisplayHeight];
    double v25 = v24;
    double v26 = +[CKUIBehavior sharedBehaviors];
    [v26 messageAcknowledgementVotingViewMinPadding];
    double v28 = v27;

    double v23 = v25 + v28 + 0.0;
  }
  if ([(CKCoreChatController *)self shouldShowTapbackAttributionForChatItem:v8])
  {
    double v29 = +[CKUIBehavior sharedBehaviors];
    [v29 attributionViewHeight];
    double v31 = v30;
    __int16 v32 = +[CKUIBehavior sharedBehaviors];
    [v32 attributionViewMinPadding];
    double v34 = v33;

    double v23 = v23 + v31 + v34;
  }
  +[CKTapbackPickerBalloonLayoutTemplate emojiTailBubbleMargin];
  double v36 = v35;
  +[CKTapbackPickerBalloonLayoutTemplate selectionTailSize];
  double v38 = v37;
  +[CKTapbackPickerBalloonLayoutTemplate emojiTailBubbleMargin];
  double v40 = v39;
  if ([v8 isFromMe]) {
    double v18 = v36 + v38 + v40;
  }
  else {
    double v22 = v36 + v38 + v40;
  }
  [v15 preferredEdgeInsets];
  objc_msgSend(v15, "setPreferredEdgeInsets:", fmax(v41, v23), v18, v20, v22);

  return v15;
}

- (void)clearEntryViewPasteConfiguration
{
  v2 = [(CKChatController *)self entryView];
  double v3 = [v2 contentView];
  id v5 = [v3 textView];

  id v4 = objc_alloc_init(MEMORY[0x1E4F42C48]);
  [v5 setPasteConfiguration:v4];
}

- (void)restoreEntryViewPasteConfiguration
{
  double v3 = [(CKChatController *)self entryView];
  id v4 = [v3 contentView];
  id v9 = [v4 textView];

  id v5 = [(CKCoreChatController *)self chat];
  uint64_t v6 = [v5 supportsCapabilities:0x8000] ^ 1;

  id v7 = +[CKUIBehavior sharedBehaviors];
  id v8 = [v7 pasteConfigurationDisablingKeyboardStickers:v6];

  [v9 setPasteConfiguration:v8];
}

- (void)transcriptCollectionViewController:(id)a3 willEndContextMenuInteractionWithConfiguration:(id)a4 animator:(id)a5
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  objc_super v11 = [(CKChatController *)self _chatItemForContextMenuWithConfiguration:v9];
  if (IMOSLoggingEnabled())
  {
    int v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      __int16 v32 = [v11 IMChatItem];
      BOOL v13 = [v32 guid];
      __int16 v14 = [(CKChatController *)self clickyOrbChatItem];
      char v15 = [v14 IMChatItem];
      uint64_t v16 = [v15 guid];
      *(_DWORD *)buf = 138412546;
      double v42 = v13;
      __int16 v43 = 2112;
      double v44 = v16;
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, " willEndContextMenuInteractionWithConfiguration chatItem: %@, self.clickyOrb:%@", buf, 0x16u);
    }
  }
  double v17 = [(CKChatController *)self messageEditingViewController];
  BOOL v18 = v17 != 0;

  if (v18) {
    [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"ContextMenu"];
  }
  double v19 = [v9 identifier];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    double v21 = [v9 identifier];
    double v22 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v21];
    double v23 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v22];
    [v23 setIsBeingShownAsPreview:0];
  }
  else
  {
    double v21 = 0;
    double v23 = 0;
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __133__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_willEndContextMenuInteractionWithConfiguration_animator___block_invoke;
  aBlock[3] = &unk_1E56210B0;
  aBlock[4] = self;
  id v36 = v11;
  BOOL v40 = v18;
  id v37 = v8;
  id v24 = v21;
  id v38 = v24;
  id v25 = v23;
  id v39 = v25;
  id v26 = v8;
  id v27 = v11;
  double v28 = (void (**)(void))_Block_copy(aBlock);
  v33[0] = MEMORY[0x1E4F143A8];
  v33[1] = 3221225472;
  v33[2] = __133__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_willEndContextMenuInteractionWithConfiguration_animator___block_invoke_121;
  v33[3] = &unk_1E5620AF8;
  void v33[4] = self;
  id v34 = v24;
  id v29 = v24;
  double v30 = _Block_copy(v33);
  double v31 = v30;
  if (v10)
  {
    [v10 addAnimations:v30];
    [v10 addCompletion:v28];
  }
  else
  {
    (*((void (**)(void *))v30 + 2))(v30);
    v28[2](v28);
  }
  [(CKChatController *)self restoreEntryViewPasteConfiguration];
  [(CKChatController *)self restoreInputAfterPreviewPresentation];
}

void __133__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_willEndContextMenuInteractionWithConfiguration_animator___block_invoke(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      double v3 = [*(id *)(a1 + 32) pickerContainerAccessoryView];
      int v16 = 136315394;
      double v17 = "-[CKChatController(ClickyOrbConformance) transcriptCollectionViewController:willEndContextMenuInteractionWit"
            "hConfiguration:animator:]_block_invoke";
      __int16 v18 = 2112;
      double v19 = v3;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "%s completion called, clearing TapbackContainerAccessoryView: %@", (uint8_t *)&v16, 0x16u);
    }
  }
  [*(id *)(a1 + 32) setClickyOrbChatItem:0];
  [*(id *)(a1 + 32) setPickerContainerAccessoryView:0];
  [*(id *)(a1 + 32) setDismissingContextMenu:1];
  if ([*(id *)(a1 + 32) acknowledgmentToSend])
  {
    id v4 = [*(id *)(a1 + 32) chat];
    objc_msgSend(v4, "sendMessageAcknowledgment:forChatItem:", objc_msgSend(*(id *)(a1 + 32), "acknowledgmentToSend"), *(void *)(a1 + 40));

    [*(id *)(a1 + 32) setAcknowledgmentToSend:0];
  }
  id v5 = [*(id *)(a1 + 32) chat];
  [v5 endHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B918]];
  if (!*(unsigned char *)(a1 + 72)) {
    [*(id *)(a1 + 32) endHoldingScrollGeometryUpdatesForReason:@"ContextMenu"];
  }
  if ([*(id *)(a1 + 32) wasKeyboardShowingWithApp])
  {
    [*(id *)(a1 + 32) setWasKeyboardShowingWithApp:0];
    uint64_t v6 = [*(id *)(a1 + 32) presentedViewController];
    if (v6)
    {
    }
    else if (([*(id *)(a1 + 32) isEditing] & 1) == 0)
    {
      [*(id *)(a1 + 32) reloadInputViews];
      [*(id *)(a1 + 32) becomeFirstResponder];
    }
    id v7 = [*(id *)(a1 + 48) collectionView];
    [v7 endHoldingContentOffsetUpdatesForReason:@"ChatControllerClickyOrb"];
  }
  if ([*(id *)(a1 + 32) wantsInlineOverlay])
  {
    if (CKIsRunningInMacCatalyst())
    {
      id v8 = [*(id *)(a1 + 32) collectionViewController];
      id v9 = [v8 selectedChatItems];
      id v10 = [v9 firstObject];

      objc_super v11 = v10;
      if (!v10) {
        objc_super v11 = *(void **)(a1 + 40);
      }
      id v12 = v11;
    }
    else
    {
      id v12 = *(id *)(a1 + 40);
    }
    [*(id *)(a1 + 32) showInlineReplyControllerForChatItem:v12 presentKeyboard:1];
    [*(id *)(a1 + 32) setWantsInlineOverlay:0];
  }
  else
  {
    int v13 = [*(id *)(a1 + 32) wantsStickerDetails];
    __int16 v14 = *(void **)(a1 + 32);
    if (v13)
    {
      [v14 setWantsStickerDetails:0];
      [*(id *)(a1 + 32) presentStickerDetailControllerWithIndexPath:*(void *)(a1 + 56)];
    }
    else if ([v14 wantsEmojiDetails])
    {
      [*(id *)(a1 + 32) setWantsEmojiDetails:0];
      [*(id *)(a1 + 32) presentEmojiDetailsControllerWithIndexPath:*(void *)(a1 + 56)];
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v15 = *(id *)(a1 + 64);
    [v15 setCanUseOpaqueMask:1];
    [v15 prepareForDisplayIfNeeded];
  }
  [*(id *)(a1 + 32) setDismissingContextMenu:0];
}

void __133__CKChatController_ClickyOrbConformance__transcriptCollectionViewController_willEndContextMenuInteractionWithConfiguration_animator___block_invoke_121(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) fullScreenBalloonViewController];
  double v3 = [v2 displayConfiguration];
  char v4 = [v3 shouldShowStickers];

  if ((v4 & 1) == 0)
  {
    id v5 = [*(id *)(a1 + 32) _parentChatItemForIndexPath:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) showAssociatedCellsForChatItem:v5 animated:1 completion:0];
  }
}

- (void)transcriptCollectionViewController:(id)a3 willDisplayContextMenuWithConfiguration:(id)a4 animator:(id)a5
{
  id v12 = a4;
  [(CKChatController *)self clearEntryViewPasteConfiguration];
  [(CKChatController *)self prepareInputForPreviewPresentation];
  uint64_t v6 = [v12 identifier];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v8 = [v12 identifier];
    id v9 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v8];
    id v10 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v9];
  }
  else
  {
    id v10 = 0;
    id v8 = 0;
  }
  if ([v10 canUseOpaqueMask])
  {
    [v10 setCanUseOpaqueMask:0];
    [v10 setNeedsPrepareForDisplay];
    [v10 prepareForDisplayIfNeeded];
    [v10 layoutIfNeeded];
    [MEMORY[0x1E4F39CF8] flush];
  }
  objc_super v11 = [(CKCoreChatController *)self chat];
  [v11 beginHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B918]];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"ContextMenu"];
}

- (id)transcriptCollectionViewController:(id)a3 chatItemForContextMenuWithConfiguration:(id)a4
{
  return [(CKChatController *)self _chatItemForContextMenuWithConfiguration:a4];
}

- (id)transcriptCollectionViewController:(id)a3 accessoriesForContextMenuWithConfiguration:(id)a4
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self _chatItemForContextMenuWithConfiguration:v7];
  if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v10 = [v8 IMChatItem];
      objc_super v11 = [v10 guid];
      id v12 = [(CKChatController *)self clickyOrbChatItem];
      int v13 = [v12 IMChatItem];
      __int16 v14 = [v13 guid];
      int v17 = 138412546;
      __int16 v18 = v11;
      __int16 v19 = 2112;
      uint64_t v20 = v14;
      _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, " accessoriesForContextMenuWithConfiguration chatItem: %@, self.clickyOrb:%@", (uint8_t *)&v17, 0x16u);
    }
  }
  id v15 = [(CKChatController *)self contextMenuAccessoryViewsForChatItem:v8 containingViewController:self];

  return v15;
}

- (id)_chatItemForContextMenuWithConfiguration:(id)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 identifier];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v7 = [v4 identifier];
    if (v7)
    {
      id v8 = [(CKChatController *)self _parentChatItemForIndexPath:v7];
      goto LABEL_6;
    }
  }
  else
  {
    id v7 = 0;
  }
  id v8 = 0;
LABEL_6:
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v9 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v7];
    id v10 = [(CKChatController *)self _balloonViewForCellAtIndexPath:v9];
    if (v10)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v11 = [v10 currentAssetChatItem];

        id v8 = (void *)v11;
      }
    }
  }
  if (IMOSLoggingEnabled())
  {
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      int v14 = 138412546;
      id v15 = v8;
      __int16 v16 = 2112;
      int v17 = v7;
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "clickyOrbConformance: found chatItem:%@ at indexPath:%@", (uint8_t *)&v14, 0x16u);
    }
  }

  return v8;
}

- (void)dismissContextMenuInteractionMenu
{
  if ([(CKChatController *)self photosGridViewPresented])
  {
    double v3 = [(CKChatController *)self photosGridViewController];
    char v4 = objc_opt_respondsToSelector();

    if ((v4 & 1) == 0) {
      return;
    }
    id v5 = [(CKChatController *)self photosGridViewController];
  }
  else
  {
    id v5 = [(CKChatController *)self collectionView];
  }
  id v7 = v5;
  id v6 = [v5 contextMenuInteraction];
  [v6 dismissMenu];
}

- (id)_menuForChatItem:(id)a3 withParentChatItem:(id)a4 menuAppearance:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = +[CKUIBehavior sharedBehaviors];
  char v11 = [v10 disableTranscriptClickyOrbContextMenu];

  if (v11)
  {
    id v12 = 0;
  }
  else
  {
    int v13 = [MEMORY[0x1E4F1CA48] array];
    if ([(CKChatController *)self _shouldConfigureChatItemMenuForCommSafety:v8])
    {
      if (CKIsRunningInMacCatalyst()) {
        [(CKChatController *)self _deleteMenuForChatItem:v8];
      }
      else {
      id v15 = [(CKChatController *)self _moreActionForChatItem:v8 configureForCommSafety:1];
      }
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v15, v15, v13);

      if ([v13 count])
      {
        id v12 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 children:v13];
      }
      else
      {
        id v12 = 0;
      }
    }
    else
    {
      int v14 = [(CKChatController *)self _responsesSubmenuForChatItem:v8 withParentChatItem:v9 menuAppearance:a5];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v14, v14, v13);
      if (CKIsRunningInMacCatalyst()) {
        [(CKChatController *)self _exportMenuForChatItem:v8];
      }
      else {
      __int16 v16 = [(CKChatController *)self _exportActionForChatItem:v8 shouldUseTopMostChatItemIfAggregateChatItem:1];
      }
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v16, v16, v13);
      int v17 = [(CKCoreChatController *)self collectionViewController];
      uint64_t v18 = [v17 balloonViewForChatItem:v9];

      __int16 v19 = [(CKChatController *)self _saveStickerActionForChatItem:v8 sourceView:v18];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v19, v19, v13);
      double v53 = [(CKCoreChatController *)self conversation];
      CGFloat v54 = objc_opt_new();
      uint64_t v20 = [(CKCoreChatController *)self chat];
      int v21 = [v20 supportsCapabilities:1];

      if (v21
        && [v8 canEditMessageText]
        && [v53 supportsMessageEditing])
      {
        id location = 0;
        objc_initWeak(&location, self);
        double v49 = (void *)MEMORY[0x1E4F426E8];
        double v22 = CKFrameworkBundle();
        double v48 = [v22 localizedStringForKey:@"EDIT" value:&stru_1EDE4CA38 table:@"ChatKit"];
        double v51 = [MEMORY[0x1E4F42A80] systemImageNamed:@"pencil"];
        uint64_t v47 = v22;
        v55[0] = MEMORY[0x1E4F143A8];
        v55[1] = 3221225472;
        v55[2] = __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke_2;
        v55[3] = &unk_1E56210D8;
        objc_copyWeak(&v57, &location);
        id v56 = v8;
        double v23 = [v49 actionWithTitle:v48 image:v51 identifier:0 handler:v55];

        [v54 addObject:v23];
        objc_destroyWeak(&v57);
        objc_destroyWeak(&location);
      }
      if (objc_msgSend(v8, "canRetract", v47)
        && [v53 supportsMessageEditing])
      {
        id v24 = [(CKChatController *)self _retractionActionForChatItem:v8];
        [v54 addObject:v24];
      }
      if ([v54 count])
      {
        id v25 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v54];
        __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v25, v25, v13);
      }
      if (CKIsRunningInMacCatalyst()) {
        [(CKChatController *)self _forwardAndCopyMenuForChatItem:v8];
      }
      else {
      id v26 = [(CKChatController *)self _forwardAndCopyActionsForChatItem:v8];
      }
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v26, v26, v13);
      if ([MEMORY[0x1E4F6E730] supportsSharedWithYou])
      {
        id v27 = [(CKChatController *)self _highlightActionForChatItem:v8];
        __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v27, v27, v13);
      }
      CGFloat v50 = v19;
      CGFloat v52 = v16;
      if (+[CKTranslatorUtilities shouldShowTranslateMenuOption:v8])
      {
        double v28 = +[CKTranslationMenu translateOrbActionForChatItem:v8 forController:self];
        __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v28, v28, v13);
      }
      id v29 = (void *)v18;
      double v30 = v14;
      if (CKIsRunningInMacCatalyst())
      {
        double v31 = [(CKCoreChatController *)self chat];
        char v32 = [v31 isStewieSharingChat];

        if ((v32 & 1) == 0 && [v8 canDelete])
        {
          double v33 = [(CKChatController *)self _deleteMenuForChatItem:v8];
          __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v33, v33, v13);
        }
        id v34 = [(CKChatController *)self _showTimestampsAction];
        __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v34, v34, v13);
      }
      double v35 = [(CKChatController *)self _downgradeMessageActionForChatItem:v8];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v35, v35, v13);

      id v36 = [(CKChatController *)self _emojiDetailsActionForChatItem:v9];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v36, v36, v13);

      id v37 = [(CKChatController *)self _stickerDetailsActionForChatItem:v9];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v37, v37, v13);

      id v38 = [(CKChatController *)self _mediaAttributionActionForChatItem:v8];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v38, v38, v13);

      id v39 = [(CKChatController *)self _moreActionForChatItem:v8];
      __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke((uint64_t)v39, v39, v13);

      BOOL v40 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
      char v41 = [v40 BOOLForKey:@"CKInternalInstallShouldHideDebugMenu"];

      double v42 = [MEMORY[0x1E4F6C360] sharedInstance];
      int v43 = [v42 isInternalInstall];

      if (v43 && (v41 & 1) == 0)
      {
        double v44 = [(CKChatController *)self _internalMenuForChatItem:v8];
        [v13 addObject:v44];
      }
      uint64_t v45 = (void *)[v13 count];
      if (v45)
      {
        uint64_t v45 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 children:v13];
      }
      id v12 = v45;
    }
  }

  return v12;
}

void __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v4 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [v4 addObjectsFromArray:v5];
    }
    else {
      [v4 addObject:v5];
    }
  }
}

void __93__CKChatController_ClickyOrbConformance___menuForChatItem_withParentChatItem_menuAppearance___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained actionEditIsTappedForChatItem:*(void *)(a1 + 32)];
}

- (BOOL)_shouldConfigureChatItemMenuForCommSafety:(id)a3
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v26 = a3;
  double v3 = [MEMORY[0x1E4F6E6D0] sharedManager];
  int v4 = [v3 isFeatureEnabled];

  if (v4
    && (([v26 supportsCommunicationSafety] & 1) != 0
     || ([v26 visibleAssociatedMessageChatItems],
         id v5 = objc_claimAutoreleasedReturnValue(),
         uint64_t v6 = [v5 count],
         v5,
         v6)))
  {
    id v25 = [MEMORY[0x1E4F6BCC8] sharedInstance];
    id v7 = [v26 commSafetyTransferGUID];
    id v24 = [v25 transferForGUID:v7];

    if (+[CKCommSafetyHelper shouldDisableTranscriptCapabilitiesForFileTransfer:v24])
    {
LABEL_22:
      BOOL v22 = 1;
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      id v8 = [v26 visibleAssociatedMessageChatItems];
      uint64_t v9 = [v8 countByEnumeratingWithState:&v34 objects:v38 count:16];
      if (v9)
      {
        uint64_t v10 = *(void *)v35;
        while (2)
        {
          for (uint64_t i = 0; i != v9; ++i)
          {
            if (*(void *)v35 != v10) {
              objc_enumerationMutation(v8);
            }
            id v12 = *(void **)(*((void *)&v34 + 1) + 8 * i);
            int v13 = [v12 supportsCommunicationSafety];
            int v14 = [v12 commSafetyTransferGUID];
            if (v14) {
              int v15 = v13;
            }
            else {
              int v15 = 0;
            }
            if (v15 == 1)
            {
              uint64_t v16 = [MEMORY[0x1E4F6BCC8] sharedInstance];
              int v17 = [v12 commSafetyTransferGUID];
              uint64_t v18 = [(id)v16 transferForGUID:v17];

              LOBYTE(v16) = +[CKCommSafetyHelper shouldDisableTranscriptCapabilitiesForFileTransfer:v18];
              if (v16)
              {

                goto LABEL_22;
              }
            }
          }
          uint64_t v9 = [v8 countByEnumeratingWithState:&v34 objects:v38 count:16];
          if (v9) {
            continue;
          }
          break;
        }
      }

      uint64_t v30 = 0;
      double v31 = &v30;
      uint64_t v32 = 0x2020000000;
      char v33 = 0;
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v19 = v26;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 3221225472;
        aBlock[2] = __84__CKChatController_ClickyOrbConformance___shouldConfigureChatItemMenuForCommSafety___block_invoke;
        aBlock[3] = &unk_1E5621100;
        id v29 = v25;
        uint64_t v20 = _Block_copy(aBlock);
        int v21 = [v19 text];
        v27[0] = MEMORY[0x1E4F143A8];
        v27[1] = 3221225472;
        v27[2] = __84__CKChatController_ClickyOrbConformance___shouldConfigureChatItemMenuForCommSafety___block_invoke_2;
        v27[3] = &unk_1E5621128;
        v27[4] = &v30;
        objc_msgSend(v21, "__im_enumerateAdaptiveImageGlyphFileTransfersUsingFileTransferProvider:block:", v20, v27);
      }
      BOOL v22 = *((unsigned char *)v31 + 24) != 0;
      _Block_object_dispose(&v30, 8);
    }
  }
  else
  {
    BOOL v22 = 0;
  }

  return v22;
}

uint64_t __84__CKChatController_ClickyOrbConformance___shouldConfigureChatItemMenuForCommSafety___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) transferForGUID:a2];
}

BOOL __84__CKChatController_ClickyOrbConformance___shouldConfigureChatItemMenuForCommSafety___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  BOOL result = +[CKCommSafetyHelper shouldDisableTranscriptCapabilitiesForFileTransfer:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    *a5 = 1;
  }
  return result;
}

- (id)_highlightActionForChatItem:(id)a3
{
  id v4 = a3;
  if ([v4 syndicationBehavior] == 1
    && ([(CKCoreChatController *)self chat],
        id v5 = objc_claimAutoreleasedReturnValue(),
        char v6 = [v5 isBusinessChat],
        v5,
        (v6 & 1) == 0))
  {
    int v8 = [v4 isHighlighted];
    uint64_t v9 = CKFrameworkBundle();
    uint64_t v10 = v9;
    if (v8) {
      char v11 = @"REMOVE_PIN_ACTION";
    }
    else {
      char v11 = @"ADD_PIN_ACTION";
    }
    id v12 = [v9 localizedStringForKey:v11 value:&stru_1EDE4CA38 table:@"ChatKit"];

    if ([v4 isHighlighted]) {
      int v13 = @"pin.slash";
    }
    else {
      int v13 = @"pin";
    }
    int v14 = [MEMORY[0x1E4F42A80] systemImageNamed:v13];
    id location = 0;
    objc_initWeak(&location, self);
    int v15 = (void *)MEMORY[0x1E4F426E8];
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __70__CKChatController_ClickyOrbConformance___highlightActionForChatItem___block_invoke;
    v17[3] = &unk_1E5621150;
    id v18 = v4;
    objc_copyWeak(&v20, &location);
    id v19 = self;
    id v7 = [v15 actionWithTitle:v12 image:v14 identifier:0 handler:v17];
    objc_destroyWeak(&v20);

    objc_destroyWeak(&location);
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void __70__CKChatController_ClickyOrbConformance___highlightActionForChatItem___block_invoke(id *a1)
{
  if ([a1[4] isHighlighted]) {
    uint64_t v2 = 8;
  }
  else {
    uint64_t v2 = 4;
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v4 = [WeakRetained conversation];
  id v5 = [(id)v4 chat];
  char v6 = [a1[4] IMChatItem];
  id v7 = [v6 guid];
  uint64_t v8 = [a1[4] messagePartRange];
  objc_msgSend(v5, "sendSyndicationAction:forMessagePartGUID:syndicatedMessagePartRange:", v2, v7, v8, v9);

  uint64_t v10 = [a1[4] IMChatItem];
  objc_opt_class();
  LOBYTE(v4) = objc_opt_isKindOfClass();

  if (v4)
  {
    char v11 = [a1[4] IMChatItem];
    id v21 = [v11 messageItem];

    id v12 = [v21 swyAppName];
    uint64_t v13 = [v21 swyBundleID];
    int v14 = (void *)v13;
    if (v12 && v13)
    {
      if (v2 == 8)
      {
        id v20 = [MEMORY[0x1E4F6EA28] sharedManager];
        [v20 decrementPinCountForBundleID:v14];
      }
      else
      {
        int v15 = [MEMORY[0x1E4F6EA28] sharedManager];
        [v15 incrementPinCountForBundleID:v14];

        uint64_t v16 = [MEMORY[0x1E4F6EA28] sharedManager];
        uint64_t v17 = [v16 getPinCountForBundleID:v14];

        id v18 = [MEMORY[0x1E4F6EA28] sharedManager];
        char v19 = [v18 isSharedWithYouEnabledForApplicationWithBundleID:v14];

        if (v17 >= 3 && (v19 & 1) == 0) {
          [a1[5] _showAutoDonationAlertForAppName:v12 bundleID:v14];
        }
      }
    }
  }
}

- (void)_showAutoDonationAlertForAppName:(id)a3 bundleID:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v6 length] && objc_msgSend(v7, "length"))
  {
    uint64_t v8 = NSString;
    uint64_t v9 = CKFrameworkBundle();
    uint64_t v10 = [v9 localizedStringForKey:@"SHARED_WITH_YOU_AUTO_DONATION_ALERT" value:&stru_1EDE4CA38 table:@"ChatKit"];
    char v11 = objc_msgSend(v8, "stringWithFormat:", v10, v6, v6);

    id v12 = [MEMORY[0x1E4F42738] sharedApplication];
    uint64_t v13 = [v12 userInterfaceLayoutDirection];

    if (v13 == 1) {
      int v14 = @"\u200F";
    }
    else {
      int v14 = @"\u200E";
    }
    int v15 = [(__CFString *)v14 stringByAppendingString:v11];

    uint64_t v16 = +[CKAlertController alertControllerWithTitle:v15 message:0 preferredStyle:0];
    uint64_t v17 = CKFrameworkBundle();
    id v18 = [v17 localizedStringForKey:@"SHARED_WITH_YOU_OK_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
    v23[0] = MEMORY[0x1E4F143A8];
    v23[1] = 3221225472;
    v23[2] = __84__CKChatController_ClickyOrbConformance___showAutoDonationAlertForAppName_bundleID___block_invoke;
    v23[3] = &unk_1E5621178;
    id v24 = v7;
    char v19 = +[CKAlertAction actionWithTitle:v18 style:0 handler:v23];
    [v16 addAction:v19];

    id v20 = CKFrameworkBundle();
    id v21 = [v20 localizedStringForKey:@"SHARED_WITH_YOU_CANCEL_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
    BOOL v22 = +[CKAlertAction actionWithTitle:v21 style:1 handler:0];
    [v16 addAction:v22];

    [(CKChatController *)self presentViewController:v16 animated:1 completion:0];
  }
  else
  {
    int v15 = IMLogHandleForCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(ClickyOrbConformance) _showAutoDonationAlertForAppName:bundleID:]((uint64_t)v6, (uint64_t)v7, v15);
    }
  }
}

void __84__CKChatController_ClickyOrbConformance___showAutoDonationAlertForAppName_bundleID___block_invoke(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F6EA28] sharedManager];
  [v2 setSharedWithYouEnabled:1 forApplicationWithBundleID:*(void *)(a1 + 32)];
}

- (id)_responsesSubmenuForChatItem:(id)a3 withParentChatItem:(id)a4 menuAppearance:(int64_t)a5
{
  id v8 = a3;
  uint64_t v9 = (void *)MEMORY[0x1E4F1CA48];
  id v10 = a4;
  char v11 = [v9 array];
  if (a5 == 2 || CKIsRunningInMacCatalyst())
  {
    id v12 = [(CKChatController *)self tapbackMenuElementsForChatItem:v8];
    uint64_t v13 = v12;
    if (v12 && [v12 count])
    {
      if (CKIsRunningInMacCatalyst())
      {
        [v11 addObjectsFromArray:v13];
      }
      else
      {
        int v14 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v13];
        [v11 addObject:v14];
      }
    }
  }
  int v15 = [(CKChatController *)self _inlineReplyActionForChatItem:v8];
  if (v15) {
    [v11 addObject:v15];
  }
  uint64_t v16 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v17 = [v16 balloonViewForChatItem:v10];

  id v18 = [(CKChatController *)self _addStickerActionForChatItem:v8 parentChatItem:v10 sourceView:v17];

  if (v18)
  {
    if (CKIsRunningInMessagesViewService()) {
      [v18 setAttributes:1];
    }
    [v11 addObject:v18];
  }
  if ([v11 count])
  {
    char v19 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v11];
  }
  else
  {
    char v19 = 0;
  }

  return v19;
}

- (id)_inlineReplyActionForChatItem:(id)a3
{
  id v4 = a3;
  if ([(CKCoreChatController *)self wantsReplyButton])
  {
    id location = 0;
    objc_initWeak(&location, self);
    if (CKIsRunningInMacCatalyst())
    {
      id v5 = CKFrameworkBundle();
      [v5 localizedStringForKey:@"INLINE_REPLY_MENU" value:&stru_1EDE4CA38 table:@"ChatKit"];
    }
    else
    {
      id v5 = CKFrameworkBundle();
      [v5 localizedStringForKey:@"INLINE_REPLY_ORB_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
    id v7 = };

    id v8 = (void *)MEMORY[0x1E4F426E8];
    uint64_t v9 = [MEMORY[0x1E4F42A80] systemImageNamed:@"arrowshape.turn.up.backward"];
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 3221225472;
    uint64_t v13 = __72__CKChatController_ClickyOrbConformance___inlineReplyActionForChatItem___block_invoke;
    int v14 = &unk_1E5620ED8;
    objc_copyWeak(&v15, &location);
    id v6 = [v8 actionWithTitle:v7 image:v9 identifier:0 handler:&v11];

    if ((objc_msgSend(v4, "canInlineReply", v11, v12, v13, v14) & 1) == 0) {
      [v6 setAttributes:1];
    }
    objc_destroyWeak(&v15);

    objc_destroyWeak(&location);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void __72__CKChatController_ClickyOrbConformance___inlineReplyActionForChatItem___block_invoke(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = [WeakRetained collectionViewController];

  if (CKIsRunningInMacCatalyst()) {
    [v5 hideTranscriptTimestampsIfNeeded];
  }
  double v3 = [v5 collectionView];
  [v3 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerClickyOrb"];

  id v4 = objc_loadWeakRetained(v1);
  [v4 setWantsInlineOverlay:1];
}

- (BOOL)_shouldShowSaveStickerActionForChatItem:(id)a3
{
  double v3 = +[CKUtilities saveableStickerFromChatItem:a3];

  return v3 != 0;
}

- (id)_saveStickerActionForChatItem:(id)a3 sourceView:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(CKChatController *)self _shouldShowSaveStickerActionForChatItem:v6])
  {
    id v8 = CKFrameworkBundle();
    uint64_t v9 = [v8 localizedStringForKey:@"SAVE_TO_STICKERS" value:&stru_1EDE4CA38 table:@"ChatKit"];

    id v10 = [MEMORY[0x1E4F42A80] _systemImageNamed:@"square.and.arrow.down"];
    id location = 0;
    objc_initWeak(&location, self);
    uint64_t v11 = (void *)MEMORY[0x1E4F426E8];
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __83__CKChatController_ClickyOrbConformance___saveStickerActionForChatItem_sourceView___block_invoke;
    v14[3] = &unk_1E5621150;
    id v15 = v7;
    objc_copyWeak(&v17, &location);
    id v16 = v6;
    uint64_t v12 = [v11 actionWithTitle:v9 image:v10 identifier:0 handler:v14];

    objc_destroyWeak(&v17);
    objc_destroyWeak(&location);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

void __83__CKChatController_ClickyOrbConformance___saveStickerActionForChatItem_sourceView___block_invoke(uint64_t a1)
{
  id v2 = +[CKUIBehavior sharedBehaviors];
  uint64_t v3 = [v2 shouldAnimateStickerOnSave];

  if (v3) {
    id v4 = 0;
  }
  else {
    id v4 = *(void **)(a1 + 32);
  }
  id v5 = v4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained saveStickerFromChatItem:*(void *)(a1 + 40) pluginSourceView:v5 animateFlyIn:v3];
}

- (id)_addStickerActionForChatItem:(id)a3 parentChatItem:(id)a4 sourceView:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v12 = [v11 isReactWithAStickerEnabled];

  if (v12
    && ![(CKChatController *)self _shouldShowSaveStickerActionForChatItem:v8])
  {
    uint64_t v13 = [(CKCoreChatController *)self chat];
    if ([v13 supportsCapabilities:0x8000]
      && ([v8 canAttachStickers] & 1) != 0)
    {
      int v14 = [(CKCoreChatController *)self chat];
      int v15 = [v14 canSend];

      if (v15)
      {
        id location = 0;
        objc_initWeak(&location, self);
        if (CKIsRunningInMacCatalyst())
        {
          id v16 = CKFrameworkBundle();
          [v16 localizedStringForKey:@"ADD_STICKER_ELLIPSIS" value:&stru_1EDE4CA38 table:@"ChatKit"];
        }
        else
        {
          id v16 = CKFrameworkBundle();
          [v16 localizedStringForKey:@"ADD_STICKER" value:&stru_1EDE4CA38 table:@"ChatKit"];
        char v19 = };

        id v20 = (void *)MEMORY[0x1E4F426E8];
        id v21 = [MEMORY[0x1E4F42A80] _systemImageNamed:@"sticker.badge.plus"];
        v22[0] = MEMORY[0x1E4F143A8];
        v22[1] = 3221225472;
        v22[2] = __97__CKChatController_ClickyOrbConformance___addStickerActionForChatItem_parentChatItem_sourceView___block_invoke;
        v22[3] = &unk_1E56211A0;
        objc_copyWeak(&v26, &location);
        id v23 = v8;
        id v24 = v9;
        id v25 = v10;
        id v17 = [v20 actionWithTitle:v19 image:v21 identifier:0 handler:v22];

        objc_destroyWeak(&v26);
        objc_destroyWeak(&location);
        goto LABEL_10;
      }
    }
    else
    {
    }
  }
  id v17 = 0;
LABEL_10:

  return v17;
}

void __97__CKChatController_ClickyOrbConformance___addStickerActionForChatItem_parentChatItem_sourceView___block_invoke(uint64_t a1)
{
  id v2 = IMStickersExtensionIdentifier();
  IMBalloonExtensionIDWithSuffix();
  id v22 = (id)objc_claimAutoreleasedReturnValue();

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v4 = [WeakRetained inputController];
  uint64_t v5 = [v4 appPresentationStyleForShowingPluginID:v22];

  id v6 = objc_loadWeakRetained((id *)(a1 + 56));
  [v6 setIgnoresAutomaticScrollsTowardBottom:1];

  if (!v5)
  {
    id v7 = objc_loadWeakRetained((id *)(a1 + 56));
    [v7 updateChatItemBalloonViewAndStickerViews:*(void *)(a1 + 32) hidden:1];

    id v8 = objc_loadWeakRetained((id *)(a1 + 56));
    [v8 showFullScreenBalloonFocusForChatItem:*(void *)(a1 + 40)];
  }
  id v9 = objc_loadWeakRetained((id *)(a1 + 56));
  [v9 dismissKeyboard];

  id v10 = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v11 = [v10 inputController];
  uint64_t v12 = *(void *)(a1 + 32);
  id v13 = objc_loadWeakRetained((id *)(a1 + 56));
  int v14 = [v13 collectionViewController];
  int v15 = [v14 cellForChatItem:*(void *)(a1 + 32)];
  [v11 beginStickerReactionSessionWithChatItem:v12 cell:v15];

  id v16 = objc_loadWeakRetained((id *)(a1 + 56));
  id v17 = [v16 inputController];
  [v17 showPluginWithExtensionIdentifier:v22 sourceView:*(void *)(a1 + 48)];

  id v18 = objc_loadWeakRetained((id *)(a1 + 56));
  char v19 = [v18 inputController];
  [v19 setStickerPickerMessagePartChatItem:*(void *)(a1 + 32)];

  id v20 = objc_loadWeakRetained((id *)(a1 + 56));
  id v21 = [v20 inputController];
  [v21 setStickerPickerMessagePartParentChatItem:*(void *)(a1 + 40)];
}

- (id)_retractionActionForChatItem:(id)a3
{
  id v4 = a3;
  id location = 0;
  objc_initWeak(&location, self);
  uint64_t v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  if (![v5 isScheduledMessagesCoreEnabled] || objc_msgSend(v4, "scheduleType") != 2)
  {

    goto LABEL_7;
  }
  uint64_t v6 = [v4 scheduleState];

  if (v6 != 2)
  {
LABEL_7:
    int v15 = CKFrameworkBundle();
    id v8 = [v15 localizedStringForKey:@"UNDO_SEND_ACTION" value:&stru_1EDE4CA38 table:@"ChatKit"];

    id v16 = +[CKUIBehavior sharedBehaviors];
    id v10 = [v16 contextMenuUndoSendIcon];

    id v17 = (void *)MEMORY[0x1E4F426E8];
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = __71__CKChatController_ClickyOrbConformance___retractionActionForChatItem___block_invoke_2;
    v19[3] = &unk_1E56210D8;
    uint64_t v12 = &v21;
    objc_copyWeak(&v21, &location);
    id v20 = v4;
    id v13 = [v17 actionWithTitle:v8 image:v10 identifier:0 handler:v19];
    int v14 = &v20;
    goto LABEL_8;
  }
  id v7 = CKFrameworkBundle();
  id v8 = [v7 localizedStringForKey:@"DELETE_SCHEDULED_ACTION" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id v9 = +[CKUIBehavior sharedBehaviors];
  id v10 = [v9 contextMenuCancelScheduledMessageIcon];

  uint64_t v11 = (void *)MEMORY[0x1E4F426E8];
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __71__CKChatController_ClickyOrbConformance___retractionActionForChatItem___block_invoke;
  v22[3] = &unk_1E56210D8;
  uint64_t v12 = &v24;
  objc_copyWeak(&v24, &location);
  id v23 = v4;
  id v13 = [v11 actionWithTitle:v8 image:v10 identifier:0 handler:v22];
  int v14 = &v23;
  if (!CKIsRunningInMacCatalyst()) {
    [v13 setAttributes:2];
  }
LABEL_8:

  objc_destroyWeak(v12);
  objc_destroyWeak(&location);

  return v13;
}

void __71__CKChatController_ClickyOrbConformance___retractionActionForChatItem___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained actionCancelIsTappedForChatItem:*(void *)(a1 + 32)];
}

void __71__CKChatController_ClickyOrbConformance___retractionActionForChatItem___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained actionRetractIsTappedForChatItem:*(void *)(a1 + 32)];
}

- (void)showFullScreenBalloonFocusForChatItem:(id)a3
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      id v28 = v4;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "showFullScreenBalloonFocusForChatItem, chatItem: %@", buf, 0xCu);
    }
  }
  uint64_t v6 = [(CKCoreChatController *)self chat];
  [v6 beginHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B930]];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"FullscreenBalloonMenuVisible"];
  id v7 = [(CKCoreChatController *)self inputController];
  int v8 = [v7 isAppCardPresented];

  id v9 = +[CKFullScreenBalloonViewDisplayConfiguration addStickerContextDismissingAppCardOnExit:v8 ^ 1u];
  id v10 = [(CKCoreChatController *)self _fullScreenBalloonViewControllerWithChatItem:v4 displayConfiguration:v9];
  [(CKCoreChatController *)self setFullScreenBalloonViewController:v10];
  uint64_t v11 = +[CKUIBehavior sharedBehaviors];
  if ([v11 canPresentOverKeyboard]) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = 6;
  }
  [v10 setModalPresentationStyle:v12];

  [(CKChatController *)self addChildViewController:v10];
  id v13 = [(CKChatController *)self view];
  int v14 = [v10 view];
  [v13 addSubview:v14];

  [v10 didMoveToParentViewController:self];
  int v15 = [(CKChatController *)self view];
  [v15 bounds];
  double v17 = v16;
  id v18 = [(CKChatController *)self view];
  [v18 bounds];
  double v20 = v19;
  id v21 = [v10 view];
  objc_msgSend(v21, "setFrame:", 0.0, 0.0, v17, v20);

  id v22 = [v10 view];
  [v22 setNeedsLayout];

  id v23 = [v10 view];
  [v23 layoutIfNeeded];

  if (![(CKCoreChatController *)self isInline])
  {
    id v24 = [(CKChatController *)self navbarCanvasViewController];
    [v24 setNavBarContext:4];

    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    v26[2] = __80__CKChatController_ClickyOrbConformance__showFullScreenBalloonFocusForChatItem___block_invoke;
    v26[3] = &unk_1E5620C40;
    v26[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:v26 animations:0.15];
  }
  if (IMOSLoggingEnabled())
  {
    id v25 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18EF18000, v25, OS_LOG_TYPE_INFO, "showFullScreenBalloonFocusForChatItem: _fullScreenBalloonViewController has been presented", buf, 2u);
    }
  }
}

void __80__CKChatController_ClickyOrbConformance__showFullScreenBalloonFocusForChatItem___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navbarCanvasViewController];
  uint64_t v3 = [v2 backButtonView];
  [v3 setAlpha:0.0];

  id v5 = [*(id *)(a1 + 32) navbarCanvasViewController];
  id v4 = [v5 unifiedCallButton];
  [v4 setAlpha:0.0];
}

- (id)_forwardAndCopyMenuForChatItem:(id)a3
{
  uint64_t v3 = [(CKChatController *)self _forwardAndCopyActionsForChatItem:a3];
  if ([v3 count])
  {
    id v4 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v3];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

- (id)_forwardAndCopyActionsForChatItem:(id)a3
{
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F1CA48] array];
  uint64_t v6 = [(CKChatController *)self _forwardActionForChatItem:v4];
  if (v6) {
    [v5 addObject:v6];
  }
  id v7 = [(CKChatController *)self _copyActionForChatItem:v4 shouldUseTopMostChatItemIfAggregateChatItem:1];
  if (v7) {
    [v5 addObject:v7];
  }
  if (CKIsRunningInMacCatalyst())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v8 = [(CKChatController *)self _copyActionForChatItem:v4 shouldUseTopMostChatItemIfAggregateChatItem:0];
      if (v8) {
        [v5 addObject:v8];
      }
    }
  }

  return v5;
}

- (id)_forwardActionForChatItem:(id)a3
{
  id v4 = a3;
  id location = 0;
  objc_initWeak(&location, self);
  if (CKIsRunningInMacCatalyst()
    && ![(CKCoreChatController *)self isInline]
    && [v4 canForward])
  {
    id v5 = (void *)MEMORY[0x1E4F426E8];
    uint64_t v6 = CKFrameworkBundle();
    id v7 = [v6 localizedStringForKey:@"FORWARD_ELLIPSIS" value:&stru_1EDE4CA38 table:@"ChatKit"];
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = __68__CKChatController_ClickyOrbConformance___forwardActionForChatItem___block_invoke;
    v10[3] = &unk_1E56210D8;
    objc_copyWeak(&v12, &location);
    id v11 = v4;
    id v8 = [v5 actionWithTitle:v7 image:0 identifier:0 handler:v10];

    objc_destroyWeak(&v12);
  }
  else
  {
    id v8 = 0;
  }
  objc_destroyWeak(&location);

  return v8;
}

void __68__CKChatController_ClickyOrbConformance___forwardActionForChatItem___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x1E4F143B8];
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setIsShowingPreview:0];

  id v4 = +[CKUIBehavior sharedBehaviors];
  int v5 = [v4 enableBalloonTextSelection];

  if (v5)
  {
    id v6 = objc_loadWeakRetained(v2);
    id v7 = [v6 collectionViewController];
    id v8 = [v7 selectedChatItems];

    if (![v8 count])
    {
      v26[0] = *(void *)(a1 + 32);
      uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:1];

      id v8 = (void *)v9;
    }
    id v10 = objc_loadWeakRetained(v2);
    id v11 = [v10 entryView];
    uint64_t v12 = [v11 shouldShowSubject];
    id v13 = objc_loadWeakRetained(v2);
    int v14 = [v13 chatInputTranscriptIdentifier];
    int v15 = +[CKComposition compositionForMessageParts:v8 preserveSubject:v12 contextIdentifier:v14];

    double v16 = objc_loadWeakRetained(v2);
    double v17 = [v16 delegate];
    id v18 = objc_loadWeakRetained(v2);
    [v17 chatController:v18 forwardComposition:v15];
  }
  else
  {
    uint64_t v25 = *(void *)(a1 + 32);
    double v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v25 count:1];
    id v20 = objc_loadWeakRetained(v2);
    id v21 = [v20 entryView];
    uint64_t v22 = [v21 shouldShowSubject];
    id v23 = objc_loadWeakRetained(v2);
    id v24 = [v23 chatInputTranscriptIdentifier];
    id v8 = +[CKComposition compositionForMessageParts:v19 preserveSubject:v22 contextIdentifier:v24];

    int v15 = objc_loadWeakRetained(v2);
    double v16 = [v15 delegate];
    double v17 = objc_loadWeakRetained(v2);
    [v16 chatController:v17 forwardComposition:v8];
  }
}

- (id)_copyActionForChatItem:(id)a3 shouldUseTopMostChatItemIfAggregateChatItem:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if ([v6 canCopy])
  {
    id v7 = v6;
    if (v4)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v8 = [(CKChatController *)self currentTopChatItemForAggregateChatItem:v7];

        id v7 = (id)v8;
      }
    }
    uint64_t v9 = CKFrameworkBundle();
    id v10 = [v9 localizedStringForKey:@"COPY" value:&stru_1EDE4CA38 table:@"ChatKit"];

    if (!v4)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v26 = self;
        id v27 = v10;
        long long v30 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        id v25 = v7;
        id v11 = [v25 mediaObjects];
        uint64_t v12 = [v11 countByEnumeratingWithState:&v30 objects:v34 count:16];
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = 0;
          uint64_t v15 = 0;
          uint64_t v16 = 0;
          uint64_t v17 = *(void *)v31;
          do
          {
            for (uint64_t i = 0; i != v13; ++i)
            {
              if (*(void *)v31 != v17) {
                objc_enumerationMutation(v11);
              }
              double v19 = *(void **)(*((void *)&v30 + 1) + 8 * i);
              if ([v19 mediaType] == 2)
              {
                ++v15;
              }
              else if ([v19 mediaType] == 3)
              {
                ++v14;
              }
              else
              {
                ++v16;
              }
            }
            uint64_t v13 = [v11 countByEnumeratingWithState:&v30 objects:v34 count:16];
          }
          while (v13);
        }
        else
        {
          uint64_t v14 = 0;
          uint64_t v15 = 0;
          uint64_t v16 = 0;
        }

        id v10 = [(CKChatController *)v26 _localizedTitleStringForAggregateAction:0 numberOfPhotos:v14 numberOfVideos:v15 numberOfOther:v16];
      }
    }
    id v21 = [MEMORY[0x1E4F42A80] systemImageNamed:@"doc.on.doc"];
    uint64_t v22 = (void *)MEMORY[0x1E4F426E8];
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    v28[2] = __109__CKChatController_ClickyOrbConformance___copyActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke;
    v28[3] = &unk_1E56211C8;
    id v29 = v7;
    id v23 = v7;
    id v20 = [v22 actionWithTitle:v10 image:v21 identifier:0 handler:v28];
  }
  else
  {
    id v20 = 0;
  }

  return v20;
}

void __109__CKChatController_ClickyOrbConformance___copyActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) pasteboardItemProviders];
  id v1 = [MEMORY[0x1E4F42C50] generalPasteboard];
  [v1 setItemProviders:v2];
}

- (void)actionEditIsTappedForChatItem:(id)a3
{
}

- (id)_deleteMenuForChatItem:(id)a3
{
  uint64_t v3 = [(CKChatController *)self _deleteActionsForChatItem:a3];
  if ([v3 count])
  {
    BOOL v4 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v3];
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

- (id)_deleteActionsForChatItem:(id)a3
{
  id v4 = a3;
  int v5 = [MEMORY[0x1E4F1CA48] array];
  id v6 = [(CKChatController *)self _deleteActionForChatItem:v4 shouldUseTopMostChatItemIfAggregateChatItem:1];
  if (v6) {
    [v5 addObject:v6];
  }
  if (CKIsRunningInMacCatalyst())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v7 = [(CKChatController *)self _deleteActionForChatItem:v4 shouldUseTopMostChatItemIfAggregateChatItem:0];
      if (v7) {
        [v5 addObject:v7];
      }
    }
  }

  return v5;
}

- (id)_deleteActionForChatItem:(id)a3 shouldUseTopMostChatItemIfAggregateChatItem:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = v5;
  if (v4)
  {
    objc_opt_class();
    id v6 = v5;
    if (objc_opt_isKindOfClass())
    {
      id v6 = [(CKChatController *)self currentTopChatItemForAggregateChatItem:v5];
    }
  }
  if (v6)
  {
    id v7 = CKFrameworkBundle();
    id v25 = [v7 localizedStringForKey:@"DELETE_ELLIPSIS" value:&stru_1EDE4CA38 table:@"ChatKit"];

    if (!v4)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        long long v30 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        id v23 = v6;
        uint64_t v8 = [v23 mediaObjects];
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v12 = [v8 countByEnumeratingWithState:&v30 objects:v34 count:16];
        if (v12)
        {
          uint64_t v13 = *(void *)v31;
          do
          {
            for (uint64_t i = 0; i != v12; ++i)
            {
              if (*(void *)v31 != v13) {
                objc_enumerationMutation(v8);
              }
              uint64_t v15 = *(void **)(*((void *)&v30 + 1) + 8 * i);
              if ([v15 mediaType] == 2)
              {
                ++v10;
              }
              else if ([v15 mediaType] == 3)
              {
                ++v9;
              }
              else
              {
                ++v11;
              }
            }
            uint64_t v12 = [v8 countByEnumeratingWithState:&v30 objects:v34 count:16];
          }
          while (v12);
        }

        uint64_t v16 = [(CKChatController *)self _localizedTitleStringForAggregateAction:1 numberOfPhotos:v9 numberOfVideos:v10 numberOfOther:v11];

        id v25 = v16;
      }
    }
    uint64_t v17 = [MEMORY[0x1E4F42A80] systemImageNamed:@"trash"];
    id location = 0;
    objc_initWeak(&location, self);
    id v18 = (void *)MEMORY[0x1E4F426E8];
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    void v26[2] = __111__CKChatController_ClickyOrbConformance___deleteActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke;
    v26[3] = &unk_1E56210D8;
    objc_copyWeak(&v28, &location);
    id v27 = v6;
    double v19 = [v18 actionWithTitle:v25 image:v17 identifier:0 handler:v26];
    [v19 setAttributes:2];

    objc_destroyWeak(&v28);
    objc_destroyWeak(&location);

    id v20 = v25;
  }
  else
  {
    id v21 = IMLogHandleForCategory();
    id v20 = v21;
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      -[CKChatController(ClickyOrbConformance) _deleteActionForChatItem:shouldUseTopMostChatItemIfAggregateChatItem:](v21);
      double v19 = 0;
      id v20 = v21;
    }
    else
    {
      double v19 = 0;
    }
  }

  return v19;
}

void __111__CKChatController_ClickyOrbConformance___deleteActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke(uint64_t a1)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = [WeakRetained collectionViewController];
  v5[0] = *(void *)(a1 + 32);
  BOOL v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v5 count:1];
  [v3 deleteChatItems:v4 sender:0];
}

- (id)_exportMenuForChatItem:(id)a3
{
  uint64_t v3 = [(CKChatController *)self _exportActionsForChatItem:a3];
  if ([v3 count])
  {
    BOOL v4 = [MEMORY[0x1E4F42B80] menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v3];
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

- (id)_exportActionsForChatItem:(id)a3
{
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F1CA48] array];
  id v6 = [(CKChatController *)self _exportActionForChatItem:v4 shouldUseTopMostChatItemIfAggregateChatItem:1];
  if (v6) {
    [v5 addObject:v6];
  }
  if (CKIsRunningInMacCatalyst())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v7 = [(CKChatController *)self _exportActionForChatItem:v4 shouldUseTopMostChatItemIfAggregateChatItem:0];
      if (v7) {
        [v5 addObject:v7];
      }
    }
  }

  return v5;
}

- (id)_exportActionForChatItem:(id)a3 shouldUseTopMostChatItemIfAggregateChatItem:(BOOL)a4
{
  BOOL v37 = a4;
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v39 = [MEMORY[0x1E4F42A80] systemImageNamed:@"square.and.arrow.down"];
  if (![v4 canExport])
  {
    uint64_t v9 = 0;
    goto LABEL_49;
  }
  id v5 = v4;
  if (v37 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v6 = [(CKChatController *)self currentTopChatItemForAggregateChatItem:v5];

    if (IMOSLoggingEnabled())
    {
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        id v52 = v5;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Request to export top-most chat item for chatItem: %@", buf, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        id v52 = v6;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Request to export top-most chat item for chatItemToExport: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    id v6 = v5;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v10 = v6;
    long long v36 = [v10 mediaObjects];
    uint64_t v35 = [v10 momentShareURL];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v10 = v6;
      uint64_t v11 = [v10 mediaObject];
      uint64_t v12 = (void *)v11;
      if (v11)
      {
        uint64_t v50 = v11;
        long long v36 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v50 count:1];
        uint64_t v35 = CKMomentShareURLForMediaObjects(v36);
      }
      else
      {
        uint64_t v13 = IMLogHandleForCategory();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          -[CKChatController(ClickyOrbConformance) _exportActionForChatItem:shouldUseTopMostChatItemIfAggregateChatItem:]();
        }

        uint64_t v35 = 0;
        long long v36 = 0;
      }
    }
    else
    {
      uint64_t v10 = IMLogHandleForCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(ClickyOrbConformance) _exportActionForChatItem:shouldUseTopMostChatItemIfAggregateChatItem:]((uint64_t)v6, v10);
      }
      uint64_t v35 = 0;
      long long v36 = 0;
    }
  }

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (CKIsRunningInMacCatalyst())
    {
      long long v47 = 0u;
      long long v48 = 0u;
      long long v45 = 0u;
      long long v46 = 0u;
      id v17 = v36;
      uint64_t v18 = [v17 countByEnumeratingWithState:&v45 objects:v49 count:16];
      if (v18)
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = *(void *)v46;
        do
        {
          for (uint64_t i = 0; i != v18; ++i)
          {
            if (*(void *)v46 != v22) {
              objc_enumerationMutation(v17);
            }
            id v24 = *(void **)(*((void *)&v45 + 1) + 8 * i);
            if ([v24 mediaType] == 2)
            {
              ++v20;
            }
            else if ([v24 mediaType] == 3)
            {
              ++v19;
            }
            else
            {
              ++v21;
            }
          }
          uint64_t v18 = [v17 countByEnumeratingWithState:&v45 objects:v49 count:16];
        }
        while (v18);

        if (v21)
        {
          uint64_t v16 = CKFrameworkBundle();
          uint64_t v25 = [v16 localizedStringForKey:@"SAVE_TO_DOWNLOADS" value:&stru_1EDE4CA38 table:@"ChatKit"];
LABEL_47:
          uint64_t v15 = (void *)v25;
          goto LABEL_48;
        }
      }
      else
      {

        uint64_t v20 = 0;
        uint64_t v19 = 0;
      }
      if (!v37)
      {
        if (v20) {
          BOOL v31 = 1;
        }
        else {
          BOOL v31 = v19 == 0;
        }
        if (v19 == 0 && v20 != 0) {
          long long v32 = @"_VIDEOS";
        }
        else {
          long long v32 = @"_ITEMS";
        }
        if (v31) {
          long long v33 = v32;
        }
        else {
          long long v33 = @"_PHOTOS";
        }
        uint64_t v16 = [@"ADD_ALL_TO_PHOTOS_LIBRARY" stringByAppendingFormat:v33];
        long long v34 = CKFrameworkBundle();
        uint64_t v15 = [v34 localizedStringForKey:v16 value:&stru_1EDE4CA38 table:@"ChatKit"];

        goto LABEL_48;
      }
      uint64_t v16 = CKFrameworkBundle();
      uint64_t v25 = [v16 localizedStringForKey:@"ADD_TO_PHOTOS_LIBRARY" value:&stru_1EDE4CA38 table:@"ChatKit"];
      goto LABEL_47;
    }
    uint64_t v16 = CKFrameworkBundle();
    uint64_t v25 = [v16 localizedStringForKey:@"BALLOON_EXPORT_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];
    goto LABEL_47;
  }
  uint64_t v14 = CKFrameworkBundle();
  uint64_t v15 = [v14 localizedStringForKey:@"AUDIO_MESSAGE_SAVE" value:&stru_1EDE4CA38 table:@"ChatKit"];

  [MEMORY[0x1E4F42A80] systemImageNamed:@"waveform.badge.plus"];
  v39 = uint64_t v16 = v39;
LABEL_48:

  id v26 = (void *)MEMORY[0x1E4F426E8];
  v40[0] = MEMORY[0x1E4F143A8];
  v40[1] = 3221225472;
  void v40[2] = __111__CKChatController_ClickyOrbConformance___exportActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke;
  v40[3] = &unk_1E5621218;
  id v41 = v6;
  id v42 = v36;
  id v43 = v35;
  double v44 = self;
  id v27 = v35;
  id v28 = v36;
  id v29 = v6;
  uint64_t v9 = [v26 actionWithTitle:v15 image:v39 identifier:0 handler:v40];

LABEL_49:

  return v9;
}

void __111__CKChatController_ClickyOrbConformance___exportActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = [*(id *)(a1 + 32) canPerformQuickAction];
  int v5 = IMOSLoggingEnabled();
  if (v4)
  {
    if (v5)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = [*(id *)(a1 + 40) count];
        *(_DWORD *)buf = 134217984;
        uint64_t v14 = v7;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Will quick save %tu items", buf, 0xCu);
      }
    }
    uint64_t v8 = +[CKUtilities quickSaveConfirmationAlertForMediaObjects:*(void *)(a1 + 40) momentShareURL:*(void *)(a1 + 48) popoverSource:0 metricsSource:*MEMORY[0x1E4F6DB80] cancelHandler:0 preSaveHandler:0 postSaveHandler:0 postAnyActionHandler:0];
    if (v8) {
      [*(id *)(a1 + 56) presentViewController:v8 animated:1 completion:0];
    }
  }
  else
  {
    if (v5)
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = [*(id *)(a1 + 40) count];
        *(_DWORD *)buf = 134217984;
        uint64_t v14 = v10;
        _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "Will save %tu items", buf, 0xCu);
      }
    }
    uint64_t v8 = [[CKMediaObjectExportManager alloc] initWithMediaObjects:*(void *)(a1 + 40)];
    [(CKMediaObjectExportManager *)v8 setMetricsSource:*MEMORY[0x1E4F6DB80]];
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    v11[2] = __111__CKChatController_ClickyOrbConformance___exportActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke_267;
    v11[3] = &unk_1E56211F0;
    id v12 = *(id *)(a1 + 40);
    [(CKMediaObjectExportManager *)v8 exportQueuedMediaObjectsWithCompletion:v11];
  }
}

void __111__CKChatController_ClickyOrbConformance___exportActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke_267(uint64_t a1, int a2, void *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a2)
  {
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = [*(id *)(a1 + 32) count];
        int v9 = 134217984;
        uint64_t v10 = v7;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Successfully saved %tu items", (uint8_t *)&v9, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __111__CKChatController_ClickyOrbConformance___exportActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke_267_cold_1((uint64_t)v5, a1, v8);
    }
  }
}

- (id)_downgradeMessageActionForChatItem:(id)a3
{
  id v4 = a3;
  id location = 0;
  objc_initWeak(&location, self);
  if (![v4 canSendAsTextMessage])
  {
    uint64_t v11 = 0;
    goto LABEL_11;
  }
  id v5 = [v4 IMChatItem];
  id v6 = [v4 IMChatItem];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {
    uint64_t v11 = 0;
    goto LABEL_10;
  }
  uint64_t v8 = [v5 message];
  id v9 = objc_loadWeakRetained(&location);
  uint64_t v10 = [v9 conversation];

  if (![(CKChatController *)self _smsEnabled]
    || ![v8 isFromMe]
    || ([v8 isDelivered] & 1) != 0)
  {
    goto LABEL_6;
  }
  uint64_t v13 = [v8 error];
  if (v13)
  {
    uint64_t v11 = 0;
LABEL_16:

    goto LABEL_7;
  }
  if (([v10 isGroupConversation] & 1) == 0)
  {
    id v14 = objc_loadWeakRetained(&location);
    uint64_t v15 = [v14 collectionViewController];
    uint64_t v16 = [v15 chatItems];

    id v17 = [v8 guid];
    uint64_t v18 = objc_msgSend(v16, "__ck_indexesOfPartsOfMessageWithGUID:", v17);
    uint64_t v19 = [v16 objectsAtIndexes:v18];

    id v20 = objc_loadWeakRetained(&location);
    uint64_t v21 = [v20 textInputContextIdentifier];
    uint64_t v22 = +[CKComposition compositionForMessageParts:v19 preserveSubject:1 contextIdentifier:v21];

    LOBYTE(v20) = [v10 canSendComposition:v22 error:0];
    if (v20)
    {
      uint64_t v13 = [v10 fallbackSendString];
      id v23 = (void *)MEMORY[0x1E4F426E8];
      id v24 = [MEMORY[0x1E4F42A80] systemImageNamed:@"arrow.up.circle"];
      v25[0] = MEMORY[0x1E4F143A8];
      v25[1] = 3221225472;
      v25[2] = __77__CKChatController_ClickyOrbConformance___downgradeMessageActionForChatItem___block_invoke;
      v25[3] = &unk_1E5621240;
      id v26 = v8;
      id v27 = v10;
      objc_copyWeak(&v28, &location);
      uint64_t v11 = [v23 actionWithTitle:v13 image:v24 identifier:0 handler:v25];

      objc_destroyWeak(&v28);
      goto LABEL_16;
    }
  }
LABEL_6:
  uint64_t v11 = 0;
LABEL_7:

LABEL_10:
LABEL_11:
  objc_destroyWeak(&location);

  return v11;
}

void __77__CKChatController_ClickyOrbConformance___downgradeMessageActionForChatItem___block_invoke(id *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    CKLogCStringForType(29);
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = [a1[4] guid];
      id v6 = a1[5];
      *(_DWORD *)buf = 138412546;
      uint64_t v19 = v5;
      __int16 v20 = 2112;
      id v21 = v6;
      _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Manually downgrading message with GUID {%@} -- conversation:%@", buf, 0x16u);
    }
  }
  if (os_log_shim_legacy_logging_enabled() && _CKShouldLogExternal())
  {
    uint64_t v13 = [a1[4] guid];
    id v14 = a1[5];
    _CKLogExternal();
  }
  uint64_t v7 = a1 + 5;
  uint64_t v8 = objc_msgSend(a1[5], "chat", v13, v14);
  [v8 downgradeMessage:a1[4] manualDowngrade:1];

  id v9 = objc_msgSend(a1[4], "__ck_downgradedMessage");
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v11 = [WeakRetained collectionViewController];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __77__CKChatController_ClickyOrbConformance___downgradeMessageActionForChatItem___block_invoke_276;
  v15[3] = &unk_1E5620AF8;
  id v16 = *v7;
  id v17 = v9;
  id v12 = v9;
  [v11 updateTranscript:v15 animated:0 completion:0];
}

void __77__CKChatController_ClickyOrbConformance___downgradeMessageActionForChatItem___block_invoke_276(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [MEMORY[0x1E4F6BDB8] smsService];
  [v1 sendMessage:v2 onService:v3 newComposition:0];
}

- (id)_stickerDetailsActionForChatItem:(id)a3
{
  id v4 = a3;
  id location = 0;
  objc_initWeak(&location, self);
  id v5 = [v4 visibleAssociatedMessageChatItems];

  if (v5)
  {
    id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v7 = [v4 visibleAssociatedMessageChatItems];
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __75__CKChatController_ClickyOrbConformance___stickerDetailsActionForChatItem___block_invoke;
    v17[3] = &unk_1E5621268;
    id v8 = v6;
    id v18 = v8;
    [v7 enumerateObjectsUsingBlock:v17];

    if ([v8 count])
    {
      id v9 = (void *)MEMORY[0x1E4F426E8];
      uint64_t v10 = CKFrameworkBundle();
      uint64_t v11 = [v10 localizedStringForKey:@"BALLOON_STICKER_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];
      id v12 = [MEMORY[0x1E4F42A80] systemImageNamed:@"info.circle"];
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 3221225472;
      v15[2] = __75__CKChatController_ClickyOrbConformance___stickerDetailsActionForChatItem___block_invoke_2;
      v15[3] = &unk_1E5620ED8;
      objc_copyWeak(&v16, &location);
      uint64_t v13 = [v9 actionWithTitle:v11 image:v12 identifier:0 handler:v15];

      objc_destroyWeak(&v16);
    }
    else
    {
      uint64_t v13 = 0;
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
  objc_destroyWeak(&location);

  return v13;
}

void __75__CKChatController_ClickyOrbConformance___stickerDetailsActionForChatItem___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void __75__CKChatController_ClickyOrbConformance___stickerDetailsActionForChatItem___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setWantsStickerDetails:1];
}

- (id)_emojiDetailsActionForChatItem:(id)a3
{
  id v4 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v4;
    id v6 = [v5 emojiImageMediaObjectsInMessagePartText];
    if ([v6 count])
    {
      uint64_t v7 = CKFrameworkBundle();
      id v8 = [v7 localizedStringForKey:@"EMOJI_DETAILS_CONTEXT_MENU_ACTION_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      id v9 = [MEMORY[0x1E4F42A80] _systemImageNamed:@"info.circle"];
      id location = 0;
      objc_initWeak(&location, self);
      uint64_t v10 = (void *)MEMORY[0x1E4F426E8];
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      v13[2] = __73__CKChatController_ClickyOrbConformance___emojiDetailsActionForChatItem___block_invoke;
      v13[3] = &unk_1E5620ED8;
      objc_copyWeak(&v14, &location);
      uint64_t v11 = [v10 actionWithTitle:v8 image:v9 identifier:0 handler:v13];
      objc_destroyWeak(&v14);
      objc_destroyWeak(&location);
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

void __73__CKChatController_ClickyOrbConformance___emojiDetailsActionForChatItem___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setWantsEmojiDetails:1];
}

- (id)_showTimestampsAction
{
  id v3 = [(CKCoreChatController *)self collectionViewController];
  int v4 = [v3 isShowingTranscriptTimestamps];
  id v5 = (void *)MEMORY[0x1E4F426E8];
  id v6 = CKFrameworkBundle();
  uint64_t v7 = v6;
  if (v4)
  {
    id v8 = [v6 localizedStringForKey:@"HIDE_TRANSCRIPT_TIMESTAMPS" value:&stru_1EDE4CA38 table:@"ChatKit"];
    uint64_t v17 = MEMORY[0x1E4F143A8];
    uint64_t v18 = 3221225472;
    uint64_t v19 = __63__CKChatController_ClickyOrbConformance___showTimestampsAction__block_invoke;
    __int16 v20 = &unk_1E56211C8;
    id v21 = self;
    id v9 = &v17;
  }
  else
  {
    id v8 = [v6 localizedStringForKey:@"SHOW_TRANSCRIPT_TIMESTAMPS" value:&stru_1EDE4CA38 table:@"ChatKit"];
    uint64_t v12 = MEMORY[0x1E4F143A8];
    uint64_t v13 = 3221225472;
    id v14 = __63__CKChatController_ClickyOrbConformance___showTimestampsAction__block_invoke_2;
    uint64_t v15 = &unk_1E56211C8;
    id v16 = self;
    id v9 = &v12;
  }
  uint64_t v10 = objc_msgSend(v5, "actionWithTitle:image:identifier:handler:", v8, 0, 0, v9, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);

  return v10;
}

void __63__CKChatController_ClickyOrbConformance___showTimestampsAction__block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) collectionViewController];
  [v1 hideTranscriptTimestampsIfNeeded];
}

void __63__CKChatController_ClickyOrbConformance___showTimestampsAction__block_invoke_2(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) collectionViewController];
  [v1 showTranscriptTimestamps];
}

- (id)_mediaAttributionActionForChatItem:(id)a3
{
  id v4 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [v4 mediaObject];
    id v6 = [v5 transfer];
    uint64_t v7 = [v6 attributionInfo];

    if (v7)
    {
      id v8 = [v7 objectForKeyedSubscript:@"bundle-id"];
      if ([v8 isEqualToString:@"com.apple.messages.MSMessageExtensionBalloonPlugin:0000000000:com.apple.Stickers.UserGenerated.MessagesExtension"])
      {
        if (IMOSLoggingEnabled())
        {
          id v9 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "Not showing media attribution action: user generation sticker plugin", buf, 2u);
          }
        }
        uint64_t v10 = 0;
      }
      else
      {
        uint64_t v13 = objc_msgSend(v7, "__ck_localizedAppNameForTranscriptAttribution");
        if (v13)
        {
          *(void *)buf = 0;
          objc_initWeak((id *)buf, self);
          id v14 = (void *)MEMORY[0x1E4F426E8];
          uint64_t v15 = NSString;
          id v16 = CKFrameworkBundle();
          uint64_t v17 = [v16 localizedStringForKey:@"MEDIA_ATTRIBUTION_TITLE_FORMAT" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v18 = objc_msgSend(v15, "stringWithFormat:", v17, v13);

          uint64_t v19 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v20 = [v19 userInterfaceLayoutDirection];

          if (v20 == 1) {
            id v21 = @"\u200F";
          }
          else {
            id v21 = @"\u200E";
          }
          uint64_t v22 = [(__CFString *)v21 stringByAppendingString:v18];

          id v23 = [MEMORY[0x1E4F42A80] _systemImageNamed:@"appstore.capsule"];
          v26[0] = MEMORY[0x1E4F143A8];
          v26[1] = 3221225472;
          void v26[2] = __77__CKChatController_ClickyOrbConformance___mediaAttributionActionForChatItem___block_invoke;
          v26[3] = &unk_1E5621240;
          id v27 = v7;
          id v28 = v5;
          objc_copyWeak(&v29, (id *)buf);
          uint64_t v10 = [v14 actionWithTitle:v22 image:v23 identifier:0 handler:v26];

          objc_destroyWeak(&v29);
          objc_destroyWeak((id *)buf);
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            id v24 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_18EF18000, v24, OS_LOG_TYPE_INFO, "Not showing media attribution action: title is nil", buf, 2u);
            }
          }
          uint64_t v10 = 0;
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Not showing media attribution action: no attribution", buf, 2u);
        }
      }
      uint64_t v10 = 0;
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Not showing media attribution action: not a CKAttachmentMessagePartChatItem", buf, 2u);
      }
    }
    uint64_t v10 = 0;
  }

  return v10;
}

void __77__CKChatController_ClickyOrbConformance___mediaAttributionActionForChatItem___block_invoke(id *a1)
{
  dispatch_time_t v2 = dispatch_time(0, 200000000);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __77__CKChatController_ClickyOrbConformance___mediaAttributionActionForChatItem___block_invoke_2;
  block[3] = &unk_1E5621290;
  id v4 = a1[4];
  id v5 = a1[5];
  objc_copyWeak(&v6, a1 + 6);
  dispatch_after(v2, MEMORY[0x1E4F14428], block);
  objc_destroyWeak(&v6);
}

void __77__CKChatController_ClickyOrbConformance___mediaAttributionActionForChatItem___block_invoke_2(id *a1)
{
  id v8 = [a1[4] objectForKey:*MEMORY[0x1E4F6D3C8]];
  dispatch_time_t v2 = [a1[4] objectForKey:*MEMORY[0x1E4F6D3E0]];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v8, "longLongValue"));

    id v8 = (id)v3;
  }
  id v4 = [a1[4] objectForKey:*MEMORY[0x1E4F6D428]];
  id v5 = [a1[5] transfer];
  uint64_t v6 = [v5 isSticker];

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  [WeakRetained _presentBrowserOrAppStoreForAdamID:v8 url:v4 identifier:v2 isForSticker:v6];
}

- (id)_moreActionForChatItem:(id)a3
{
  return [(CKChatController *)self _moreActionForChatItem:a3 configureForCommSafety:0];
}

- (id)_moreActionForChatItem:(id)a3 configureForCommSafety:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if (![v6 wantsMoreMenu])
  {
    id v9 = 0;
    goto LABEL_12;
  }
  id location = 0;
  id v7 = objc_initWeak(&location, self);
  id v8 = [(CKCoreChatController *)self conversation];
  if ([v8 isPending])
  {
    id v9 = 0;
LABEL_10:

    goto LABEL_11;
  }
  id v10 = objc_loadWeakRetained(&location);
  char v11 = [v10 isInline];

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = CKFrameworkBundle();
    self = [v12 localizedStringForKey:@"BALLOON_MORE_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];

    id v8 = [MEMORY[0x1E4F42A80] systemImageNamed:@"ellipsis.circle"];
    if (v4)
    {
      uint64_t v13 = CKFrameworkBundle();
      id v14 = [v13 localizedStringForKey:@"DELETE_ELLIPSIS" value:&stru_1EDE4CA38 table:@"ChatKit"];

      self = v14;
    }
    uint64_t v15 = (void *)MEMORY[0x1E4F426E8];
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __88__CKChatController_ClickyOrbConformance___moreActionForChatItem_configureForCommSafety___block_invoke;
    v17[3] = &unk_1E56210D8;
    objc_copyWeak(&v19, &location);
    id v18 = v6;
    id v9 = [v15 actionWithTitle:self image:v8 identifier:0 handler:v17];

    objc_destroyWeak(&v19);
    goto LABEL_10;
  }
  id v9 = 0;
LABEL_11:
  objc_destroyWeak(&location);
LABEL_12:

  return v9;
}

void __88__CKChatController_ClickyOrbConformance___moreActionForChatItem_configureForCommSafety___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained actionMoreIsTappedForChatItem:*(void *)(a1 + 32)];
}

- (id)_votingViewForChatItem:(id)a3 containingViewController:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [v7 view];
  id v9 = [v8 safeAreaLayoutGuide];
  [v9 layoutFrame];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  id v18 = [(CKChatController *)self presentedViewController];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v19 = [(CKChatController *)self presentedViewController];
    uint64_t v20 = [v19 view];
  }
  else
  {
    uint64_t v20 = [(CKChatController *)self view];
  }

  id v21 = [v20 window];
  uint64_t v22 = [(CKChatController *)self view];
  objc_msgSend(v21, "convertRect:fromView:", v22, v11, v13, v15, v17);
  double v51 = v24;
  double v52 = v23;
  double v49 = v26;
  double v50 = v25;

  id v27 = [v20 window];
  [v27 bounds];
  uint64_t v47 = v29;
  uint64_t v48 = v28;

  [(CKChatController *)self systemMinimumLayoutMargins];
  double v31 = v30;
  double v33 = v32;
  long long v34 = [(CKChatController *)self view];
  uint64_t v35 = [v34 effectiveUserInterfaceLayoutDirection];
  if (v35) {
    double v36 = v33;
  }
  else {
    double v36 = v31;
  }
  if (v35) {
    double v37 = v31;
  }
  else {
    double v37 = v33;
  }

  v57.origin.double x = v11;
  v57.origin.double y = v13;
  v57.size.width = v15;
  v57.size.height = v17;
  double Width = CGRectGetWidth(v57);
  id location = 0;
  objc_initWeak(&location, self);
  uint64_t v39 = +[CKUIBehavior sharedBehaviors];
  [v39 attributionViewHeight];
  double v41 = v40;

  id v42 = [CKAttributionViewAccessoryView alloc];
  double v43 = *MEMORY[0x1E4F1DB28];
  double v44 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
  v53[0] = MEMORY[0x1E4F143A8];
  v53[1] = 3221225472;
  v53[2] = __90__CKChatController_ClickyOrbConformance___votingViewForChatItem_containingViewController___block_invoke;
  v53[3] = &unk_1E56212B8;
  objc_copyWeak(&v54, &location);
  long long v45 = -[CKAttributionViewAccessoryView initWithFrame:chatItem:layoutBounds:windowSize:saveStickerHandler:](v42, "initWithFrame:chatItem:layoutBounds:windowSize:saveStickerHandler:", v6, v53, v43, v44, Width - (v36 + v37), v41, v52, v51, v50, v49, v48, v47);
  objc_destroyWeak(&v54);
  objc_destroyWeak(&location);

  return v45;
}

void __90__CKChatController_ClickyOrbConformance___votingViewForChatItem_containingViewController___block_invoke(uint64_t a1, void *a2)
{
  dispatch_time_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained dismissContextMenuInteractionMenu];

  id v5 = objc_loadWeakRetained(v2);
  [v5 saveStickerFromTapbackAttributionFlow:v3];
}

- (id)_localizedTitleStringForAggregateAction:(int64_t)a3 numberOfPhotos:(int64_t)a4 numberOfVideos:(int64_t)a5 numberOfOther:(int64_t)a6
{
  id v8 = @"_ITEMS";
  if (a6 <= 0)
  {
    if (!a4 || a5)
    {
      if (a5) {
        BOOL v9 = a4 == 0;
      }
      else {
        BOOL v9 = 0;
      }
      if (v9) {
        id v8 = @"_VIDEOS";
      }
    }
    else
    {
      id v8 = @"_PHOTOS";
    }
  }
  double v10 = @"DELETE";
  if (a3 != 1) {
    double v10 = 0;
  }
  if (a3) {
    double v11 = v10;
  }
  else {
    double v11 = @"COPY";
  }
  int64_t v12 = a5 + a4 + a6;
  id v13 = [(__CFString *)v11 stringByAppendingFormat:v8];
  double v14 = NSString;
  double v15 = CKFrameworkBundle();
  double v16 = [v15 localizedStringForKey:v13 value:&stru_1EDE4CA38 table:@"ChatKit"];
  double v17 = objc_msgSend(v14, "localizedStringWithFormat:", v16, v12);

  id v18 = [MEMORY[0x1E4F42738] sharedApplication];
  uint64_t v19 = [v18 userInterfaceLayoutDirection];

  if (v19 == 1) {
    uint64_t v20 = @"\u200F";
  }
  else {
    uint64_t v20 = @"\u200E";
  }
  id v21 = [(__CFString *)v20 stringByAppendingString:v17];

  return v21;
}

- (id)_balloonViewForCellAtIndexPath:(id)a3
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKChatController *)self collectionView];
  uint64_t v6 = [v5 cellForItemAtIndexPath:v4];

  if (objc_opt_respondsToSelector())
  {
    id v7 = [v6 balloonView];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        BOOL v9 = (objc_class *)objc_opt_class();
        double v10 = NSStringFromClass(v9);
        int v12 = 138412290;
        id v13 = v10;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "_balloonViewForCellAtIndexPath will return nil for class: %@", (uint8_t *)&v12, 0xCu);
      }
    }
    id v7 = 0;
  }

  return v7;
}

- (id)_parentChatItemForIndexPath:(id)a3
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKChatController *)self _parentIndexPathForCellAtIndexPath:v4];
  uint64_t v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [v6 chatItems];

  if (v5)
  {
    unint64_t v8 = [v5 item];
    if (v8 < [v7 count])
    {
      BOOL v9 = [(CKCoreChatController *)self collectionViewController];
      double v10 = [v9 chatItems];
      objc_msgSend(v10, "objectAtIndex:", objc_msgSend(v5, "item"));
      double v11 = (__CFString *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        goto LABEL_17;
      }
      if (IMOSLoggingEnabled())
      {
        int v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          int v18 = 138412290;
          uint64_t v19 = v11;
          _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "_parentChatItemForIndexPath will return nil. chatItem: %@ is not of class CKMessagePartChatItem", (uint8_t *)&v18, 0xCu);
        }
      }
    }
  }
  if (IMOSLoggingEnabled())
  {
    id v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      if (v5) {
        uint64_t v14 = @"NO";
      }
      else {
        uint64_t v14 = @"YES";
      }
      uint64_t v15 = [v5 item];
      uint64_t v16 = [v7 count];
      int v18 = 138412802;
      uint64_t v19 = v14;
      __int16 v20 = 2048;
      uint64_t v21 = v15;
      __int16 v22 = 2048;
      uint64_t v23 = v16;
      _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "_parentChatItemForIndexPath returning nil. ParentIndexPath is nil: %@; ParentIndexPath.item: %ld; chatItems.count: %ld",
        (uint8_t *)&v18,
        0x20u);
    }
  }
  double v11 = 0;
LABEL_17:

  return v11;
}

- (id)_parentIndexPathForCellAtIndexPath:(id)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v6 = [v5 chatItems];

  if (![v4 section])
  {
    unint64_t v15 = [v4 item];
    if (v15 < [v6 count])
    {
      id v16 = v4;
      goto LABEL_19;
    }
    if (!IMOSLoggingEnabled()) {
      goto LABEL_18;
    }
    unint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v22 = 134218240;
      uint64_t v23 = [v4 item];
      __int16 v24 = 2048;
      uint64_t v25 = [v6 count];
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Attempted to get parent index for chat item out of idx range. idx %lu count %lu", (uint8_t *)&v22, 0x16u);
    }
    goto LABEL_17;
  }
  if ([v4 section] != 1)
  {
LABEL_18:
    id v16 = 0;
    goto LABEL_19;
  }
  id v7 = [(CKCoreChatController *)self collectionViewController];
  unint64_t v8 = [v7 associatedChatItems];

  unint64_t v9 = [v4 item];
  if (v9 >= [v8 count])
  {
    if (IMOSLoggingEnabled())
    {
      double v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        int v22 = 134218240;
        uint64_t v23 = [v4 item];
        __int16 v24 = 2048;
        uint64_t v25 = [v8 count];
        _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Attempted to get parent index for associated chat item out of idx range. idx %lu count %lu", (uint8_t *)&v22, 0x16u);
      }
    }
LABEL_17:

    goto LABEL_18;
  }
  double v10 = -[NSObject objectAtIndex:](v8, "objectAtIndex:", [v4 item]);
  double v11 = [v10 associatedChatItemGUID];
  uint64_t v12 = [v10 associatedMessageRange];
  unint64_t v14 = objc_msgSend(v6, "__ck_indexOfParentChatItemWithMesssageGUID:associatedMessageRange:", v11, v12, v13);

  if (v14 >= [v6 count])
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        int v22 = 134218240;
        uint64_t v23 = [v4 item];
        __int16 v24 = 2048;
        uint64_t v25 = [v8 count];
        _os_log_impl(&dword_18EF18000, v19, OS_LOG_TYPE_INFO, "Attempted to get parent index for associated chat item out of idx range. idx %lu count %lu", (uint8_t *)&v22, 0x16u);
      }
    }
    id v16 = 0;
  }
  else
  {
    if (v14 == 0x7FFFFFFFFFFFFFFFLL)
    {

      goto LABEL_18;
    }
    __int16 v20 = [v6 objectAtIndex:v14];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v16 = [MEMORY[0x1E4F28D58] indexPathForItem:v14 inSection:0];
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v21 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          int v22 = 134218498;
          uint64_t v23 = [v4 item];
          __int16 v24 = 2048;
          uint64_t v25 = v14;
          __int16 v26 = 2112;
          id v27 = v20;
          _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "chatItem at parent index is not kind of CKMessagePartChatItem. requesting indexPath.item in associated message section: %ld, found parent index: %ld, found chatItem: %@", (uint8_t *)&v22, 0x20u);
        }
      }
      id v16 = 0;
    }
  }
LABEL_19:

  return v16;
}

- (BOOL)_hasPreviewViewControllerForChatItem:(id)a3
{
  id v3 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [v3 mediaObject];
    if ([v4 shouldBeQuickLooked])
    {
      char isKindOfClass = 1;
    }
    else
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
    }
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }

  return isKindOfClass & 1;
}

- (BOOL)_clickyOrbEnabled
{
  id v3 = +[CKUIBehavior sharedBehaviors];
  int v4 = [v3 disableTranscriptInteractions];

  if (v4)
  {
    int v5 = IMOSLoggingEnabled();
    if (v5)
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        __int16 v15 = 0;
        id v7 = "clicky orb: disabled because transcript interactions disabled";
        unint64_t v8 = (uint8_t *)&v15;
LABEL_17:
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, v7, v8, 2u);
        goto LABEL_18;
      }
      goto LABEL_18;
    }
  }
  else
  {
    unint64_t v9 = +[CKUIBehavior sharedBehaviors];
    int v10 = [v9 disableTranscriptClickyOrbContextMenu];

    if (v10)
    {
      int v5 = IMOSLoggingEnabled();
      if (v5)
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          __int16 v14 = 0;
          id v7 = "clicky orb: disabled because transcript context menu disabled";
          unint64_t v8 = (uint8_t *)&v14;
          goto LABEL_17;
        }
LABEL_18:

        LOBYTE(v5) = 0;
      }
    }
    else if ([(CKChatController *)self isEditing])
    {
      int v5 = IMOSLoggingEnabled();
      if (v5)
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          __int16 v13 = 0;
          id v7 = "clicky orb: disabled because transcript is editing";
          unint64_t v8 = (uint8_t *)&v13;
          goto LABEL_17;
        }
        goto LABEL_18;
      }
    }
    else if ([(CKChatController *)self isShowingOscarChat])
    {
      int v5 = IMOSLoggingEnabled();
      if (v5)
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          __int16 v12 = 0;
          id v7 = "clicky orb: disabled because showing oscar chat";
          unint64_t v8 = (uint8_t *)&v12;
          goto LABEL_17;
        }
        goto LABEL_18;
      }
    }
    else
    {
      LOBYTE(v5) = 1;
    }
  }
  return v5;
}

- (BOOL)_balloonViewOfCell:(id)a3 containsPoint:(CGPoint)a4 fromView:(id)a5
{
  CGFloat y = a4.y;
  CGFloat x = a4.x;
  id v8 = a5;
  id v9 = a3;
  int v10 = [v9 balloonView];
  [v10 frame];
  objc_msgSend(v8, "convertRect:fromView:", v9);
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;

  v21.origin.CGFloat x = v12;
  v21.origin.CGFloat y = v14;
  v21.size.width = v16;
  v21.size.height = v18;
  v20.CGFloat x = x;
  v20.CGFloat y = y;
  LOBYTE(v9) = CGRectContainsPoint(v21, v20);

  return (char)v9;
}

- (BOOL)_point:(CGPoint)a3 visuallyIntersectsBalloonViewInCollectionView:(id)a4
{
  double y = a3.y;
  double x = a3.x;
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  id v8 = objc_msgSend(v7, "indexPathForItemAtPoint:", x, y);
  id v9 = [v7 cellForItemAtIndexPath:v8];

  int v10 = objc_msgSend(v7, "hitTest:withEvent:", 0, x, y);
  if (v9)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && v10
      && ([v9 balloonView],
          double v11 = objc_claimAutoreleasedReturnValue(),
          char v12 = [v10 isDescendantOfView:v11],
          v11,
          (v12 & 1) != 0))
    {
      BOOL v13 = 1;
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
      long long v21 = 0u;
      long long v22 = 0u;
      CGFloat v14 = objc_msgSend(v7, "visibleCells", 0);
      uint64_t v15 = [v14 countByEnumeratingWithState:&v21 objects:v25 count:16];
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = *(void *)v22;
        while (2)
        {
          for (uint64_t i = 0; i != v16; ++i)
          {
            if (*(void *)v22 != v17) {
              objc_enumerationMutation(v14);
            }
            uint64_t v19 = *(void *)(*((void *)&v21 + 1) + 8 * i);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0
              && -[CKChatController _balloonViewOfCell:containsPoint:fromView:](self, "_balloonViewOfCell:containsPoint:fromView:", v19, v7, x, y))
            {
              BOOL v13 = 1;
              goto LABEL_18;
            }
          }
          uint64_t v16 = [v14 countByEnumeratingWithState:&v21 objects:v25 count:16];
          if (v16) {
            continue;
          }
          break;
        }
      }
      BOOL v13 = 0;
LABEL_18:
    }
  }
  else
  {
    BOOL v13 = 0;
  }

  return v13;
}

- (BOOL)contextMenuInteractionIsOutsideOfVisibleBalloonCells:(id)a3
{
  id v4 = a3;
  int v5 = [(CKChatController *)self collectionView];
  [v4 locationInView:v5];
  double v7 = v6;
  double v9 = v8;

  int v10 = [(CKChatController *)self collectionView];
  LOBYTE(self) = -[CKChatController _point:visuallyIntersectsBalloonViewInCollectionView:](self, "_point:visuallyIntersectsBalloonViewInCollectionView:", v10, v7, v9);

  return self ^ 1;
}

- (void)contextMenuInteraction:(id)a3 willDisplayMenuForConfiguration:(id)a4 animator:(id)a5
{
  if (-[CKChatController contextMenuInteractionIsOutsideOfVisibleBalloonCells:](self, "contextMenuInteractionIsOutsideOfVisibleBalloonCells:", a3, a4, a5))
  {
    [(CKChatController *)self clearEntryViewPasteConfiguration];
  }
}

- (void)contextMenuInteraction:(id)a3 willEndForConfiguration:(id)a4 animator:(id)a5
{
  if (-[CKChatController contextMenuInteractionIsOutsideOfVisibleBalloonCells:](self, "contextMenuInteractionIsOutsideOfVisibleBalloonCells:", a3, a4, a5))
  {
    [(CKChatController *)self restoreEntryViewPasteConfiguration];
  }
}

- (id)contextMenuInteraction:(id)a3 configurationForMenuAtLocation:(CGPoint)a4
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if ([(CKChatController *)self contextMenuInteractionIsOutsideOfVisibleBalloonCells:v5])
  {
    if (IMOSLoggingEnabled())
    {
      double v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v9 = 136315138;
        int v10 = "-[CKChatController(ClickyOrbConformance) contextMenuInteraction:configurationForMenuAtLocation:]";
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "%s - context menu interaction is outside of visible balloonCell", (uint8_t *)&v9, 0xCu);
      }
    }
    double v7 = [(CKChatController *)self contextMenuInteractionOutsideOfVisibleBalloonCells];
  }
  else
  {
    double v7 = 0;
  }

  return v7;
}

- (id)contextMenuInteractionOutsideOfVisibleBalloonCells
{
  v12[1] = *MEMORY[0x1E4F143B8];
  dispatch_time_t v2 = (void *)MEMORY[0x1E4F42B80];
  id v3 = [(CKChatController *)self _showTimestampsAction];
  v12[0] = v3;
  id v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:1];
  id v5 = [v2 menuWithTitle:&stru_1EDE4CA38 children:v4];

  double v6 = (void *)MEMORY[0x1E4F428F0];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __92__CKChatController_ClickyOrbConformance__contextMenuInteractionOutsideOfVisibleBalloonCells__block_invoke;
  v10[3] = &unk_1E56212E0;
  id v11 = v5;
  id v7 = v5;
  double v8 = [v6 configurationWithIdentifier:@"CKTranscriptContextMenuConfigurationIdentifier" previewProvider:0 actionProvider:v10];

  return v8;
}

id __92__CKChatController_ClickyOrbConformance__contextMenuInteractionOutsideOfVisibleBalloonCells__block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)setupClickyOrbForConversation:(id)a3
{
  if (CKIsRunningInMacCatalyst())
  {
    id v4 = [(CKCoreChatController *)self collectionViewController];
    id v7 = [v4 collectionView];

    id v5 = (void *)[objc_alloc(MEMORY[0x1E4F428F8]) initWithDelegate:self];
    id v6 = objc_alloc_init(MEMORY[0x1E4F42FF0]);
    [v7 setBackgroundView:v6];
    [v7 addInteraction:v5];
  }
}

- (void)setClickyOrbChatItem:(id)a3
{
}

- (CKMessagePartChatItem)clickyOrbChatItem
{
  return (CKMessagePartChatItem *)objc_getAssociatedObject(self, sel_clickyOrbChatItem);
}

- (CGAffineTransform)stickerPreviewTransform
{
  uint64_t v4 = MEMORY[0x192FBA860](@"_MSStickerDragPreviewContainerView", @"Messages");
  if (v4 && (id v5 = (void *)v4, (objc_opt_respondsToSelector() & 1) != 0))
  {
    return (CGAffineTransform *)[v5 targetPreviewTransform];
  }
  else
  {
    return CGAffineTransformMakeScale(retstr, 1.25, 1.25);
  }
}

- (id)_stickerDragPreviewForDragItem:(id)a3 defaultPreview:(id)a4
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  double v8 = [(CKChatController *)self dropSession];
  int v9 = [(CKChatController *)self _stickerDropProposalForItem:v6 inSession:v8];

  if (IMOSLoggingEnabled())
  {
    int v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = [(CKChatController *)self dropSession];
      char v12 = [v9 dragItem];
      [v9 previewCenter];
      NSStringFromCGPoint(v42);
      id v13 = (id)objc_claimAutoreleasedReturnValue();
      CGFloat v14 = [v9 targetBalloonIndex];
      *(_DWORD *)buf = 138413314;
      id v31 = v6;
      __int16 v32 = 2112;
      id v33 = v11;
      __int16 v34 = 2112;
      uint64_t v35 = v12;
      __int16 v36 = 2112;
      id v37 = v13;
      __int16 v38 = 2112;
      uint64_t v39 = v14;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "_stickerDragPreviewForDragItem: got dropProposal for item: %@, session: %@, dragItem: %@, previewCenter: %@, targetBalloonIndex: %@", buf, 0x34u);
    }
  }
  uint64_t v15 = [v9 targetBalloonIndex];

  if (v15)
  {
    uint64_t v16 = objc_msgSend(objc_alloc((Class)MEMORY[0x192FBA860](@"_MSStickerDragPreviewContainerView", @"Messages")), "initWithIsDropAnimation:", 1);
    uint64_t v17 = [v7 target];
    id v18 = objc_alloc(MEMORY[0x1E4F429B8]);
    uint64_t v19 = [v17 container];
    [v17 center];
    double v21 = v20;
    double v23 = v22;
    if (v6) {
      [v6 _suggestedTransform];
    }
    else {
      memset(v29, 0, sizeof(v29));
    }
    id v27 = objc_msgSend(v18, "initWithContainer:center:transform:", v19, v29, v21, v23);

    uint64_t v26 = [v7 retargetedPreviewWithTarget:v27];
    [v26 _setPreviewContainer:v16];
    [(CKChatController *)self _prepareForDropAnimationWithItem:v6 preview:v26];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      long long v24 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        uint64_t v25 = [(CKChatController *)self dropSession];
        *(_DWORD *)buf = 138412546;
        id v31 = v6;
        __int16 v32 = 2112;
        id v33 = v25;
        _os_log_impl(&dword_18EF18000, v24, OS_LOG_TYPE_INFO, "_stickerDragPreviewForDragItem: Not returning a UITargetedDragPreview which will abort the stick animation. There was no valid target balloon sufficiently close to the drop preview for item: %@, drop session: %@.", buf, 0x16u);
      }
    }
    uint64_t v26 = 0;
  }

  return v26;
}

- (id)hashKeyForDragItem:(id)a3
{
  if (a3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"%lu", objc_msgSend(a3, "hash"));
    uint64_t v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v4 = &stru_1EDE4CA38;
  }
  return v4;
}

- (void)_prepareForDropAnimationWithItem:(id)a3 preview:(id)a4
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  double v8 = IMLogHandleForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    int v9 = [v7 _previewContainer];
    int v17 = 138412802;
    id v18 = v6;
    __int16 v19 = 2112;
    id v20 = v7;
    __int16 v21 = 2112;
    double v22 = v9;
    _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "_prepareForDropAnimationWithItem dragItem: %@, dragPreview: %@, container: %@", (uint8_t *)&v17, 0x20u);
  }
  int v10 = [(CKChatController *)self hashKeyForDragItem:v6];
  id v11 = [(CKChatController *)self activeDropPreviews];
  [v11 setObject:v7 forKey:v10];

  char v12 = [v7 _previewContainer];
  char v13 = objc_opt_respondsToSelector();

  if (v13)
  {
    CGFloat v14 = [v7 _previewContainer];
    [v14 setDefersFinalDropAnimationCompletion:1];
  }
  uint64_t v15 = [v7 _previewContainer];

  if (!v15)
  {
    uint64_t v16 = IMLogHandleForCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(CKChatController_Stickers) _prepareForDropAnimationWithItem:preview:]();
    }
  }
}

- (id)_stickerDropProposalForSession:(id)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v5 = objc_msgSend(v4, "items", 0);
  uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    double v8 = 0;
    uint64_t v9 = *(void *)v15;
LABEL_3:
    uint64_t v10 = 0;
    id v11 = v8;
    while (1)
    {
      if (*(void *)v15 != v9) {
        objc_enumerationMutation(v5);
      }
      double v8 = [(CKChatController *)self _stickerDropProposalForItem:*(void *)(*((void *)&v14 + 1) + 8 * v10) inSession:v4];

      char v12 = [v8 targetBalloonIndex];

      if (v12) {
        break;
      }
      ++v10;
      id v11 = v8;
      if (v7 == v10)
      {
        uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v7) {
          goto LABEL_3;
        }
        break;
      }
    }
  }
  else
  {
    double v8 = 0;
  }

  return v8;
}

- (id)_stickerDropProposalForItem:(id)a3 inSession:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  double v8 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v9 = [v8 collectionView];
  double v10 = *MEMORY[0x1E4F1DAD8];
  double v11 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
  if (objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    char v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf.a) = 0;
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "_stickerDropProposalForItem:inSession: checking view geometry", (uint8_t *)&buf, 2u);
    }

    char v13 = [(CKChatController *)self view];
    long long v14 = [v13 window];
    [v7 _previewCenterForVisibleItem:v6 inView:v14];
    double v10 = v15;
    double v11 = v16;

    [v7 _previewSizeForVisibleItem:v6];
    double v18 = v17;
    double v20 = v19;
    memset(&buf, 0, sizeof(buf));
    [(CKChatController *)self stickerPreviewTransform];
    CGAffineTransformInvert(&buf, &v33);
    memset(&v32, 0, sizeof(v32));
    if (v6) {
      [v6 _suggestedTransform];
    }
    else {
      memset(&t2, 0, sizeof(t2));
    }
    CGAffineTransform t1 = buf;
    CGAffineTransformConcat(&v32, &t1, &t2);
    CGAffineTransform t1 = v32;
    CGAffineTransformDecompose(&v29, &t1);
    __int16 v21 = -[CKChatController selectedBalloonIntersectingRect:](self, "selectedBalloonIntersectingRect:", v10 - v18 * v29.scale.width * 0.5, v11 - v20 * v29.scale.width * 0.5);
    if (!v21)
    {
      uint64_t v28 = IMLogHandleForCategory();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
      {
        LOWORD(t1.a) = 0;
        _os_log_impl(&dword_18EF18000, v28, OS_LOG_TYPE_INFO, "_stickerDropProposalForItem:inSession: no view geometry; will try touch rect",
          (uint8_t *)&t1,
          2u);
      }
    }
  }
  else
  {
    __int16 v21 = 0;
  }
  if (!v21)
  {
    if (v9)
    {
      __int16 v21 = [v9 window];

      if (v21)
      {
        double v22 = IMLogHandleForCategory();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf.a) = 0;
          _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "_stickerDropProposalForItem:inSession: no view geometry; trying touch rect",
            (uint8_t *)&buf,
            2u);
        }

        __int16 v21 = [(CKChatController *)self _selectedBalloonFromTouchForDropSession:v7];
        uint64_t v23 = [v9 window];
        [v7 locationInView:v23];
        double v10 = v24;
        double v11 = v25;
      }
    }
  }
  uint64_t v26 = -[CKTranscriptStickerDropProposal initWithDragItem:previewCenter:targetBalloonIndex:]([CKTranscriptStickerDropProposal alloc], "initWithDragItem:previewCenter:targetBalloonIndex:", v6, v21, v10, v11);

  return v26;
}

- (id)_selectedBalloonFromTouchForDropSession:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self collectionViewController];
  id v6 = [v5 collectionView];
  id v7 = v6;
  if (v6 && ([v6 window], double v8 = objc_claimAutoreleasedReturnValue(), v8, v8))
  {
    uint64_t v9 = [v7 window];
    [v4 locationInView:v9];
    double v11 = v10;
    double v13 = v12;

    CGFloat v14 = *MEMORY[0x1E4F1DB28];
    CGFloat v15 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
    v20.origin.double x = *(CGFloat *)MEMORY[0x1E4F1DB28];
    v20.origin.double y = v15;
    v20.size.width = 44.0;
    v20.size.height = 44.0;
    double v16 = v11 - CGRectGetWidth(v20) * 0.5;
    v21.origin.double x = v14;
    v21.origin.double y = v15;
    v21.size.width = 44.0;
    v21.size.height = 44.0;
    double v17 = -[CKChatController selectedBalloonIntersectingRect:](self, "selectedBalloonIntersectingRect:", v16, v13 - CGRectGetHeight(v21) * 0.5, 44.0, 44.0);
  }
  else
  {
    double v17 = 0;
  }

  return v17;
}

- (void)_sendStickerForDragItem:(id)a3 previewSize:(CGSize)a4 dropLocation:(CGPoint)a5
{
  CGFloat y = a5.y;
  CGFloat x = a5.x;
  CGFloat height = a4.height;
  CGFloat width = a4.width;
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  double v11 = IMLogHandleForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v84.CGFloat x = x;
    v84.CGFloat y = y;
    double v12 = NSStringFromCGPoint(v84);
    *(_DWORD *)CGAffineTransform buf = 138412546;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v12;
    _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "_sendStickerForDragItem: dragItem: %@, dropLocation %@", buf, 0x16u);
  }
  *(void *)CGAffineTransform buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x5010000000;
  double v79 = "";
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  if (v10) {
    [v10 _suggestedTransform];
  }
  v76[0] = 0;
  v76[1] = v76;
  v76[2] = 0x3032000000;
  v76[3] = __Block_byref_object_copy__7;
  v76[4] = __Block_byref_object_dispose__7;
  id v77 = 0;
  id v77 = [(CKChatController *)self hashKeyForDragItem:v10];
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke;
  aBlock[3] = &unk_1E5621FA8;
  void aBlock[4] = self;
  double v72 = v76;
  id v13 = v10;
  CGFloat v74 = x;
  CGFloat v75 = y;
  id v71 = v13;
  double v73 = buf;
  CGFloat v14 = _Block_copy(aBlock);
  CGFloat v15 = [v13 itemProvider];
  int v16 = [v15 hasItemConformingToTypeIdentifier:@"com.apple.sticker.mediaPayload"];

  if (v16)
  {
    uint64_t v17 = MEMORY[0x192FBA860](@"_MSMessageMediaPayload", @"Messages");
    double v18 = [v13 itemProvider];
    v68[0] = MEMORY[0x1E4F143A8];
    v68[1] = 3221225472;
    v68[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_149;
    v68[3] = &unk_1E5621FF8;
    id v69 = v14;
    id v19 = (id)[v18 loadObjectOfClass:v17 completionHandler:v68];
  }
  else
  {
    CGRect v20 = [v13 itemProvider];
    int v21 = [v20 hasItemConformingToTypeIdentifier:@"com.apple.sticker"];

    if (v21)
    {
      v66[0] = 0;
      v66[1] = v66;
      v66[2] = 0x3032000000;
      v66[3] = __Block_byref_object_copy__7;
      v66[4] = __Block_byref_object_dispose__7;
      id v67 = 0;
      v64[0] = 0;
      v64[1] = v64;
      v64[2] = 0x3032000000;
      v64[3] = __Block_byref_object_copy__7;
      v64[4] = __Block_byref_object_dispose__7;
      id v65 = 0;
      v62[0] = 0;
      v62[1] = v62;
      v62[2] = 0x3032000000;
      v62[3] = __Block_byref_object_copy__7;
      v62[4] = __Block_byref_object_dispose__7;
      CGFloat v63 = &stru_1EDE4CA38;
      v60[0] = 0;
      v60[1] = v60;
      v60[2] = 0x3032000000;
      v60[3] = __Block_byref_object_copy__7;
      v60[4] = __Block_byref_object_dispose__7;
      id v61 = 0;
      double v22 = [v13 itemProvider];
      uint64_t v23 = (void *)*MEMORY[0x1E4F44460];
      double v24 = [(id)*MEMORY[0x1E4F44460] identifier];
      char v25 = [v22 hasRepresentationConformingToTypeIdentifier:v24 fileOptions:0];

      uint64_t v26 = [v13 itemProvider];
      id v27 = (void *)*MEMORY[0x1E4F444F0];
      uint64_t v28 = [(id)*MEMORY[0x1E4F444F0] identifier];
      int v29 = [v26 hasRepresentationConformingToTypeIdentifier:v28 fileOptions:0];

      v58[0] = 0;
      v58[1] = v58;
      v58[2] = 0x2020000000;
      int v59 = 0;
      v50[0] = MEMORY[0x1E4F143A8];
      v50[1] = 3221225472;
      v50[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_2;
      v50[3] = &unk_1E5622020;
      double v52 = v64;
      uint64_t v53 = v66;
      id v54 = v62;
      double v55 = v60;
      id v51 = v14;
      CGFloat v56 = width;
      CGFloat v57 = height;
      double v30 = _Block_copy(v50);
      if (v25)
      {
        if (v29)
        {
          id v31 = [v13 itemProvider];
          CGAffineTransform v32 = [v27 identifier];
          v44[0] = MEMORY[0x1E4F143A8];
          v44[1] = 3221225472;
          v44[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_156;
          v44[3] = &unk_1E5622048;
          long long v46 = v60;
          uint64_t v47 = v62;
          uint64_t v48 = v58;
          char v49 = v25;
          id v45 = v30;
          id v33 = (id)[v31 loadDataRepresentationForTypeIdentifier:v32 completionHandler:v44];
        }
        __int16 v34 = [v13 itemProvider];
        uint64_t v35 = [v23 identifier];
        v38[0] = MEMORY[0x1E4F143A8];
        v38[1] = 3221225472;
        v38[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_162;
        v38[3] = &unk_1E5622070;
        uint64_t v40 = v66;
        double v41 = v64;
        CGPoint v42 = v58;
        char v43 = v29;
        uint64_t v39 = v30;
        id v36 = (id)[v34 loadFileRepresentationForTypeIdentifier:v35 completionHandler:v38];

        id v37 = v39;
      }
      else
      {
        id v37 = IMLogHandleForCategory();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          -[CKChatController(CKChatController_Stickers) _sendStickerForDragItem:previewSize:dropLocation:]();
        }
      }

      _Block_object_dispose(v58, 8);
      _Block_object_dispose(v60, 8);

      _Block_object_dispose(v62, 8);
      _Block_object_dispose(v64, 8);

      _Block_object_dispose(v66, 8);
    }
  }

  _Block_object_dispose(v76, 8);
  _Block_object_dispose(buf, 8);
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke(uint64_t a1, void *a2, CGFloat a3, CGFloat a4)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  double v8 = [*(id *)(a1 + 32) activeDropPreviews];
  uint64_t v9 = [v8 objectForKey:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];

  id v10 = [v9 _previewContainer];
  if (objc_opt_respondsToSelector())
  {
    double v11 = [v9 _previewContainer];
  }
  else
  {
    double v11 = 0;
  }

  id location = 0;
  objc_initWeak(&location, *(id *)(a1 + 32));
  if (v11)
  {
    double v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v33.CGFloat width = a3;
      v33.CGFloat height = a4;
      id v13 = NSStringFromCGSize(v33);
      *(_DWORD *)CGAffineTransform buf = 138412546;
      id v29 = v7;
      __int16 v30 = 2112;
      id v31 = v13;
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Scheduling performAfterDropAnimation to commit sticker %@, size: %@", buf, 0x16u);
    }
  }
  else
  {
    double v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_cold_1();
    }
  }

  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_137;
  v18[3] = &unk_1E5621F80;
  id v14 = v7;
  id v19 = v14;
  objc_copyWeak(&v23, &location);
  id v15 = *(id *)(a1 + 40);
  int8x16_t v16 = *(int8x16_t *)(a1 + 48);
  long long v24 = *(_OWORD *)(a1 + 64);
  CGFloat v25 = a3;
  CGFloat v26 = a4;
  uint64_t v17 = *(void *)(a1 + 32);
  id v20 = v15;
  uint64_t v21 = v17;
  int8x16_t v22 = vextq_s8(v16, v16, 8uLL);
  [v11 performAfterDropAnimation:v18];

  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_137(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  dispatch_time_t v2 = IMLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    LODWORD(v26[0]) = 138412290;
    *(void *)((char *)v26 + 4) = v3;
    _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "performAfterDropAnimation: callback for sticker: %@", (uint8_t *)v26, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  [MEMORY[0x1E4F39CF8] begin];
  [MEMORY[0x1E4F39CF8] setDisableActions:1];
  id v5 = [*(id *)(a1 + 32) stickerPackGUID];

  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) stickerPackGUID];
    uint64_t v7 = [v6 length];

    if (!v7)
    {
      double v8 = IMLogHandleForCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_137_cold_2(a1 + 32, v8, v9, v10, v11, v12, v13, v14);
      }
    }
    id v15 = *(_OWORD **)(*(void *)(a1 + 56) + 8);
    uint64_t v16 = *(void *)(a1 + 32);
    uint64_t v17 = [MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:*(void *)(a1 + 40)];
    double v18 = [*(id *)(a1 + 48) _stickerChatItemForDragItem:*(void *)(a1 + 40)];
    double v19 = *(double *)(a1 + 80);
    double v20 = *(double *)(a1 + 88);
    double v21 = *(double *)(a1 + 96);
    double v22 = *(double *)(a1 + 104);
    long long v23 = v15[3];
    v26[0] = v15[2];
    v26[1] = v23;
    void v26[2] = v15[4];
    objc_msgSend(WeakRetained, "_commitSticker:toCoordinate:withInitialSize:dropPreviewTransform:isRepositioningSticker:localStickerChatItem:", v16, v26, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    double v18 = IMLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_137_cold_1((void *)(a1 + 32), a1, v18);
    }
  }

  [MEMORY[0x1E4F39CF8] commit];
  long long v24 = [WeakRetained activeDropPreviews];
  [v24 removeObjectForKey:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)];

  CGFloat v25 = [WeakRetained inputController];
  [v25 stickerDropAnimationFinished];

  [WeakRetained setIgnoresAutomaticScrollsTowardBottom:0];
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_149(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = IMLogHandleForCategory();
  double v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_149_cold_1();
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)CGAffineTransform buf = 0;
    _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Finished loading _MSMessageMediaPayload from item provider.", buf, 2u);
  }

  uint64_t v9 = [MEMORY[0x1E4F6EA58] stickerWithMSMessageMediaPayload:v6];
  [v6 sourceFrame];
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_150;
  v16[3] = &unk_1E5621FD0;
  id v14 = *(id *)(a1 + 32);
  id v17 = v9;
  id v18 = v14;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  id v15 = v9;
  dispatch_async(MEMORY[0x1E4F14428], v16);
}

uint64_t __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_150(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, double, double))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56));
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_2(uint64_t a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F6EA58]);
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v4 = [MEMORY[0x1E4F6E760] defaultEmojiStickerPackID];
  id v5 = (void *)[v2 initWithStickerID:v3 stickerPackID:v4 fileURL:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) accessibilityLabel:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) accessibilityName:0 searchText:0 sanitizedPrompt:0 moodCategory:0 stickerName:0];

  [v5 setExternalURI:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_3;
  block[3] = &unk_1E5621FD0;
  id v6 = *(id *)(a1 + 32);
  id v9 = v5;
  id v10 = v6;
  long long v11 = *(_OWORD *)(a1 + 72);
  id v7 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, double, double))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56));
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_156(uint64_t a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = [MEMORY[0x1E4F1CA20] currentLocale];
    [v7 localeIdentifier];
    double v8 = (const void *)CEMCreateEmojiLocaleData();

    id v9 = (void *)[[NSString alloc] initWithData:v5 encoding:4];
    if (v9) {
      BOOL v10 = v8 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10)
    {
      if (!v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = [NSString stringWithFormat:@"sticker:///emoji/identifier/%@", v9];
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
      id v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      uint64_t v15 = CEMEmojiTokenCreateWithString();
      if (v15)
      {
        uint64_t v16 = (const void *)v15;
        uint64_t v17 = CEMEmojiTokenCopyName();
        uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8);
        uint64_t v19 = *(void **)(v18 + 40);
        *(void *)(v18 + 40) = v17;

        CFRelease(v16);
      }
    }
    CFRelease(v8);
LABEL_15:

    goto LABEL_16;
  }
  long long v11 = IMLogHandleForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)CGAffineTransform buf = 138412290;
    id v22 = v6;
    _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "emoji sticker drag failed with error: %@", buf, 0xCu);
  }

LABEL_16:
  int add = atomic_fetch_add((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 56) + 8) + 24), 1u);
  if (!*(unsigned char *)(a1 + 64) || add >= 1) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_162(uint64_t a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v7 = IMLogHandleForCategory();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  if (v5)
  {
    if (v8)
    {
      *(_DWORD *)CGAffineTransform buf = 138412290;
      id v23 = v5;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "received emoji sticker drag: %@", buf, 0xCu);
    }

    id v9 = NSString;
    BOOL v10 = [v5 path];
    long long v11 = IMSharedHelperMD5HashOfFileAtPath();
    id v7 = [v9 stringWithFormat:@"%@-sticker", v11];

    uint64_t v12 = [v5 pathExtension];
    if (v12)
    {
      uint64_t v13 = [v7 stringByAppendingPathExtension:v12];

      id v7 = v13;
    }
    id v14 = [MEMORY[0x1E4F28CB8] defaultManager];
    uint64_t v15 = objc_msgSend(v14, "im_randomTemporaryFileURLWithFileName:", v7);

    uint64_t v16 = [MEMORY[0x1E4F28CB8] defaultManager];
    id v21 = 0;
    char v17 = [v16 copyItemAtURL:v5 toURL:v15 error:&v21];
    id v18 = v21;

    if ((v17 & 1) == 0)
    {
      uint64_t v19 = IMLogHandleForCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_162_cold_1();
      }
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v15);
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v7);
    int add = atomic_fetch_add((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 56) + 8) + 24), 1u);
    if (!*(unsigned char *)(a1 + 64) || add >= 1) {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
  else if (v8)
  {
    *(_DWORD *)CGAffineTransform buf = 138412290;
    id v23 = v6;
    _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "emoji sticker drag failed with error: %@", buf, 0xCu);
  }
}

- (void)_commitSticker:(id)a3 toCoordinate:(CGPoint)a4 withInitialSize:(CGSize)a5 dropPreviewTransform:(CGAffineTransform *)a6
{
  long long v6 = *(_OWORD *)&a6->c;
  v7[0] = *(_OWORD *)&a6->a;
  v7[1] = v6;
  v7[2] = *(_OWORD *)&a6->tx;
  -[CKChatController _commitSticker:toCoordinate:withInitialSize:dropPreviewTransform:isRepositioningSticker:localStickerChatItem:](self, "_commitSticker:toCoordinate:withInitialSize:dropPreviewTransform:isRepositioningSticker:localStickerChatItem:", a3, v7, 0, 0, a4.x, a4.y, a5.width, a5.height);
}

- (void)sendSticker:(id)a3 toCoordinate:(CGPoint)a4 withInitialSize:(CGSize)a5 dropPreviewTransform:(CGAffineTransform *)a6 isRepositioningSticker:(BOOL)a7 localStickerChatItem:(id)a8
{
  long long v8 = *(_OWORD *)&a6->c;
  v9[0] = *(_OWORD *)&a6->a;
  v9[1] = v8;
  v9[2] = *(_OWORD *)&a6->tx;
  -[CKChatController _commitSticker:toCoordinate:withInitialSize:dropPreviewTransform:isRepositioningSticker:localStickerChatItem:](self, "_commitSticker:toCoordinate:withInitialSize:dropPreviewTransform:isRepositioningSticker:localStickerChatItem:", a3, v9, a7, a8, a4.x, a4.y, a5.width, a5.height);
}

- (void)_commitSticker:(id)a3 toCoordinate:(CGPoint)a4 withInitialSize:(CGSize)a5 dropPreviewTransform:(CGAffineTransform *)a6 isRepositioningSticker:(BOOL)a7 localStickerChatItem:(id)a8
{
  BOOL v9 = a7;
  double height = a5.height;
  double width = a5.width;
  double y = a4.y;
  double x = a4.x;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v16 = a3;
  id v17 = a8;
  id v18 = IMLogHandleForCategory();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
  {
    v34.double x = x;
    v34.double y = y;
    uint64_t v19 = NSStringFromCGPoint(v34);
    v35.double width = width;
    v35.double height = height;
    uint64_t v20 = NSStringFromCGSize(v35);
    id v21 = NSStringFromBOOL();
    LODWORD(buf.a) = 138413058;
    *(void *)((char *)&buf.a + 4) = v16;
    WORD2(buf.b) = 2112;
    *(void *)((char *)&buf.b + 6) = v19;
    HIWORD(buf.c) = 2112;
    *(void *)&buf.d = v20;
    LOWORD(buf.tx) = 2112;
    *(void *)((char *)&buf.tx + 2) = v21;
    _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "_commitSticker: %@, coordinate: %@, initialSize: %@ repositioning: %@", (uint8_t *)&buf, 0x2Au);
  }
  memset(&buf, 0, sizeof(buf));
  [(CKChatController *)self stickerPreviewTransform];
  CGAffineTransformInvert(&buf, &v31);
  CGAffineTransform t1 = buf;
  memset(&v30, 0, sizeof(v30));
  long long v22 = *(_OWORD *)&a6->c;
  *(_OWORD *)&v28.a = *(_OWORD *)&a6->a;
  *(_OWORD *)&v28.c = v22;
  *(_OWORD *)&v28.tdouble x = *(_OWORD *)&a6->tx;
  CGAffineTransformConcat(&v30, &t1, &v28);
  CGAffineTransform v28 = v30;
  memset(&t1, 0, sizeof(t1));
  CGAffineTransformDecompose((CGAffineTransformComponents *)&t1, &v28);
  double v23 = fmax(t1.a, 0.0);
  if (v23 <= 0.0) {
    double v24 = 1.0;
  }
  else {
    double v24 = v23;
  }
  objc_msgSend(v16, "calculatePreviewScaleWithTargetSize:", width, height);
  CGFloat v26 = +[CKBrowserDragControllerTarget targetWithScreenCoordinate:initialSize:scale:meshScaleFactor:rotation:associatedLayoutIntent:stickerIsRepositioning:stickerChatItem:](CKBrowserDragControllerTarget, "targetWithScreenCoordinate:initialSize:scale:meshScaleFactor:rotation:associatedLayoutIntent:stickerIsRepositioning:stickerChatItem:", 0, v9, v17, x, y, width, height, v25 * v24, 0.4, t1.d);

  uint64_t v27 = [(CKCoreChatController *)self inputController];
  [v27 commitSticker:v16 withDragTarget:v26 draggedSticker:0];
}

- (void)_sendNewStickerFromDropSession:(id)a3
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKChatController *)self _stickerDropProposalForSession:v4];
  if (IMOSLoggingEnabled())
  {
    long long v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = [(CKChatController *)self dropSession];
      long long v8 = [v5 dragItem];
      [v5 previewCenter];
      NSStringFromCGPoint(v38);
      id v9 = (id)objc_claimAutoreleasedReturnValue();
      BOOL v10 = [v5 targetBalloonIndex];
      int v29 = 138413058;
      id v30 = v7;
      __int16 v31 = 2112;
      uint64_t v32 = v8;
      __int16 v33 = 2112;
      id v34 = v9;
      __int16 v35 = 2112;
      id v36 = v10;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "_sendNewStickerFromDropSession: got dropProposal for session: %@, dragItem: %@, previewCenter: %@, targetBalloonIndex: %@", (uint8_t *)&v29, 0x2Au);
    }
  }
  long long v11 = [v5 targetBalloonIndex];

  if (!v11)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        id v21 = [v5 dragItem];
        long long v22 = [(CKChatController *)self dropSession];
        int v29 = 138412546;
        id v30 = v21;
        __int16 v31 = 2112;
        uint64_t v32 = v22;
        _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "_sendNewStickerFromDropSession: Aborting the sticker drop because there was no valid target balloon sufficiently close to the drop preview for item: %@, drop session: %@.", (uint8_t *)&v29, 0x16u);
      }
    }
    double v23 = [v5 dragItem];
    id v17 = [(CKChatController *)self hashKeyForDragItem:v23];

    double v24 = [(CKChatController *)self activeDropPreviews];
    double v25 = [v24 objectForKey:v17];

    CGFloat v26 = [v25 _previewContainer];
    if (objc_opt_respondsToSelector())
    {
      uint64_t v27 = [v25 _previewContainer];

      if (!v27)
      {
LABEL_16:
        CGAffineTransform v28 = [(CKChatController *)self activeDropPreviews];
        [v28 removeObjectForKey:v17];

        goto LABEL_17;
      }
      [v27 setDefersFinalDropAnimationCompletion:0];
    }
    else
    {
      uint64_t v27 = v26;
    }

    goto LABEL_16;
  }
  uint64_t v12 = [v5 dragItem];
  [v4 _previewSizeForVisibleItem:v12];
  double v14 = v13;
  double v16 = v15;

  id v17 = [v5 dragItem];
  [v5 previewCenter];
  -[CKChatController _sendStickerForDragItem:previewSize:dropLocation:](self, "_sendStickerForDragItem:previewSize:dropLocation:", v17, v14, v16, v18, v19);
LABEL_17:
}

- (id)cellIndexPathForDragTarget:(id)a3
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self collectionViewController];
  long long v6 = [v5 collectionView];

  id v7 = [v6 window];
  [v4 screenCoordinate];
  objc_msgSend(v7, "convertPoint:toView:", v6);
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v12 = objc_msgSend(v6, "indexPathsForVisibleItems", 0);
  id v13 = (id)[v12 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v13)
  {
    uint64_t v14 = *(void *)v20;
    while (2)
    {
      for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v14) {
          objc_enumerationMutation(v12);
        }
        double v16 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        if (![v16 section])
        {
          id v17 = [v6 cellForItemAtIndexPath:v16];
          [v17 frame];
          v26.double x = v9;
          v26.double y = v11;
          if (CGRectContainsPoint(v27, v26))
          {
            id v13 = v16;

            goto LABEL_13;
          }
        }
      }
      id v13 = (id)[v12 countByEnumeratingWithState:&v19 objects:v23 count:16];
      if (v13) {
        continue;
      }
      break;
    }
  }
LABEL_13:

  return v13;
}

- (void)sendSticker:(id)a3 withMediaObject:(id)a4 composition:(id)a5 parentMessagePartChatItem:(id)a6
{
}

- (void)sendSticker:(id)a3 withMediaObject:(id)a4 composition:(id)a5 parentMessagePartChatItem:(id)a6 messageSummaryInfo:(id)a7
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  if (v12)
  {
    if (v13)
    {
      if (v14)
      {
        id v17 = [(CKCoreChatController *)self conversation];
        id v30 = 0;
        char v18 = [v17 canSendComposition:v14 error:&v30];
        long long v19 = v30;

        if (v18)
        {
          long long v20 = +[CKStickerDropCommSafetySendContext contextWithSticker:v12 composition:v14 mediaObject:v13 parentMessagePartChatItem:v15 messageSummaryInfo:v16];
          long long v21 = [v13 transfer];
          long long v22 = [v21 fileURL];
          v23[0] = MEMORY[0x1E4F143A8];
          v23[1] = 3221225472;
          v23[2] = __132__CKChatController_CKChatController_Stickers__sendSticker_withMediaObject_composition_parentMessagePartChatItem_messageSummaryInfo___block_invoke;
          v23[3] = &unk_1E5622098;
          id v24 = v12;
          double v25 = self;
          id v26 = v13;
          id v27 = v14;
          id v28 = v15;
          id v29 = v16;
          [(CKChatController *)self presentCommSafetyInterventionIfNecessaryForFileURL:v22 withSendContext:v20 completion:v23];
        }
        else
        {
          long long v20 = IMLogHandleForCategory();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)CGAffineTransform buf = 138412802;
            id v32 = v14;
            __int16 v33 = 2112;
            id v34 = v15;
            __int16 v35 = 2112;
            id v36 = v19;
            _os_log_error_impl(&dword_18EF18000, v20, OS_LOG_TYPE_ERROR, "Unable to send composition: %@ for messageItem: %@ with error: %@", buf, 0x20u);
          }
        }
      }
      else
      {
        long long v19 = IMLogHandleForCategory();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          -[CKChatController(CKChatController_Stickers) sendSticker:withMediaObject:composition:parentMessagePartChatItem:messageSummaryInfo:]();
        }
      }
    }
    else
    {
      long long v19 = IMLogHandleForCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(CKChatController_Stickers) sendSticker:withMediaObject:composition:parentMessagePartChatItem:messageSummaryInfo:]();
      }
    }
  }
  else
  {
    long long v19 = IMLogHandleForCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(CKChatController_Stickers) sendSticker:withMediaObject:composition:parentMessagePartChatItem:messageSummaryInfo:]();
    }
  }
}

void __132__CKChatController_CKChatController_Stickers__sendSticker_withMediaObject_composition_parentMessagePartChatItem_messageSummaryInfo___block_invoke(void *a1, int a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    uint64_t v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = a1[4];
      int v11 = 138412290;
      uint64_t v12 = v4;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Sticker was sensitive, deferring send for intervention: %@", (uint8_t *)&v11, 0xCu);
    }
  }
  else
  {
    uint64_t v6 = a1[4];
    id v5 = (void *)a1[5];
    uint64_t v7 = a1[6];
    uint64_t v8 = a1[7];
    uint64_t v9 = a1[8];
    uint64_t v10 = a1[9];
    [v5 _sendCommSafetyVerifiedSticker:v6 withMediaObject:v7 composition:v8 parentMessagePartChatItem:v9 messageSummaryInfo:v10];
  }
}

- (void)handleStickerDropConfirmCommSafetySendContext:(id)a3
{
  id v4 = a3;
  id v9 = [v4 sticker];
  id v5 = [v4 mediaObject];
  uint64_t v6 = [v4 composition];
  uint64_t v7 = [v4 parentMessagePartChatItem];
  uint64_t v8 = [v4 messageSummaryInfo];

  [(CKChatController *)self _sendCommSafetyVerifiedSticker:v9 withMediaObject:v5 composition:v6 parentMessagePartChatItem:v7 messageSummaryInfo:v8];
}

- (void)_sendCommSafetyVerifiedSticker:(id)a3 withMediaObject:(id)a4 composition:(id)a5 parentMessagePartChatItem:(id)a6 messageSummaryInfo:(id)a7
{
  id v11 = a5;
  id v12 = a6;
  id v32 = a7;
  id v33 = a4;
  id v13 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v14 = [v12 aggregateChatItems];
    uint64_t v15 = [v14 firstObject];

    id v12 = (id)v15;
  }
  id v35 = 0;
  id v30 = [v11 superFormatText:&v35];
  id v16 = v35;
  id v29 = objc_alloc(MEMORY[0x1E4F6BD18]);
  id v28 = [MEMORY[0x1E4F1C9C8] date];
  id v17 = [NSString stringGUID];
  char v18 = [v12 IMChatItem];
  long long v19 = [v18 guid];
  if ([v13 isEmojiSticker]) {
    uint64_t v20 = 1001;
  }
  else {
    uint64_t v20 = 1000;
  }
  __int16 v31 = v11;
  uint64_t v21 = [v12 messagePartRange];
  uint64_t v23 = v22;
  id v24 = [v12 threadIdentifier];
  double v25 = objc_msgSend(v29, "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:", 0, v28, v30, 0, v16, 5, 0, v17, 0, v19, v20, v21, v23, v32, v24);

  id v26 = [v33 transfer];

  [v26 setIMMessage:v25];
  +[CKAssociatedStickerChatItem addDroppedSticker:v13];
  id v27 = [(CKCoreChatController *)self conversation];
  [(CKChatController *)self sendMessage:v25 forConversation:v27 newComposition:0];

  [(id)objc_opt_class() donateStickerToRecents:v13];
}

- (BOOL)repositionSticker:(id)a3 stickerChatItem:(id)a4 parentMessagePartChatItem:(id)a5 stickerPositioningInfo:(id)a6
{
  v61[1] = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v58 = a5;
  id v59 = a6;
  id v12 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  LOBYTE(a5) = [v12 isStickerRepositioningEnabled];

  if (a5)
  {
    id v13 = 0;
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    id v14 = IMLogHandleForCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(CKChatController_Stickers) repositionSticker:stickerChatItem:parentMessagePartChatItem:stickerPositioningInfo:].cold.5();
    }

    id v13 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKChatControllerStickerErrorDomain" code:1 userInfo:0];
    if (v10)
    {
LABEL_3:
      if (v11) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  uint64_t v15 = IMLogHandleForCategory();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
    -[CKChatController(CKChatController_Stickers) repositionSticker:stickerChatItem:parentMessagePartChatItem:stickerPositioningInfo:].cold.4();
  }

  uint64_t v16 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKChatControllerStickerErrorDomain" code:2 userInfo:0];

  id v13 = (void *)v16;
  if (!v11)
  {
LABEL_11:
    id v17 = IMLogHandleForCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(CKChatController_Stickers) repositionSticker:stickerChatItem:parentMessagePartChatItem:stickerPositioningInfo:]();
    }

    uint64_t v18 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKChatControllerStickerErrorDomain" code:3 userInfo:0];

    id v13 = (void *)v18;
  }
LABEL_14:
  if (!v59)
  {
    long long v19 = IMLogHandleForCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(CKChatController_Stickers) repositionSticker:stickerChatItem:parentMessagePartChatItem:stickerPositioningInfo:]();
    }

    uint64_t v20 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKChatControllerStickerErrorDomain" code:4 userInfo:0];

    id v13 = (void *)v20;
  }
  uint64_t v21 = IMSharedHelperMissingKeysInStickerUserInfo();
  CGFloat v57 = v21;
  if ([v21 count])
  {
    uint64_t v22 = IMLogHandleForCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(CKChatController_Stickers) repositionSticker:stickerChatItem:parentMessagePartChatItem:stickerPositioningInfo:]();
    }

    uint64_t v23 = [v21 componentsJoinedByString:@" "];
    id v24 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v60 = *MEMORY[0x1E4F28228];
    double v25 = [NSString stringWithFormat:@"Missing keys: %@", v23];
    v61[0] = v25;
    id v26 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v61 forKeys:&v60 count:1];
    uint64_t v27 = [v24 errorWithDomain:@"CKChatControllerStickerErrorDomain" code:5 userInfo:v26];

    id v13 = (void *)v27;
  }
  if (v13)
  {
    id v28 = [MEMORY[0x1E4F6E890] sharedInstance];
    [v28 forceAutoBugCaptureWithSubType:@"Invalid Sticker Reposition" errorPayload:v13];
  }
  else
  {
    uint64_t v53 = self;
    id v29 = [(CKCoreChatController *)self chat];
    id v30 = [v11 IMChatItem];
    __int16 v31 = [v30 guid];
    id v32 = [v31 _stripFZIDPrefix];
    id v54 = [v29 messageItemForGUID:v32];

    id v33 = [v54 message];
    id v34 = [v33 messageSummaryInfo];
    CGFloat v56 = (void *)[v34 mutableCopy];

    [v56 setValue:v59 forKey:*MEMORY[0x1E4F6D6A0]];
    id v51 = objc_alloc(MEMORY[0x1E4F6BD18]);
    double v50 = [v33 sender];
    char v49 = [v33 time];
    uint64_t v48 = [v33 text];
    uint64_t v47 = [v33 messageSubject];
    long long v46 = [v33 fileTransferGUIDs];
    [v33 guid];
    id v35 = v55 = v10;
    id v36 = [v33 subject];
    uint64_t v37 = [v33 associatedMessageGUID];
    if ([v55 isEmojiSticker]) {
      uint64_t v38 = 1001;
    }
    else {
      uint64_t v38 = 1000;
    }
    uint64_t v39 = [v58 messagePartRange];
    uint64_t v41 = v40;
    CGPoint v42 = [v33 threadIdentifier];
    double v52 = objc_msgSend(v51, "initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:", v50, v49, v48, v47, v46, 5, 0, v35, v36, v37, v38, v39, v41, v56, v42);

    id v10 = v55;
    +[CKAssociatedStickerChatItem addDroppedSticker:v55];
    char v43 = [(CKCoreChatController *)v53 conversation];
    double v44 = [v11 IMChatItem];
    [v43 repositionSticker:v52 associatedChatItem:v44];

    id v28 = v54;
  }

  return v13 == 0;
}

- (id)_originalIndexPathForRepositioningDropSession:(id)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v3 = objc_msgSend(a3, "items", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v15;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v15 != v6) {
        objc_enumerationMutation(v3);
      }
      uint64_t v8 = *(void **)(*((void *)&v14 + 1) + 8 * v7);
      if ([MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:v8])
      {
        id v9 = [v8 localObject];
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) == 0) {
          goto LABEL_11;
        }
        id v11 = [v8 localObject];
        id v12 = [v11 objectForKey:@"kStickerDragItemOriginalIndexPathKey"];

        if (v12) {
          break;
        }
      }
      if (v5 == ++v7)
      {
        uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v5) {
          goto LABEL_3;
        }
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    id v12 = 0;
  }

  return v12;
}

- (id)_stickerChatItemForDragItem:(id)a3
{
  id v3 = a3;
  if ([MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:v3]
    && ([v3 localObject],
        uint64_t v4 = objc_claimAutoreleasedReturnValue(),
        objc_opt_class(),
        char isKindOfClass = objc_opt_isKindOfClass(),
        v4,
        (isKindOfClass & 1) != 0))
  {
    uint64_t v6 = [v3 localObject];
    uint64_t v7 = [v6 objectForKey:@"kStickerDragItemChatItemKey"];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

- (BOOL)_dropSessionIsNewSticker:(id)a3
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = objc_msgSend(a3, "items", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8 * i);
        if ([MEMORY[0x1E4F6EA58] dragItemIsSticker:v7]
          && ![MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:v7])
        {
          LOBYTE(v4) = 1;
          goto LABEL_12;
        }
      }
      uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_12:

  return v4;
}

- (void)_registerRepresentationsInItemProvider:(id)a3 sticker:(id)a4
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v6 = [a4 representations];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v17 != v9) {
          objc_enumerationMutation(v6);
        }
        long long v11 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        long long v12 = [v11 type];
        char v13 = [v5 hasItemConformingToTypeIdentifier:v12];

        if ((v13 & 1) == 0)
        {
          uint64_t v14 = [v11 type];
          v15[0] = MEMORY[0x1E4F143A8];
          v15[1] = 3221225472;
          v15[2] = __94__CKChatController_CKChatController_Stickers___registerRepresentationsInItemProvider_sticker___block_invoke;
          v15[3] = &unk_1E56220C0;
          void v15[4] = v11;
          [v5 registerItemForTypeIdentifier:v14 loadHandler:v15];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v8);
  }
}

void __94__CKChatController_CKChatController_Stickers___registerRepresentationsInItemProvider_sticker___block_invoke(uint64_t a1, void (**a2)(void, void, void))
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = a2;
  id v5 = [v3 data];
  ((void (**)(void, id, void))a2)[2](v4, v5, 0);
}

- (void)_registerStandardRepresentationsInItemProvider:(id)a3 sticker:(id)a4 effectView:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = MEMORY[0x192FBA860](@"MSSticker", @"Messages");
  long long v12 = [v9 fileURL];

  if (v12)
  {
    char v13 = [(id)*MEMORY[0x1E4F44460] identifier];
    v45[0] = MEMORY[0x1E4F143A8];
    v45[1] = 3221225472;
    v45[2] = __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke;
    v45[3] = &unk_1E56220E8;
    id v46 = v9;
    uint64_t v47 = self;
    [v8 registerItemForTypeIdentifier:v13 loadHandler:v45];

    uint64_t v14 = v46;
  }
  else
  {
    long long v15 = [v9 representations];
    uint64_t v14 = [v15 firstObject];

    long long v16 = [(CKChatController *)self representationForRole:*MEMORY[0x1E4F441E0] sticker:v9];
    long long v17 = [(CKChatController *)self representationForRole:*MEMORY[0x1E4F441D0] sticker:v9];
    if (v14 && v14 == v16)
    {
      long long v18 = [v14 type];
      v43[0] = MEMORY[0x1E4F143A8];
      v43[1] = 3221225472;
      v43[2] = __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_2;
      v43[3] = &unk_1E56220C0;
      id v44 = v14;
      [v8 registerItemForTypeIdentifier:v18 loadHandler:v43];
    }
    if (v17)
    {
      uint64_t v30 = v11;
      id v32 = v16;
      __int16 v31 = [v10 effect];
      long long v19 = (void *)MEMORY[0x1E4F42A80];
      uint64_t v20 = [v17 data];
      uint64_t v21 = [v10 window];
      uint64_t v22 = [v21 screen];
      [v22 scale];
      uint64_t v23 = objc_msgSend(v19, "imageWithData:scale:", v20);

      id v24 = [v17 type];
      double v25 = [(id)*MEMORY[0x1E4F443E0] identifier];
      LODWORD(v21) = [v24 isEqualToString:v25];

      if (v21)
      {
        id v26 = [v17 type];
        v37[0] = MEMORY[0x1E4F143A8];
        v37[1] = 3221225472;
        v37[2] = __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_3;
        v37[3] = &unk_1E5622138;
        id v38 = v31;
        uint64_t v42 = v30;
        id v39 = v23;
        uint64_t v40 = self;
        id v41 = v17;
        [v8 registerItemForTypeIdentifier:v26 loadHandler:v37];
      }
      uint64_t v27 = [(id)*MEMORY[0x1E4F44460] identifier];
      v33[0] = MEMORY[0x1E4F143A8];
      v33[1] = 3221225472;
      v33[2] = __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_5;
      v33[3] = &unk_1E5622160;
      id v34 = v31;
      id v35 = v23;
      id v36 = self;
      id v28 = v23;
      id v29 = v31;
      [v8 registerItemForTypeIdentifier:v27 loadHandler:v33];

      long long v16 = v32;
    }
  }
}

void __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke(uint64_t a1, void *a2)
{
  id v3 = (void *)MEMORY[0x1E4F42A80];
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v6 = [v4 fileURL];
  uint64_t v7 = [v6 path];
  id v8 = [v3 imageWithContentsOfFile:v7];

  [*(id *)(a1 + 40) addPNGImage:v8 completion:v5];
}

void __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_2(uint64_t a1, void (**a2)(void, void, void))
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = a2;
  id v5 = [v3 data];
  ((void (**)(void, id, void))a2)[2](v4, v5, 0);
}

void __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_3(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (*(void *)(a1 + 32) && [*(id *)(a1 + 64) _isHEICSupported])
  {
    id v8 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v9 = [v8 isStickersAppEnabled];

    if (v9)
    {
      id v10 = *(void **)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      v13[2] = __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_4;
      v13[3] = &unk_1E5622110;
      void v13[4] = *(void *)(a1 + 48);
      id v14 = v6;
      [v10 applyToImage:v11 completion:v13];
    }
  }
  else
  {
    long long v12 = [*(id *)(a1 + 56) data];
    (*((void (**)(id, void *, void))v6 + 2))(v6, v12, 0);
  }
}

uint64_t __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addHEICImage:a2 completion:*(void *)(a1 + 40)];
}

void __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_5(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (*(void *)(a1 + 32))
  {
    id v8 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v9 = [v8 isStickersAppEnabled];

    if (v9)
    {
      id v10 = *(void **)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 3221225472;
      void v12[2] = __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_6;
      v12[3] = &unk_1E5622110;
      v12[4] = *(void *)(a1 + 48);
      id v13 = v6;
      [v10 applyToImage:v11 completion:v12];
    }
  }
  else
  {
    [*(id *)(a1 + 48) addPNGImage:*(void *)(a1 + 40) completion:v6];
  }
}

uint64_t __113__CKChatController_CKChatController_Stickers___registerStandardRepresentationsInItemProvider_sticker_effectView___block_invoke_6(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addPNGImage:a2 completion:*(void *)(a1 + 40)];
}

- (id)representationForRole:(id)a3 sticker:(id)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = objc_msgSend(a4, "representations", 0);
  id v7 = (id)[v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v15;
    while (2)
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v6);
        }
        id v10 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v11 = [v10 role];
        char v12 = [v11 isEqualToString:v5];

        if (v12)
        {
          id v7 = v10;
          goto LABEL_11;
        }
      }
      id v7 = (id)[v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v7;
}

- (void)addHEICImage:(id)a3 completion:(id)a4
{
  id v5 = a3;
  id v6 = (void (**)(id, id, void))a4;
  [v5 CGImage];
  id v7 = (id)IMCreateHEICSImageDataFromCGImageRef();
  v6[2](v6, v7, 0);
}

- (void)addPNGImage:(id)a3 completion:(id)a4
{
  id v5 = a3;
  id v6 = (void (**)(id, id, void))a4;
  [v5 CGImage];
  id v7 = (id)IMCreatePNGImageDataFromCGImageRef();
  v6[2](v6, v7, 0);
}

- (void)saveStickerFromChatItem:(id)a3 pluginSourceView:(id)a4 animateFlyIn:(BOOL)a5
{
  id v8 = a3;
  id v9 = a4;
  if (v8)
  {
    [(CKChatController *)self dismissKeyboard];
    id v10 = IMStickersExtensionIdentifier();
    uint64_t v11 = IMBalloonExtensionIDWithSuffix();

    char v12 = [(CKCoreChatController *)self inputController];
    [v12 showPluginWithExtensionIdentifier:v11 sourceView:v9];

    id v13 = [(CKCoreChatController *)self collectionViewController];
    long long v14 = [v13 collectionView];
    long long v15 = +[CKUIBehavior sharedBehaviors];
    int v16 = [v15 shouldScrollToSavedSticker];

    if (v16)
    {
      [v14 setIgnoresAutomaticScrollsTowardBottom:1];
      long long v17 = [(CKCoreChatController *)self inputController];
      [v17 _appCardHeightWithSafeArea];
      double v19 = v18;
      uint64_t v20 = [(CKChatController *)self entryView];
      [v20 frame];
      double v22 = v19 + v21;

      uint64_t v23 = [(CKCoreChatController *)self collectionViewController];
      id v24 = [v23 collectionView];
      [v24 contentInset];
      double v26 = v25;
      double v28 = v27;
      double v30 = v29;

      [v14 bounds];
      v61.origin.double x = v28 + v31;
      double v32 = 0.0;
      v61.origin.double y = v26 + 0.0;
      v61.size.double width = v33 - (v28 + v30);
      v61.size.double height = v34 - (v22 + v26);
      double MidY = CGRectGetMidY(v61);
      id v36 = [v13 balloonViewForChatItem:v8];
      if (v36)
      {
        uint64_t v37 = [(CKChatController *)self view];
        [v36 frame];
        double v39 = v38;
        double v41 = v40;
        double v43 = v42;
        double v45 = v44;
        id v46 = [v36 superview];
        objc_msgSend(v37, "convertRect:fromView:", v46, v39, v41, v43, v45);
        uint64_t v48 = v47;
        double v50 = v49;
        double v52 = v51;
        id v54 = v53;

        *(void *)&v62.origin.double x = v48;
        *(void *)&v62.origin.double y = v50;
        *(void *)&v62.size.double width = v52;
        *(void *)&v62.size.double height = v54;
        double v32 = CGRectGetMidY(v62) - MidY;
      }
      else
      {
        uint64_t v48 = (void *)*MEMORY[0x1E4F1DB28];
        double v50 = *(void **)(MEMORY[0x1E4F1DB28] + 8);
        double v52 = *(void **)(MEMORY[0x1E4F1DB28] + 16);
        id v54 = *(void **)(MEMORY[0x1E4F1DB28] + 24);
      }
      location[0] = 0;
      objc_initWeak(location, self);
      v56[0] = MEMORY[0x1E4F143A8];
      v56[1] = 3221225472;
      v56[2] = __101__CKChatController_CKChatController_Stickers__saveStickerFromChatItem_pluginSourceView_animateFlyIn___block_invoke;
      v56[3] = &unk_1E5622188;
      objc_copyWeak(v58, location);
      BOOL v59 = a5;
      v58[1] = v48;
      v58[2] = v50;
      void v58[3] = v52;
      v58[4] = v54;
      v58[5] = 0;
      v58[6] = *(id *)&MidY;
      id v57 = v8;
      [(CKChatController *)self fullScreenBalloonViewController:0 verticallyScrollTranscriptByAmount:1 animated:v56 duration:v32 completion:0.3];

      objc_destroyWeak(v58);
      objc_destroyWeak(location);
    }
    else
    {
      double v55 = +[CKUtilities saveableStickerFromChatItem:v8];
      -[CKChatController saveSticker:sourceRect:](self, "saveSticker:sourceRect:", v55, *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), *(double *)(MEMORY[0x1E4F1DB28] + 16), *(double *)(MEMORY[0x1E4F1DB28] + 24));
    }
  }
}

void __101__CKChatController_CKChatController_Stickers__saveStickerFromChatItem_pluginSourceView_animateFlyIn___block_invoke(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = [WeakRetained collectionViewController];
  id v5 = [v4 collectionView];
  [v5 setIgnoresAutomaticScrollsTowardBottom:0];

  id v6 = (double *)MEMORY[0x1E4F1DB28];
  id v7 = (double *)(MEMORY[0x1E4F1DB28] + 24);
  id v8 = (double *)(MEMORY[0x1E4F1DB28] + 16);
  if (*(unsigned char *)(a1 + 96)) {
    id v9 = (double *)(a1 + 88);
  }
  else {
    id v9 = (double *)(MEMORY[0x1E4F1DB28] + 8);
  }
  if (*(unsigned char *)(a1 + 96))
  {
    id v8 = (double *)(a1 + 64);
    id v7 = (double *)(a1 + 72);
    id v6 = (double *)(a1 + 48);
  }
  double v10 = *v6;
  double v11 = *v7;
  double v12 = *v8;
  double v13 = *v9;
  id v15 = +[CKUtilities saveableStickerFromChatItem:*(void *)(a1 + 32)];
  id v14 = objc_loadWeakRetained(v2);
  objc_msgSend(v14, "saveSticker:sourceRect:", v15, v10, v13, v12, v11);
}

- (void)saveStickerFromTapbackAttributionFlow:(id)a3
{
  id v4 = a3;
  id v5 = IMStickersExtensionIdentifier();
  IMBalloonExtensionIDWithSuffix();
  id v7 = (id)objc_claimAutoreleasedReturnValue();

  id v6 = [(CKCoreChatController *)self inputController];
  [v6 showPluginWithExtensionIdentifier:v7 sourceView:0];

  -[CKChatController saveSticker:sourceRect:](self, "saveSticker:sourceRect:", v4, *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), *(double *)(MEMORY[0x1E4F1DB28] + 16), *(double *)(MEMORY[0x1E4F1DB28] + 24));
}

- (void)saveStickerFromEmojiDetails:(id)a3
{
  id v4 = a3;
  id v5 = IMStickersExtensionIdentifier();
  IMBalloonExtensionIDWithSuffix();
  id v7 = (id)objc_claimAutoreleasedReturnValue();

  id v6 = [(CKCoreChatController *)self inputController];
  [v6 showPluginWithExtensionIdentifier:v7 sourceView:0];

  -[CKChatController saveSticker:sourceRect:](self, "saveSticker:sourceRect:", v4, *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), *(double *)(MEMORY[0x1E4F1DB28] + 16), *(double *)(MEMORY[0x1E4F1DB28] + 24));
}

- (void)saveSticker:(id)a3 sourceRect:(CGRect)a4
{
  CGFloat height = a4.size.height;
  CGFloat width = a4.size.width;
  CGFloat y = a4.origin.y;
  CGFloat x = a4.origin.x;
  id v9 = a3;
  double v10 = v9;
  if (v9)
  {
    double v11 = [v9 uiSticker];
    if (v11)
    {
      uint64_t v24 = 0;
      double v25 = &v24;
      uint64_t v26 = 0x3032000000;
      double v27 = __Block_byref_object_copy__7;
      double v28 = __Block_byref_object_dispose__7;
      id v29 = 0;
      double v12 = [(CKCoreChatController *)self inputController];
      double v13 = [v12 appCardPresentationOverseer];

      uint64_t v14 = [v13 browserViewController];
      id v15 = (void *)v25[5];
      v25[5] = v14;

      if (v25[5])
      {
        dispatch_time_t v16 = dispatch_time(0, 500000000);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __70__CKChatController_CKChatController_Stickers__saveSticker_sourceRect___block_invoke;
        block[3] = &unk_1E56221B0;
        void block[4] = self;
        CGFloat v20 = x;
        CGFloat v21 = y;
        CGFloat v22 = width;
        CGFloat v23 = height;
        id v18 = v11;
        double v19 = &v24;
        dispatch_after(v16, MEMORY[0x1E4F14428], block);
      }
      _Block_object_dispose(&v24, 8);
    }
  }
}

uint64_t __70__CKChatController_CKChatController_Stickers__saveSticker_sourceRect___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addStickerToStoreWithUISticker:sourceRect:browserViewController:", *(void *)(a1 + 40), *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
}

- (void)_addStickerToStoreWithUISticker:(id)a3 sourceRect:(CGRect)a4 browserViewController:(id)a5
{
}

void __112__CKChatController_CKChatController_Stickers___addStickerToStoreWithUISticker_sourceRect_browserViewController___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  id v5 = a3;
  if (v5 && IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = [v5 description];
      int v10 = 138412290;
      double v11 = v7;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Unable to save sticker with error: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  if (v4 && IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = [v4 description];
      int v10 = 138412290;
      double v11 = v9;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Stickers added: %@", (uint8_t *)&v10, 0xCu);
    }
  }
}

- (id)_stickerFromChatItem:(id)a3
{
  id v3 = a3;
  if (v3 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v4 = [v3 mediaObject];
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v5 = [v4 sticker];
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

- (id)_dragItemsIfRepositioningForInteraction:(id)a3
{
  v80[4] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v6 = [v5 isStickerRepositioningEnabled];

  if (!v6)
  {
    double v33 = 0;
    goto LABEL_18;
  }
  id v7 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v4];
  if (v7)
  {
    id v8 = [(CKChatController *)self collectionView];
    id v9 = [v8 indexPathForCell:v7];

    int v10 = [(CKCoreChatController *)self collectionViewController];
    double v11 = [v10 chatItemAtIndexPath:v9];

    uint64_t v12 = [v7 associatedItemView];
    double v13 = [v7 effectView];
    if (!v11
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
      || ![v11 itemIsFromMe])
    {
      int v34 = 1;
LABEL_13:

      if (v34) {
        double v33 = 0;
      }
      else {
        double v33 = self;
      }
      goto LABEL_17;
    }
    id v56 = v11;
    uint64_t v14 = [v56 sticker];
    id v15 = [v56 attributionInfo];
    [v14 setAttributionInfo:v15];

    dispatch_time_t v16 = [v56 attributionInfo];
    long long v17 = [v16 objectForKey:*MEMORY[0x1E4F6D3C0]];
    [v14 setAccessibilityLabel:v17];

    id v58 = objc_alloc_init(MEMORY[0x1E4F28D78]);
    [v13 bounds];
    double v19 = *MEMORY[0x1E4F1DB30];
    if (v20 == *MEMORY[0x1E4F1DB30] && (double v21 = *(double *)(MEMORY[0x1E4F1DB30] + 8), v18 == v21))
    {
      [v12 bounds];
      if (v23 == v19 && v22 == v21)
      {
        uint64_t v24 = [v12 superview];
        [v24 frame];
        double v26 = v25;
        double v28 = v27;
        double v30 = v29;
        double v32 = v31;

LABEL_24:
        uint64_t v45 = MEMORY[0x192FBA860](@"_MSMessageMediaPayload", @"Messages");
        uint64_t v46 = objc_opt_class();
        v68[0] = MEMORY[0x1E4F143A8];
        v68[1] = 3221225472;
        v68[2] = __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke;
        v68[3] = &unk_1E56221F8;
        uint64_t v71 = v45;
        double v72 = v26;
        double v73 = v28;
        double v74 = v30;
        double v75 = v32;
        id v55 = v14;
        id v69 = v55;
        double v70 = self;
        [v58 registerObjectOfClass:v46 visibility:0 loadHandler:v68];
        [(CKChatController *)self _registerStandardRepresentationsInItemProvider:v58 sticker:v55 effectView:v13];
        [(CKChatController *)self _registerRepresentationsInItemProvider:v58 sticker:v55];
        [v58 registerItemForTypeIdentifier:@"com.apple.sticker" loadHandler:&__block_literal_global_212];
        uint64_t v62 = 0;
        CGFloat v63 = &v62;
        uint64_t v64 = 0x3032000000;
        id v65 = __Block_byref_object_copy__7;
        double v66 = __Block_byref_object_dispose__7;
        id v67 = 0;
        uint64_t v47 = [(CKCoreChatController *)self collectionViewController];
        uint64_t v48 = [v47 chatItems];
        v59[0] = MEMORY[0x1E4F143A8];
        v59[1] = 3221225472;
        v59[2] = __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke_3;
        v59[3] = &unk_1E5622268;
        id v54 = v56;
        id v60 = v54;
        CGRect v61 = &v62;
        [v48 enumerateObjectsUsingBlock:v59];

        id v57 = (void *)[objc_alloc(MEMORY[0x1E4F429A0]) initWithItemProvider:v58];
        if (v63[5])
        {
          char v49 = [(CKCoreChatController *)self collectionViewController];
          double v50 = [v49 cellForChatItem:v63[5]];

          v79[0] = @"kStickerDragItemImageViewKey";
          v79[1] = @"kStickerDragItemChatItemKey";
          v80[0] = v12;
          v80[1] = v54;
          v79[2] = @"kStickerDragItemOriginalIndexPathKey";
          id v51 = [(CKChatController *)self collectionView];
          double v52 = [v51 indexPathForCell:v50];
          v79[3] = @"kStickerIsRepositioningKey";
          v80[2] = v52;
          v80[3] = MEMORY[0x1E4F1CC38];
          uint64_t v53 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v80 forKeys:v79 count:4];
          [v57 setLocalObject:v53];
        }
        else
        {
          v77[0] = @"kStickerDragItemImageViewKey";
          v77[1] = @"kStickerDragItemChatItemKey";
          v78[0] = v12;
          v78[1] = v54;
          v77[2] = @"kStickerIsRepositioningKey";
          v78[2] = MEMORY[0x1E4F1CC38];
          double v50 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v78 forKeys:v77 count:3];
          [v57 setLocalObject:v50];
        }

        CGFloat v76 = v57;
        self = [MEMORY[0x1E4F1C978] arrayWithObjects:&v76 count:1];

        _Block_object_dispose(&v62, 8);
        int v34 = 0;
        goto LABEL_13;
      }
      [v12 center];
      objc_msgSend(v12, "convertPoint:toView:", 0);
      double v37 = v41;
      double v39 = v42;
      double v40 = v12;
    }
    else
    {
      [v13 center];
      objc_msgSend(v13, "convertPoint:toView:", 0);
      double v37 = v36;
      double v39 = v38;
      double v40 = v13;
    }
    [v40 bounds];
    double v30 = v43;
    double v32 = v44;
    double v26 = v37 - v43 * 0.5;
    double v28 = v39 - v44 * 0.5;
    goto LABEL_24;
  }
  double v33 = 0;
LABEL_17:

LABEL_18:

  return v33;
}

uint64_t __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke(uint64_t a1, void *a2)
{
  id v3 = *(objc_class **)(a1 + 48);
  id v4 = a2;
  id v5 = (void *)[[v3 alloc] initWithIMSticker:*(void *)(a1 + 32)];
  objc_msgSend(v5, "setSourceFrame:", *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  uint64_t v6 = [*(id *)(a1 + 40) initialFrameIndexForCurrentDrag];
  if (v6 != 0x7FFFFFFFFFFFFFFFLL) {
    [v5 setInitialFrameIndex:v6];
  }
  [*(id *)(a1 + 40) setInitialFrameIndexForCurrentDrag:0x7FFFFFFFFFFFFFFFLL];
  v4[2](v4, v5, 0);

  return 0;
}

void __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke_2(uint64_t a1, void (**a2)(void, void, void))
{
  id v3 = (void *)MEMORY[0x1E4F1C9B8];
  id v4 = a2;
  id v5 = [v3 data];
  ((void (**)(void, id, void))a2)[2](v4, v5, 0);
}

void __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke_3(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  id v7 = [v6 visibleAssociatedMessageChatItems];
  uint64_t v8 = [v7 count];

  if (v8)
  {
    id v9 = [v6 visibleAssociatedMessageChatItems];
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke_4;
    v12[3] = &unk_1E5622240;
    id v10 = *(id *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    id v13 = v10;
    uint64_t v15 = v11;
    id v14 = v6;
    uint64_t v16 = a4;
    [v9 enumerateObjectsUsingBlock:v12];
  }
}

void __87__CKChatController_CKChatController_Stickers___dragItemsIfRepositioningForInteraction___block_invoke_4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if ([a2 isEqual:*(void *)(a1 + 32)])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(id *)(a1 + 40));
    **(unsigned char **)(a1 + 56) = 1;
    *a4 = 1;
  }
}

- (id)_transcriptStickerCellContainingInteraction:(id)a3
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKChatController *)self collectionView];
  id v6 = [v5 visibleCells];

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v7 = v6;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v13 = v12;
          id v14 = objc_msgSend(v13, "associatedItemView", (void)v18);
          uint64_t v15 = [v14 interactions];
          char v16 = [v15 containsObject:v4];

          if (v16) {
            goto LABEL_12;
          }
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v9);
  }
  id v13 = 0;
LABEL_12:

  return v13;
}

- (void)presentStickerDetailControllerWithIndexPath:(id)a3
{
  id v4 = (objc_class *)MEMORY[0x1E4F1CA48];
  id v5 = a3;
  id v6 = objc_alloc_init(v4);
  id v7 = [(CKChatController *)self _parentChatItemForIndexPath:v5];

  uint64_t v8 = [v7 visibleAssociatedMessageChatItems];

  if (v8)
  {
    uint64_t v9 = [v7 visibleAssociatedMessageChatItems];
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    v11[2] = __103__CKChatController_CKStickerDetailViewControllerDelegate__presentStickerDetailControllerWithIndexPath___block_invoke;
    v11[3] = &unk_1E5621268;
    id v12 = v6;
    [v9 enumerateObjectsUsingBlock:v11];
  }
  if ([v6 count])
  {
    uint64_t v10 = [[CKStickerDetailViewController alloc] initWithStickerChatItems:v6];
    [(CKChatController *)self presentStickerDetailsViewController:v10 fromChatItem:v7];
  }
}

void __103__CKChatController_CKStickerDetailViewControllerDelegate__presentStickerDetailControllerWithIndexPath___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

- (void)presentEmojiDetailsControllerWithIndexPath:(id)a3
{
  uint64_t v9 = [(CKChatController *)self _parentChatItemForIndexPath:a3];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v5 = v9;
  if (isKindOfClass)
  {
    id v6 = v9;
    id v7 = [v6 emojiImageMediaObjectsInMessagePartText];
    if ([v7 count])
    {
      uint64_t v8 = [[CKStickerDetailViewController alloc] initWithEmojiImageMediaObjects:v7];
      [(CKChatController *)self presentStickerDetailsViewController:v8 fromChatItem:v6];
    }
    id v5 = v9;
  }
}

- (void)presentStickerDetailsViewController:(id)a3 fromChatItem:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  [v7 setDelegate:self];
  id v12 = (id)[objc_alloc(MEMORY[0x1E4F42BF8]) initWithRootViewController:v7];

  if (CKIsRunningInMacCatalyst()) {
    uint64_t v8 = 7;
  }
  else {
    uint64_t v8 = 2;
  }
  [v12 setModalPresentationStyle:v8];
  uint64_t v9 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v10 = [v9 balloonViewForChatItem:v6];

  if (v10)
  {
    uint64_t v11 = [v12 popoverPresentationController];
    [v11 setSourceView:v10];

    [(CKChatController *)self presentViewController:v12 animated:1 completion:0];
  }
}

- (void)stickerDetailViewController:(id)a3 deletedStickerWithTransferGUID:(id)a4
{
}

- (void)stickerDetailViewController:(id)a3 selectedStickerPackWithAdamID:(id)a4
{
  id v5 = a4;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __117__CKChatController_CKStickerDetailViewControllerDelegate__stickerDetailViewController_selectedStickerPackWithAdamID___block_invoke;
  _OWORD v7[3] = &unk_1E5620AF8;
  v7[4] = self;
  id v8 = v5;
  id v6 = v5;
  [(CKChatController *)self dismissViewControllerAnimated:1 completion:v7];
}

uint64_t __117__CKChatController_CKStickerDetailViewControllerDelegate__stickerDetailViewController_selectedStickerPackWithAdamID___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _presentAppStoreForAdamID:*(void *)(a1 + 40)];
}

- (void)saveStickerFromDetailViewController:(id)a3 chatItemContainingSticker:(id)a4
{
  if (a4) {
    [(CKChatController *)self saveStickerFromChatItem:a4 pluginSourceView:0 animateFlyIn:0];
  }
}

- (void)stickerDetailViewController:(id)a3 didRequestSaveSticker:(id)a4
{
}

- (void)_dealloc
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v3 = [(CKChatController *)self effectPickerViewController];
  [v3 dismissViewControllerAnimated:0 completion:0];

  id v4 = [(CKCoreChatController *)self conversation];
  [v4 updateLastViewedDate];

  [(CKScheduledUpdater *)self->_transcriptInlineNotificationUpdater invalidate];
  [(CADisplayLink *)self->_stickerTranscriptScrollDisplayLink invalidate];
  [(CKChatController *)self setStickerTranscriptScrollDisplayLink:0];
  id v5 = [(CKChatController *)self autorotationUpdater];
  [v5 invalidate];

  [(CKChatController *)self setAutorotationUpdater:0];
  id v6 = [(CKChatController *)self typingUpdater];
  [v6 invalidate];

  [(CKChatController *)self setTypingUpdater:0];
  [(CKChatController *)self hideMediaPickerAnimated:0];
  id v7 = [(CKChatController *)self navbarCanvasViewController];
  [v7 setDelegate:0];

  id v8 = [(CKChatController *)self navbarCanvasViewController];
  uint64_t v9 = [v8 view];
  uint64_t v10 = [v9 superview];

  if (v10)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = [(CKChatController *)self navbarCanvasViewController];
        id v13 = [v12 view];
        id v14 = [(CKChatController *)self navbarCanvasViewController];
        uint64_t v15 = [v14 view];
        char v16 = [v15 superview];
        int v29 = 138412802;
        double v30 = self;
        __int16 v31 = 2112;
        double v32 = v13;
        __int16 v33 = 2112;
        int v34 = v16;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "%@: removing navbarCanvasViewController's view %@ from %@.", (uint8_t *)&v29, 0x20u);
      }
    }
    long long v17 = [(CKChatController *)self navbarCanvasViewController];
    long long v18 = [v17 view];
    [v18 removeFromSuperview];
  }
  long long v19 = [(CKCoreChatController *)self collectionViewController];
  [v19 setDragInteractionDelegate:0];

  long long v20 = [MEMORY[0x1E4F42948] currentDevice];
  if ([v20 _supportsForceTouch])
  {
    long long v21 = +[CKUIBehavior sharedBehaviors];
    char v22 = [v21 disableTranscriptOrb];

    if (v22) {
      goto LABEL_11;
    }
    long long v20 = [(CKChatController *)self view];
    [(CKChatController *)self unregisterPreviewSourceView:v20];
  }

LABEL_11:
  uint64_t v23 = objc_msgSend((id)MEMORY[0x192FBA860](@"AFContextManager", @"AssistantServices"), "defaultContextManager");
  [v23 removeContextProvider:self];

  uint64_t v24 = [(CKChatController *)self funCameraViewController];

  if (v24)
  {
    double v25 = [(CKChatController *)self funCameraViewController];
    [v25 dismiss];
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(DarwinNotifyCenter, self, @"CKDraftManagerSavedDraft", 0);
  if (!CKIsRunningInMessagesViewService() && !CKIsRunningInMessagesNotificationExtension())
  {
    double v27 = +[CKBalloonPluginManager sharedInstance];
    [v27 invalidateAllActivePlugins];

    double v28 = +[CKBalloonPluginManager sharedInstance];
    [v28 forceKillRemoteExtensionsWithDelay:1];
  }
}

- (void)dealloc
{
  [(CKChatController *)self _dealloc];
  v3.receiver = self;
  v3.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v3 dealloc];
}

- (void)prepareToDismissForSecondInstance
{
  id v2 = [(CKCoreChatController *)self inputController];
  [v2 dismiss];
}

- (CKChatController)initWithConversation:(id)a3
{
  v45.receiver = self;
  v45.super_class = (Class)CKChatController;
  objc_super v3 = [(CKCoreChatController *)&v45 initWithConversation:a3];
  id v4 = v3;
  if (v3)
  {
    v3->_keyboardSnapshotReason = 0;
    [(CKChatController *)v3 _updateRecipientCapabilities];
    id v5 = (void *)[objc_alloc(MEMORY[0x1E4F6C3D8]) initWithTarget:v4 action:sel__autorotationUpdaterFired];
    [(CKChatController *)v4 setAutorotationUpdater:v5];
    [(CKChatController *)v4 setTargetFirstResponder:0];
    id v6 = [[CKScheduledUpdater alloc] initWithTarget:v4 action:sel_updateTyping];
    [(CKChatController *)v4 setTypingUpdater:v6];
    if (CKIsRunningInMessages())
    {
      id v7 = [[CKScheduledUpdater alloc] initWithTarget:v4 action:sel__updateBannerNotifications];
      transcriptInlineNotificationUpdater = v4->_transcriptInlineNotificationUpdater;
      v4->_transcriptInlineNotificationUpdater = v7;

      [(CKScheduledUpdater *)v4->_transcriptInlineNotificationUpdater setUpdateSynchronouslyIfPossible:1];
      uint64_t v9 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v9 addObserver:v4 selector:sel__handleIsUnexpectedlyLoggedOutChanged_ name:@"com.apple.ChatKit.IsUnexpectedlyLoggedOutChanged" object:0];

      uint64_t v10 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v10 addObserver:v4 selector:sel_composeRecipientViewShouldResignFirstResponder name:@"com.apple.ChatKit.CKComposeRecipientView.BecameFirstResponder" object:0];

      uint64_t v11 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v11 addObserver:v4 selector:sel_keyboardShouldShowPredictions_ name:*MEMORY[0x1E4F43B58] object:0];

      id v12 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v12 addObserver:v4 selector:sel_keyboardShouldShowCandidates_ name:*MEMORY[0x1E4F43B50] object:0];

      id v13 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v13 addObserver:v4 selector:sel_keyboardWillBeginInteractiveDismissal_ name:*MEMORY[0x1E4F43B28] object:0];

      id v14 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v14 addObserver:v4 selector:sel_windowDidResignKey_ name:*MEMORY[0x1E4F43F08] object:0];

      uint64_t v15 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v15 addObserver:v4 selector:sel__balloonPluginExtensionsLoaded_ name:*MEMORY[0x1E4F6B868] object:0];

      char v16 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v16 addObserver:v4 selector:sel__prewarmBalloonPluginViewCacheCompleted_ name:@"__kCKPrewarmBalloonPluginViewCacheCompletedNotification" object:0];

      long long v17 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v17 addObserver:v4 selector:sel__messageReceived_ name:*MEMORY[0x1E4F6B9A8] object:0];

      long long v18 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v18 addObserver:v4 selector:sel__handleGroupPhotoChanged_ name:@"CKConversationShowGroupPhotoBannersNotification" object:0];

      long long v19 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v19 addObserver:v4 selector:sel__handleGroupNameChanged_ name:@"CKConversationShowGroupNameBannersNotification" object:0];

      long long v20 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v20 addObserver:v4 selector:sel__transferFileTooLarge_ name:@"CKTransferFileTooLargeNotification" object:0];

      long long v21 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v21 addObserver:v4 selector:sel__handleCollaborationNoticesChanged_ name:*MEMORY[0x1E4F6BAC0] object:0];

      char v22 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
      int v23 = [v22 isCarrierPigeonEnabled];

      if (v23)
      {
        uint64_t v24 = [MEMORY[0x1E4F28EB8] defaultCenter];
        [v24 addObserver:v4 selector:sel__updateForNewPreferredService name:*MEMORY[0x1E4F6BA80] object:0];

        double v25 = [MEMORY[0x1E4F28EB8] defaultCenter];
        [v25 addObserver:v4 selector:sel__updateForNewPreferredService name:*MEMORY[0x1E4F6D4A8] object:0];
      }
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterAddObserver(DarwinNotifyCenter, v4, (CFNotificationCallback)_restoreDraftFromMessagesNotificationExtension, @"CKDraftManagerSavedDraft", v4, CFNotificationSuspensionBehaviorDeliverImmediately);
    }
    double v27 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v27 addObserver:v4 selector:sel__handleDictationStarted_ name:@"UIKeyboardDidBeginDictationNotification" object:0];

    double v28 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v28 addObserver:v4 selector:sel__handleDictationEnded_ name:*MEMORY[0x1E4F437E8] object:0];

    int v29 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v29 addObserver:v4 selector:sel_keyboardWillChangeFrame_ name:*MEMORY[0x1E4F43B70] object:0];

    v4->_shouldBecomeFirstResponderWhenDismissingModalBrowser = 1;
    uint64_t v30 = objc_opt_new();
    standardSuggestionPresenter = v4->_standardSuggestionPresenter;
    v4->_standardSuggestionPresenter = (SGSuggestionPresenter *)v30;

    [(SGSuggestionPresenter *)v4->_standardSuggestionPresenter setDelegate:v4];
    double v32 = +[CKUIBehavior sharedBehaviors];
    int v33 = [v32 supportsFoundInSuggestions];

    if (v33)
    {
      uint64_t v34 = objc_opt_new();
      foundInSuggestionPresenter = v4->_foundInSuggestionPresenter;
      v4->_foundInSuggestionPresenter = (SGFoundInSuggestionPresenter *)v34;

      [(SGFoundInSuggestionPresenter *)v4->_foundInSuggestionPresenter setDelegate:v4];
    }
    double v36 = [[_TtC7ChatKit16CKChatTipManager alloc] initWithChatController:v4];
    tipManager = v4->_tipManager;
    v4->_tipManager = v36;

    double v38 = [MEMORY[0x1E4F6E6D8] sharedInstance];
    v4->_shouldFetchCollaborationNotices = [v38 isBatchFetchingForLaunchCompleted];

    id v39 = (id)[MEMORY[0x1E4F6BC70] sharedInstance];
    [(CKChatController *)v4 setEffectPickerIsPresented:0];
    id v40 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    [(CKChatController *)v4 setFileURLKeyToGuidMapping:v40];

    double v41 = [MEMORY[0x1E4F1CA60] dictionary];
    [(CKChatController *)v4 setActiveDropPreviews:v41];

    double v42 = objc_alloc_init(_TtC7ChatKit25CKSuggestedActionsHandler);
    [(CKChatController *)v4 setSuggestedActionsHandler:v42];

    double v43 = [(CKChatController *)v4 suggestedActionsHandler];
    [v43 setDelegate:v4];

    [(CKChatController *)v4 setIsWebViewVisible:0];
    [(CKChatController *)v4 setSendingCompositionBackgroundTask:*MEMORY[0x1E4F43740]];
  }
  return v4;
}

- (void)_handleGroupPhotoChanged:(id)a3
{
  v28[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 object];
  id v6 = [v5 chatIdentifier];
  id v7 = [(CKCoreChatController *)self chat];
  id v8 = [v7 chatIdentifier];
  int v9 = [v6 isEqualToString:v8];

  if (v9)
  {
    uint64_t v10 = [(CKChatController *)self navbarCanvasViewController];
    uint64_t v11 = [v10 conversationIdentityView];
    [v11 updateAvatarViewVisualIdentity];

    id v12 = [v4 userInfo];
    id v13 = [v12 valueForKey:@"CKGroupPhotoUpdate"];
    id v14 = [(CKChatController *)self groupPhotoUpdateBanner];

    if (v14)
    {
      uint64_t v15 = [(CKChatController *)self groupPhotoUpdateBanner];
      char v16 = [v15 groupUpdates];
      long long v17 = [v16 firstObject];
      long long v18 = [v17 handleID];

      long long v19 = [v13 handleID];
      int v20 = [v18 isEqualToString:v19];
      long long v21 = [(CKChatController *)self groupPhotoUpdateBanner];
      uint64_t v22 = [v21 updateBannerType];

      if (v22 != 2 && v22 != 4 && v20)
      {
        uint64_t v23 = [v13 groupUpdateType];
        uint64_t v24 = 3;
        uint64_t v25 = 3;
        if (v22 == 5) {
          uint64_t v25 = 6;
        }
        if (v22 == 1) {
          uint64_t v25 = 7;
        }
        uint64_t v26 = 3;
        if (v22 == 5) {
          uint64_t v26 = 8;
        }
        if (v23 == 2) {
          uint64_t v24 = v26;
        }
        if (v23 == 4) {
          uint64_t v27 = v25;
        }
        else {
          uint64_t v27 = v24;
        }
        [v13 setGroupUpdateType:v27];
      }
      [(CKChatController *)self dimsmissCurrentBannerAndShowNewBannerForGroupUpdate:v13];
    }
    else
    {
      v28[0] = v13;
      long long v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v28 count:1];
      [(CKChatController *)self showBannerForGroupUpdate:v18];
    }
  }
}

- (void)_handleGroupNameChanged:(id)a3
{
  v30[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 object];
  id v6 = [v5 chatIdentifier];
  id v7 = [(CKCoreChatController *)self chat];
  id v8 = [v7 chatIdentifier];
  int v9 = [v6 isEqualToString:v8];

  if (v9)
  {
    [(CKCoreChatController *)self _updateTitleAnimated:1];
    if ([(CKChatController *)self shouldUseMacRecipientsView])
    {
      uint64_t v10 = [(CKChatController *)self macRecipientsController];
      [v10 refreshRecipients];
    }
    uint64_t v11 = [v4 userInfo];
    id v12 = [v11 valueForKey:@"GroupNameUpdate"];
    if (v12)
    {
      id v13 = [MEMORY[0x1E4F1CA98] null];

      if (v12 != v13)
      {
        id v14 = [(CKChatController *)self groupPhotoUpdateBanner];

        if (v14)
        {
          uint64_t v15 = [(CKChatController *)self groupPhotoUpdateBanner];
          char v16 = [v15 groupUpdates];
          long long v17 = [v16 firstObject];
          long long v18 = [v17 handleID];

          long long v19 = [v12 handleID];
          int v20 = [v18 isEqualToString:v19];
          long long v21 = [(CKChatController *)self groupPhotoUpdateBanner];
          uint64_t v22 = [v21 updateBannerType];

          if ((v22 & 0xFFFFFFFFFFFFFFFBLL) != 1 && v20)
          {
            uint64_t v23 = [(CKChatController *)self groupPhotoUpdateBanner];
            uint64_t v24 = [v23 updateBannerType];

            uint64_t v25 = [v12 groupUpdateType];
            uint64_t v26 = 3;
            uint64_t v27 = 3;
            if (v24 == 4) {
              uint64_t v27 = 6;
            }
            if (v24 == 2) {
              uint64_t v27 = 8;
            }
            uint64_t v28 = 3;
            if (v24 == 4) {
              uint64_t v28 = 7;
            }
            if (v25 == 1) {
              uint64_t v26 = v28;
            }
            if (v25 == 5) {
              uint64_t v29 = v27;
            }
            else {
              uint64_t v29 = v26;
            }
            [v12 setGroupUpdateType:v29];
          }
          [(CKChatController *)self dimsmissCurrentBannerAndShowNewBannerForGroupUpdate:v12];
        }
        else
        {
          v30[0] = v12;
          long long v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v30 count:1];
          [(CKChatController *)self showBannerForGroupUpdate:v18];
        }
      }
    }
  }
}

- (void)_messageReceived:(id)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 object];
  id v6 = [v5 personCentricID];
  id v7 = [(CKCoreChatController *)self chat];
  id v8 = [v7 personCentricID];
  int v9 = [v6 isEqualToString:v8];

  if (v9)
  {
    uint64_t v10 = [v4 userInfo];
    uint64_t v11 = [v10 objectForKey:*MEMORY[0x1E4F6BA98]];

    id v12 = [v11 sender];
    id v13 = [v12 account];
    id v14 = [v13 service];

    if (v14)
    {
      uint64_t v15 = [(CKCoreChatController *)self conversation];
      char v16 = [v15 sendingService];

      if (v14 != v16)
      {
        if (IMOSLoggingEnabled())
        {
          long long v17 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            uint64_t v23 = [v11 sender];
            long long v18 = [v23 account];
            long long v19 = [v18 service];
            int v20 = [(CKCoreChatController *)self conversation];
            long long v21 = [v20 sendingService];
            *(_DWORD *)CGAffineTransform buf = 138412546;
            uint64_t v25 = v19;
            __int16 v26 = 2112;
            uint64_t v27 = v21;
            _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Refresh service: received a message with service %@ different than current chat service %@", buf, 0x16u);
          }
        }
        uint64_t v22 = [(CKCoreChatController *)self chat];
        [v22 refreshServiceForSending];
      }
    }
  }
}

- (void)_transferFileTooLarge:(id)a3
{
  id v4 = a3;
  id v5 = CKFrameworkBundle();
  id v6 = [v5 localizedStringForKey:@"FILE_TOO_LARGE_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id v7 = [v4 userInfo];

  id v8 = [v7 objectForKey:@"kCKTransferFileTooLargeAttachmentURLKey"];
  int v9 = [v8 lastPathComponent];

  if (v9)
  {
    uint64_t v10 = NSString;
    uint64_t v11 = CKFrameworkBundle();
    id v12 = [v11 localizedStringForKey:@"FILE_TOO_LARGE_DESC" value:&stru_1EDE4CA38 table:@"ChatKit"];
    id v13 = objc_msgSend(v10, "stringWithFormat:", v12, v9);

    id v14 = [MEMORY[0x1E4F42738] sharedApplication];
    uint64_t v15 = [v14 userInterfaceLayoutDirection];

    if (v15 == 1) {
      char v16 = @"\u200F";
    }
    else {
      char v16 = @"\u200E";
    }
    uint64_t v17 = [(__CFString *)v16 stringByAppendingString:v13];
  }
  else
  {
    id v13 = CKFrameworkBundle();
    uint64_t v17 = [v13 localizedStringForKey:@"FILE_TOO_LARGE_NO_NAME_DESC" value:&stru_1EDE4CA38 table:@"ChatKit"];
  }
  long long v18 = (void *)v17;

  long long v19 = +[CKAlertController alertControllerWithTitle:v6 message:v18 preferredStyle:1];
  int v20 = CKFrameworkBundle();
  long long v21 = [v20 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];
  uint64_t v22 = +[CKAlertAction actionWithTitle:v21 style:1 handler:0];

  [v19 addAction:v22];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __42__CKChatController__transferFileTooLarge___block_invoke;
  block[3] = &unk_1E5620AF8;
  id v25 = v19;
  __int16 v26 = self;
  id v23 = v19;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t __42__CKChatController__transferFileTooLarge___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentFromViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

- (void)dimsmissCurrentBannerAndShowNewBannerForGroupUpdate:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self groupPhotoUpdateBanner];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __72__CKChatController_dimsmissCurrentBannerAndShowNewBannerForGroupUpdate___block_invoke;
  _OWORD v7[3] = &unk_1E5620AF8;
  v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  [(CKChatController *)self _dismissBannerView:v5 completion:v7];
}

void __72__CKChatController_dimsmissCurrentBannerAndShowNewBannerForGroupUpdate___block_invoke(uint64_t a1)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) setGroupPhotoUpdateBanner:0];
  [*(id *)(a1 + 32) updateScrollGeometryWithoutAnimationForReason:@"BannerDismissed"];
  id v2 = [*(id *)(a1 + 32) conversation];
  [v2 setShouldShowGroupNameUpdateBanner:0];

  objc_super v3 = [*(id *)(a1 + 32) conversation];
  [v3 setShouldShowGroupPhotoUpdateBanner:0];

  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    v7[0] = v4;
    id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:1];
    [v5 showBannerForGroupUpdate:v6];
  }
}

- (id)createBannerForGroupUpdates:(id)a3
{
  v20[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 firstObject];
  id v6 = [MEMORY[0x1E4F6E6D8] sharedInstance];
  id v7 = [v5 handleID];
  id v8 = [v6 fetchCNContactForHandleWithID:v7];

  if (v8)
  {
    v20[0] = v8;
    int v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v20 count:1];
  }
  else
  {
    int v9 = (void *)MEMORY[0x1E4F1CBF0];
  }
  uint64_t v10 = +[CKNicknameUtility groupPhotoUpdateTitleForUpdate:v5];
  uint64_t v11 = +[CKNicknameUtility groupPhotoUpdateSubtitleForUpdate:v5];
  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __48__CKChatController_createBannerForGroupUpdates___block_invoke;
  aBlock[3] = &unk_1E5622640;
  objc_copyWeak(&v18, &location);
  id v12 = v5;
  id v17 = v12;
  id v13 = _Block_copy(aBlock);
  id v14 = [(CKNicknameBannerView *)[CKGroupUpdateBannerView alloc] initWithStyle:7 updates:0 useNamedTitles:1 avatarImages:0 contacts:v9 customImage:0 titleString:v10 subtitleString:v11 actionButtonTitle:0 actionButtonHandler:0 actionButtonMenuItems:0 xButtonHandler:v13];
  [(CKGroupUpdateBannerView *)v14 setGroupUpdates:v4];
  -[CKGroupUpdateBannerView setUpdateBannerType:](v14, "setUpdateBannerType:", [v12 groupUpdateType]);

  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return v14;
}

void __48__CKChatController_createBannerForGroupUpdates___block_invoke(uint64_t a1, void *a2)
{
  objc_super v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained groupPhotoUpdateBanner:v4 dismissedUpdate:*(void *)(a1 + 32)];
}

- (void)showBannerForGroupUpdate:(id)a3
{
  id v4 = a3;
  id v5 = [v4 firstObject];

  if (v5)
  {
    id v6 = [(CKChatController *)self createBannerForGroupUpdates:v4];
    [(CKChatController *)self setGroupPhotoUpdateBanner:v6];
    id v7 = [v4 firstObject];
    uint64_t v8 = [v7 groupUpdateType];
    int v9 = [(CKChatController *)self groupPhotoUpdateBanner];
    [v9 setUpdateBannerType:v8];

    [(CKChatController *)self showGroupBannerUpdateIfNeeded];
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Attempting to show banner for group update, but groupUpdates is empty", v11, 2u);
    }
  }
}

- (void)windowDidResignKey:(id)a3
{
  id v10 = [(CKCoreChatController *)self inputController];
  if ([v10 isInputViewVisible])
  {
    id v4 = [(CKChatController *)self view];
    id v5 = [v4 window];
    id v6 = [v5 windowScene];
    char v7 = [v6 _isKeyWindowScene];

    if (v7) {
      return;
    }
    BOOL v8 = CKIsAppCardsEnabled();
    int v9 = [(CKCoreChatController *)self inputController];
    id v10 = v9;
    if (v8) {
      [v9 dismissAppCardIfNecessaryAnimated:0 completion:0];
    }
    else {
      [v9 forceDismissBrowserWithoutAnimation];
    }
  }
}

- (void)registerChatForScreenTime:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v7 = v4;
    int v5 = [MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled];
    id v4 = v7;
    if (v5)
    {
      id v6 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v6 addObserver:self selector:sel_chatAllowedByScreenTimeChanged_ name:*MEMORY[0x1E4F6B888] object:v7];

      [(CKChatController *)self updateScreenTimeShieldIfNeededForChat:v7];
      id v4 = v7;
    }
  }
}

- (void)unregisterChatForScreenTime:(id)a3
{
  id v5 = a3;
  if ([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled])
  {
    [(CKChatController *)self removeLockoutControllerIfNeeded];
    if (v5)
    {
      id v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v4 removeObserver:self name:*MEMORY[0x1E4F6B888] object:v5];
    }
  }
}

- (void)chatAllowedByScreenTimeChanged:(id)a3
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if ([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled])
  {
    id v5 = [v4 object];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v6 = v5;
      if (IMOSLoggingEnabled())
      {
        id v7 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          BOOL v8 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v6, "allowedByScreenTime"));
          int v9 = 138412546;
          id v10 = v6;
          __int16 v11 = 2112;
          id v12 = v8;
          _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "chat: %@ received IMChatAllowedByScreenTimeChangedNotification notification, allowed = %@", (uint8_t *)&v9, 0x16u);
        }
      }
      [(CKChatController *)self updateScreenTimeShieldIfNeededForChat:v6];
    }
  }
}

- (BOOL)isChatAllowedByScreenTime:(id)a3
{
  return [a3 allowedByScreenTime];
}

- (void)updateScreenTimeShieldIfNeededForChat:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v5 = v4;
    if ([(CKChatController *)self isChatAllowedByScreenTime:v4]) {
      [(CKChatController *)self removeLockoutControllerIfNeeded];
    }
    else {
      [(CKChatController *)self showScreenTimeShieldIfNeeded];
    }
    id v4 = v5;
  }
}

- (void)lockoutViewControllerDidFinishDismissing:(id)a3
{
  id v4 = [(CKCoreChatController *)self delegate];
  char v5 = objc_opt_respondsToSelector();

  if (v5)
  {
    id v6 = [(CKCoreChatController *)self delegate];
    [v6 screenTimeOKPressedForChatController:self];
  }

  [(CKChatController *)self _doneButtonPressed];
}

- (void)_stageFindMyLocationRequest
{
  objc_super v3 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v4 = [v3 isWaldoEnabled];

  if (v4)
  {
    uint64_t v10 = 0;
    __int16 v11 = &v10;
    uint64_t v12 = 0x2050000000;
    char v5 = (void *)getMSMessageClass_softClass_0;
    uint64_t v13 = getMSMessageClass_softClass_0;
    if (!getMSMessageClass_softClass_0)
    {
      v9[0] = MEMORY[0x1E4F143A8];
      v9[1] = 3221225472;
      v9[2] = __getMSMessageClass_block_invoke_0;
      _OWORD v9[3] = &unk_1E5620B90;
      v9[4] = &v10;
      __getMSMessageClass_block_invoke_0((uint64_t)v9);
      char v5 = (void *)v11[3];
    }
    id v6 = v5;
    _Block_object_dispose(&v10, 8);
    if (objc_opt_respondsToSelector())
    {
      id v7 = [v6 findMyLocationRequestMessage];
      BOOL v8 = +[CKComposition compositionWithMSMessage:v7 appExtensionIdentifier:*MEMORY[0x1E4F6CB30]];
      [(CKChatController *)self setComposition:v8];
    }
  }
}

- (void)setConversation:(id)a3
{
}

- (void)setConversation:(id)a3 forceReload:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = [(CKCoreChatController *)self conversation];
  BOOL v8 = [v7 chat];
  [(CKChatController *)self unregisterChatForScreenTime:v8];

  [(CKChatController *)self reloadFooterViewIfNecessaryForNewConversation:self];
  v16.receiver = self;
  v16.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v16 setConversation:v6 forceReload:v4];
  [(CKChatController *)self setMediaObjectToDownload:0];
  int v9 = [v6 chat];
  [(CKChatController *)self registerChatForScreenTime:v9];

  [(CKChatController *)self _updateRecipientCapabilities];
  [(CKChatController *)self setupClickyOrbForConversation:v6];

  [(CKChatController *)self _updateTitleViewLayout];
  uint64_t v10 = [(CKChatController *)self navbarCanvasViewController];
  [v10 updateRightItemView];

  __int16 v11 = [MEMORY[0x1E4F6E6D8] sharedInstance];
  -[CKChatController setShouldFetchCollaborationNotices:](self, "setShouldFetchCollaborationNotices:", [v11 isBatchFetchingForLaunchCompleted]);

  [(CKChatController *)self setEditing:0 animated:0];
  uint64_t v12 = [(CKCoreChatController *)self chat];
  uint64_t v13 = [v12 firstUnreadMessageItem];

  id v14 = [v13 guid];
  [(CKChatController *)self setFirstUnreadMessageGUID:v14];

  uint64_t v15 = [v13 guid];
  [(CKChatController *)self setFirstUnreadMessageGUIDForTextEffects:v15];
}

- (id)viewToInsertTranscriptCollectionViewBelow
{
  objc_super v3 = [(CKChatController *)self inlineReplyController];

  if (v3)
  {
    BOOL v4 = [(CKChatController *)self inlineReplyController];
LABEL_5:
    id v6 = v4;
    id v7 = [v4 view];

    goto LABEL_6;
  }
  char v5 = [(CKChatController *)self messageEditingViewController];

  if (v5)
  {
    BOOL v4 = [(CKChatController *)self messageEditingViewController];
    goto LABEL_5;
  }
  v9.receiver = self;
  v9.super_class = (Class)CKChatController;
  id v7 = [(CKCoreChatController *)&v9 viewToInsertTranscriptCollectionViewBelow];
LABEL_6:

  return v7;
}

- (void)forciblyUnloadChatInputController
{
  objc_super v3 = [(CKCoreChatController *)self inputController];
  BOOL v4 = [v3 inputViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v6 = [(CKCoreChatController *)self inputController];
    id v7 = [v6 inputViewController];
    [v7 setViewController:0];
  }
  [(CKCoreChatController *)self setInputController:0];

  [(CKChatController *)self setEntryView:0];
}

- (BOOL)isHandwritingLandscape
{
  id v2 = [(CKCoreChatController *)self inputController];
  char v3 = [v2 isHandwritingLandscape];

  return v3;
}

- (BOOL)shouldPresentBlockingDowntimeViewController
{
  return 1;
}

- (void)removeLockoutControllerIfNeeded
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if ([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled]
    && [(CKCoreChatController *)self isShowingLockoutView])
  {
    if (IMOSLoggingEnabled())
    {
      char v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        BOOL v4 = [(CKCoreChatController *)self chat];
        int v11 = 138412290;
        uint64_t v12 = v4;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "removing ScreenTime blocking shield for chat: %@", (uint8_t *)&v11, 0xCu);
      }
    }
    char v5 = [(CKCoreChatController *)self lockoutViewController];
    id v6 = [v5 view];
    [v6 removeFromSuperview];

    [v5 removeFromParentViewController];
    [(CKCoreChatController *)self setLockoutViewController:0];
    [(CKChatController *)self setLockoutView:0];
    [(CKCoreChatController *)self setIsShowingLockoutView:0];
    id v7 = [(CKCoreChatController *)self conversation];
    [(CKChatController *)self setConversation:v7];

    uint64_t v8 = IMIsRunningInScreenshotTesting_IsolatedTranscriptUI();
    objc_super v9 = [(CKChatController *)self navbarCanvasViewController];
    uint64_t v10 = [v9 detailsButton];
    [v10 setHidden:v8];

    [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
    [(CKChatController *)self becomeFirstResponder];
    [(CKChatController *)self refreshMacToolbar];
    [(CKChatController *)self reloadInputViews];
  }
}

- (void)showScreenTimeShieldIfNeeded
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  if ([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled]
    && [(CKChatController *)self shouldPresentBlockingDowntimeViewController]&& ![(CKCoreChatController *)self isShowingLockoutView])
  {
    if (IMOSLoggingEnabled())
    {
      char v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        BOOL v4 = [(CKCoreChatController *)self chat];
        *(_DWORD *)CGAffineTransform buf = 138412290;
        *(void *)&uint8_t buf[4] = v4;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "showing ScreenTime blocking shield for chat: %@", buf, 0xCu);
      }
    }
    char v5 = [MEMORY[0x1E4F6E6D8] sharedInstance];
    id v6 = [v5 getContactStore];

    if (!showScreenTimeShieldIfNeeded_CKSTLockoutViewController) {
      showScreenTimeShieldIfNeeded_CKSTLockoutViewController = MEMORY[0x192FBA860](@"STLockoutViewController", @"ScreenTimeUI");
    }
    id v7 = [(CKCoreChatController *)self conversation];
    uint64_t v8 = [v7 chat];

    if (v8)
    {
      objc_super v9 = IMSharedDowntimeController();
      uint64_t v10 = [(CKCoreChatController *)self conversation];
      int v11 = [v10 chat];
      uint64_t v12 = [v9 conversationContextForChat:v11];
      [(CKChatController *)self setConversationContext:v12];
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "Chat is nil when attempting to show screentime shield", buf, 2u);
      }
    }
    id v14 = [(CKChatController *)self conversationContext];
    if (v14) {
      BOOL v15 = v6 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;

    id v17 = (void *)showScreenTimeShieldIfNeeded_CKSTLockoutViewController;
    if (v16)
    {
      id v18 = [(CKChatController *)self conversationContext];
      long long v19 = [(CKCoreChatController *)self conversation];
      int v20 = [v19 contactNameByHandle];
      [v17 lockoutViewControllerWithConversationContext:v18 bundleIdentifier:@"com.apple.MobileSMS" contactStore:v6 applicationName:0 contactNameByHandle:v20];
    }
    else
    {
      id v18 = [(CKCoreChatController *)self _handleIDsForCurrentConversation];
      long long v19 = [(CKCoreChatController *)self conversation];
      int v20 = [v19 contactNameByHandle];
      [v17 lockoutViewControllerWithBundleIdentifier:@"com.apple.MobileSMS" contactsHandles:v18 contactNameByHandle:v20];
    long long v21 = };

    if ([(CKChatController *)self isCollapsed]) {
      [v21 setOkButtonAction:1];
    }
    else {
      [v21 setOkButtonAlwaysHidden:1];
    }
    [v21 setViewControllerDelegate:self];
    uint64_t v22 = [v21 view];
    [(CKChatController *)self setLockoutView:v22];

    [(CKCoreChatController *)self setLockoutViewController:v21];
    id v23 = [(CKChatController *)self view];
    uint64_t v24 = [(CKChatController *)self lockoutView];
    [v23 addSubview:v24];

    [(CKChatController *)self addChildViewController:v21];
    [(CKCoreChatController *)self setIsShowingLockoutView:1];
    [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
    id v25 = [(CKChatController *)self view];
    [v25 setNeedsLayout];

    __int16 v26 = [(CKChatController *)self view];
    [v26 layoutIfNeeded];

    [(CKChatController *)self reloadInputViews];
    *(void *)CGAffineTransform buf = 0;
    objc_initWeak((id *)buf, self);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __48__CKChatController_showScreenTimeShieldIfNeeded__block_invoke;
    block[3] = &unk_1E56215C8;
    objc_copyWeak(&v30, (id *)buf);
    dispatch_async(MEMORY[0x1E4F14428], block);
    uint64_t v27 = [(CKChatController *)self navbarCanvasViewController];
    uint64_t v28 = [v27 detailsButton];
    [v28 setHidden:1];

    [(CKChatController *)self refreshMacToolbar];
    objc_destroyWeak(&v30);
    objc_destroyWeak((id *)buf);
  }
}

void __48__CKChatController_showScreenTimeShieldIfNeeded__block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained view];
  id v2 = [v1 window];
  char v3 = [v2 firstResponder];
  [v3 resignFirstResponder];
}

- (void)setCollectionViewController:(id)a3
{
  v5.receiver = self;
  v5.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v5 setCollectionViewController:a3];
  BOOL v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 setDragInteractionDelegate:self];
}

- (void)loadView
{
  v10.receiver = self;
  v10.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v10 loadView];
  char v3 = [MEMORY[0x1E4F42948] currentDevice];
  if (![v3 _supportsForceTouch]) {
    goto LABEL_4;
  }
  BOOL v4 = +[CKUIBehavior sharedBehaviors];
  char v5 = [v4 disableTranscriptOrb];

  if ((v5 & 1) == 0)
  {
    char v3 = [(CKChatController *)self view];
    [(CKChatController *)self registerPreviewSourceView:v3 previewingDelegate:self];
LABEL_4:
  }
  id v6 = [(CKChatController *)self navigationItem];
  [v6 setLargeTitleDisplayMode:2];

  [(CKChatController *)self _updateNavigationUI];
  id v7 = (void *)[objc_alloc(MEMORY[0x1E4F429D0]) initWithDelegate:self];
  [v7 setAllowsSimultaneousDropSessions:1];
  uint64_t v8 = [(CKChatController *)self view];
  [v8 addInteraction:v7];

  objc_super v9 = [(CKChatController *)self transcriptInlineNotificationUpdater];
  [v9 setNeedsUpdate];
}

- (void)_updateNavigationUI
{
  char v3 = [(CKChatController *)self inlineReplyController];

  if (!v3)
  {
    BOOL v4 = [(CKChatController *)self navigationController];
    char v5 = [v4 navigationBar];
    id v6 = [v5 standardAppearance];
    id v14 = (id)[v6 copy];

    if ([(CKChatController *)self wantsChromelessAppearance]) {
      [v14 configureWithTransparentBackground];
    }
    else {
      [v14 configureWithDefaultBackground];
    }
    id v7 = +[CKUIBehavior sharedBehaviors];
    uint64_t v8 = [v7 theme];
    objc_super v9 = [(CKCoreChatController *)self conversation];
    objc_super v10 = [v9 chat];
    int v11 = [v8 primaryBrandColorForBusinessChat:v10];
    [v14 setBackgroundColor:v11];

    uint64_t v12 = [(CKChatController *)self navigationItem];
    [v12 setScrollEdgeAppearance:v14];

    uint64_t v13 = [(CKChatController *)self navigationItem];
    [v13 setStandardAppearance:v14];
  }
}

- (void)viewDidLoad
{
  v10[1] = *MEMORY[0x1E4F143B8];
  v9.receiver = self;
  v9.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v9 viewDidLoad];
  if ([(CKChatController *)self shouldUseNavigationBarCanvasView])
  {
    [(CKChatController *)self _initializeNavigationBarCanvasViewIfNecessary];
    if (IMOSLoggingEnabled())
    {
      char v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Ready to configure nav bar title view from viewDidLoad.", v8, 2u);
      }
    }
    [(CKChatController *)self _configureTitleView];
  }
  BOOL v4 = +[CKBalloonPluginManager sharedInstance];
  [v4 addExtensionConsumer:self];

  char v5 = [(CKCoreChatController *)self chat];
  [v5 _reloadChatItemsForSatelliteStateChangeIfRequired:@"CKChatController viewDidLoad"];

  v10[0] = objc_opt_class();
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  id v7 = (id)[(CKChatController *)self registerForTraitChanges:v6 withHandler:&__block_literal_global_29];
}

void __31__CKChatController_viewDidLoad__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  [v2 _updateEntryViewConstraintsIfNeeded];
  [v2 _setUpEntryViewAppCardLayoutConstraint];
  [v2 updateActiveEntryViewPositioningGuide];
}

- (void)transcriptCollectionViewControllerDidInset:(id)a3
{
  v5.receiver = self;
  v5.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v5 transcriptCollectionViewControllerDidInset:a3];
  BOOL v4 = [(CKChatController *)self transcriptInlineNotificationUpdater];
  [v4 setNeedsUpdate];

  [(CKChatController *)self scrollTranscriptToAlignWithMessageEditingBalloonView];
}

- (void)_updateBannerNotifications
{
  [(CKChatController *)self _updateAccountRegistrationFailureNotification];

  [(CKChatController *)self _updateLogoutBannerNotification];
}

- (void)_updateLogoutBannerNotification
{
  if (CKIsRunningInMessages()
    && !CKIsRunningUITests()
    && !CKIsRunningForDevelopmentOnSimulator())
  {
    id v8 = +[CKUIBehavior sharedBehaviors];
    if ([v8 isRunningInStoreDemoMode])
    {
    }
    else
    {
      BOOL v3 = [(CKChatController *)self _isRunningPPT];

      if (!v3)
      {
        BOOL v4 = [(CKCoreChatController *)self chat];
        char v5 = [v4 isStewieChat];

        if ((v5 & 1) == 0)
        {
          if (CKIsUnexpectedlyLoggedOut()
            && [(CKChatController *)self _chatShowsAccountRegistrationFailureBanner])
          {
            id v6 = self;
            uint64_t v7 = 1;
          }
          else
          {
            id v6 = self;
            uint64_t v7 = 0;
          }
          [(CKChatController *)v6 _updateNotificationBannerOfType:1 show:v7];
        }
      }
    }
  }
}

- (void)_updateAccountRegistrationFailureNotification
{
  if (CKIsAppleIDNotUpdated())
  {
    char v3 = 0;
    uint64_t v4 = 3;
  }
  else
  {
    int v5 = CKIsWaitingForCloud();
    char v3 = v5 ^ 1;
    if (v5) {
      uint64_t v4 = 2;
    }
    else {
      uint64_t v4 = 0;
    }
  }
  if ([(CKChatController *)self notificationBannerType] != v4
    && ([(CKChatController *)self notificationBannerType] & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    [(CKChatController *)self _updateNotificationBannerOfType:[(CKChatController *)self notificationBannerType] show:0];
  }
  BOOL v6 = (v3 & 1) == 0
    && [(CKChatController *)self _chatShowsAccountRegistrationFailureBanner];

  [(CKChatController *)self _updateNotificationBannerOfType:v4 show:v6];
}

- (void)_updateNotificationBannerOfType:(int64_t)a3 show:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      objc_super v9 = [NSNumber numberWithInteger:a3];
      v35[0] = 67109378;
      v35[1] = v4;
      __int16 v36 = 2112;
      double v37 = v9;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Update banner notificaton show:%d type:%@", (uint8_t *)v35, 0x12u);
    }
  }
  if (!v4)
  {
    if ([(CKChatController *)self notificationBannerType] != a3)
    {
      if ([(CKChatController *)self notificationBannerType] != a3) {
        return;
      }
      goto LABEL_17;
    }
LABEL_15:
    objc_super v10 = [(CKChatController *)self notificationBannerView];
    [v10 removeFromSuperview];

    [(CKChatController *)self setNotificationBannerView:0];
    [(CKChatController *)self setNotificationBannerType:0];
    return;
  }
  if (!a3) {
    goto LABEL_15;
  }
  if ([(CKChatController *)self notificationBannerType] > a3
    || a3 == 1
    && ((CKIsAppleIDNotUpdated() & 1) != 0
     || (CKIsWaitingForCloud() & 1) != 0
     || (IMGetUserIgnoreFailureWaitingForCloudIntent() & 1) != 0
     || (IMGetUserIgnoreFailureUpdateAppleIDIntent() & 1) != 0))
  {
    return;
  }
LABEL_17:
  int v11 = [(CKChatController *)self notificationBannerView];
  if (v11)
  {
    BOOL v12 = [(CKChatController *)self notificationBannerType] == a3;

    if (!v12)
    {
      uint64_t v13 = [(CKChatController *)self notificationBannerView];
      [v13 removeFromSuperview];

      [(CKChatController *)self setNotificationBannerView:0];
    }
  }
  [(CKChatController *)self setNotificationBannerType:a3];
  id v14 = [(CKChatController *)self notificationBannerView];
  BOOL v15 = v14 == 0;

  if (!v15) {
    goto LABEL_29;
  }
  switch(a3)
  {
    case 0:
      int v16 = [MEMORY[0x1E4F28B00] currentHandler];
      [v16 handleFailureInMethod:a2 object:self file:@"CKChatController.m" lineNumber:1964 description:@"This case should have been already filtered out"];
      goto LABEL_26;
    case 1:
      int v16 = +[CKBannerViewFactory unexpectedlyLoggedOutBanner];
      [(CKChatController *)self setNotificationBannerView:v16];
      goto LABEL_26;
    case 2:
      int v16 = +[CKBannerViewFactory waitingForCloudBanner];
      [(CKChatController *)self setNotificationBannerView:v16];
      goto LABEL_26;
    case 3:
      int v16 = +[CKBannerViewFactory updateAppleIDSettingsBanner];
      [(CKChatController *)self setNotificationBannerView:v16];
LABEL_26:

      break;
    default:
      break;
  }
  id v17 = [(CKChatController *)self notificationBannerView];
  BOOL v18 = v17 == 0;

  if (!v18)
  {
    long long v19 = [(CKChatController *)self view];
    int v20 = [(CKChatController *)self notificationBannerView];
    [v19 addSubview:v20];

LABEL_29:
    long long v21 = [(CKChatController *)self view];
    uint64_t v22 = [(CKChatController *)self notificationBannerView];
    [v21 bringSubviewToFront:v22];

    id v23 = [(CKChatController *)self notificationBannerView];
    uint64_t v24 = [(CKChatController *)self view];
    [v24 bounds];
    objc_msgSend(v23, "sizeThatFits:", v25, v26);
    double v28 = v27;
    double v30 = v29;

    __int16 v31 = [(CKCoreChatController *)self scrollView];
    [v31 contentInset];
    double v33 = v32;
    uint64_t v34 = [(CKChatController *)self notificationBannerView];
    objc_msgSend(v34, "setFrame:", 0.0, v33, v28, v30);
  }
}

- (BOOL)_chatShowsAccountRegistrationFailureBanner
{
  return ![(CKChatController *)self isTesting];
}

- (void)insertInitialCompositionIfNeeded
{
  id v3 = [(CKChatController *)self initialComposition];
  if (v3)
  {
    [(CKChatController *)self setInitialComposition:0];
    [(CKChatController *)self setComposition:v3];
  }
}

- (void)viewDidLayoutSubviews
{
  uint64_t v122 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(CKCoreChatController *)self initialLayoutComplete];
  v113.receiver = self;
  v113.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v113 viewDidLayoutSubviews];
  if (__CurrentTestName && (objc_opt_respondsToSelector() & 1) != 0)
  {
    BOOL v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v4 postNotificationName:@"PPTDidLayoutConversationEvent" object:0 userInfo:0];
  }
  if ([(CKCoreChatController *)self initialLayoutComplete])
  {
    int v5 = [(CKChatController *)self view];
    [v5 bounds];
    -[CKChatController _invalidateChatItemLayoutIfNecessary:](self, "_invalidateChatItemLayoutIfNecessary:", v6, v7);
  }
  id v8 = +[CKUIBehavior sharedBehaviors];
  if (![v8 useMacToolbar]) {
    goto LABEL_9;
  }
  BOOL v9 = [(CKCoreChatController *)self showingInStandAloneWindow];

  if (v9)
  {
    objc_super v10 = [(CKChatController *)self view];
    int v11 = [v10 window];
    [v11 frame];
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;

    id v8 = [(CKChatController *)self macToolbarController];
    objc_msgSend(v8, "updateWithFrame:", v13, v15, v17, v19);
LABEL_9:
  }
  int v20 = [(CKCoreChatController *)self collectionViewController];
  long long v21 = [v20 collectionView];

  uint64_t v22 = [(CKChatController *)self view];
  [v22 bounds];
  double v24 = v23;
  double v26 = v25;

  double v27 = [(CKChatController *)self transcriptBottomContentOffsetAtSuspend];
  if (![(CKChatController *)self needToEnforceScrollIntent]
    || ([(CKChatController *)self lastLaidOutSize], v24 == v29) && v26 == v28)
  {
    if (v27)
    {
      objc_msgSend(v21, "__ck_bottomOffset");
      double v31 = v30;
      double v33 = v32;
      [v27 floatValue];
      double v35 = v33 - v34;
      objc_msgSend(v21, "setContentOffset:", v31, v35);
      if (IMOSLoggingEnabled())
      {
        __int16 v36 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
        {
          id v37 = [(CKChatController *)self transcriptBottomContentOffsetAtSuspend];
          [v21 contentSize];
          uint64_t v39 = v38;
          [v21 bounds];
          *(_DWORD *)CGAffineTransform buf = 138413058;
          id v115 = v37;
          __int16 v116 = 2048;
          double v117 = v35;
          __int16 v118 = 2048;
          uint64_t v119 = v39;
          __int16 v120 = 2048;
          uint64_t v121 = v40;
          _os_log_impl(&dword_18EF18000, v36, OS_LOG_TYPE_INFO, "Stored bottom offset is %@, setting offset to %f for content height %f view height %f", buf, 0x2Au);
        }
      }
      if ([(CKChatController *)self firstLayoutAfterResume]) {
        [(CKChatController *)self setTranscriptBottomContentOffsetAtSuspend:0];
      }
    }
  }
  else
  {
    [(CKChatController *)self setNeedToEnforceScrollIntent:0];
    double v41 = +[CKScrollViewAnimationProperties inheritedAnimation];
    [v21 enforceTranscriptScrollIntentWithAnimationProperties:v41];
  }
  [(CKChatController *)self setFirstLayoutAfterResume:0];
  -[CKChatController setLastLaidOutSize:](self, "setLastLaidOutSize:", v24, v26);
  [(CKChatController *)self insertInitialCompositionIfNeeded];
  if ([(CKCoreChatController *)self viewIsVisible]
    && [(CKChatController *)self targetFirstResponder] == 1)
  {
    [(CKChatController *)self becomeFirstResponder];
  }
  double v42 = [(CKChatController *)self inlineReplyController];

  if (v42)
  {
    double v43 = [(CKChatController *)self inlineReplyController];
    double v44 = [v43 view];
    objc_super v45 = [(CKChatController *)self view];
    [v45 bounds];
    objc_msgSend(v44, "setFrame:");
  }
  uint64_t v46 = [(CKChatController *)self messageEditingViewController];

  if (v46)
  {
    uint64_t v47 = [(CKChatController *)self view];
    [v47 bounds];
    double v49 = v48;
    double v51 = v50;
    double v53 = v52;
    double v55 = v54;

    id v56 = [(CKChatController *)self messageEditingViewController];
    id v57 = [v56 view];
    objc_msgSend(v57, "setFrame:", v49, v51, v53, v55);
  }
  id v58 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
  [v58 layout];
  BOOL v59 = [(CKChatController *)self view];
  [v59 bounds];
  double v61 = v60;
  double v63 = v62;
  double v65 = v64;
  double v67 = v66;
  uint64_t v68 = [(CKChatController *)self entryViewContainerView];
  objc_msgSend((id)v68, "setFrame:", v61, v63, v65, v67);

  [(CKChatController *)self _marginInsetsForEntryView];
  double v70 = v69;
  double v72 = v71;
  double v74 = v73;
  double v76 = v75;
  id v77 = [(CKChatController *)self entryView];
  objc_msgSend(v77, "setMarginInsets:", v70, v72, v74, v76);

  CGFloat v78 = +[CKUIBehavior sharedBehaviors];
  LOBYTE(v68) = [v78 entryViewFollowsKeyboardLayoutGuide];

  if ((v68 & 1) == 0)
  {
    double v79 = [(CKChatController *)self entryView];
    long long v80 = [(CKChatController *)self entryView];
    [v80 frame];
    objc_msgSend(v79, "setFrame:");
  }
  if (!v3)
  {
    long long v81 = [(CKChatController *)self scrollBlock];
    BOOL v82 = v81 == 0;

    if (!v82)
    {
      uint64_t v83 = [(CKChatController *)self scrollBlock];
      v83[2]();

      [(CKChatController *)self setScrollBlock:0];
    }
  }
  CGPoint v84 = [(CKChatController *)self transcriptInlineNotificationUpdater];
  [v84 setNeedsUpdate];

  BOOL v85 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
  id v86 = +[CKUIBehavior sharedBehaviors];
  id v87 = [v86 theme];
  objc_msgSend(v85, "setBarStyle:", objc_msgSend(v87, "navBarStyle"));

  v88 = [(CKChatController *)self nicknameBanner];

  if (v88)
  {
    id v89 = [(CKChatController *)self nicknameBanner];
  }
  else
  {
    id v90 = [(CKChatController *)self groupPhotoUpdateBanner];

    if (!v90) {
      goto LABEL_40;
    }
    id v89 = [(CKChatController *)self groupPhotoUpdateBanner];
  }
  id v90 = v89;
  if (v89 && !self->_shouldOverrideBannerFrameOnPopTransition)
  {
    [v89 setNeedsLayout];
    [v90 layoutIfNeeded];
    id v91 = [(CKChatController *)self view];
    [v91 bounds];
    objc_msgSend(v90, "sizeThatFits:", v92, 1.79769313e308);
    double v94 = v93;
    double v96 = v95;

    [(CKScrollViewController *)self navigationBarInsets];
    objc_msgSend(v90, "setFrame:", *MEMORY[0x1E4F1DB28], v97, v94, v96);
  }
LABEL_40:
  if ([(CKCoreChatController *)self isShowingLockoutView])
  {
    double v98 = [(CKChatController *)self lockoutView];
    BOOL v99 = v98 == 0;

    if (!v99) {
      [(CKChatController *)self layoutLockoutView];
    }
  }
  [(CKChatController *)self reloadFooterViewIfNecessaryForNewConversation:self];
  [(CKChatController *)self layoutFooterView];
  double v100 = [(CKChatController *)self loadingIndicatorCoverView];

  if (v100)
  {
    double v101 = [(CKChatController *)self view];
    double v102 = [(CKChatController *)self loadingIndicatorCoverView];
    [v101 bringSubviewToFront:v102];

    __int16 v103 = [(CKChatController *)self view];
    [v103 bounds];
    double v105 = v104;
    double v107 = v106;
    double v109 = v108;
    double v111 = v110;
    int v112 = [(CKChatController *)self loadingIndicatorCoverView];
    objc_msgSend(v112, "setFrame:", v105, v107, v109, v111);
  }
}

- (void)layoutLockoutView
{
  id v4 = [(CKChatController *)self lockoutView];
  BOOL v3 = [(CKChatController *)self view];
  [v3 bounds];
  objc_msgSend(v4, "setFrame:");
}

- (BOOL)isModal
{
  return 0;
}

- (CKTranscriptCollectionView)collectionView
{
  id v2 = [(CKCoreChatController *)self collectionViewController];
  BOOL v3 = [v2 collectionView];

  return (CKTranscriptCollectionView *)v3;
}

- (id)preferredFocusEnvironments
{
  BOOL v3 = [MEMORY[0x1E4F1CA48] array];
  id v4 = [(CKChatController *)self entryView];
  int v5 = [v4 contentView];
  double v6 = [v5 textView];

  if (v6)
  {
    double v7 = [(CKChatController *)self entryView];
    id v8 = [v7 contentView];
    BOOL v9 = [v8 textView];
    [v3 addObject:v9];
  }

  return v3;
}

- (void)avatarViewPressed:(id)a3
{
  id v4 = [(CKCoreChatController *)self delegate];
  int v5 = [v4 hasDetailsNavigationController];

  if (v5)
  {
    id v6 = [(CKCoreChatController *)self delegate];
    [v6 dismissDetailsNavigationController];
  }
  else
  {
    [(CKChatController *)self presentDetailsViewController];
  }
}

- (void)_setupNavbar
{
  BOOL v3 = [CKNavigationBarTitleController alloc];
  id v4 = [(CKCoreChatController *)self conversation];
  int v5 = [(CKNavigationBarTitleController *)v3 initWithConversation:v4];
  navigationBarTitleController = self->_navigationBarTitleController;
  self->_navigationBarTitleController = v5;

  [(CKNavigationBarTitleController *)self->_navigationBarTitleController setDelegate:self];
  [(CKNavigationBarTitleController *)self->_navigationBarTitleController setEditing:[(CKChatController *)self isEditing]];
  double v7 = [(CKChatController *)self navigationItem];
  id v8 = [(CKNavigationBarTitleController *)self->_navigationBarTitleController titleView];
  [v7 setTitleView:v8];

  BOOL v9 = [(CKChatController *)self navigationItem];
  objc_super v10 = [(CKNavigationBarTitleController *)self->_navigationBarTitleController leftBarButtonItems];
  [v9 setLeftBarButtonItems:v10];

  id v12 = [(CKChatController *)self navigationItem];
  int v11 = [(CKNavigationBarTitleController *)self->_navigationBarTitleController rightBarButtonItems];
  [v12 setRightBarButtonItems:v11];
}

- (void)viewWillAppear:(BOOL)a3
{
  v21.receiver = self;
  v21.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v21 viewWillAppear:a3];
  id v4 = [(CKChatController *)self view];
  [v4 setNeedsLayout];

  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"ViewControllerNotVisible"];
  if (![(CKChatController *)self isTransitioningFromQLPreviewToGrid]) {
    [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"ShowingPhotoGridOverlay"];
  }
  int v5 = [(CKChatController *)self navigationController];
  id v6 = [v5 navigationBar];
  double v7 = [v6 traitCollection];
  uint64_t v8 = [v7 userInterfaceIdiom];

  if ((unint64_t)(v8 - 4) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    BOOL v9 = [(CKChatController *)self navigationController];
    objc_super v10 = [v9 navigationBar];
    int v11 = [(CKChatController *)self navigationController];
    id v12 = [v11 navigationBar];
    double v13 = [v12 standardAppearance];
    [v10 setScrollEdgeAppearance:v13];
  }
  if ([(CKChatController *)self wantsChromelessAppearance]) {
    [(CKChatController *)self _setupNavbar];
  }
  [(CKChatController *)self _restoreDraftState];
  [(CKChatController *)self registerForTextInputPayloadHandling];
  double v14 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
  [v14 setAlpha:1.0];

  double v15 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
  double v16 = +[CKUIBehavior sharedBehaviors];
  double v17 = [v16 theme];
  objc_msgSend(v15, "setBarStyle:", objc_msgSend(v17, "navBarStyle"));

  [(CKChatController *)self _showOrHideNicknameBannerIfNeeded];
  if (IMOSLoggingEnabled())
  {
    double v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v20 = 0;
      _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "Ready to configure nav bar title view from viewDidAppear:.", v20, 2u);
    }
  }
  [(CKChatController *)self _configureTitleView];
  double v19 = [(CKChatController *)self collectionView];
  [v19 beginDisablingTranscriptDynamicsForReason:@"ViewIsAppearing"];

  [(CKChatController *)self presentLoadingIndicatorCoverIfNeeded];
}

- (void)viewWillLayoutSubviews
{
  v13.receiver = self;
  v13.super_class = (Class)CKChatController;
  [(CKChatController *)&v13 viewWillLayoutSubviews];
  BOOL v3 = +[CKUIBehavior sharedBehaviors];
  if (([v3 isEntryViewInputAccessory] & 1) == 0)
  {
    uint64_t v4 = [(CKChatController *)self entryView];
    if (v4)
    {
      int v5 = (void *)v4;
      id v6 = [(CKChatController *)self view];
      [v6 bounds];
      double v8 = v7;
      BOOL v9 = [(CKChatController *)self entryView];
      [v9 bounds];
      double v11 = v10;

      if (v8 == v11) {
        return;
      }
      [(CKChatController *)self _updateEntryViewFrameIfNeeded:0];
      id v12 = [(CKCoreChatController *)self collectionViewController];
      BOOL v3 = [v12 collectionView];

      if (v3)
      {
        if ([v3 numberOfItemsInSection:0] >= 1) {
          [(CKChatController *)self setNeedToEnforceScrollIntent:1];
        }
      }
    }
  }
}

- (void)viewDidMoveToWindow:(id)a3 shouldAppearOrDisappear:(BOOL)a4
{
  v8.receiver = self;
  v8.super_class = (Class)CKChatController;
  [(CKChatController *)&v8 viewDidMoveToWindow:a3 shouldAppearOrDisappear:a4];
  [(CKChatController *)self configureForCurrentTraitCollection];
  int v5 = [(CKChatController *)self view];
  [v5 bounds];
  -[CKChatController _invalidateChatItemLayoutIfNecessary:](self, "_invalidateChatItemLayoutIfNecessary:", v6, v7);
}

- (void)viewDidAppear:(BOOL)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  v23.receiver = self;
  v23.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v23 viewDidAppear:a3];
  [(CKChatController *)self updateRaiseGesture];
  [(CKChatController *)self _setAvoidanceInsetsNeedsUpdate];
  if (__CurrentTestName && (objc_opt_respondsToSelector() & 1) != 0)
  {
    uint64_t v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v4 postNotificationName:@"PPTDidShowConversationEvent" object:0 userInfo:0];
  }
  if (!CKIsRunningInMacCatalyst())
  {
    int v5 = [(CKChatController *)self previewController];
    double v6 = v5;
    if (v5
      && ([v5 transitionCoordinator],
          double v7 = objc_claimAutoreleasedReturnValue(),
          char v8 = [v7 isInteractive],
          v7,
          (v8 & 1) == 0))
    {
      [(CKChatController *)self restoreEntryViewAfterPreview];
    }
    else if (IMOSLoggingEnabled())
    {
      BOOL v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        double v10 = [v6 transitionCoordinator];
        int v11 = [v10 isInteractive];
        id v12 = @"NO";
        if (v11) {
          id v12 = @"YES";
        }
        *(_DWORD *)CGAffineTransform buf = 138412546;
        double v25 = v6;
        __int16 v26 = 2112;
        double v27 = v12;
        _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "No preview controller: %@ - interactive: %@", buf, 0x16u);
      }
    }
  }
  objc_super v13 = [MEMORY[0x1E4F42B08] activeKeyboard];
  double v14 = [(CKChatController *)self effectPickerWindow];
  [v13 setTypingEnabled:v14 == 0];

  double v15 = [(CKChatController *)self transcriptInlineNotificationUpdater];
  [v15 setNeedsUpdate];

  if (CKIsRunningInMacCatalyst()
    && [(CKCoreChatController *)self showingInStandAloneWindow])
  {
    double v16 = [(CKChatController *)self entryView];
    double v17 = [v16 contentView];
    [v17 makeActive];
  }
  double v18 = [(CKChatController *)self navbarCanvasViewController];
  int v19 = [v18 locationLabelHidden];

  if (IMOSLoggingEnabled())
  {
    int v20 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 67109120;
      LODWORD(v25) = v19;
      _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "setting location label: %{BOOL}d, to NO on view appearance", buf, 8u);
    }
  }
  objc_super v21 = [(CKChatController *)self navbarCanvasViewController];
  [v21 setLocationLabelHidden:0];

  [(CKChatController *)self _resizeNavigationBarIfNecessaryWithAnimation:0];
  uint64_t v22 = [(CKChatController *)self collectionView];
  [v22 endDisablingTranscriptDynamicsForReason:@"ViewIsAppearing"];
}

- (void)viewDidAppearDeferredSetup
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  v59.receiver = self;
  v59.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v59 viewDidAppearDeferredSetup];
  [(CKChatController *)self _resizeNavigationBarIfNecessaryWithAnimation:0];
  BOOL v3 = [MEMORY[0x1E4F42948] currentDevice];
  if (![v3 userInterfaceIdiom])
  {
    double v30 = +[CKUIBehavior sharedBehaviors];
    char v31 = [v30 entryViewFollowsKeyboardLayoutGuide];

    if (v31) {
      goto LABEL_3;
    }
    double v32 = [(CKChatController *)self view];
    double v33 = [v32 window];
    float v34 = [v33 windowScene];
    BOOL v3 = [v34 keyboardSceneDelegate];

    double v35 = [(CKChatController *)self view];
    [v3 visibleFrameInView:v35];
    double v37 = v36;
    double v39 = v38;
    double v41 = v40;
    double v43 = v42;

    LODWORD(v35) = -[CKScrollViewController manuallyUpdateKeyboardScreenFrameWithFrameIfNeeded:animationDuration:animationCurve:](self, "manuallyUpdateKeyboardScreenFrameWithFrameIfNeeded:animationDuration:animationCurve:", 0, v37, v39, v41, v43, 0.3);
    if (((v35 ^ 1 | [(CKScrollViewController *)self isHoldingScrollGeometryUpdates]) & 1) == 0)
    {
      double v44 = [(CKCoreChatController *)self collectionViewController];
      [v44 scrollTranscriptToEntryViewInsertionTimeWithAnimation:1];
    }
  }

LABEL_3:
  uint64_t v4 = [(CKCoreChatController *)self conversation];
  if (v4 && CKIsRunningInMacCatalyst())
  {
    int v5 = [[CKDetailsContactsManager alloc] initWithConversation:v4 delegate:self];
    [(CKChatController *)self setDetailsContactsManager:v5];
  }
  else
  {
    [(CKChatController *)self setDetailsContactsManager:0];
  }
  double v6 = [v4 chat];
  [v6 watermarkOutForScrutinyMode];

  if (IMOSLoggingEnabled())
  {
    double v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      char v8 = [(CKCoreChatController *)self chat];
      BOOL v9 = [v8 guid];
      *(_DWORD *)CGAffineTransform buf = 138412290;
      *(void *)&uint8_t buf[4] = v9;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Reset load attempt count for chat GUID %@", buf, 0xCu);
    }
  }
  double v10 = [v4 chat];
  int v11 = [v10 isInScrutinyMode];

  if (v11)
  {
    id v12 = [v4 chat];
    [v12 clearScrutinyMode];

    if (IMOSLoggingEnabled())
    {
      objc_super v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        double v14 = [(CKCoreChatController *)self chat];
        double v15 = [v14 guid];
        *(_DWORD *)CGAffineTransform buf = 138412290;
        *(void *)&uint8_t buf[4] = v15;
        _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "Clearing scrutiny mode for chat GUID %@", buf, 0xCu);
      }
    }
  }
  [(CKChatController *)self _sizeEffectPickerWindow];
  double v16 = [(CKChatController *)self entryView];
  [v16 endDeferringEntryFieldCollapsedStateChanges];

  *(void *)CGAffineTransform buf = 0;
  objc_initWeak((id *)buf, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke;
  aBlock[3] = &unk_1E56215C8;
  objc_copyWeak(&v58, (id *)buf);
  double v17 = _Block_copy(aBlock);
  dispatch_time_t v18 = dispatch_time(0, 200000000);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_2;
  block[3] = &unk_1E5622688;
  objc_copyWeak(&v56, (id *)buf);
  id v19 = v17;
  id v55 = v19;
  dispatch_after(v18, MEMORY[0x1E4F14428], block);
  int v20 = +[CKPreviewDispatchCache genmojiPreviewCache];
  [v20 resume];

  objc_super v21 = +[CKPreviewDispatchCache transcriptPreviewCache];
  [v21 resume];

  uint64_t v22 = [(CKChatController *)self nicknameBanner];
  LODWORD(v21) = v22 == 0;

  if (v21) {
    [(CKChatController *)self _showOrHideNicknameBannerIfNeeded];
  }
  objc_super v23 = [(CKChatController *)self groupPhotoUpdateBanner];
  BOOL v24 = v23 == 0;

  if (v24) {
    [(CKChatController *)self showGroupBannerUpdateIfNeeded];
  }
  [(CKChatController *)self checkSuggestionsForBanner];
  double v25 = objc_msgSend((id)MEMORY[0x192FBA860](@"AFContextManager", @"AssistantServices"), "defaultContextManager");
  [v25 addContextProvider:self];

  [(CKChatController *)self _kickPhotoKit];
  __int16 v26 = [(CKCoreChatController *)self delegate];
  [v26 prewarmCameraIfNecessaryForChatController:self];

  double v27 = [MEMORY[0x1E4F42948] currentDevice];
  -[CKChatController setLastKnownDeviceOrientation:](self, "setLastKnownDeviceOrientation:", [v27 orientation]);

  if ([(CKCoreChatController *)self userInitiatedTranscriptPush]) {
    [(CKChatController *)self _markMessagesAsReadOnPushIfNeeded];
  }
  [(CKChatController *)self _markVisibleMentionsAsRead];
  [(CKChatController *)self _retryGroupPhotoUploadIfNecessary];
  uint64_t v28 = [(CKChatController *)self tipManager];
  [v28 chatControllerDidAppear];

  if ([(CKChatController *)self shouldShowBanners])
  {
    v53[0] = MEMORY[0x1E4F143A8];
    v53[1] = 3221225472;
    v53[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_3;
    v53[3] = &unk_1E56226B0;
    void v53[4] = self;
    [(CKChatController *)self showCheckInTips:v53];
  }
  v51[0] = MEMORY[0x1E4F143A8];
  v51[1] = 3221225472;
  v51[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_4;
  v51[3] = &unk_1E56215C8;
  objc_copyWeak(&v52, (id *)buf);
  double v29 = (void (**)(void))_Block_copy(v51);
  if ([(CKChatController *)self canShowBusinessOnboarding])
  {
    if (+[CKBusinessOnboardingController shouldShowBusinessOnboarding])
    {
      v29[2](v29);
    }
    else
    {
      uint64_t v46 = MEMORY[0x1E4F143A8];
      uint64_t v47 = 3221225472;
      double v48 = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_2_396;
      double v49 = &unk_1E5622358;
      double v50 = v29;
      +[CKBusinessOnboardingController checkForBusinessAlertsIDSIssues:&v46];
    }
  }
  [(CKChatController *)self _autoAcceptNicknameIfNeeded];
  objc_super v45 = [(CKChatController *)self catchUpButtonManager];
  [v45 animateInResumingFromBackground:0];

  objc_destroyWeak(&v52);
  objc_destroyWeak(&v56);

  objc_destroyWeak(&v58);
  objc_destroyWeak((id *)buf);
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained navbarCanvasViewController];
  id v2 = [v1 conversationIdentityView];
  [v2 performAnimationForPhotoUpdate];
}

uint64_t __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_2(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = [WeakRetained mentionsController];
  [v4 deferredSetup];

  id v5 = objc_loadWeakRetained(v2);
  double v6 = [v5 entryView];
  [v6 deferredSetup];

  id v7 = objc_loadWeakRetained(v2);
  char v8 = [v7 deferredPresentationBlock];

  if (v8)
  {
    id v9 = objc_loadWeakRetained(v2);
    double v10 = [v9 deferredPresentationBlock];
    v10[2]();

    id v11 = objc_loadWeakRetained(v2);
    [v11 setDeferredPresentationBlock:0];
  }
  id v12 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v12();
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_3(uint64_t a1, int a2, void *a3)
{
  if (a2 && [a3 length])
  {
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = [v4 tipManager];
    [v5 setCheckInDelegate:v4];

    id v6 = [*(id *)(a1 + 32) tipManager];
    [v6 presentCheckInTip];
  }
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_4(uint64_t a1)
{
  id v2 = [CKBusinessOnboardingController alloc];
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_5;
  v12[3] = &unk_1E56215C8;
  BOOL v3 = (id *)(a1 + 32);
  objc_copyWeak(&v13, (id *)(a1 + 32));
  uint64_t v4 = [(CKBusinessOnboardingController *)v2 initWithCompletionHandler:v12];
  uint64_t v7 = MEMORY[0x1E4F143A8];
  uint64_t v8 = 3221225472;
  id v9 = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_2_392;
  double v10 = &unk_1E56215C8;
  objc_copyWeak(&v11, v3);
  [(CKBusinessOnboardingController *)v4 setupNotNowWithActionHandler:&v7];
  id WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "dismissKeyboard", v7, v8, v9, v10);

  id v6 = objc_loadWeakRetained(v3);
  [v6 presentViewController:v4 animated:1 completion:0];

  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_5(uint64_t a1)
{
  id v2 = IMLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)CGAffineTransform buf = 0;
    _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "CKBusinessOnboardingController => Continue button completion handler called", buf, 2u);
  }

  BOOL v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_391;
  v5[3] = &unk_1E56215C8;
  objc_copyWeak(&v6, v3);
  [WeakRetained dismissViewControllerAnimated:1 completion:v5];

  objc_destroyWeak(&v6);
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_391(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didFinishShowingBusinessOnboarding];
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_2_392(uint64_t a1)
{
  v18[1] = *MEMORY[0x1E4F143B8];
  id v2 = IMLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)CGAffineTransform buf = 0;
    _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "CKBusinessOnboardingController => Not Now button action handler called", buf, 2u);
  }

  BOOL v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = [WeakRetained conversation];
  id v6 = [v5 chat];
  if (!v6) {
    goto LABEL_6;
  }
  id v7 = objc_loadWeakRetained(v3);
  uint64_t v8 = [v7 conversation];
  id v9 = [v8 chat];
  char v10 = [v9 hasSentMessageToBusiness];

  if ((v10 & 1) == 0)
  {
    id WeakRetained = +[CKConversationList sharedConversationList];
    id v5 = objc_loadWeakRetained(v3);
    id v11 = [v5 conversation];
    v18[0] = v11;
    id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v18 count:1];
    id v13 = [MEMORY[0x1E4F1C9C8] date];
    [WeakRetained recoverableDeleteForConversations:v12 deleteDate:v13 synchronousQuery:0 completionHandler:0];

LABEL_6:
  }
  id v14 = objc_loadWeakRetained(v3);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_395;
  v15[3] = &unk_1E56215C8;
  objc_copyWeak(&v16, v3);
  [v14 dismissViewControllerAnimated:1 completion:v15];

  objc_destroyWeak(&v16);
}

void __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_395(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v3 = [WeakRetained delegate];
  [v3 cancelNewMessageCompositionAnimated:1];

  id v5 = objc_loadWeakRetained(v1);
  uint64_t v4 = [v5 delegate];
  [v4 showConversationList];
}

uint64_t __46__CKChatController_viewDidAppearDeferredSetup__block_invoke_2_396(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16))();
  }
  return result;
}

- (void)_markMessagesAsReadOnPushIfNeeded
{
}

void __53__CKChatController__markMessagesAsReadOnPushIfNeeded__block_invoke(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v7 = [*(id *)(a1 + 32) chat];
  if ([v7 unreadMessageCount])
  {
    int v2 = CKIsRunningInMessages();

    if (v2
      && (!+[CKStarkManager isCarPlayConnected]
       || !CKIsScreenLocked()))
    {
      if (IMOSLoggingEnabled())
      {
        BOOL v3 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
        {
          uint64_t v4 = [*(id *)(a1 + 32) chat];
          id v5 = [v4 chatIdentifier];
          *(_DWORD *)CGAffineTransform buf = 138412290;
          id v9 = v5;
          _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Marking chat %@ as read on transcript push as this was a user initiated action", buf, 0xCu);
        }
      }
      id v6 = [*(id *)(a1 + 32) conversation];
      [v6 markAllMessagesAsRead];
    }
  }
  else
  {
  }
}

- (BOOL)clearCommSafetyCompositionIfNecessary
{
  BOOL v3 = [MEMORY[0x1E4F6E6D0] sharedManager];
  int v4 = [v3 checksForSensitivityOnSend];

  if (!v4) {
    return 0;
  }
  id v5 = [(CKChatController *)self composition];
  id v6 = [v5 text];
  id v7 = [v6 string];
  uint64_t v8 = IMSharedUtilitiesFrameworkBundle();
  id v9 = [v8 localizedStringForKey:@"MESSAGE_GROWNUP_BODY" value:&stru_1EDE4CA38 table:@"CommSafetyLocalizable"];
  int v10 = [v7 isEqualToString:v9];

  if (!v10) {
    return 0;
  }
  id v11 = [(CKCoreChatController *)self conversation];
  [v11 setUnsentComposition:0];

  [(CKChatController *)self setComposition:0];
  return 1;
}

- (void)viewWillDisappear:(BOOL)a3
{
  v22.receiver = self;
  v22.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v22 viewWillDisappear:a3];
  [(CKChatController *)self setSuppressEntryViewKeyboardNotifications:1];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"ViewControllerNotVisible"];
  int v4 = [(CKChatController *)self entryView];
  [v4 beginDeferringEntryFieldCollapsedStateChanges];

  id v5 = [(CKChatController *)self entryView];
  id v6 = [v5 contentView];
  [v6 setIgnoreEndEditing:1];

  [(CKChatController *)self resignFirstResponderOnEntryViewIfNeeded];
  id v7 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
  uint64_t v8 = v7;
  if (v7) {
    [v7 chatControllerWillDisappear:self];
  }
  id v9 = [(CKChatController *)self entryView];
  int v10 = [v9 isRecording];

  if (v10)
  {
    id v11 = [(CKChatController *)self entryView];
    [v11 stopRecording];

    id v12 = [(CKChatController *)self entryView];
    id v13 = [v12 recorder];
    [v13 setPaused:1];
  }
  if (![(CKChatController *)self clearCommSafetyCompositionIfNecessary]) {
    [(CKChatController *)self _saveDraftState];
  }
  [(CKChatController *)self updateRaiseGesture];
  id v14 = [(CKCoreChatController *)self inputController];
  [v14 unregisterForTextInputPayloadHandling];

  double v15 = +[CKBalloonPluginManager sharedInstance];
  [v15 invalidatePhotosPlugin];

  id v16 = objc_msgSend((id)MEMORY[0x192FBA860](@"AFContextManager", @"AssistantServices"), "defaultContextManager");
  [v16 removeContextProvider:self];

  double v17 = [(CKChatController *)self nicknameBanner];
  if (v17)
  {
    dispatch_time_t v18 = [(CKChatController *)self transitionCoordinator];
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    void v20[2] = __38__CKChatController_viewWillDisappear___block_invoke;
    v20[3] = &unk_1E56226D8;
    v20[4] = self;
    id v21 = v17;
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = __38__CKChatController_viewWillDisappear___block_invoke_2;
    v19[3] = &unk_1E5621550;
    void v19[4] = self;
    [v18 animateAlongsideTransition:v20 completion:v19];
  }
  [(CKChatController *)self dimsmissCurrentBannerAndShowNewBannerForGroupUpdate:0];
  [(CKChatController *)self dismissCollaborationNoticeBannersIfNecessary];
  [(CKChatController *)self dismissBusinessOnboardingIfShowing];
}

void __38__CKChatController_viewWillDisappear___block_invoke(uint64_t a1, void *a2)
{
  double v29 = [a2 viewControllerForKey:*MEMORY[0x1E4F43EC0]];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  int v4 = v29;
  if (isKindOfClass)
  {
    id v5 = v29;
    id v6 = [v5 navigationItem];
    [v6 _manualScrollEdgeAppearanceProgress];
    double v8 = v7;

    id v9 = [*(id *)(a1 + 32) view];
    [v9 safeAreaInsets];
    double v11 = v10;
    id v12 = [v5 view];
    [v12 safeAreaInsets];
    double v14 = v13;

    double v15 = [*(id *)(a1 + 32) view];
    id v16 = [v15 window];
    double v17 = [v16 windowScene];
    unint64_t v18 = [v17 interfaceOrientation] - 3;

    if (v18 > 1)
    {
      int v19 = 0;
    }
    else
    {
      int v19 = 0;
      if (v11 < v14 && v8 == 0.0) {
        int v19 = [*(id *)(a1 + 32) _wantsThreeColumnLayout] ^ 1;
      }
    }
    if (v8 == 1.0 || ([v5 isSearchActive] | v19) == 1)
    {
      *(unsigned char *)(*(void *)(a1 + 32) + 1312) = 1;
      [*(id *)(a1 + 40) frame];
      double v21 = v20;
      double v23 = v22;
      double v25 = v24;
      __int16 v26 = [v5 view];
      [v26 safeAreaInsets];
      double v28 = v27;

      objc_msgSend(*(id *)(a1 + 40), "setFrame:", v21, v28, v23, v25);
    }

    int v4 = v29;
  }
}

uint64_t __38__CKChatController_viewWillDisappear___block_invoke_2(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 1312) = 0;
  return result;
}

- (void)viewDidDisappear:(BOOL)a3
{
  v9.receiver = self;
  v9.super_class = (Class)CKChatController;
  [(CKViewController *)&v9 viewDidDisappear:a3];
  [(CKChatController *)self setSuppressEntryViewKeyboardNotifications:0];
  int v4 = +[CKBalloonPluginManager sharedInstance];
  [v4 commitInteractionTimeOrderingChanges];

  [(CKChatController *)self setScrollBlock:0];
  [(CKChatController *)self setEditing:0 animated:0];
  [(CKChatController *)self setIsShowingCamera:0];
  id v5 = [(CKChatController *)self entryView];
  [v5 endDeferringEntryFieldCollapsedStateChanges];

  id v6 = [(CKChatController *)self tipManager];
  [v6 chatControllerDidDisappear];

  if ([MEMORY[0x1E4F6BCB0] isContactLimitsFeatureEnabled]) {
    [(CKChatController *)self removeLockoutControllerIfNeeded];
  }
  double v7 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
  double v8 = v7;
  if (v7) {
    [v7 dismissAnimated:0 completion:0];
  }
}

- (void)parentControllerDidBecomeActive
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 parentControllerDidBecomeActive];
  BOOL v3 = [(CKCoreChatController *)self collectionViewController];
  [v3 parentControllerDidBecomeActive];
}

- (void)_performResume
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [(CKChatController *)self setIsCatchUpButtonNeededOnFirstLoad:0];
  [(CKChatController *)self setDidComputeInitiallyVisibleIndexPaths:0];
  [(CKChatController *)self setDidDisplayFirstUnreadMessage:0];
  [(CKChatController *)self _updateCatchUpButtonVisibilityResumingFromBackground:1];
  v20.receiver = self;
  v20.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v20 _performResume];
  BOOL v3 = [(CKChatController *)self entryView];
  if ([v3 isHidden])
  {
    objc_super v4 = [(CKCoreChatController *)self inputController];
    char v5 = [v4 appManagerIsDisplayed];

    if (v5) {
      goto LABEL_5;
    }
    id v6 = [(CKChatController *)self entryView];
    [v6 setHidden:0];

    BOOL v3 = [(CKChatController *)self entryView];
    [v3 setAlpha:1.0];
  }

LABEL_5:
  [(CKChatController *)self setEditing:0 animated:0];
  double v7 = +[CKDraftManager sharedInstance];
  [v7 flushCache];

  double v8 = [(CKCoreChatController *)self conversation];
  objc_super v9 = [v8 unsentComposition];

  double v10 = [(CKChatController *)self composition];
  int v11 = [v10 hasContent];

  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Refreshing composition to establish connection to photo browser due to resume", buf, 2u);
      }
    }
    double v13 = [(CKCoreChatController *)self inputController];
    double v14 = [(CKChatController *)self composition];
    [v13 requestPhotoBrowserInitFromDraft:v14];
  }
  else
  {
    if (![v9 hasContent]) {
      goto LABEL_18;
    }
    if (IMOSLoggingEnabled())
    {
      double v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Conversation has unsent content that is not in the current composition, restoring it", buf, 2u);
      }
    }
    [(CKChatController *)self setComposition:v9];
    double v13 = [(CKCoreChatController *)self inputController];
    [v13 requestPhotoBrowserInitFromDraft:v9];
  }

LABEL_18:
  if (IMOSLoggingEnabled())
  {
    id v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 136315138;
      double v22 = "-[CKChatController _performResume]";
      _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "reloadEntryViewIfNeeded called from %s", buf, 0xCu);
    }
  }
  [(CKChatController *)self reloadEntryViewIfNeeded];
  [(CKChatController *)self _sizeEffectPickerWindow];
  [(CKChatController *)self _reloadMentionsData];
  double v17 = [(CKChatController *)self entryView];
  unint64_t v18 = [v17 contentView];
  int v19 = [v18 pluginEntryViewController];

  if (objc_opt_respondsToSelector()) {
    [v19 performHostAppResume];
  }
  [(CKChatController *)self setFirstLayoutAfterResume:1];
}

- (void)prepareForSuspend
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    BOOL v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 136315138;
      uint64_t v23 = "-[CKChatController prepareForSuspend]";
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "%s", buf, 0xCu);
    }
  }
  objc_super v4 = +[CKPluginExtensionStateObserver sharedInstance];
  int v5 = [v4 passKitUIPresented];

  if (v5)
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)CGAffineTransform buf = 0;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "prepareForSuspend not doing suspend work as we are suspending due to passkit UI", buf, 2u);
    }
    goto LABEL_9;
  }
  double v7 = +[CKPluginExtensionStateObserver sharedInstance];
  int v8 = [v7 iTunesStoreDialogPresented];

  if (v8)
  {
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "prepareForSuspend not doing suspend work as we are suspending due to iTunesStore UI", buf, 2u);
      }
LABEL_9:
    }
  }
  else
  {
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = __37__CKChatController_prepareForSuspend__block_invoke;
    v21[3] = &unk_1E5620C40;
    void v21[4] = self;
    [MEMORY[0x1E4F42FF8] _performWithoutDeferringTransitions:v21];
    objc_super v9 = +[CKLinkIntentsManager sharedManager];
    [v9 purgeDependencies];

    double v10 = [(CKCoreChatController *)self collectionViewController];
    int v11 = [v10 collectionView];

    objc_msgSend(v11, "__ck_bottomOffset");
    double v13 = v12;
    [v11 contentOffset];
    double v15 = v13 - v14;
    id v16 = [NSNumber numberWithDouble:v15];
    [(CKChatController *)self setTranscriptBottomContentOffsetAtSuspend:v16];

    if (IMOSLoggingEnabled())
    {
      double v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        [v11 contentSize];
        int v19 = v18;
        [v11 contentOffset];
        *(_DWORD *)CGAffineTransform buf = 134218496;
        uint64_t v23 = v19;
        __int16 v24 = 2048;
        uint64_t v25 = v20;
        __int16 v26 = 2048;
        double v27 = v15;
        _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Transcript content height at suspend %f top offset %f offset from bottom: %f", buf, 0x20u);
      }
    }
  }
}

void __37__CKChatController_prepareForSuspend__block_invoke(uint64_t a1)
{
  int v2 = [MEMORY[0x1E4F6E6D0] sharedManager];
  int v3 = [v2 checksForSensitivityOnSend];

  objc_super v4 = *(void **)(a1 + 32);
  if (!v3) {
    goto LABEL_4;
  }
  int v5 = [v4 composition];
  id v6 = [v5 text];
  double v7 = [v6 string];
  int v8 = IMSharedUtilitiesFrameworkBundle();
  objc_super v9 = [v8 localizedStringForKey:@"MESSAGE_GROWNUP_BODY" value:&stru_1EDE4CA38 table:@"CommSafetyLocalizable"];
  int v10 = [v7 isEqualToString:v9];

  objc_super v4 = *(void **)(a1 + 32);
  if (v10)
  {
    int v11 = [v4 conversation];
    [v11 setUnsentComposition:0];
  }
  else
  {
LABEL_4:
    [v4 _saveDraftState];
  }
  if (CKIsRunningInMacCatalyst()) {
    return;
  }
  [*(id *)(a1 + 32) setEditing:0 animated:0];
  double v12 = [*(id *)(a1 + 32) inputController];
  [v12 prepareForSuspend];

  double v13 = +[CKBalloonPluginManager sharedInstance];
  [v13 prepareForSuspend];

  double v14 = [*(id *)(a1 + 32) collectionViewController];
  [v14 prepareForSuspend];

  [*(id *)(a1 + 32) dismissContextMenuInteractionMenu];
  if ([*(id *)(a1 + 32) isFullScreenBalloonViewOnScreen])
  {
    if (IMOSLoggingEnabled())
    {
      double v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)double v37 = 0;
        _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Dismissing fullscreen balloon view for suspend", v37, 2u);
      }
    }
    [*(id *)(a1 + 32) _dismissFullScreenBubbleViewControllerAnimated:0 withSendAnimation:0 completion:0];
  }
  id v16 = +[CKAdaptivePresentationController sharedInstance];
  [v16 dismissViewControllerAnimated:0 completion:0];

  [*(id *)(a1 + 32) dismissVideoMessageRecordingViewController];
  [*(id *)(a1 + 32) hideMediaPickerAnimated:0];
  [*(id *)(a1 + 32) updateRaiseGesture];
  char v17 = [*(id *)(a1 + 32) isFunCamPresented];
  unint64_t v18 = [*(id *)(a1 + 32) navigationController];
  int v19 = [v18 visibleViewController];
  uint64_t v20 = (objc_class *)objc_opt_class();
  double v21 = NSStringFromClass(v20);

  if ([v21 containsString:@"ReportNavigationStack"]
    && [v21 containsString:@"SensitiveContentAnalysis"])
  {
    int v22 = [v21 containsString:@"UIHostingController"] ^ 1;
    if (v17) {
      goto LABEL_22;
    }
  }
  else
  {
    int v22 = 1;
    if (v17) {
      goto LABEL_22;
    }
  }
  if (([*(id *)(a1 + 32) isWebViewVisible] & 1) == 0)
  {
    uint64_t v23 = [*(id *)(a1 + 32) navigationController];
    __int16 v24 = [v23 visibleViewController];
    uint64_t v25 = *(void **)(a1 + 32);
    if (v24 == v25)
    {
LABEL_21:

      goto LABEL_22;
    }
    unsigned int v26 = v22 & ~[v25 isShowingBusinessOnboarding];

    if (v26 == 1)
    {
      uint64_t v23 = [*(id *)(a1 + 32) navigationController];
      __int16 v24 = [v23 visibleViewController];
      [v24 dismissViewControllerAnimated:0 completion:0];
      goto LABEL_21;
    }
  }
LABEL_22:
  double v27 = [*(id *)(a1 + 32) navigationController];
  id v28 = (id)[v27 popToViewController:*(void *)(a1 + 32) animated:0];

  double v29 = [*(id *)(a1 + 32) entryView];

  if (v29) {
    char v30 = v17;
  }
  else {
    char v30 = 1;
  }
  if ((v30 & 1) == 0)
  {
    char v31 = [*(id *)(a1 + 32) entryView];
    double v32 = [v31 contentView];
    char v33 = [v32 isActive];

    if ((v33 & 1) == 0) {
      [*(id *)(a1 + 32) becomeFirstResponder];
    }
  }
  [*(id *)(a1 + 32) setTargetFirstResponder:0];
  float v34 = [*(id *)(a1 + 32) entryView];
  double v35 = [v34 contentView];
  double v36 = [v35 pluginEntryViewController];

  if (objc_opt_respondsToSelector()) {
    [v36 performHostAppSuspend];
  }
}

- (void)didReceiveMemoryWarning
{
  v3.receiver = self;
  v3.super_class = (Class)CKChatController;
  [(CKChatController *)&v3 didReceiveMemoryWarning];
  [(CKChatController *)self setPreviewController:0];
}

- (void)viewWillTransitionToSize:(CGSize)a3 withTransitionCoordinator:(id)a4
{
  double height = a3.height;
  double width = a3.width;
  id v7 = a4;
  v26.receiver = self;
  v26.super_class = (Class)CKChatController;
  -[CKChatController viewWillTransitionToSize:withTransitionCoordinator:](&v26, sel_viewWillTransitionToSize_withTransitionCoordinator_, v7, width, height);
  [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:0];
  [(CKChatController *)self setTransitioningSize:1];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"ViewControllerSizeTransition"];
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke;
  aBlock[3] = &unk_1E5621550;
  void aBlock[4] = self;
  int v8 = _Block_copy(aBlock);
  objc_super v9 = [(CKCoreChatController *)self collectionViewController];
  int v10 = [v9 collectionView];

  if (v10 && [v10 numberOfItemsInSection:0] >= 1)
  {
    [(CKChatController *)self setNeedToEnforceScrollIntent:1];
    int v11 = [(CKChatController *)self isEditing];
    char v12 = v11;
    if (v11)
    {
      double v13 = [(CKCoreChatController *)self collectionViewController];
      double v14 = [v13 selectedItems];
    }
    else
    {
      double v14 = 0;
    }
    BOOL v15 = [(CKChatController *)self isCollapsed];
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_2;
    v21[3] = &unk_1E5622728;
    BOOL v23 = v15;
    char v24 = v12;
    void v21[4] = self;
    id v22 = v14;
    id v16 = v14;
    [v7 animateAlongsideTransition:v21 completion:v8];
  }
  else
  {
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    void v20[2] = __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_4;
    v20[3] = &unk_1E5621550;
    v20[4] = self;
    [v7 animateAlongsideTransition:v20 completion:v8];
  }
  char v17 = [(CKCoreChatController *)self fullScreenBalloonViewController];

  if (v17)
  {
    unint64_t v18 = [(CKCoreChatController *)self inputController];
    [v18 endStickerReactionSession];

    [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:0 withSendAnimation:0 completion:0];
    [(CKChatController *)self updateActiveEntryViewPositioningGuide];
  }
  int v19 = [(CKChatController *)self transcriptInlineNotificationUpdater];
  [v19 setNeedsUpdate];

  [MEMORY[0x1E4F39CF8] addCommitHandler:&__block_literal_global_442 forPhase:2];
}

void __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setTransitioningSize:0];
  [*(id *)(a1 + 32) endHoldingScrollGeometryUpdatesForReason:@"ViewControllerSizeTransition"];
  if ([*(id *)(a1 + 32) viewDidMoveToWindowAndNeedsToScrollToInsertionTime])
  {
    [*(id *)(a1 + 32) updateScrollGeometryWithInheritedAnimationForReason:@"ViewSizeTransitionCompletion"];
    int v2 = [*(id *)(a1 + 32) collectionViewController];
    [v2 scrollTranscriptToEntryViewInsertionTimeWithAnimation:0];

    [*(id *)(a1 + 32) setViewDidMoveToWindowAndNeedsToScrollToInsertionTime:0];
  }
  [*(id *)(a1 + 32) _sizeEffectPickerWindow];
  objc_super v3 = [MEMORY[0x1E4F42948] currentDevice];
  uint64_t v4 = [v3 orientation];

  if ([*(id *)(a1 + 32) lastKnownDeviceOrientation] != v4)
  {
    int v5 = [*(id *)(a1 + 32) inputController];
    objc_msgSend(v5, "didTransitionFromOrientation:toOrientation:", objc_msgSend(*(id *)(a1 + 32), "lastKnownDeviceOrientation"), v4);

    [*(id *)(a1 + 32) setLastKnownDeviceOrientation:v4];
  }
  id v6 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v6 postNotificationName:@"kPPTChatControllerDidRotateNotification" object:0];
}

void __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_2(uint64_t a1)
{
  id v1 = (void *)MEMORY[0x1E4F42FF0];
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_3;
  v3[3] = &unk_1E5622700;
  __int16 v5 = *(_WORD *)(a1 + 48);
  int v2 = *(void **)(a1 + 40);
  v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  [v1 performWithoutAnimation:v3];
}

uint64_t __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_3(uint64_t a1)
{
  int v2 = +[CKUIBehavior sharedBehaviors];
  if ([v2 canPresentOverKeyboard])
  {
  }
  else
  {
    int v3 = *(unsigned __int8 *)(a1 + 48);
    int v4 = [*(id *)(a1 + 32) isCollapsed];

    if (v3 != v4)
    {
      __int16 v5 = [*(id *)(a1 + 32) imagePickerController];

      if (v5) {
        [*(id *)(a1 + 32) hideMediaPickerAnimated:0];
      }
    }
  }
  [*(id *)(a1 + 32) _updateEntryViewFrameIfNeeded:0];
  [*(id *)(a1 + 32) setEditing:*(unsigned __int8 *)(a1 + 49) animated:0];
  id v6 = [*(id *)(a1 + 32) collectionViewController];
  [v6 setSelectedItems:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) reloadFooterViewIfNecessaryForNewConversation:*(void *)(a1 + 32)];
  [*(id *)(a1 + 32) updateScrollGeometryWithInheritedAnimationForReason:@"ViewSizeTransitionAnimation"];
  id v7 = *(void **)(a1 + 32);

  return [v7 _showCatchUpButtonIfNeeded];
}

uint64_t __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_4(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateEntryViewFrameIfNeeded:0];
  int v2 = *(void **)(a1 + 32);

  return [v2 updateScrollGeometryWithInheritedAnimationForReason:@"ViewSizeTransitionAnimation"];
}

void __71__CKChatController_viewWillTransitionToSize_withTransitionCoordinator___block_invoke_5()
{
  id v0 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v0 postNotificationName:@"kPPTChatControllerWillRotateNotification" object:0];
}

- (void)presentViewController:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  BOOL v6 = a4;
  id v8 = a3;
  id v9 = a5;
  int v10 = [v8 presentationController];
  int v11 = [v10 delegate];

  if (!v11)
  {
    char v12 = [v8 presentationController];
    [v12 setDelegate:self];
  }
  [(CKChatController *)self dismissTipIfPresented];
  double v13 = [(CKChatController *)self _viewControllerForModalPresentation];
  double v14 = v13;
  if (v13 == self)
  {
    v15.receiver = self;
    v15.super_class = (Class)CKChatController;
    [(CKChatController *)&v15 presentViewController:v8 animated:v6 completion:v9];
  }
  else
  {
    [(CKChatController *)v13 presentViewController:v8 animated:v6 completion:v9];
  }
}

- (id)_viewControllerForModalPresentation
{
  int v3 = [(CKCoreChatController *)self inputController];
  int v4 = [v3 isAppCardPresented];

  if (v4)
  {
    __int16 v5 = [(CKChatController *)self presentedViewController];
    int v6 = [v5 conformsToProtocol:&unk_1EE09CB18];

    if (v6)
    {
      id v7 = [(CKCoreChatController *)self inputController];
      char v8 = [v7 isAppCardDismissing];

      if ((v8 & 1) == 0)
      {
        char v12 = [(CKChatController *)self presentedViewController];
        goto LABEL_7;
      }
    }
    id v9 = [(CKChatController *)self activeSendMenuPresentationForChatInputController:0];
    if (v9)
    {
      int v10 = v9;
      int v11 = [v9 sendMenuViewController];

      goto LABEL_8;
    }
  }
  char v12 = self;
LABEL_7:
  int v11 = v12;
LABEL_8:

  return v11;
}

- (void)dismissViewControllerAnimated:(BOOL)a3 completion:(id)a4
{
  BOOL v4 = a3;
  id v6 = a4;
  id v7 = [(CKChatController *)self presentedViewController];
  char v8 = [(CKChatController *)self nicknameUpdateController];

  if (v7 == v8) {
    [(CKChatController *)self setNicknameUpdateController:0];
  }
  v9.receiver = self;
  v9.super_class = (Class)CKChatController;
  [(CKChatController *)&v9 dismissViewControllerAnimated:v4 completion:v6];
}

- (void)presentationControllerDidDismiss:(id)a3
{
  id v4 = a3;
  __int16 v5 = [(CKChatController *)self presentedViewController];

  if (!v5)
  {
    id v6 = [(CKChatController *)self entryView];
    id v7 = [v6 window];

    if (!v7)
    {
      char v8 = IMLogHandleForCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        [(CKChatController *)(uint64_t)v4 presentationControllerDidDismiss:v8];
      }

      [(CKChatController *)self reloadInputViews];
    }
  }
  objc_super v9 = [v4 presentedViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass) {
    [(CKChatController *)self didFinishShowingBusinessOnboarding];
  }
  int v11 = [v4 presentedViewController];
  char v12 = [(CKChatController *)self walletOrderImportViewController];
  int v13 = [v11 isEqual:v12];

  if (v13)
  {
    [(CKChatController *)self _walletOrderImportControllerDismissed];
    double v14 = [(CKCoreChatController *)self delegate];
    [v14 stopForcingOrientation];
  }
}

- (void)_reduceTransparencyStatusDidChange
{
  if (IMOSLoggingEnabled())
  {
    int v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Reduce Transparency Status Did Change", v4, 2u);
    }
  }
  [(CKChatController *)self reloadEntryViewIfNeeded];
}

- (void)traitCollectionDidChange:(id)a3
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  v36.receiver = self;
  v36.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v36 traitCollectionDidChange:v4];
  if (IMOSLoggingEnabled())
  {
    __int16 v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = [v4 description];
      *(_DWORD *)CGAffineTransform buf = 138412290;
      double v38 = v6;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "traitCollectionDidChange | previous: {%@}", buf, 0xCu);
    }
  }
  if (IMOSLoggingEnabled())
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      char v8 = [(CKChatController *)self traitCollection];
      objc_super v9 = [v8 description];
      *(_DWORD *)CGAffineTransform buf = 138412290;
      double v38 = v9;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "traitCollectionDidChange | current: {%@}", buf, 0xCu);
    }
  }
  int v10 = (void *)MEMORY[0x192FBB780]();
  [(CKChatController *)self configureForCurrentTraitCollection];
  if (IMOSLoggingEnabled())
  {
    int v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)CGAffineTransform buf = 0;
      _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "traitCollectionDidChange | Returned from configureForCurrentTraitCollection", buf, 2u);
    }
  }
  uint64_t v12 = [v4 horizontalSizeClass];
  int v13 = [(CKChatController *)self traitCollection];
  uint64_t v14 = [v13 horizontalSizeClass];

  uint64_t v15 = [v4 verticalSizeClass];
  id v16 = [(CKChatController *)self traitCollection];
  uint64_t v17 = [v16 verticalSizeClass];

  if (v12 != v14 || v15 != v17)
  {
    if (IMOSLoggingEnabled())
    {
      unint64_t v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        int v19 = @"NO";
        if (v12 == v14) {
          uint64_t v20 = @"NO";
        }
        else {
          uint64_t v20 = @"YES";
        }
        if (v15 != v17) {
          int v19 = @"YES";
        }
        *(_DWORD *)CGAffineTransform buf = 138412546;
        double v38 = v20;
        __int16 v39 = 2112;
        double v40 = v19;
        _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "> Detected a change to the chat controller's size class. horizontalSizeClassDidChange={%@} verticalSizeClassDidChange={%@}", buf, 0x16u);
      }
    }
    [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:0];
    [(CKChatController *)self _configureTitleView];
  }
  if (v12 != v14 && [v4 horizontalSizeClass] == 1)
  {
    if (+[CKUtilities isIpad])
    {
      double v21 = [(CKCoreChatController *)self inputController];
      char v22 = [v21 presentedAppBypassesSendMenu];

      if ((v22 & 1) == 0)
      {
        BOOL v23 = [(CKCoreChatController *)self inputController];
        [v23 dismissAppCardIfNecessaryAnimated:0 completion:0];
      }
    }
  }
  char v24 = [(CKChatController *)self keyboardSnapshotView];
  BOOL v25 = v24 == 0;

  if (!v25)
  {
    objc_super v26 = [(CKChatController *)self traitCollection];
    uint64_t v27 = [v26 userInterfaceStyle];
    LOBYTE(v27) = v27 == [v4 userInterfaceStyle];

    if ((v27 & 1) == 0)
    {
      id v28 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
      double v29 = v28;
      if (v28) {
        [v28 dismissAnimated:1 completion:0];
      }
    }
  }
  [v4 displayScale];
  double v31 = v30;
  double v32 = [(CKChatController *)self traitCollection];
  [v32 displayScale];
  BOOL v34 = v31 != v33;

  if (v34) {
    [(CKChatController *)self refreshMacToolbar];
  }
  [(CKChatController *)self updateStyleForCurrentEffect];
  [(CKChatController *)self _dismissSendMenuIfNecessaryForChangedPresentationStyle];
  if (IMOSLoggingEnabled())
  {
    double v35 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)CGAffineTransform buf = 0;
      _os_log_impl(&dword_18EF18000, v35, OS_LOG_TYPE_INFO, "traitCollectionDidChange | Completed all configuration updates in response to traitCollection change.", buf, 2u);
    }
  }
}

- (void)configureForCurrentTraitCollection
{
  int v3 = [(CKChatController *)self navbarCanvasViewController];
  objc_msgSend(v3, "setCanShowBackButtonView:", -[CKChatController _canShowBackButtonView](self, "_canShowBackButtonView"));

  id v4 = [(CKChatController *)self navbarCanvasViewController];
  objc_msgSend(v4, "setShouldShowDoneButton:", -[CKChatController shouldShowDoneButton](self, "shouldShowDoneButton"));

  id v11 = [(CKChatController *)self traitCollection];
  __int16 v5 = [(CKChatController *)self entryView];
  [v5 setEntryViewTraitCollection:v11];

  [(CKMessageEntryBackgroundViewProtocol *)self->_keyboardCandidateBarBackgroundView setEntryViewTraitCollection:v11];
  [(CKCoreChatController *)self _updateTitleAnimated:1];
  id v6 = [(CKChatController *)self tipManager];
  int v7 = [v6 presentingTip];

  if (v7)
  {
    char v8 = [(CKChatController *)self traitCollection];
    uint64_t v9 = [v8 verticalSizeClass];

    if (v9 == 1)
    {
      int v10 = [(CKChatController *)self tipManager];
      [v10 dismissTipIfPresented];
    }
  }
}

- (int64_t)preferredStatusBarStyle
{
  int v2 = [(CKCoreChatController *)self inputController];
  int v3 = [v2 statusBarStyleViewController];

  if (v3)
  {
    int64_t v4 = [v3 preferredStatusBarStyle];
  }
  else
  {
    __int16 v5 = +[CKUIBehavior sharedBehaviors];
    id v6 = [v5 theme];
    int64_t v4 = [v6 statusBarStyle];
  }
  return v4;
}

- (BOOL)prefersStatusBarHidden
{
  int v3 = [(CKCoreChatController *)self inputController];
  char v4 = [v3 shouldSuppressStatusBarForHandwriting];

  if (v4) {
    return 1;
  }
  __int16 v5 = [(CKCoreChatController *)self inputController];
  char v6 = [v5 shouldSuppressStatusBarForSendMenu];

  if (v6) {
    return 1;
  }
  v8.receiver = self;
  v8.super_class = (Class)CKChatController;
  return [(CKChatController *)&v8 prefersStatusBarHidden];
}

- (void)willMoveToParentViewController:(id)a3
{
  if (a3) {
    return;
  }
  id v12 = [(CKChatController *)self presentedViewController];
  __int16 v5 = [v12 _existingPresentationControllerImmediate:1 effective:0];
  char v6 = [v5 presentingViewController];

  objc_opt_class();
  int isKindOfClass = objc_opt_isKindOfClass();
  if (!v12)
  {
    if (v6 != self || ((isKindOfClass ^ 1) & 1) != 0) {
      goto LABEL_12;
    }
LABEL_9:
    id v9 = v12;
    int v10 = [v9 topViewController];
    objc_opt_class();
    char v11 = objc_opt_isKindOfClass();

    if (v11) {
      [v9 dismissViewControllerAnimated:0 completion:0];
    }

    goto LABEL_13;
  }
  id v8 = [(CKChatController *)self inlineReplyController];

  if (v6 == self && ((isKindOfClass ^ 1) & 1) == 0) {
    goto LABEL_9;
  }
  if (v12 != v8)
  {
LABEL_12:
    [(CKChatController *)self dismissBusinessOnboardingIfShowing];
    goto LABEL_13;
  }
  [v12 dismissViewControllerAnimated:0 completion:0];
LABEL_13:
}

- (BOOL)isCollapsed
{
  uint64_t v3 = [(CKCoreChatController *)self delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    __int16 v5 = [(CKCoreChatController *)self delegate];
    char v6 = [v5 shouldConfigureChatControllerAsCollapsed];
  }
  else
  {
    __int16 v5 = [(CKChatController *)self splitViewController];
    char v6 = [v5 isCollapsed];
  }
  BOOL v7 = v6;

  return v7;
}

- (BOOL)isShowingOscarChat
{
  if (!IMIsOscarEnabled()) {
    return 0;
  }
  uint64_t v3 = +[CKConversationList sharedConversationList];
  char v4 = [(CKCoreChatController *)self conversation];
  BOOL v5 = [v3 primaryFilterModeForConversation:v4] == 9;

  return v5;
}

- (BOOL)isEditingMessage
{
  uint64_t v3 = [(CKChatController *)self messageEditingViewController];
  if (v3)
  {
    BOOL v4 = 1;
  }
  else
  {
    BOOL v5 = [(CKChatController *)self inlineReplyController];
    char v6 = [v5 messageEditingViewController];
    BOOL v4 = v6 != 0;
  }
  return v4;
}

- (id)splitViewController
{
  uint64_t v3 = [(CKChatController *)self presentingViewController];

  if (v3)
  {
    BOOL v4 = [(CKChatController *)self presentingViewController];
    BOOL v5 = [v4 splitViewController];
  }
  else
  {
    v7.receiver = self;
    v7.super_class = (Class)CKChatController;
    BOOL v5 = [(CKChatController *)&v7 splitViewController];
  }

  return v5;
}

- (void)chatControllerWillBeginResizing
{
  uint64_t v3 = [(CKCoreChatController *)self fullScreenBalloonViewController];

  if (v3)
  {
    [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:0 withSendAnimation:0 completion:0];
  }
}

- (unint64_t)supportedInterfaceOrientations
{
  uint64_t v3 = +[CKUIBehavior sharedBehaviors];
  uint64_t v4 = [v3 supportedInterfaceOrientations];
  BOOL v5 = [(CKCoreChatController *)self inputController];
  unint64_t v6 = [v5 browserSupportedInterfaceOrientations] & v4;

  return v6;
}

- (void)performResumeDeferredSetup
{
  v7.receiver = self;
  v7.super_class = (Class)CKChatController;
  [(CKViewController *)&v7 performResumeDeferredSetup];
  uint64_t v3 = [(CKChatController *)self deferredPresentationBlock];

  if (v3)
  {
    dispatch_time_t v4 = dispatch_time(0, 200000000);
    BOOL v5 = [(CKChatController *)self deferredPresentationBlock];
    dispatch_after(v4, MEMORY[0x1E4F14428], v5);

    [(CKChatController *)self setDeferredPresentationBlock:0];
  }
  unint64_t v6 = [(CKCoreChatController *)self collectionViewController];
  [v6 performResumeDeferredSetup];
}

- (id)_currentPresentationController
{
  return (id)[(CKChatController *)self _existingPresentationControllerImmediate:0 effective:1];
}

- (BOOL)shouldAutorotate
{
  uint64_t v3 = [(CKChatController *)self autorotationUpdater];
  char v4 = [v3 isHoldingUpdates];

  if (v4) {
    return 0;
  }
  unint64_t v6 = [(CKCoreChatController *)self inputController];
  char v7 = [v6 browserShouldAutorotate];

  return v7;
}

- (void)_autorotationUpdaterFired
{
}

- (void)beginHoldingAutorotationForKey:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(CKChatController *)self autorotationUpdater];
  [v5 beginHoldingUpdatesForKey:v4];

  id v6 = [(CKChatController *)self autorotationUpdater];
  [v6 setNeedsUpdate];
}

- (void)endHoldingAutorotationForKey:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self autorotationUpdater];
  [v5 endHoldingUpdatesForKey:v4];
}

- (void)sendMessage:(id)a3 forConversation:(id)a4 onService:(id)a5 newComposition:(BOOL)a6
{
}

- (void)sendMessage:(id)a3 forConversation:(id)a4 newComposition:(BOOL)a5
{
}

- (void)sendComposition:(id)a3 animations:(id)a4
{
  v81[1] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  char v7 = (void (**)(void))a4;
  id v8 = _chatControllerTelemetryLogHandle();
  if (os_signpost_enabled(v8))
  {
    *(_WORD *)CGAffineTransform buf = 0;
    _os_signpost_emit_with_name_impl(&dword_18EF18000, v8, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "SendingMessage", " enableTelemetry=YES ", buf, 2u);
  }
  id v9 = [MEMORY[0x1E4F42738] sharedApplication];
  -[CKChatController setSendingCompositionBackgroundTask:](self, "setSendingCompositionBackgroundTask:", [v9 beginBackgroundTaskWithName:@"CompositionSending" expirationHandler:&__block_literal_global_470]);

  int v10 = [(CKCoreChatController *)self inputController];
  [v10 willSendComposition];

  char v11 = [(CKCoreChatController *)self inputController];
  [v11 requestPhotoBrowserToPrepareForDraftClearingPhotoShelfViewController:0];

  if (![(CKChatController *)self showSendAlertIfNecessaryForComposition:v6])
  {
    id v12 = [(CKCoreChatController *)self inputController];
    [v12 requestPhotoBrowserToAppendFinalImagesToComposition];

    int v13 = [(CKCoreChatController *)self conversation];
    [v13 resetCaches];
    if ([v6 hasContent])
    {
      uint64_t v14 = [(CKChatController *)self nextMediaObjectToTrimInComposition:v6];
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        id v16 = [v6 shelfPluginPayload];
        uint64_t v17 = [v16 pluginBundleID];
        int v18 = [v17 isEqualToString:*MEMORY[0x1E4F6CBF8]];

        int v19 = [v16 pluginBundleID];
        uint64_t v20 = IMBalloonExtensionIDWithSuffix();
        double v75 = v7;
        if ([v19 isEqualToString:v20]
          && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          int v21 = [v16 shouldSendAsMediaObject];
        }
        else
        {
          int v21 = 0;
        }

        if ((v18 | v21) == 1)
        {
          BOOL v23 = [v6 shelfPluginPayload];
          char v24 = objc_msgSend(v23, "__ck_photoCompositionString");

          BOOL v25 = [v6 text];
          objc_super v26 = (void *)[v25 mutableCopy];

          if ([v26 length])
          {
            [v26 insertAttributedString:v24 atIndex:0];
          }
          else
          {
            objc_super v45 = (void *)[objc_alloc(MEMORY[0x1E4F28B18]) initWithAttributedString:v24];
            uint64_t v46 = [v45 mutableCopy];

            objc_super v26 = (void *)v46;
          }
          uint64_t v47 = [CKComposition alloc];
          double v48 = [v6 subject];
          uint64_t v49 = [(CKComposition *)v47 initWithText:v26 subject:v48 shelfPluginPayload:0];

          double v50 = [(CKChatController *)self entryView];
          [v50 setComposition:v49];

          uint64_t v51 = [(CKChatController *)self nextMediaObjectToTrimInComposition:v49];

          uint64_t v15 = (void *)v51;
          id v6 = (id)v49;
        }
        id v52 = [v6 mediaObjects];
        double v74 = v15;
        double v72 = v52;
        double v73 = v16;
        if ([v52 count] == 1)
        {
          double v53 = [v52 objectAtIndex:0];
          int v54 = [v53 mediaType];

          id v55 = CKFrameworkBundle();
          id v56 = v55;
          if (v54 == 2)
          {
            uint64_t v57 = [v55 localizedStringForKey:@"TRIM_ONE_VIDEO_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

            id v58 = CKFrameworkBundle();
            objc_super v59 = v58;
            double v60 = @"TRIM_ONE_VIDEO_MESSAGE";
          }
          else
          {
            uint64_t v57 = [v55 localizedStringForKey:@"TRIM_ONE_ATTACHMENT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

            id v58 = CKFrameworkBundle();
            objc_super v59 = v58;
            double v60 = @"TRIM_ONE_ATTACHMENT_MESSAGE";
          }
        }
        else
        {
          uint64_t v61 = CKFrameworkBundle();
          uint64_t v57 = [v61 localizedStringForKey:@"TRIM_MANY_ATTACHMENTS_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          id v58 = CKFrameworkBundle();
          objc_super v59 = v58;
          double v60 = @"TRIM_MANY_ATTACHMENTS_MESSAGE";
        }
        uint64_t v62 = [v58 localizedStringForKey:v60 value:&stru_1EDE4CA38 table:@"ChatKit"];

        double v70 = (void *)v62;
        double v71 = (void *)v57;
        double v63 = +[CKAlertController alertControllerWithTitle:v57 message:v62 preferredStyle:1];
        double v64 = CKFrameworkBundle();
        double v65 = [v64 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];
        v77[0] = MEMORY[0x1E4F143A8];
        v77[1] = 3221225472;
        v77[2] = __47__CKChatController_sendComposition_animations___block_invoke_491;
        void v77[3] = &unk_1E56218C8;
        v77[4] = self;
        id v6 = v6;
        id v78 = v6;
        double v66 = +[CKAlertAction actionWithTitle:v65 style:0 handler:v77];
        [v63 addAction:v66];

        double v67 = CKFrameworkBundle();
        uint64_t v68 = [v67 localizedStringForKey:@"CANCEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
        double v69 = +[CKAlertAction actionWithTitle:v68 style:1 handler:0];
        [v63 addAction:v69];

        [v63 presentFromViewController:self animated:1 completion:0];
        if (os_signpost_enabled(v8))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_signpost_emit_with_name_impl(&dword_18EF18000, v8, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "SendingMessage", "Send message failed: Bad attachment", buf, 2u);
        }

        char v7 = v75;
        goto LABEL_45;
      }
      BOOL v27 = [(CKChatController *)self _isRunningPPT];
      id v28 = [v13 recipients];
      char v29 = [v13 canSendToRecipients:v28 alertIfUnable:1];

      if ((v29 & 1) != 0 || v27)
      {
        double v30 = [MEMORY[0x1E4F42B08] activeKeyboard];
        [v30 removeAutocorrectPrompt];

        BOOL v31 = [(CKCoreChatController *)self isSendingMessage];
        [(CKChatController *)self setSendingMessage:1];
        [(CKChatController *)self _updateNavigationButtons];
        [(CKChatController *)self _willSendComposition:v6 inConversation:v13];
        double v32 = [(CKChatController *)self entryView];
        int v33 = [v32 isPredictionBarEnabled];

        if (v33)
        {
          v76[0] = MEMORY[0x1E4F143A8];
          v76[1] = 3221225472;
          v76[2] = __47__CKChatController_sendComposition_animations___block_invoke_496;
          v76[3] = &unk_1E5620C40;
          v76[4] = self;
          [MEMORY[0x1E4F42FF0] performWithoutAnimation:v76];
        }
        BOOL v34 = [v6 shelfPluginPayload];
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) == 0
          || ([v6 shelfPluginPayload],
              objc_super v36 = objc_claimAutoreleasedReturnValue(),
              char v37 = [v36 useDirectSend],
              v36,
              (v37 & 1) == 0))
        {
          [v13 setUnsentComposition:0];
        }
        double v38 = [(CKChatController *)self shareSheetHostBundleIdentifier];
        [v6 evaluateSendMetricsWithConversation:v13 shareSheetHostBundleIdentifier:v38];

        if (!CKIsRunningInMacCatalyst())
        {
          __int16 v39 = [v6 proofreadingInfo];
          if ([v39 count])
          {
            double v40 = [(CKCoreChatController *)self conversation];
            uint64_t v41 = [v40 chat];
            uint64_t v80 = *MEMORY[0x1E4F6B9E0];
            v81[0] = v39;
            double v42 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v81 forKeys:&v80 count:1];
            [v41 setProofreadingInfo:v42];
          }
        }
        BOOL v43 = [(CKChatController *)self shouldUseThrowAnimationForComposition:v6];
        if (v7) {
          char v44 = v31;
        }
        else {
          char v44 = 1;
        }
        if (!v43 || (v44 & 1) != 0) {
          [(CKChatController *)self sendCompositionWithoutThrow:v6];
        }
        else {
          v7[2](v7);
        }
        [(CKChatController *)self _clearCompositionAndPendingConversation];
        if (!os_signpost_enabled(v8)) {
          goto LABEL_45;
        }
        *(_WORD *)CGAffineTransform buf = 0;
        char v22 = " enableTelemetry=YES ";
      }
      else
      {
        if (!os_signpost_enabled(v8)) {
          goto LABEL_45;
        }
        *(_WORD *)CGAffineTransform buf = 0;
        char v22 = "Send message failed: Cannot send";
      }
    }
    else
    {
      [(CKChatController *)self messageEntryViewDidChange:0 isTextChange:1 isShelfChange:0];
      if (!os_signpost_enabled(v8))
      {
LABEL_45:

        goto LABEL_46;
      }
      *(_WORD *)CGAffineTransform buf = 0;
      char v22 = "Send message failed: Empty message content";
    }
    _os_signpost_emit_with_name_impl(&dword_18EF18000, v8, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "SendingMessage", v22, buf, 2u);
    goto LABEL_45;
  }
LABEL_46:
}

void __47__CKChatController_sendComposition_animations___block_invoke()
{
  id v0 = IMLogHandleForCategory();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR)) {
    __47__CKChatController_sendComposition_animations___block_invoke_cold_1();
  }
}

uint64_t __47__CKChatController_sendComposition_animations___block_invoke_491(uint64_t a1)
{
  return [*(id *)(a1 + 32) startTrimmingMediaObjectsInComposition:*(void *)(a1 + 40)];
}

uint64_t __47__CKChatController_sendComposition_animations___block_invoke_496(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAppStripVisibility:1 animated:0];
}

- (BOOL)showSendAlertIfNecessaryForComposition:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self conversation];
  id v20 = 0;
  char v6 = [v5 canSendComposition:v4 error:&v20];

  id v7 = v20;
  if ((v6 & 1) != 0 || [(CKChatController *)self _isRunningPPT])
  {
    BOOL v8 = 0;
  }
  else
  {
    if (v7)
    {
      id v9 = CKFrameworkBundle();
      int v10 = [v9 localizedStringForKey:@"CANNOT_SEND_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      char v11 = CKFrameworkBundle();
      id v12 = [v11 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];

      int v13 = CKCreateAlertControllerWithError(v7, v10, 0, v12, 0);
      uint64_t v14 = [(CKChatController *)self effectPickerViewController];
      if (v14)
      {
        uint64_t v15 = [(CKChatController *)self effectPickerViewController];
      }
      else
      {
        uint64_t v15 = self;
      }
      id v16 = v15;

      [v13 presentFromViewController:v16 animated:1 completion:0];
    }
    uint64_t v17 = _chatControllerTelemetryLogHandle();
    if (os_signpost_enabled(v17))
    {
      *(_WORD *)int v19 = 0;
      _os_signpost_emit_with_name_impl(&dword_18EF18000, v17, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "SendingMessage", "Send message failed: Cannot send", v19, 2u);
    }

    BOOL v8 = 1;
  }

  return v8;
}

- (void)_clearCompositionAndPendingConversation
{
  dropComposition = self->_dropComposition;
  self->_dropComposition = 0;

  id v15 = [(CKCoreChatController *)self conversation];
  id v4 = [v15 chat];
  uint64_t v5 = [v4 guid];
  if (v5)
  {
    char v6 = (void *)v5;
    id v7 = [(CKCoreChatController *)self conversation];
    BOOL v8 = [v7 chat];
    id v9 = [v8 guid];
    int v10 = +[CKConversationList sharedConversationList];
    char v11 = [v10 pendingConversation];
    id v12 = [v11 chat];
    int v13 = [v12 guid];
    int v14 = [v9 isEqualToString:v13];

    if (!v14) {
      return;
    }
    id v15 = +[CKConversationList sharedConversationList];
    [v15 unpendConversation];
  }
  else
  {
  }
}

- (void)sendComposition:(id)a3
{
  id v4 = a3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __36__CKChatController_sendComposition___block_invoke;
  v6[3] = &unk_1E5620AF8;
  v6[4] = self;
  id v7 = v4;
  id v5 = v4;
  [(CKChatController *)self sendComposition:v5 animations:v6];
}

uint64_t __36__CKChatController_sendComposition___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) beginThrowAnimationForComposition:*(void *)(a1 + 40)];
}

- (id)makeThrowAnimationManager
{
  uint64_t v3 = objc_opt_new();
  [v3 setThrowManagerDelegate:self];
  [v3 setSendAnimationManagerDelegate:self];
  [v3 setSendAnimationBalloonProvider:self];

  return v3;
}

- (void)beginThrowAnimationForComposition:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self makeThrowAnimationManager];
  [(CKChatController *)self setThrowAnimationManager:v5];
  char v6 = [(CKCoreChatController *)self conversation];
  id v7 = [v6 messagesFromComposition:v4];
  if ([v4 isAudioComposition])
  {
    BOOL v8 = [(CKChatController *)self entryView];
    [v8 audioRecordingPillViewFrameInThrowViewCoordinates];
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;

    objc_msgSend(v5, "setAudioMessageSourceRect:", v10, v12, v14, v16);
    uint64_t v17 = [(CKChatController *)self entryView];
    int v18 = [v17 audioRecordingPillViewSnapshot];

    [v5 setAudioRecordingPillViewSnapshot:v18];
  }
  int v19 = [(CKCoreChatController *)self collectionViewController];
  id v20 = [v19 updateAnimationGroup];
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __54__CKChatController_beginThrowAnimationForComposition___block_invoke;
  v24[3] = &unk_1E5621088;
  v24[4] = self;
  id v25 = v4;
  id v26 = v5;
  id v27 = v7;
  id v21 = v7;
  id v22 = v5;
  id v23 = v4;
  dispatch_group_notify(v20, MEMORY[0x1E4F14428], v24);
}

uint64_t __54__CKChatController_beginThrowAnimationForComposition___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) flagSensitiveMediaObjects:*(void *)(a1 + 40)];
  int v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);

  return [v2 animateMessages:v3];
}

- (void)sendCompositionWithoutThrow:(id)a3
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self conversation];
  [(CKChatController *)self flagSensitiveMediaObjects:v4];
  char v6 = [v5 messagesFromComposition:v4];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v24;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v24 != v9) {
          objc_enumerationMutation(v6);
        }
        [(CKChatController *)self sendMessage:*(void *)(*((void *)&v23 + 1) + 8 * v10++) forConversation:v5 newComposition:0];
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v23 objects:v28 count:16];
    }
    while (v8);
  }
  double v11 = [v4 shelfPluginPayload];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0
    || ([v4 shelfPluginPayload],
        double v13 = objc_claimAutoreleasedReturnValue(),
        char v14 = [v13 useDirectSend],
        v13,
        (v14 & 1) == 0))
  {
    double v15 = [(CKChatController *)self entryView];
    [v15 invalidateCompositionForReason:1];
  }
  [(CKChatController *)self _updateNavigationButtons];
  [v5 setIgnoringTypingUpdates:0];
  [(CKChatController *)self setSendingMessage:0];
  [(CKChatController *)self _didSendCompositionInConversation:v5];
  double v16 = [v4 expressiveSendStyleID];
  if (!+[CKImpactEffectManager identifierIsAnimatedImpactEffect:v16])
  {

    goto LABEL_15;
  }
  uint64_t v17 = [(CKCoreChatController *)self collectionViewController];
  BOOL v18 = [(CKCoreChatController *)self transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:v17];

  if (!v18)
  {
LABEL_15:
    [(CKChatController *)self dismissEffectPickerAnimated:0];
    goto LABEL_16;
  }
  int v19 = [(CKCoreChatController *)self collectionViewController];
  id v20 = [v19 impactEffectManager];
  id v21 = [v6 lastObject];
  id v27 = v21;
  id v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v27 count:1];
  [v20 animateMessages:v22];

LABEL_16:
}

- (BOOL)shouldUseThrowAnimationForComposition:(id)a3
{
  id v4 = a3;
  if ([(CKCoreChatController *)self shouldDismissAfterSend]
    || ![v4 isSendAnimated])
  {
    BOOL v7 = 0;
  }
  else
  {
    id v5 = +[CKUIBehavior sharedBehaviors];
    if ([v5 showsSendAnimation])
    {
      char v6 = [v4 expressiveSendStyleID];
      if (+[CKImpactEffectManager identifierIsValidImpactEffect:v6])
      {
        BOOL v7 = 0;
      }
      else
      {
        uint64_t v8 = [(CKCoreChatController *)self collectionViewController];
        BOOL v7 = v8 != 0;
      }
    }
    else
    {
      BOOL v7 = 0;
    }
  }
  return v7;
}

- (void)updateChatControllerForRecoveredJunkConversation
{
  uint64_t v3 = [(CKCoreChatController *)self conversation];
  id v4 = [v3 chat];
  [v4 _reloadChatItemsForJunkStateChange];

  id v5 = [(CKChatController *)self navbarCanvasViewController];
  [v5 updateForRecoveredJunkConversation];

  [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
  [(CKChatController *)self becomeFirstResponder];

  [(CKChatController *)self reloadInputViews];
}

- (void)performAnimatedJunkRecoveryTransition:(id)a3
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKChatController *)self _currentPresentationController];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if (IMOSLoggingEnabled())
    {
      char v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CGAffineTransform buf = 138412290;
        char v44 = self;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Transitioning chatController: %@ to full screen presentation", buf, 0xCu);
      }
    }
    BOOL v7 = [(CKCoreChatController *)self collectionViewController];
    [v7 setTransitioningFromComposing:1];

    id v8 = v5;
    uint64_t v9 = +[CKUIBehavior sharedBehaviors];
    [v9 sendAnimationDuration];
    double v11 = v10;

    double v12 = [v8 containerView];
    _UISheetMinimumTopInset();
    double v14 = v13;

    double v15 = [(CKChatController *)self collectionView];
    [v15 beginDisablingTranscriptDynamicsForReason:@"JunkRecovery"];
    double v16 = [(CKChatController *)self collectionView];
    [v16 contentOffset];
    double v18 = v17;
    double v20 = v19;

    id v21 = [v8 containerView];
    [v21 bounds];
    double v23 = v22;
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;

    double v30 = [(CKChatController *)self collectionView];
    [v30 setAutoresizingMask:0];

    BOOL v31 = [(CKChatController *)self collectionView];
    objc_msgSend(v31, "setFrame:", v23, v25 - v14, v27, v29);

    double v32 = [(CKChatController *)self collectionView];
    objc_msgSend(v32, "setContentOffset:", v18, v20 - v14);

    int v33 = [(CKChatController *)self collectionView];
    [v33 layoutIfNeeded];

    BOOL v34 = (void *)MEMORY[0x1E4F42FF0];
    v40[0] = MEMORY[0x1E4F143A8];
    v40[1] = 3221225472;
    void v40[2] = __58__CKChatController_performAnimatedJunkRecoveryTransition___block_invoke;
    v40[3] = &unk_1E5620AF8;
    id v41 = v8;
    double v42 = self;
    v37[0] = MEMORY[0x1E4F143A8];
    v37[1] = 3221225472;
    v37[2] = __58__CKChatController_performAnimatedJunkRecoveryTransition___block_invoke_2;
    v37[3] = &unk_1E5622750;
    id v38 = v15;
    id v39 = v4;
    id v35 = v15;
    id v36 = v8;
    [v34 animateWithDuration:v40 animations:v37 completion:v11];
  }
}

void __58__CKChatController_performAnimatedJunkRecoveryTransition___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_setWantsFullScreen:", objc_msgSend(*(id *)(a1 + 32), "_wantsFullScreen") ^ 1);
  int v2 = [*(id *)(a1 + 32) containerView];
  [v2 layoutIfNeeded];

  uint64_t v3 = [*(id *)(a1 + 32) containerView];
  [v3 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  id v12 = [*(id *)(a1 + 40) collectionView];
  objc_msgSend(v12, "setFrame:", v5, v7, v9, v11);
}

uint64_t __58__CKChatController_performAnimatedJunkRecoveryTransition___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) endDisablingTranscriptDynamicsForReason:@"JunkRecovery"];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

- (void)setupStateForLaunchURL:(id)a3
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  double v4 = [v3 scheme];
  double v5 = [v4 lowercaseString];
  if ([v5 isEqualToString:@"itms-messages"])
  {
  }
  else
  {
    double v6 = [v3 scheme];
    double v7 = [v6 lowercaseString];
    int v8 = [v7 isEqualToString:@"itms-messagess"];

    if (!v8) {
      goto LABEL_9;
    }
  }
  if (IMOSLoggingEnabled())
  {
    double v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 136315138;
      BOOL v34 = "-[CKChatController setupStateForLaunchURL:]";
      _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "reloadEntryViewIfNeeded called from (1) %s", buf, 0xCu);
    }
  }
  [(CKChatController *)self reloadEntryViewIfNeeded];
  double v10 = [(CKCoreChatController *)self inputController];
  [v10 presentAppStoreForURL:v3];

  double v11 = [MEMORY[0x1E4F6E890] sharedInstance];
  [v11 trackEvent:*MEMORY[0x1E4F6D768]];

LABEL_9:
  id v12 = [MEMORY[0x1E4F29088] componentsWithURL:v3 resolvingAgainstBaseURL:0];
  [v12 queryItems];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v13 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v14 = [v13 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v14)
  {
    uint64_t v15 = *(void *)v29;
    while (2)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)v29 != v15) {
          objc_enumerationMutation(v13);
        }
        double v17 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        double v18 = [v17 name];
        int v19 = [v18 isEqualToString:@"inputmode"];

        if (v19)
        {
          if (IMOSLoggingEnabled())
          {
            double v20 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)CGAffineTransform buf = 136315138;
              BOOL v34 = "-[CKChatController setupStateForLaunchURL:]";
              _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "reloadEntryViewIfNeeded called from (2) %s", buf, 0xCu);
            }
          }
          [(CKChatController *)self reloadEntryViewIfNeeded];
          id v21 = [v17 value];
          if ([v21 isEqualToString:@"photos"])
          {
            double v22 = [(CKCoreChatController *)self inputController];
            [v22 showPhotosExtension];
          }
          else if ([v21 isEqualToString:@"camera"])
          {
            double v23 = [(CKCoreChatController *)self inputController];
            [v23 showFunCamera];
          }
          else if ([v21 isEqualToString:@"dt"])
          {
            double v24 = [(CKCoreChatController *)self inputController];
            [v24 showDTCompose];
          }
          else
          {
            [v21 isEqualToString:@"apps"];
          }

          goto LABEL_30;
        }
      }
      uint64_t v14 = [v13 countByEnumeratingWithState:&v28 objects:v32 count:16];
      if (v14) {
        continue;
      }
      break;
    }
  }
LABEL_30:

  double v25 = [v3 ckLaunchURLBalloonPluginBundleID];
  if ([v25 length])
  {
    double v26 = [v3 ckLaunchURLBalloonPluginPayload];
    [(CKChatController *)self setupStateForLaunchPluginWithBundleID:v25 pluginPayload:v26];
  }
}

- (void)setupStateForLaunchPluginWithBundleID:(id)a3 pluginPayload:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v6 length])
  {
    id location = 0;
    objc_initWeak(&location, self);
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = __72__CKChatController_setupStateForLaunchPluginWithBundleID_pluginPayload___block_invoke;
    v8[3] = &unk_1E5622778;
    id v9 = v6;
    objc_copyWeak(&v11, &location);
    id v10 = v7;
    [(CKChatController *)self setDeferredPresentationBlock:v8];

    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }
}

void __72__CKChatController_setupStateForLaunchPluginWithBundleID_pluginPayload___block_invoke(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) isEqualToString:*MEMORY[0x1E4F6CBB8]];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained inputController];
  double v4 = v3;
  if (v2) {
    [v3 showFunCamera];
  }
  else {
    [v3 presentPluginWithBundleID:*(void *)(a1 + 32) appLaunchPayload:*(void *)(a1 + 40)];
  }
}

- (void)setupStateForLaunchAudio
{
  id location = 0;
  objc_initWeak(&location, self);
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __44__CKChatController_setupStateForLaunchAudio__block_invoke;
  v3[3] = &unk_1E56215C8;
  objc_copyWeak(&v4, &location);
  [(CKChatController *)self setDeferredPresentationBlock:v3];
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void __44__CKChatController_setupStateForLaunchAudio__block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained inputController];
  int v2 = [v1 entryView];
  [v2 startRecordingForAudioButtonInEntryView];
}

- (CKComposition)composition
{
  id v3 = [(CKChatController *)self entryView];
  id v4 = v3;
  if (v3) {
    [v3 composition];
  }
  else {
  double v5 = [(CKChatController *)self initialComposition];
  }

  return (CKComposition *)v5;
}

- (void)setComposition:(id)a3
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  [(CKChatController *)self setCollaborationFailureCount:0];
  if ([(CKCoreChatController *)self initialLayoutComplete])
  {
    double v5 = [(CKChatController *)self entryView];

    if (!v5)
    {
      if (IMOSLoggingEnabled())
      {
        id v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          LOWORD(v11) = 0;
          _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "entry view is nil", (uint8_t *)&v11, 2u);
        }
      }
      if (IMOSLoggingEnabled())
      {
        id v7 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          int v11 = 136315138;
          id v12 = "-[CKChatController setComposition:]";
          _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "reloadEntryViewIfNeeded called from %s", (uint8_t *)&v11, 0xCu);
        }
      }
      [(CKChatController *)self reloadEntryViewIfNeeded];
    }
  }
  int v8 = [(CKChatController *)self entryView];
  id v9 = v8;
  if (v8)
  {
    [v8 setComposition:v4];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LOWORD(v11) = 0;
        _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "entry view is nil, set initial composition", (uint8_t *)&v11, 2u);
      }
    }
    [(CKChatController *)self setInitialComposition:v4];
  }
}

- (void)makeEntryViewActiveAfterSend
{
}

- (void)showKeyboard
{
  [(CKChatController *)self setTargetFirstResponder:1];

  [(CKChatController *)self becomeFirstResponder];
}

- (BOOL)showKeyboardForReply
{
  id v3 = [(CKChatController *)self entryView];
  id v4 = [v3 contentView];
  char v5 = [v4 isActive];

  if ((v5 & 1) == 0)
  {
    [(CKChatController *)self setTargetFirstResponder:1];
    [(CKChatController *)self becomeFirstResponder];
  }
  return v5 ^ 1;
}

- (void)dismissKeyboard
{
  if ([(CKChatController *)self isKeyboardSnapshotted]) {
    [(CKChatController *)self animatedDismissalOfKeyboardSnapshot];
  }
  v3.receiver = self;
  v3.super_class = (Class)CKChatController;
  [(CKChatController *)&v3 becomeFirstResponder];
}

- (void)scrollToMessage:(id)a3 highlight:(BOOL)a4
{
}

- (void)scrollToMessageGUID:(id)a3 partIndex:(int64_t)a4 highlight:(BOOL)a5
{
  LOBYTE(v5) = 0;
  [(CKChatController *)self scrollToMessageGUID:a3 atSpecificMessagePartIndex:a4 highlight:a5 autoDismissHighlight:1 withInlineReplyOverlay:0 alignedWithView:0 allowOverScroll:v5 scrollPosition:2];
}

- (void)scrollToMessageGUID:(id)a3 partIndex:(int64_t)a4 highlight:(BOOL)a5 autoDismissHighlight:(BOOL)a6
{
  LOBYTE(v6) = 0;
  [(CKChatController *)self scrollToMessageGUID:a3 atSpecificMessagePartIndex:a4 highlight:a5 autoDismissHighlight:a6 withInlineReplyOverlay:0 alignedWithView:0 allowOverScroll:v6 scrollPosition:2];
}

- (void)scrollToMessageGUID:(id)a3 partIndex:(int64_t)a4 highlight:(BOOL)a5 scrollPosition:(unint64_t)a6
{
  LOBYTE(v6) = 0;
  [(CKChatController *)self scrollToMessageGUID:a3 atSpecificMessagePartIndex:a4 highlight:a5 autoDismissHighlight:1 withInlineReplyOverlay:0 alignedWithView:0 allowOverScroll:v6 scrollPosition:a6];
}

- (void)scrollToMessage:(id)a3 highlight:(BOOL)a4 withInlineReplyOverlay:(BOOL)a5
{
}

- (void)scrollToMessage:(id)a3 atSpecificMessagePartIndex:(int64_t)a4 highlight:(BOOL)a5 withInlineReplyOverlay:(BOOL)a6
{
}

- (void)scrollToMessage:(id)a3 atSpecificMessagePartIndex:(int64_t)a4 highlight:(BOOL)a5 withInlineReplyOverlay:(BOOL)a6 alignedWithView:(id)a7 allowOverScroll:(BOOL)a8
{
  BOOL v9 = a6;
  BOOL v10 = a5;
  id v14 = a7;
  id v16 = [a3 guid];
  LOBYTE(v15) = a8;
  [(CKChatController *)self scrollToMessageGUID:v16 atSpecificMessagePartIndex:a4 highlight:v10 autoDismissHighlight:1 withInlineReplyOverlay:v9 alignedWithView:v14 allowOverScroll:v15 scrollPosition:2];
}

- (void)scrollToMessageGUID:(id)a3 atSpecificMessagePartIndex:(int64_t)a4 highlight:(BOOL)a5 autoDismissHighlight:(BOOL)a6 withInlineReplyOverlay:(BOOL)a7 alignedWithView:(id)a8 allowOverScroll:(BOOL)a9 scrollPosition:(unint64_t)a10
{
  BOOL v10 = a7;
  BOOL v11 = a6;
  BOOL v12 = a5;
  id v16 = a8;
  id v17 = a3;
  id v18 = (id)objc_opt_new();
  [v18 setMessageGUID:v17];

  [v18 setHighlight:v12];
  [v18 setPartIndex:a4];
  [v18 setAutoDismissHightlight:v11];
  [v18 setInlineReplyOverlay:v10];
  [v18 setViewToAlignWith:v16];

  [v18 setAllowOverScroll:a9];
  [v18 setScrollPosition:a10];
  [(CKChatController *)self transcriptScrollWithConfiguration:v18];
}

- (void)transcriptScrollWithConfiguration:(id)a3
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 138412290;
      *(void *)&uint8_t buf[4] = v4;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Requested scroll with configuration: %@", buf, 0xCu);
    }
  }
  uint64_t v6 = [v4 messageGUID];
  id v7 = (void *)[v4 partIndex];
  char v18 = [v4 highlight];
  char v17 = [v4 autoDismissHightlight];
  char v16 = [v4 inlineReplyOverlay];
  int v8 = [v4 viewToAlignWith];
  char v9 = [v4 allowOverScroll];
  BOOL v10 = (void *)[v4 scrollPosition];
  char v11 = [v4 animated];
  char v12 = [v4 emphasize];
  *(void *)CGAffineTransform buf = 0;
  objc_initWeak((id *)buf, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __54__CKChatController_transcriptScrollWithConfiguration___block_invoke;
  aBlock[3] = &unk_1E56227A0;
  objc_copyWeak(v23, (id *)buf);
  id v13 = v6;
  id v20 = v13;
  v23[1] = v7;
  id v14 = v8;
  char v24 = v9;
  v23[2] = v10;
  char v25 = v11;
  char v26 = v18;
  char v27 = v17;
  char v28 = v12;
  char v29 = v16;
  id v21 = v14;
  double v22 = self;
  uint64_t v15 = (void (**)(void))_Block_copy(aBlock);
  if ([(CKCoreChatController *)self initialLayoutComplete]) {
    v15[2](v15);
  }
  else {
    [(CKChatController *)self setScrollBlock:v15];
  }

  objc_destroyWeak(v23);
  objc_destroyWeak((id *)buf);
}

void __54__CKChatController_transcriptScrollWithConfiguration___block_invoke(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_super v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained collectionViewController];
    uint64_t v5 = [v4 collectionView];
    [v5 setTranscriptScrollIntent:2];
    uint64_t v6 = [[CKTranscriptHighlightedMessageScrollContext alloc] initWithMessageGUID:*(void *)(a1 + 32) messagePartIndex:*(void *)(a1 + 64) viewToAlignWith:*(void *)(a1 + 40) allowOverScroll:*(unsigned __int8 *)(a1 + 80) scrollPosition:*(void *)(a1 + 72)];
    [v5 setHighlightedMessageScrollContext:v6];

    id v7 = [v3 indexPathForMessageGUID:*(void *)(a1 + 32) messagePartIndex:*(void *)(a1 + 64)];
    if (v7)
    {
      if (IMOSLoggingEnabled())
      {
        int v8 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          uint64_t v9 = *(void *)(a1 + 32);
          int v16 = 138412546;
          uint64_t v17 = v9;
          __int16 v18 = 2112;
          int v19 = v7;
          _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Will scroll to messageGUID: %@, indexPath: %@", (uint8_t *)&v16, 0x16u);
        }
      }
      [v3 contentOffsetForIndexPath:v7 viewToAlignWith:*(void *)(a1 + 40) allowOverScroll:*(unsigned __int8 *)(a1 + 80) scrollPosition:*(void *)(a1 + 72)];
      double v11 = v10;
      double v13 = v12;
      [v5 beginDisablingTranscriptDynamicsForReason:@"ScrollToMessage"];
      objc_msgSend(v5, "setContentOffset:animated:", *(unsigned __int8 *)(a1 + 81), v11, v13);
      [v5 endDisablingTranscriptDynamicsForReason:@"ScrollToMessage"];
      if (*(unsigned char *)(a1 + 82))
      {
        [v4 highlightItemAtIndexPathWhenDisplayed:v7 autoDismiss:*(unsigned __int8 *)(a1 + 83)];
      }
      else if (*(unsigned char *)(a1 + 84))
      {
        [v4 beginEmphasisWithMessageGUID:*(void *)(a1 + 32)];
      }
      if (!*(unsigned char *)(a1 + 85)) {
        goto LABEL_16;
      }
      id v14 = [v4 chatItems];
      uint64_t v15 = +[CKSocialLayerChatController chatItemForMessageGUID:*(void *)(a1 + 32) messagePartIndex:*(void *)(a1 + 64) chatItems:v14];
      [*(id *)(a1 + 48) showInlineReplyControllerForChatItem:v15 presentKeyboard:1];
    }
    else
    {
      id v14 = IMLogHandleForCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        __54__CKChatController_transcriptScrollWithConfiguration___block_invoke_cold_1();
      }
    }

LABEL_16:
  }
}

- (void)dismissInlineReplyIfNeededAndScrollToBottom
{
  objc_super v3 = [(CKChatController *)self inlineReplyController];

  if (v3)
  {
    id v4 = [(CKChatController *)self inlineReplyController];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __63__CKChatController_dismissInlineReplyIfNeededAndScrollToBottom__block_invoke;
    v6[3] = &unk_1E5620BF0;
    v6[4] = self;
    [v4 dismissControllerWithCompletion:v6];
  }
  else
  {
    id v5 = [(CKCoreChatController *)self collectionViewController];
    [v5 scrollTranscriptToEntryViewInsertionTimeWithAnimation:1];
  }
}

void __63__CKChatController_dismissInlineReplyIfNeededAndScrollToBottom__block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) collectionViewController];
  [v1 scrollTranscriptToEntryViewInsertionTimeWithAnimation:1];
}

- (void)primeTranscriptWithInitialOffset:(CGPoint)a3 inset:(UIEdgeInsets)a4
{
  double right = a4.right;
  double bottom = a4.bottom;
  double left = a4.left;
  double top = a4.top;
  double y = a3.y;
  double x = a3.x;
  [(CKChatController *)self setPrimeTranscriptWithInitialScrollGeometries:1];
  -[CKChatController setInitialContentOffset:](self, "setInitialContentOffset:", x, y);

  -[CKChatController setInitialContentInset:](self, "setInitialContentInset:", top, left, bottom, right);
}

- (id)nextMediaObjectToTrimInComposition:(id)a3
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (CKIsRunningInMacCatalyst())
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Do not offer to trim - this is running on Mac.", buf, 2u);
      }
    }
    id v6 = 0;
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v7 = [v4 mediaObjects];
    uint64_t v8 = [v7 countByEnumeratingWithState:&v25 objects:v31 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v26;
      while (2)
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v26 != v9) {
            objc_enumerationMutation(v7);
          }
          double v11 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          if ([(CKChatController *)self _mediaObjectNeedsTrimming:v11])
          {
            id v6 = v11;
            goto LABEL_17;
          }
        }
        uint64_t v8 = [v7 countByEnumeratingWithState:&v25 objects:v31 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }
    id v6 = 0;
LABEL_17:

    uint64_t v12 = [v4 shelfPluginPayload];
    double v13 = (void *)v12;
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = v12 == 0;
    }
    if (!v14)
    {
      long long v23 = 0u;
      long long v24 = 0u;
      long long v21 = 0u;
      long long v22 = 0u;
      uint64_t v15 = [(CKChatController *)self fileURLKeyToGuidMapping];
      int v16 = objc_msgSend(v13, "__ck_photoCompositionMediaObjectsWithKeyToTrasferGUIDMap:", v15);

      id v6 = (id)[v16 countByEnumeratingWithState:&v21 objects:v30 count:16];
      if (v6)
      {
        uint64_t v17 = *(void *)v22;
        while (2)
        {
          for (j = 0; j != v6; j = (char *)j + 1)
          {
            if (*(void *)v22 != v17) {
              objc_enumerationMutation(v16);
            }
            int v19 = *(void **)(*((void *)&v21 + 1) + 8 * (void)j);
            if ([(CKChatController *)self _mediaObjectNeedsTrimming:v19])
            {
              id v6 = v19;
              goto LABEL_31;
            }
          }
          id v6 = (id)[v16 countByEnumeratingWithState:&v21 objects:v30 count:16];
          if (v6) {
            continue;
          }
          break;
        }
      }
LABEL_31:
    }
  }

  return v6;
}

- (void)_updateRecipientCapabilities
{
  [MEMORY[0x1E4FBA8A8] cancelPreviousPerformRequestsWithTarget:self selector:sel__fetchRecipientCapabilitiesDeferred object:0];

  [(CKChatController *)self performSelector:sel__fetchRecipientCapabilitiesDeferred withObject:0 afterDelay:0.0];
}

- (void)_fetchRecipientCapabilitiesDeferred
{
  v10[1] = *MEMORY[0x1E4F143B8];
  objc_super v3 = [MEMORY[0x1E4F6BC98] sharedInstance];
  uint64_t v9 = *MEMORY[0x1E4F6B280];
  id v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v9 count:1];
  v10[0] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  id v6 = [(CKCoreChatController *)self chat];
  id v7 = [v6 guid];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __55__CKChatController__fetchRecipientCapabilitiesDeferred__block_invoke;
  v8[3] = &unk_1E56227C8;
  void v8[4] = self;
  [v3 fetchCommonCapabilities:v5 fromChatWithGUID:v7 reply:v8];
}

void __55__CKChatController__fetchRecipientCapabilitiesDeferred__block_invoke(uint64_t a1, int a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = @"NO";
      if (a2) {
        id v7 = @"YES";
      }
      int v9 = 138412546;
      double v10 = v7;
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Got response on capabilities: %@ %@", (uint8_t *)&v9, 0x16u);
    }
  }
  uint64_t v8 = [v5 objectForKeyedSubscript:*MEMORY[0x1E4F6B280]];
  objc_msgSend(*(id *)(a1 + 32), "setRecipientsAreHEIFCapable:", objc_msgSend(v8, "BOOLValue"));
}

- (unint64_t)_maxAllowedSVSize
{
  return 104857600;
}

- (BOOL)_mediaObjectHasTrimMetadata:(id)a3
{
  objc_super v3 = [a3 transcoderUserInfo];
  id v4 = [v3 objectForKey:*MEMORY[0x1E4F6D3B8]];
  id v5 = [v3 objectForKey:*MEMORY[0x1E4F6D388]];
  id v6 = [v3 objectForKey:*MEMORY[0x1E4F6D380]];
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  BOOL v9 = !v7 && v6 != 0;

  return v9;
}

- (BOOL)_mediaObjectNeedsTrimming:(id)a3
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v4 = (__CFString *)a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_16;
  }
  id v5 = [(__CFString *)v4 fileURL];
  int v6 = IMIsAAVideoURL();

  if (v6)
  {
    if (![(CKChatController *)self recipientsAreHEIFCapable])
    {
      if (IMOSLoggingEnabled())
      {
        BOOL v7 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Not all recipients are HEIF capable, transcoding new media video", buf, 2u);
        }
        goto LABEL_15;
      }
LABEL_16:
      BOOL v13 = 0;
      goto LABEL_17;
    }
    if ([(CKChatController *)self _mediaObjectHasTrimMetadata:v4])
    {
      if (IMOSLoggingEnabled())
      {
        BOOL v7 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)CGAffineTransform buf = 138412290;
          char v29 = v4;
          _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Skipping already trimmed object, %@", buf, 0xCu);
        }
LABEL_15:

        goto LABEL_16;
      }
      goto LABEL_16;
    }
    uint64_t v15 = [MEMORY[0x1E4F28CB8] defaultManager];
    int v16 = [(__CFString *)v4 fileURL];
    uint64_t v17 = [v16 path];
    id v27 = 0;
    __int16 v18 = [v15 attributesOfItemAtPath:v17 error:&v27];
    id v19 = v27;

    if (v19)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v20 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          long long v21 = [(__CFString *)v4 fileURL];
          *(_DWORD *)CGAffineTransform buf = 138412546;
          char v29 = v21;
          __int16 v30 = 2112;
          unint64_t v31 = (unint64_t)v19;
          _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "Failed to find new media at %@ to check size, error %@", buf, 0x16u);
        }
      }
      BOOL v13 = 0;
    }
    else
    {
      unint64_t v22 = [v18 fileSize];
      unint64_t v23 = [(CKChatController *)self _maxAllowedSVSize];
      BOOL v13 = v22 > v23;
      if (IMOSLoggingEnabled())
      {
        long long v24 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
        {
          unint64_t v25 = [(CKChatController *)self _maxAllowedSVSize];
          long long v26 = @"NO";
          *(_DWORD *)CGAffineTransform buf = 138412802;
          if (v22 > v23) {
            long long v26 = @"YES";
          }
          char v29 = v26;
          __int16 v30 = 2048;
          unint64_t v31 = v22;
          __int16 v32 = 2048;
          unint64_t v33 = v25;
          _os_log_impl(&dword_18EF18000, v24, OS_LOG_TYPE_INFO, "Outgoing new media needs trim? %@ size: %lu limit %lu", buf, 0x20u);
        }
      }
    }
  }
  else
  {
    if (CKIsRunningInMacCatalyst()) {
      goto LABEL_16;
    }
    [(__CFString *)v4 duration];
    double v9 = v8;
    double v10 = [(CKCoreChatController *)self conversation];
    [v10 maxTrimDurationForMedia:v4];
    double v12 = v11;

    if (v9 <= v12) {
      goto LABEL_16;
    }
    BOOL v13 = 1;
  }
LABEL_17:

  return v13;
}

- (void)startTrimmingMediaObjectsInComposition:(id)a3
{
  id v5 = a3;
  id v4 = -[CKChatController nextMediaObjectToTrimInComposition:](self, "nextMediaObjectToTrimInComposition:");
  if (v4)
  {
    [(CKChatController *)self setCompositionBeingTrimmed:v5];
    [(CKChatController *)self presentTrimControllerForMediaObject:v4];
  }
  else
  {
    [(CKChatController *)self setCompositionBeingTrimmed:0];
  }
}

- (void)presentTrimControllerForMediaObject:(id)a3
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = [v4 mediaType];
  int v6 = [(CKCoreChatController *)self conversation];
  [v6 maxTrimDurationForMedia:v4];
  double v8 = v7;

  if (v5 != 1)
  {
    if (v5 == 2)
    {
      uint64_t v16 = MEMORY[0x1E4F143A8];
      uint64_t v17 = 3221225472;
      __int16 v18 = __56__CKChatController_presentTrimControllerForMediaObject___block_invoke;
      id v19 = &unk_1E56227F0;
      uint64_t v20 = self;
      id v9 = v4;
      id v21 = v9;
      double v10 = (void (**)(void, double))_Block_copy(&v16);
      double v11 = objc_msgSend(v9, "fileURL", v16, v17, v18, v19, v20);
      int v12 = IMIsAAVideoURL();

      if (v12)
      {
        BOOL v13 = [v9 fileURL];
        BOOL v14 = CKAVURLAssetForURLWithWriteAccess(v13);

        [(CKChatController *)self _maxAllowedSVSize];
        IMEstimateDurationForSize();
      }
      else
      {
        v10[2](v10, v8 * 0.95);
      }
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CGAffineTransform buf = 138412290;
        id v23 = v4;
        _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "I don't know how to trim this media object [%@]", buf, 0xCu);
      }
    }
  }
}

void __56__CKChatController_presentTrimControllerForMediaObject___block_invoke(uint64_t a1, double a2)
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __56__CKChatController_presentTrimControllerForMediaObject___block_invoke_2;
  block[3] = &unk_1E5620E38;
  objc_super v3 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v5 = v3;
  double v6 = a2;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void __56__CKChatController_presentTrimControllerForMediaObject___block_invoke_2(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(void *)(v2 + 1816))
  {
    objc_super v3 = [[CKVideoTrimController alloc] initWithMediaObject:*(void *)(a1 + 40) maxTrimDuration:*(double *)(a1 + 48)];
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 1816);
    *(void *)(v4 + 1816) = v3;

    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 1816), "setDelegate:");
    uint64_t v2 = *(void *)(a1 + 32);
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __56__CKChatController_presentTrimControllerForMediaObject___block_invoke_3;
  aBlock[3] = &unk_1E5621578;
  void aBlock[4] = v2;
  double v6 = _Block_copy(aBlock);
  double v7 = [*(id *)(a1 + 32) view];
  double v8 = [v7 window];
  id v9 = [v8 windowScene];
  if ((unint64_t)([v9 interfaceOrientation] - 3) >= 2) {
    uint64_t v10 = 3;
  }
  else {
    uint64_t v10 = 4;
  }

  double v11 = [*(id *)(*(void *)(a1 + 32) + 1816) editVideoVC];
  int v12 = [v11 popoverPresentationController];
  [v12 setPermittedArrowDirections:v10];

  BOOL v13 = +[CKAdaptivePresentationController sharedInstance];
  BOOL v14 = [*(id *)(*(void *)(a1 + 32) + 1816) editVideoVC];
  [v13 presentViewController:v14 fromViewController:*(void *)(a1 + 32) presentationHandler:v6 dismissalHandler:0 animated:1 completion:0];
}

void __56__CKChatController_presentTrimControllerForMediaObject___block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v5 = [*(id *)(a1 + 32) entryView];
  double v6 = [v5 photoButton];
  [v6 frame];
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = v10;

  id v11 = v5;
  *a3 = v11;
}

- (void)trimControllerDidCancel:(id)a3
{
  uint64_t v4 = (CKVideoTrimController *)a3;
  [(CKChatController *)self setCompositionBeingTrimmed:0];
  p_audioTrimController = &self->_audioTrimController;
  if ((CKVideoTrimController *)self->_audioTrimController == v4
    || (p_audioTrimController = &self->_videoTrimController, self->_videoTrimController == v4))
  {
    void *p_audioTrimController = 0;
  }
  double v6 = +[CKAdaptivePresentationController sharedInstance];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __44__CKChatController_trimControllerDidCancel___block_invoke;
  _OWORD v7[3] = &unk_1E5620C40;
  v7[4] = self;
  [v6 dismissViewControllerAnimated:1 completion:v7];
}

uint64_t __44__CKChatController_trimControllerDidCancel___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) reloadInputViews];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 becomeFirstResponder];
}

- (void)trimController:(id)a3 didFinishTrimmingMediaObject:(id)a4 withReplacementMediaObject:(id)a5
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = (CKVideoTrimController *)a3;
  id v9 = a4;
  id v10 = a5;
  p_audioTrimController = &self->_audioTrimController;
  if ((CKVideoTrimController *)self->_audioTrimController == v8
    || (p_audioTrimController = &self->_videoTrimController, self->_videoTrimController == v8))
  {
    void *p_audioTrimController = 0;
  }
  if (v9 && v10)
  {
    int v12 = [(CKChatController *)self compositionBeingTrimmed];
    BOOL v13 = [v12 compositionByReplacingMediaObject:v9 withMediaObject:v10];

    BOOL v14 = [(CKChatController *)self composition];
    uint64_t v15 = [(CKChatController *)self compositionBeingTrimmed];
    int v16 = [v14 isEqual:v15];

    if (v16) {
      [(CKChatController *)self setComposition:v13];
    }
    [(CKChatController *)self setCompositionBeingTrimmed:v13];
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 138412546;
      id v21 = v9;
      __int16 v22 = 2112;
      id v23 = v10;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Not replacing [%@] with [%@]", buf, 0x16u);
    }
  }
  __int16 v18 = +[CKAdaptivePresentationController sharedInstance];
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __91__CKChatController_trimController_didFinishTrimmingMediaObject_withReplacementMediaObject___block_invoke;
  v19[3] = &unk_1E5620C40;
  void v19[4] = self;
  [v18 dismissViewControllerAnimated:1 completion:v19];
}

void __91__CKChatController_trimController_didFinishTrimmingMediaObject_withReplacementMediaObject___block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  objc_super v3 = [v2 compositionBeingTrimmed];
  uint64_t v4 = [v2 nextMediaObjectToTrimInComposition:v3];

  if (v4)
  {
    [*(id *)(a1 + 32) presentTrimControllerForMediaObject:v4];
  }
  else
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __91__CKChatController_trimController_didFinishTrimmingMediaObject_withReplacementMediaObject___block_invoke_2;
    aBlock[3] = &unk_1E5622818;
    void aBlock[4] = *(void *)(a1 + 32);
    id v5 = _Block_copy(aBlock);
    double v6 = [*(id *)(a1 + 32) compositionBeingTrimmed];
    uint64_t v7 = [*(id *)(a1 + 32) composition];
    if (v6 == v7)
    {
      uint64_t v8 = [*(id *)(a1 + 32) entryView];
      v9[0] = MEMORY[0x1E4F143A8];
      v9[1] = 3221225472;
      v9[2] = __91__CKChatController_trimController_didFinishTrimmingMediaObject_withReplacementMediaObject___block_invoke_3;
      _OWORD v9[3] = &unk_1E5622840;
      id v10 = v5;
      [v8 compositionWithAcceptedAutocorrection:v9];
    }
    else
    {
      (*((void (**)(void *, void *))v5 + 2))(v5, v6);
    }
  }
}

uint64_t __91__CKChatController_trimController_didFinishTrimmingMediaObject_withReplacementMediaObject___block_invoke_2(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) sendComposition:a2];
  [*(id *)(a1 + 32) setCompositionBeingTrimmed:0];
  [*(id *)(a1 + 32) reloadInputViews];
  objc_super v3 = *(void **)(a1 + 32);

  return [v3 becomeFirstResponder];
}

uint64_t __91__CKChatController_trimController_didFinishTrimmingMediaObject_withReplacementMediaObject___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (double)balloonMaxWidth
{
  [(CKCoreChatController *)self calculateTranscriptSafeAreaInsets];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  [(CKCoreChatController *)self calculateTranscriptMarginInsets];
  double v12 = v4 + v11;
  double v14 = v6 + v13;
  double v16 = v8 + v15;
  double v18 = v10 + v17;
  id v19 = [(CKChatController *)self view];
  [v19 bounds];
  double v21 = v20;

  __int16 v22 = [(CKCoreChatController *)self chat];
  int v23 = [v22 isStewieChat];

  uint64_t v24 = [(CKCoreChatController *)self conversation];
  unint64_t v25 = [v24 sendingService];
  uint64_t v26 = v23 | objc_msgSend(v25, "__ck_isiMessageLite");

  id v27 = +[CKUIBehavior sharedBehaviors];
  objc_msgSend(v27, "balloonMaxWidthForTranscriptWidth:marginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:isStewieMode:", -[CKChatController pluginButtonsEnabled](self, "pluginButtonsEnabled"), CKShowCharacterCountEnabled(v26) != 0, 0, v26, v21, v12, v14, v16, v18);
  double v29 = v28;

  return v29;
}

- (double)gradientBottomPlaceholderHeight
{
  uint64_t v2 = [(CKChatController *)self entryView];
  [v2 placeholderHeight];
  double v4 = v3;

  return v4;
}

- (id)outgoingComposeViewForSendAnimation
{
  return 0;
}

- (void)_setConversationDeferredSetup
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  v38.receiver = self;
  v38.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v38 _setConversationDeferredSetup];
  if (IMOSLoggingEnabled())
  {
    double v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 136315138;
      double v40 = "-[CKChatController _setConversationDeferredSetup]";
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "reloadEntryViewIfNeeded called from %s", buf, 0xCu);
    }
  }
  [(CKChatController *)self reloadEntryViewIfNeeded];
  [(CKChatController *)self cleanUpDarkEffectStyle];
  if (CKIsRunningInMacCatalyst())
  {
    if ([(CKChatController *)self shouldUseMacRecipientsView])
    {
      macRecipientsController = self->_macRecipientsController;
      if (macRecipientsController)
      {
        double v5 = [(CKCoreChatController *)self conversation];
        [(CKMacRecipientsController *)macRecipientsController setConversation:v5];

        double v6 = [(CKMacRecipientsController *)self->_macRecipientsController view];
        double v7 = [(CKChatController *)self view];
        [v7 bounds];
        objc_msgSend(v6, "setFrame:");
      }
    }
    double v8 = +[CKUIBehavior sharedBehaviors];
    int v9 = [v8 useMacToolbar];

    if (v9)
    {
      double v10 = [(CKChatController *)self macToolbarController];
      [v10 updateVirtualViewForProvider:self];
    }
  }
  double v11 = [(CKCoreChatController *)self collectionViewController];
  double v12 = [v11 collectionView];

  if ([(CKChatController *)self primeTranscriptWithInitialScrollGeometries])
  {
    [v12 layoutIfNeeded];
    [(CKChatController *)self setPrimeTranscriptWithInitialScrollGeometries:0];
    double v13 = [(CKCoreChatController *)self collectionViewController];
    [v13 sizeFullTranscriptIfNecessary];

    [v12 beginDisablingTranscriptDynamicsForReason:@"ProgramaticScroll"];
    [(CKChatController *)self initialContentOffset];
    objc_msgSend(v12, "setContentOffset:");
    [(CKChatController *)self initialContentInset];
    objc_msgSend(v12, "setContentInset:");
    [v12 endDisablingTranscriptDynamicsForReason:@"ProgramaticScroll"];
  }
  double v14 = [(CKChatController *)self tapGestureRecognizer];
  if (!v14) {
    goto LABEL_15;
  }
  double v15 = [(CKChatController *)self tapGestureRecognizer];
  double v16 = [v15 view];
  BOOL v17 = v16 == v12;

  if (!v17)
  {
LABEL_15:
    double v18 = [(CKChatController *)self tapGestureRecognizer];

    if (v18)
    {
      id v19 = [(CKChatController *)self tapGestureRecognizer];
      double v20 = [v19 view];
      double v21 = [(CKChatController *)self tapGestureRecognizer];
      [v20 removeGestureRecognizer:v21];
    }
    __int16 v22 = (void *)[objc_alloc(MEMORY[0x1E4F42EC8]) initWithTarget:self action:sel_tapGestureRecognized_];
    [v22 setDelegate:self];
    [v12 addGestureRecognizer:v22];
    [(CKChatController *)self setTapGestureRecognizer:v22];
  }
  if (+[CKRaiseGesture isRaiseGestureSupported])
  {
    int v23 = [(CKChatController *)self raiseGesture];
    BOOL v24 = v23 == 0;

    if (v24)
    {
      unint64_t v25 = [[CKRaiseGesture alloc] initWithTarget:self action:sel_raiseGestureRecognized_];
      [(CKChatController *)self setRaiseGesture:v25];
    }
    [(CKChatController *)self updateRaiseGesture];
  }
  uint64_t v26 = [(CKChatController *)self view];
  id v27 = [v26 window];
  char v28 = [v27 isKeyWindow];

  if ((v28 & 1) == 0)
  {
    if (IMOSLoggingEnabled())
    {
      double v29 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        __int16 v30 = [MEMORY[0x1E4F43058] keyWindow];
        *(_DWORD *)CGAffineTransform buf = 138412290;
        double v40 = v30;
        _os_log_impl(&dword_18EF18000, v29, OS_LOG_TYPE_INFO, "CKChatController's window is not key, making it key again. Current key is %@", buf, 0xCu);
      }
    }
    unint64_t v31 = [(CKChatController *)self view];
    __int16 v32 = [v31 window];
    [v32 makeKeyWindow];
  }
  unint64_t v33 = [(CKChatController *)self nicknameBanner];

  if (v33)
  {
    uint64_t v34 = [(CKChatController *)self view];
    uint64_t v35 = [(CKChatController *)self nicknameBanner];
    [v34 bringSubviewToFront:v35];
  }
  id v36 = [(CKChatController *)self navbarCanvasViewController];
  char v37 = [(CKCoreChatController *)self conversation];
  [v36 updateContentsForConversation:v37];

  [(CKChatController *)self updateSendMenuShouldElevateCheckIn];
}

- (void)_invalidateChatItemLayoutIfNecessary:(CGSize)a3
{
  BOOL v4 = +[CKApplicationState isResizing];
  id v25 = [(CKCoreChatController *)self collectionViewController];
  if (v25)
  {
    if (!v4)
    {
      [(CKCoreChatController *)self calculateTranscriptMarginInsets];
      double v6 = v5;
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      [v25 marginInsets];
      double v14 = v13;
      double v16 = v15;
      double v24 = v17;
      double v19 = v18;
      [(CKChatController *)self balloonMaxWidth];
      double v21 = v20;
      [v25 balloonMaxWidth];
      if (v8 != v16 || v6 != v14 || v12 != v19 || v10 != v24 || vabdd_f64(v21, v22) > 0.001)
      {
        int v23 = [(CKChatController *)self traitCollection];
        objc_msgSend(v25, "invalidateChatItemLayoutWithNewBalloonMaxWidth:marginInsets:traitCollection:", v23, v21, v6, v8, v10, v12);
      }
    }
  }
}

- (CGRect)effectiveVisibleRectOfCollectionViewForTranscriptCollectionViewController:(id)a3
{
  BOOL v4 = [(CKChatController *)self collectionView];
  [v4 bounds];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  [v4 adjustedContentInset];
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  [(CKChatController *)self _currentlyVisibleBannerHeight];
  double v22 = v14 + v21;
  double v23 = v8 + v22;
  double v24 = v12 - (v18 + v22);

  double v25 = v6 + v16;
  double v26 = v23;
  double v27 = v10 - (v16 + v20);
  double v28 = v24;
  result.size.double height = v28;
  result.size.double width = v27;
  result.origin.double y = v26;
  result.origin.double x = v25;
  return result;
}

- (id)firstUnreadMessageItemGUIDForTranscriptCollectionViewController:(id)a3
{
  BOOL v4 = [(CKChatController *)self firstUnreadMessageGUIDForTextEffects];

  if (v4)
  {
    double v5 = [(CKChatController *)self firstUnreadMessageGUIDForTextEffects];
  }
  else
  {
    double v6 = [(CKCoreChatController *)self chat];
    double v7 = [v6 firstUnreadMessageItem];

    double v8 = [v7 guid];
    [(CKChatController *)self setFirstUnreadMessageGUIDForTextEffects:v8];

    double v5 = [(CKChatController *)self firstUnreadMessageGUIDForTextEffects];
  }

  return v5;
}

- (void)transcriptCollectionViewControllerNeedsChatItemLayoutInvalidation:(id)a3
{
  id v4 = a3;
  [(CKChatController *)self balloonMaxWidth];
  double v6 = v5;
  id v16 = [(CKCoreChatController *)self collectionViewController];
  [v16 marginInsets];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v15 = [(CKChatController *)self traitCollection];
  objc_msgSend(v4, "invalidateChatItemLayoutWithNewBalloonMaxWidth:marginInsets:traitCollection:", v15, v6, v8, v10, v12, v14);
}

- (void)transcriptCollectionViewController:(id)a3 didInsertChatItems:(id)a4 associatedChatItems:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  v12.receiver = self;
  v12.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v12 transcriptCollectionViewController:a3 didInsertChatItems:v8 associatedChatItems:v9];
  double v10 = [(CKChatController *)self insertItemsCallback];

  if (v10)
  {
    double v11 = [(CKChatController *)self insertItemsCallback];
    ((void (**)(void, id, id))v11)[2](v11, v8, v9);

    [(CKChatController *)self setInsertItemsCallback:0];
  }
}

- (void)transcriptCollectionViewController:(id)a3 didTapAttributionButtonForChatItem:(id)a4 parentIndexPath:(id)a5 sender:(id)a6
{
  id v16 = a3;
  id v10 = a5;
  id v11 = a6;
  objc_super v12 = [a4 IMChatItem];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v13 = v12;
    if ([v13 attributionType] == 6 && !CKIsRunningInMacCatalyst())
    {
      [(CKChatController *)self _presentSentWithSiriUI];
    }
    else if ([v13 isCommSafetySensitiveAttribution])
    {
      [v16 didTapCommSafetyAttributionItemWithIndexPath:v10 sender:v11];
    }
    else
    {
      double v14 = [v13 attributionInfo];
      double v15 = [v14 objectForKey:*MEMORY[0x1E4F6D3C8]];
      if (v15) {
        -[CKChatController _presentBrowserOrAppStoreForAdamID:url:identifier:isForSticker:](self, "_presentBrowserOrAppStoreForAdamID:url:identifier:isForSticker:", v15, 0, 0, [v13 attributionType] == 3);
      }
    }
  }
}

- (int64_t)transcriptCollectionViewControllerWantsCurrentDesiredIntent:(id)a3
{
  double v3 = [(CKChatController *)self entryView];
  id v4 = [v3 sendLaterPluginInfo];

  if (v4) {
    return 6;
  }
  else {
    return 0;
  }
}

- (void)transcriptCollectionViewController:(id)a3 didTapPluginStatusButtonForChatItem:(id)a4
{
  objc_msgSend(a4, "IMChatItem", a3);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [v5 dataSource];
    [v4 didTapStatusItem];
  }
}

- (void)transcriptCollectionViewController:(id)a3 didTapReplyCountStatusButtonForChatItem:(id)a4
{
  id v6 = a4;
  double v7 = [a3 chatItems];
  id v9 = [(CKCoreChatController *)self _threadChatItemForReplyCountChatItem:v6 chatItems:v7];

  id v8 = v9;
  if (v9)
  {
    [(CKChatController *)self showInlineReplyControllerForChatItem:v9 presentKeyboard:0];
    id v8 = v9;
  }
}

- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 tappedForChatItem:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(CKChatController *)self isFullScreenBalloonViewOnScreen]) {
    goto LABEL_40;
  }
  if (CKIsRunningInMacCatalyst())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v11 = [v9 stackView];
        objc_super v12 = [(CKTranscriptPluginPresentationConfiguration *)v11 currentAssetReference];
        [(CKChatController *)self _presentViewerForChatItem:v10 assetReference:v12];
LABEL_18:

LABEL_19:
        goto LABEL_40;
      }
    }
  }
  if ([v10 itemIsReplyContextPreview]
    && ([(CKChatController *)self isEditing] & 1) == 0)
  {
LABEL_39:
    [(CKChatController *)self showInlineReplyControllerForChatItem:v10 presentKeyboard:0];
    goto LABEL_40;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = [v10 mediaObject];
    objc_super v12 = [(CKTranscriptPluginPresentationConfiguration *)v11 transfer];
    if ([v12 isDownloadable])
    {
      objc_storeStrong((id *)&self->_mediaObjectToDownload, v11);
      id v13 = [(CKCoreChatController *)self conversation];
      double v14 = [v12 guid];
      [v13 acceptTransfer:v14];
    }
    else
    {
      if (![(CKTranscriptPluginPresentationConfiguration *)v11 shouldShowViewer]) {
        goto LABEL_18;
      }
      if ([v12 isRestoring])
      {
        double v15 = [(CKTranscriptPluginPresentationConfiguration *)v11 fileURL];
        id v16 = [v15 path];

        double v17 = +[CKSyncController sharedInstance];
        [v17 prioritizeAttachmentAtPath:v16];
      }
      [(CKChatController *)self showViewerForMediaObject:v11];
      id v13 = [MEMORY[0x1E4F6E890] sharedInstance];
      [v13 trackEvent:*MEMORY[0x1E4F6DA88]];
    }

    goto LABEL_18;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && [v10 isCorrupt])
  {
    [(CKChatController *)self _showReaderForAggregateChatItem:v10 balloonView:v9];
    goto LABEL_40;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if (!CKIsRunningInMacCatalyst())
    {
      [(CKChatController *)self _handleTranscriptPluginChatItem:v10];
      goto LABEL_40;
    }
    if ([v10 balloonOrientation] == 1) {
      uint64_t v18 = 8;
    }
    else {
      uint64_t v18 = 4;
    }
    id v11 = [[CKTranscriptPluginPresentationConfiguration alloc] initWithSourceView:v9 permittedArrowDirections:v18 shouldDisableSnapshotView:1];
    [(CKChatController *)self _handleTranscriptPluginChatItem:v10 presentationConfiguration:v11];
    goto LABEL_19;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if ((![v10 itemIsReply]
       || ([v10 wantsOverlayLayout] & 1) != 0
       || ([(CKChatController *)self isEditing] & 1) != 0)
      && (![v10 itemIsThreadOriginator]
       || ([v10 wantsOverlayLayout] & 1) != 0
       || CKIsRunningInMacCatalyst()
       || ([(CKChatController *)self isEditing] & 1) != 0))
    {
      v19.receiver = self;
      v19.super_class = (Class)CKChatController;
      [(CKCoreChatController *)&v19 transcriptCollectionViewController:v8 balloonView:v9 tappedForChatItem:v10];
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if ([v10 offerState] != 2) {
    [(CKChatController *)self presentDetailsViewController];
  }
LABEL_40:
}

- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 doubleTappedItemAtIndexPath:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = [(CKChatController *)self inlineReplyController];

  if (!v11)
  {
    v12.receiver = self;
    v12.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v12 transcriptCollectionViewController:v8 balloonView:v9 doubleTappedItemAtIndexPath:v10];
  }
}

- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 didRequestReaderViewControllerForChatItem:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v9 = +[CKReaderViewController readerViewControllerForAudioChatItem:v8];
    [v9 setDelegate:self];
    if (CKIsRunningInMacCatalyst())
    {
      [v9 setModalPresentationStyle:7];
      id v10 = [v9 popoverPresentationController];
      [v10 setSourceView:v7];

      [(CKChatController *)self presentViewController:v9 animated:1 completion:0];
    }
    else
    {
      [(CKChatController *)self showViewController:v9 sender:self];
    }
  }
  else
  {
    id v11 = IMLogHandleForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      -[CKChatController transcriptCollectionViewController:balloonView:didRequestReaderViewControllerForChatItem:]();
    }
  }
}

- (void)viewDidLayoutSubviewsForTranscriptCollectionViewController:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 viewDidLayoutSubviewsForTranscriptCollectionViewController:a3];
  [(CKChatController *)self _updateCatchUpButtonVisibilityResumingFromBackground:0];
}

- (void)_handleTranscriptPluginChatItem:(id)a3
{
}

- (void)_handleTranscriptPluginChatItem:(id)a3 presentationConfiguration:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v17 = v6;
  id v8 = [v17 IMChatItem];
  id v9 = [v8 dataSource];

  if (([v9 wantsInteractiveContentView] & 1) == 0)
  {
    if ([v9 wantsReplyFromContentView]
      && [v9 allowedByScreenTime])
    {
      id v10 = [(CKCoreChatController *)self inputController];
      [v10 presentViewControllerWithPluginChatItem:v17 presentationStyle:1 presentationConfiguration:v7];
    }
    else
    {
      id v11 = [(CKCoreChatController *)self collectionViewController];
      objc_super v12 = [v11 transcriptIdentifier];
      id v10 = [v17 balloonControllerForContext:v12];

      if ((objc_opt_respondsToSelector() & 1) == 0 || ([v10 handlePresentationAction] & 1) == 0)
      {
        id v13 = [(CKCoreChatController *)self collectionViewController];
        double v14 = [v13 transcriptIdentifier];
        double v15 = [v17 contentViewControllerForContext:v14];

        if (v15)
        {
          id v16 = [(CKChatController *)self navigationController];
          [v16 pushViewController:v15 animated:1];
        }
      }
    }
  }
}

- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 selectedItemAtIndexPath:(id)a5
{
  v6.receiver = self;
  v6.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v6 transcriptCollectionViewController:a3 balloonView:a4 selectedItemAtIndexPath:a5];
  [(CKChatController *)self setTargetFirstResponder:0];
  [(CKChatController *)self becomeFirstResponder];
}

- (BOOL)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 shouldSelectChatItem:(id)a5
{
  id v5 = a5;
  if (!CKIsRunningInMacCatalyst()) {
    goto LABEL_7;
  }
  if ([v5 itemIsReplyContextPreview]) {
    goto LABEL_7;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    goto LABEL_7;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_9;
  }
  objc_super v6 = [v5 mediaObject];
  id v7 = [v6 transfer];
  char v8 = [v7 isDownloadable];

  if (v8) {
LABEL_7:
  }
    BOOL v9 = 0;
  else {
LABEL_9:
  }
    BOOL v9 = 1;

  return v9;
}

- (BOOL)transcriptCollectionViewControllerShouldShouldScrollToTopForStatusBarTap:(id)a3
{
  objc_super v4 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
  if (v4 || [(CKChatController *)self isFullScreenBalloonViewOnScreen])
  {
    char v5 = 0;
  }
  else
  {
    int v7 = IMGetCachedDomainBoolForKeyWithDefaultValue();
    if (v7) {
      [(CKChatController *)self showMessageHistoryViewController];
    }
    char v5 = v7 ^ 1;
  }

  return v5;
}

- (BOOL)transcriptCollectionViewControllerShouldScrollToBottomForLocalSentMessage:(id)a3
{
  double v3 = [(CKChatController *)self inlineReplyController];
  BOOL v4 = v3 == 0;

  return v4;
}

- (BOOL)transcriptCollectionViewControllerShouldPlayAudio:(id)a3
{
  double v3 = [(CKChatController *)self entryView];
  char v4 = [v3 isRecording] ^ 1;

  return v4;
}

- (void)transcriptCollectionViewControllerDidSetChatItems:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 transcriptCollectionViewControllerDidSetChatItems:a3];
  if ([(CKViewController *)self deferredAppeared]) {
    [(CKChatController *)self _showOrHideNicknameBannerIfNeeded];
  }
  [(CKChatController *)self updateRaiseGesture];
  [(CKChatController *)self _updatePhotoGridIfNeeded];
  [(CKChatController *)self updateQLPreviewControllerBarButtonItemsIfVisible];
}

- (void)transcriptCollectionViewControllerDidChangeAssociatedChatItem:(id)a3 chatItemDiff:(id)a4
{
  v5.receiver = self;
  v5.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v5 transcriptCollectionViewControllerDidChangeAssociatedChatItem:a3 chatItemDiff:a4];
  [(CKChatController *)self updateQLPreviewControllerBarButtonItemsIfVisible];
}

- (void)_updatePhotoGridIfNeeded
{
  uint64_t v2 = self;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id obj = [(CKChatController *)self photoGridDisplayedChatItemGUID];
  if ([obj length])
  {
    double v3 = [(CKChatController *)v2 photoGridDataSourceManager];
    if (v3)
    {
    }
    else
    {
      objc_super v4 = [(CKChatController *)v2 photoGridMomentShareChatItem];

      if (!v4) {
        return;
      }
    }
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    objc_super v5 = [(CKCoreChatController *)v2 collectionViewController];
    objc_super v6 = [v5 chatItems];

    id obja = v6;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v20;
      while (2)
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v20 != v9) {
            objc_enumerationMutation(obja);
          }
          id v11 = *(void **)(*((void *)&v19 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            objc_super v12 = [v11 IMChatItem];
            id v13 = [v12 guid];
            [(CKChatController *)v2 photoGridDisplayedChatItemGUID];
            v15 = double v14 = v2;
            int v16 = [v13 isEqualToString:v15];

            uint64_t v2 = v14;
            if (v16)
            {
              [(CKChatController *)v14 photoGridDisplayedChatItemChanged:v11];
              goto LABEL_19;
            }
          }
        }
        uint64_t v8 = [obja countByEnumeratingWithState:&v19 objects:v23 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }
LABEL_19:
  }
  else
  {
  }
}

- (void)transcriptCollectionViewControllerAudioControllerDidStop:(id)a3
{
  objc_super v4 = objc_msgSend(MEMORY[0x1E4F6E778], "sharedFeatureFlags", a3);
  char v5 = [v4 isAudioMessagesEntryViewRecordingEnabled];

  if ((v5 & 1) == 0)
  {
    objc_super v6 = [(CKCoreChatController *)self conversation];
    uint64_t v7 = [v6 chat];
    id v13 = [v7 lastFinishedMessage];

    LODWORD(v6) = [v13 isAudioMessage];
    char v8 = [v13 isFromMe];
    if (v6)
    {
      if ((v8 & 1) == 0)
      {
        [(CKChatController *)self setAudioMessageWasPlayedAndIsLatestMessage:1];
        uint64_t v9 = [(CKCoreChatController *)self conversation];
        id v10 = [v9 chat];
        char v11 = [v10 prefersTextResponseToIncomingAudioMessages];

        if ((v11 & 1) == 0)
        {
          objc_super v12 = [(CKCoreChatController *)self inputController];
          [v12 presentPluginWithBundleID:*MEMORY[0x1E4F6CB88] appLaunchPayload:0];
        }
      }
    }
  }
}

- (void)transcriptCollectionViewControllerPerformBatchUpdateCompleted:(id)a3
{
  v12.receiver = self;
  v12.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v12 transcriptCollectionViewControllerPerformBatchUpdateCompleted:a3];
  objc_super v4 = [(CKChatController *)self inlineReplyController];

  if (v4)
  {
    char v5 = [(CKCoreChatController *)self collectionViewController];
    objc_super v6 = [v5 collectionView];
    [v6 setNeedsLayout];

    uint64_t v7 = [(CKCoreChatController *)self collectionViewController];
    char v8 = [v7 collectionView];
    [v8 layoutIfNeeded];

    uint64_t v9 = [(CKChatController *)self inlineReplyController];
    id v10 = [v9 transitionContext];

    char v11 = [(CKChatController *)self _visibleChatItemsToScreenFrameMap];
    [v10 setVisibleChatItemToFrameMap:v11];
  }
}

- (void)transcriptCollectionViewController:(id)a3 willBeginImpactEffectAnimationWithSendAnimationContext:(id)a4
{
  id v37 = a4;
  if ([v37 isSender]) {
    [(CKChatController *)self dismissEffectPickerAnimated:1];
  }
  char v5 = [v37 impactIdentifier];
  BOOL v6 = +[CKImpactEffectManager identifierShouldPlayInWindow:v5];

  if (v6)
  {
    uint64_t v7 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
    char v8 = [v7 superview];
    [v7 frame];
    objc_msgSend(v8, "convertRect:toView:", 0);
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;

    id v17 = [v37 throwBalloonViews];
    uint64_t v18 = [v17 firstObject];

    long long v19 = [v18 superview];
    [v18 frame];
    objc_msgSend(v19, "convertRect:toView:", 0);
    double v21 = v20;
    double v23 = v22;
    double v25 = v24;
    double v27 = v26;

    double v28 = [(CKChatController *)self collectionView];
    objc_msgSend(v28, "convertRect:toView:", 0, v21, v23, v25, v27);
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;
    CGFloat v36 = v35;

    v39.origin.double x = v10;
    v39.origin.double y = v12;
    v39.size.double width = v14;
    v39.size.double height = v16;
    v40.origin.double x = v30;
    v40.origin.double y = v32;
    v40.size.double width = v34;
    v40.size.double height = v36;
    if (CGRectIntersectsRect(v39, v40)) {
      [v7 setAlpha:0.0];
    }
  }
}

- (void)transcriptCollectionViewController:(id)a3 didEndImpactEffectAnimationWithSendAnimationContext:(id)a4
{
  objc_super v4 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
  [v4 alpha];
  if (v5 != 1.0)
  {
    BOOL v6 = (void *)MEMORY[0x1E4F42FF0];
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    void v7[2] = __107__CKChatController_transcriptCollectionViewController_didEndImpactEffectAnimationWithSendAnimationContext___block_invoke;
    _OWORD v7[3] = &unk_1E5620C40;
    id v8 = v4;
    [v6 animateWithDuration:v7 animations:0.25];
  }
}

uint64_t __107__CKChatController_transcriptCollectionViewController_didEndImpactEffectAnimationWithSendAnimationContext___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

- (void)transcriptCollectionViewController:(id)a3 balloonView:(id)a4 didRequestPresentationStyle:(unint64_t)a5 forChatItem:(id)a6 allowAllStyles:(BOOL)a7
{
  id v15 = a4;
  id v10 = a6;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v10;
    if (CKIsRunningInMacCatalyst())
    {
      if ([v11 balloonOrientation] == 1) {
        uint64_t v12 = 8;
      }
      else {
        uint64_t v12 = 4;
      }
      double v13 = [[CKTranscriptPluginPresentationConfiguration alloc] initWithSourceView:v15 permittedArrowDirections:v12 shouldDisableSnapshotView:1];
      CGFloat v14 = [(CKCoreChatController *)self inputController];
      [v14 presentViewControllerWithPluginChatItem:v11 presentationStyle:a5 presentationConfiguration:v13];
    }
    else
    {
      double v13 = [(CKCoreChatController *)self inputController];
      [(CKTranscriptPluginPresentationConfiguration *)v13 presentViewControllerWithPluginChatItem:v11 presentationStyle:a5];
    }
  }
}

- (BOOL)transcriptCollectionViewController:(id)a3 balloonViewDidRequestCommitPayload:(id)a4 forPlugin:(id)a5 allowAllCommits:(BOOL)a6 error:(id *)a7
{
  BOOL v8 = a6;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  int v15 = [v12 isVisiblePlugin:v14];
  int v16 = [v12 hasRecentTouchForSendingPlugin:v14];
  if (![v14 length] || !v15)
  {
    if (a7)
    {
      long long v19 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v20 = 2;
LABEL_9:
      [v19 errorWithDomain:@"CKBrowserErrorDomain" code:v20 userInfo:0];
      char v18 = 0;
      *a7 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_11;
    }
LABEL_10:
    char v18 = 0;
    goto LABEL_11;
  }
  if ((v8 | v16) != 1)
  {
    if (a7)
    {
      long long v19 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v20 = 1;
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  [v12 clearRecentPluginTouch];
  id v17 = [(CKCoreChatController *)self inputController];
  char v18 = [v17 commitPayloadBypassingValidation:v13 forPlugin:v14];

LABEL_11:
  return v18;
}

- (void)transcriptCollectionViewController:(id)a3 balloonViewDidRequestStartEditingPayload:(id)a4 forPlugin:(id)a5 allowAllCommits:(BOOL)a6 completionHandler:(id)a7
{
  BOOL v8 = a6;
  id v20 = a4;
  id v12 = a5;
  id v13 = (void (**)(id, void *))a7;
  id v14 = a3;
  int v15 = [v14 isVisiblePlugin:v12];
  int v16 = [v14 hasRecentTouchForSendingPlugin:v12];

  if (![v12 length] || !v15)
  {
    if (!v13) {
      goto LABEL_11;
    }
    char v18 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v19 = -1;
LABEL_9:
    id v17 = [v18 errorWithDomain:@"CKBrowserErrorDomain" code:v19 userInfo:0];
    v13[2](v13, v17);
    goto LABEL_10;
  }
  if ((v8 | v16) != 1)
  {
    if (!v13) {
      goto LABEL_11;
    }
    char v18 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v19 = 1;
    goto LABEL_9;
  }
  id v17 = [(CKCoreChatController *)self inputController];
  [v17 startEditingPayloadBypassingValidation:v20 forPlugin:v12 completion:v13];
LABEL_10:

LABEL_11:
}

- (void)chatInputController:(id)a3 didRequestAppendToCompositionForPayload:(id)a4
{
  id v5 = a4;
  BOOL v6 = [(CKChatController *)self entryView];
  id v10 = [v6 composition];

  uint64_t v7 = [v5 mediaObjectFromPayload];

  BOOL v8 = [v10 compositionByAppendingMediaObject:v7];

  if ([v8 hasContent])
  {
    double v9 = [(CKChatController *)self entryView];
    [v9 setComposition:v8];

    [(CKChatController *)self _updateEntryViewFrameIfNeeded:1];
  }
}

- (BOOL)transcriptCollectionViewController:(id)a3 balloonViewDidRequestCommitSticker:(id)a4 forPlugin:(id)a5 allowAllCommits:(BOOL)a6 error:(id *)a7
{
  BOOL v8 = a6;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  int v15 = [v12 isVisiblePlugin:v14];
  int v16 = [v12 hasRecentTouchForSendingPlugin:v14];
  if (![v14 length] || !v15)
  {
    if (!a7) {
      goto LABEL_10;
    }
    char v18 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v19 = 2;
LABEL_9:
    *a7 = [v18 errorWithDomain:@"CKBrowserErrorDomain" code:v19 userInfo:0];
    goto LABEL_10;
  }
  if ((v8 | v16) != 1)
  {
    if (!a7) {
      goto LABEL_10;
    }
    char v18 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v19 = 1;
    goto LABEL_9;
  }
  [v12 clearRecentPluginTouch];
  id v17 = [(CKCoreChatController *)self inputController];
  objc_msgSend(v17, "commitStickerBypassingValidation:forPlugin:stickerFrame:", v13, v14, *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), *(double *)(MEMORY[0x1E4F1DB28] + 16), *(double *)(MEMORY[0x1E4F1DB28] + 24));

LABEL_10:
  return 1;
}

- (void)transcriptCollectionViewControllerDisplaySMSSpamReporting:(id)a3
{
  objc_super v4 = [(CKCoreChatController *)self chat];
  id v5 = [v4 allMessagesToReportAsSpam];

  [(CKChatController *)self showSMSReportSpamExtensionControllerForMessages:v5];
}

- (void)transcriptCollectionViewController:(id)a3 willDisplayBalloonForGUID:(id)a4 withIndexPath:(id)a5 withOriginY:(double)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = [(CKChatController *)self firstUnreadMessageGUID];

  if (v13)
  {
    if (![(CKChatController *)self didDisplayFirstUnreadMessage])
    {
      id v14 = [(CKChatController *)self firstUnreadMessageGUID];
      int v15 = [v11 isEqualToString:v14];

      if (v15)
      {
        [(CKChatController *)self setDidDisplayFirstUnreadMessage:1];
        [(CKChatController *)self setFirstUnreadMessageCellOriginY:a6];
        if (IMOSLoggingEnabled())
        {
          int v16 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)id v17 = 0;
            _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "First unread message has been displayed by collection view.", v17, 2u);
          }
        }
      }
    }
  }
}

- (void)transcriptCollectionViewController:(id)a3 didScroll:(CGPoint)a4
{
  double y = a4.y;
  double x = a4.x;
  id v9 = a3;
  if ([(CKChatController *)self didDisplayFirstUnreadMessage])
  {
    uint64_t v7 = [(CKChatController *)self catchUpButton];

    if (v7)
    {
      if (-[CKChatController _isFirstUnreadMessageVisibleForContentOffset:](self, "_isFirstUnreadMessageVisibleForContentOffset:", x, y))
      {
        [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:1];
        BOOL v8 = [(CKChatController *)self indexPathForFirstUnreadMessage];
        [v9 highlightItemAtIndexPathWhenDisplayed:v8 autoDismiss:1];
      }
    }
  }
}

- (BOOL)_isFirstUnreadMessageVisibleForContentOffset:(CGPoint)a3
{
  double y = a3.y;
  [(CKChatController *)self _currentlyVisibleBannerHeight];
  double v6 = v5;
  uint64_t v7 = [(CKChatController *)self collectionView];
  [v7 adjustedContentInset];
  double v9 = v8;

  if (v9 >= v6) {
    double v6 = v9;
  }
  [(CKChatController *)self firstUnreadMessageCellOriginY];
  return y <= v10 - v6;
}

- (void)transcriptCollectionViewControllerWillDisplayLastBalloon:(id)a3
{
  v3.receiver = self;
  v3.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v3 transcriptCollectionViewControllerWillDisplayLastBalloon:a3];
}

- (double)transcriptCollectionViewController:(id)a3 targetAlphaForChatItem:(id)a4
{
  id v5 = a4;
  double v6 = -1.0;
  if (([v5 itemIsReplyContextPreview] & 1) == 0)
  {
    uint64_t v7 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    char v8 = [v7 isDashedBalloonsEnabled];

    if ((v8 & 1) == 0)
    {
      double v9 = [v5 IMChatItem];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        double v10 = [v5 IMChatItem];
        char v11 = [v10 isPendingSatelliteSend];

        double v6 = 0.5;
        if (v11) {
          goto LABEL_11;
        }
      }
      else
      {
      }
    }
    objc_opt_class();
    double v6 = 0.5;
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v12 = [(CKChatController *)self inlineReplyController];
      if (!v12) {
        goto LABEL_10;
      }
      id v13 = (void *)v12;
      id v14 = [(CKChatController *)self inlineReplyController];
      char v15 = [v14 animatingOut];

      if (v15) {
        goto LABEL_10;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0 && [v5 color] == 1
        || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && ([v5 latestIsFromMe] & 1) != 0)
      {
        double v6 = 0.699999988;
        goto LABEL_11;
      }
      objc_opt_class();
      double v6 = 0.400000006;
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_10:
          }
            double v6 = 1.0;
        }
      }
    }
  }
LABEL_11:

  return v6;
}

- (void)transcriptCollectionViewController:(id)a3 sendQuickReplyComposition:(id)a4 withSourceView:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  char v11 = [v8 collectionView];
  [v11 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerSendAnimation"];

  [v10 bounds];
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  id v20 = [(CKChatController *)self view];
  objc_msgSend(v10, "convertRect:toView:", v20, v13, v15, v17, v19);
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;

  double v29 = [(CKChatController *)self makeThrowAnimationManager];
  objc_msgSend(v29, "setSourceRect:", v22, v24, v26, v28);
  CGFloat v30 = [(CKChatController *)self view];
  double v31 = [v8 quickReplySnapshotInView:v30];

  if (v31)
  {
    [v29 setQuickReplySnapshot:v31];
  }
  else if (IMOSLoggingEnabled())
  {
    CGFloat v32 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)CGAffineTransform buf = 0;
      _os_log_impl(&dword_18EF18000, v32, OS_LOG_TYPE_INFO, "CKChatController : Throw Animation Manager: No snapshot generated. Attempting graceful failure by continuing send.", buf, 2u);
    }
  }
  [(CKChatController *)self setThrowAnimationManager:v29];
  v35[0] = MEMORY[0x1E4F143A8];
  v35[1] = 3221225472;
  _DWORD v35[2] = __96__CKChatController_transcriptCollectionViewController_sendQuickReplyComposition_withSourceView___block_invoke;
  v35[3] = &unk_1E5620AA8;
  void v35[4] = self;
  id v36 = v9;
  id v37 = v29;
  id v33 = v29;
  id v34 = v9;
  [(CKChatController *)self sendComposition:v34 animations:v35];
}

void __96__CKChatController_transcriptCollectionViewController_sendQuickReplyComposition_withSourceView___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) conversation];
  objc_super v3 = [v2 messagesFromComposition:*(void *)(a1 + 40)];

  objc_super v4 = [*(id *)(a1 + 32) collectionViewController];
  id v5 = [v4 updateAnimationGroup];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __96__CKChatController_transcriptCollectionViewController_sendQuickReplyComposition_withSourceView___block_invoke_2;
  v8[3] = &unk_1E5621088;
  double v6 = *(void **)(a1 + 40);
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v6;
  id v10 = *(id *)(a1 + 48);
  id v11 = v3;
  id v7 = v3;
  dispatch_group_notify(v5, MEMORY[0x1E4F14428], v8);
}

uint64_t __96__CKChatController_transcriptCollectionViewController_sendQuickReplyComposition_withSourceView___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) flagSensitiveMediaObjects:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);

  return [v2 animateQuickReplyMessages:v3];
}

- (void)transcriptCollectionViewController:(id)a3 selectedChipAction:(id)a4
{
  id v5 = a4;
  id v6 = [(CKChatController *)self suggestedActionsHandler];
  [v6 performChipAction:v5];
}

- (void)transcriptCollectionViewController:(id)a3 selectedSuggestedReply:(id)a4 messageGUID:(id)a5
{
}

- (void)transcriptCollectionViewControllerWillUpdateTranscriptChatItems:(id)a3
{
  v9.receiver = self;
  v9.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v9 transcriptCollectionViewControllerWillUpdateTranscriptChatItems:a3];
  objc_super v4 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  id v5 = [v4 displayConfiguration];
  uint64_t v6 = [v5 type];

  if (v6 == 2)
  {
    id v7 = [(CKCoreChatController *)self collectionViewController];
    id v8 = [v7 collectionView];
    [v8 beginHoldingContentOffsetUpdatesForReason:@"TranscriptUpdatingForAddSticker"];
  }
}

- (void)transcriptCollectionViewControllerDidUpdateTranscriptChatItems:(id)a3
{
  v10.receiver = self;
  v10.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v10 transcriptCollectionViewControllerDidUpdateTranscriptChatItems:a3];
  if ([(CKViewController *)self deferredAppeared]) {
    [(CKChatController *)self _showOrHideNicknameBannerIfNeeded];
  }
  [(CKChatController *)self updateRaiseGesture];
  [(CKChatController *)self _updatePhotoGridIfNeeded];
  objc_super v4 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  id v5 = [v4 displayConfiguration];
  uint64_t v6 = [v5 type];

  if (v6 == 2)
  {
    id v7 = [(CKCoreChatController *)self collectionViewController];
    id v8 = [v7 collectionView];
    [v8 endHoldingContentOffsetUpdatesForReason:@"TranscriptUpdatingForAddSticker"];

    objc_super v9 = [(CKCoreChatController *)self fullScreenBalloonViewController];
    [v9 updateStickersAnimated:0];
  }
}

- (void)prepareInputForPreviewPresentation
{
  uint64_t v3 = [(CKCoreChatController *)self inputController];
  char v4 = [v3 isInputViewVisible];

  if (v4)
  {
    id v5 = [(CKChatController *)self entryView];
    uint64_t v6 = [v5 contentView];
    -[CKChatController setEntryViewWasActiveOnPreview:](self, "setEntryViewWasActiveOnPreview:", [(id)v6 isActive]);

    id v7 = +[CKUIBehavior sharedBehaviors];
    LOBYTE(v6) = [v7 isEntryViewInputAccessory];

    if ((v6 & 1) == 0)
    {
      id v8 = [(CKCoreChatController *)self collectionViewController];
      objc_super v9 = [v8 collectionView];
      [v9 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerPreviewPresentation"];
    }
    v10.receiver = self;
    v10.super_class = (Class)CKChatController;
    [(CKChatController *)&v10 becomeFirstResponder];
  }
  else
  {
    [(CKChatController *)self setWasKeyboardShowingWithApp:0];
  }
}

- (void)restoreInputAfterPreviewPresentation
{
  if ([(CKChatController *)self wasKeyboardShowingWithApp])
  {
    if ([(CKChatController *)self entryViewWasActiveOnPreview])
    {
      [(CKChatController *)self setEntryViewWasActiveOnPreview:0];
      uint64_t v3 = 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    [(CKChatController *)self setTargetFirstResponder:v3];
  }
  id v5 = [(CKCoreChatController *)self collectionViewController];
  char v4 = [v5 collectionView];
  [v4 endHoldingContentOffsetUpdatesForReason:@"ChatControllerPreviewPresentation"];
}

- (void)restoreInputAfterSearchPresentation
{
  if (CKIsRunningInMacCatalyst()
    && ![(CKChatController *)self targetFirstResponder])
  {
    [(CKChatController *)self setTargetFirstResponder:1];
  }

  [(CKChatController *)self becomeFirstResponder];
}

- (void)setupScrollingForKeyboardInteraction
{
  uint64_t v3 = [(CKCoreChatController *)self collectionViewController];
  char v4 = [v3 collectionView];
  [v4 contentSize];
  double v6 = v5;

  id v7 = [(CKCoreChatController *)self collectionViewController];
  [v7 setScrollAnchor:v6];
}

- (UIEdgeInsets)_avoidanceInsets
{
  v20.receiver = self;
  v20.super_class = (Class)CKChatController;
  [(CKChatController *)&v20 _avoidanceInsets];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  id v11 = [(CKChatController *)self entryView];
  double v12 = v11;
  if (v11)
  {
    double v13 = [v11 contentView];
    char v14 = [v13 isActive];

    if ((v14 & 1) == 0)
    {
      [v12 frame];
      double v8 = v8 + v15;
    }
  }

  double v16 = v4;
  double v17 = v6;
  double v18 = v8;
  double v19 = v10;
  result.double right = v19;
  result.double bottom = v18;
  result.double left = v17;
  result.double top = v16;
  return result;
}

- (void)_presentSentWithSiriUI
{
  double v3 = [CKSentWithSiriViewController alloc];
  double v4 = [(CKCoreChatController *)self conversation];
  double v13 = [(CKSentWithSiriViewController *)v3 initWithConversation:v4];

  double v5 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:0 target:self action:sel__dismissSentWithSiriUI];
  double v6 = [(CKSentWithSiriViewController *)v13 navigationItem];
  [v6 setRightBarButtonItem:v5];

  double v7 = [[CKFullscreenBrowserNavigationController alloc] initWithRootViewController:v13];
  double v8 = [(CKFullscreenBrowserNavigationController *)v7 navigationBar];
  [v8 setTranslucent:0];
  [v8 _setShadowAlpha:0.0];
  double v9 = +[CKUIBehavior sharedBehaviors];
  double v10 = [v9 theme];
  id v11 = [v10 transcriptBackgroundColor];
  [v8 _setBackgroundColor:v11];

  double v12 = +[CKAdaptivePresentationController sharedInstance];
  [v12 presentViewController:v7 fromViewController:self presentationHandler:0 dismissalHandler:0 animated:1 completion:0];
}

- (void)_dismissSentWithSiriUI
{
  id v2 = +[CKAdaptivePresentationController sharedInstance];
  [v2 dismissViewControllerAnimated:1 completion:0];
}

- (void)_presentBrowserForPlugin:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self inputController];
  [v5 launchAndShowBrowserForPlugin:v4 dataSource:0 style:0];
}

- (void)_presentBrowserOrAppStoreForAdamID:(id)a3 url:(id)a4 identifier:(id)a5
{
}

- (void)_presentBrowserOrAppStoreForAdamID:(id)a3 url:(id)a4 identifier:(id)a5 isForSticker:(BOOL)a6
{
  BOOL v6 = a6;
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  double v13 = v12;
  if (v10)
  {
    char v14 = +[CKBalloonPluginManager sharedInstance];
    double v15 = [v14 pluginForAdamID:v10];

    if (v15)
    {
      if (v6)
      {
        double v16 = +[CKBalloonPluginManager sharedInstance];
        double v17 = [v16 pluginForIdentifier:@"com.apple.messages.MSMessageExtensionBalloonPlugin:0000000000:com.apple.Stickers.UserGenerated.MessagesExtension"];

        if (v17) {
          double v18 = v17;
        }
        else {
          double v18 = v15;
        }
        id v19 = v18;

        if (IMOSLoggingEnabled())
        {
          objc_super v20 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
          {
            int v28 = 138412290;
            id v29 = v19;
            _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "We have a plugin: %@, we'll launch the stickers ultra extension instead of launching that plugin directly.", (uint8_t *)&v28, 0xCu);
          }
        }
      }
      else
      {
        id v19 = v15;
      }
      [(CKChatController *)self _presentBrowserForPlugin:v19];
    }
    else
    {
      double v23 = [(CKCoreChatController *)self inputController];
      [v23 presentAppStoreForAdamID:v10];

      double v24 = [MEMORY[0x1E4F6E890] sharedInstance];
      [v24 trackEvent:*MEMORY[0x1E4F6D748]];

      id v19 = 0;
    }
    if (IMOSLoggingEnabled())
    {
      double v25 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        int v28 = 138412546;
        id v29 = v10;
        __int16 v30 = 2112;
        id v31 = v19;
        _os_log_impl(&dword_18EF18000, v25, OS_LOG_TYPE_INFO, "presenting browser or app store for ID: %@, plugin: %@", (uint8_t *)&v28, 0x16u);
      }
    }
  }
  else if (v11)
  {
    double v21 = [MEMORY[0x1E4F1CB10] URLWithString:v11];
    if (v21) {
      [(id)*MEMORY[0x1E4F43630] openURL:v21 withCompletionHandler:0];
    }
    if (IMOSLoggingEnabled())
    {
      double v22 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        int v28 = 138412290;
        id v29 = v11;
        _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "presenting browser or app store for URL: %@", (uint8_t *)&v28, 0xCu);
      }
    }
  }
  else if (v12)
  {
    double v26 = +[CKBalloonPluginManager sharedInstance];
    double v27 = [v26 pluginForIdentifier:v13];

    if (v27) {
      [(CKChatController *)self _presentBrowserForPlugin:v27];
    }
  }
}

- (void)presentAppStoreForURL:(id)a3 fromSourceApplication:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKCoreChatController *)self inputController];
  [v8 presentAppStoreForURL:v7 fromSourceApplication:v6];
}

- (void)_updateForNewPreferredService
{
  v6.receiver = self;
  v6.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v6 _updateForNewPreferredService];
  double v3 = [(CKChatController *)self effectPickerViewController];
  id v4 = [(CKCoreChatController *)self conversation];
  objc_msgSend(v3, "updateColor:", objc_msgSend(v4, "sendButtonColor"));

  id v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  LODWORD(v4) = [v5 isCarrierPigeonEnabled];

  if (v4)
  {
    [(CKChatController *)self _updateEntryViewPasteConfiguration];
    [(CKChatController *)self refreshMacToolbar];
  }
}

- (void)_willSendComposition:(id)a3 inConversation:(id)a4
{
  id v6 = a3;
  v22.receiver = self;
  v22.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v22 _willSendComposition:v6 inConversation:a4];
  id v7 = [v6 shelfPluginPayload];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    int v8 = [v7 shouldSendAsMediaObject];
  }
  else {
    int v8 = 0;
  }
  double v9 = [v7 pluginBundleID];
  if ([v9 length])
  {
    id v10 = [v7 pluginBundleID];
    if ([v10 rangeOfString:*MEMORY[0x1E4F6CBE8]] == 0x7FFFFFFFFFFFFFFFLL)
    {
      id v11 = [v7 pluginBundleID];
      uint64_t v12 = [v11 rangeOfString:*MEMORY[0x1E4F6CC10]];

      if (v12 == 0x7FFFFFFFFFFFFFFFLL)
      {
        if (!v8) {
          goto LABEL_19;
        }
        goto LABEL_13;
      }
    }
    else
    {
    }
    if ((v8 & 1) == 0)
    {
      id v13 = [v6 shelfPluginPayload];
      [(CKChatController *)self setExtensionPayloadBeingSent:v13];
LABEL_18:

      goto LABEL_19;
    }
LABEL_13:
    id v13 = v7;
    char v14 = [v13 mediaObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      double v16 = [v13 mediaObject];
      double v17 = [v16 sticker];

      if (v17)
      {
        double v18 = [v16 sticker];
        +[CKChatController donateStickerToRecents:v18];
      }
    }
    goto LABEL_18;
  }

  if (v8) {
    goto LABEL_13;
  }
LABEL_19:
  id v19 = [(CKChatController *)self entryView];
  objc_super v20 = [v19 contentView];
  double v21 = [v20 pluginEntryViewController];

  if (objc_opt_respondsToSelector()) {
    [v21 payloadWillSend];
  }
}

- (void)_didSendCompositionInConversation:(id)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  v19.receiver = self;
  v19.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v19 _didSendCompositionInConversation:v4];
  id v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v6 = [v5 isExpressiveTextEnabled];

  if (v6)
  {
    id v7 = [(CKChatController *)self entryView];
    int v8 = [v7 contentView];
    double v9 = [v8 textView];

    [v9 hideTextEffectsPickerIfNeededAndResetTypingAttributes];
  }
  id v10 = [(CKChatController *)self extensionPayloadBeingSent];
  if (IMOSLoggingEnabled())
  {
    id v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 138412290;
      double v21 = v10;
      _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "_didSendCompositionInConversation: %@", buf, 0xCu);
    }
  }
  if (v10)
  {
    [(CKChatController *)self setExtensionPayloadBeingSent:0];
    uint64_t v12 = +[CKBalloonPluginManager sharedInstance];
    id v13 = [v10 pluginBundleID];
    char v14 = [v12 viewControllerForPluginIdentifier:v13];

    if (objc_opt_respondsToSelector())
    {
      double v15 = [v4 senderIdentifier];
      [v14 setSender:v15];
    }
    if (objc_opt_respondsToSelector())
    {
      double v16 = [(CKCoreChatController *)self conversation];
      double v17 = [v16 recipientStrings];

      [v14 setRecipients:v17];
    }
    if (objc_opt_respondsToSelector()) {
      [v14 didStartSendingPluginPayload:v10];
    }
    double v18 = [v14 balloonPluginDataSource];
    [v18 payloadWillSendFromShelf];
  }
  [(CKChatController *)self setSendingCompositionBackgroundTask:*MEMORY[0x1E4F43740]];
}

- (void)sendSelectedSuggestedReply:(id)a3 messageGUID:(id)a4
{
  id v11 = a4;
  id v6 = a3;
  id v7 = [_CKSuggestedReplyComposition alloc];
  int v8 = [v6 suggestedReplyBody];

  double v9 = [(CKComposition *)v7 initWithText:v8 subject:0];
  if (v11)
  {
    id v10 = [(CKCoreChatController *)self chat];
    [v10 markRepliedForMessageGUID:v11];
  }
  [(CKChatController *)self sendCompositionIfAllowed:v9];
}

- (void)stageSelectedSuggestedReply:(id)a3
{
  v16[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 suggestion];
  id v6 = [v5 displayText];

  id v7 = CKFrameworkBundle();
  int v8 = [v7 localizedStringForKey:@"SELECTED_OPTION" value:&stru_1EDE4CA38 table:@"ChatKit"];

  double v15 = @"suggestedReplyBody";
  double v9 = [v4 suggestedReplyBody];

  v16[0] = v9;
  id v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v16 forKeys:&v15 count:1];
  id v11 = +[CKSuggestedActionsHandler pluginPayloadForShelfCardWithTitle:v6 summary:v8 userInfo:v10];

  uint64_t v12 = [[CKComposition alloc] initWithText:0 subject:0 shelfPluginPayload:v11];
  id v13 = [(CKChatController *)self composition];
  char v14 = [v13 compositionByAppendingComposition:v12];
  [(CKChatController *)self setComposition:v14];
}

- (void)_showCatchUpButtonIfNeeded
{
}

- (void)_showCatchUpButtonIfNeededResumingFromBackground:(BOOL)a3
{
  BOOL v3 = a3;
  if (CKIsCatchUpEnabled())
  {
    if ([(CKChatController *)self _wantsCatchUpAffordance])
    {
      id v5 = [(CKChatController *)self catchUpButton];

      if (!v5)
      {
        id location = 0;
        objc_initWeak(&location, self);
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 3221225472;
        aBlock[2] = __69__CKChatController__showCatchUpButtonIfNeededResumingFromBackground___block_invoke;
        aBlock[3] = &unk_1E56215C8;
        objc_copyWeak(&v39, &location);
        id v6 = _Block_copy(aBlock);
        id v7 = [[_TtC7ChatKit22CKCatchUpButtonManager alloc] initWithDidTapButton:v6];
        [(CKChatController *)self setCatchUpButtonManager:v7];
        id v37 = v6;
        int v8 = [(CKCatchUpButtonManager *)v7 catchUpButtonHost];
        double v9 = [v8 view];
        [(CKChatController *)self setCatchUpButton:v9];

        [(CKChatController *)self addChildViewController:v8];
        id v10 = [(CKChatController *)self view];
        id v11 = [(CKChatController *)self catchUpButton];
        [v10 addSubview:v11];

        [v8 didMoveToParentViewController:self];
        uint64_t v12 = [(CKChatController *)self catchUpButton];
        [v12 setTranslatesAutoresizingMaskIntoConstraints:0];

        id v13 = [(CKChatController *)self catchUpButton];
        char v14 = [v13 leadingAnchor];
        double v15 = [(CKChatController *)self view];
        double v16 = [v15 leadingAnchor];
        double v17 = [v14 constraintEqualToAnchor:v16];
        [v17 setActive:1];

        double v18 = [(CKChatController *)self catchUpButton];
        objc_super v19 = [v18 trailingAnchor];
        objc_super v20 = [(CKChatController *)self view];
        double v21 = [v20 trailingAnchor];
        uint64_t v22 = [v19 constraintEqualToAnchor:v21];
        [v22 setActive:1];

        double v23 = [(CKChatController *)self catchUpButton];
        double v24 = [v23 topAnchor];
        double v25 = [(CKChatController *)self view];
        double v26 = [v25 safeAreaLayoutGuide];
        double v27 = [v26 topAnchor];
        int v28 = [v24 constraintEqualToAnchor:v27 constant:0.0];
        [(CKChatController *)self setCatchUpButtonTopConstraint:v28];

        id v29 = [(CKChatController *)self catchUpButtonTopConstraint];
        [v29 setActive:1];

        objc_destroyWeak(&v39);
        objc_destroyWeak(&location);
      }
      [(CKChatController *)self _currentlyVisibleBannerHeight];
      double v31 = v30;
      uint64_t v32 = [(CKChatController *)self catchUpButtonTopConstraint];
      [v32 setConstant:v31];

      id v33 = [(CKChatController *)self catchUpButton];
      [v33 setNeedsUpdateConstraints];

      id v34 = [(CKChatController *)self view];
      double v35 = [(CKChatController *)self catchUpButton];
      [v34 bringSubviewToFront:v35];

      id v36 = [(CKChatController *)self catchUpButtonManager];
      [v36 animateInResumingFromBackground:v3];
    }
    else
    {
      [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:1];
    }
  }
}

void __69__CKChatController__showCatchUpButtonIfNeededResumingFromBackground___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _catchUpButtonTapped];
}

- (void)_hideCatchUpButtonIfNeededAndRemoveOnCompletion:(BOOL)a3
{
  BOOL v3 = a3;
  id v5 = [(CKChatController *)self catchUpButton];

  if (v5)
  {
    if (v3)
    {
      id location = 0;
      objc_initWeak(&location, self);
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __68__CKChatController__hideCatchUpButtonIfNeededAndRemoveOnCompletion___block_invoke;
      aBlock[3] = &unk_1E56215C8;
      objc_copyWeak(&v10, &location);
      id v6 = _Block_copy(aBlock);
      id v7 = [(CKChatController *)self catchUpButtonManager];
      [v7 animateOutWithCompletion:v6];

      objc_destroyWeak(&v10);
      objc_destroyWeak(&location);
    }
    else
    {
      id v8 = [(CKChatController *)self catchUpButtonManager];
      [v8 animateOutWithCompletion:0];
    }
  }
  else
  {
    [(CKChatController *)self setIndexPathForFirstUnreadMessage:0];
    [(CKChatController *)self setFirstUnreadMessageGUID:0];
  }
}

void __68__CKChatController__hideCatchUpButtonIfNeededAndRemoveOnCompletion___block_invoke(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v3 = [WeakRetained catchUpButtonManager];
  id v10 = [v3 catchUpButtonHost];

  [v10 willMoveToParentViewController:0];
  id v4 = [v10 view];
  [v4 removeFromSuperview];

  [v10 removeFromParentViewController];
  id v5 = objc_loadWeakRetained(v1);
  [v5 setCatchUpButton:0];

  id v6 = objc_loadWeakRetained(v1);
  [v6 setCatchUpButtonManager:0];

  id v7 = objc_loadWeakRetained(v1);
  [v7 setIsCatchUpButtonNeededOnFirstLoad:0];

  id v8 = objc_loadWeakRetained(v1);
  [v8 setIndexPathForFirstUnreadMessage:0];

  id v9 = objc_loadWeakRetained(v1);
  [v9 setFirstUnreadMessageGUID:0];
}

- (double)_currentlyVisibleBannerHeight
{
  BOOL v3 = [(CKChatController *)self suggestionBannerView];

  if (v3)
  {
    id v4 = [(CKChatController *)self suggestionBannerView];
    [v4 frame];
    double v6 = v5;

    double v7 = fmax(v6, 0.0);
  }
  else
  {
    double v7 = 0.0;
  }
  id v8 = [(CKChatController *)self nicknameBanner];

  if (v8)
  {
    id v9 = [(CKChatController *)self nicknameBanner];
    [v9 frame];
    double v11 = v10;

    if (v7 < v11) {
      double v7 = v11;
    }
  }
  uint64_t v12 = [(CKChatController *)self groupPhotoUpdateBanner];

  if (v12)
  {
    id v13 = [(CKChatController *)self groupPhotoUpdateBanner];
    [v13 frame];
    double v15 = v14;

    if (v7 < v15) {
      return v15;
    }
  }
  return v7;
}

- (void)handleContentSizeCategoryDidChangeNotification:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 handleContentSizeCategoryDidChangeNotification:a3];
  [(CKChatController *)self _showCatchUpButtonIfNeeded];
}

- (void)_catchUpButtonTapped
{
  id v12 = [(CKCoreChatController *)self collectionViewController];
  BOOL v3 = [v12 collectionView];
  [v3 setTranscriptScrollIntent:2];
  objc_super v4 = [CKTranscriptHighlightedMessageScrollContext alloc];
  double v5 = [(CKChatController *)self firstUnreadMessageGUID];
  double v6 = [(CKTranscriptHighlightedMessageScrollContext *)v4 initWithMessageGUID:v5 messagePartIndex:0x7FFFFFFFFFFFFFFFLL viewToAlignWith:0 allowOverScroll:0 scrollPosition:1];
  [v3 setHighlightedMessageScrollContext:v6];

  [v3 beginDisablingTranscriptDynamicsForReason:@"ScrollToMessage"];
  [(CKChatController *)self contentOffsetForFirstUnreadMessage];
  double v8 = v7;
  double v10 = v9;
  if (_catchUpDecelerationAnimation_onceToken != -1) {
    dispatch_once(&_catchUpDecelerationAnimation_onceToken, &__block_literal_global_3600);
  }
  objc_msgSend(v3, "_setContentOffset:animated:animationCurve:animationAdjustsForContentOffsetDelta:animation:", 1, 1, 0, _catchUpDecelerationAnimation_spring, v8, v10);
  [v3 endDisablingTranscriptDynamicsForReason:@"ScrollToMessage"];
  double v11 = [(CKCoreChatController *)self collectionViewController];
  [v11 highlightItemAtIndexPathWhenDisplayed:self->_indexPathForFirstUnreadMessage autoDismiss:1];

  [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:1];
}

- (void)_updateIndexPathForFirstUnreadMessage
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (CKIsCatchUpEnabled())
  {
    BOOL v3 = [(CKChatController *)self firstUnreadMessageGUID];

    if (!v3)
    {
      objc_super v4 = [(CKCoreChatController *)self chat];
      double v5 = [v4 firstUnreadMessageItem];

      double v6 = [v5 guid];
      [(CKChatController *)self setFirstUnreadMessageGUID:v6];
    }
    double v7 = [(CKChatController *)self firstUnreadMessageGUID];
    if (v7)
    {
      if (IMOSLoggingEnabled())
      {
        double v8 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          int v17 = 138412290;
          double v18 = v7;
          _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Determined first unread message GUID %@", (uint8_t *)&v17, 0xCu);
        }
      }
      double v9 = [(CKCoreChatController *)self collectionViewController];
      double v10 = [v9 chatItems];
      uint64_t v11 = objc_msgSend(v10, "__ck_catchUpScrollTargetForMessageGUID:", v7);
      uint64_t v13 = v12;

      if (v11 != 0x7FFFFFFFFFFFFFFFLL)
      {
        double v14 = [MEMORY[0x1E4F28D58] indexPathForItem:v13 inSection:0];
        double v15 = [MEMORY[0x1E4F28D58] indexPathForItem:v11 inSection:0];
        if (v14)
        {
          [(CKCoreChatController *)self contentOffsetForIndexPath:v14 viewToAlignWith:0 allowOverScroll:0 scrollPosition:1];
          -[CKChatController setContentOffsetForFirstUnreadMessage:](self, "setContentOffsetForFirstUnreadMessage:");
        }
        if (v15) {
          [(CKChatController *)self setIndexPathForFirstUnreadMessage:v15];
        }
        if (IMOSLoggingEnabled())
        {
          double v16 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
          {
            int v17 = 138412546;
            double v18 = v14;
            __int16 v19 = 2112;
            objc_super v20 = v15;
            _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "Determined index path for first unread message: scrollTarget(%@) and highlightTarget(%@)", (uint8_t *)&v17, 0x16u);
          }
        }
      }
    }
  }
}

- (void)_updateCatchUpButtonVisibilityResumingFromBackground:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  if (CKIsCatchUpEnabled()
    && ![(CKChatController *)self didComputeInitiallyVisibleIndexPaths])
  {
    BOOL v47 = v3;
    id v52 = [(CKChatController *)self collectionView];
    [v52 bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    id obja = v11;
    [v52 adjustedContentInset];
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    [(CKChatController *)self _currentlyVisibleBannerHeight];
    double v21 = v20;
    double v50 = [v52 collectionViewLayout];
    uint64_t v49 = objc_msgSend(v50, "layoutAttributesForElementsInRect:", v6 + v15, v8 + v13 + v21, v10 - (v15 + v19), *(double *)&obja - (v17 + v13 + v21));
    [(CKChatController *)self setDidComputeInitiallyVisibleIndexPaths:1];
    [(CKChatController *)self _updateIndexPathForFirstUnreadMessage];
    uint64_t v51 = [(CKChatController *)self indexPathForFirstUnreadMessage];
    if (v51)
    {
      uint64_t v22 = [v52 numberOfItemsInSection:0];
      if ([v51 item] <= v22)
      {
        [(CKChatController *)self setIsCatchUpButtonNeededOnFirstLoad:1];
        id v25 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        long long v59 = 0u;
        long long v60 = 0u;
        long long v61 = 0u;
        long long v62 = 0u;
        id v26 = v49;
        char v27 = 0;
        uint64_t v28 = [v26 countByEnumeratingWithState:&v59 objects:v65 count:16];
        if (v28)
        {
          uint64_t v29 = *(void *)v60;
          do
          {
            for (uint64_t i = 0; i != v28; ++i)
            {
              if (*(void *)v60 != v29) {
                objc_enumerationMutation(v26);
              }
              double v31 = *(void **)(*((void *)&v59 + 1) + 8 * i);
              uint64_t v32 = [v31 indexPath];
              [v25 addObject:v32];

              id v33 = [(CKChatController *)self indexPathForFirstUnreadMessage];
              id v34 = [v31 indexPath];
              LOBYTE(v32) = [v33 isEqual:v34];

              v27 |= v32;
            }
            uint64_t v28 = [v26 countByEnumeratingWithState:&v59 objects:v65 count:16];
          }
          while (v28);
        }

        double v35 = [(CKCoreChatController *)self collectionViewController];
        double v48 = [v35 chatItems];

        unint64_t v36 = [v25 count];
        if ([v48 count] <= v36)
        {
          id v37 = v48;
        }
        else
        {
          objc_msgSend(v48, "subarrayWithRange:", objc_msgSend(v48, "count") - v36, v36);
          id v37 = (id)objc_claimAutoreleasedReturnValue();
        }
        long long v57 = 0u;
        long long v58 = 0u;
        long long v55 = 0u;
        long long v56 = 0u;
        id obj = v37;
        uint64_t v38 = [obj countByEnumeratingWithState:&v55 objects:v64 count:16];
        if (v38)
        {
          uint64_t v39 = *(void *)v56;
          while (2)
          {
            for (uint64_t j = 0; j != v38; ++j)
            {
              if (*(void *)v56 != v39) {
                objc_enumerationMutation(obj);
              }
              uint64_t v41 = *(void **)(*((void *)&v55 + 1) + 8 * j);
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                double v42 = [v41 message];
                if ([v42 isFromMe])
                {
                  if (IMOSLoggingEnabled())
                  {
                    uint64_t v46 = OSLogHandleForIMFoundationCategory();
                    if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
                    {
                      *(_WORD *)CGAffineTransform buf = 0;
                      _os_log_impl(&dword_18EF18000, v46, OS_LOG_TYPE_INFO, "A message that I sent is visible on screen. Do not show catch up button.", buf, 2u);
                    }
LABEL_42:
                  }
LABEL_43:
                  [(CKChatController *)self setIsCatchUpButtonNeededOnFirstLoad:0];

                  goto LABEL_44;
                }
                if (v27)
                {
                  BOOL v43 = [v42 guid];
                  char v44 = [(CKChatController *)self firstUnreadMessageGUID];
                  int v45 = [v43 isEqualToString:v44];

                  if (v45)
                  {
                    if (IMOSLoggingEnabled())
                    {
                      uint64_t v46 = OSLogHandleForIMFoundationCategory();
                      if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
                      {
                        *(_WORD *)CGAffineTransform buf = 0;
                        _os_log_impl(&dword_18EF18000, v46, OS_LOG_TYPE_INFO, "First unread message is visible on screen. Do not show catch up button.", buf, 2u);
                      }
                      goto LABEL_42;
                    }
                    goto LABEL_43;
                  }
                }
              }
            }
            uint64_t v38 = [obj countByEnumeratingWithState:&v55 objects:v64 count:16];
            if (v38) {
              continue;
            }
            break;
          }
        }
LABEL_44:

        [(CKChatController *)self _showCatchUpButtonIfNeededResumingFromBackground:v47];
      }
      else
      {
        [(CKChatController *)self setIsCatchUpButtonNeededOnFirstLoad:0];
        double v23 = IMLogHandleForCategory();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          [(CKChatController *)v51 _updateCatchUpButtonVisibilityResumingFromBackground:v23];
        }
      }
    }
    else if (IMOSLoggingEnabled())
    {
      double v24 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
      }
    }
  }
}

- (BOOL)_wantsCatchUpAffordance
{
  int v3 = CKIsCatchUpEnabled();
  if (v3)
  {
    objc_super v4 = [(CKChatController *)self catchUpButton];

    if (v4)
    {
      LOBYTE(v3) = 1;
    }
    else
    {
      double v5 = [(CKChatController *)self indexPathForFirstUnreadMessage];

      if (v5)
      {
        LOBYTE(v3) = [(CKChatController *)self isCatchUpButtonNeededOnFirstLoad];
      }
      else
      {
        LOBYTE(v3) = 0;
      }
    }
  }
  return v3;
}

- (BOOL)isSafeToMarkAsRead
{
  int v3 = [(CKCoreChatController *)self conversation];
  objc_super v4 = [v3 chat];

  if (v4 && ![v4 allowedByScreenTime])
  {
    BOOL v7 = 0;
  }
  else
  {
    v9.receiver = self;
    v9.super_class = (Class)CKChatController;
    unsigned __int8 v5 = [(CKCoreChatController *)&v9 isSafeToMarkAsRead];
    if (+[CKStarkManager isCarPlayConnected]) {
      BOOL v6 = !CKIsScreenLocked();
    }
    else {
      LOBYTE(v6) = 1;
    }
    BOOL v7 = v5 & v6;
  }

  return v7;
}

- (void)_markAsReadIfNecessary
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 _markAsReadIfNecessary];
  if ([(CKChatController *)self isSafeToMarkAsRead])
  {
    if (![(CKChatController *)self _shouldShowReadRecieptAlert])
    {
      if (CKIsRunningUnitTests()) {
        [(CKChatController *)self _askToTurnOnSMSRelayIfNeeded];
      }
      else {
        [(CKChatController *)self performSelector:sel__askToTurnOnSMSRelayIfNeeded withObject:0 afterDelay:2.0];
      }
    }
    int v3 = [(CKChatController *)self catchUpButton];

    if (v3) {
      [(CKChatController *)self _updateIndexPathForFirstUnreadMessage];
    }
    [(CKChatController *)self _askToTurnOnReadReceiptsIfNeeded];
  }
}

- (void)_markVisibleMentionsAsRead
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  int v3 = [MEMORY[0x1E4F1CA48] array];
  objc_super v4 = [(CKCoreChatController *)self collectionViewController];
  unsigned __int8 v5 = [v4 chatItems];

  if ([v5 count])
  {
    BOOL v6 = [(CKChatController *)self collectionView];
    BOOL v7 = [v6 indexPathsForVisibleItems];

    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v8 = v7;
    uint64_t v9 = [v8 countByEnumeratingWithState:&v28 objects:v33 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v29;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v29 != v11) {
            objc_enumerationMutation(v8);
          }
          unint64_t v13 = [*(id *)(*((void *)&v28 + 1) + 8 * v12) item];
          if (v13 < [v5 count])
          {
            double v14 = [v5 objectAtIndex:v13];
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              double v15 = [v14 message];
              if ([v15 hasMention]) {
                [v3 addObject:v15];
              }
            }
          }
          ++v12;
        }
        while (v10 != v12);
        uint64_t v10 = [v8 countByEnumeratingWithState:&v28 objects:v33 count:16];
      }
      while (v10);
    }
  }
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v16 = v3;
  uint64_t v17 = [v16 countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v25;
    do
    {
      uint64_t v20 = 0;
      do
      {
        if (*(void *)v25 != v19) {
          objc_enumerationMutation(v16);
        }
        double v21 = *(void **)(*((void *)&v24 + 1) + 8 * v20);
        uint64_t v22 = [(CKCoreChatController *)self chat];
        double v23 = [v21 guid];
        [v22 removeMentionMessageGUID:v23];

        ++v20;
      }
      while (v18 != v20);
      uint64_t v18 = [v16 countByEnumeratingWithState:&v24 objects:v32 count:16];
    }
    while (v18);
  }
}

- (void)_retryGroupPhotoUploadIfNecessary
{
  id v2 = [(CKCoreChatController *)self chat];
  [v2 retryGroupPhotoUploadIfNecessary];
}

- (BOOL)_shouldShowReadRecieptAlert
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v2 = [(CKCoreChatController *)self conversation];
  int v3 = [v2 chat];
  objc_super v4 = [v3 lastIncomingMessage];

  BOOL v5 = CKReadReceiptSettingsConfirmed();
  BOOL v6 = CKReadReceiptsEnabled();
  BOOL v7 = objc_msgSend(v4, "__ck_service");
  int v8 = [v7 supportsCapability:*MEMORY[0x1E4F6E0C8]];

  int v9 = [v4 isRead];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v10 = objc_msgSend(MEMORY[0x1E4F6BBD8], "sharedInstance", 0);
  uint64_t v11 = objc_msgSend(v4, "__ck_service");
  uint64_t v12 = [v10 accountsForService:v11];

  uint64_t v13 = [v12 countByEnumeratingWithState:&v19 objects:v33 count:16];
  if (v13)
  {
    uint64_t v14 = *(void *)v20;
    while (2)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v20 != v14) {
          objc_enumerationMutation(v12);
        }
        if ([*(id *)(*((void *)&v19 + 1) + 8 * i) _isUsableForSending])
        {
          LODWORD(v13) = 1;
          goto LABEL_11;
        }
      }
      uint64_t v13 = [v12 countByEnumeratingWithState:&v19 objects:v33 count:16];
      if (v13) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  int v16 = v9 ^ 1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 67110144;
      int v24 = v13;
      __int16 v25 = 1024;
      int v26 = !v5;
      __int16 v27 = 1024;
      int v28 = !v6;
      __int16 v29 = 1024;
      int v30 = v8;
      __int16 v31 = 1024;
      int v32 = v16;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "lastMessageServiceIsActive: %{BOOL}d, readReceiptSettingsNotConfirmed: %{BOOL}d, readReceiptSettingsNotEnabled: %{BOOL}d, lastSupportsReadReceipts: %{BOOL}d, lastMessageNotRead: %{BOOL}d", buf, 0x20u);
    }
  }
  return v8 & ~(v5 | ~(_BYTE)v13 | v6) & v16;
}

- (void)_askToTurnOnReadReceiptsIfNeeded
{
  if ([(CKChatController *)self _shouldShowReadRecieptAlert])
  {
    CKSetReadReceiptSettingsConfirmed(1);
    if (CKIsRunningUnitTests())
    {
      [(CKChatController *)self _confirmReadReceiptSettings];
    }
    else
    {
      [MEMORY[0x1E4FBA8A8] cancelPreviousPerformRequestsWithTarget:self selector:sel__confirmReadReceiptSettings object:0];
      [(CKChatController *)self performSelector:sel__confirmReadReceiptSettings withObject:0 afterDelay:2.0];
    }
  }
}

- (void)_confirmReadReceiptSettings
{
  int v3 = CKFrameworkBundle();
  objc_super v4 = [v3 localizedStringForKey:@"READ_RECEIPTS_SETTINGS_CONFIRM_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  BOOL v5 = CKFrameworkBundle();
  BOOL v6 = [v5 localizedStringForKey:@"READ_RECEIPTS_SETTINGS_CONFIRM_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  BOOL v7 = +[CKAlertController alertControllerWithTitle:v4 message:v6 preferredStyle:1];

  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __47__CKChatController__confirmReadReceiptSettings__block_invoke;
  aBlock[3] = &unk_1E5620C40;
  void aBlock[4] = self;
  int v8 = _Block_copy(aBlock);
  int v9 = CKFrameworkBundle();
  uint64_t v10 = [v9 localizedStringForKey:@"NOT_NOW" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __47__CKChatController__confirmReadReceiptSettings__block_invoke_2;
  v19[3] = &unk_1E5621380;
  id v11 = v8;
  id v20 = v11;
  uint64_t v12 = +[CKAlertAction actionWithTitle:v10 style:1 handler:v19];
  [v7 addAction:v12];

  uint64_t v13 = CKFrameworkBundle();
  uint64_t v14 = [v13 localizedStringForKey:@"ALLOW" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __47__CKChatController__confirmReadReceiptSettings__block_invoke_3;
  v17[3] = &unk_1E5621380;
  id v18 = v11;
  id v15 = v11;
  int v16 = +[CKAlertAction actionWithTitle:v14 style:0 handler:v17];
  [v7 addAction:v16];

  [v7 presentFromViewController:self animated:1 completion:0];
}

void __47__CKChatController__confirmReadReceiptSettings__block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) _askToTurnOnReadReceiptsIfNeeded];
  id v2 = +[CKUIBehavior sharedBehaviors];
  char v3 = [v2 canPresentOverKeyboard];

  if ((v3 & 1) == 0)
  {
    objc_super v4 = *(void **)(a1 + 32);
    [v4 becomeFirstResponder];
  }
}

uint64_t __47__CKChatController__confirmReadReceiptSettings__block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __47__CKChatController__confirmReadReceiptSettings__block_invoke_3(uint64_t a1)
{
  CKSetReadReceiptsEnabled(1);
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v2();
}

- (void)_askToTurnOnSMSRelayIfNeeded
{
  char v3 = [MEMORY[0x1E4F6BDC0] smsService];
  objc_super v4 = IMPreferredAccountForService();

  BOOL v5 = [MEMORY[0x1E4F61740] sharedInstance];
  int v6 = [v5 supportsMMS];

  if ((CKSMSRelaySettingsConfirmed() & 1) == 0)
  {
    BOOL v7 = (void *)MEMORY[0x1E4F6BDC0];
    int v8 = [(CKCoreChatController *)self conversation];
    int v9 = [v8 lastAddressedHandle];
    uint64_t v10 = [(CKCoreChatController *)self conversation];
    id v11 = [v10 lastAddressedSIMID];
    if ((([v7 iMessageEnabledForSenderLastAddressedHandle:v9 simID:v11] ^ 1 | v6) & 1) != 0
      || ![v4 isSMSRelayCapable])
    {
    }
    else
    {
      char v12 = [v4 allowsSMSRelay];

      if ((v12 & 1) == 0)
      {
        [MEMORY[0x1E4FBA8A8] cancelPreviousPerformRequestsWithTarget:self selector:sel__askToTurnOnSMSRelayIfNeeded object:0];
        CKSetSMSRelaySettingsConfirmed(1);
        uint64_t v13 = +[CKUIBehavior sharedBehaviors];
        char v14 = [v13 canPresentOverKeyboard];

        char v36 = v14;
        if (CKIsRunningInMacCatalyst())
        {
          id v15 = CKFrameworkBundle();
          uint64_t v16 = [v15 localizedStringForKey:@"SMS_RELAY_ALERT_TITLE_MAC" value:&stru_1EDE4CA38 table:@"ChatKit"];
        }
        else
        {
          uint64_t v17 = NSString;
          id v18 = CKFrameworkBundle();
          long long v19 = [v18 localizedStringForKey:@"SMS_RELAY_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          id v20 = [MEMORY[0x1E4F42948] currentDevice];
          long long v21 = [v20 localizedModel];
          id v15 = objc_msgSend(v17, "stringWithFormat:", v19, v21);

          long long v22 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v23 = [v22 userInterfaceLayoutDirection];

          if (v23 == 1) {
            int v24 = @"\u200F";
          }
          else {
            int v24 = @"\u200E";
          }
          uint64_t v16 = [(__CFString *)v24 stringByAppendingString:v15];
        }
        __int16 v25 = (void *)v16;

        int v26 = CKFrameworkBundle();
        __int16 v27 = [v26 localizedStringForKey:@"SMS_RELAY_ALERT_BODY" value:&stru_1EDE4CA38 table:@"ChatKit"];

        double v35 = v25;
        int v28 = +[CKAlertController alertControllerWithTitle:v25 message:v27 preferredStyle:1];
        __int16 v29 = CKFrameworkBundle();
        int v30 = [v29 localizedStringForKey:@"SMS_RELAY_NOT_NOW" value:&stru_1EDE4CA38 table:@"ChatKit"];
        v41[0] = MEMORY[0x1E4F143A8];
        v41[1] = 3221225472;
        v41[2] = __48__CKChatController__askToTurnOnSMSRelayIfNeeded__block_invoke;
        v41[3] = &unk_1E5622868;
        char v42 = v36;
        void v41[4] = self;
        __int16 v31 = +[CKAlertAction actionWithTitle:v30 style:0 handler:v41];
        [v28 addAction:v31];

        int v32 = CKFrameworkBundle();
        id v33 = [v32 localizedStringForKey:@"SMS_RELAY_TURN_ON" value:&stru_1EDE4CA38 table:@"ChatKit"];
        v37[0] = MEMORY[0x1E4F143A8];
        v37[1] = 3221225472;
        v37[2] = __48__CKChatController__askToTurnOnSMSRelayIfNeeded__block_invoke_2;
        v37[3] = &unk_1E5622890;
        char v40 = v36;
        id v38 = v4;
        uint64_t v39 = self;
        uint64_t v34 = +[CKAlertAction actionWithTitle:v33 style:0 handler:v37];
        [v28 addAction:v34];

        if ((v36 & 1) == 0)
        {
          [(CKChatController *)self setTargetFirstResponder:0];
          [(CKChatController *)self becomeFirstResponder];
        }
        [v28 presentFromViewController:self animated:1 completion:0];
      }
    }
  }
}

uint64_t __48__CKChatController__askToTurnOnSMSRelayIfNeeded__block_invoke(uint64_t result)
{
  if (!*(unsigned char *)(result + 40)) {
    return [*(id *)(result + 32) becomeFirstResponder];
  }
  return result;
}

uint64_t __48__CKChatController__askToTurnOnSMSRelayIfNeeded__block_invoke_2(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) enrollSelfDeviceInSMSRelay];
  if (!*(unsigned char *)(a1 + 48))
  {
    char v3 = *(void **)(a1 + 40);
    return [v3 becomeFirstResponder];
  }
  return result;
}

- (void)keyboardWillShow:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(CKChatController *)self view];
  uint64_t v6 = [v5 window];
  if (v6)
  {
    BOOL v7 = (void *)v6;
    int v8 = [(CKChatController *)self view];
    int v9 = [v8 window];
    uint64_t v10 = [MEMORY[0x1E4F42738] sharedApplication];
    id v11 = [v10 keyWindow];

    if (v9 != v11) {
      goto LABEL_14;
    }
  }
  else
  {
  }
  char v12 = [(CKChatController *)self pickerContainerAccessoryView];

  if (!v12)
  {
    uint64_t v13 = [(CKChatController *)self collectionView];
    v33.receiver = self;
    v33.super_class = (Class)CKChatController;
    [(CKScrollViewController *)&v33 keyboardWillShow:v4];
    if (![(CKChatController *)self suppressEntryViewKeyboardNotifications])
    {
      char v14 = [v4 userInfo];
      id v15 = [v14 objectForKeyedSubscript:*MEMORY[0x1E4F43AF0]];
      [v15 CGRectValue];
      double v17 = v16;

      id v18 = [(CKChatController *)self entryView];
      [v18 frame];
      double v20 = v19;

      if (v17 > v20)
      {
        long long v21 = [(CKChatController *)self entryView];
        [v21 setKeyboardVisible:1];

        long long v22 = [(CKCoreChatController *)self inputController];
        char v23 = [v22 isInputViewVisible];

        if ((v23 & 1) == 0)
        {
          int v24 = [(CKChatController *)self entryView];
          [v24 clearAppStripSelection];
        }
        uint64_t v25 = [(CKChatController *)self presentedViewController];
        if (v25)
        {
          int v26 = (void *)v25;
          __int16 v27 = [(CKChatController *)self entryView];
          int v28 = [v27 contentView];
          __int16 v29 = [v28 textView];
          int v30 = [v29 isFirstResponder];

          if (v30)
          {
            __int16 v31 = +[CKScrollViewAnimationProperties inheritedAnimation];
            [v13 enforceTranscriptScrollIntentWithAnimationProperties:v31];
          }
        }
      }
    }
    [v13 beginDisablingTranscriptDynamicsForReason:@"KeyboardPresentation"];
    [(CKChatController *)self _updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:v4];
    int v32 = [(CKCoreChatController *)self inputController];
    [v32 chatControllerReceivedKeyboardWillShowNotification:v4];
    [(CKChatController *)self _inheritHiddenKeyboardAppearanceIfNeeded];
    [(CKChatController *)self setSuppressEntryViewKeyboardNotifications:1];
  }
LABEL_14:
}

- (void)keyboardWillHide:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(CKChatController *)self view];
  uint64_t v6 = [v5 window];
  BOOL v7 = [MEMORY[0x1E4F42738] sharedApplication];
  int v8 = [v7 keyWindow];

  if (v6 == v8)
  {
    v18.receiver = self;
    v18.super_class = (Class)CKChatController;
    [(CKScrollViewController *)&v18 keyboardWillHide:v4];
    if (CKShowAppStripInEntryView()
      && ((objc_opt_respondsToSelector() & 1) == 0
       || ([MEMORY[0x1E4F42B08] candidateDisplayIsExtended] & 1) == 0)
      && ![(CKChatController *)self suppressEntryViewKeyboardNotifications])
    {
      int v9 = [(CKChatController *)self entryView];
      int v10 = [v9 isKeyboardVisible];

      if (v10)
      {
        id v11 = [(CKChatController *)self entryView];
        [v11 setKeyboardVisible:0];

        if (![(CKChatController *)self appModalIsDisplayed])
        {
          char v12 = [(CKChatController *)self entryView];
          [v12 clearAppStripSelection];
        }
        uint64_t v13 = +[CKUIBehavior sharedBehaviors];
        int v14 = [v13 isAppStripInKeyboard];

        if (v14)
        {
          v17[0] = MEMORY[0x1E4F143A8];
          v17[1] = 3221225472;
          v17[2] = __37__CKChatController_keyboardWillHide___block_invoke;
          v17[3] = &unk_1E5620C40;
          void v17[4] = self;
          [MEMORY[0x1E4F42FF0] animateWithDuration:v17 animations:0.5];
        }
        id v15 = [(CKChatController *)self messageEditingViewController];

        if (![(CKChatController *)self isTransitioningSize] && !v15) {
          [(CKChatController *)self updateAppStripVisibility:1 animated:1];
        }
      }
    }
    [(CKChatController *)self _updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:v4];
    double v16 = [(CKCoreChatController *)self inputController];
    [v16 chatControllerReceivedKeyboardWillHideNotification:v4];
    [(CKChatController *)self setSuppressEntryViewKeyboardNotifications:1];
  }
}

void __37__CKChatController_keyboardWillHide___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) entryView];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) entryView];
  [v3 layoutIfNeeded];
}

- (void)keyboardDidShow:(id)a3
{
  v7.receiver = self;
  v7.super_class = (Class)CKChatController;
  id v4 = a3;
  [(CKScrollViewController *)&v7 keyboardDidShow:v4];
  if ([(CKChatController *)self _appearState] != 3) {
    [(CKChatController *)self setSuppressEntryViewKeyboardNotifications:0];
  }
  BOOL v5 = [(CKCoreChatController *)self inputController];
  [v5 chatControllerReceivedKeyboardDidShowNotification:v4];

  uint64_t v6 = [(CKChatController *)self collectionView];
  [v6 endDisablingTranscriptDynamicsForReason:@"KeyboardPresentation"];
}

- (void)keyboardDidHide:(id)a3
{
  v8.receiver = self;
  v8.super_class = (Class)CKChatController;
  id v4 = a3;
  [(CKScrollViewController *)&v8 keyboardDidHide:v4];
  if ([(CKChatController *)self _appearState] != 3) {
    [(CKChatController *)self setSuppressEntryViewKeyboardNotifications:0];
  }
  if ([(CKChatController *)self isShowingEmojiKeyboard])
  {
    BOOL v5 = [MEMORY[0x1E4F42B30] sharedInputModeController];
    uint64_t v6 = [(CKChatController *)self savedKeyboardInputMode];
    [v5 setCurrentInputMode:v6];
  }
  objc_super v7 = [(CKCoreChatController *)self inputController];
  [v7 chatControllerReceivedKeyboardDidHideNotification:v4];
}

- (void)keyboardDidChangeFrame:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(CKChatController *)self pickerContainerAccessoryView];

  if (!v5)
  {
    v6.receiver = self;
    v6.super_class = (Class)CKChatController;
    [(CKScrollViewController *)&v6 keyboardDidChangeFrame:v4];
    [(CKChatController *)self _updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:v4];
  }
}

- (CGRect)screenFrameForNotification:(id)a3
{
  id v4 = a3;
  if (CKIsAppCardsEnabled())
  {
    BOOL v5 = [(CKChatController *)self entryView];
    objc_super v6 = [v5 entryViewKeyboardLayoutGuide];

    objc_super v7 = [v6 owningView];
    [v6 layoutFrame];
    objc_msgSend(v7, "convertRect:toView:", 0);
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
  }
  else
  {
    v24.receiver = self;
    v24.super_class = (Class)CKChatController;
    [(CKScrollViewController *)&v24 screenFrameForNotification:v4];
    double v9 = v16;
    double v11 = v17;
    double v13 = v18;
    double v15 = v19;
  }

  double v20 = v9;
  double v21 = v11;
  double v22 = v13;
  double v23 = v15;
  result.size.double height = v23;
  result.size.double width = v22;
  result.origin.double y = v21;
  result.origin.double x = v20;
  return result;
}

- (void)contentInsetDidChangeWithAnimationProperties:(id)a3
{
  v5.receiver = self;
  v5.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v5 contentInsetDidChangeWithAnimationProperties:a3];
  id v4 = [(CKChatController *)self messageEditingViewController];
  [v4 transcriptContentInsetsDidChange];
}

- (BOOL)keyboardIsQuickPathing
{
  id v2 = [MEMORY[0x1E4F42B20] activeInstance];
  char v3 = [v2 continuousPathUnderway];

  return v3;
}

- (void)keyboardShouldShowPredictions:(id)a3
{
  if (![(CKScrollViewController *)self isKeyboardVisible]) {
    return;
  }
  id v7 = [(CKCoreChatController *)self inputController];
  if (![v7 isInputViewVisible])
  {
    id v4 = [(CKChatController *)self entryView];
    if ([v4 showsKeyboardPredictionBar])
    {
      objc_super v5 = [MEMORY[0x1E4F42B20] activeInstance];
      char v6 = [v5 isMinimized];

      if ((v6 & 1) == 0)
      {
        [(CKChatController *)self updateAppStripVisibility:0 animated:1];
      }
      return;
    }
  }
}

- (void)keyboardShouldShowCandidates:(id)a3
{
  if ([(CKScrollViewController *)self isKeyboardVisible])
  {
    id v6 = [(CKCoreChatController *)self inputController];
    if ([v6 isInputViewVisible])
    {
    }
    else
    {
      id v4 = [(CKChatController *)self entryView];
      int v5 = [v4 showsKeyboardPredictionBar];

      if (v5)
      {
        [(CKChatController *)self updateAppStripVisibility:0 animated:0];
      }
    }
  }
}

- (void)keyboardWillBeginInteractiveDismissal:(id)a3
{
  id v6 = a3;
  if ([(CKScrollViewController *)self isKeyboardVisible])
  {
    id v4 = [(CKChatController *)self entryView];
    if ([v4 showsKeyboardPredictionBar])
    {
      BOOL v5 = [(CKChatController *)self isShowingEmojiKeyboard];

      if (!v5) {
        [(CKChatController *)self updateAppStripVisibility:1 animated:1];
      }
    }
    else
    {
    }
  }
  [(CKChatController *)self _updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:v6];
}

- (void)keyboardWillChangeFrame:(id)a3
{
  [(CKChatController *)self _updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:a3];
  id v4 = [(CKChatController *)self entryView];
  -[CKChatController updateEntryViewHeightIncludingAppStrip:animated:](self, "updateEntryViewHeightIncludingAppStrip:animated:", [v4 shouldShowAppStrip], 0);
}

- (UIEdgeInsets)bannerInsets
{
  char v3 = [(CKChatController *)self nicknameBanner];

  if (v3)
  {
    id v4 = [(CKChatController *)self nicknameBanner];
    [v4 bounds];
    double v6 = v5;

    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
  }
  else
  {
    double v6 = *MEMORY[0x1E4F437F8];
    double v7 = *(double *)(MEMORY[0x1E4F437F8] + 8);
    double v8 = *(double *)(MEMORY[0x1E4F437F8] + 16);
    double v9 = *(double *)(MEMORY[0x1E4F437F8] + 24);
  }
  double v10 = v6;
  result.double right = v9;
  result.double bottom = v8;
  result.double left = v7;
  result.double top = v10;
  return result;
}

- (UIEdgeInsets)additionalSafeAreaInsets
{
  v22.receiver = self;
  v22.super_class = (Class)CKChatController;
  [(CKChatController *)&v22 additionalSafeAreaInsets];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  if (CKIsRunningInMacCatalyst())
  {
    [(CKChatController *)self preferredMacToolbarHeight];
    double v12 = v11;
    double v13 = +[CKUIBehavior sharedBehaviors];
    [v13 macAppKitToolbarHeight];
    double v15 = v14;

    if (v12 > v15)
    {
      double v16 = +[CKUIBehavior sharedBehaviors];
      [v16 macAppKitToolbarHeight];
      double v4 = v12 - v17;
    }
  }
  double v18 = v4;
  double v19 = v6;
  double v20 = v8;
  double v21 = v10;
  result.double right = v21;
  result.double bottom = v20;
  result.double left = v19;
  result.double top = v18;
  return result;
}

- (UIEdgeInsets)macToolbarInsets
{
  double v3 = (double *)MEMORY[0x1E4F437F8];
  double v4 = *(double *)(MEMORY[0x1E4F437F8] + 8);
  double v5 = *(double *)(MEMORY[0x1E4F437F8] + 16);
  double v6 = *(double *)(MEMORY[0x1E4F437F8] + 24);
  double v7 = +[CKUIBehavior sharedBehaviors];
  int v8 = [v7 useMacToolbar];

  if (v8)
  {
    [(CKChatController *)self preferredMacToolbarHeight];
    double v10 = v9;
    double v11 = +[CKUIBehavior sharedBehaviors];
    [v11 macAppKitToolbarHeight];
    if (v10 > v12)
    {
      [(CKChatController *)self preferredMacToolbarHeight];
      double v15 = v16;
    }
    else
    {
      double v13 = +[CKUIBehavior sharedBehaviors];
      [v13 macAppKitToolbarHeight];
      double v15 = v14;
    }
  }
  else
  {
    double v15 = *v3;
  }
  double v17 = v15;
  double v18 = v4;
  double v19 = v5;
  double v20 = v6;
  result.double right = v20;
  result.double bottom = v19;
  result.double left = v18;
  result.double top = v17;
  return result;
}

- (double)minimumBottomInset
{
  double v3 = [(CKChatController *)self footerViewController];
  double v4 = v3;
  if (!v3)
  {
    if ([(CKChatController *)self inputAccessoryViewControllerEnabled])
    {
      int v8 = [(CKChatController *)self inputAccessoryViewController];
      double v5 = [v8 view];

      if (v5)
      {
LABEL_5:
        [v5 frame];
        double Height = CGRectGetHeight(v14);
        goto LABEL_8;
      }
    }
    else
    {
      double v5 = [(CKChatController *)self inputAccessoryView];
      if (v5) {
        goto LABEL_5;
      }
    }
    double Height = 0.0;
LABEL_8:
    double v9 = +[CKUIBehavior sharedBehaviors];
    if ([v9 transcriptMinBottomInsetIsEntryViewHeight])
    {
      double v10 = [(CKChatController *)self entryView];
      double v11 = [v10 window];

      if (!v11) {
        goto LABEL_12;
      }
      double v9 = [(CKChatController *)self entryView];
      [v9 frame];
      double Height = v12;
    }

    goto LABEL_12;
  }
  double v5 = [v3 view];
  [v5 frame];
  double Height = v6;
LABEL_12:

  return Height;
}

- (double)topInsetPadding
{
  double v3 = [(CKChatController *)self nicknameBanner];

  if (v3)
  {
    v26.receiver = self;
    v26.super_class = (Class)CKChatController;
    [(CKScrollViewController *)&v26 topInsetPadding];
    double v5 = v4;
    double v6 = [(CKChatController *)self nicknameBanner];
    [v6 bounds];
    double v7 = v5 + CGRectGetHeight(v27);
  }
  else
  {
    if (![(CKChatController *)self _anySuggestionPresenterWantsToShowBanner]) {
      goto LABEL_6;
    }
    int v8 = [(CKChatController *)self collectionView];
    [v8 contentInset];
    double v10 = v9;
    double v12 = v11;

    double v13 = [(CKChatController *)self collectionView];
    [v13 bounds];
    double v15 = v14 - v10 - v12;

    double v16 = [(CKChatController *)self collectionView];
    [v16 contentSize];
    double v18 = v17;

    if (v18 < v15)
    {
      v25.receiver = self;
      v25.super_class = (Class)CKChatController;
      [(CKScrollViewController *)&v25 topInsetPadding];
      double v20 = v19;
      [(CKChatController *)self suggestionBannerHeight];
      return v20 + v21;
    }
    else
    {
LABEL_6:
      v24.receiver = self;
      v24.super_class = (Class)CKChatController;
      [(CKScrollViewController *)&v24 topInsetPadding];
      return v22;
    }
  }
  return v7;
}

- (id)_animationPropertiesToUseForUpdateAfterHoldForReason:(id)a3
{
  id v3 = a3;
  if ([v3 isEqualToString:@"ThrowAnimation"])
  {
    double v4 = 0.3;
LABEL_5:
    uint64_t v5 = +[CKScrollViewAnimationProperties animatedWithDuration:0 animationCurve:v4];
    goto LABEL_10;
  }
  if ([v3 isEqualToString:@"MainTranscriptWhileInlineReplyControllerVisible"]
    || ![v3 isEqualToString:@"ViewControllerNotVisible"]
    && ![v3 isEqualToString:@"NotificationChatControllerFixedLayout"]
    && ![v3 isEqualToString:@"InlineReplyAnimateOut"]
    && ![v3 isEqualToString:@"ViewControllerSizeTransition"])
  {
    double v4 = 0.5;
    goto LABEL_5;
  }
  uint64_t v5 = +[CKScrollViewAnimationProperties unanimated];
LABEL_10:
  double v6 = (void *)v5;

  return v6;
}

- (id)_animationPropertiesToUseInUpdateForReasons:(id)a3 followingHoldForReason:(id)a4
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  int v8 = [(CKScrollViewController *)self activeKeyboardAppearanceAnimationProperties];

  if (v8)
  {
    double v9 = [(CKScrollViewController *)self activeKeyboardAppearanceAnimationProperties];
    double v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v18 = 138412546;
      double v19 = v9;
      __int16 v20 = 2112;
      id v21 = v7;
      double v11 = "Using active keyboard appearance animation properties %@ following hold for reason: %@";
LABEL_7:
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, v11, (uint8_t *)&v18, 0x16u);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  if (v7)
  {
    double v9 = [(CKChatController *)self _animationPropertiesToUseForUpdateAfterHoldForReason:v7];
    double v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v18 = 138412546;
      double v19 = v9;
      __int16 v20 = 2112;
      id v21 = v7;
      double v11 = "Using animation properties %@ following hold for reason: %@";
      goto LABEL_7;
    }
LABEL_8:

    goto LABEL_9;
  }
  if ([v6 count] == 1)
  {
    double v10 = [v6 anyObject];
    double v9 = [v10 animationProperties];
    double v13 = IMLogHandleForCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      double v14 = [v10 reasonType];
      int v18 = 138412546;
      double v19 = v9;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "Using animation properties %@ following update for reasonType: %@", (uint8_t *)&v18, 0x16u);
    }
    goto LABEL_8;
  }
  unint64_t v15 = [v6 count];
  double v16 = IMLogHandleForCategory();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);
  if (v15 < 2)
  {
    if (v17) {
      -[CKChatController _animationPropertiesToUseInUpdateForReasons:followingHoldForReason:]();
    }
  }
  else if (v17)
  {
    -[CKChatController _animationPropertiesToUseInUpdateForReasons:followingHoldForReason:]();
  }

  double v9 = +[CKScrollViewAnimationProperties unanimated];
LABEL_9:

  return v9;
}

- (void)scrollGeometryIsUpdatingForReasons:(id)a3 followingHoldForReason:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v10 = [(CKChatController *)self _animationPropertiesToUseInUpdateForReasons:v7 followingHoldForReason:v6];
  BOOL v8 = -[CKScrollViewController scrollGeometryContentInsetIsUpdatingForReasons:followingHoldForReason:withAnimationProperties:](self, "scrollGeometryContentInsetIsUpdatingForReasons:followingHoldForReason:withAnimationProperties:", v7, v6);

  if (v8)
  {
    double v9 = [(CKChatController *)self collectionView];
    [v9 enforceTranscriptScrollIntentWithAnimationProperties:v10];
  }
}

- (id)progressBar
{
  v24[4] = *MEMORY[0x1E4F143B8];
  v23.receiver = self;
  v23.super_class = (Class)CKChatController;
  id v3 = [(CKCoreChatController *)&v23 progressBar];
  uint64_t v4 = [(CKChatController *)self _progressBarHostView];
  uint64_t v5 = (void *)v4;
  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    id v7 = [v3 superview];

    if (v7 != v5)
    {
      [v3 removeFromSuperview];
      [v5 addSubview:v3];
      [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
      int v18 = (void *)MEMORY[0x1E4F28DC8];
      uint64_t v22 = [v3 leadingAnchor];
      id v21 = [v5 leadingAnchor];
      __int16 v20 = [v22 constraintEqualToAnchor:v21];
      v24[0] = v20;
      double v19 = [v3 trailingAnchor];
      BOOL v8 = [v5 trailingAnchor];
      double v9 = [v19 constraintEqualToAnchor:v8];
      v24[1] = v9;
      id v10 = [v3 bottomAnchor];
      double v11 = [v5 bottomAnchor];
      double v12 = [v10 constraintEqualToAnchor:v11];
      v24[2] = v12;
      double v13 = [v3 heightAnchor];
      [v3 frame];
      unint64_t v15 = [v13 constraintEqualToConstant:v14];
      v24[3] = v15;
      double v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:v24 count:4];
      [v18 activateConstraints:v16];

      [v5 setNeedsLayout];
      [v5 layoutIfNeeded];
    }
  }

  return v3;
}

- (id)_progressBarHostView
{
  if (CKIsRunningInMacCatalyst())
  {
    id v3 = [(CKChatController *)self macRecipientsController];
    uint64_t v4 = [v3 view];
  }
  else
  {
    uint64_t v5 = [(CKChatController *)self navigationItem];
    id v3 = [v5 navigationBar];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      BOOL v6 = [(CKChatController *)self navigationItem];
      id v7 = [v6 titleView];

      goto LABEL_7;
    }
    uint64_t v4 = [v3 _backgroundView];
  }
  id v7 = (void *)v4;
LABEL_7:

  return v7;
}

- (void)_updateTitleViewHeight:(id)a3
{
  if (a3)
  {
    id v4 = a3;
    uint64_t v5 = [(CKChatController *)self navbarCanvasViewController];
    id v7 = [v5 view];

    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    objc_msgSend(v7, "sizeThatFits:", *MEMORY[0x1E4F1DB30], *(double *)(MEMORY[0x1E4F1DB30] + 8));
    [v4 setHeight:v6];
  }
}

- (void)_configureTitleView
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  dispatch_assert_queue_V2(MEMORY[0x1E4F14428]);
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)CGAffineTransform buf = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Call made to _configureTitleView for the navigation bar.", buf, 2u);
    }
  }
  id v4 = [(CKChatController *)self navbarCanvasViewController];
  CGRect v27 = [v4 view];

  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      double v6 = [(_CKTranscriptNavigationBarTitleView *)v27 superview];
      *(_DWORD *)CGAffineTransform buf = 138412546;
      int v30 = v27;
      __int16 v31 = 2112;
      int v32 = v6;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "> Currently has NavBarCanvasView instance {%@}. superview={%@}", buf, 0x16u);
    }
  }
  id v7 = objc_alloc_init(_CKTranscriptNavigationBarTitleView);
  [(_UINavigationBarTitleView *)v7 setHideTrailingBarButtons:1];
  [(_UINavigationBarTitleView *)v7 setHideStandardTitle:1];
  [(_UINavigationBarTitleView *)v7 setHideLeadingBarButtons:1];
  [(_UINavigationBarTitleView *)v7 setHideBackButton:1];
  [(CKChatController *)self _updateTitleViewHeight:v7];
  [(_CKTranscriptNavigationBarTitleView *)v7 addSubview:v27];
  if (IMOSLoggingEnabled())
  {
    BOOL v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 138412290;
      int v30 = v7;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "> Created a new Nav Title View {%@}.", buf, 0xCu);
    }
  }
  if (IMOSLoggingEnabled())
  {
    double v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v10 = [(CKChatController *)self navigationItem];
      double v11 = [(CKChatController *)self navigationController];
      *(_DWORD *)CGAffineTransform buf = 138412546;
      int v30 = v10;
      __int16 v31 = 2112;
      int v32 = v11;
      _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "> Ready to apply the titleView on navigationItem {%@}\n currentNavVC={%@}.", buf, 0x16u);
    }
  }
  double v12 = [(CKChatController *)self navigationItem];
  [v12 setTitleView:v7];

  uint64_t v22 = (void *)MEMORY[0x1E4F28DC8];
  objc_super v26 = [(_CKTranscriptNavigationBarTitleView *)v27 leadingAnchor];
  objc_super v25 = [(_CKTranscriptNavigationBarTitleView *)v7 leadingAnchor];
  objc_super v24 = [v26 constraintEqualToAnchor:v25];
  v28[0] = v24;
  objc_super v23 = [(_CKTranscriptNavigationBarTitleView *)v27 trailingAnchor];
  double v13 = [(_CKTranscriptNavigationBarTitleView *)v7 trailingAnchor];
  double v14 = [v23 constraintEqualToAnchor:v13];
  v28[1] = v14;
  unint64_t v15 = [(_CKTranscriptNavigationBarTitleView *)v27 topAnchor];
  double v16 = [(_CKTranscriptNavigationBarTitleView *)v7 topAnchor];
  BOOL v17 = [v15 constraintEqualToAnchor:v16];
  void v28[2] = v17;
  int v18 = [(_CKTranscriptNavigationBarTitleView *)v27 bottomAnchor];
  double v19 = [(_CKTranscriptNavigationBarTitleView *)v7 bottomAnchor];
  __int16 v20 = [v18 constraintEqualToAnchor:v19];
  v28[3] = v20;
  id v21 = [MEMORY[0x1E4F1C978] arrayWithObjects:v28 count:4];
  [v22 activateConstraints:v21];
}

- (void)_setTitle:(id)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  id v23 = a3;
  double v6 = [(CKCoreChatController *)self conversation];
  id v7 = [v6 chat];
  BOOL v8 = [v7 valueForChatProperty:*MEMORY[0x1E4F6BE68]];
  if ([v8 BOOLValue])
  {
    double v9 = [(CKCoreChatController *)self conversation];
    id v10 = [v9 chat];
    BOOL v11 = [v10 isFiltered] != 0;
  }
  else
  {
    BOOL v11 = 0;
  }

  double v12 = [(CKCoreChatController *)self conversation];
  if ([v12 wasDetectedAsSMSSpam]) {
    int v13 = !+[CKConversation isSMSSpamFilteringEnabled];
  }
  else {
    int v13 = 0;
  }

  if ((v11 | v13) == 1)
  {
    double v14 = NSString;
    unint64_t v15 = CKFrameworkBundle();
    double v16 = [v15 localizedStringForKey:@"MAYBE_JUNK" value:&stru_1EDE4CA38 table:@"ChatKit"];
    BOOL v17 = objc_msgSend(v14, "stringWithFormat:", v16, v23);

    int v18 = [MEMORY[0x1E4F42738] sharedApplication];
    uint64_t v19 = [v18 userInterfaceLayoutDirection];

    if (v19 == 1) {
      __int16 v20 = @"\u200F";
    }
    else {
      __int16 v20 = @"\u200E";
    }
    uint64_t v21 = [(__CFString *)v20 stringByAppendingString:v17];

    id v23 = (id)v21;
  }
  uint64_t v22 = [(CKChatController *)self navbarCanvasViewController];
  [v22 updateTitle:v23 animated:v4];
}

- (void)_updateTitleViewLayout
{
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)double v6 = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Updating title view layout in response to font size change", v6, 2u);
    }
  }
  BOOL v4 = [(CKChatController *)self navbarCanvasViewController];
  uint64_t v5 = [v4 conversationIdentityView];
  [v5 setNeedsLayout];
}

- (BOOL)shouldUseNavigationBarCanvasView
{
  return ![(CKChatController *)self wantsChromelessAppearance];
}

- (void)_updateNavigationButtons
{
  id v3 = [(CKChatController *)self navbarCanvasViewController];
  objc_msgSend(v3, "setCanShowBackButtonView:", -[CKChatController _canShowBackButtonView](self, "_canShowBackButtonView"));

  id v4 = [(CKChatController *)self navbarCanvasViewController];
  objc_msgSend(v4, "configureForEditing:", -[CKChatController isEditing](self, "isEditing"));
}

- (BOOL)_canShowBackButtonView
{
  if CKIsRunningInMacCatalyst() || (IMIsRunningInScreenshotTesting_IsolatedTranscriptUI())
  {
    LOBYTE(v3) = 0;
  }
  else
  {
    int v3 = [(CKChatController *)self isCollapsed];
    if (v3) {
      LOBYTE(v3) = [(CKChatController *)self isEditing] ^ 1;
    }
  }
  return v3;
}

- (void)_initializeNavigationBarCanvasViewIfNecessary
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v3 = [(CKChatController *)self navbarCanvasViewController];

  if (!v3)
  {
    id v4 = [CKNavbarCanvasViewController alloc];
    uint64_t v5 = [(CKCoreChatController *)self conversation];
    double v6 = [(CKChatController *)self navigationController];
    id v7 = [(CKNavbarCanvasViewController *)v4 initWithConversation:v5 navigationController:v6 hideLocationIfUnavailable:1];

    [(CKNavbarCanvasViewController *)v7 setCanShowBackButtonView:[(CKChatController *)self _canShowBackButtonView]];
    if ([(CKChatController *)self shouldShowDoneButton]) {
      uint64_t v8 = IMIsRunningInScreenshotTesting_IsolatedTranscriptUI() ^ 1;
    }
    else {
      uint64_t v8 = 0;
    }
    [(CKNavbarCanvasViewController *)v7 setShouldShowDoneButton:v8];
    [(CKNavbarCanvasViewController *)v7 setDelegate:self];
    if (IMOSLoggingEnabled())
    {
      double v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        int v14 = 138412290;
        unint64_t v15 = v7;
        _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "A CKNavbarCanvasViewController instance {%@} was just initialized in _initializeNavigationBarCanvasViewIfNecessary.", (uint8_t *)&v14, 0xCu);
      }
    }
    [(CKChatController *)self setNavbarCanvasViewController:v7];
    id v10 = (void *)MEMORY[0x1E4F1BBA0];
    BOOL v11 = +[CKUIBehavior sharedBehaviors];
    double v12 = [v11 theme];
    int v13 = [v12 contactStyle];
    [v10 setCurrentStyle:v13];
  }
}

- (void)_resizeNavigationBarIfNecessary
{
}

- (void)_resizeNavigationBarIfNecessaryWithAnimation:(BOOL)a3
{
  BOOL v3 = a3;
  if ([(CKChatController *)self shouldUseNavigationBarCanvasView])
  {
    uint64_t v5 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
    double v6 = [(CKChatController *)self navbarCanvasViewController];
    id v7 = [v6 canvasView];

    uint64_t v8 = [(CKChatController *)self navigationItem];
    double v9 = [v8 titleView];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v10 = [(CKChatController *)self navigationItem];
      BOOL v11 = [v10 titleView];
    }
    else
    {
      BOOL v11 = 0;
    }

    [v5 bounds];
    double Height = CGRectGetHeight(v20);
    [v7 _updatedPreferredHeight];
    if (Height != v13)
    {
      int v14 = (void *)MEMORY[0x1E4F42FF0];
      v18[0] = MEMORY[0x1E4F143A8];
      v18[1] = 3221225472;
      void v18[2] = __65__CKChatController__resizeNavigationBarIfNecessaryWithAnimation___block_invoke;
      v18[3] = &unk_1E5620AF8;
      void v18[4] = self;
      id v19 = v11;
      [v14 performWithoutAnimation:v18];
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __65__CKChatController__resizeNavigationBarIfNecessaryWithAnimation___block_invoke_2;
      aBlock[3] = &unk_1E5620C40;
      id v17 = v5;
      unint64_t v15 = (void (**)(void))_Block_copy(aBlock);
      if ((IMIsRunningInUnitTesting() & 1) != 0 || !v3) {
        v15[2](v15);
      }
      else {
        [MEMORY[0x1E4F42FF0] animateWithDuration:0x20000 delay:v15 options:0 animations:0.2 completion:0.0];
      }
    }
  }
}

uint64_t __65__CKChatController__resizeNavigationBarIfNecessaryWithAnimation___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navbarCanvasViewController];
  BOOL v3 = [v2 canvasView];
  [v3 layoutIfNeeded];

  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);

  return [v4 _updateTitleViewHeight:v5];
}

void __65__CKChatController__resizeNavigationBarIfNecessaryWithAnimation___block_invoke_2(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) superview];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) superview];
  [v3 layoutIfNeeded];
}

- (id)currentNavigationBarBasedOnSizeClass
{
  if (CKIsRunningInMessagesTranscriptExtension()
    || ([(CKChatController *)self traitCollection],
        id v3 = objc_claimAutoreleasedReturnValue(),
        uint64_t v4 = [v3 horizontalSizeClass],
        v3,
        v4 != 1))
  {
    uint64_t v5 = [(CKChatController *)self navigationController];
    id v7 = [v5 navigationBar];
  }
  else
  {
    uint64_t v5 = [(CKChatController *)self parentViewController];
    double v6 = [v5 navigationController];
    id v7 = [v6 navigationBar];
  }

  return v7;
}

- (BOOL)shouldShowAvatarViewInNavBarCanvas
{
  if (CKIsRunningInMacCatalyst()) {
    return 0;
  }
  uint64_t v4 = +[CKUIBehavior sharedBehaviors];
  if ([v4 contactPhotosEnabled])
  {
    uint64_t v5 = [MEMORY[0x1E4F42D90] mainScreen];
    [v5 bounds];
    BOOL v6 = _UIUserInterfaceSizeClassForHeight() != 1;
  }
  else
  {
    BOOL v6 = 0;
  }

  id v7 = [(CKChatController *)self splitViewController];

  if (v7) {
    BOOL result = 0;
  }
  else {
    BOOL result = v6;
  }
  if (v7)
  {
    if (v6)
    {
      uint64_t v8 = [(CKChatController *)self splitViewController];
      char v9 = [v8 isCollapsed];

      return v9;
    }
  }
  return result;
}

- (void)navbarCanvasViewController:(id)a3 didTapView:(id)a4
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if ([v6 navBarContext] == 3)
  {
    uint64_t v8 = [(CKChatController *)self messageEditingViewController];
    [v8 dismissAndRejectChanges];
LABEL_3:

    goto LABEL_19;
  }
  if ([v6 navBarContext] == 4)
  {
    [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:0];
    goto LABEL_19;
  }
  id v9 = [v6 backButtonView];

  if (v9 == v7)
  {
    [(CKChatController *)self _backbuttonPressed];
    goto LABEL_19;
  }
  id v10 = [v6 detailsButton];

  if (v10 == v7) {
    goto LABEL_15;
  }
  id v11 = [v6 editCancelButtonView];

  if (v11 == v7)
  {
    [(CKChatController *)self _editCancelButtonPressed];
    goto LABEL_19;
  }
  id v12 = [v6 doneButton];

  if (v12 == v7)
  {
    [(CKChatController *)self _doneButtonPressed];
    goto LABEL_19;
  }
  id v13 = [v6 avatarView];

  if (v13 == v7)
  {
LABEL_15:
    [(CKChatController *)self _detailsButtonPressed];
    goto LABEL_19;
  }
  if ([v6 navBarContext] != 1) {
    goto LABEL_14;
  }
  id v14 = [v6 canvasView];
  if (v14 == v7)
  {

    goto LABEL_25;
  }
  id v15 = [v6 closeButton];

  if (v15 == v7)
  {
LABEL_25:
    int v18 = [(CKChatController *)self inlineReplyController];

    if (v18)
    {
      uint64_t v8 = [(CKChatController *)self inlineReplyController];
      [v8 dismissController];
      goto LABEL_3;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [(CKChatController *)self dismissController];
    }
    goto LABEL_19;
  }
LABEL_14:
  if ([(CKChatController *)self _shouldPresentDetailsViewFromCanvasViewController:v6 tappedView:v7])
  {
    goto LABEL_15;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      id v17 = [v6 backButtonView];
      int v19 = 138412546;
      id v20 = v7;
      __int16 v21 = 2112;
      uint64_t v22 = v17;
      _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "Unknown view (%@) back buttonView is (%@)", (uint8_t *)&v19, 0x16u);
    }
  }
LABEL_19:
}

- (BOOL)_shouldPresentDetailsViewFromCanvasViewController:(id)a3 tappedView:(id)a4
{
  id v5 = a4;
  id v6 = [a3 canvasView];

  return v6 == v5;
}

- (void)navbarCanvasViewControllerLegacyCanvasHeightDidChange:(id)a3
{
  if (![(CKChatController *)self isTransitioningSize])
  {
    [(CKChatController *)self _resizeNavigationBarIfNecessary];
  }
}

- (void)navbarCanvasViewControllerCanvasHeightDidChange:(id)a3
{
  if ([(CKChatController *)self shouldUseNavigationBarCanvasView])
  {
    uint64_t v4 = [(CKChatController *)self navigationItem];
    id v5 = [v4 titleView];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v6 = [(CKChatController *)self navigationItem];
      id v7 = [v6 titleView];
    }
    else
    {
      id v7 = 0;
    }

    [(CKChatController *)self _updateTitleViewHeight:v7];
  }
}

- (void)navbarCanvasViewControllerFaceTimeAudioButtonTapped:(id)a3
{
}

- (void)navbarCanvasViewControllerFaceTimeVideoButtonTapped:(id)a3
{
}

- (void)navbarCanvasViewController:(id)a3 updatedJoinStateWithStyle:(int64_t)a4
{
  id v7 = a3;
  if (CKIsRunningInMacCatalyst())
  {
    id v6 = [(CKChatController *)self navbarCanvasViewController];

    if (v6 == v7 && [(CKChatController *)self macJoinStyle] != a4)
    {
      [(CKChatController *)self setMacJoinStyle:a4];
      [(CKChatController *)self refreshMacToolbar];
    }
  }
}

- (void)navbarCanvasViewController:(id)a3 selectedChipAction:(id)a4
{
  id v5 = a4;
  id v6 = [(CKChatController *)self suggestedActionsHandler];
  [v6 performChipAction:v5];
}

- (void)navbarCanvasViewController:(id)a3 selectedSuggestedReply:(id)a4
{
}

- (BOOL)shouldConfigureForJunkModalInNavbarCanvasViewController:(id)a3
{
  BOOL v4 = [(CKChatController *)self isCollapsed];
  if (v4)
  {
    LOBYTE(v4) = [(CKChatController *)self isShowingOscarChat];
  }
  return v4;
}

- (BOOL)shouldUseMinimumSafeAreas
{
  id v3 = [(CKCoreChatController *)self delegate];
  char v4 = objc_opt_respondsToSelector();

  if ((v4 & 1) == 0) {
    return 0;
  }
  id v5 = [(CKCoreChatController *)self delegate];
  char v6 = [v5 shouldUseMinimumSafeAreas];

  return v6;
}

- (void)keyCommandToggleDetails
{
  if (CKIsRunningInMacCatalyst())
  {
    [(CKChatController *)self _detailsButtonPressed];
  }
  else
  {
    [(CKChatController *)self presentDetailsViewController];
  }
}

- (void)keyCommandToggleUnreadState
{
  id v3 = [(CKCoreChatController *)self chat];
  uint64_t v4 = [v3 unreadMessageCount];

  id v5 = [(CKCoreChatController *)self chat];
  id v6 = v5;
  if (v4) {
    [v5 markAllMessagesAsRead];
  }
  else {
    [v5 markLastMessageAsUnread];
  }
}

- (void)_detailsButtonPressed
{
  if (!IMIsOscarEnabled() || ![(CKChatController *)self isShowingOscarChat])
  {
    [(CKChatController *)self presentDetailsViewController];
  }
}

- (void)presentDetailsViewController
{
}

- (void)presentDetailsViewControllerAnimated:(BOOL)a3
{
  uint64_t v4 = [(CKCoreChatController *)self delegate];
  char v5 = objc_opt_respondsToSelector();

  if (v5)
  {
    id v6 = [(CKCoreChatController *)self delegate];
    int v7 = [v6 hasDetailsNavigationController];

    if (v7)
    {
      uint64_t v8 = [(CKCoreChatController *)self delegate];
      int v9 = [v8 isDetailsNavigationControllerDetached];

      id v10 = [(CKCoreChatController *)self delegate];
      id v11 = v10;
      if (v9) {
        [v10 dismissAndReopenDetailsNavigationController];
      }
      else {
        [v10 dismissDetailsNavigationController];
      }

      return;
    }
  }
  else if (!CKIsRunningInMessagesTranscriptExtension())
  {
    return;
  }

  [(CKChatController *)self _presentDetailsViewControllerAnimated:1];
}

- (void)_presentDetailsViewControllerAnimated:(BOOL)a3
{
  BOOL v3 = a3;
  v29[1] = *MEMORY[0x1E4F143B8];
  char v5 = [(CKCoreChatController *)self conversation];
  id v6 = [v5 chat];
  int v7 = [v6 isStewieChat];

  if (v7)
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v28[0] = 0;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Do not present Details view in Stewie chats", (uint8_t *)v28, 2u);
    }
    goto LABEL_5;
  }
  int v9 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v10 = [v9 isTranscriptSharingEnabled];

  if (v10
    && ([(CKCoreChatController *)self conversation],
        id v11 = objc_claimAutoreleasedReturnValue(),
        [v11 chat],
        id v12 = objc_claimAutoreleasedReturnValue(),
        int v13 = [v12 isStewieSharingChat],
        v12,
        v11,
        v13))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        v28[0] = 0;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Do not present Details view in Transcript Sharing chats", (uint8_t *)v28, 2u);
      }
LABEL_5:
    }
  }
  else
  {
    id v14 = [CKDetailsControllerAdapter alloc];
    id v15 = [(CKCoreChatController *)self conversation];
    uint64_t v16 = [(CKDetailsControllerAdapter *)v14 initWithConversation:v15 delegate:self];

    id v17 = [(CKDetailsControllerAdapter *)v16 detailsController];
    int v18 = [[CKDetailsNavigationController alloc] initWithNavigationBarClass:objc_opt_class() toolbarClass:0];
    [(CKDetailsNavigationController *)v18 setDetailsAdapter:v16];
    if (v17)
    {
      v29[0] = v17;
      int v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v29 count:1];
      [(CKDetailsNavigationController *)v18 setViewControllers:v19];
    }
    else
    {
      [(CKDetailsNavigationController *)v18 setViewControllers:MEMORY[0x1E4F1CBF0]];
    }
    [(CKDetailsNavigationController *)v18 setDelegate:v17];
    id v20 = [(CKCoreChatController *)self delegate];
    [v20 presentDetailsNavigationController:v18];

    __int16 v21 = [(CKCoreChatController *)self conversation];
    int v22 = [v21 isBusinessConversation];

    if (v22)
    {
      uint64_t v23 = [(CKDetailsNavigationController *)v18 view];
      objc_super v24 = [MEMORY[0x1E4F428B8] systemBackgroundColor];
      [v23 setBackgroundColor:v24];
    }
    objc_super v25 = [MEMORY[0x1E4F42948] currentDevice];
    uint64_t v26 = [v25 userInterfaceIdiom];

    if ((v26 & 0xFFFFFFFFFFFFFFFBLL) == 1) {
      [(CKDetailsNavigationController *)v18 setModalPresentationStyle:2];
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      CGRect v27 = +[CKLinkIntentsManager sharedManager];
      [v27 registerDependencyWithDetailsController:v17];
    }
    [(CKChatController *)self presentViewController:v18 animated:v3 completion:0];
  }
}

- (void)_backbuttonPressed
{
  id v3 = [(CKChatController *)self _navigationControllerToPop];
  id v2 = (id)[v3 popViewControllerAnimated:1];
}

- (id)_navigationControllerToPop
{
  if ([(CKChatController *)self isCollapsed]
    && ([(CKChatController *)self navigationController],
        id v3 = objc_claimAutoreleasedReturnValue(),
        [v3 topViewController],
        uint64_t v4 = (CKChatController *)objc_claimAutoreleasedReturnValue(),
        v4,
        v3,
        v4 == self))
  {
    id v6 = [(CKChatController *)self navigationController];
    char v5 = [v6 navigationController];
  }
  else
  {
    char v5 = [(CKChatController *)self navigationController];
  }

  return v5;
}

- (void)dismissDetailsController:(id)a3
{
}

- (void)dismissDetailsControllerAnimated:(BOOL)a3
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __53__CKChatController_dismissDetailsControllerAnimated___block_invoke;
  v3[3] = &unk_1E5620C40;
  void v3[4] = self;
  [(CKChatController *)self dismissViewControllerAnimated:a3 completion:v3];
}

uint64_t __53__CKChatController_dismissDetailsControllerAnimated___block_invoke(uint64_t a1)
{
  id v2 = +[CKLinkIntentsManager sharedManager];
  [v2 purgeDependencies];

  [*(id *)(a1 + 32) setTargetFirstResponder:1];
  id v3 = *(void **)(a1 + 32);

  return [v3 becomeFirstResponder];
}

- (void)_callButtonPressed
{
  id v3 = [(CKCoreChatController *)self conversation];
  uint64_t v4 = [v3 chat];
  id v5 = [v4 conversation];

  -[CKChatController _callButtonPressedWithVideoEnabled:](self, "_callButtonPressedWithVideoEnabled:", [MEMORY[0x1E4F6BCC0] conversationIsVideoCall:v5]);
}

- (void)_callButtonPressedWithVideoEnabled:(BOOL)a3
{
  BOOL v3 = a3;
  id v5 = [(CKCoreChatController *)self conversation];
  id v6 = [v5 chat];
  id v8 = [v6 conversation];

  if (v8)
  {
    if ([v8 state])
    {
      +[CKFaceTimeUtilities showCallControlsForConversation:v8];
      goto LABEL_7;
    }
    int v7 = [(CKCoreChatController *)self chat];
    [v7 joinExistingTUConversation];
  }
  else
  {
    int v7 = [(CKCoreChatController *)self chat];
    [v7 initiateTUConversationWithVideoEnabled:v3];
  }

LABEL_7:
}

- (CNContactPickerViewController)contactPicker
{
  contactPicker = self->_contactPicker;
  if (!contactPicker)
  {
    uint64_t v4 = (CNContactPickerViewController *)objc_alloc_init(MEMORY[0x1E4F1BB80]);
    id v5 = self->_contactPicker;
    self->_contactPicker = v4;

    [(CNContactPickerViewController *)self->_contactPicker setDelegate:self];
    contactPicker = self->_contactPicker;
  }

  return contactPicker;
}

- (BOOL)canPerformAction:(SEL)a3 withSender:(id)a4
{
  id v6 = a4;
  int v7 = [(CKChatController *)self entryView];
  id v8 = [v7 contentView];
  id v9 = [v8 textView];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v10 = objc_opt_new();
LABEL_5:
    [v9 setPasteConfiguration:v10];

    goto LABEL_6;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = [(CKCoreChatController *)self chat];
    uint64_t v12 = [v11 supportsCapabilities:0x8000] ^ 1;

    int v13 = +[CKUIBehavior sharedBehaviors];
    int v10 = [v13 pasteConfigurationDisablingKeyboardStickers:v12];

    goto LABEL_5;
  }
LABEL_6:
  id v14 = [MEMORY[0x1E4F42B88] sharedMenuController];

  if (v14 == v6 || v9 == v6)
  {
    unsigned __int8 v26 = [v9 canPerformAction:a3 withSender:v6];
LABEL_19:
    BOOL v25 = v26;
    goto LABEL_20;
  }
  if (sel_copy_ == a3 || sel_delete_ == a3)
  {
    id v15 = [(CKChatController *)self selectedChatItems];
    uint64_t v16 = [v15 count];

    if (!v16)
    {
      BOOL v25 = 0;
      goto LABEL_20;
    }
  }
  if (sel_delete_ != a3
    || ([(CKChatController *)self selectedChatItems],
        id v17 = objc_claimAutoreleasedReturnValue(),
        uint64_t v18 = [v17 count],
        v17,
        v18 != 1))
  {
LABEL_18:
    v28.receiver = self;
    v28.super_class = (Class)CKChatController;
    unsigned __int8 v26 = [(CKChatController *)&v28 canPerformAction:a3 withSender:v6];
    goto LABEL_19;
  }
  int v19 = [(CKChatController *)self selectedChatItems];
  id v20 = [v19 firstObject];

  __int16 v21 = [(CKCoreChatController *)self collectionViewController];
  int v22 = [v21 balloonViewForChatItem:v20];

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    goto LABEL_18;
  }
  uint64_t v23 = [v22 textView];
  objc_super v24 = [v23 selectedTextRange];
  BOOL v25 = v24 == 0;

LABEL_20:
  return v25;
}

- (void)registerNotifications
{
  v25.receiver = self;
  v25.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v25 registerNotifications];
  BOOL v3 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v3 addObserver:self selector:sel__applicationDidBecomeActive_ name:*MEMORY[0x1E4F43648] object:0];

  uint64_t v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v4 addObserver:self selector:sel__raiseToListenSettingChanged_ name:CKPreferenceRaiseToListenDidChangeNotification object:0];

  id v5 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v5 addObserver:self selector:sel__applicationWillResignActive_ name:*MEMORY[0x1E4F43710] object:0];

  id v6 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v6 addObserver:self selector:sel__textInputModeDidChange_ name:*MEMORY[0x1E4F43E30] object:0];

  int v7 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v7 addObserver:self selector:sel__reduceTransparencyStatusDidChange name:*MEMORY[0x1E4F43480] object:0];

  id v8 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v8 addObserver:self selector:sel_inputLanguageDidChange_ name:*MEMORY[0x1E4F43E60] object:0];

  id v9 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v9 addObserver:self selector:sel_nicknameStoreDidChange_ name:*MEMORY[0x1E4F6BB50] object:0];

  int v10 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v10 addObserver:self selector:sel_nicknameStoreDidChange_ name:*MEMORY[0x1E4F6BB68] object:0];

  id v11 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v11 addObserver:self selector:sel__switchedToEmojiKeyboard_ name:*MEMORY[0x1E4F43AD8] object:0];

  uint64_t v12 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v12 addObserver:self selector:sel__switchedAwayFromEmojiKeyboard_ name:*MEMORY[0x1E4F43AD0] object:0];

  int v13 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v13 addObserver:self selector:sel__transferUpdated_ name:@"CKFileTransferUpdatedNotification" object:0];

  id v14 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v14 addObserver:self selector:sel__transferCompleted_ name:@"CKFileTransferFinishedNotification" object:0];

  id v15 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v15 addObserver:self selector:sel__handleContactStoreBatchLoadCompleteNotification_ name:*MEMORY[0x1E4F6D1D0] object:0];

  uint64_t v16 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v16 addObserver:self selector:sel__updateNavigationUI name:*MEMORY[0x1E4F6CA60] object:0];

  id v17 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v17 addObserver:self selector:sel_presentCollaborationPopoverUI name:*MEMORY[0x1E4F6B860] object:0];

  uint64_t v18 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v18 addObserver:self selector:sel__updateAccountRegistrationFailureNotification name:*MEMORY[0x1E4F6B850] object:0];

  if (CKIsRunningInMessages())
  {
    if (!registerNotifications__DDDetectionControllerWillPresentActionNotification)
    {
      int v19 = (void **)MEMORY[0x192FBA870]("DDDetectionControllerWillPresentActionNotification", @"DataDetectorsUI");
      if (v19) {
        id v20 = *v19;
      }
      else {
        id v20 = 0;
      }
      objc_storeStrong((id *)&registerNotifications__DDDetectionControllerWillPresentActionNotification, v20);
    }
    if (!registerNotifications__DDDetectionControllerDidDismissActionNotification)
    {
      __int16 v21 = (void **)MEMORY[0x192FBA870]("DDDetectionControllerDidDismissActionNotification", @"DataDetectorsUI");
      if (v21) {
        int v22 = *v21;
      }
      else {
        int v22 = 0;
      }
      objc_storeStrong((id *)&registerNotifications__DDDetectionControllerDidDismissActionNotification, v22);
    }
    if (registerNotifications__DDDetectionControllerWillPresentActionNotification)
    {
      uint64_t v23 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v23 addObserver:self selector:sel__dataDetectorsWillPresentNotification_ name:registerNotifications__DDDetectionControllerWillPresentActionNotification object:0];
    }
    if (registerNotifications__DDDetectionControllerDidDismissActionNotification)
    {
      objc_super v24 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v24 addObserver:self selector:sel__dataDetectorsDidDismissNotification_ name:registerNotifications__DDDetectionControllerDidDismissActionNotification object:0];
    }
  }
}

- (void)_registerSendProgressDelegate
{
  v2.receiver = self;
  v2.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v2 _registerSendProgressDelegate];
}

- (void)registerNotificationsForConversation:(id)a3
{
  v20.receiver = self;
  v20.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v20 registerNotificationsForConversation:a3];
  uint64_t v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
  id v5 = [(CKCoreChatController *)self conversation];
  [v4 addObserver:self selector:sel__conversationParticipantsChanged_ name:@"CKConversationParticipantsDidChangeNotification" object:v5];

  id v6 = [MEMORY[0x1E4F28EB8] defaultCenter];
  int v7 = [(CKCoreChatController *)self conversation];
  [v6 addObserver:self selector:sel__conversationJoinStateDidChange_ name:@"CKConversationJoinStateDidChangeNotification" object:v7];

  id v8 = [MEMORY[0x1E4F28EB8] defaultCenter];
  uint64_t v9 = *MEMORY[0x1E4F6B8D8];
  int v10 = [(CKCoreChatController *)self conversation];
  id v11 = [v10 chat];
  [v8 addObserver:self selector:sel__handleChatItemDidChange_ name:v9 object:v11];

  uint64_t v12 = [MEMORY[0x1E4F28EB8] defaultCenter];
  uint64_t v13 = *MEMORY[0x1E4F6B990];
  id v14 = [(CKCoreChatController *)self conversation];
  id v15 = [v14 chat];
  [v12 addObserver:self selector:sel__handleKeyTransparencyShouldRefresh_ name:v13 object:v15];

  uint64_t v16 = [MEMORY[0x1E4F28EB8] defaultCenter];
  uint64_t v17 = *MEMORY[0x1E4F6B8C0];
  uint64_t v18 = [(CKCoreChatController *)self conversation];
  int v19 = [v18 chat];
  [v16 addObserver:self selector:sel__handleInterworkingStateChanged_ name:v17 object:v19];
}

- (void)_displayNameUpdatedNotification:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 _displayNameUpdatedNotification:a3];
  [(CKCoreChatController *)self _updateTitleAnimated:1];
}

- (BOOL)shouldListParticipantsInTitle
{
  if ([(CKChatController *)self shouldShowAvatarViewInNavBarCanvas])
  {
    LOBYTE(v3) = 0;
  }
  else
  {
    objc_super v4 = [(CKChatController *)self splitViewController];
    int v3 = [v4 isCollapsed] ^ 1;
  }
  return v3;
}

- (void)_transferFinishedNotification:(id)a3
{
  id v9 = [a3 object];
  objc_super v4 = [(CKCoreChatController *)self collectionViewController];
  id v5 = [v4 chatItems];
  uint64_t v6 = objc_msgSend(v5, "__ck_indexOfTransfer:", v9);

  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    int v7 = [v9 IMMessage];
    if ([v7 isFromMe])
    {
    }
    else
    {
      int v8 = [v9 isFileDataReady];

      if (v8) {
        [(CKChatController *)self updateQLPreviewControllerIfVisible];
      }
    }
  }
}

- (void)_transferRestoredNotification:(id)a3
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 object];
  uint64_t v6 = [(CKCoreChatController *)self collectionViewController];
  int v7 = [v6 chatItems];
  uint64_t v8 = objc_msgSend(v7, "__ck_indexOfTransfer:", v5);

  if (v8 != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (IMOSLoggingEnabled())
    {
      CKLogCStringForType(46);
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)CGAffineTransform buf = 138412546;
        uint64_t v13 = v5;
        __int16 v14 = 2048;
        uint64_t v15 = v8;
        _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_DEBUG, "Transfer %@ restored. Reload indexes %lu.", buf, 0x16u);
      }
    }
    if (os_log_shim_legacy_logging_enabled() && _CKShouldLog())
    {
      int v10 = v5;
      uint64_t v11 = v8;
      _CKLog();
    }
    [(CKChatController *)self updateQLPreviewControllerIfVisible];
  }
}

- (void)_handleAddressBookChangedNotification:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v4 _handleAddressBookChangedNotification:a3];
  if ([(CKChatController *)self allowsMentions]) {
    [(CKChatController *)self _reloadMentionsData];
  }
}

- (void)_reloadMentionsData
{
  id v4 = [(CKChatController *)self entryView];
  objc_super v2 = [v4 contentView];
  int v3 = [v2 textView];
  [v3 reloadMentionsData];
}

- (void)_raiseToListenSettingChanged:(id)a3
{
  [(CKChatController *)self updateRaiseGesture];
  id v4 = +[CKConversationList sharedConversationList];
  [v4 setNeedsReload];

  id v5 = [(CKCoreChatController *)self conversation];
  [v5 loadAllMessages];
}

- (void)_applicationWillResignActive:(id)a3
{
  [(CKChatController *)self setIsShowingCamera:0];
  id v4 = [(CKCoreChatController *)self inputController];
  if ([v4 isInputViewVisible])
  {
    id v5 = [(CKChatController *)self entryView];
    uint64_t v6 = [v5 contentView];
    int v7 = [v6 activeView];
    char v8 = [v7 isFirstResponder];

    if (v8)
    {
      uint64_t v9 = 1;
      goto LABEL_7;
    }
  }
  else
  {
  }
  if (![(CKChatController *)self appModalIsDisplayed]) {
    return;
  }
  uint64_t v9 = 4;
LABEL_7:

  [(CKChatController *)self setTargetFirstResponder:v9];
}

- (void)_applicationDidBecomeActive:(id)a3
{
  [(CKChatController *)self updateRaiseGesture];
  id v4 = [(CKCoreChatController *)self inputController];
  if ([v4 isInputViewVisible])
  {
    id v5 = [(CKChatController *)self entryView];
    uint64_t v6 = [v5 contentView];
    int v7 = [v6 activeView];
    char v8 = [v7 isFirstResponder];

    if (v8) {
      goto LABEL_9;
    }
  }
  else
  {
  }
  if ([(CKChatController *)self targetFirstResponder] != 1)
  {
LABEL_9:
    [(CKChatController *)self setTargetFirstResponder:0];
    return;
  }

  [(CKChatController *)self becomeFirstResponder];
}

- (void)_conversationParticipantsChanged:(id)a3
{
  [(CKChatController *)self _updateRecipientCapabilities];
  [(CKChatController *)self reloadInputViews];
  [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
  if ([(CKChatController *)self shouldUseMacRecipientsView])
  {
    id v4 = [(CKChatController *)self macRecipientsController];
    [v4 refreshRecipients];
  }
  id v5 = [(CKCoreChatController *)self conversation];
  if ([v5 hasLeftGroupChat]) {
    goto LABEL_6;
  }
  uint64_t v6 = [(CKCoreChatController *)self conversation];
  if ([v6 isBusinessChatDisabled])
  {

LABEL_6:
LABEL_7:
    v10.receiver = self;
    v10.super_class = (Class)CKChatController;
    [(CKChatController *)&v10 becomeFirstResponder];
    goto LABEL_8;
  }
  char v8 = [(CKCoreChatController *)self conversation];
  char v9 = [v8 isReadOnlyChat];

  if (v9) {
    goto LABEL_7;
  }
  if ([(CKChatController *)self allowsMentions]) {
    [(CKChatController *)self _reloadMentionsData];
  }
LABEL_8:
  [(CKCoreChatController *)self _updateTitleAnimated:1];
  int v7 = [(CKChatController *)self navbarCanvasViewController];
  [v7 updateRightItemView];
}

- (void)_conversationJoinStateDidChange:(id)a3
{
  [(CKChatController *)self reloadInputViews];
  [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
  id v4 = [(CKCoreChatController *)self conversation];
  if (([v4 hasLeftGroupChat] & 1) == 0)
  {
    id v5 = [(CKCoreChatController *)self conversation];
    if (![v5 isBusinessChatDisabled])
    {
      int v7 = [(CKCoreChatController *)self conversation];
      char v8 = [v7 isReadOnlyChat];

      if ((v8 & 1) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
LABEL_5:
  [(CKChatController *)self setTargetFirstResponder:0];
  [(CKChatController *)self becomeFirstResponder];
LABEL_6:
  if ([(CKChatController *)self shouldUseMacRecipientsView])
  {
    uint64_t v6 = [(CKChatController *)self macRecipientsController];

    if (v6)
    {
      id v9 = [(CKChatController *)self macRecipientsController];
      [v9 refreshRecipients];
    }
  }
}

- (void)_dataDetectorsWillPresentNotification:(id)a3
{
  id v4 = [(CKChatController *)self entryView];
  id v5 = [v4 contentView];
  self->_entryViewWasActiveBeforePresentingDataDetector = [v5 isActive];

  if (self->_entryViewWasActiveBeforePresentingDataDetector)
  {
    id v8 = [(CKChatController *)self entryView];
    uint64_t v6 = [v8 contentView];
    int v7 = [v6 activeView];
    [v7 resignFirstResponder];
  }
}

- (void)_dataDetectorsDidDismissNotification:(id)a3
{
  if (self->_entryViewWasActiveBeforePresentingDataDetector) {
    [(CKChatController *)self setTargetFirstResponder:1];
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __57__CKChatController__dataDetectorsDidDismissNotification___block_invoke;
  block[3] = &unk_1E5620C40;
  void block[4] = self;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t __57__CKChatController__dataDetectorsDidDismissNotification___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) becomeFirstResponder];
}

- (void)_sizeEffectPickerWindow
{
  int v3 = [(CKChatController *)self effectPickerWindow];
  if (v3)
  {
    id v4 = [(CKChatController *)self effectPickerViewController];
    if (objc_msgSend(MEMORY[0x1E4F42948], "__ck_currentDeviceIsPadOrMac"))
    {
      double v20 = 0.0;
      double v21 = 0.0;
      [(CKChatController *)self messageEntryViewWidth:&v21 andOffset:&v20];
      id v5 = [(CKChatController *)self view];
      [v5 bounds];
      double v7 = v6;
      double v9 = v8;

      objc_msgSend(v3, "setFrame:", v20, v7, v21, v9);
      double v10 = *MEMORY[0x1E4F43C70];
      double v11 = -1.0;
    }
    else
    {
      uint64_t v12 = [(CKChatController *)self view];
      uint64_t v13 = [v12 window];
      [v13 frame];
      objc_msgSend(v3, "setFrame:");

      double v10 = *MEMORY[0x1E4F43C70];
      double v11 = 1.0;
    }
    [v3 setLevel:v10 + v11];
    __int16 v14 = [v4 view];
    [v3 bounds];
    objc_msgSend(v14, "setFrame:");

    uint64_t v15 = [(CKChatController *)self entryView];
    [v15 sendButtonFrameInScreenCoordinates];
    double v17 = v16;

    [v4 setCloseButtonYPosition:v17];
    uint64_t v18 = [v4 view];
    [v18 setNeedsLayout];

    int v19 = [v4 view];
    [v19 layoutIfNeeded];
  }
}

- (void)_switchedToEmojiKeyboard:(id)a3
{
  id v4 = [(CKChatController *)self entryView];
  id v5 = [v4 contentView];
  double v6 = [v5 activeView];
  int v7 = [v6 isFirstResponder];

  if (v7)
  {
    double v8 = [MEMORY[0x1E4F42B30] sharedInputModeController];
    double v9 = [v8 currentInputModeInPreference];
    [(CKChatController *)self setSavedKeyboardInputMode:v9];

    [(CKChatController *)self setIsShowingEmojiKeyboard:1];
    [(CKChatController *)self updateAppStripVisibility:0 animated:0];
  }
}

- (void)_switchedAwayFromEmojiKeyboard:(id)a3
{
  [(CKChatController *)self setIsShowingEmojiKeyboard:0];
  id v4 = [(CKChatController *)self entryView];
  [(CKChatController *)self messageEntryViewDidChange:v4 isTextChange:0 isShelfChange:0];
}

- (void)_initializeEffectPicker
{
  int v3 = [(CKChatController *)self entryView];
  [v3 sendButtonFrameInScreenCoordinates];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  uint64_t v12 = [(CKChatController *)self entryView];
  uint64_t v13 = [v12 contentView];
  __int16 v14 = [v13 superview];

  [v14 frame];
  double v16 = v15;
  double v18 = v17;
  int v19 = [v14 superview];
  objc_msgSend(v19, "convertPoint:toView:", 0, v16, v18);
  double v21 = v20;
  double v23 = v22;

  double v24 = v21 + 1.0;
  if (objc_msgSend(MEMORY[0x1E4F42948], "__ck_currentDeviceIsPadOrMac"))
  {
    double v44 = 0.0;
    *(void *)CGAffineTransform buf = 0;
    [(CKChatController *)self messageEntryViewWidth:buf andOffset:&v44];
    double v5 = v5 - v44;
    double v24 = v24 - v44;
  }
  double v25 = v23 + 1.0;
  if (CKIsRunningInMacCatalyst())
  {
    unsigned __int8 v26 = [CKEffectPickerMacViewController alloc];
    CGRect v27 = [(CKChatController *)self entryView];
    objc_super v28 = [v27 composition];
    __int16 v29 = [(CKCoreChatController *)self conversation];
    int v30 = -[CKEffectPickerMacViewController initWithComposition:balloonViewOrigin:color:](v26, "initWithComposition:balloonViewOrigin:color:", v28, [v29 sendButtonColor], v24, v25);

    [(CKEffectPickerMacViewController *)v30 setModalPresentationStyle:6];
    [(CKEffectPickerMacViewController *)v30 setShowingInStandAloneWindow:[(CKCoreChatController *)self showingInStandAloneWindow]];
  }
  else
  {
    __int16 v31 = [CKEffectPickerViewController alloc];
    int v32 = [(CKChatController *)self entryView];
    uint64_t v33 = [v32 composition];
    uint64_t v34 = [(CKChatController *)self entryView];
    double v35 = [v34 sendButton];
    int v30 = -[CKEffectPickerViewController initWithComposition:sendButtonFrame:balloonViewOrigin:color:](v31, "initWithComposition:sendButtonFrame:balloonViewOrigin:color:", v33, [v35 ckTintColor], v5, v7, v9, v11, v24, v25);
  }
  [(CKEffectPickerMacViewController *)v30 setDelegate:self];
  [(CKChatController *)self setEffectPickerViewController:v30];
  if (CKIsRunningInMacCatalyst())
  {
    v43[0] = MEMORY[0x1E4F143A8];
    v43[1] = 3221225472;
    v43[2] = __43__CKChatController__initializeEffectPicker__block_invoke;
    v43[3] = &unk_1E5620C40;
    void v43[4] = self;
    [(CKChatController *)self presentViewController:v30 animated:0 completion:v43];
  }
  else
  {
    id v36 = objc_alloc(MEMORY[0x1E4F43058]);
    id v37 = [(CKChatController *)self view];
    id v38 = [v37 window];
    uint64_t v39 = [v38 windowScene];
    char v40 = (void *)[v36 initWithWindowScene:v39];

    [(CKChatController *)self setEffectPickerWindow:v40];
    [v40 setRootViewController:v30];
    [(CKChatController *)self _sizeEffectPickerWindow];
    [v40 setHidden:0];
    uint64_t v41 = [MEMORY[0x1E4F42B08] activeKeyboard];
    [v41 setTypingEnabled:0];

    [(CKChatController *)self requestShowKeyboardSnapshotForReason:4];
    if (IMOSLoggingEnabled())
    {
      char v42 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v42, OS_LOG_TYPE_INFO, "Hiding entry view", buf, 2u);
      }
    }
  }
}

uint64_t __43__CKChatController__initializeEffectPicker__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshMacToolbar];
}

- (void)_handleIsUnexpectedlyLoggedOutChanged:(id)a3
{
  id v3 = [(CKChatController *)self transcriptInlineNotificationUpdater];
  [v3 setNeedsUpdate];
}

- (void)composeRecipientViewShouldResignFirstResponder
{
}

- (void)_transferUpdated:(id)a3
{
  id v12 = [a3 object];
  BOOL v4 = [v12 updateReason] != 1 && objc_msgSend(v12, "updateReason") != 2;
  double v5 = v12;
  if (v12 && !v4)
  {
    double v6 = [(CKCoreChatController *)self collectionViewController];
    double v7 = [v6 associatedChatItems];

    uint64_t v8 = objc_msgSend(v7, "__ck_indexOfTransfer:", v12);
    if (v8 != 0x7FFFFFFFFFFFFFFFLL)
    {
      double v9 = [v7 objectAtIndexedSubscript:v8];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        double v10 = [(CKCoreChatController *)self chat];
        double v11 = [v9 IMChatItem];
        [v10 stickerRepositionedForAssociatedChatItem:v11];
      }
    }

    double v5 = v12;
  }
}

- (void)_transferCompleted:(id)a3
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  double v5 = [v4 object];
  double v6 = [(CKChatController *)self mediaObjectToDownload];
  double v7 = v6;
  if (v6)
  {
    uint64_t v8 = [v6 transferGUID];
    double v9 = [v5 guid];
    int v10 = [v8 isEqualToString:v9];

    if (v10)
    {
      mediaObjectToDownload = self->_mediaObjectToDownload;
      self->_mediaObjectToDownload = 0;

      [(CKChatController *)self showViewerForMediaObject:v7];
    }
  }
  if (v5 && [v5 commSafetySensitive])
  {
    double v25 = v7;
    id v26 = v4;
    id v12 = [v4 object];
    uint64_t v13 = [v12 guid];

    __int16 v14 = [(CKCoreChatController *)self collectionViewController];
    double v15 = [v14 chatItems];

    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v16 = v15;
    uint64_t v17 = [v16 countByEnumeratingWithState:&v30 objects:v34 count:16];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)v31;
      do
      {
        for (uint64_t i = 0; i != v18; ++i)
        {
          if (*(void *)v31 != v19) {
            objc_enumerationMutation(v16);
          }
          double v21 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          if ([v21 supportsCommunicationSafety])
          {
            double v22 = [v21 commSafetyTransferGUID];
            int v23 = [v13 isEqualToString:v22];

            if (v23)
            {
              dispatch_time_t v24 = dispatch_time(0, 200000000);
              block[0] = MEMORY[0x1E4F143A8];
              block[1] = 3221225472;
              block[2] = __39__CKChatController__transferCompleted___block_invoke;
              block[3] = &unk_1E5620AA8;
              void block[4] = self;
              id v28 = v5;
              __int16 v29 = v21;
              dispatch_after(v24, MEMORY[0x1E4F14428], block);
            }
          }
        }
        uint64_t v18 = [v16 countByEnumeratingWithState:&v30 objects:v34 count:16];
      }
      while (v18);
    }

    double v7 = v25;
    id v4 = v26;
  }
}

void __39__CKChatController__transferCompleted___block_invoke(id *a1)
{
  id v4 = [a1[4] chat];
  uint64_t v2 = [a1[5] commSafetySensitive];
  id v3 = [a1[6] IMChatItem];
  [v4 updateCommSafety:v2 forChatItem:v3];
}

- (void)_textInputModeDidChange:(id)a3
{
  v15[2] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = [v3 userInfo];
  double v5 = [v4 objectForKeyedSubscript:*MEMORY[0x1E4F43E40]];

  double v6 = [v3 userInfo];
  double v7 = [v6 objectForKeyedSubscript:*MEMORY[0x1E4F43E48]];

  uint64_t v8 = [v3 userInfo];

  double v9 = [v8 objectForKeyedSubscript:*MEMORY[0x1E4F43E50]];

  if (v5) {
    BOOL v10 = v7 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    id v11 = objc_alloc_init((Class)MEMORY[0x192FBA860](@"NPSManager", @"NanoPreferencesSync"));
    id v12 = (void *)MEMORY[0x1E4F1CAD0];
    v15[0] = v7;
    v15[1] = v9;
    uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v15 count:2];
    __int16 v14 = [v12 setWithArray:v13];
    [v11 synchronizeUserDefaultsDomain:v5 keys:v14];
  }
}

- (void)inputLanguageDidChange:(id)a3
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __43__CKChatController_inputLanguageDidChange___block_invoke;
  block[3] = &unk_1E5620C40;
  void block[4] = self;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void __43__CKChatController_inputLanguageDidChange___block_invoke(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [v1 entryView];
  objc_msgSend(v1, "updateEntryViewHeightIncludingAppStrip:animated:", objc_msgSend(v2, "shouldShowAppStrip"), 0);
}

- (void)invalidateEntryViewForNewCompose
{
}

- (void)setEntryViewOverrideForNewCompose:(id)a3
{
  id v4 = a3;
  [v4 setDelegate:self];
  [(CKChatController *)self setEntryView:v4];
  [v4 _overrideInputAccessoryViewNextResponderWithResponder:self];

  self->_entryViewShouldBecomeTargetFirstResponderForPendingDraft = 1;
}

- (void)cleanupPostComposeTransitionWithKBFrame:(CGRect)a3
{
  -[CKScrollViewController primeWithKeyboardFrame:](self, "primeWithKeyboardFrame:", a3.origin.x, a3.origin.y, a3.size.width, a3.size.height);
  id v15 = [(CKChatController *)self entryView];
  [v15 setConversation:0];
  id v4 = [(CKCoreChatController *)self conversation];
  [v15 setConversation:v4];

  [v15 setDelegate:self];
  [v15 setClickInteractionDelegate:self];
  BOOL v5 = [(CKScrollViewController *)self isKeyboardVisible];
  double v6 = [(CKCoreChatController *)self conversation];
  [v15 setConversation:v6];

  objc_msgSend(v15, "setSendingMessage:", -[CKCoreChatController isSendingMessage](self, "isSendingMessage"));
  [v15 setKeyboardVisible:v5];
  [v15 setShowAppStrip:CKShowAppStripInEntryView() animated:0 completion:0];
  double v7 = [v15 contentView];
  uint64_t v8 = [v7 textView];

  [v8 setTextDropDelegate:self];
  [v8 setPasteDelegate:self];
  double v9 = [(CKCoreChatController *)self chat];
  uint64_t v10 = [v9 supportsCapabilities:0x8000] ^ 1;

  id v11 = +[CKUIBehavior sharedBehaviors];
  id v12 = [v11 pasteConfigurationDisablingKeyboardStickers:v10];

  [v8 setPasteConfiguration:v12];
  uint64_t v13 = [(CKCoreChatController *)self inputController];
  __int16 v14 = [(CKChatController *)self entryView];
  [v13 setEntryView:v14];
}

- (void)setEntryView:(id)a3
{
  id v6 = a3;
  if (v6)
  {
    id v4 = [[CKMessageEntryViewController alloc] initWithEntryView:v6];
    [(CKChatController *)self setEntryViewController:v4];
  }
  else
  {
    [(CKChatController *)self setEntryViewController:0];
  }
  BOOL v5 = [(CKChatController *)self entryViewController];
  objc_msgSend(v5, "setInputAccessoryViewControllerEnabled:", -[CKChatController inputAccessoryViewControllerEnabled](self, "inputAccessoryViewControllerEnabled"));
}

- (CKMessageEntryView)entryView
{
  id v2 = [(CKChatController *)self entryViewController];
  id v3 = [v2 entryView];

  return (CKMessageEntryView *)v3;
}

- (void)resignFirstResponderOnEntryViewIfNeeded
{
  id v3 = +[CKUIBehavior sharedBehaviors];
  int v4 = [v3 isEntryViewInputAccessory];

  if (v4)
  {
    BOOL v5 = [MEMORY[0x1E4F42948] currentDevice];
    uint64_t v6 = [v5 userInterfaceIdiom];

    double v7 = [MEMORY[0x1E4F42B20] sharedInstance];
    int v8 = [v7 isInHardwareKeyboardMode];

    BOOL v9 = [(CKChatController *)self isCollapsed];
    BOOL v10 = [(CKCoreChatController *)self isInline];
    if (v6 == 1 && v9 && v8 && !v10)
    {
      id v13 = [(CKChatController *)self entryView];
      id v11 = [v13 contentView];
      id v12 = [v11 textView];
      [v12 resignFirstResponder];
    }
  }
}

- (BOOL)appManagerDisplayedInMessages
{
  int v3 = CKIsRunningInMessages();
  if (v3)
  {
    int v4 = [(CKCoreChatController *)self inputController];
    int v5 = [v4 appManagerIsDisplayed];

    if (v5)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)int v8 = 0;
          _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "EntryView Debug - App Manager is displayed in Messages", v8, 2u);
        }
      }
      LOBYTE(v3) = 1;
    }
    else
    {
      LOBYTE(v3) = 0;
    }
  }
  return v3;
}

- (BOOL)appModalIsDisplayed
{
  int v3 = CKIsRunningInMessages();
  if (v3)
  {
    int v4 = [(CKCoreChatController *)self inputController];
    int v5 = [v4 appModalIsDisplayed];

    if (v5)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)int v8 = 0;
          _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "EntryView Debug - App modal is displayed in Messages", v8, 2u);
        }
      }
      LOBYTE(v3) = 1;
    }
    else
    {
      LOBYTE(v3) = 0;
    }
  }
  return v3;
}

- (BOOL)inputAccessoryViewControllerEnabled
{
  int v3 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v4 = [v3 isTranscriptSharingEnabled];

  if (v4
    && ([(CKCoreChatController *)self conversation],
        int v5 = objc_claimAutoreleasedReturnValue(),
        [v5 chat],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        char v7 = [v6 isStewieSharingChat],
        v6,
        v5,
        (v7 & 1) != 0))
  {
    LOBYTE(v8) = 0;
  }
  else
  {
    int v8 = CKInputAccessoryViewControllerEnabled();
    if (v8) {
      LOBYTE(v8) = ![(CKCoreChatController *)self isShowingLockoutView];
    }
  }
  return v8;
}

- (id)inputAccessoryViewController
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self inputAccessoryViewControllerEnabled])
  {
    if ([(CKChatController *)self shouldShowEntryView])
    {
      int v3 = [(CKChatController *)self entryViewController];
    }
    else
    {
      int v3 = 0;
    }
    int v4 = [(CKCoreChatController *)self inputController];
    int v5 = [v3 entryView];
    [v4 setEntryView:v5];

    if ([(CKChatController *)self appManagerDisplayedInMessages])
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "EntryView Debug - Not vending IAVC, -appManagerDisplayedInMessages is YES", buf, 2u);
        }
      }
      int v3 = 0;
    }
    if ([(CKChatController *)self appModalIsDisplayed])
    {
      char v7 = [(CKCoreChatController *)self inputController];
      char v8 = [v7 isDismissingAppModal];

      if ((v8 & 1) == 0)
      {
        if (IMOSLoggingEnabled())
        {
          BOOL v9 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)CGAffineTransform buf = 0;
            _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "EntryView Debug - Not vending IAVC, -appModalIsDisplayed is YES", buf, 2u);
          }
        }
        int v3 = 0;
      }
    }
    if (IMOSLoggingEnabled())
    {
      BOOL v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        id v11 = (objc_class *)objc_opt_class();
        NSStringFromClass(v11);
        id v36 = (id)objc_claimAutoreleasedReturnValue();
        long long v32 = [v3 view];
        [v32 alpha];
        uint64_t v13 = v12;
        long long v31 = [v3 view];
        [v31 frame];
        NSStringFromCGRect(v57);
        id v34 = (id)objc_claimAutoreleasedReturnValue();
        long long v30 = [v3 view];
        __int16 v29 = [v30 window];
        __int16 v14 = (objc_class *)objc_opt_class();
        NSStringFromClass(v14);
        id v33 = (id)objc_claimAutoreleasedReturnValue();
        id v28 = [v3 view];
        id v35 = [v28 window];
        CGRect v27 = [(CKChatController *)self view];
        id v15 = [v27 window];
        id v16 = [v15 firstResponder];
        uint64_t v17 = (objc_class *)objc_opt_class();
        NSStringFromClass(v17);
        id v18 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v19 = [(CKChatController *)self view];
        double v20 = [v19 window];
        id v21 = [v20 firstResponder];
        double v22 = [(CKChatController *)self view];
        int v23 = [v22 window];
        int v24 = [v23 isKeyWindow];
        double v25 = @"NO";
        *(_DWORD *)CGAffineTransform buf = 138414338;
        id v38 = v36;
        __int16 v39 = 2048;
        if (v24) {
          double v25 = @"YES";
        }
        char v40 = v3;
        __int16 v41 = 2048;
        uint64_t v42 = v13;
        __int16 v43 = 2112;
        id v44 = v34;
        __int16 v45 = 2112;
        id v46 = v33;
        __int16 v47 = 2048;
        id v48 = v35;
        __int16 v49 = 2112;
        id v50 = v18;
        __int16 v51 = 2048;
        id v52 = v21;
        __int16 v53 = 2112;
        int v54 = v25;
        _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "EntryView Debug - IAVC %@ <%p> Alpha %f Frame %@ IAV Window %@ <%p>  Current FR %@ <%p> View window is key - %@", buf, 0x5Cu);
      }
    }
  }
  else
  {
    int v3 = 0;
  }

  return v3;
}

- (id)inputAccessoryView
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self inputAccessoryViewControllerEnabled]
    || [(CKCoreChatController *)self isShowingLockoutView]
    || (+[CKUIBehavior sharedBehaviors],
        int v3 = objc_claimAutoreleasedReturnValue(),
        int v4 = [v3 isEntryViewInputAccessory],
        v3,
        !v4))
  {
    int v5 = 0;
  }
  else
  {
    if ([(CKChatController *)self shouldShowEntryView])
    {
      int v5 = [(CKChatController *)self entryView];
    }
    else
    {
      int v5 = 0;
    }
    char v7 = [(CKCoreChatController *)self inputController];
    [v7 setEntryView:v5];

    if ([(CKChatController *)self appManagerDisplayedInMessages])
    {
      char v8 = [(CKChatController *)self presentedViewController];
      char v9 = [v8 isBeingDismissed];

      if ((v9 & 1) == 0)
      {
        if (IMOSLoggingEnabled())
        {
          BOOL v10 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)CGAffineTransform buf = 0;
            _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "EntryView Debug - Not vending IAV, -appManagerDisplayedInMessages is YES", buf, 2u);
          }
        }
        int v5 = 0;
      }
    }
    if ([(CKChatController *)self appModalIsDisplayed])
    {
      id v11 = [(CKCoreChatController *)self inputController];
      char v12 = [v11 isDismissingAppModal];

      if ((v12 & 1) == 0)
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v13 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)CGAffineTransform buf = 0;
            _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "EntryView Debug - Not vending IAV, -appModalIsDisplayed is YES", buf, 2u);
          }
        }
        int v5 = 0;
      }
    }
    __int16 v14 = [(CKChatController *)self presentedViewController];
    id v15 = v14;
    if (v14 && ([v14 isBeingDismissed] & 1) == 0)
    {
      if (IMOSLoggingEnabled())
      {
        id v16 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "EntryView Debug - Not vending IAV, presenting view controller", buf, 2u);
        }
      }
      int v5 = 0;
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        id v18 = (objc_class *)objc_opt_class();
        NSStringFromClass(v18);
        id v38 = (id)objc_claimAutoreleasedReturnValue();
        [v5 alpha];
        uint64_t v20 = v19;
        [v5 frame];
        NSStringFromCGRect(v59);
        id v36 = (id)objc_claimAutoreleasedReturnValue();
        id v34 = [v5 window];
        id v21 = (objc_class *)objc_opt_class();
        NSStringFromClass(v21);
        id v35 = (id)objc_claimAutoreleasedReturnValue();
        id v37 = [v5 window];
        id v33 = [(CKChatController *)self view];
        long long v32 = [v33 window];
        double v22 = [v32 firstResponder];
        int v23 = (objc_class *)objc_opt_class();
        NSStringFromClass(v23);
        id v24 = (id)objc_claimAutoreleasedReturnValue();
        double v25 = [(CKChatController *)self view];
        id v26 = [v25 window];
        id v27 = [v26 firstResponder];
        id v28 = [(CKChatController *)self view];
        __int16 v29 = [v28 window];
        int v30 = [v29 isKeyWindow];
        long long v31 = @"NO";
        *(_DWORD *)CGAffineTransform buf = 138414338;
        id v40 = v38;
        __int16 v41 = 2048;
        if (v30) {
          long long v31 = @"YES";
        }
        uint64_t v42 = v5;
        __int16 v43 = 2048;
        uint64_t v44 = v20;
        __int16 v45 = 2112;
        id v46 = v36;
        __int16 v47 = 2112;
        id v48 = v35;
        __int16 v49 = 2048;
        id v50 = v37;
        __int16 v51 = 2112;
        id v52 = v24;
        __int16 v53 = 2048;
        id v54 = v27;
        __int16 v55 = 2112;
        long long v56 = v31;
        _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "EntryView Debug - IAV %@ <%p> Alpha %f Frame %@ IAV Window %@ <%p>  Current FR %@ <%p> View window is key - %@", buf, 0x5Cu);
      }
    }
  }

  return v5;
}

- (id)inputViewController
{
  if ([(CKChatController *)self isShowingPreview])
  {
    int v3 = 0;
  }
  else
  {
    int v4 = [(CKCoreChatController *)self inputController];
    int v3 = [v4 inputViewController];
  }

  return v3;
}

- (UIEdgeInsets)_marginInsetsForEntryView
{
  [(CKChatController *)self systemMinimumLayoutMargins];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  id v11 = [(CKChatController *)self view];
  uint64_t v12 = [v11 effectiveUserInterfaceLayoutDirection];
  if (v12) {
    double v13 = v10;
  }
  else {
    double v13 = v6;
  }
  if (!v12) {
    double v6 = v10;
  }

  double v14 = *MEMORY[0x1E4F437F8];
  if (*(double *)(MEMORY[0x1E4F437F8] + 8) == v13
    && v14 == v4
    && *(double *)(MEMORY[0x1E4F437F8] + 24) == v6
    && *(double *)(MEMORY[0x1E4F437F8] + 16) == v8)
  {
    id v18 = [(CKCoreChatController *)self delegate];

    if (v18)
    {
      uint64_t v19 = [(CKCoreChatController *)self delegate];
      [v19 initialSystemMinimumLayoutMarginsForChatController:self];
      double v4 = v20;
      double v13 = v21;
      double v8 = v22;
      double v6 = v23;
    }
  }
  double v24 = v4;
  double v25 = v13;
  double v26 = v8;
  double v27 = v6;
  result.double right = v27;
  result.double bottom = v26;
  result.double left = v25;
  result.double top = v24;
  return result;
}

- (void)setSendingMessage:(BOOL)a3
{
  BOOL v3 = a3;
  v6.receiver = self;
  v6.super_class = (Class)CKChatController;
  -[CKCoreChatController setSendingMessage:](&v6, sel_setSendingMessage_);
  double v5 = [(CKChatController *)self entryView];
  [v5 setSendingMessage:v3];
}

- (BOOL)reloadEntryViewForStagedPluginMessage
{
  return 0;
}

- (void)_updateEntryViewPasteConfiguration
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v4 = [v3 isCarrierPigeonEnabled];

  if (v4)
  {
    double v5 = [(CKChatController *)self entryView];
    objc_super v6 = [v5 contentView];
    double v7 = [v6 textView];

    if (!v7)
    {
LABEL_21:

      return;
    }
    int v8 = [v7 disableKeyboardStickers];
    double v9 = [(CKCoreChatController *)self chat];

    if (v9)
    {
      double v10 = [(CKCoreChatController *)self chat];
      int v11 = [v10 supportsCapabilities:0x8000] ^ 1;

      if (v8 == v11)
      {
LABEL_15:
        [(CKChatController *)self setShouldUpdateEntryViewPasteConfiguration:0];
        if (IMOSLoggingEnabled())
        {
          double v14 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            id v15 = @"NO";
            if (v8) {
              id v15 = @"YES";
            }
            int v16 = 138412290;
            uint64_t v17 = v15;
            _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "Configuration of stickers in keyboard has already been updated to hide:(%@). Ignoring paste configuration update.", (uint8_t *)&v16, 0xCu);
          }
        }
        goto LABEL_21;
      }
    }
    else
    {
      if ((v8 & 1) == 0) {
        goto LABEL_15;
      }
      int v11 = 0;
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        double v13 = @"NO";
        if (v11) {
          double v13 = @"YES";
        }
        int v16 = 138412290;
        uint64_t v17 = v13;
        _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Updating paste configuration of entry text view to hide stickers:(%@)", (uint8_t *)&v16, 0xCu);
      }
    }
    [(CKChatController *)self setShouldUpdateEntryViewPasteConfiguration:1];
    [(CKChatController *)self reloadEntryViewIfNeeded];
    goto LABEL_21;
  }
}

- (void)reloadEntryViewIfNeeded
{
  uint64_t v115 = *MEMORY[0x1E4F143B8];
  +[CKPPTSubTest start:@"reloadEntryViewIfNeeded"];
  if (IMOSLoggingEnabled())
  {
    BOOL v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 136315138;
      double v114 = "-[CKChatController reloadEntryViewIfNeeded]";
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "CKMessageEntryView - %s", buf, 0xCu);
    }
  }
  int v4 = [(CKCoreChatController *)self inputController];
  BOOL v5 = v4 == 0;

  if (v5) {
    [(CKChatController *)self loadChatInputController];
  }
  objc_super v6 = [(CKCoreChatController *)self conversation];

  if (v6)
  {
    double v7 = [(CKChatController *)self entryView];

    if (IMOSLoggingEnabled())
    {
      int v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)CGAffineTransform buf = 67109120;
        LODWORD(v114) = v7 == 0;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "CKMessageEntryView - shouldUpdateEntryView = %d", buf, 8u);
      }
    }
    double v9 = [(CKCoreChatController *)self conversation];
    int v112 = [v9 lastAddressedHandle];

    double v10 = [(CKCoreChatController *)self conversation];
    double v111 = [v10 lastAddressedSIMID];

    BOOL AddressedHandle = CKShowSubjectEnabledForLastAddressedHandle(v112, v111);
    uint64_t v12 = [(CKCoreChatController *)self conversation];
    int v110 = [v12 isStewieConversation];

    double v13 = [(CKCoreChatController *)self conversation];
    double v14 = [v13 sendingService];
    if (objc_msgSend(v14, "__ck_isiMessageLite"))
    {
    }
    else
    {
      id v15 = [(CKCoreChatController *)self conversation];
      int v16 = [v15 sendingService];
      if (objc_msgSend(v16, "__ck_isSatelliteSMS"))
      {
        int v17 = 1;
      }
      else
      {
        uint64_t v18 = [(CKCoreChatController *)self conversation];
        uint64_t v19 = [v18 chat];
        int v17 = [v19 shouldDisplayOffGridModeStatus];
      }
      if (!v17)
      {
        int v20 = 0;
        unsigned int v109 = AddressedHandle & ~v110;
LABEL_20:
        char v108 = v20;
        int v21 = v20 | v110;
        if (v7)
        {
          double v22 = [(CKChatController *)self entryView];
          int v107 = [v22 shouldShowSubject];

          double v23 = [(CKChatController *)self entryView];
          int v106 = [v23 shouldShowPluginButtons];
          BOOL v105 = [(CKChatController *)self pluginButtonsEnabled];

          double v24 = [(CKChatController *)self entryView];
          int v104 = [v24 shouldShowCharacterCount];
          int v103 = CKShowCharacterCountEnabled(v21);

          double v25 = [(CKChatController *)self entryView];
          int v102 = [v25 shouldDisableAttachments];

          double v26 = [(CKChatController *)self entryView];
          int v27 = [v26 shouldReloadBackgroundView];

          id v28 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
          int v29 = [v28 isExpressiveTextEnabled];

          int v30 = [(CKChatController *)self entryView];
          long long v31 = [v30 contentView];
          long long v32 = [v31 textView];
          id v33 = v32;
          if (v29)
          {

            int v34 = objc_msgSend(v33, "ck_containsStaleEntryViewFont");
          }
          else
          {
            id v35 = [v32 font];

            id v36 = +[CKUIBehavior sharedBehaviors];
            id v37 = [v36 balloonTextFont];
            if ([v35 isEqual:v37])
            {
              int v34 = 0;
            }
            else
            {
              id v38 = +[CKUIBehavior sharedBehaviors];
              __int16 v39 = [v38 singleBigEmojiFont];
              if ([v35 isEqual:v39])
              {
                int v34 = 0;
              }
              else
              {
                id v40 = +[CKUIBehavior sharedBehaviors];
                __int16 v41 = [v40 multipleBigEmojiFont];
                int v101 = [v35 isEqual:v41];

                int v34 = v101 ^ 1;
              }
            }
            id v33 = v35;
          }

          BOOL v42 = (v109 ^ v107 | v106 ^ v105 | v34 | v27) & 1 | (v103 != v104)
             || v21 != v102 && ![(CKScrollViewController *)self isKeyboardVisible]
             || [(CKChatController *)self reloadEntryViewForStagedPluginMessage];
          __int16 v43 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
          int v44 = [v43 isCarrierPigeonEnabled];

          if (v44)
          {
            if (!v42
              && (![(CKChatController *)self shouldUpdateEntryViewPasteConfiguration]|| [(CKScrollViewController *)self isKeyboardVisible]))
            {
              goto LABEL_58;
            }
          }
          else if (!v42)
          {
LABEL_58:

            goto LABEL_59;
          }
        }
        if (IMOSLoggingEnabled())
        {
          __int16 v45 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)CGAffineTransform buf = 0;
            _os_log_impl(&dword_18EF18000, v45, OS_LOG_TYPE_INFO, "CKMessageEntryView - CKChatController is creating a new CKMessageEntryView", buf, 2u);
          }
        }
        [(CKChatController *)self _marginInsetsForEntryView];
        double v47 = v46;
        double v49 = v48;
        double v51 = v50;
        double v53 = v52;
        id v54 = [(CKChatController *)self entryView];
        __int16 v55 = [v54 composition];

        long long v56 = [(CKChatController *)self entryView];
        [v56 removeFromSuperview];

        uint64_t v57 = [(CKChatController *)self view];
        [v57 bounds];
        double v59 = v58;
        double v61 = v60;
        double v63 = v62;
        double v65 = v64;

        uint64_t v66 = [(CKCoreChatController *)self chat];

        if (v66)
        {
          double v67 = [(CKCoreChatController *)self chat];
          int v68 = [v67 supportsCapabilities:0x8000];

          uint64_t v69 = v68 ^ 1u;
        }
        else
        {
          uint64_t v69 = 0;
        }
        double v70 = [CKMessageEntryView alloc];
        int v71 = IMIsRunningInMessagesComposeViewService();
        BOOL v72 = [(CKChatController *)self pluginButtonsEnabled];
        BOOL v73 = CKShowCharacterCountEnabled(v21) != 0;
        double v74 = [(CKChatController *)self traitCollection];
        BYTE3(v100) = v69;
        BYTE2(v100) = v108;
        BYTE1(v100) = v110;
        LOBYTE(v100) = v21;
        double v75 = -[CKMessageEntryView initWithFrame:marginInsets:shouldAllowImpact:shouldShowSendButton:shouldShowSubject:shouldShowPluginButtons:shouldShowCharacterCount:traitCollection:shouldDisableAttachments:shouldUseNonEmojiKeyboard:shouldUseNonHandwritingKeyboard:shouldDisableKeyboardStickers:](v70, "initWithFrame:marginInsets:shouldAllowImpact:shouldShowSendButton:shouldShowSubject:shouldShowPluginButtons:shouldShowCharacterCount:traitCollection:shouldDisableAttachments:shouldUseNonEmojiKeyboard:shouldUseNonHandwritingKeyboard:shouldDisableKeyboardStickers:", v71 ^ 1u, 1, v109, v72, v73, v74, v59, v61, v63, v65, v47, v49, v51, v53, v100);

        double v76 = [CKMentionsController alloc];
        id v77 = [(CKMessageEntryView *)v75 contentView];
        id v78 = [v77 textView];
        double v79 = [(CKCoreChatController *)self conversation];
        uint64_t v80 = [(CKMentionsController *)v76 initWithEntryTextView:v78 conversation:v79];
        [(CKChatController *)self setMentionsController:v80];

        if (CKShouldUseModernRippleAnimation())
        {
          long long v81 = [(CKChatController *)self mentionsController];
          [v81 setTextEffectsDelegate:self];
        }
        [(CKChatController *)self setEntryView:v75];
        BOOL v82 = -[CKMessageEntryViewContainerView initWithFrame:]([CKMessageEntryViewContainerView alloc], "initWithFrame:", v59, v61, v63, v65);
        [(CKMessageEntryViewContainerView *)v82 setEntryViewContainerViewDelegate:self];
        [(CKMessageEntryViewContainerView *)v82 setTranslatesAutoresizingMaskIntoConstraints:1];
        [(CKMessageEntryViewContainerView *)v82 setAutoresizingMask:18];
        [(CKMessageEntryViewContainerView *)v82 addSubview:v75];
        [(CKChatController *)self setEntryViewContainerView:v82];
        uint64_t v83 = [(CKChatController *)self inlineReplyController];

        if (v83)
        {
          CGPoint v84 = [(CKChatController *)self inlineReplyController];
          [v84 setEntryView:v75];

          BOOL v85 = [(CKChatController *)self inlineReplyController];
          [(CKMessageEntryView *)v75 setDelegate:v85];
        }
        else
        {
          [(CKMessageEntryView *)v75 setDelegate:self];
        }
        [(CKMessageEntryView *)v75 setClickInteractionDelegate:self];
        BOOL v86 = [(CKScrollViewController *)self isKeyboardVisible];
        id v87 = [(CKCoreChatController *)self conversation];
        [(CKMessageEntryView *)v75 setConversation:v87];

        [(CKMessageEntryView *)v75 setSendingMessage:[(CKCoreChatController *)self isSendingMessage]];
        [(CKMessageEntryView *)v75 setKeyboardVisible:v86];
        [(CKMessageEntryView *)v75 setShowAppStrip:CKShowAppStripInEntryView() animated:0 completion:0];
        v88 = [(CKMessageEntryView *)v75 contentView];
        id v89 = [v88 textView];

        [v89 setTextDropDelegate:self];
        [v89 setPasteDelegate:self];
        id v90 = +[CKUIBehavior sharedBehaviors];
        id v91 = [v90 pasteConfigurationDisablingKeyboardStickers:v69];

        [v89 setPasteConfiguration:v91];
        double v92 = [(CKCoreChatController *)self delegate];
        char v93 = objc_opt_respondsToSelector();

        if (v93)
        {
          double v94 = [(CKCoreChatController *)self delegate];
          double v95 = [v94 navigationBarBackdropLayerGroupNameForChatController:self];

          [(CKMessageEntryView *)v75 setBackdropGroupName:v95];
        }
        if ([v55 hasContent]) {
          [(CKMessageEntryView *)v75 setComposition:v55];
        }
        [(CKChatController *)self _updateEntryViewFrameIfNeeded:0];
        [(CKChatController *)self becomeFirstResponder];
        double v96 = [(CKChatController *)self firstResponder];
        [v96 reloadInputViews];

        double v97 = [(CKCoreChatController *)self inputController];
        [v97 setEntryView:v75];

        goto LABEL_58;
      }
    }
    unsigned int v109 = 0;
    int v20 = 1;
    goto LABEL_20;
  }
LABEL_59:
  [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
  [(CKChatController *)self registerForTextInputPayloadHandling];
  double v98 = [(CKChatController *)self entryView];
  BOOL v99 = [(CKCoreChatController *)self conversation];
  [v98 setConversation:v99];

  +[CKPPTSubTest stop:@"reloadEntryViewIfNeeded"];
}

- (void)registerForTextInputPayloadHandling
{
  BOOL v3 = [(CKCoreChatController *)self inputController];
  int v4 = [(CKCoreChatController *)self conversation];
  BOOL v5 = [v4 chat];
  BOOL v6 = [v5 isFiltered] != 0;
  double v7 = [(CKCoreChatController *)self conversation];
  int v8 = [v7 chat];
  objc_msgSend(v3, "registerForTextInputPayloadHandling:isGroupChat:", v6, objc_msgSend(v8, "isGroupChat"));

  id v9 = [(CKCoreChatController *)self conversation];
  [(CKChatController *)self registerForTextinputPayloadHandlingForCheckInForConversation:v9];
}

- (void)addOrRemoveEntryViewIfNeeded
{
  id v51 = +[CKUIBehavior sharedBehaviors];
  if (([v51 isEntryViewInputAccessory] & 1) == 0)
  {
    int v3 = CKIsRunningUITests();

    if (v3) {
      return;
    }
    if (IMOSLoggingEnabled())
    {
      int v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "entryView: addOrRemoveEntryViewIfNeeded", buf, 2u);
      }
    }
    BOOL v5 = [(CKChatController *)self view];
    BOOL v6 = [(CKChatController *)self entryViewContainerView];
    double v7 = [MEMORY[0x1E4F42948] currentDevice];
    uint64_t v8 = [v7 userInterfaceIdiom];

    int v9 = [MEMORY[0x1E4F42B08] isInHardwareKeyboardMode];
    if (v8 == 1) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    BOOL v11 = [(CKChatController *)self shouldShowEntryView];
    int v12 = IMOSLoggingEnabled();
    if (!v11)
    {
      if (v12)
      {
        uint64_t v18 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v57 = 0;
          _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "entryView: shouldRemoveEntryView", v57, 2u);
        }
      }
      if (v6)
      {
        uint64_t v19 = [v6 superview];

        if (v19 == v5)
        {
          int v20 = [(CKChatController *)self entryViewContainerView];
          [v20 removeFromSuperview];

          int v21 = [(CKChatController *)self entryView];
          [v21 setEntryViewKeyboardLayoutGuide:0];

          if (IMOSLoggingEnabled())
          {
            double v22 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long v56 = 0;
              _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "entryView: Removed from super view", v56, 2u);
            }
          }
        }
      }
LABEL_39:
      double v23 = [(CKChatController *)self entryView];
      int v24 = [v23 isInPencilMode];

      keyboardCandidateBarBackgroundView = self->_keyboardCandidateBarBackgroundView;
      if ((v11 & (v10 | v24)) == 1)
      {
        if (keyboardCandidateBarBackgroundView || !v6) {
          goto LABEL_56;
        }
        if (IMOSLoggingEnabled())
        {
          double v26 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)double v53 = 0;
            _os_log_impl(&dword_18EF18000, v26, OS_LOG_TYPE_INFO, "Adding the keyboardCandidateBarBackgroundView", v53, 2u);
          }
        }
        int v27 = +[CKUIBehavior sharedBehaviors];
        id v28 = (objc_class *)[v27 entryViewBackgroundClass];

        id v29 = objc_alloc_init(v28);
        int v30 = [(CKCoreChatController *)self delegate];
        char v31 = objc_opt_respondsToSelector();

        if (v31)
        {
          long long v32 = [(CKCoreChatController *)self delegate];
          id v33 = [v32 navigationBarBackdropLayerGroupNameForChatController:self];

          [v29 setBackdropGroupName:v33];
        }
        int v34 = [(CKChatController *)self entryView];
        id v35 = [v34 entryViewTraitCollection];
        [v29 setEntryViewTraitCollection:v35];

        [v6 addSubview:v29];
        [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v36 = [v6 bottomAnchor];
        id v37 = [v29 bottomAnchor];
        id v38 = [v36 constraintEqualToAnchor:v37];
        [v38 setActive:1];

        __int16 v39 = [v6 leadingAnchor];
        id v40 = [v29 leadingAnchor];
        __int16 v41 = [v39 constraintEqualToAnchor:v40];
        [v41 setActive:1];

        BOOL v42 = [v6 trailingAnchor];
        __int16 v43 = [v29 trailingAnchor];
        int v44 = [v42 constraintEqualToAnchor:v43];
        [v44 setActive:1];

        __int16 v45 = [v6 keyboardLayoutGuide];
        double v46 = [v45 topAnchor];
        double v47 = [v29 topAnchor];
        double v48 = [v46 constraintEqualToAnchor:v47];
        [v48 setActive:1];
      }
      else
      {
        if (!keyboardCandidateBarBackgroundView)
        {
LABEL_56:

          return;
        }
        if (IMOSLoggingEnabled())
        {
          double v49 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)double v52 = 0;
            _os_log_impl(&dword_18EF18000, v49, OS_LOG_TYPE_INFO, "Removing the keyboardCandidateBarBackgroundView", v52, 2u);
          }
        }
        [(CKMessageEntryBackgroundViewProtocol *)self->_keyboardCandidateBarBackgroundView removeFromSuperview];
        id v29 = 0;
      }
      double v50 = self->_keyboardCandidateBarBackgroundView;
      self->_keyboardCandidateBarBackgroundView = (CKMessageEntryBackgroundViewProtocol *)v29;

      goto LABEL_56;
    }
    if (v12)
    {
      double v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int16 v55 = 0;
        _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "entryView: shouldInsertEntryView", v55, 2u);
      }
    }
    if (!v6
      || ([v5 subviews],
          double v14 = objc_claimAutoreleasedReturnValue(),
          char v15 = [v14 containsObject:v6],
          v14,
          (v15 & 1) != 0))
    {
LABEL_28:
      [v5 bringSubviewToFront:v6];
      goto LABEL_39;
    }
    [v5 addSubview:v6];
    [(CKChatController *)self setUpEntryViewLayoutConstraintsIfNecessary];
    int v16 = +[CKUIBehavior sharedBehaviors];
    if (([v16 isEntryViewFirstResponderOnViewAppearance] & 1) != 0
      || self->_entryViewShouldBecomeTargetFirstResponderForPendingDraft)
    {
    }
    else
    {

      if ((v10 & 1) == 0)
      {
LABEL_24:
        [(CKChatController *)self becomeFirstResponder];
        if (IMOSLoggingEnabled())
        {
          int v17 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)id v54 = 0;
            _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "entryView: added to view", v54, 2u);
          }
        }
        goto LABEL_28;
      }
    }
    [(CKChatController *)self setTargetFirstResponder:1];
    self->_entryViewShouldBecomeTargetFirstResponderForPendingDraft = 0;
    goto LABEL_24;
  }
}

- (BOOL)shouldShowEntryView
{
  if (([(CKChatController *)self isViewLoaded] & 1) == 0)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    BOOL v11 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      goto LABEL_31;
    }
    *(_WORD *)double v23 = 0;
    int v12 = "Not inserting entry view because view is nil";
LABEL_30:
    _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, v12, v23, 2u);
    goto LABEL_31;
  }
  int v3 = [(CKChatController *)self entryView];

  if (!v3)
  {
    if (!IMOSLoggingEnabled()) {
      return 0;
    }
    BOOL v11 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      goto LABEL_31;
    }
    *(_WORD *)double v23 = 0;
    int v12 = "Not inserting entry view because entryView is nil";
    goto LABEL_30;
  }
  if (![(CKChatController *)self entryViewRequiresCollectionView]
    || ([(CKChatController *)self collectionView],
        int v4 = objc_claimAutoreleasedReturnValue(),
        v4,
        v4))
  {
    BOOL v5 = [(CKCoreChatController *)self conversation];
    BOOL v6 = [v5 chat];
    double v7 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v8 = [v7 isTranscriptSharingEnabled];

    if (v8 && [v6 isStewieSharingChat])
    {
      if (IMOSLoggingEnabled())
      {
        int v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)double v23 = 0;
          int v10 = "Hiding entry view for Stewie Transcript Sharing";
LABEL_76:
          _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, v10, v23, 2u);
          goto LABEL_77;
        }
        goto LABEL_77;
      }
    }
    else if ([v6 isStewieEmergencyChat] {
           && ([MEMORY[0x1E4F6BC48] sharedInstance],
    }
               double v13 = objc_claimAutoreleasedReturnValue(),
               char v14 = [v13 isStewieEmergencyActive],
               v13,
               (v14 & 1) == 0))
    {
      if (IMOSLoggingEnabled())
      {
        int v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)double v23 = 0;
          int v10 = "Hiding entry view for Stewie emergency";
          goto LABEL_76;
        }
        goto LABEL_77;
      }
    }
    else if ([v6 isStewieRoadsideChat] {
           && ([MEMORY[0x1E4F6BC48] sharedInstance],
    }
               char v15 = objc_claimAutoreleasedReturnValue(),
               char v16 = [v15 isStewieRoadsideActive],
               v15,
               (v16 & 1) == 0))
    {
      if (IMOSLoggingEnabled())
      {
        int v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)double v23 = 0;
          int v10 = "Hiding entry view for Stewie roadside";
          goto LABEL_76;
        }
        goto LABEL_77;
      }
    }
    else
    {
      int v17 = [MEMORY[0x1E4F59080] sharedSystemShellSwitcher];
      char v18 = [v17 isClarityBoardEnabled];

      if ((v18 & 1) == 0)
      {
        if (-[CKChatController isShowingOscarChat](self, "isShowingOscarChat") && ([v6 isSMS] & 1) == 0)
        {
          if (IMOSLoggingEnabled())
          {
            int v9 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)double v23 = 0;
              int v10 = "Hiding entry view for Oscar";
              goto LABEL_76;
            }
            goto LABEL_77;
          }
        }
        else if ([v5 hasLeftGroupChat])
        {
          if (IMOSLoggingEnabled())
          {
            int v9 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)double v23 = 0;
              int v10 = "Hiding entry view because the user has left the group chat";
              goto LABEL_76;
            }
LABEL_77:
          }
        }
        else if ([v5 isReadOnlyChat])
        {
          if (IMOSLoggingEnabled())
          {
            int v9 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)double v23 = 0;
              int v10 = "Hiding entry view because the chat is read only";
              goto LABEL_76;
            }
            goto LABEL_77;
          }
        }
        else if ([v5 isBusinessChatDisabled])
        {
          if (IMOSLoggingEnabled())
          {
            int v9 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)double v23 = 0;
              int v10 = "Hiding entry view because business chat is disabled";
              goto LABEL_76;
            }
            goto LABEL_77;
          }
        }
        else if ([v5 hasReplyEnabled])
        {
          if (v6 && ([v6 allowedByScreenTime] & 1) == 0)
          {
            if (IMOSLoggingEnabled())
            {
              int v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v23 = 0;
                int v10 = "Hiding entry view because chat is screentime blocked";
                goto LABEL_76;
              }
              goto LABEL_77;
            }
          }
          else if ([(CKCoreChatController *)self isShowingLockoutView])
          {
            if (IMOSLoggingEnabled())
            {
              int v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v23 = 0;
                int v10 = "Hiding entry view while the screentime lockout view is being shown";
                goto LABEL_76;
              }
              goto LABEL_77;
            }
          }
          else if ([(CKChatController *)self isEditing])
          {
            if (IMOSLoggingEnabled())
            {
              int v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v23 = 0;
                int v10 = "Hiding entry view because the user is editing the chat";
                goto LABEL_76;
              }
              goto LABEL_77;
            }
          }
          else if ([(CKChatController *)self isShowingPreview])
          {
            if (IMOSLoggingEnabled())
            {
              int v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v23 = 0;
                int v10 = "Hiding entry view while the user is viewing a preview";
                goto LABEL_76;
              }
              goto LABEL_77;
            }
          }
          else
          {
            if (![v6 isGroupChat]
              || ([v6 participants],
                  int v20 = objc_claimAutoreleasedReturnValue(),
                  uint64_t v21 = [v20 count],
                  v20,
                  v21 != 1))
            {
              BOOL v19 = 1;
              goto LABEL_79;
            }
            if (IMOSLoggingEnabled())
            {
              int v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v23 = 0;
                int v10 = "Hiding entry view while the user is viewing an unnamed single-participant group";
                goto LABEL_76;
              }
              goto LABEL_77;
            }
          }
        }
        else if (IMOSLoggingEnabled())
        {
          int v9 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)double v23 = 0;
            int v10 = "Hiding entry view because hasReplyEnabled is false";
            goto LABEL_76;
          }
          goto LABEL_77;
        }
      }
    }
    BOOL v19 = 0;
LABEL_79:

    return v19;
  }
  if (IMOSLoggingEnabled())
  {
    BOOL v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)double v23 = 0;
      int v12 = "Not inserting entry view because collectionView is nil";
      goto LABEL_30;
    }
LABEL_31:
  }
  return 0;
}

- (BOOL)entryViewRequiresCollectionView
{
  return 1;
}

- (void)loadChatInputController
{
  int v3 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v4 = [v3 isTranscriptSharingEnabled];

  if (!v4
    || ([(CKCoreChatController *)self conversation],
        BOOL v5 = objc_claimAutoreleasedReturnValue(),
        [v5 chat],
        BOOL v6 = objc_claimAutoreleasedReturnValue(),
        char v7 = [v6 isStewieSharingChat],
        v6,
        v5,
        (v7 & 1) == 0))
  {
    int v8 = [(CKCoreChatController *)self inputController];

    if (!v8)
    {
      int v10 = objc_alloc_init(CKChatInputController);
      [(CKChatInputController *)v10 set_isRunningPPT:[(CKChatController *)self _isRunningPPT]];
      [(CKCoreChatController *)self setInputController:v10];
      [(CKChatInputController *)v10 setDelegate:self];
      id WeakRetained = objc_loadWeakRetained((id *)&self->_externalPluginControllerProvider);
      [(CKChatInputController *)v10 setExternalPluginControllerProvider:WeakRetained];
    }
  }
}

- (double)_entryViewTopInsetPadding
{
  return 0.0;
}

- (BOOL)_CKRunningInSOSBuddy
{
  if (_CKRunningInSOSBuddy_onceToken != -1) {
    dispatch_once(&_CKRunningInSOSBuddy_onceToken, &__block_literal_global_808);
  }
  return _CKRunningInSOSBuddy_sIsRunningInSOSBuddy;
}

CFStringRef __40__CKChatController__CKRunningInSOSBuddy__block_invoke()
{
  MainBundle = CFBundleGetMainBundle();
  CFStringRef result = CFBundleGetIdentifier(MainBundle);
  if (result)
  {
    CFStringRef result = (CFStringRef)CFEqual(result, @"com.apple.SOSBuddy");
    BOOL v2 = result != 0;
  }
  else
  {
    BOOL v2 = 0;
  }
  _CKRunningInSOSBuddy_sIsRunningInSOSBudddouble y = v2;
  return result;
}

- (void)viewSafeAreaInsetsDidChange
{
  v3.receiver = self;
  v3.super_class = (Class)CKChatController;
  [(CKScrollViewController *)&v3 viewSafeAreaInsetsDidChange];
  [(CKChatController *)self _updateEntryViewFrameIfNeeded:0];
}

- (double)_maxEntryViewHeight
{
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  frozenEntryViewHeightDuringDismissAnimation = self->_frozenEntryViewHeightDuringDismissAnimation;
  if (!frozenEntryViewHeightDuringDismissAnimation)
  {
    BOOL v5 = [(CKChatController *)self entryView];
    BOOL v6 = [(CKChatController *)self view];
    [v6 bounds];
    CGFloat v73 = v8;
    CGFloat v74 = v7;
    CGFloat rect = v9;
    CGFloat v11 = v10;

    [(CKScrollViewController *)self navigationBarInsets];
    double v13 = v12;
    [(CKChatController *)self _entryViewTopInsetPadding];
    double v15 = v14;
    if (IMOSLoggingEnabled())
    {
      char v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v87.origin.double y = v73;
        v87.origin.double x = v74;
        v87.size.double width = rect;
        v87.size.double height = v11;
        NSStringFromCGRect(v87);
        double v17 = COERCE_DOUBLE((id)objc_claimAutoreleasedReturnValue());
        [(CKScrollViewController *)self navigationBarInsets];
        double v19 = v18;
        [(CKChatController *)self _entryViewTopInsetPadding];
        *(_DWORD *)CGAffineTransform buf = 138412802;
        double v76 = v17;
        __int16 v77 = 2048;
        CGFloat v78 = v19;
        __int16 v79 = 2048;
        double v80 = v20;
        _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "entryView: Calculating max entry view height. Bounds: %@, navbar top inset: %f, entryView top inset: %f", buf, 0x20u);
      }
    }
    uint64_t v21 = [(CKChatController *)self catchUpButton];

    double v22 = v13 + v15;
    if (v21)
    {
      double v23 = [(CKChatController *)self catchUpButton];
      [v23 frame];
      double v25 = v24;
      double v26 = [(CKChatController *)self catchUpButton];
      [v26 frame];
      double v28 = v27;

      if (v22 < v25 + v28) {
        double v22 = v25 + v28;
      }
    }
    id v29 = [(CKChatController *)self view];
    [v29 bounds];
    objc_msgSend(v5, "sizeThatFits:", CGRectGetWidth(v88), 1.79769313e308);
    double v31 = v30;

    long long v32 = [v5 window];
    LODWORD(v29) = v32 == 0;

    if (v29)
    {
      if (IMOSLoggingEnabled())
      {
        id v54 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)CGAffineTransform buf = 134217984;
          double v76 = v31;
          _os_log_impl(&dword_18EF18000, v54, OS_LOG_TYPE_INFO, "entryView: Entry does not have a window, return maxEntryViewHeight: %f", buf, 0xCu);
        }
        goto LABEL_51;
      }
      goto LABEL_57;
    }
    [v5 bounds];
    double v34 = v33;
    double v36 = v35;
    double v38 = v37;
    double v40 = v39;
    __int16 v41 = [(CKChatController *)self view];
    objc_msgSend(v5, "convertRect:toView:", v41, v34, v36, v38, v40);
    CGFloat v43 = v42;
    double v45 = v44;
    CGFloat v47 = v46;
    CGFloat v49 = v48;

    if (v45 == 0.0)
    {
      v89.origin.double y = v73;
      v89.origin.double x = v74;
      v89.size.double width = rect;
      v89.size.double height = v11;
      double MaxY = CGRectGetMaxY(v89);
      if (IMOSLoggingEnabled())
      {
        id v51 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO))
        {
          v90.origin.double x = v43;
          v90.origin.double y = v45;
          v90.size.double width = v47;
          v90.size.double height = v49;
          NSStringFromCGRect(v90);
          double v52 = COERCE_DOUBLE((id)objc_claimAutoreleasedReturnValue());
          v91.origin.double y = v73;
          v91.origin.double x = v74;
          v91.size.double width = rect;
          v91.size.double height = v11;
          CGFloat v53 = CGRectGetMaxY(v91);
          *(_DWORD *)CGAffineTransform buf = 138412546;
          double v76 = v52;
          __int16 v77 = 2048;
          CGFloat v78 = v53;
          _os_log_impl(&dword_18EF18000, v51, OS_LOG_TYPE_INFO, "entryView: entryViewCurrentBoundsInViewControllerCoordinates.origin.y (%@) is 0, setting entryViewCurrentMaxY to max y: %f", buf, 0x16u);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        __int16 v55 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
        {
          v92.origin.double x = v43;
          v92.origin.double y = v45;
          v92.size.double width = v47;
          v92.size.double height = v49;
          NSStringFromCGRect(v92);
          double v56 = COERCE_DOUBLE((id)objc_claimAutoreleasedReturnValue());
          v93.origin.double x = v43;
          v93.origin.double y = v45;
          v93.size.double width = v47;
          v93.size.double height = v49;
          CGFloat v57 = CGRectGetMaxY(v93);
          *(_DWORD *)CGAffineTransform buf = 138412546;
          double v76 = v56;
          __int16 v77 = 2048;
          CGFloat v78 = v57;
          _os_log_impl(&dword_18EF18000, v55, OS_LOG_TYPE_INFO, "entryView: entryViewCurrentBoundsInViewControllerCoordinates.origin.y (%@) is not 0, setting entryViewCurrentMaxY to max y: %f", buf, 0x16u);
        }
      }
      v94.origin.double x = v43;
      v94.origin.double y = v45;
      v94.size.double width = v47;
      v94.size.double height = v49;
      double MaxY = CGRectGetMaxY(v94);
    }
    int v58 = [MEMORY[0x1E4F42B08] isInHardwareKeyboardMode];
    double v59 = MaxY - v31;
    if (MaxY - v31 > v22)
    {
      if (IMOSLoggingEnabled())
      {
        id v54 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)CGAffineTransform buf = 134217984;
          double v76 = v31;
          _os_log_impl(&dword_18EF18000, v54, OS_LOG_TYPE_INFO, "entryView: There is still room for the entry view to expand, return maxEntryViewHeight: %f", buf, 0xCu);
        }
LABEL_51:
      }
LABEL_57:

      return v31;
    }
    double v60 = MaxY - v22;
    if (v59 < 0.0)
    {
      if (IMOSLoggingEnabled())
      {
        double v61 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
        {
          if (v60 >= v31) {
            double v62 = v31;
          }
          else {
            double v62 = MaxY - v22;
          }
          [(CKScrollViewController *)self keyboardFrameInViewCoordinates];
          double v63 = NSStringFromCGRect(v95);
          *(_DWORD *)CGAffineTransform buf = 134219010;
          double v76 = v59;
          __int16 v77 = 2048;
          CGFloat v78 = v60;
          __int16 v79 = 2048;
          double v80 = v31;
          __int16 v81 = 2048;
          double v82 = v62;
          __int16 v83 = 2112;
          CGPoint v84 = v63;
          _os_log_impl(&dword_18EF18000, v61, OS_LOG_TYPE_INFO, "entryView: entryViewOriginYAtFittingSize(%f) is negative, return min of availableHeight(%f) and entryViewFittingHeight(%f): %f. KeyboardFrameInViewCoordinates: %@", buf, 0x34u);
        }
      }
      if (v60 < v31) {
        double v31 = v60;
      }
      goto LABEL_57;
    }
    if (v58)
    {
      if (IMOSLoggingEnabled())
      {
        double v64 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)CGAffineTransform buf = 134217984;
          double v76 = MaxY - v22;
          _os_log_impl(&dword_18EF18000, v64, OS_LOG_TYPE_INFO, "entryView: Is in hardware keyboard mode, return availableHeight: %f", buf, 0xCu);
        }
LABEL_55:
      }
    }
    else
    {
      if (v60 < 0.0)
      {
        id v54 = IMLogHandleForCategory();
        if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
          [(CKChatController *)v54 _maxEntryViewHeight];
        }
        goto LABEL_51;
      }
      if (IMOSLoggingEnabled())
      {
        double v64 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)CGAffineTransform buf = 134217984;
          double v76 = MaxY - v22;
          _os_log_impl(&dword_18EF18000, v64, OS_LOG_TYPE_INFO, "entryView: Found max height in view controller, return entryViewMaxHeightInViewController: %f", buf, 0xCu);
        }
        goto LABEL_55;
      }
    }
    double v31 = MaxY - v22;
    goto LABEL_57;
  }

  [(NSNumber *)frozenEntryViewHeightDuringDismissAnimation doubleValue];
  return result;
}

- (CGRect)inputAccessoryViewFrameForFloatingKeyboard
{
  BOOL v2 = [(CKChatController *)self entryView];
  [v2 frame];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  double v11 = v4;
  double v12 = v6;
  double v13 = v8;
  double v14 = v10;
  result.size.double height = v14;
  result.size.double width = v13;
  result.origin.double y = v12;
  result.origin.double x = v11;
  return result;
}

- (void)_updateEntryViewFrameIfNeeded:(BOOL)a3
{
  BOOL v3 = a3;
  double v5 = [(CKChatController *)self entryView];
  id v17 = [v5 window];

  if (v17)
  {
    double v6 = [(CKChatController *)self view];
    [v6 bounds];
    double v8 = v7;

    [(CKChatController *)self _maxEntryViewHeight];
    double v10 = v9;
    double v11 = [(CKChatController *)self entryView];
    [v11 frame];
    double v13 = v12;
    double v15 = v14;

    if (v13 != v8 || v15 != v10)
    {
      [(CKChatController *)self _setAvoidanceInsetsNeedsUpdate];
      [(CKChatController *)self setupScrollingForKeyboardInteraction];
      BOOL v16 = [(CKScrollViewController *)self isKeyboardFloating];
      -[CKChatController _setEntryViewFrame:animated:](self, "_setEntryViewFrame:animated:", v3, 0.0, 0.0, v8, v10);
      if (v16) {
        [(CKScrollViewController *)self inputAccessoryViewFrameUpdatedForFloatingKeyboard];
      }
    }
  }
}

- (void)__setEntryViewFrame:(CGRect)a3
{
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  id v12 = [(CKChatController *)self entryView];
  double v8 = +[CKUIBehavior sharedBehaviors];
  int v9 = [v8 entryViewFollowsKeyboardLayoutGuide];

  if (v9)
  {
    double v10 = [v12 heightConstraint];
    [v10 constant];
    if (vabdd_f64(height, v11) <= 0.001)
    {
    }
    else
    {
      [v10 setConstant:height];

      [v12 layoutIfNeeded];
      [(CKChatController *)self _layoutEntryViewSuperview];
    }
  }
  else
  {
    objc_msgSend(v12, "setFrame:", x, y, width, height);
  }
}

- (void)_setEntryViewFrame:(CGRect)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5 completionHandler:(id)a6
{
  BOOL v6 = a5;
  BOOL v7 = a4;
  double height = a3.size.height;
  double width = a3.size.width;
  CGFloat y = a3.origin.y;
  CGFloat x = a3.origin.x;
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  double v13 = (void (**)(void))a6;
  double v14 = [(CKChatController *)self entryView];
  if (IMOSLoggingEnabled())
  {
    double v15 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      v48.origin.CGFloat x = x;
      v48.origin.CGFloat y = y;
      v48.size.double width = width;
      v48.size.double height = height;
      BOOL v16 = NSStringFromCGRect(v48);
      *(_DWORD *)CGAffineTransform buf = 138412290;
      double v46 = v16;
      _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "entryView: setting entry view frame: %@", buf, 0xCu);
    }
  }
  [v14 frame];
  if (v18 != width || v17 != height)
  {
    if (v6)
    {
      if (![(CKChatController *)self isEntryViewResizeAnimationRunning] && v7)
      {
        double v20 = (void *)MEMORY[0x1E4F42FF0];
        v43[0] = MEMORY[0x1E4F143A8];
        v43[1] = 3221225472;
        v43[2] = __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke;
        v43[3] = &unk_1E5620C40;
        id v44 = v14;
        [v20 performWithoutAnimation:v43];
      }
      [(CKChatController *)self setEntryViewResizeAnimationRunning:1];
      if ([v14 shouldUseLinearResizeForAudioMessage])
      {
        id v21 = (id)[objc_alloc(MEMORY[0x1E4F42910]) initWithAnimationCurve:3];
        double v22 = 0.5;
      }
      else
      {
        id v21 = objc_alloc_init(MEMORY[0x1E4F42E18]);
        [v21 settlingDuration];
        double v22 = v24;
      }
      double v25 = (void *)[objc_alloc(MEMORY[0x1E4F43008]) initWithDuration:v21 timingParameters:v22];
      v42[0] = MEMORY[0x1E4F143A8];
      v42[1] = 3221225472;
      v42[2] = __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_2;
      void v42[3] = &unk_1E5621968;
      v42[4] = self;
      *(CGFloat *)&v42[5] = x;
      *(CGFloat *)&v42[6] = y;
      *(double *)&v42[7] = width;
      *(double *)&v42[8] = height;
      [v25 addAnimations:v42];
      v40[0] = MEMORY[0x1E4F143A8];
      v40[1] = 3221225472;
      void v40[2] = __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_3;
      v40[3] = &unk_1E56228B8;
      void v40[4] = self;
      __int16 v41 = v13;
      [v25 addCompletion:v40];
      [v25 startAnimation];
    }
    else
    {
      [(CKChatController *)self setEntryViewResizeAnimationRunning:1];
      double v23 = (void *)MEMORY[0x1E4F42FF0];
      v39[0] = MEMORY[0x1E4F143A8];
      v39[1] = 3221225472;
      v39[2] = __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_4;
      v39[3] = &unk_1E5621968;
      v39[4] = self;
      *(CGFloat *)&v39[5] = x;
      *(CGFloat *)&v39[6] = y;
      *(double *)&v39[7] = width;
      *(double *)&v39[8] = height;
      v37[0] = MEMORY[0x1E4F143A8];
      v37[1] = 3221225472;
      v37[2] = __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_5;
      v37[3] = &unk_1E5622750;
      void v37[4] = self;
      double v38 = v13;
      [v23 animateWithDuration:v39 animations:v37 completion:0.0];

      double v22 = 0.0;
    }
    [(CKChatController *)self _setAvoidanceInsetsNeedsUpdate];
    double v26 = [(CKChatController *)self entryView];
    double v27 = [v26 entryViewKeyboardLayoutGuide];

    [v27 setKeyboardDismissPadding:height];
    double v28 = [(CKCoreChatController *)self inputController];
    [v28 setAppCardDismissPadding:height];

    id v29 = +[CKUIBehavior sharedBehaviors];
    char v30 = [v29 isEntryViewInputAccessory];

    if ((v30 & 1) == 0)
    {
      double v31 = [(CKCoreChatController *)self collectionViewController];
      long long v32 = [v31 collectionView];

      [v32 beginDisablingTranscriptDynamicsForReason:@"ProgramaticScroll"];
      if (v6)
      {
        [(CKScrollViewController *)self updateScrollGeometryForReason:@"EntryViewFrameChanged" withDuration:3 animationCurve:v22];
        dispatch_time_t v33 = dispatch_time(0, (uint64_t)(v22 * 1000000000.0));
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_6;
        block[3] = &unk_1E5622330;
        id v35 = v32;
        double v36 = v13;
        dispatch_after(v33, MEMORY[0x1E4F14428], block);
      }
      else
      {
        [(CKScrollViewController *)self updateScrollGeometryWithoutAnimationForReason:@"EntryViewFrameChanged"];
        [v32 endDisablingTranscriptDynamicsForReason:@"ProgramaticScroll"];
        v13[2](v13);
      }
    }
  }
}

uint64_t __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) prepareForResizeAnimationIfNeeded];
}

void __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_2(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "__setEntryViewFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  id v3 = [*(id *)(a1 + 32) entryView];
  BOOL v2 = [v3 contentView];
  [v2 setNeedsLayout];
}

void __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_3(uint64_t a1)
{
  [*(id *)(a1 + 32) setEntryViewResizeAnimationRunning:0];
  BOOL v2 = +[CKUIBehavior sharedBehaviors];
  int v3 = [v2 isEntryViewInputAccessory];

  if (v3)
  {
    double v4 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v4();
  }
}

void __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "__setEntryViewFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  id v3 = [*(id *)(a1 + 32) entryView];
  BOOL v2 = [v3 contentView];
  [v2 setNeedsLayout];
}

void __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_5(uint64_t a1)
{
  [*(id *)(a1 + 32) setEntryViewResizeAnimationRunning:0];
  BOOL v2 = +[CKUIBehavior sharedBehaviors];
  int v3 = [v2 isEntryViewInputAccessory];

  if (v3)
  {
    double v4 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v4();
  }
}

uint64_t __82__CKChatController__setEntryViewFrame_isContentChange_animated_completionHandler___block_invoke_6(uint64_t a1)
{
  [*(id *)(a1 + 32) endDisablingTranscriptDynamicsForReason:@"ProgramaticScroll"];
  BOOL v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

- (void)_setEntryViewFrame:(CGRect)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5
{
}

- (void)_setEntryViewFrame:(CGRect)a3 animated:(BOOL)a4
{
}

- (double)bottomInsetPadding
{
  int v3 = +[CKUIBehavior sharedBehaviors];
  int v4 = [v3 entryViewFollowsKeyboardLayoutGuide];

  double v5 = [(CKChatController *)self entryView];
  BOOL v6 = [v5 window];
  BOOL v7 = v6;
  if (v4)
  {

    if (v7)
    {
      double v8 = [v5 heightConstraint];
      [v8 constant];
      double v10 = v9;
    }
    else
    {
      double v8 = [(CKChatController *)self view];
      [v8 safeAreaInsets];
      double v10 = v12;
    }

    goto LABEL_8;
  }

  double v10 = 0.0;
  if (!v7)
  {
    double v5 = [(CKChatController *)self view];
    [v5 safeAreaInsets];
    double v10 = v11;
LABEL_8:
  }
  return v10;
}

- (void)setUpEntryViewLayoutConstraintsIfNecessary
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    int v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      LOWORD(v48) = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "setUpEntryViewLayoutConstraintsIfNecessary", (uint8_t *)&v48, 2u);
    }
  }
  int v4 = +[CKUIBehavior sharedBehaviors];
  char v5 = [v4 entryViewFollowsKeyboardLayoutGuide];

  if (v5)
  {
    BOOL v6 = [(CKChatController *)self entryView];
    BOOL v7 = [v6 superview];
    if (v7)
    {
      if (!self->_entryViewLeadingLayoutConstraint)
      {
        double v8 = [v6 leadingAnchor];
        double v9 = [v7 leadingAnchor];
        double v10 = [v8 constraintEqualToAnchor:v9];
        entryViewLeadingLayoutConstraint = self->_entryViewLeadingLayoutConstraint;
        self->_entryViewLeadingLayoutConstraint = v10;

        [(NSLayoutConstraint *)self->_entryViewLeadingLayoutConstraint setActive:1];
      }
      if (!self->_entryViewTrailingLayoutConstraint)
      {
        double v12 = [v6 trailingAnchor];
        double v13 = [v7 trailingAnchor];
        double v14 = [v12 constraintEqualToAnchor:v13];
        entryViewTrailingLayoutConstraint = self->_entryViewTrailingLayoutConstraint;
        self->_entryViewTrailingLayoutConstraint = v14;

        [(NSLayoutConstraint *)self->_entryViewTrailingLayoutConstraint setActive:1];
      }
      BOOL v16 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
      int v17 = [v16 isEntryViewUsesKeyboardLayoutGuideEnabled];

      if (v17)
      {
        double v18 = [v7 keyboardLayoutGuide];
        [v18 setFollowsUndockedKeyboard:0];
        [v18 followUndockedKeyboardOfTypes:28];
        double v19 = +[CKUIBehavior sharedBehaviors];
        objc_msgSend(v18, "setIgnoresSafeArea:", objc_msgSend(v19, "entryFieldShouldUseBackdropView"));

        double v20 = [(CKChatController *)self entryView];
        [v20 setEntryViewKeyboardLayoutGuide:v18];

        entryViewKeyboardLayoutConstraint = self->_entryViewKeyboardLayoutConstraint;
        if (entryViewKeyboardLayoutConstraint) {
          [(NSLayoutConstraint *)entryViewKeyboardLayoutConstraint setActive:0];
        }
        double v22 = [v6 bottomAnchor];
        double v23 = [v18 topAnchor];
        double v24 = [v22 constraintEqualToAnchor:v23];
        double v25 = self->_entryViewKeyboardLayoutConstraint;
        self->_entryViewKeyboardLayoutConstraint = v24;

        if (self->_entryViewContainerView)
        {
          double v26 = [v6 bottomAnchor];
          double v27 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView bottomAnchor];
          double v28 = [v26 constraintEqualToAnchor:v27];
          [(CKMessageEntryViewContainerView *)self->_entryViewContainerView setEntryViewStuckToChatControllerBottomLayoutConstraint:v28];
        }
        if (IMOSLoggingEnabled())
        {
          id v29 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            int v48 = 138412290;
            CGFloat v49 = v18;
            _os_log_impl(&dword_18EF18000, v29, OS_LOG_TYPE_INFO, "entryView: set entry view to keyboard top anchor: %@", (uint8_t *)&v48, 0xCu);
          }
        }
      }
      else
      {
        long long v32 = [v7 bottomAnchor];
        dispatch_time_t v33 = [v6 bottomAnchor];
        double v34 = [v32 constraintEqualToAnchor:v33 constant:0.0];
        entryViewFauxKeyboardLayoutConstraint = self->_entryViewFauxKeyboardLayoutConstraint;
        self->_entryViewFauxKeyboardLayoutConstraint = v34;

        [(CKScrollViewController *)self keyboardFrameInViewCoordinates];
        [(CKChatController *)self _updateFauxKeyboardLayoutGuideIfNeededWithKeyboardFrame:"_updateFauxKeyboardLayoutGuideIfNeededWithKeyboardFrame:"];
      }
      [v7 bounds];
      objc_msgSend(v6, "sizeThatFits:", v36, 1.79769313e308);
      double v38 = v37;
      double v39 = [v6 heightConstraint];
      BOOL v40 = v39 == 0;

      if (v40)
      {
        __int16 v41 = [v6 heightAnchor];
        double v42 = [v41 constraintEqualToConstant:v38];
        [v6 setHeightConstraint:v42];
      }
      else
      {
        __int16 v41 = [v6 heightConstraint];
        [v41 setConstant:v38];
      }

      if (IMOSLoggingEnabled())
      {
        CGFloat v43 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
        {
          id v44 = NSNumber;
          double v45 = [v6 heightConstraint];
          [v45 constant];
          double v46 = objc_msgSend(v44, "numberWithDouble:");
          int v48 = 138412290;
          CGFloat v49 = v46;
          _os_log_impl(&dword_18EF18000, v43, OS_LOG_TYPE_INFO, "entryView: heightConstraint.constant: %@", (uint8_t *)&v48, 0xCu);
        }
      }
      uint64_t v47 = [v6 heightConstraint];
      [v47 setActive:1];

      [(CKChatController *)self _setUpEntryViewAppCardLayoutConstraint];
      [(CKChatController *)self updateActiveEntryViewPositioningGuide];
      [v7 layoutIfNeeded];
      [(CKScrollViewController *)self updateScrollGeometryWithoutAnimationForReason:@"EntryViewCreated"];
    }
    else if (IMOSLoggingEnabled())
    {
      double v31 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
      {
        LOWORD(v48) = 0;
        _os_log_impl(&dword_18EF18000, v31, OS_LOG_TYPE_INFO, "entryView: not in view hierarchy", (uint8_t *)&v48, 2u);
      }
    }
  }
  else if (IMOSLoggingEnabled())
  {
    char v30 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      LOWORD(v48) = 0;
      _os_log_impl(&dword_18EF18000, v30, OS_LOG_TYPE_INFO, "entryView: not using layout constraints", (uint8_t *)&v48, 2u);
    }
  }
}

- (void)_updateEntryViewConstraintsIfNeeded
{
  int v3 = [(CKChatController *)self entryView];
  int v4 = [v3 window];

  if (v4)
  {
    [(CKChatController *)self setUpEntryViewLayoutConstraintsIfNecessary];
  }
  else
  {
    [(CKChatController *)self _invalidateEntryViewConstraints];
  }
}

- (void)_invalidateEntryViewConstraints
{
  [(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint setActive:0];
  [(NSLayoutConstraint *)self->_entryViewKeyboardLayoutConstraint setActive:0];
  [(NSLayoutConstraint *)self->_entryViewKeyboardSnapshotLayoutConstraint setActive:0];
  [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint setActive:0];
  [(NSLayoutConstraint *)self->_entryViewLeadingLayoutConstraint setActive:0];
  [(NSLayoutConstraint *)self->_entryViewTrailingLayoutConstraint setActive:0];
  int v3 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
  [v3 setActive:0];

  entryViewFauxKeyboardLayoutConstraint = self->_entryViewFauxKeyboardLayoutConstraint;
  self->_entryViewFauxKeyboardLayoutConstraint = 0;

  entryViewKeyboardLayoutConstraint = self->_entryViewKeyboardLayoutConstraint;
  self->_entryViewKeyboardLayoutConstraint = 0;

  entryViewKeyboardSnapshotLayoutConstraint = self->_entryViewKeyboardSnapshotLayoutConstraint;
  self->_entryViewKeyboardSnapshotLayoutConstraint = 0;

  entryViewAppCardLayoutConstraint = self->_entryViewAppCardLayoutConstraint;
  self->_entryViewAppCardLayoutConstraint = 0;

  entryViewLeadingLayoutConstraint = self->_entryViewLeadingLayoutConstraint;
  self->_entryViewLeadingLayoutConstraint = 0;

  entryViewTrailingLayoutConstraint = self->_entryViewTrailingLayoutConstraint;
  self->_entryViewTrailingLayoutConstraint = 0;

  entryViewContainerView = self->_entryViewContainerView;

  [(CKMessageEntryViewContainerView *)entryViewContainerView setEntryViewStuckToChatControllerBottomLayoutConstraint:0];
}

- (void)_setUpEntryViewAppCardLayoutConstraint
{
  id v12 = [(CKChatController *)self entryView];
  int v3 = [v12 window];
  entryViewAppCardLayoutConstraint = self->_entryViewAppCardLayoutConstraint;
  if (v3)
  {
    char v5 = [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint firstItem];
    if (v3 == v5)
    {
      BOOL v6 = [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint secondItem];
      BOOL v7 = [(CKChatController *)self entryView];

      if (v6 == v7) {
        goto LABEL_8;
      }
    }
    else
    {
    }
    entryViewAppCardLayoutConstraint = [v3 bottomAnchor];
    double v8 = [v12 bottomAnchor];
    double v9 = [(CKCoreChatController *)self inputController];
    [v9 _appCardHeightWithSafeArea];
    objc_msgSend(entryViewAppCardLayoutConstraint, "constraintEqualToAnchor:constant:", v8);
    double v10 = (NSLayoutConstraint *)objc_claimAutoreleasedReturnValue();
    double v11 = self->_entryViewAppCardLayoutConstraint;
    self->_entryViewAppCardLayoutConstraint = v10;
  }
  else
  {
    self->_entryViewAppCardLayoutConstraint = 0;
  }

LABEL_8:
}

- (double)_expectedAppCardAndEntryViewHeight
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    int v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = NSNumber;
      char v5 = [(CKCoreChatController *)self inputController];
      [v5 _appCardHeightWithSafeArea];
      BOOL v6 = objc_msgSend(v4, "numberWithDouble:");
      BOOL v7 = NSNumber;
      double v8 = [(CKChatController *)self entryView];
      [v8 frame];
      double v10 = [v7 numberWithDouble:v9];
      int v18 = 138412546;
      double v19 = v6;
      __int16 v20 = 2112;
      id v21 = v10;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "_appCardHeightWithSafeArea: %@ entryView.frame: %@", (uint8_t *)&v18, 0x16u);
    }
  }
  double v11 = [(CKCoreChatController *)self inputController];
  [v11 _appCardHeightWithSafeArea];
  double v13 = v12;
  double v14 = [(CKChatController *)self entryView];
  [v14 frame];
  double v16 = v15;

  return v13 + v16;
}

- (void)updateChatItemBalloonViewAndStickerViews:(id)a3 hidden:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  BOOL v7 = objc_opt_new();
  if (v4)
  {
    double v8 = [(CKCoreChatController *)self collectionViewController];
    double v9 = [v8 balloonViewForChatItem:v6];
    double v10 = [v8 indexPathForBalloonView:v9];
    objc_msgSend(v7, "addIndex:", objc_msgSend(v10, "row"));
  }
  double v11 = [(CKCoreChatController *)self collectionViewController];
  [v11 setHiddenBalloonViews:v7];

  double v12 = [MEMORY[0x1E4F28E60] indexSet];
  if (v4)
  {
    double v13 = [v6 visibleAssociatedMessageChatItems];
    uint64_t v15 = MEMORY[0x1E4F143A8];
    uint64_t v16 = 3221225472;
    int v17 = __68__CKChatController_updateChatItemBalloonViewAndStickerViews_hidden___block_invoke;
    int v18 = &unk_1E56228E0;
    double v19 = self;
    id v20 = v12;
    [v13 enumerateObjectsUsingBlock:&v15];
  }
  double v14 = [(CKCoreChatController *)self collectionViewController];
  [v14 setHiddenAssociatedItems:v12];
}

void __68__CKChatController_updateChatItemBalloonViewAndStickerViews_hidden___block_invoke(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v3 = [*(id *)(a1 + 32) collectionViewController];
    BOOL v4 = [v3 associatedChatItems];
    uint64_t v5 = [v4 indexOfObject:v6];

    [*(id *)(a1 + 40) addIndex:v5];
  }
}

- (void)associatedStickerCells:(id *)a3 stickerChatItems:(id *)a4 chatItemGUID:(id)a5
{
  id v8 = a5;
  double v9 = [(CKCoreChatController *)self collectionViewController];
  double v10 = [v9 chatItemForGUID:v8];

  double v11 = [MEMORY[0x1E4F1CA48] array];
  double v12 = [MEMORY[0x1E4F1CA48] array];
  double v13 = [v10 visibleAssociatedMessageChatItems];
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __73__CKChatController_associatedStickerCells_stickerChatItems_chatItemGUID___block_invoke;
  v17[3] = &unk_1E5622908;
  id v18 = v9;
  id v14 = v11;
  id v19 = v14;
  id v15 = v12;
  id v20 = v15;
  id v16 = v9;
  [v13 enumerateObjectsUsingBlock:v17];

  if (a3) {
    *a3 = (id)[v14 copy];
  }
  if (a4) {
    *a4 = (id)[v15 copy];
  }
}

void __73__CKChatController_associatedStickerCells_stickerChatItems_chatItemGUID___block_invoke(id *a1, void *a2)
{
  id v8 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  BOOL v4 = v8;
  if (isKindOfClass)
  {
    id v5 = v8;
    uint64_t v6 = [a1[4] cellForAssociatedChatItem:v5];
    BOOL v7 = (void *)v6;
    if (v5 && v6)
    {
      [a1[5] addObject:v6];
      [a1[6] addObject:v5];
    }

    BOOL v4 = v8;
  }
}

- (void)_updateFauxKeyboardLayoutGuideIfNeededWithKeyboardFrame:(CGRect)a3
{
  double height = a3.size.height;
  CGFloat width = a3.size.width;
  CGFloat y = a3.origin.y;
  CGFloat x = a3.origin.x;
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v23.origin.CGFloat x = x;
      v23.origin.CGFloat y = y;
      v23.size.CGFloat width = width;
      v23.size.double height = height;
      double v9 = NSStringFromCGRect(v23);
      int v20 = 138412290;
      id v21 = v9;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "entryView: updating faux keyboard layout guide with keyboard frame: %@", (uint8_t *)&v20, 0xCu);
    }
  }
  double v10 = +[CKUIBehavior sharedBehaviors];
  int v11 = [v10 entryViewFollowsKeyboardLayoutGuide];

  if (v11 && self->_entryViewFauxKeyboardLayoutConstraint)
  {
    BOOL v12 = [(CKScrollViewController *)self isKeyboardUndocked];
    char v13 = height <= 0.0 || v12;
    double v14 = 0.0;
    if ((v13 & 1) == 0)
    {
      id v15 = [(CKChatController *)self view];
      [v15 bounds];
      double v17 = v16;
      v24.origin.CGFloat x = x;
      v24.origin.CGFloat y = y;
      v24.size.CGFloat width = width;
      v24.size.double height = height;
      double MinY = CGRectGetMinY(v24);

      double v14 = v17 - MinY;
    }
    [(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint constant];
    if (vabdd_f64(v19, v14) > 0.00000011920929) {
      [(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint setConstant:v14];
    }
  }
}

- (void)_updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:(id)a3
{
  id v4 = a3;
  id v5 = +[CKUIBehavior sharedBehaviors];
  int v6 = [v5 entryViewFollowsKeyboardLayoutGuide];

  if (v6
    && ![(CKChatController *)self suppressEntryViewKeyboardNotifications]
    && self->_entryViewFauxKeyboardLayoutConstraint)
  {
    BOOL v7 = [v4 userInfo];
    id v8 = [v7 objectForKeyedSubscript:*MEMORY[0x1E4F43AF0]];

    if (v8)
    {
      [v8 CGRectValue];
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;
      double v17 = [(CKChatController *)self view];
      id v18 = [v17 window];
      double v19 = [(CKChatController *)self view];
      objc_msgSend(v18, "convertRect:toView:", v19, v10, v12, v14, v16);
      uint64_t v21 = v20;
      uint64_t v23 = v22;
      uint64_t v25 = v24;
      uint64_t v27 = v26;

      double v28 = [v4 userInfo];
      id v29 = [v28 objectForKeyedSubscript:*MEMORY[0x1E4F43AA0]];

      [v29 doubleValue];
      if (v30 > 0.0 && (double v31 = v30, [(CKCoreChatController *)self viewIsVisible]))
      {
        long long v32 = [v4 userInfo];
        dispatch_time_t v33 = [v32 objectForKeyedSubscript:*MEMORY[0x1E4F43A98]];

        unint64_t v34 = -[CKChatController _animationOptionsFromCurve:](self, "_animationOptionsFromCurve:", [v33 integerValue]);
        v36[0] = MEMORY[0x1E4F143A8];
        v36[1] = 3221225472;
        v36[2] = __92__CKChatController__updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification___block_invoke;
        v36[3] = &unk_1E5621968;
        v36[4] = self;
        v36[5] = v21;
        v36[6] = v23;
        v36[7] = v25;
        v36[8] = v27;
        [MEMORY[0x1E4F42FF0] animateWithDuration:v34 | 4 delay:v36 options:&__block_literal_global_824_0 animations:v31 completion:0.0];
      }
      else
      {
        v35[0] = MEMORY[0x1E4F143A8];
        v35[1] = 3221225472;
        _DWORD v35[2] = __92__CKChatController__updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification___block_invoke_3;
        v35[3] = &unk_1E5621968;
        void v35[4] = self;
        void v35[5] = v21;
        v35[6] = v23;
        v35[7] = v25;
        v35[8] = v27;
        [MEMORY[0x1E4F42FF0] performWithoutAnimation:v35];
      }
    }
    else
    {
      id v29 = IMLogHandleForCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        -[CKChatController _updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:]();
      }
    }
  }
}

void __92__CKChatController__updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_updateFauxKeyboardLayoutGuideIfNeededWithKeyboardFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  BOOL v2 = [*(id *)(a1 + 32) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

void __92__CKChatController__updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification___block_invoke_3(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_updateFauxKeyboardLayoutGuideIfNeededWithKeyboardFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  BOOL v2 = [*(id *)(a1 + 32) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

- (unint64_t)_animationOptionsFromCurve:(int64_t)a3
{
  if ((unint64_t)(a3 - 1) >= 3) {
    return 0;
  }
  else {
    return ((a3 - 1) << 16) + 0x10000;
  }
}

- (BOOL)pluginButtonsEnabled
{
  id v3 = [(CKCoreChatController *)self conversation];
  char v4 = [v3 isStewieConversation];

  if (v4) {
    return 0;
  }
  int v6 = (void *)MEMORY[0x1E4F6BDC0];
  BOOL v7 = [(CKCoreChatController *)self conversation];
  id v8 = [v7 lastAddressedHandle];
  double v9 = [(CKCoreChatController *)self conversation];
  double v10 = [v9 lastAddressedSIMID];
  LOBYTE(v6) = [v6 mmsEnabledforPhoneNumber:v8 simID:v10];

  return (v6 & 1) != 0 || CKiMessageSupported() != 0;
}

- (void)setTargetFirstResponder:(int64_t)a3
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (self->_targetFirstResponder != a3)
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        int64_t targetFirstResponder = self->_targetFirstResponder;
        int v7 = 134218240;
        int64_t v8 = targetFirstResponder;
        __int16 v9 = 2048;
        int64_t v10 = a3;
        _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Target first responder changing from %lu to %lu", (uint8_t *)&v7, 0x16u);
      }
    }
    self->_int64_t targetFirstResponder = a3;
    self->_becomingFirstResponderInProgress = 0;
  }
}

- (BOOL)canBecomeFirstResponder
{
  BOOL v3 = [(CKCoreChatController *)self shouldDisplayTextEntry];
  if (v3) {
    LOBYTE(v3) = ![(CKChatController *)self isShowingCamera];
  }
  return v3;
}

- (BOOL)becomeFirstResponder
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (self->_becomingFirstResponderInProgress)
  {
    LOBYTE(v2) = 0;
    return v2;
  }
  self->_becomingFirstResponderInProgress = 1;
  int64_t v4 = [(CKChatController *)self targetFirstResponder];
  int64_t v5 = v4;
  switch(v4)
  {
    case 3:
      int64_t v8 = [(CKChatController *)self messageEditingViewController];
      unsigned int v2 = [v8 becomeFirstResponder];

      break;
    case 1:
      if (([(CKChatController *)self isEditing] & 1) == 0)
      {
        __int16 v9 = [(CKCoreChatController *)self fullScreenBalloonViewController];

        if (!v9)
        {
          self->_nextEntryViewSafeAreaInsetUpdateIsSynchronous = 1;
          double v15 = [(CKChatController *)self entryView];
          double v16 = [v15 contentView];
          double v17 = [v16 activeView];
          if ([v17 becomeFirstResponder])
          {
            unsigned int v2 = 1;
          }
          else
          {
            v18.receiver = self;
            v18.super_class = (Class)CKChatController;
            unsigned int v2 = [(CKChatController *)&v18 becomeFirstResponder];
          }

          break;
        }
      }
      break;
    case 0:
      if (IMOSLoggingEnabled())
      {
        int v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "No target FR, making chat controller FR", buf, 2u);
        }
      }
      int v7 = [(CKCoreChatController *)self inputController];
      [v7 clearBrowserViewControllerIfNecessary];

      v19.receiver = self;
      v19.super_class = (Class)CKChatController;
      unsigned int v2 = [(CKChatController *)&v19 becomeFirstResponder];
      break;
    default:
      unsigned int v2 = 0;
      break;
  }
  if (IMOSLoggingEnabled())
  {
    int64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = [NSNumber numberWithInteger:v5];
      double v12 = (void *)v11;
      double v13 = @"NO";
      if (v2) {
        double v13 = @"YES";
      }
      *(_DWORD *)CGAffineTransform buf = 138412546;
      uint64_t v21 = v11;
      __int16 v22 = 2112;
      uint64_t v23 = v13;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "targetFirstResponder: %@, didBecomeFirstResponder: %@", buf, 0x16u);
    }
  }
  self->_becomingFirstResponderInProgress = 0;
  return v2;
}

- (id)consumingBundleIdentifiers
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [MEMORY[0x1E4F1CA48] array];
  int64_t v4 = [(CKCoreChatController *)self inputController];
  int64_t v5 = [v4 browserPlugin];

  if (v5)
  {
    int v6 = [v5 identifier];
    [v3 addObject:v6];
  }
  int v7 = [(CKChatController *)self entryView];
  int64_t v8 = [v7 composition];
  __int16 v9 = [v8 shelfPluginPayload];

  if (v9)
  {
    int64_t v10 = [v9 pluginBundleID];
    [v3 addObject:v10];
  }
  uint64_t v11 = [(CKCoreChatController *)self collectionViewController];
  double v12 = [v11 chatItems];

  if ([v12 count])
  {
    uint64_t v24 = v5;
    double v13 = [(CKChatController *)self collectionView];
    double v14 = [v13 indexPathsForVisibleItems];

    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v15 = v14;
    uint64_t v16 = [v15 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)v26;
      do
      {
        for (uint64_t i = 0; i != v17; ++i)
        {
          if (*(void *)v26 != v18) {
            objc_enumerationMutation(v15);
          }
          unint64_t v20 = [*(id *)(*((void *)&v25 + 1) + 8 * i) item];
          if (v20 < [v12 count])
          {
            uint64_t v21 = [v12 objectAtIndex:v20];
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              __int16 v22 = [v21 bundleIdentifier];
              [v3 addObject:v22];
            }
          }
        }
        uint64_t v17 = [v15 countByEnumeratingWithState:&v25 objects:v29 count:16];
      }
      while (v17);
    }

    int64_t v5 = v24;
  }

  return v3;
}

- (id)generatedSummary
{
  unsigned int v2 = [(CKCoreChatController *)self chat];
  BOOL v3 = [v2 chatSummary];
  int64_t v4 = [v3 string];

  return v4;
}

- (id)generativeContext
{
  unsigned int v2 = [(CKCoreChatController *)self collectionViewController];
  BOOL v3 = [v2 generativeContextHistory];

  return v3;
}

- (int64_t)_determineEntryViewPositioningGuideToActivate
{
  BOOL v3 = [(CKCoreChatController *)self inputController];
  int v23 = [v3 isAppCardPresented];
  int v24 = [v3 isAppCardAppearing];
  int v4 = [v3 isAppCardDismissing];
  int v5 = [v3 isAppCardUsingSheetPresentation];
  BOOL v22 = [(CKScrollViewController *)self isKeyboardVisible];
  BOOL v21 = [(CKChatController *)self isKeyboardSnapshotted];
  BOOL v6 = [(CKChatController *)self isKeyboardSnapshotVisible];
  int v7 = [(CKChatController *)self traitCollection];
  uint64_t v8 = [v7 verticalSizeClass];

  __int16 v9 = [(CKChatController *)self traitCollection];
  uint64_t v10 = [v9 horizontalSizeClass];

  char v11 = [v3 isAppCardUsingPopoverPresentation];
  char v12 = [v3 hasStickerReactionSession];
  BOOL v13 = [(CKChatController *)self isFullScreenBalloonViewOnScreen];
  int64_t v14 = 3;
  if ((v12 & 1) == 0 && (v11 & 1) == 0)
  {
    if (v13)
    {
      int64_t v14 = [(CKChatController *)self entryViewPositioningGuideForCurrentTapbackPickerPresentation];
    }
    else
    {
      int v15 = v23 & v5 ^ 1;
      if (v10 != 1) {
        int v15 = 1;
      }
      if (((v15 | v24 | v4) & 1) == 0 && v8 != 1) {
        goto LABEL_13;
      }
      int v16 = v22 || v6;
      int v17 = v4 & v5 ^ 1;
      if (v10 != 1) {
        int v17 = 1;
      }
      if (((v17 | v16) & 1) != 0 || v8 == 1)
      {
        int v18 = v24 & v5 ^ 1;
        if (v10 != 1) {
          int v18 = 1;
        }
        int v19 = v18 | v16;
        if (v8 == 1) {
          int v19 = 1;
        }
        if (v19) {
          int64_t v14 = v21;
        }
        else {
          int64_t v14 = 2;
        }
      }
      else
      {
LABEL_13:
        int64_t v14 = 2;
      }
    }
  }

  return v14;
}

- (void)updateActiveEntryViewPositioningGuide
{
  BOOL v3 = [(CKChatController *)self entryView];
  int v4 = [v3 window];

  if (v4)
  {
    switch([(CKChatController *)self _determineEntryViewPositioningGuideToActivate])
    {
      case 0:
        if (IMOSLoggingEnabled())
        {
          int v5 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)CGAffineTransform buf = 0;
            _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Updating entry view positioning guide to follow Keyboard", buf, 2u);
          }
        }
        [(NSLayoutConstraint *)self->_entryViewKeyboardSnapshotLayoutConstraint setActive:0];
        [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint setActive:0];
        BOOL v6 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
        int v7 = [v6 isActive];

        if (v7)
        {
          uint64_t v8 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
          [v8 setActive:0];
        }
        uint64_t v9 = 1712;
        entryViewFauxKeyboardLayoutConstraint = self->_entryViewFauxKeyboardLayoutConstraint;
        if (entryViewFauxKeyboardLayoutConstraint) {
          goto LABEL_33;
        }
        uint64_t v9 = 1720;
        goto LABEL_32;
      case 1:
        if (IMOSLoggingEnabled())
        {
          unint64_t v20 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long v28 = 0;
            _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "Updating entry view positioning guide to follow Keyboard Snapshot", v28, 2u);
          }
        }
        [(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint setActive:0];
        [(NSLayoutConstraint *)self->_entryViewKeyboardLayoutConstraint setActive:0];
        [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint setActive:0];
        BOOL v21 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
        int v7 = [v21 isActive];

        if (v7)
        {
          BOOL v22 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
          [v22 setActive:0];
        }
        uint64_t v9 = 1728;
LABEL_32:
        entryViewFauxKeyboardLayoutConstraint = *(NSLayoutConstraint **)((char *)&self->super.super.super.super.super.super.isa
                                                                       + v9);
LABEL_33:
        BOOL v23 = [(NSLayoutConstraint *)entryViewFauxKeyboardLayoutConstraint isActive];
        [*(id *)((char *)&self->super.super.super.super.super.super.isa + v9) setActive:1];
        if (((!v23 | v7) & 1) == 0) {
          return;
        }
        goto LABEL_45;
      case 2:
        if (IMOSLoggingEnabled())
        {
          char v11 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long v27 = 0;
            _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Updating entry view positioning guide to follow App Card", v27, 2u);
          }
        }
        [(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint setActive:0];
        [(NSLayoutConstraint *)self->_entryViewKeyboardLayoutConstraint setActive:0];
        [(NSLayoutConstraint *)self->_entryViewKeyboardSnapshotLayoutConstraint setActive:0];
        char v12 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
        int v13 = [v12 isActive];

        if (v13)
        {
          int64_t v14 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
          [v14 setActive:0];
        }
        char v15 = ![(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint isActive] | v13;
        [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint setActive:1];
        if ((v15 & 1) == 0) {
          return;
        }
        goto LABEL_45;
      case 3:
        if (IMOSLoggingEnabled())
        {
          int v16 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)uint64_t v30 = 0;
            _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "Updating entry view positioning guide to align to the bottom of the entry view container", v30, 2u);
          }
        }
        int v17 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
        char v18 = [v17 isActive];

        if (v18)
        {
          int v19 = 0;
        }
        else
        {
          int v24 = [(CKMessageEntryViewContainerView *)self->_entryViewContainerView entryViewStuckToChatControllerBottomLayoutConstraint];
          int v19 = 1;
          [v24 setActive:1];
        }
        if ([(NSLayoutConstraint *)self->_entryViewKeyboardSnapshotLayoutConstraint isActive])
        {
          [(NSLayoutConstraint *)self->_entryViewKeyboardSnapshotLayoutConstraint setActive:0];
          int v19 = 1;
        }
        if ([(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint isActive])
        {
          [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint setActive:0];
          int v19 = 1;
        }
        if ([(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint isActive])
        {
          [(NSLayoutConstraint *)self->_entryViewFauxKeyboardLayoutConstraint setActive:0];
          int v19 = 1;
        }
        if ([(NSLayoutConstraint *)self->_entryViewKeyboardLayoutConstraint isActive])
        {
          [(NSLayoutConstraint *)self->_entryViewKeyboardLayoutConstraint setActive:0];
        }
        else if (!v19)
        {
          return;
        }
LABEL_45:
        if (IMOSLoggingEnabled())
        {
          long long v25 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long v26 = 0;
            _os_log_impl(&dword_18EF18000, v25, OS_LOG_TYPE_INFO, "Active entry view positioning guide did change", v26, 2u);
          }
        }
        [(CKChatController *)self _layoutEntryViewSuperview];
        break;
      default:
        return;
    }
  }
}

- (void)_addAppCardBackgroundView
{
  v30[4] = *MEMORY[0x1E4F143B8];
  BOOL v3 = +[CKAppCardLoadingViewProvider spinnerViewController];
  [(CKChatController *)self setAppCardBackgroundViewController:v3];

  int v4 = [(CKChatController *)self appCardBackgroundViewController];
  [(CKChatController *)self addChildViewController:v4];

  int v5 = [(CKChatController *)self view];
  BOOL v6 = [(CKChatController *)self appCardBackgroundViewController];
  int v7 = [v6 view];
  [v5 addSubview:v7];

  uint64_t v8 = [(CKChatController *)self appCardBackgroundViewController];
  [v8 didMoveToParentViewController:self];

  uint64_t v9 = [(CKChatController *)self appCardBackgroundViewController];
  uint64_t v10 = [v9 view];

  long long v28 = [v10 topAnchor];
  id v29 = [(CKChatController *)self entryView];
  long long v27 = [v29 bottomAnchor];
  long long v26 = [v28 constraintEqualToAnchor:v27];
  v30[0] = v26;
  int v24 = [v10 leadingAnchor];
  long long v25 = [(CKChatController *)self view];
  BOOL v23 = [v25 leadingAnchor];
  BOOL v22 = [v24 constraintEqualToAnchor:v23];
  v30[1] = v22;
  BOOL v21 = [v10 trailingAnchor];
  char v11 = [(CKChatController *)self view];
  char v12 = [v11 trailingAnchor];
  int v13 = [v21 constraintEqualToAnchor:v12];
  void v30[2] = v13;
  int64_t v14 = [v10 bottomAnchor];
  char v15 = [(CKChatController *)self view];
  int v16 = [v15 bottomAnchor];
  int v17 = [v14 constraintEqualToAnchor:v16];
  v30[3] = v17;
  char v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v30 count:4];
  [(CKChatController *)self setAppCardBackgroundViewConstraints:v18];

  int v19 = (void *)MEMORY[0x1E4F28DC8];
  unint64_t v20 = [(CKChatController *)self appCardBackgroundViewConstraints];
  [v19 activateConstraints:v20];

  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
}

- (void)addAppCardBackgroundViewIfNecessary
{
  BOOL v3 = [(CKChatController *)self appCardBackgroundViewController];
  if (v3)
  {
  }
  else
  {
    int v4 = [(CKChatController *)self entryView];
    int v5 = [v4 window];

    if (v5)
    {
      BOOL v6 = [(CKCoreChatController *)self inputController];
      int v7 = [(CKChatController *)self traitCollection];
      uint64_t v8 = [v6 determineSendMenuPresentationStyleCompatibleWithTraitCollection:v7];

      if (!v8)
      {
        [(CKChatController *)self _addAppCardBackgroundView];
      }
    }
  }
}

- (void)removeAppCardBackgroundViewIfNecessary
{
  BOOL v3 = [(CKChatController *)self appCardBackgroundViewController];

  if (v3)
  {
    int v4 = [(CKChatController *)self appCardBackgroundViewController];
    [v4 willMoveToParentViewController:0];

    int v5 = [(CKChatController *)self appCardBackgroundViewController];
    BOOL v6 = [v5 view];
    [v6 removeFromSuperview];

    int v7 = [(CKChatController *)self appCardBackgroundViewController];
    [v7 removeFromParentViewController];

    uint64_t v8 = (void *)MEMORY[0x1E4F28DC8];
    uint64_t v9 = [(CKChatController *)self appCardBackgroundViewConstraints];
    [v8 deactivateConstraints:v9];

    [(CKChatController *)self setAppCardBackgroundViewConstraints:0];
    [(CKChatController *)self setAppCardBackgroundViewController:0];
  }
}

- (void)_layoutEntryViewSuperview
{
  BOOL v3 = [(CKChatController *)self entryView];
  int v4 = [v3 superview];

  [v4 setNeedsLayout];
  if ([(CKCoreChatController *)self initialLayoutComplete])
  {
    if (IMOSLoggingEnabled())
    {
      int v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)BOOL v6 = 0;
        _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Triggering layout for entry view positioning change", v6, 2u);
      }
    }
    [v4 layoutIfNeeded];
  }
}

- (void)appCardDidChangeEntryViewAlignmentHeight:(double)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  entryViewAppCardLayoutConstraint = self->_entryViewAppCardLayoutConstraint;
  if (!entryViewAppCardLayoutConstraint
    || ([(NSLayoutConstraint *)entryViewAppCardLayoutConstraint constant], vabdd_f64(a3, v8) >= 0.001))
  {
    uint64_t v9 = [(CKCoreChatController *)self collectionViewController];
    uint64_t v10 = [v9 collectionView];

    [(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint setConstant:a3];
    if (v4)
    {
      uint64_t v11 = 103;
    }
    else
    {
      [(CKChatController *)self _layoutEntryViewSuperview];
      uint64_t v11 = 3;
    }
    if (v4) {
      double v12 = *MEMORY[0x1E4F43B10];
    }
    else {
      double v12 = 0.0;
    }
    [(CKScrollViewController *)self updateScrollGeometryForReason:@"AppCardChangedHeight" withDuration:v11 animationCurve:v12];
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __70__CKChatController_appCardDidChangeEntryViewAlignmentHeight_animated___block_invoke;
    v14[3] = &unk_1E5620C40;
    void v14[4] = self;
    [(CKScrollViewController *)self scrollWithDuration:v11 animationCurve:v14 scrollBlock:v12];
    int v13 = +[CKScrollViewAnimationProperties animatedWithDuration:v11 animationCurve:v12];
    [v10 enforceTranscriptScrollIntentWithAnimationProperties:v13];
  }
}

void __70__CKChatController_appCardDidChangeEntryViewAlignmentHeight_animated___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) _layoutEntryViewSuperview];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

- (void)appCardViewStateDidChange:(BOOL)a3
{
  if (a3) {
    [(CKChatController *)self removeAppCardBackgroundViewIfNecessary];
  }
  else {
    [(CKChatController *)self addAppCardBackgroundViewIfNecessary];
  }
}

- (void)appCardDidDismiss
{
  BOOL v3 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  if (([v3 appeared] & 1) == 0) {
    goto LABEL_4;
  }
  BOOL v4 = [(CKCoreChatController *)self inputController];
  if ([v4 didDismissAppCardForStickerDrag])
  {

LABEL_4:
    goto LABEL_5;
  }
  int v5 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  BOOL v6 = [v5 displayConfiguration];
  int v7 = [v6 shouldDismissWithAppCard];

  if (v7) {
    [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:0];
  }
LABEL_5:
  [(CKChatController *)self updateEntryViewHeightIncludingAppStrip:1 isContentChange:0 animated:1];
  [(CKScrollViewController *)self updateScrollGeometryWithoutAnimationForReason:@"AppCardDismissed"];

  [(CKChatController *)self updateActiveEntryViewPositioningGuide];
}

- (BOOL)isUsingVisibleInputViewHeightWhenUpdatingScrollGeometry
{
  id v2 = [(CKChatController *)self entryViewContainerView];
  BOOL v3 = [v2 entryViewStuckToChatControllerBottomLayoutConstraint];
  char v4 = [v3 isActive] ^ 1;

  return v4;
}

- (double)visibleInputViewHeight
{
  if ([(NSLayoutConstraint *)self->_entryViewAppCardLayoutConstraint isActive])
  {
    entryViewAppCardLayoutConstraint = self->_entryViewAppCardLayoutConstraint;
    [(NSLayoutConstraint *)entryViewAppCardLayoutConstraint constant];
  }
  else
  {
    char v5 = [MEMORY[0x1E4F42B08] isInHardwareKeyboardMode];
    BOOL v6 = [(CKChatController *)self collectionView];
    char v7 = [v6 isDragging];

    double v8 = [(CKChatController *)self view];
    uint64_t v9 = [v8 window];
    uint64_t v10 = [v9 windowScene];
    int v11 = [v10 _enhancedWindowingEnabled];

    if ((v5 & 1) != 0
      || (v7 & 1) != 0
      || ([(CKChatController *)self dismissingContextMenu] | v11) == 1)
    {
      [(CKChatController *)self _keyboardHeightFromLayoutGuide];
    }
    else
    {
      v12.receiver = self;
      v12.super_class = (Class)CKChatController;
      [(CKScrollViewController *)&v12 visibleInputViewHeight];
    }
  }
  return result;
}

- (double)_keyboardHeightFromLayoutGuide
{
  BOOL v3 = [(CKChatController *)self entryView];
  char v4 = [v3 entryViewKeyboardLayoutGuide];

  [v4 layoutFrame];
  double x = v14.origin.x;
  double y = v14.origin.y;
  double width = v14.size.width;
  double height = v14.size.height;
  double v9 = 0.0;
  if (!CGRectEqualToRect(v14, *MEMORY[0x1E4F1DB28]))
  {
    uint64_t v10 = [v4 owningView];
    int v11 = [(CKChatController *)self view];
    objc_msgSend(v11, "convertRect:fromView:", v10, x, y, width, height);
    double MinY = CGRectGetMinY(v15);
    [v11 bounds];
    double v9 = CGRectGetMaxY(v16) - MinY;
  }
  return v9;
}

- (id)activeSendMenuPresentationForChatInputController:(id)a3
{
  char v4 = [(CKChatController *)self sendMenuDelegate];
  char v5 = [v4 activeSendMenuPresentationForChatController:self];

  return v5;
}

- (void)enforceSendMenuOrderingInWindowSubviews
{
  if (self->_keyboardSnapshotView)
  {
    BOOL v3 = [(CKChatController *)self view];
    char v4 = [v3 window];
    [v4 bringSubviewToFront:self->_keyboardSnapshotView];
  }
  id v5 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
  [v5 enforceSendMenuOrderingInWindowSubviews];
}

- (id)chatInputTranscriptIdentifier
{
  id v2 = [(CKCoreChatController *)self collectionViewController];
  BOOL v3 = [v2 transcriptIdentifier];

  return v3;
}

- (id)viewForDragAndChatInputDropTarget
{
  id v2 = [(CKCoreChatController *)self collectionViewController];
  BOOL v3 = [v2 view];

  return v3;
}

- (id)keyboardLayoutGuideForAppCardPresentation
{
  id v2 = [(CKChatController *)self entryView];
  BOOL v3 = [v2 entryViewKeyboardLayoutGuide];

  return v3;
}

- (void)chatInputSentComposition:(id)a3
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self conversation];
  BOOL v6 = [v5 recipients];
  if ([v6 count])
  {
    char v7 = [(CKCoreChatController *)self conversation];
    id v11 = 0;
    int v8 = [v7 canSendComposition:v4 error:&v11];
    id v9 = v11;

    if (v8)
    {
      [(CKChatController *)self sendCompositionIfAllowed:v4];
      goto LABEL_9;
    }
  }
  else
  {

    id v9 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)CGAffineTransform buf = 138412290;
      id v13 = v9;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Failed to send composition with error: %@", buf, 0xCu);
    }
  }
LABEL_9:
}

- (BOOL)chatInputControllerCanSend:(id)a3
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self conversation];
  if ([v5 hasLeftGroupChat]) {
    goto LABEL_4;
  }
  BOOL v6 = [(CKCoreChatController *)self conversation];
  if ([v6 isBusinessChatDisabled])
  {

LABEL_4:
    goto LABEL_5;
  }
  CGRect v16 = [(CKCoreChatController *)self conversation];
  char v17 = [v16 isReadOnlyChat];

  if ((v17 & 1) == 0)
  {
    BOOL v14 = 1;
    goto LABEL_19;
  }
LABEL_5:
  if (IMOSLoggingEnabled())
  {
    char v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v8 = [(CKCoreChatController *)self conversation];
      if ([v8 hasLeftGroupChat]) {
        id v9 = @"YES";
      }
      else {
        id v9 = @"NO";
      }
      uint64_t v10 = [(CKCoreChatController *)self conversation];
      if ([v10 isBusinessChatDisabled]) {
        id v11 = @"YES";
      }
      else {
        id v11 = @"NO";
      }
      objc_super v12 = [(CKCoreChatController *)self conversation];
      if ([v12 isReadOnlyChat]) {
        id v13 = @"YES";
      }
      else {
        id v13 = @"NO";
      }
      int v18 = 138412802;
      int v19 = v9;
      __int16 v20 = 2112;
      BOOL v21 = v11;
      __int16 v22 = 2112;
      BOOL v23 = v13;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Cannot send, leftGroupChat: %@, isBusinessChatDisabled: %@, readOnlyChat: %@", (uint8_t *)&v18, 0x20u);
    }
  }
  BOOL v14 = 0;
LABEL_19:

  return v14;
}

- (void)sendSticker:(id)a3 withDragTarget:(id)a4 draggedSticker:(id)a5
{
  v71[12] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  [v7 prepareToSend];
  id v9 = [MEMORY[0x1E4F6E890] sharedInstance];
  [v9 trackEvent:*MEMORY[0x1E4F6DC98]];

  uint64_t v10 = [(CKChatController *)self stickerTranscriptScrollDisplayLink];
  [v10 invalidate];

  [(CKChatController *)self setStickerTranscriptScrollDisplayLink:0];
  [v8 screenCoordinate];
  double v12 = v11;
  double v14 = v13;
  [v8 scale];
  double v16 = v15;
  [v8 rotation];
  if (v8)
  {
    double v18 = v17;
    int v19 = [(CKCoreChatController *)self collectionViewController];
    __int16 v20 = [(CKChatController *)self selectedBalloonForTarget:v8];
    if (!v20)
    {
LABEL_21:

      goto LABEL_22;
    }
    BOOL v21 = [v19 chatItems];
    __int16 v22 = objc_msgSend(v21, "objectAtIndex:", objc_msgSend(v20, "row"));

    BOOL v23 = [v19 balloonViewForChatItem:v22];
    uint64_t v24 = v23;
    if (v23)
    {
      long long v25 = [v23 superview];
      [v24 frame];
      objc_msgSend(v25, "convertRect:toView:", 0);
      double v27 = v26;
      double v29 = v28;
      double v31 = v30;
      double v33 = v32;

      double v34 = (v12 - v27) / v31;
      double v35 = (v14 - v29) / v33;
      [v22 size];
      double v37 = v36;
      double v38 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
      if ([v38 isStickerRepositioningEnabled])
      {
        int v39 = [v8 stickerIsRepositioning];

        if (v39)
        {
          BOOL v40 = [v8 stickerChatItem];
          uint64_t v41 = [v40 stickerPositionVersion] + 1;

          v70[0] = *MEMORY[0x1E4F6E3A0];
          uint64_t v69 = [v7 stickerGUID];
          v71[0] = v69;
          v70[1] = *MEMORY[0x1E4F6E3B8];
          uint64_t v68 = [v7 stickerPackGUID];
          v71[1] = v68;
          v70[2] = *MEMORY[0x1E4F6E3A8];
          uint64_t v67 = objc_msgSend(NSString, "stringWithFormat:", @"%lu", objc_msgSend(v7, "hash"));
          uint64_t v42 = *MEMORY[0x1E4F6E3B0];
          v71[2] = v67;
          v71[3] = MEMORY[0x1E4F1CC28];
          uint64_t v43 = *MEMORY[0x1E4F6E390];
          v70[3] = v42;
          v70[4] = v43;
          uint64_t v66 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v7, "stickerEffectType"));
          v71[4] = v66;
          v70[5] = *MEMORY[0x1E4F6E3D0];
          uint64_t v65 = [NSNumber numberWithDouble:v34];
          v71[5] = v65;
          v70[6] = *MEMORY[0x1E4F6E3D8];
          double v64 = [NSNumber numberWithDouble:v35];
          v71[6] = v64;
          v70[7] = *MEMORY[0x1E4F6E380];
          double v63 = [NSNumber numberWithDouble:v16];
          v71[7] = v63;
          v70[8] = *MEMORY[0x1E4F6E378];
          double v62 = [NSNumber numberWithDouble:v18];
          v71[8] = v62;
          v70[9] = *MEMORY[0x1E4F6E370];
          double v61 = [NSNumber numberWithDouble:v37];
          v71[9] = v61;
          v70[10] = *MEMORY[0x1E4F6E3C0];
          id v44 = [NSNumber numberWithUnsignedInteger:v41];
          v70[11] = *MEMORY[0x1E4F6E368];
          v71[10] = v44;
          v71[11] = &unk_1EDF16178;
          double v45 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v71 forKeys:v70 count:12];
          double v46 = (void *)[v45 mutableCopy];

          uint64_t v47 = [v7 ballonBundleID];

          if (v47)
          {
            int v48 = [v7 ballonBundleID];
            [v46 setObject:v48 forKey:*MEMORY[0x1E4F6E388]];
          }
          CGFloat v49 = [v7 getSafeExternalURI];
          [v46 setObject:v49 forKey:*MEMORY[0x1E4F6E398]];

          uint64_t v50 = [v8 stickerChatItem];
          if (![(CKChatController *)self repositionSticker:v7 stickerChatItem:v50 parentMessagePartChatItem:v22 stickerPositioningInfo:v46])
          {
            id v51 = [(CKCoreChatController *)self collectionViewController];
            double v52 = [v51 cellForAssociatedChatItem:v50];

            if (v52)
            {
              [v52 setHidden:0];
              [v52 setStickerViewHidden:0];
            }
          }
          goto LABEL_20;
        }
      }
      else
      {
      }
      CGFloat v53 = (void *)MEMORY[0x1E4F6EA58];
      uint64_t v54 = [v7 initialFrameIndex];
      __int16 v55 = [v7 getSafeExternalURI];
      double v56 = [v53 userInfoDictionaryWithLayoutIntent:0 parentPreviewWidth:v54 xScalar:0 yScalar:v55 scale:v37 rotation:v34 initialFrameIndex:v35 stickerPositionVersion:v16 externalURI:v18];

      CGFloat v57 = +[CKMediaObjectManager sharedInstance];
      int v58 = [v57 mediaObjectWithSticker:v7 stickerUserInfo:v56];

      if (v58)
      {
        double v59 = [(CKChatController *)self compositionForSticker:v7 mediaObject:v58];
        [(CKChatController *)self sendSticker:v7 withMediaObject:v58 composition:v59 parentMessagePartChatItem:v22];
      }
      else
      {
        double v60 = IMLogHandleForCategory();
        if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
          -[CKChatController sendSticker:withDragTarget:draggedSticker:](v7);
        }
      }
    }
LABEL_20:

    goto LABEL_21;
  }
LABEL_22:
}

- (id)_compositionForEmojiSticker:(id)a3 mediaObject:(id)a4
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v17 = a4;
  id v5 = (void *)MEMORY[0x1E4F1C978];
  id v6 = a4;
  id v7 = a3;
  id v8 = [v5 arrayWithObjects:&v17 count:1];
  id v9 = +[CKComposition stickerCompositionWithMediaObjects:](CKComposition, "stickerCompositionWithMediaObjects:", v8, v17, v18);

  uint64_t v10 = [CKComposition alloc];
  id v11 = objc_alloc(MEMORY[0x1E4F28B18]);

  double v12 = [v7 emojiString];

  double v13 = (void *)[v11 initWithString:v12];
  double v14 = [(CKComposition *)v10 initWithText:v13 subject:0];

  double v15 = [(CKComposition *)v14 compositionByAppendingComposition:v9];

  return v15;
}

- (id)compositionForSticker:(id)a3 mediaObject:(id)a4
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if ([v6 isEmojiSticker])
  {
    id v8 = [(CKChatController *)self _compositionForEmojiSticker:v6 mediaObject:v7];
  }
  else
  {
    v11[0] = v7;
    id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
    id v8 = +[CKComposition stickerCompositionWithMediaObjects:v9];
  }

  return v8;
}

- (void)updateSupportedInterfaceOrientations:(unint64_t)a3
{
  id v5 = [(CKCoreChatController *)self delegate];
  char v6 = objc_opt_respondsToSelector();

  if (v6)
  {
    id v7 = [(CKCoreChatController *)self delegate];
    [v7 updateSupportedInterfaceOrientations:a3];
  }
}

- (void)stopForcingOrientation
{
  BOOL v3 = [(CKCoreChatController *)self delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    id v5 = [(CKCoreChatController *)self delegate];
    [v5 stopForcingOrientation];
  }
}

- (int64_t)sceneInterfaceOrientation
{
  id v2 = [(CKChatController *)self viewIfLoaded];
  BOOL v3 = [v2 window];
  char v4 = [v3 windowScene];

  if (v4) {
    int64_t v5 = [v4 interfaceOrientation];
  }
  else {
    int64_t v5 = 1;
  }

  return v5;
}

- (unint64_t)recipientsCount
{
  id v2 = [(CKCoreChatController *)self conversation];
  BOOL v3 = [v2 recipients];
  unint64_t v4 = [v3 count];

  return v4;
}

- (BOOL)commitStickerAsTapback:(id)a3
{
  id v4 = a3;
  int64_t v5 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  char v6 = [v5 displayConfiguration];
  uint64_t v7 = [v6 type];

  if (v7 == 1)
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Inserting sticker as Tapback during double-tap", buf, 2u);
      }
    }
    id v9 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  }
  else
  {
    uint64_t v10 = [(CKChatController *)self pickerContainerAccessoryView];

    if (!v10)
    {
      BOOL v13 = 0;
      goto LABEL_14;
    }
    if (IMOSLoggingEnabled())
    {
      id v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)double v15 = 0;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Inserting sticker as Tapback during long-press", v15, 2u);
      }
    }
    double v12 = [(CKChatController *)self pickerContainerAccessoryView];
    id v9 = [v12 pickerBalloonParentView];
  }
  [v9 insertSticker:v4];

  BOOL v13 = 1;
LABEL_14:

  return v13;
}

- (void)setPickerContainerAccessoryView:(id)a3
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    int64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v6 = 138412290;
      id v7 = v4;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "preserving pickerContainerAccessoryView: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  objc_storeWeak((id *)&self->_pickerContainerAccessoryView, v4);
}

- (BOOL)allowsMentions
{
  id v2 = [(CKChatController *)self entryView];
  BOOL v3 = [v2 contentView];
  id v4 = [v3 textView];
  char v5 = [v4 allowsMentions];

  return v5;
}

- (void)_dismissSendMenuIfNecessaryForChangedPresentationStyle
{
  BOOL v3 = [(CKChatController *)self activeSendMenuPresentationForChatController:self];
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 presentationStyle];
    int v6 = [(CKCoreChatController *)self inputController];
    id v7 = [(CKChatController *)self traitCollection];
    uint64_t v8 = [v6 determineSendMenuPresentationStyleCompatibleWithTraitCollection:v7];

    if (v5 != v8)
    {
      if (IMOSLoggingEnabled())
      {
        id v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v10 = 0;
          _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "Dismissing send menu due to a presentation style change (e.g. resizing the window on an iPad)", v10, 2u);
        }
      }
      [v4 dismissAnimated:0 completion:0];
    }
  }
}

- (id)activeSendMenuPresentationForChatController:(id)a3
{
  id v4 = [(CKChatController *)self sendMenuDelegate];
  uint64_t v5 = [v4 activeSendMenuPresentationForChatController:self];

  return v5;
}

- (void)chatController:(id)a3 requestPresentSendMenu:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKChatController *)self sendMenuDelegate];
  [v8 chatController:v7 requestPresentSendMenu:v6];
}

- (void)chatController:(id)a3 didFinishDismissAnimationForSendMenuViewController:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKChatController *)self sendMenuDelegate];
  [v8 chatController:v7 didFinishDismissAnimationForSendMenuViewController:v6];
}

- (void)chatInputControllerRequestShowKeyboardSnapshot:(id)a3
{
}

- (void)chatInputControllerRequestDismissKeyboardSnapshot:(id)a3
{
}

- (void)fullScreenBalloonViewControllerRequestShowKeyboardSnapshot:(id)a3
{
}

- (void)fullScreenBalloonViewControllerRequestDismissKeyboardSnapshot:(id)a3
{
}

- (void)requestShowKeyboardSnapshotForReason:(unint64_t)a3
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  if (!+[CKUtilities isIpad])
  {
    if (!a3)
    {
      uint64_t v67 = [MEMORY[0x1E4F28B00] currentHandler];
      [v67 handleFailureInMethod:a2, self, @"CKChatController.m", 8548, @"Invalid parameter not satisfying: %@", @"reason != CKKeyboardSnapshotReasonNone" object file lineNumber description];
    }
    unint64_t keyboardSnapshotReason = self->_keyboardSnapshotReason;
    self->_unint64_t keyboardSnapshotReason = keyboardSnapshotReason | a3;
    if (IMOSLoggingEnabled())
    {
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        id v8 = [NSNumber numberWithUnsignedInteger:a3];
        *(_DWORD *)CGAffineTransform buf = 138412546;
        uint64_t v69 = v8;
        __int16 v70 = 1024;
        BOOL v71 = keyboardSnapshotReason == 0;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "request to show keyboardSnapshot with reason: %@, snapshotCreationNeeded: %{BOOL}d", buf, 0x12u);
      }
    }
    if (!keyboardSnapshotReason)
    {
      id v9 = [MEMORY[0x1E4F42B08] activeKeyboard];
      uint64_t v10 = [(CKCoreChatController *)self inputController];
      int v11 = [v10 isInputViewVisible];

      if (v11)
      {
        double v12 = [(CKChatController *)self inputViewController];
        BOOL v13 = [v12 view];

        double v14 = [v13 snapshotViewAfterScreenUpdates:0];
        double v15 = [v13 coordinateSpace];
        [v13 bounds];
        double v17 = v16;
        double v19 = v18;
        double v21 = v20;
        double v23 = v22;
        uint64_t v24 = [v13 window];
        long long v25 = [v24 screen];
        double v26 = [v25 coordinateSpace];
        objc_msgSend(v15, "convertRect:toCoordinateSpace:", v26, v17, v19, v21, v23);
        double v28 = v27;
        double v30 = v29;
        double v32 = v31;
        double v34 = v33;

        objc_msgSend(v14, "setFrame:", v28, v30, v32, v34);
      }
      else if ([MEMORY[0x1E4F42B08] usesInputSystemUI])
      {
        double v35 = IMLogHandleForCategory();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v35, OS_LOG_TYPE_DEFAULT, "Requesting OOP keyboard snapshot.", buf, 2u);
        }

        double v14 = [MEMORY[0x1E4F42B08] snapshotViewForOptions:1];
        if (v14) {
          goto LABEL_24;
        }
        BOOL v13 = [MEMORY[0x1E4F28B00] currentHandler];
        [v13 handleFailureInMethod:a2 object:self file:@"CKChatController.m" lineNumber:8589 description:@"+[UIKeyboard snapshotViewForOptions:UIKBSnapshotOptionWindow] returned nil. Unexpected."];
        double v14 = 0;
      }
      else
      {
        unint64_t v36 = self->_keyboardSnapshotReason;
        if ((v36 & 0x10) != 0)
        {
          double v37 = IMLogHandleForCategory();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)CGAffineTransform buf = 0;
            _os_log_impl(&dword_18EF18000, v37, OS_LOG_TYPE_DEFAULT, "Forcing immediate keyboard snapshot for CKKeyboardSnapshotReasonSnapshotFullScreenBalloon", buf, 2u);
          }
        }
        double v38 = IMLogHandleForCategory();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v38, OS_LOG_TYPE_DEFAULT, "Requesting keyboard snapshot.", buf, 2u);
        }

        BOOL v13 = [v9 superview];
        int v39 = [v13 superview];
        double v14 = [v39 snapshotViewAfterScreenUpdates:(v36 & 0x10) == 0];
      }
LABEL_24:
      [(CKChatController *)self setKeyboardAlpha:0.0];
      [(CKChatController *)self setKeyboardSnapshotView:v14];
      BOOL v40 = [(CKChatController *)self keyboardSnapshotView];
      [v40 setUserInteractionEnabled:0];

      uint64_t v41 = [(CKChatController *)self view];
      uint64_t v42 = [v41 window];
      uint64_t v43 = [(CKChatController *)self keyboardSnapshotView];
      [v42 addSubview:v43];

      [(CKChatController *)self enforceSendMenuOrderingInWindowSubviews];
      id v44 = [(CKChatController *)self keyboardSnapshotView];
      [v44 frame];
      double v46 = v45;
      CGFloat v48 = v47;
      double v50 = v49;
      double v52 = v51;

      CGFloat v53 = [(CKChatController *)self view];
      uint64_t v54 = [v53 window];
      [v54 bounds];
      double Height = CGRectGetHeight(v73);
      v74.origin.double x = v46;
      v74.origin.double y = v48;
      v74.size.double width = v50;
      v74.size.double height = v52;
      double v56 = CGRectGetHeight(v74);

      CGFloat v57 = [(CKChatController *)self keyboardSnapshotView];
      objc_msgSend(v57, "setFrame:", v46, Height - v56, v50, v52);

      if ((v11 & 1) == 0 && [v9 isMinimized])
      {
        int v58 = IMLogHandleForCategory();
        if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)CGAffineTransform buf = 0;
          _os_log_impl(&dword_18EF18000, v58, OS_LOG_TYPE_DEFAULT, "UIKeyboard is minimized e.g. due to a hardware keyboard. The snapshot we've taken may include a keyboard, but it is not visible to the user. Hiding the snapshot.", buf, 2u);
        }

        double v59 = [(CKChatController *)self keyboardSnapshotView];
        [v59 setHidden:1];
      }
      double v60 = [(CKChatController *)self entryView];
      [(CKScrollViewController *)self keyboardFrame];
      double v61 = CGRectGetHeight(v75);
      double v62 = [v60 window];
      double v63 = [v62 bottomAnchor];
      double v64 = [v60 bottomAnchor];
      uint64_t v65 = [v63 constraintEqualToAnchor:v64 constant:v61];
      entryViewKeyboardSnapshotLayoutConstraint = self->_entryViewKeyboardSnapshotLayoutConstraint;
      self->_entryViewKeyboardSnapshotLayoutConstraint = v65;

      [(CKChatController *)self updateActiveEntryViewPositioningGuide];
    }
  }
}

- (void)setKeyboardAlpha:(double)a3
{
  if ([MEMORY[0x1E4F42B08] usesInputSystemUI])
  {
    [MEMORY[0x1E4F39CF8] activate];
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __37__CKChatController_setKeyboardAlpha___block_invoke;
    aBlock[3] = &unk_1E5622950;
    *(double *)&void aBlock[5] = a3;
    void aBlock[4] = self;
    uint64_t v5 = _Block_copy(aBlock);
    [MEMORY[0x1E4F39CF8] addCommitHandler:v5 forPhase:5];
  }
  else
  {
    [MEMORY[0x1E4F42B08] setKeyboardAlpha:a3];
    id v6 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v7 = [v6 isExpressiveTextEnabled];

    if (v7)
    {
      id v10 = [(CKChatController *)self entryView];
      id v8 = [v10 contentView];
      id v9 = [v8 textView];
      [v9 hideTextEffectsPickerIfNeeded];
    }
  }
}

void __37__CKChatController_setKeyboardAlpha___block_invoke(uint64_t a1)
{
  [MEMORY[0x1E4F42B08] setKeyboardAlpha:*(double *)(a1 + 40)];
  id v2 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v3 = [v2 isExpressiveTextEnabled];

  if (v3)
  {
    id v6 = [*(id *)(a1 + 32) entryView];
    id v4 = [v6 contentView];
    uint64_t v5 = [v4 textView];
    [v5 hideTextEffectsPickerIfNeeded];
  }
}

- (void)hideExistingKeyboardSnapshot
{
  int v3 = [(CKChatController *)self keyboardSnapshotView];
  [v3 setAlpha:0.0];

  [(CKChatController *)self setKeyboardAlpha:1.0];
}

- (void)revealExistingKeyboardSnapshot
{
  int v3 = [(CKChatController *)self keyboardSnapshotView];
  [v3 setAlpha:1.0];

  [(CKChatController *)self setKeyboardAlpha:0.0];
}

- (void)_inheritHiddenKeyboardAppearanceIfNeeded
{
  int v3 = [(CKChatController *)self keyboardSnapshotView];
  if (v3)
  {
    id v4 = [(CKChatController *)self keyboardSnapshotView];
    uint64_t v5 = [v4 window];
    BOOL v6 = v5 != 0;
  }
  else
  {
    BOOL v6 = 0;
  }

  int v7 = [(CKChatController *)self keyboardSnapshotView];
  [v7 alpha];
  double v9 = v8;

  if (v6 && v9 > 0.99)
  {
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)CGAffineTransform buf = 0;
        _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Keyboard will show while keyboard snapshot is in use. Will hide new keyboard view.", buf, 2u);
      }
    }
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __60__CKChatController__inheritHiddenKeyboardAppearanceIfNeeded__block_invoke;
    v11[3] = &unk_1E5620C40;
    void v11[4] = self;
    [MEMORY[0x1E4F42FF0] performWithoutAnimation:v11];
  }
}

uint64_t __60__CKChatController__inheritHiddenKeyboardAppearanceIfNeeded__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) setKeyboardAlpha:0.0];
}

- (void)requestDismissKeyboardSnapshotForReason:(unint64_t)a3
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (!+[CKUtilities isIpad])
  {
    if (!a3)
    {
      int v11 = [MEMORY[0x1E4F28B00] currentHandler];
      [v11 handleFailureInMethod:a2, self, @"CKChatController.m", 8671, @"Invalid parameter not satisfying: %@", @"reason != CKKeyboardSnapshotReasonNone" object file lineNumber description];
    }
    unint64_t v6 = self->_keyboardSnapshotReason & ~a3;
    self->_unint64_t keyboardSnapshotReason = v6;
    if (IMOSLoggingEnabled())
    {
      int v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        double v8 = [NSNumber numberWithUnsignedInteger:a3];
        *(_DWORD *)CGAffineTransform buf = 138412546;
        BOOL v13 = v8;
        __int16 v14 = 1024;
        BOOL v15 = v6 == 0;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "request to dismiss keyboardSnapshot with reason: %@, snapshotRemovalNeeded: %{BOOL}d", buf, 0x12u);
      }
    }
    if (!v6)
    {
      [MEMORY[0x1E4F42B08] setKeyboardAlpha:1.0];
      double v9 = [(CKChatController *)self keyboardSnapshotView];
      [v9 removeFromSuperview];

      [(CKChatController *)self setKeyboardSnapshotView:0];
      [(CKChatController *)self updateActiveEntryViewPositioningGuide];
      entryViewKeyboardSnapshotLayoutConstraint = self->_entryViewKeyboardSnapshotLayoutConstraint;
      self->_entryViewKeyboardSnapshotLayoutConstraint = 0;
    }
  }
}

- (void)animatedDismissalOfKeyboardSnapshot
{
  if (self->_keyboardSnapshotView)
  {
    [(CKChatController *)self requestShowKeyboardSnapshotForReason:8];
    id v3 = objc_alloc_init(MEMORY[0x1E4F42E18]);
    id v4 = objc_alloc(MEMORY[0x1E4F43008]);
    uint64_t v5 = (void *)[v4 initWithDuration:v3 timingParameters:*MEMORY[0x1E4F43B10]];
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    void v7[2] = __55__CKChatController_animatedDismissalOfKeyboardSnapshot__block_invoke;
    _OWORD v7[3] = &unk_1E5620C40;
    void v7[4] = self;
    [v5 addAnimations:v7];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __55__CKChatController_animatedDismissalOfKeyboardSnapshot__block_invoke_2;
    v6[3] = &unk_1E5622978;
    v6[4] = self;
    [v5 addCompletion:v6];
    [v5 startAnimation];
  }
}

uint64_t __55__CKChatController_animatedDismissalOfKeyboardSnapshot__block_invoke(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 2080) frame];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v8 = [*(id *)(a1 + 32) view];
  double v9 = [v8 window];
  [v9 bounds];
  double Height = CGRectGetHeight(v14);

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2080), "setFrame:", v3, Height, v5, v7);
  int v11 = *(void **)(*(void *)(a1 + 32) + 1728);

  return [v11 setConstant:0.0];
}

uint64_t __55__CKChatController_animatedDismissalOfKeyboardSnapshot__block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) requestDismissKeyboardSnapshotForReason:8];
}

- (void)requestShowKeyboardSnapshotForSendMenu
{
}

- (void)requestDismissKeyboardSnapshotForSendMenu
{
}

- (void)requestDismissKeyboardSnapshotForEffectPickerIfNeeded
{
  if ((self->_keyboardSnapshotReason & 4) != 0) {
    [(CKChatController *)self requestDismissKeyboardSnapshotForReason:4];
  }
}

- (id)newInputSnapshotView
{
  return 0;
}

+ (void)donateStickerToRecents:(id)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  double v5 = IMLogHandleForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    double v6 = [v4 description];
    *(_DWORD *)CGAffineTransform buf = 138412290;
    double v21 = v6;
    _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Donating sticker to recents: %@", buf, 0xCu);
  }
  double v7 = [v4 representations];
  if (v7) {
    goto LABEL_4;
  }
  uint64_t v16 = [v4 fileURL];

  if (v16)
  {
    double v17 = [v4 fileURL];
    double v18 = [a1 representationFromFileURL:v17];

    if (v18)
    {
      double v19 = v18;
      double v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v19 count:1];

LABEL_4:
      double v8 = [v4 stickerGUID];
      uint64_t v9 = [v4 stickerEffectType];
      id v10 = [v4 externalURI];
      int v11 = [v4 stickerName];
      double v12 = [v4 accessibilityLabel];
      uint64_t v13 = [v4 attributionInfo];
      CGRect v14 = (void *)v13;
      uint64_t v15 = MEMORY[0x1E4F1CC08];
      if (v13) {
        uint64_t v15 = v13;
      }
      [a1 donateStickerToRecentsWithIdentifier:v8 representations:v7 stickerEffectType:v9 externalURI:v10 name:v11 accessibilityLabel:v12 metadata:0 ckAttributionInfo:v15];

      goto LABEL_7;
    }
    double v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      +[CKChatController donateStickerToRecents:](v4);
    }
  }
  else
  {
    double v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      +[CKChatController donateStickerToRecents:](v4);
    }
  }
LABEL_7:
}

+ (void)donateStickerToRecentsWithIdentifier:(id)a3 representations:(id)a4 stickerEffectType:(int64_t)a5 externalURI:(id)a6 name:(id)a7 accessibilityLabel:(id)a8 metadata:(id)a9 ckAttributionInfo:(id)a10
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  id v15 = a3;
  id v16 = a4;
  id v17 = a6;
  id v18 = a7;
  id v19 = a8;
  id v20 = a9;
  id v21 = a10;
  uint64_t v22 = IMLogHandleForCategory();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v15;
    _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "Donating sticker to recents with identifier: %@", (uint8_t *)&buf, 0xCu);
  }

  uint64_t v52 = 0;
  CGFloat v53 = &v52;
  uint64_t v54 = 0x2050000000;
  double v23 = (void *)get_STKMessagesObjCStoreFacadeClass_softClass;
  uint64_t v55 = get_STKMessagesObjCStoreFacadeClass_softClass;
  if (!get_STKMessagesObjCStoreFacadeClass_softClass)
  {
    *(void *)&long long buf = MEMORY[0x1E4F143A8];
    *((void *)&buf + 1) = 3221225472;
    CGFloat v57 = __get_STKMessagesObjCStoreFacadeClass_block_invoke;
    int v58 = &unk_1E5620B90;
    double v59 = &v52;
    StickersLibraryCore();
    Class Class = objc_getClass("_STKMessagesObjCStoreFacade");
    *(void *)(v59[1] + 24) = Class;
    get_STKMessagesObjCStoreFacadeClass_softClass Class = *(void *)(v59[1] + 24);
    double v23 = (void *)v53[3];
  }
  id v40 = v23;
  _Block_object_dispose(&v52, 8);
  uint64_t v52 = 0;
  CGFloat v53 = &v52;
  uint64_t v54 = 0x2050000000;
  long long v25 = (void *)get_STKStickerUIStickerRepresentationClass_softClass;
  uint64_t v55 = get_STKStickerUIStickerRepresentationClass_softClass;
  if (!get_STKStickerUIStickerRepresentationClass_softClass)
  {
    *(void *)&long long buf = MEMORY[0x1E4F143A8];
    *((void *)&buf + 1) = 3221225472;
    CGFloat v57 = __get_STKStickerUIStickerRepresentationClass_block_invoke;
    int v58 = &unk_1E5620B90;
    double v59 = &v52;
    StickersLibraryCore();
    Class v26 = objc_getClass("_STKStickerUIStickerRepresentation");
    *(void *)(v59[1] + 24) = v26;
    get_STKStickerUIStickerRepresentationClass_softClass Class = *(void *)(v59[1] + 24);
    long long v25 = (void *)v53[3];
  }
  int64_t v39 = a5;
  double v27 = v21;
  id v28 = v25;
  _Block_object_dispose(&v52, 8);
  uint64_t v52 = 0;
  CGFloat v53 = &v52;
  uint64_t v54 = 0x2050000000;
  double v29 = (void *)get_STKStickerAttributionInfoClass_softClass;
  uint64_t v55 = get_STKStickerAttributionInfoClass_softClass;
  if (!get_STKStickerAttributionInfoClass_softClass)
  {
    *(void *)&long long buf = MEMORY[0x1E4F143A8];
    *((void *)&buf + 1) = 3221225472;
    CGFloat v57 = __get_STKStickerAttributionInfoClass_block_invoke;
    int v58 = &unk_1E5620B90;
    double v59 = &v52;
    StickersLibraryCore();
    Class v30 = objc_getClass("_STKStickerAttributionInfo");
    *(void *)(v59[1] + 24) = v30;
    get_STKStickerAttributionInfoClass_softClass Class = *(void *)(v59[1] + 24);
    double v29 = (void *)v53[3];
  }
  id v31 = v29;
  _Block_object_dispose(&v52, 8);
  if (v40 && v28 && v31)
  {
    dispatch_get_global_queue(25, 0);
    id v38 = v20;
    double v32 = v19;
    double v33 = v18;
    double v34 = v17;
    unint64_t v36 = v35 = v16;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __154__CKChatController_donateStickerToRecentsWithIdentifier_representations_stickerEffectType_externalURI_name_accessibilityLabel_metadata_ckAttributionInfo___block_invoke;
    block[3] = &unk_1E56229A0;
    id v48 = v40;
    uint64_t v42 = v35;
    id v49 = v28;
    id v43 = v27;
    id v50 = v31;
    id v44 = v15;
    int64_t v51 = v39;
    id v45 = v34;
    id v46 = v33;
    id v47 = v32;
    dispatch_async(v36, block);

    id v16 = v35;
    id v17 = v34;
    id v18 = v33;
    id v19 = v32;
    id v20 = v38;

    double v37 = v42;
  }
  else
  {
    double v37 = IMLogHandleForCategory();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      +[CKChatController donateStickerToRecentsWithIdentifier:representations:stickerEffectType:externalURI:name:accessibilityLabel:metadata:ckAttributionInfo:]();
    }
  }
}

void __154__CKChatController_donateStickerToRecentsWithIdentifier_representations_stickerEffectType_externalURI_name_accessibilityLabel_metadata_ckAttributionInfo___block_invoke(uint64_t a1)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v29 = objc_alloc_init(*(Class *)(a1 + 80));
  double v2 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v32 != v6) {
          objc_enumerationMutation(v3);
        }
        double v8 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        id v9 = objc_alloc(*(Class *)(a1 + 88));
        id v10 = [v8 data];
        int v11 = [v8 type];
        [v8 size];
        double v13 = v12;
        double v15 = v14;
        id v16 = [v8 role];
        id v17 = objc_msgSend(v9, "initWithData:type:size:role:", v10, v11, v16, v13, v15);

        [v2 addObject:v17];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v31 objects:v35 count:16];
    }
    while (v5);
  }

  id v18 = [*(id *)(a1 + 40) objectForKeyedSubscript:*MEMORY[0x1E4F6D3C8]];
  id v19 = [*(id *)(a1 + 40) objectForKeyedSubscript:*MEMORY[0x1E4F6D3E0]];
  id v20 = [*(id *)(a1 + 40) objectForKeyedSubscript:*MEMORY[0x1E4F6D3D0]];
  id v21 = (void *)[objc_alloc(*(Class *)(a1 + 96)) initWithAdamID:v18 bundleIdentifier:v19 name:v20];
  uint64_t v22 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 72);
  id v30 = 0;
  [v29 donateStickerToRecentsWithIdentifier:v23 representations:v2 stickerEffectEnum:v22 externalURI:v24 name:v25 accessibilityName:v26 metadata:0 attributionInfo:v21 error:&v30];
  id v27 = v30;
  if (v27)
  {
    id v28 = IMLogHandleForCategory();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      __154__CKChatController_donateStickerToRecentsWithIdentifier_representations_stickerEffectType_externalURI_name_accessibilityLabel_metadata_ckAttributionInfo___block_invoke_cold_1();
    }
  }
}

+ (id)representationFromFileURL:(id)a3
{
  CFURLRef v3 = (const __CFURL *)a3;
  CFURLRef v4 = v3;
  if (v3)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4F42A80];
    uint64_t v6 = [(__CFURL *)v3 path];
    double v7 = [v5 imageWithContentsOfFile:v6];

    if (v7
      && (double v8 = CGImageSourceCreateWithURL(v4, 0), Type = (__CFString *)CGImageSourceGetType(v8), CFRelease(v8), Type))
    {
      id v10 = objc_alloc_init(MEMORY[0x1E4F43338]);
      uint64_t v16 = 0;
      int v11 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfURL:v4 options:1 error:&v16];
      uint64_t v12 = v16;
      [v10 setData:v11];

      id v13 = 0;
      if (!v12)
      {
        double v14 = (void *)[(__CFString *)Type copy];
        [v10 setType:v14];

        [v7 size];
        objc_msgSend(v10, "setSize:");
        id v13 = v10;
      }
    }
    else
    {
      id v13 = 0;
    }
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

- (void)dragManagerDidBeginDragging:(id)a3
{
  CFURLRef v4 = [(CKCoreChatController *)self conversation];
  id v6 = [v4 chat];

  [v6 beginHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B958]];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"StickerDrag"];
  [(CKChatController *)self setScrollDownIsValid:0];
  uint64_t v5 = [(CKChatController *)self collectionView];
  [v5 beginDisablingTranscriptDynamicsForReason:@"StickerDrag"];
}

- (void)dragManager:(id)a3 draggedItemWithTarget:(id)a4
{
  id v28 = a4;
  id v6 = [(CKCoreChatController *)self collectionViewController];
  double v7 = [v6 collectionView];

  double v8 = [(CKChatController *)self selectedBalloonForTarget:v28];
  [(CKChatController *)self _setOverlayForBalloonViewAtIndexPath:v8];
  if (a3) {
    goto LABEL_15;
  }
  [v28 screenCoordinate];
  double v10 = v9;
  int v11 = +[CKUIBehavior sharedBehaviors];
  [v11 dragTranscriptScrollThreshold];
  double v13 = v12;

  double v14 = [(CKChatController *)self view];
  [v14 bounds];
  double Height = CGRectGetHeight(v30);
  [v7 contentInset];
  double v17 = Height - v16;

  if (v10 >= v13 && v10 <= v17)
  {
    [(CKChatController *)self setScrollDownIsValid:1];
    goto LABEL_9;
  }
  id v19 = +[CKUIBehavior sharedBehaviors];
  [v19 dragTranscriptScrollDisplayLinkMaxDelta];
  double v21 = v20;

  if (v10 < v13)
  {
    double v22 = -(fmin((v13 - v10) / v13, 1.0) * v21);
    goto LABEL_13;
  }
  double v22 = 0.0;
  if (v10 > v17)
  {
    if ([(CKChatController *)self scrollDownIsValid])
    {
      double v22 = fmin((v10 - v17) / v13, 1.0) * v21;
      goto LABEL_13;
    }
    [(CKChatController *)self setStickerTranscriptScrollDelta:0.0];
LABEL_9:
    uint64_t v23 = [(CKChatController *)self stickerTranscriptScrollDisplayLink];
    [v23 invalidate];

    [(CKChatController *)self setStickerTranscriptScrollDisplayLink:0];
    goto LABEL_15;
  }
LABEL_13:
  [(CKChatController *)self setStickerTranscriptScrollDelta:v22];
  uint64_t v24 = [(CKChatController *)self stickerTranscriptScrollDisplayLink];

  if (!v24)
  {
    uint64_t v25 = [MEMORY[0x1E4F42D90] mainScreen];
    uint64_t v26 = [v25 displayLinkWithTarget:self selector:sel__stickerTranscriptScrollDisplayLinkFired];

    id v27 = [MEMORY[0x1E4F1CAC0] mainRunLoop];
    [v26 addToRunLoop:v27 forMode:*MEMORY[0x1E4F1C4B0]];

    [(CKChatController *)self setStickerTranscriptScrollDisplayLink:v26];
  }
LABEL_15:
}

- (void)_stickerTranscriptScrollDisplayLinkFired
{
  id v13 = [(CKChatController *)self collectionView];
  [v13 contentOffset];
  double v4 = v3;
  double v6 = v5;
  double stickerTranscriptScrollDelta = self->_stickerTranscriptScrollDelta;
  double v8 = [(CKCoreChatController *)self inputController];
  double v9 = [v8 stickerPickerMessagePartChatItem];

  if (!v9)
  {
    double v10 = v6 + stickerTranscriptScrollDelta;
    objc_msgSend(v13, "__ck_bottomOffset");
    if (v10 < v11)
    {
      objc_msgSend(v13, "__ck_scrollToTopContentOffset");
      if (v10 > v12) {
        objc_msgSend(v13, "setContentOffset:", v4, v10);
      }
    }
  }
}

- (id)selectedBalloonForTarget:(id)a3
{
  id v4 = a3;
  [v4 screenCoordinate];
  double v6 = v5;
  double v8 = v7;
  CGFloat v9 = *MEMORY[0x1E4F1DB28];
  CGFloat v10 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
  [v4 initialSize];
  double v12 = v11;
  double v14 = v13;
  [v4 scale];
  double v16 = v15;
  [v4 meshScaleFactor];
  double v18 = v17;

  double v19 = v12 * (v16 / v18);
  double v20 = v14 * (v16 / v18);
  v25.origin.double x = v9;
  v25.origin.double y = v10;
  v25.size.double width = v19;
  v25.size.double height = v20;
  double v21 = v6 - CGRectGetWidth(v25) * 0.5;
  v26.origin.double x = v9;
  v26.origin.double y = v10;
  v26.size.double width = v19;
  v26.size.double height = v20;
  double v22 = v8 - CGRectGetHeight(v26) * 0.5;

  return -[CKChatController selectedBalloonIntersectingRect:](self, "selectedBalloonIntersectingRect:", v21, v22, v19, v20);
}

- (id)selectedBalloonIntersectingRect:(CGRect)a3
{
  return -[CKChatController selectedBalloonIntersectingRect:chatItemForRepositioning:](self, "selectedBalloonIntersectingRect:chatItemForRepositioning:", 0, a3.origin.x, a3.origin.y, a3.size.width, a3.size.height);
}

- (id)selectedBalloonIntersectingRect:(CGRect)a3 chatItemForRepositioning:(id)a4
{
  CGFloat height = a3.size.height;
  CGFloat width = a3.size.width;
  CGFloat y = a3.origin.y;
  CGFloat x = a3.origin.x;
  uint64_t v86 = *MEMORY[0x1E4F143B8];
  id v63 = a4;
  v88.origin.CGFloat x = x;
  v88.origin.CGFloat y = y;
  v88.size.CGFloat width = width;
  v88.size.CGFloat height = height;
  CGFloat MidX = CGRectGetMidX(v88);
  CGFloat v55 = x;
  v89.origin.CGFloat x = x;
  CGFloat v56 = y;
  CGFloat v57 = width;
  v89.origin.CGFloat y = y;
  v89.size.CGFloat width = width;
  CGFloat v58 = height;
  v89.size.CGFloat height = height;
  CGFloat MidY = CGRectGetMidY(v89);
  CGFloat v9 = [(CKCoreChatController *)self collectionViewController];
  double v62 = [v9 collectionView];
  CGFloat v10 = [v62 indexPathsForVisibleItems];
  double v59 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v10, "count"));
  long long v81 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  id v11 = v10;
  uint64_t v12 = [v11 countByEnumeratingWithState:&v81 objects:v85 count:16];
  if (v12)
  {
    uint64_t v13 = *(void *)v82;
    do
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        if (*(void *)v82 != v13) {
          objc_enumerationMutation(v11);
        }
        double v15 = *(void **)(*((void *)&v81 + 1) + 8 * i);
        if (![v15 section])
        {
          double v16 = [v9 chatItems];
          double v17 = objc_msgSend(v16, "objectAtIndex:", objc_msgSend(v15, "item"));

          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0 && (!v63 || [v63 isEqual:v17]))
          {
            double v18 = [v62 cellForItemAtIndexPath:v15];
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              double v19 = [v18 balloonView];
              double v20 = v19;
              if (v19)
              {
                double v21 = [v19 superview];
                [v20 frame];
                objc_msgSend(v21, "convertRect:toView:", v62);
                double v60 = v23;
                double v61 = v22;
                double v25 = v24;
                double v27 = v26;

                [v62 frame];
                CGFloat v29 = v28;
                CGFloat v31 = v30;
                CGFloat v33 = v32;
                CGFloat v35 = v34;
                v90.origin.CGFloat x = v25;
                v90.size.CGFloat width = v60;
                v90.origin.CGFloat y = v61;
                v90.size.CGFloat height = v27;
                double MinX = CGRectGetMinX(v90);
                v91.origin.CGFloat x = v29;
                v91.origin.CGFloat y = v31;
                v91.size.CGFloat width = v33;
                v91.size.CGFloat height = v35;
                double v37 = CGRectGetMinX(v91);
                v92.origin.CGFloat x = v29;
                v92.origin.CGFloat y = v31;
                v92.size.CGFloat width = v33;
                v92.size.CGFloat height = v35;
                double MaxX = CGRectGetMaxX(v92);
                v93.origin.CGFloat x = v25;
                v93.size.CGFloat width = v60;
                v93.origin.CGFloat y = v61;
                v93.size.CGFloat height = v27;
                CGFloat v39 = CGRectGetMaxX(v93);
                double v40 = fmin(MinX - v37, 75.0);
                objc_msgSend(v62, "convertRect:toView:", 0, v25 - v40, v61, v60 + v40 + fmin(MaxX - v39, 75.0), v27 + 0.0);
                uint64_t v41 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithCGRect:");
                [v59 setObject:v41 forKey:v15];
              }
            }
          }
        }
      }
      uint64_t v12 = [v11 countByEnumeratingWithState:&v81 objects:v85 count:16];
    }
    while (v12);
  }

  uint64_t v42 = (void *)[v59 copy];
  id v43 = [v42 allKeys];
  v75[0] = MEMORY[0x1E4F143A8];
  v75[1] = 3221225472;
  v75[2] = __77__CKChatController_selectedBalloonIntersectingRect_chatItemForRepositioning___block_invoke;
  v75[3] = &unk_1E56229C8;
  id v44 = v59;
  id v76 = v44;
  CGFloat v77 = v55;
  CGFloat v78 = v56;
  CGFloat v79 = v57;
  CGFloat v80 = v58;
  [v43 enumerateObjectsUsingBlock:v75];

  id v45 = [v44 allKeys];
  uint64_t v46 = [v45 count];

  if (v46)
  {
    id v47 = [v44 allKeys];
    BOOL v48 = [v47 count] == 1;

    if (v48)
    {
      id v49 = [v44 allKeys];
      id v50 = [v49 firstObject];
    }
    else
    {
      uint64_t v69 = 0;
      __int16 v70 = &v69;
      uint64_t v71 = 0x3032000000;
      uint64_t v72 = __Block_byref_object_copy__10;
      CGRect v73 = __Block_byref_object_dispose__10;
      id v74 = 0;
      int64_t v51 = [v44 allKeys];
      v64[0] = MEMORY[0x1E4F143A8];
      v64[1] = 3221225472;
      v64[2] = __77__CKChatController_selectedBalloonIntersectingRect_chatItemForRepositioning___block_invoke_860;
      v64[3] = &unk_1E56229F0;
      CGFloat v67 = MidX;
      CGFloat v68 = MidY;
      id v65 = v44;
      uint64_t v66 = &v69;
      [v51 enumerateObjectsUsingBlock:v64];

      id v50 = (id)v70[5];
      _Block_object_dispose(&v69, 8);
    }
  }
  else
  {
    id v50 = 0;
  }

  return v50;
}

void __77__CKChatController_selectedBalloonIntersectingRect_chatItemForRepositioning___block_invoke(uint64_t a1, void *a2)
{
  id v12 = a2;
  double v3 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
  [v3 CGRectValue];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v14.origin.CGFloat x = v5;
  v14.origin.CGFloat y = v7;
  v14.size.CGFloat width = v9;
  v14.size.CGFloat height = v11;
  if (!CGRectIntersectsRect(v14, *(CGRect *)(a1 + 40))) {
    [*(id *)(a1 + 32) removeObjectForKey:v12];
  }
}

void __77__CKChatController_selectedBalloonIntersectingRect_chatItemForRepositioning___block_invoke_860(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v18 = a2;
  CGFloat v7 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
  [v7 CGRectValue];
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;

  double v16 = *(double *)(a1 + 56);
  v20.origin.CGFloat x = v9;
  v20.origin.CGFloat y = v11;
  v20.size.CGFloat width = v13;
  v20.size.CGFloat height = v15;
  if (v16 > CGRectGetMinY(v20))
  {
    double v17 = *(double *)(a1 + 56);
    v21.origin.CGFloat x = v9;
    v21.origin.CGFloat y = v11;
    v21.size.CGFloat width = v13;
    v21.size.CGFloat height = v15;
    if (v17 < CGRectGetMaxY(v21))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

- (void)dragManagerDidEndDragging:(id)a3
{
  [(CKChatController *)self _clearBalloonViewOverlays];
  double v4 = [(CKChatController *)self stickerTranscriptScrollDisplayLink];
  [v4 invalidate];

  [(CKChatController *)self setStickerTranscriptScrollDisplayLink:0];
  id v8 = [(CKChatController *)self collectionView];
  CGFloat v5 = [(CKCoreChatController *)self conversation];
  double v6 = [v5 chat];

  [v8 endDisablingTranscriptDynamicsForReason:@"StickerDrag"];
  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"StickerDrag"];
  [v6 endHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B958]];
  browserDragManager = self->_browserDragManager;
  self->_browserDragManager = 0;
}

- (int)dragManager:(id)a3 dropAreaForDragTarget:(id)a4
{
  id v5 = a4;
  [v5 screenCoordinate];
  double v7 = v6;
  double v9 = v8;
  double v10 = [(CKCoreChatController *)self inputController];
  CGFloat v11 = [v10 inputViewController];
  double v12 = [v11 view];
  CGFloat v13 = v12;
  CGFloat v51 = v9;
  CGFloat v52 = v7;
  if (v12)
  {
    id v14 = v12;
  }
  else
  {
    CGFloat v15 = [(CKChatController *)self viewControllerForChatInputModalPresentation];
    double v16 = [v15 presentedViewController];
    id v14 = [v16 view];
  }
  double v17 = [v14 superview];
  [v14 frame];
  objc_msgSend(v17, "convertRect:toView:", 0);
  CGFloat v49 = v19;
  CGFloat v50 = v18;
  CGFloat v47 = v21;
  CGFloat v48 = v20;

  double v22 = [(CKChatController *)self entryView];
  double v23 = [v22 superview];
  double v24 = [(CKChatController *)self entryView];
  [v24 frame];
  objc_msgSend(v23, "convertRect:toView:", 0);
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  CGFloat v33 = [(CKChatController *)self collectionView];
  double v34 = [v33 superview];
  CGFloat v35 = [(CKChatController *)self collectionView];
  [v35 frame];
  objc_msgSend(v34, "convertRect:toView:", 0);
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;

  id v44 = [(CKChatController *)self selectedBalloonForTarget:v5];

  v56.origin.CGFloat x = v26;
  v56.origin.CGFloat y = v28;
  v56.size.CGFloat width = v30;
  v56.size.CGFloat height = v32;
  v53.CGFloat x = v52;
  v53.CGFloat y = v51;
  if (CGRectContainsPoint(v56, v53))
  {
    int v45 = 2;
  }
  else
  {
    v57.origin.CGFloat y = v49;
    v57.origin.CGFloat x = v50;
    v57.size.CGFloat height = v47;
    v57.size.CGFloat width = v48;
    v54.CGFloat x = v52;
    v54.CGFloat y = v51;
    if (CGRectContainsPoint(v57, v54))
    {
      int v45 = 3;
    }
    else if (v44)
    {
      int v45 = 4;
    }
    else
    {
      v58.origin.CGFloat x = v37;
      v58.origin.CGFloat y = v39;
      v58.size.CGFloat width = v41;
      v58.size.CGFloat height = v43;
      v55.CGFloat x = v52;
      v55.CGFloat y = v51;
      int v45 = CGRectContainsPoint(v58, v55);
    }
  }

  return v45;
}

- (void)setLocalUserIsComposing:(BOOL)a3 withPluginBundleID:(id)a4 typingIndicatorData:(id)a5
{
  BOOL v6 = a3;
  id v11 = a4;
  id v8 = a5;
  double v9 = [(CKCoreChatController *)self conversation];
  double v10 = v9;
  if (v6) {
    [v9 setLocalUserIsComposing:v11 typingIndicatorIcon:v8];
  }
  else {
    [v9 setLocalUserIsComposing:0];
  }
}

- (void)chatInputControllerRequestInputViewFocusFromFullscreen:(id)a3
{
  self->_shouldBecomeFirstResponderWhenDismissingModalBrowser = 0;
  [(CKChatController *)self setTargetFirstResponder:1];

  [(CKChatController *)self becomeFirstResponder];
}

- (void)chatInputDidUpdateInputViewShowingBrowser:(BOOL)a3 entryFieldCollapsed:(BOOL)a4 animated:(BOOL)a5
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  BOOL v7 = a3;
  double v9 = [(CKChatController *)self entryView];
  double v10 = [v9 contentView];
  id v11 = [v10 textView];

  if (v7)
  {
    double v12 = [(CKChatController *)self view];
    CGFloat v13 = [v12 window];
    char v14 = [v13 isKeyWindow];

    if ((v14 & 1) == 0)
    {
      CGFloat v15 = [(CKChatController *)self view];
      double v16 = [v15 window];
      [v16 makeKeyWindow];
    }
    [v11 becomeFirstResponder];
    double v17 = [(CKChatController *)self entryView];
    [v17 setEntryFieldCollapsed:v6 animated:v5];

    [v11 saveKeyboardInputMode];
  }
  double v18 = [(CKChatController *)self firstResponder];
  [v18 reloadInputViews];

  double v19 = (void *)MEMORY[0x1E4F42FF0];
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = __91__CKChatController_chatInputDidUpdateInputViewShowingBrowser_entryFieldCollapsed_animated___block_invoke;
  v21[3] = &unk_1E5622A18;
  BOOL v23 = v7;
  id v22 = v11;
  id v20 = v11;
  [v19 performWithoutAnimation:v21];
}

uint64_t __91__CKChatController_chatInputDidUpdateInputViewShowingBrowser_entryFieldCollapsed_animated___block_invoke(uint64_t result)
{
  if (!*(unsigned char *)(result + 40)) {
    return [*(id *)(result + 32) restoreKeyboardInputMode];
  }
  return result;
}

- (void)chatInputController:(id)a3 presentShelfModal:(id)a4 animated:(BOOL)a5 completion:(id)a6
{
}

- (void)chatInputDidUpdateWithNewInputViewController:(id)a3
{
  id v3 = [(CKChatController *)self firstResponder];
  [v3 reloadInputViews];
}

- (void)chatInputControllerWillPresentModalBrowserViewController:(id)a3
{
  double v4 = [(CKChatController *)self entryView];
  BOOL v5 = [v4 contentView];
  uint64_t v6 = [v5 isActive];

  [(CKChatController *)self setTargetFirstResponder:0];
  [(CKChatController *)self becomeFirstResponder];
  [(CKChatController *)self setTargetFirstResponder:v6];
  BOOL v7 = [(CKChatController *)self collectionView];
  [v7 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerModalBrowser"];

  id v8 = [(CKCoreChatController *)self collectionViewController];
  [v8 setAllowsPluginPlayback:0];

  id v9 = [(CKCoreChatController *)self collectionViewController];
  [v9 stopPluginPlayback];
}

- (void)chatInputControllerWillDismissModalBrowserViewController:(id)a3
{
  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"BrowserTransition"];
  double v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 scrollTranscriptToEntryViewInsertionTimeWithAnimation:0];

  id v5 = [(CKCoreChatController *)self collectionViewController];
  [v5 setTranscriptUpdateAnimated:1];
}

- (void)chatInputControllerDidDismissModalBrowserViewController:(id)a3
{
  double v4 = [(CKChatController *)self collectionView];
  [v4 endHoldingContentOffsetUpdatesForReason:@"ChatControllerModalBrowser"];

  if (self->_shouldDisplayKeyboardWhenDismissingModalBrowser)
  {
    id v5 = [(CKChatController *)self entryView];
    uint64_t v6 = [v5 contentView];
    char v7 = [v6 isActive];

    if ((v7 & 1) == 0) {
      [(CKChatController *)self setTargetFirstResponder:1];
    }
  }
  if (self->_shouldBecomeFirstResponderWhenDismissingModalBrowser) {
    [(CKChatController *)self becomeFirstResponder];
  }
  [MEMORY[0x1E4F42FF8] attemptRotationToDeviceOrientation];
  self->_shouldBecomeFirstResponderWhenDismissingModalBrowser = 1;
  id v8 = [(CKCoreChatController *)self collectionViewController];
  [v8 setAllowsPluginPlayback:1];

  id v9 = [(CKCoreChatController *)self collectionViewController];
  [v9 startPluginPlaybackAfterDelay:0.0];

  double v10 = [(CKChatController *)self entryView];
  [v10 setAlpha:1.0];

  id v11 = [(CKCoreChatController *)self delegate];
  char v12 = objc_opt_respondsToSelector();

  if (v12)
  {
    id v13 = [(CKCoreChatController *)self delegate];
    [v13 stopForcingOrientation];
  }
}

- (void)chatInputControllerDidDismissCompactBrowserViewController:(id)a3
{
  double v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 scrollTranscriptToEntryViewInsertionTimeWithAnimation:1];

  id v5 = [(CKChatController *)self entryView];
  [v5 setAlpha:1.0];
}

- (void)chatInputController:(id)a3 willPresentStickerPickerForChatItem:(id)a4
{
  id v6 = a4;
  if (!CKIsAppCardsEnabled())
  {
    id v5 = [(CKCoreChatController *)self collectionViewController];
    objc_msgSend(v5, "beginPresentingChatItemForKeyboardPresentation:layoutAreaContentInsets:completion:", v6, 0, 40.0, 0.0, 40.0, 0.0);
  }
}

- (void)chatInputControllerDidSelectRequestLocation:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self inputController];

  if (v5 == v4)
  {
    [(CKChatController *)self _stageFindMyLocationRequest];
  }
}

- (void)chatInputController:(id)a3 didPresentStickerPickerForChatItem:(id)a4
{
  id v6 = a4;
  if (!CKIsAppCardsEnabled())
  {
    id v5 = [(CKCoreChatController *)self collectionViewController];
    [v5 endPresentingChatItemForKeyboardPresentation:v6 completion:0];
  }
}

- (void)chatInputDidSelectPhotoPicker
{
  v17[3] = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F42A90]);
  [(CKChatController *)self setImagePickerController:v3];
  [v3 setDelegate:self];
  uint64_t v4 = *MEMORY[0x1E4F22660];
  v17[0] = *MEMORY[0x1E4F225F8];
  v17[1] = v4;
  v17[2] = *MEMORY[0x1E4F22628];
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:3];
  [v3 setMediaTypes:v5];

  uint64_t v6 = MEMORY[0x1E4F1CC38];
  [v3 _setValue:MEMORY[0x1E4F1CC38] forProperty:@"_UIImagePickerControllerSkipConfirmation"];
  [v3 _setValue:v6 forProperty:@"_UIImagePickerControllerMessagesLayout"];
  [v3 setSourceType:0];
  [v3 setModalPresentationStyle:7];
  [v3 setAllowsEditing:0];
  id v7 = v3;
  id v8 = [v7 popoverPresentationController];
  [v8 setPermittedArrowDirections:8];
  id v9 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v10 = [v9 isSendMenuEnabled];

  if (v10)
  {
    id v11 = [(CKCoreChatController *)self inputController];
    char v12 = [v11 entryView];
    id v13 = [v12 sendMenuSourceView];
    [v8 setSourceView:v13];

    char v14 = [(CKCoreChatController *)self inputController];
    CGFloat v15 = [v14 entryView];
    double v16 = [v15 sendMenuSourceView];
    [v16 bounds];
    objc_msgSend(v8, "setSourceRect:");
  }
  else
  {
    char v14 = [v7 presentationController];
    CGFloat v15 = [(CKChatController *)self entryView];
    double v16 = [v15 sendMenuSourceView];
    [v14 setSourceView:v16];
  }

  [(CKChatController *)self presentViewController:v7 animated:1 completion:0];
}

- (void)chatInputDidSelectEffectPicker
{
  id v3 = [(CKChatController *)self entryView];
  uint64_t v4 = [v3 composition];
  char v5 = [v4 hasContent];

  if (v5)
  {
    [(CKChatController *)self showEffectPicker];
  }
  else
  {
    id v6 = [(CKChatController *)self entryView];
    [v6 showMessageEffectsHint];
  }
}

- (void)chatInputControllerWillSelectFunCamera:(id)a3
{
  id v4 = a3;
  char v5 = +[CKBalloonPluginManager sharedInstance];
  char v6 = [v5 isCameraAllowed];

  if (v6)
  {
    id v7 = [(CKCoreChatController *)self inputController];
    char v8 = [v7 isInputViewVisible];

    if ((v8 & 1) == 0) {
      [(CKChatController *)self prewarmFunCamera];
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v10 = 0;
      _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "chatInputControllerWillSelectFunCamera: Not attempting to present Camera. Camera restriction in effect.", v10, 2u);
    }
  }
}

- (void)chatInputControllerCancelSelectFunCamera:(id)a3
{
  id v4 = +[CKBalloonPluginManager sharedInstance];
  char v5 = [(CKChatController *)self funCameraViewController];
  char v6 = [v5 balloonPlugin];
  id v7 = [v6 identifier];
  id v8 = [v4 existingViewControllerForPluginIdentifier:v7];

  [v8 beginAppearanceTransition:0 animated:0];
  [v8 endAppearanceTransition];
}

- (void)chatInputControllerDidSelectFunCamera:(id)a3
{
  id v4 = a3;
  if (CKIsRunningInMessagesTranscriptExtension())
  {
    [(CKChatController *)self openURLInExtensionContextForMode:@"photos"];
  }
  else
  {
    char v5 = +[CKBalloonPluginManager sharedInstance];
    char v6 = [v5 isCameraAllowed];

    if (v6)
    {
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __58__CKChatController_chatInputControllerDidSelectFunCamera___block_invoke;
      aBlock[3] = &unk_1E5620C40;
      void aBlock[4] = self;
      id v7 = (void (**)(void))_Block_copy(aBlock);
      id v8 = [(CKCoreChatController *)self inputController];
      int v9 = [v8 isInputViewVisible];

      if (v9)
      {
        int v10 = [(CKCoreChatController *)self inputController];
        [v10 forceDismissBrowserWithoutAnimation];

        id v11 = +[CKBalloonPluginManager sharedInstance];
        [v11 forceKillNonCameraRemoteExtensionsImmediately];
      }
      char v12 = [(CKChatController *)self funCameraViewController];

      if (v12)
      {
        v7[2](v7);
      }
      else
      {
        char v14 = [(CKCoreChatController *)self inputController];
        int v15 = [v14 isInputViewVisible];

        if (v15)
        {
          double v16 = [(CKCoreChatController *)self inputController];
          [v16 forceDismissBrowserWithoutAnimation];

          double v17 = +[CKBalloonPluginManager sharedInstance];
          [v17 forceKillNonCameraRemoteExtensionsImmediately];

          int64_t v18 = 50000000;
        }
        else
        {
          int64_t v18 = 0;
        }
        dispatch_time_t v19 = dispatch_time(0, v18);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __58__CKChatController_chatInputControllerDidSelectFunCamera___block_invoke_868;
        block[3] = &unk_1E5622330;
        void block[4] = self;
        double v21 = v7;
        dispatch_after(v19, MEMORY[0x1E4F14428], block);
      }
    }
    else if (IMOSLoggingEnabled())
    {
      id v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "chatInputControllerDidSelectFunCamera: Not attempting to present Camera. Camera restriction in effect.", buf, 2u);
      }
    }
  }
}

void __58__CKChatController_chatInputControllerDidSelectFunCamera___block_invoke(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isShowingCamera])
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    double v2 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
      goto LABEL_12;
    }
    __int16 v17 = 0;
    id v3 = "Not presenting FunCam, instance of camera already presented";
    id v4 = (uint8_t *)&v17;
LABEL_11:
    _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, v3, v4, 2u);
LABEL_12:

    return;
  }
  if (![*(id *)(a1 + 32) appeared])
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    double v2 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
      goto LABEL_12;
    }
    *(_WORD *)long long buf = 0;
    id v3 = "Not presenting FunCam, chat controller is dissapearing or dissapeared";
    id v4 = buf;
    goto LABEL_11;
  }
  [*(id *)(a1 + 32) setIsShowingCamera:1];
  char v5 = [*(id *)(a1 + 32) entryView];
  char v6 = [v5 contentView];
  int v7 = [v6 isActive];

  if (v7)
  {
    id v8 = [*(id *)(a1 + 32) entryView];
    int v9 = [v8 contentView];
    int v10 = [v9 activeView];
    [v10 resignFirstResponder];
  }
  else if (!CKIsAppCardsEnabled())
  {
    [*(id *)(a1 + 32) resignFirstResponder];
  }
  id v11 = *(void **)(a1 + 32);
  char v12 = [v11 funCameraViewController];
  [v12 setDelegate:v11];

  id v13 = [*(id *)(a1 + 32) funCameraViewController];
  [v13 setModalPresentationStyle:0];

  char v14 = *(void **)(a1 + 32);
  id v15 = [v14 funCameraViewController];
  [v14 presentViewController:v15 animated:1 completion:0];
}

uint64_t __58__CKChatController_chatInputControllerDidSelectFunCamera___block_invoke_868(uint64_t a1)
{
  [*(id *)(a1 + 32) prewarmFunCamera];
  double v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

- (void)chatInputController:(id)a3 requestPresentSendMenu:(id)a4
{
  id v5 = a4;
  [(CKChatController *)self animateSendMenuStatusBarAppearanceUpdate];
  char v6 = [(CKChatController *)self sendMenuDelegate];
  [v6 chatController:self requestPresentSendMenu:v5];

  [(CKChatController *)self enforceSendMenuOrderingInWindowSubviews];
}

- (void)chatInputController:(id)a3 didFinishDismissAnimationForSendMenuViewController:(id)a4
{
  id v5 = a4;
  char v6 = [(CKChatController *)self sendMenuDelegate];
  [v6 chatController:self didFinishDismissAnimationForSendMenuViewController:v5];

  [(CKChatController *)self animateSendMenuStatusBarAppearanceUpdate];
}

- (void)animateSendMenuStatusBarAppearanceUpdate
{
  id v3 = +[CKUIBehavior sharedBehaviors];
  id v4 = [v3 sendMenuStatusBarAnimator];

  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __60__CKChatController_animateSendMenuStatusBarAppearanceUpdate__block_invoke;
  v5[3] = &unk_1E5620C40;
  void v5[4] = self;
  [v4 addAnimations:v5];
  [v4 startAnimation];
}

uint64_t __60__CKChatController_animateSendMenuStatusBarAppearanceUpdate__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsStatusBarAppearanceUpdate];
}

- (BOOL)isKeyboardSnapshotted
{
  double v2 = [(CKChatController *)self keyboardSnapshotView];
  BOOL v3 = v2 != 0;

  return v3;
}

- (BOOL)isKeyboardSnapshotVisible
{
  double v2 = [(CKChatController *)self keyboardSnapshotView];
  BOOL v3 = v2;
  if (v2)
  {
    id v4 = [v2 window];
    [v3 frame];
    double v6 = v5;
    [v4 bounds];
    BOOL v7 = v6 < CGRectGetMaxY(v9);
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (void)chatInputDidChangeSize
{
}

- (void)chatInputWillChangeHeightForCompactPresentation:(double)a3
{
  id v4 = [(CKChatController *)self collectionView];
  BOOL v3 = +[CKScrollViewAnimationProperties systemDefaultScrollAnimation];
  [v4 enforceTranscriptScrollIntentWithAnimationProperties:v3];
}

- (void)chatInputControllerWillTransitionExpanded:(id)a3
{
  id v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 setAllowsPluginPlayback:0];

  double v5 = [(CKCoreChatController *)self collectionViewController];
  [v5 stopPluginPlayback];

  self->_shouldDisplayKeyboardWhenDismissingModalBrowser = [(CKScrollViewController *)self isKeyboardVisible];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"BrowserTransition"];
  double v6 = [(CKChatController *)self collectionView];
  [v6 beginHoldingContentOffsetUpdatesForReason:@"ChatInputControllerTransition"];

  id v7 = [(CKCoreChatController *)self collectionViewController];
  [v7 setTranscriptUpdateAnimated:0];
}

- (void)chatInputControllerDidTransitionExpanded:(id)a3
{
  id v6 = [(CKChatController *)self collectionView];
  id v4 = [(CKChatController *)self collectionView];
  [v4 endHoldingContentOffsetUpdatesForReason:@"ChatInputControllerTransition"];

  double v5 = +[CKScrollViewAnimationProperties unanimated];
  [v6 enforceTranscriptScrollIntentWithAnimationProperties:v5];
}

- (void)chatInputControllerWillTransitionCollapsed:(id)a3
{
  UIKeyboardOrderInAutomaticSkippingAnimation();
  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"BrowserTransition"];
  id v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 scrollTranscriptToEntryViewInsertionTimeWithAnimation:0];

  double v5 = [(CKChatController *)self collectionView];
  [v5 beginHoldingContentOffsetUpdatesForReason:@"ChatInputControllerTransition"];

  id v6 = [(CKCoreChatController *)self collectionViewController];
  [v6 setTranscriptUpdateAnimated:1];

  id v7 = [(CKCoreChatController *)self collectionViewController];
  [v7 setAllowsPluginPlayback:1];

  id v8 = [(CKCoreChatController *)self collectionViewController];
  [v8 startPluginPlaybackAfterDelay:0.0];
}

- (void)chatInputControllerDidTransitionCollapsed:(id)a3
{
  id v4 = [(CKChatController *)self collectionView];
  [v4 endHoldingContentOffsetUpdatesForReason:@"ChatInputControllerTransition"];

  double v5 = [(CKChatController *)self entryView];
  id v6 = [v5 composition];
  uint64_t v7 = [v6 hasContent] ^ 1;

  id v8 = [(CKChatController *)self entryView];
  [v8 setEntryFieldCollapsed:v7 animated:0];

  [(CKChatController *)self _updateEntryViewFrameIfNeeded:1];
  CGRect v9 = [(CKChatController *)self entryView];
  [v9 setAlpha:1.0];

  int v10 = (void *)MEMORY[0x1E4F42FF8];

  [v10 attemptRotationToDeviceOrientation];
}

- (BOOL)chatInputControllerShouldShowHandwriting:(id)a3
{
  id v4 = [(CKCoreChatController *)self chat];
  if (v4)
  {
    double v5 = [(CKCoreChatController *)self chat];
    char v6 = [v5 allowedToShowConversation];
  }
  else
  {
    char v6 = 0;
  }

  return v6;
}

- (void)showContactForHandle:(id)a3
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  double v5 = [MEMORY[0x1E4F6BD10] me];
  char v6 = [v5 imHandles];

  uint64_t v7 = [v6 countByEnumeratingWithState:&v36 objects:v43 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v37 != v8) {
          objc_enumerationMutation(v6);
        }
        int v10 = [*(id *)(*((void *)&v36 + 1) + 8 * i) ID];
        id v11 = MEMORY[0x192FBA710]();
        [v4 addObject:v11];
      }
      uint64_t v7 = [v6 countByEnumeratingWithState:&v36 objects:v43 count:16];
    }
    while (v7);
  }

  if ([v4 containsObject:v3])
  {
    char v12 = [CKEntity alloc];
    id v13 = [(CKCoreChatController *)self conversation];
    char v14 = [v13 chat];
    id v15 = [v14 account];
    double v16 = [v15 loginIMHandle];
    __int16 v17 = [(CKEntity *)v12 initWithIMHandle:v16];
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    int64_t v18 = [(CKCoreChatController *)self conversation];
    id v13 = [v18 recipients];

    __int16 v17 = (CKEntity *)[v13 countByEnumeratingWithState:&v32 objects:v42 count:16];
    if (v17)
    {
      uint64_t v19 = *(void *)v33;
      while (2)
      {
        for (uint64_t j = 0; j != v17; uint64_t j = (CKEntity *)((char *)j + 1))
        {
          if (*(void *)v33 != v19) {
            objc_enumerationMutation(v13);
          }
          double v21 = *(void **)(*((void *)&v32 + 1) + 8 * (void)j);
          id v22 = [v21 defaultIMHandle];
          BOOL v23 = [v22 ID];
          int v24 = [v23 isEqualToString:v3];

          if (v24)
          {
            __int16 v17 = v21;
            goto LABEL_20;
          }
        }
        __int16 v17 = (CKEntity *)[v13 countByEnumeratingWithState:&v32 objects:v42 count:16];
        if (v17) {
          continue;
        }
        break;
      }
    }
  }
LABEL_20:

  if (v17)
  {
    double v25 = [(CKChatController *)self navbarCanvasViewController];
    [v25 showContactCardForEntity:v17 address:v3];
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      CGFloat v26 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v41 = v3;
        _os_log_impl(&dword_18EF18000, v26, OS_LOG_TYPE_INFO, "Failed to find target handle %@", buf, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      double v27 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v41 = v4;
        _os_log_impl(&dword_18EF18000, v27, OS_LOG_TYPE_INFO, "My login handles %@", buf, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      CGFloat v28 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
      {
        double v29 = [(CKCoreChatController *)self conversation];
        CGFloat v30 = [v29 recipients];
        *(_DWORD *)long long buf = 138412290;
        id v41 = v30;
        _os_log_impl(&dword_18EF18000, v28, OS_LOG_TYPE_INFO, "Recipients %@", buf, 0xCu);
      }
    }
  }
}

- (id)_associatedStickerChatItemInInsertedIndexes:(id)a3 matchingSticker:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v14 = 0;
  id v15 = &v14;
  uint64_t v16 = 0x3032000000;
  __int16 v17 = __Block_byref_object_copy__10;
  int64_t v18 = __Block_byref_object_dispose__10;
  id v19 = 0;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __80__CKChatController__associatedStickerChatItemInInsertedIndexes_matchingSticker___block_invoke;
  v11[3] = &unk_1E5622A40;
  void v11[4] = self;
  id v8 = v7;
  id v12 = v8;
  id v13 = &v14;
  [v6 enumerateIndexesUsingBlock:v11];
  id v9 = (id)v15[5];

  _Block_object_dispose(&v14, 8);

  return v9;
}

void __80__CKChatController__associatedStickerChatItemInInsertedIndexes_matchingSticker___block_invoke(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id v12 = [MEMORY[0x1E4F28D58] indexPathForRow:a2 inSection:1];
  double v5 = [*(id *)(a1 + 32) collectionViewController];
  id v6 = [v5 chatItemAtIndexPath:v12];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = v6;
    id v8 = [v7 sticker];
    id v9 = [v8 stickerGUID];
    int v10 = [*(id *)(a1 + 40) stickerGUID];
    int v11 = [v9 hasPrefix:v10];

    if (v11)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v6);
      *a3 = 1;
    }
  }
}

- (CGRect)_targetStickerFrameFromStickerCell:(id)a3 coordinateSpace:(id)a4
{
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v5 = a4;
  id v6 = a3;
  id v7 = [v6 associatedItemView];
  id v8 = [v7 layer];
  id v9 = v8;
  if (v8)
  {
    [v8 transform];
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
  }

  int v10 = [v6 associatedItemView];
  int v11 = [v10 layer];
  long long v12 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 80);
  void v40[4] = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
  void v40[5] = v12;
  long long v13 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 112);
  v40[6] = *(_OWORD *)(MEMORY[0x1E4F39B10] + 96);
  v40[7] = v13;
  long long v14 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 16);
  v40[0] = *MEMORY[0x1E4F39B10];
  v40[1] = v14;
  long long v15 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 48);
  void v40[2] = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
  v40[3] = v15;
  [v11 setTransform:v40];

  uint64_t v16 = [v6 associatedItemView];
  [v16 frame];
  objc_msgSend(v6, "convertRect:toCoordinateSpace:", v5);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  long long v36 = v45;
  long long v37 = v46;
  long long v38 = v47;
  long long v39 = v48;
  long long v32 = v41;
  long long v33 = v42;
  long long v34 = v43;
  long long v35 = v44;
  double v25 = [v6 associatedItemView];

  CGFloat v26 = [v25 layer];
  void v31[4] = v36;
  v31[5] = v37;
  v31[6] = v38;
  v31[7] = v39;
  v31[0] = v32;
  v31[1] = v33;
  v31[2] = v34;
  v31[3] = v35;
  [v26 setTransform:v31];

  double v27 = v18;
  double v28 = v20;
  double v29 = v22;
  double v30 = v24;
  result.size.CGFloat height = v30;
  result.size.CGFloat width = v29;
  result.origin.CGFloat y = v28;
  result.origin.CGFloat x = v27;
  return result;
}

- (void)sendAutomaticallyPlacedSticker:(id)a3 stickerReactionSession:(id)a4 forChatItem:(id)a5 forParentChatItem:(id)a6 stickerFrame:(CGRect)a7 animationCompletionHandler:(id)a8
{
  double height = a7.size.height;
  double width = a7.size.width;
  double y = a7.origin.y;
  double x = a7.origin.x;
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a8;
  double v22 = +[CKAutomaticallyPlacedStickerCommSafetySendContext contextWithAutomaticallyPlacedSticker:stickerReactionSession:chatItem:parentChatItem:stickerFrame:animationCompletionHandler:](CKAutomaticallyPlacedStickerCommSafetySendContext, "contextWithAutomaticallyPlacedSticker:stickerReactionSession:chatItem:parentChatItem:stickerFrame:animationCompletionHandler:", v17, v18, v19, v20, v21, x, y, width, height);
  double v23 = +[CKMediaObjectManager sharedInstance];
  double v24 = [v23 mediaObjectWithSticker:v17 stickerUserInfo:0];

  double v25 = [v24 transfer];
  CGFloat v26 = [v25 fileURL];
  v32[0] = MEMORY[0x1E4F143A8];
  v32[1] = 3221225472;
  v32[2] = __144__CKChatController_sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke;
  v32[3] = &unk_1E5622A68;
  id v33 = v17;
  long long v34 = self;
  id v35 = v18;
  id v36 = v19;
  double v39 = x;
  double v40 = y;
  double v41 = width;
  double v42 = height;
  id v37 = v20;
  id v38 = v21;
  id v27 = v21;
  id v28 = v20;
  id v29 = v19;
  id v30 = v18;
  id v31 = v17;
  [(CKChatController *)self presentCommSafetyInterventionIfNecessaryForFileURL:v26 withSendContext:v22 completion:v32];
}

void __144__CKChatController_sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke(double *a1, int a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    id v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *((void *)a1 + 4);
      int v15 = 138412290;
      uint64_t v16 = v4;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Sticker was sensitive, deferring send for intervention: %@", (uint8_t *)&v15, 0xCu);
    }
  }
  else
  {
    uint64_t v6 = *((void *)a1 + 4);
    id v5 = (void *)*((void *)a1 + 5);
    uint64_t v7 = *((void *)a1 + 6);
    uint64_t v8 = *((void *)a1 + 7);
    uint64_t v9 = *((void *)a1 + 8);
    uint64_t v10 = *((void *)a1 + 9);
    double v11 = a1[10];
    double v12 = a1[11];
    double v13 = a1[12];
    double v14 = a1[13];
    objc_msgSend(v5, "_sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:", v6, v7, v8, v9, v10, v11, v12, v13, v14);
  }
}

- (void)_sendAutomaticallyPlacedSticker:(id)a3 stickerReactionSession:(id)a4 forChatItem:(id)a5 forParentChatItem:(id)a6 stickerFrame:(CGRect)a7 animationCompletionHandler:(id)a8
{
  CGFloat height = a7.size.height;
  CGFloat width = a7.size.width;
  CGFloat y = a7.origin.y;
  CGFloat x = a7.origin.x;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a8;
  double v22 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v23 = [v22 isReactWithAStickerEnabled];

  if (v23)
  {
    if (v17)
    {
      double v24 = IMLogHandleForCategory();
      double v25 = v24;
      if (v20)
      {
        if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          *(void *)&uint8_t buf[4] = v17;
          _os_log_impl(&dword_18EF18000, v25, OS_LOG_TYPE_INFO, "Sending sticker: %@", buf, 0xCu);
        }

        CGFloat v26 = [(CKChatController *)self stickerTranscriptScrollDisplayLink];
        [v26 invalidate];

        [(CKChatController *)self setStickerTranscriptScrollDisplayLink:0];
        double v25 = [(CKCoreChatController *)self fullScreenBalloonViewController];
        id v27 = [(CKCoreChatController *)self collectionViewController];
        id v35 = [v27 balloonViewForChatItem:v20];

        if (v35)
        {
          [(CKChatController *)self setAnimatingStickerReaction:1];
          id v28 = [(CKCoreChatController *)self conversation];
          id v29 = [v28 chat];

          [v29 beginHoldingUpdatesForStickerMoveAnimation];
          [(CKChatController *)self setIgnoresAutomaticScrollsTowardBottom:1];
          id v30 = [(CKChatController *)self collectionView];
          [v30 beginHoldingContentOffsetUpdatesForReason:@"StickerAnimation"];

          *(void *)long long buf = 0;
          objc_initWeak((id *)buf, self);
          v36[0] = MEMORY[0x1E4F143A8];
          v36[1] = 3221225472;
          v36[2] = __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke;
          v36[3] = &unk_1E5622B58;
          objc_copyWeak(v42, (id *)buf);
          id v31 = v17;
          id v37 = v31;
          id v38 = v25;
          id v32 = v29;
          id v39 = v32;
          id v40 = v35;
          v42[1] = *(id *)&x;
          v42[2] = *(id *)&y;
          void v42[3] = *(id *)&width;
          v42[4] = *(id *)&height;
          id v41 = v21;
          [(CKChatController *)self setInsertItemsCallback:v36];
          [v18 sendSticker:v31];

          objc_destroyWeak(v42);
          objc_destroyWeak((id *)buf);
        }
        else
        {
          id v33 = IMLogHandleForCategory();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
            -[CKChatController _sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:]();
          }

          [v18 sendSticker:v17];
          long long v34 = [(CKCoreChatController *)self inputController];
          [v34 endStickerReactionSession];

          if (v25) {
            [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 dismissAppCard:1 completion:0];
          }
        }
      }
      else if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        -[CKChatController _sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:]();
      }
    }
    else
    {
      double v25 = IMLogHandleForCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(CKChatController_Stickers) sendSticker:withMediaObject:composition:parentMessagePartChatItem:messageSummaryInfo:]();
      }
    }
  }
}

void __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v8 = [WeakRetained _associatedStickerChatItemInInsertedIndexes:v6 matchingSticker:*(void *)(a1 + 32)];

  if (v8)
  {
    uint64_t v9 = [v8 guid];
    id v10 = objc_loadWeakRetained((id *)(a1 + 72));
    double v11 = [v10 collectionViewController];
    double v12 = [v11 cellForAssociatedChatItem:v8];

    id v13 = objc_loadWeakRetained((id *)(a1 + 72));
    double v14 = [v13 collectionViewController];
    id v40 = (void *)v9;
    [v14 beginHidingStickerWithGUIDDuringAddStickerAnimation:v9];

    if (*(void *)(a1 + 40))
    {
      id v38 = v5;
      id v39 = v6;
      id v15 = objc_loadWeakRetained((id *)(a1 + 72));
      uint64_t v16 = [v15 collectionViewController];
      id v17 = [*(id *)(a1 + 40) chatItem];
      [v17 IMChatItem];
      id v19 = v18 = v12;
      id v20 = [v19 guid];
      id v21 = [v16 chatItemForGUID:v20];

      id v22 = objc_loadWeakRetained((id *)(a1 + 72));
      [v22 updateChatItemBalloonViewAndStickerViews:v21 hidden:1];

      [*(id *)(a1 + 40) updateStickersAnimated:0];
      int v23 = *(void **)(a1 + 40);
      double v24 = [v8 IMChatItem];
      double v25 = [v24 guid];
      [v23 setStickerVisibility:0 forStickerChatItemGUID:v25];

      double v12 = v18;
      id v26 = objc_loadWeakRetained((id *)(a1 + 72));
      v54[0] = MEMORY[0x1E4F143A8];
      v54[1] = 3221225472;
      v54[2] = __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_875;
      v54[3] = &unk_1E5622A90;
      objc_copyWeak(v57, (id *)(a1 + 72));
      id v27 = v21;
      id v55 = v27;
      id v56 = v18;
      [v26 _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 dismissAppCard:0 completion:v54];

      id v28 = objc_loadWeakRetained((id *)(a1 + 72));
      id v6 = v39;
      LODWORD(v26) = [v28 entryViewWasActiveOnContextMenuPresentation];

      if (v26)
      {
        id v29 = objc_loadWeakRetained((id *)(a1 + 72));
        id v30 = [v29 inputController];
        [v30 endStickerReactionSession];

        id v31 = objc_loadWeakRetained((id *)(a1 + 72));
        [v31 updateActiveEntryViewPositioningGuide];

        id v32 = objc_loadWeakRetained((id *)(a1 + 72));
        [v32 showKeyboard];
      }
      objc_destroyWeak(v57);

      id v5 = v38;
    }
    else
    {
      dispatch_time_t v34 = dispatch_time(0, 150000000);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_2;
      block[3] = &unk_1E5622AB8;
      objc_copyWeak(&v53, (id *)(a1 + 72));
      id v52 = *(id *)(a1 + 48);
      dispatch_after(v34, MEMORY[0x1E4F14428], block);

      objc_destroyWeak(&v53);
    }
    id v35 = *(void **)(a1 + 32);
    v41[0] = MEMORY[0x1E4F143A8];
    v41[1] = 3221225472;
    v41[2] = __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_3;
    v41[3] = &unk_1E5622B30;
    id v42 = *(id *)(a1 + 56);
    objc_copyWeak(&v48, (id *)(a1 + 72));
    id v36 = v12;
    id v43 = v36;
    long long v37 = *(_OWORD *)(a1 + 96);
    long long v49 = *(_OWORD *)(a1 + 80);
    long long v50 = v37;
    id v33 = v40;
    uint64_t v44 = v33;
    id v45 = *(id *)(a1 + 48);
    id v46 = *(id *)(a1 + 40);
    id v47 = *(id *)(a1 + 64);
    [v35 stickerViewForStickerChatItem:v8 snapshotEffectView:1 completion:v41];

    objc_destroyWeak(&v48);
  }
  else
  {
    id v33 = IMLogHandleForCategory();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_cold_1();
    }
  }
}

void __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_875(uint64_t a1)
{
  double v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setIgnoresAutomaticScrollsTowardBottom:1];

  id v4 = objc_loadWeakRetained(v2);
  [v4 updateChatItemBalloonViewAndStickerViews:*(void *)(a1 + 32) hidden:0];

  id v5 = [*(id *)(a1 + 40) associatedItemView];
  [v5 setHidden:1];
}

void __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_2(uint64_t a1)
{
  double v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained inputController];
  [v4 dismissStickerPickerPreservingChatItem:0 completion:0];

  [*(id *)(a1 + 32) beginHoldingUpdatesForStickerMoveAnimation];
  id v5 = objc_loadWeakRetained(v2);
  [v5 setIgnoresAutomaticScrollsTowardBottom:1];

  id v7 = objc_loadWeakRetained(v2);
  id v6 = [v7 collectionView];
  [v6 beginHoldingContentOffsetUpdatesForReason:@"StickerPopoverDismiss"];
}

void __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_3(uint64_t a1, void *a2)
{
  v81[5] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  CGRect v57 = [*(id *)(a1 + 32) window];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  id v5 = [WeakRetained fullScreenBalloonViewController];
  if (v5)
  {
    id v6 = objc_loadWeakRetained((id *)(a1 + 80));
    id v7 = [v6 fullScreenBalloonViewController];
    [v7 preservedBoundsInBalloonWindowAtAppearance];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
  }
  else
  {
    id v6 = [MEMORY[0x1E4F42D90] mainScreen];
    [v6 bounds];
    double v9 = v16;
    double v11 = v17;
    double v13 = v18;
    double v15 = v19;
  }

  uint64_t v75 = 0;
  id v76 = &v75;
  uint64_t v77 = 0x3032000000;
  CGFloat v78 = __Block_byref_object_copy__10;
  CGFloat v79 = __Block_byref_object_dispose__10;
  CGFloat v80 = 0;
  CGFloat v80 = -[CKAnimationOverlayWindow initWithFrame:]([CKAnimationOverlayWindow alloc], "initWithFrame:", v9, v11, v13, v15);
  id v20 = (void *)v76[5];
  id v21 = [v57 windowScene];
  [v20 showInWindowScene:v21];

  [(id)v76[5] addSubview:v3];
  id v22 = objc_loadWeakRetained((id *)(a1 + 80));
  int v23 = [v22 fullScreenBalloonViewController];
  if (v23)
  {
    id v24 = objc_loadWeakRetained((id *)(a1 + 80));
    double v25 = [v24 view];
    id v56 = [v25 coordinateSpace];
  }
  else
  {
    id v56 = [(id)v76[5] coordinateSpace];
  }

  id v26 = objc_loadWeakRetained((id *)(a1 + 80));
  [v26 _targetStickerFrameFromStickerCell:*(void *)(a1 + 40) coordinateSpace:v56];
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;

  objc_msgSend(v3, "setFrame:", *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 112));
  long long v73 = 0u;
  long long v74 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  id v35 = [*(id *)(a1 + 40) associatedItemView];
  id v36 = [v35 layer];
  long long v37 = v36;
  if (v36)
  {
    [v36 transform];
  }
  else
  {
    long long v73 = 0u;
    long long v74 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v69 = 0u;
    long long v70 = 0u;
    long long v67 = 0u;
    long long v68 = 0u;
  }

  void v66[5] = v72;
  v66[6] = v73;
  v66[7] = v74;
  v66[0] = v67;
  v66[1] = v68;
  v66[2] = v69;
  v66[3] = v70;
  v66[4] = v71;
  id v55 = objc_msgSend(MEMORY[0x1E4F39B30], "ck_stickerFlyInTransformAnimationTo:", v66);
  [v3 bounds];
  CGPoint v54 = objc_msgSend(MEMORY[0x1E4F39B30], "ck_stickerFlyInBoundsAnimationFromSize:toSize:", v38, v39, v32, v34);
  id v40 = objc_msgSend(MEMORY[0x1E4F39B30], "ck_stickerFlyInSpringAnimation");
  id v41 = objc_msgSend(MEMORY[0x1E4F39B30], "ck_stickerFlyInScaleAnimation");
  id v42 = objc_msgSend(MEMORY[0x1E4F39B30], "ck_stickerFlyInMoveAnimationFromRect:toRect:", *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 112), v28, v30, v32, v34);
  id v43 = [MEMORY[0x1E4F39B38] animation];
  [v40 beginTime];
  double v45 = v44;
  [v40 duration];
  double v47 = v46;
  [v41 duration];
  if (v45 + v47 >= v48) {
    double v48 = v45 + v47;
  }
  [v43 setDuration:v48];
  v81[0] = v55;
  v81[1] = v42;
  v81[2] = v41;
  void v81[3] = v40;
  v81[4] = v54;
  long long v49 = [MEMORY[0x1E4F1C978] arrayWithObjects:v81 count:5];
  [v43 setAnimations:v49];

  [v43 setFillMode:*MEMORY[0x1E4F39FA8]];
  [v43 setRemovedOnCompletion:0];
  [MEMORY[0x1E4F39CF8] begin];
  long long v50 = (void *)MEMORY[0x1E4F39CF8];
  [v43 duration];
  objc_msgSend(v50, "setAnimationDuration:");
  CGFloat v51 = (void *)MEMORY[0x1E4F39CF8];
  v58[0] = MEMORY[0x1E4F143A8];
  v58[1] = 3221225472;
  v58[2] = __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_4;
  void v58[3] = &unk_1E5622B08;
  objc_copyWeak(&v65, (id *)(a1 + 80));
  id v59 = *(id *)(a1 + 48);
  id v52 = v3;
  id v60 = v52;
  double v64 = &v75;
  id v61 = *(id *)(a1 + 56);
  id v62 = *(id *)(a1 + 64);
  id v63 = *(id *)(a1 + 72);
  [v51 setCompletionBlock:v58];
  id v53 = [v52 layer];
  [v53 addAnimation:v43 forKey:0];

  [MEMORY[0x1E4F39CF8] commit];
  objc_destroyWeak(&v65);

  _Block_object_dispose(&v75, 8);
}

void __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_4(uint64_t a1)
{
  double v2 = (id *)(a1 + 80);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  id v4 = [WeakRetained collectionViewController];
  [v4 endHidingStickerWithGUIDDuringAddStickerAnimation:*(void *)(a1 + 32)];

  dispatch_time_t v5 = dispatch_time(0, 100000000);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_5;
  v8[3] = &unk_1E5622AE0;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 72);
  id v9 = v6;
  uint64_t v13 = v7;
  id v10 = *(id *)(a1 + 48);
  objc_copyWeak(&v14, v2);
  id v11 = *(id *)(a1 + 56);
  id v12 = *(id *)(a1 + 64);
  dispatch_after(v5, MEMORY[0x1E4F14428], v8);

  objc_destroyWeak(&v14);
}

uint64_t __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_5(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) dismiss];
  uint64_t v2 = *(void *)(*(void *)(a1 + 64) + 8);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  [*(id *)(a1 + 40) endAllHoldsOnChatItemsUpdatesForStickerMoveAnimation];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  int v5 = [WeakRetained entryViewWasActiveOnContextMenuPresentation];

  if (v5)
  {
    id v6 = objc_loadWeakRetained((id *)(a1 + 72));
    uint64_t v7 = [v6 inputController];
    [v7 endStickerReactionSession];

    id v8 = objc_loadWeakRetained((id *)(a1 + 72));
    [v8 showKeyboard];
  }
  else
  {
    id v9 = [*(id *)(a1 + 48) displayConfiguration];
    int v10 = [v9 shouldDismissAppCardOnExit];

    if (!v10) {
      goto LABEL_6;
    }
    id v11 = objc_loadWeakRetained((id *)(a1 + 72));
    id v12 = [v11 inputController];
    [v12 dismissAppCardIfNecessary];

    id v8 = objc_loadWeakRetained((id *)(a1 + 72));
    uint64_t v13 = [v8 inputController];
    [v13 endStickerReactionSession];
  }
LABEL_6:
  id v14 = objc_loadWeakRetained((id *)(a1 + 72));
  [v14 setIgnoresAutomaticScrollsTowardBottom:0];

  id v15 = objc_loadWeakRetained((id *)(a1 + 72));
  double v16 = [v15 collectionView];
  [v16 endHoldingContentOffsetUpdatesForReason:@"StickerAnimation"];

  id v17 = objc_loadWeakRetained((id *)(a1 + 72));
  double v18 = [v17 collectionView];
  [v18 endHoldingContentOffsetUpdatesForReason:@"StickerPopoverDismiss"];

  id v19 = objc_loadWeakRetained((id *)(a1 + 72));
  [v19 setAnimatingStickerReaction:0];

  id v20 = objc_loadWeakRetained((id *)(a1 + 72));
  [v20 updateActiveEntryViewPositioningGuide];

  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    id v22 = *(uint64_t (**)(void))(result + 16);
    return v22();
  }
  return result;
}

- (void)prewarmFunCamera
{
  if ([(CKChatController *)self isShowingCamera])
  {
    if (IMOSLoggingEnabled())
    {
      id v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Not prewarming FunCam, instance of camera already presented", buf, 2u);
      }
    }
  }
  else
  {
    id v4 = [CKFunCameraViewController alloc];
    int v5 = [(CKCoreChatController *)self conversation];
    id v6 = [(CKFunCameraViewController *)v4 initWithConversation:v5];
    [(CKChatController *)self setFunCameraViewController:v6];

    uint64_t v7 = +[CKBalloonPluginManager sharedInstance];
    id v8 = [(CKChatController *)self funCameraViewController];
    id v9 = [v8 balloonPlugin];
    int v10 = [v9 identifier];
    id v11 = [v7 viewControllerForPluginIdentifier:v10];

    [v11 prepareForPresentationWithCompletionHandler:&__block_literal_global_883];
  }
}

- (BOOL)isFunCamPresented
{
  id v3 = [(CKChatController *)self presentedViewController];
  if (v3)
  {
    id v4 = [(CKChatController *)self funCameraViewController];
    BOOL v5 = v3 == v4;
  }
  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

- (void)entryViewContainerViewDidLayoutSubviews:(id)a3
{
  id v4 = [(CKChatController *)self sendMenuDelegate];
  id v13 = [v4 activeSendMenuPresentationForChatController:self];

  [v13 informSendMenuOfAnchorViewPositionChangeIfNecessary];
  if ([MEMORY[0x1E4F42B08] isInHardwareKeyboardMode])
  {
    double keyboardHeightFromPreviousLayout = self->_keyboardHeightFromPreviousLayout;
    [(CKChatController *)self _keyboardHeightFromLayoutGuide];
    if (vabdd_f64(keyboardHeightFromPreviousLayout, v6) > 0.01)
    {
      self->_double keyboardHeightFromPreviousLayout = v6;
      uint64_t v7 = [(CKCoreChatController *)self collectionViewController];
      id v8 = [v7 collectionView];

      [(CKScrollViewController *)self updateScrollGeometryWithoutAnimationForReason:@"CandidateBarHeightChanged"];
      id v9 = +[CKScrollViewAnimationProperties unanimated];
      [v8 enforceTranscriptScrollIntentWithAnimationProperties:v9];
    }
  }
  double entryViewMaxYFromPreviousLayout = self->_entryViewMaxYFromPreviousLayout;
  id v11 = [(CKChatController *)self entryView];
  [v11 frame];
  CGFloat MaxY = CGRectGetMaxY(v15);

  if (vabdd_f64(entryViewMaxYFromPreviousLayout, MaxY) > 0.01)
  {
    self->_double entryViewMaxYFromPreviousLayout = MaxY;
    [(CKChatController *)self updateEntryViewHeightIncludingAppStrip:1 animated:0];
  }
}

- (id)messageEntryViewActiveSendMenuPresentation:(id)a3
{
  id v4 = [(CKChatController *)self sendMenuDelegate];
  BOOL v5 = [v4 activeSendMenuPresentationForChatController:self];

  return v5;
}

- (BOOL)_shouldValidatePayloadBeforeSendingPayload:(id)a3
{
  id v3 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    char v4 = [v3 requiresValidation];
  }
  else {
    char v4 = 0;
  }

  return v4;
}

- (id)createAlertControllerForAccountComposition:(id)a3 completion:(id)a4
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v30 = a3;
  id v29 = a4;
  BOOL v5 = CKFrameworkBundle();
  double v6 = [v5 localizedStringForKey:@"SEND_WITH_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  id v28 = +[CKAlertController alertControllerWithTitle:v6 message:0 preferredStyle:0];

  uint64_t v7 = [(CKCoreChatController *)self conversation];
  id v8 = [v7 chat];
  id v26 = [v8 lastAddressedHandleID];

  id v9 = [(CKCoreChatController *)self conversation];
  int v10 = [v9 chat];
  double v25 = [v10 lastAddressedSIMID];

  id v11 = [MEMORY[0x1E4F6E668] sharedInstance];
  id v12 = [v11 ctSubscriptionInfo];
  id v24 = objc_msgSend(v12, "__im_subscriptionContextForForSimID:phoneNumber:", v25, v26);

  if (IMOSLoggingEnabled())
  {
    id v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412802;
      id v41 = v25;
      __int16 v42 = 2112;
      id v43 = v26;
      __int16 v44 = 2112;
      double v45 = v24;
      _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "FindAccountsForPrompt: lastSIM %@ lastHandle %@ found context %@", buf, 0x20u);
    }
  }
  if (!v24
    && [(CKChatController *)self _lastAddressedHandleIsAvailableAsiMessageAlias:v26 SIMID:v25])
  {
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v14 = [MEMORY[0x1E4F6E668] sharedInstance];
    id obj = [v14 ctServiceSubscriptions];

    uint64_t v15 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
    if (v15)
    {
      uint64_t v16 = *(void *)v36;
      do
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v36 != v16) {
            objc_enumerationMutation(obj);
          }
          double v18 = *(void **)(*((void *)&v35 + 1) + 8 * i);
          id v19 = objc_msgSend(v18, "label", v24);
          if (v19) {
            [v18 label];
          }
          else {
          id v20 = [v18 phoneNumber];
          }

          if (!v20)
          {
            id v21 = CKFrameworkBundle();
            id v20 = [v21 localizedStringForKey:@"CURRENT_LINE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          }
          v32[0] = MEMORY[0x1E4F143A8];
          v32[1] = 3221225472;
          v32[2] = __74__CKChatController_createAlertControllerForAccountComposition_completion___block_invoke;
          v32[3] = &unk_1E5622B80;
          void v32[4] = self;
          v32[5] = v18;
          id v33 = v30;
          id v34 = v29;
          id v22 = +[CKAlertAction actionWithTitle:v20 style:0 handler:v32];
          [v28 addAction:v22];
        }
        uint64_t v15 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
      }
      while (v15);
    }
  }

  return v28;
}

void __74__CKChatController_createAlertControllerForAccountComposition_completion___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) conversation];
  id v5 = [v2 chat];

  id v3 = [*(id *)(a1 + 40) phoneNumber];
  [v5 setLastAddressedHandleID:v3];

  char v4 = [*(id *)(a1 + 40) labelID];
  [v5 setLastAddressedSIMID:v4];

  [*(id *)(a1 + 32) _validateAndSendComposition:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

- (BOOL)_lastAddressedHandleIsAvailableAsiMessageAlias:(id)a3 SIMID:(id)a4
{
  id v5 = (void *)MEMORY[0x1E4F6BBD8];
  id v6 = a4;
  id v7 = a3;
  id v8 = [v5 sharedInstance];
  id v9 = [v8 iMessageAccountForLastAddressedHandle:v7 simID:v6];

  return v9 != 0;
}

- (void)presentActionMenuForAccountSelection:(id)a3 completion:(id)a4
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self createAlertControllerForAccountComposition:v6 completion:v7];
  id v9 = [(CKCoreChatController *)self conversation];
  int v10 = [v9 sendingService];

  objc_msgSend(v10, "__ck_isiMessage");
  if (objc_msgSend(v10, "__ck_isiMessage")) {
    int v11 = 0;
  }
  else {
    int v11 = objc_msgSend(v10, "__ck_isiMessageLite") ^ 1;
  }
  if (IMOSLoggingEnabled())
  {
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = [v8 actions];
      id v14 = (void *)v13;
      uint64_t v15 = @"NO";
      *(_DWORD *)id v24 = 138412802;
      if (v11) {
        uint64_t v15 = @"YES";
      }
      *(void *)&v24[4] = v15;
      __int16 v25 = 2112;
      id v26 = v10;
      __int16 v27 = 2112;
      uint64_t v28 = v13;
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "AccountSelection shouldShow %@ service %@ actions %@", v24, 0x20u);
    }
  }
  uint64_t v16 = objc_msgSend(v8, "actions", *(void *)v24);
  if ([v16 count]) {
    int v17 = v11;
  }
  else {
    int v17 = 0;
  }

  if (v17)
  {
    double v18 = CKFrameworkBundle();
    id v19 = [v18 localizedStringForKey:@"CANCEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
    id v20 = +[CKAlertAction actionWithTitle:v19 style:1 handler:0];
    [v8 addAction:v20];

    id v21 = [(CKChatController *)self effectPickerViewController];
    if (v21)
    {
      id v22 = [(CKChatController *)self effectPickerViewController];
    }
    else
    {
      id v22 = self;
    }
    int v23 = v22;

    [v8 presentFromViewController:v23 animated:1 completion:0];
  }
  else
  {
    [(CKChatController *)self _validateAndSendComposition:v6 completion:v7];
  }
}

- (void)disableRotationWhileRecordingAudioMessage
{
  if (self->_rotationLockUtility) {
    [(CKChatController *)self enableRotationAfterRecording];
  }
  id v3 = [(CKChatController *)self view];
  char v4 = [v3 window];
  id v5 = [v4 windowScene];
  id v8 = [v5 keyWindow];

  if (v8)
  {
    id v6 = [[CKRotationLockUtility alloc] initWithWindow:v8];
    rotationLockUtilitCGFloat y = self->_rotationLockUtility;
    self->_rotationLockUtilitCGFloat y = v6;
  }
}

- (void)enableRotationAfterRecording
{
  [(CKRotationLockUtility *)self->_rotationLockUtility releaseRotationLock];
  rotationLockUtilitCGFloat y = self->_rotationLockUtility;
  self->_rotationLockUtilitCGFloat y = 0;
}

- (void)messageEntryViewSafeAreaInsetsDidChange:(id)a3
{
  if ([(CKChatController *)self nextEntryViewSafeAreaInsetUpdateIsSynchronous])
  {
    self->_nextEntryViewSafeAreaInsetUpdateIsSynchronous = 0;
    [(CKChatController *)self updateEntryViewHeightIncludingAppStrip:1 animated:0];
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __60__CKChatController_messageEntryViewSafeAreaInsetsDidChange___block_invoke;
    block[3] = &unk_1E5620C40;
    void block[4] = self;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t __60__CKChatController_messageEntryViewSafeAreaInsetsDidChange___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateEntryViewHeightIncludingAppStrip:1 animated:0];
}

- (void)messageEntryView:(id)a3 didMoveToWindow:(id)a4
{
  [(CKChatController *)self _updateEntryViewConstraintsIfNeeded];
  [(CKChatController *)self _setUpEntryViewAppCardLayoutConstraint];
  [(CKChatController *)self updateActiveEntryViewPositioningGuide];
  [(CKChatController *)self _updateEntryViewFrameIfNeeded:0];

  [(CKScrollViewController *)self updateScrollGeometryWithoutAnimationForReason:@"EntryViewMovedToWindow"];
}

- (void)messageEntryViewWantsSendLaterPickerPresented:(id)a3
{
  id v3 = [(CKCoreChatController *)self inputController];
  [v3 showSendLater];
}

- (void)messageEntryViewSendLaterPluginInfoUpdated:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self inputController];
  [v5 sendLaterPluginInfoUpdated];

  uint64_t v6 = [v4 shouldShowAppStrip];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __63__CKChatController_messageEntryViewSendLaterPluginInfoUpdated___block_invoke;
  _OWORD v7[3] = &unk_1E5620C40;
  void v7[4] = self;
  [(CKChatController *)self updateEntryViewHeightIncludingAppStrip:v6 isContentChange:1 animated:1 completionHandler:v7];
}

void __63__CKChatController_messageEntryViewSendLaterPluginInfoUpdated___block_invoke(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) collectionViewController];
  uint64_t v2 = [CKTranscriptScrollIntentEntryViewChangedTrigger alloc];
  id v3 = [*(id *)(a1 + 32) entryView];
  id v4 = [(CKTranscriptScrollIntentEntryViewChangedTrigger *)v2 initWithEntryView:v3 isTextChange:0 isShelfChange:0 isSendLaterPluginChange:1];
  id v5 = [*(id *)(a1 + 32) activeKeyboardAppearanceAnimationProperties];
  [v6 updateScrollIntentWithTrigger:v4 activeKeyboardAppearanceAnimationProperties:v5];
}

- (void)messageEntryViewWantsGenerativePlaygroundPluginPresented:(id)a3 presentationStyle:(unint64_t)a4
{
  IMBalloonExtensionIDWithSuffix();
  id v13 = (id)objc_claimAutoreleasedReturnValue();
  id v6 = [MEMORY[0x1E4F6BC18] sharedInstance];
  id v7 = [v6 balloonPluginForBundleID:v13];

  id v8 = [CKTranscriptPluginPresentationConfiguration alloc];
  id v9 = [(CKChatController *)self entryView];
  int v10 = [v9 sendMenuSourceView];
  int v11 = [(CKTranscriptPluginPresentationConfiguration *)v8 initWithSourceView:v10 permittedArrowDirections:8 shouldDisableSnapshotView:0];

  id v12 = [(CKCoreChatController *)self inputController];
  [v12 showBrowserForPlugin:v7 dataSource:0 style:a4 presentationConfiguration:v11];
}

- (void)messageEntryViewWillPresentCustomizationPicker:(id)a3
{
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Will present customization picker", v6, 2u);
    }
  }
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"LinkCustomizationPicker"];
  [(CKChatController *)self requestShowKeyboardSnapshotForReason:32];
}

- (void)messageEntryViewDidPresentCustomizationPicker:(id)a3
{
  id v3 = a3;
  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Did present customization picker", v5, 2u);
    }
  }
}

- (void)messageEntryViewWillDismissCustomizationPicker:(id)a3
{
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Will dismiss customization picker", v6, 2u);
    }
  }
  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"LinkCustomizationPicker"];
}

- (void)messageEntryViewDidDismissCustomizationPicker:(id)a3
{
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Did dismiss customization picker", v6, 2u);
    }
  }
  [(CKChatController *)self requestDismissKeyboardSnapshotForReason:32];
}

- (void)messageEntryViewTextFormattingAnimationsOptionsPresentationInProgress:(BOOL)a3
{
  BOOL v3 = a3;
  if (([MEMORY[0x1E4F42B08] isInHardwareKeyboardMode] & 1) == 0)
  {
    [(CKChatController *)self setIgnoresAutomaticScrollsTowardBottom:v3];
  }
}

- (void)enableSendButtonSpinner
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __43__CKChatController_enableSendButtonSpinner__block_invoke;
  block[3] = &unk_1E5620C40;
  void block[4] = self;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void __43__CKChatController_enableSendButtonSpinner__block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) entryView];
  [v1 configureForDisplayMode:4];
}

- (void)disableSendButtonSpinner
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __44__CKChatController_disableSendButtonSpinner__block_invoke;
  block[3] = &unk_1E5620C40;
  void block[4] = self;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void __44__CKChatController_disableSendButtonSpinner__block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) entryView];
  [v1 configureForDisplayMode:1];
}

- (int64_t)_sharingAccessTypeFromOptionsGroups:(id)a3
{
  id v3 = a3;
  if (v3)
  {
    if (_sharingAccessTypeFromOptionsGroups___pred_CKSharingAccessTypeFromOptionsGroupsCloudKit != -1) {
      dispatch_once(&_sharingAccessTypeFromOptionsGroups___pred_CKSharingAccessTypeFromOptionsGroupsCloudKit, &__block_literal_global_895);
    }
    int64_t v4 = _sharingAccessTypeFromOptionsGroups___CKSharingAccessTypeFromOptionsGroups(v3);
  }
  else
  {
    int64_t v4 = 1;
  }

  return v4;
}

void *__56__CKChatController__sharingAccessTypeFromOptionsGroups___block_invoke()
{
  uint64_t result = (void *)MEMORY[0x192FBA870]("CKSharingAccessTypeFromOptionsGroups", @"CloudKit");
  _sharingAccessTypeFromOptionsGroups___CKSharingAccessTypeFromOptionsGroups = result;
  return result;
}

- (int64_t)_sharingPermissionTypeFromOptionsGroups:(id)a3
{
  id v3 = a3;
  if (v3)
  {
    if (_sharingPermissionTypeFromOptionsGroups___pred_CKSharingPermissionTypeFromOptionsGroupsCloudKit != -1) {
      dispatch_once(&_sharingPermissionTypeFromOptionsGroups___pred_CKSharingPermissionTypeFromOptionsGroupsCloudKit, &__block_literal_global_901_0);
    }
    int64_t v4 = _sharingPermissionTypeFromOptionsGroups___CKSharingPermissionTypeFromOptionsGroups(v3);
  }
  else
  {
    int64_t v4 = 2;
  }

  return v4;
}

void *__60__CKChatController__sharingPermissionTypeFromOptionsGroups___block_invoke()
{
  uint64_t result = (void *)MEMORY[0x192FBA870]("CKSharingPermissionTypeFromOptionsGroups", @"CloudKit");
  _sharingPermissionTypeFromOptionsGroups___CKSharingPermissionTypeFromOptionsGroups = result;
  return result;
}

- (BOOL)_sharingAllowOthersToInviteFromOptionsGroups:(id)a3
{
  id v3 = a3;
  if (v3)
  {
    if (_sharingAllowOthersToInviteFromOptionsGroups___pred_CKSharingAllowOthersToInviteFromOptionsGroupsCloudKit != -1) {
      dispatch_once(&_sharingAllowOthersToInviteFromOptionsGroups___pred_CKSharingAllowOthersToInviteFromOptionsGroupsCloudKit, &__block_literal_global_904);
    }
    char v4 = _sharingAllowOthersToInviteFromOptionsGroups___CKSharingAllowOthersToInviteFromOptionsGroups(v3);
  }
  else
  {
    char v4 = 0;
  }

  return v4;
}

void *__65__CKChatController__sharingAllowOthersToInviteFromOptionsGroups___block_invoke()
{
  uint64_t result = (void *)MEMORY[0x192FBA870]("CKSharingAllowOthersToInviteFromOptionsGroups", @"CloudKit");
  _sharingAllowOthersToInviteFromOptionsGroups___CKSharingAllowOthersToInviteFromOptionsGroups = result;
  return result;
}

- (void)sendCollaborationCompositionAndSetSendingState:(id)a3
{
  id v4 = a3;
  if (IMIsRunningInMessagesComposeViewService()) {
    [(CKChatController *)self sendComposition:v4];
  }
  else {
    [(CKChatController *)self sendCompositionIfAllowed:v4];
  }

  [(CKChatController *)self setIsSettingUpCollaboration:0];
}

- (void)sendCompositionForFileProvider:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self CKCloudSharingClass];
  if (objc_opt_respondsToSelector())
  {
    id v9 = [v6 shelfPluginPayload];
    int v10 = [v9 url];
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke;
    v11[3] = &unk_1E5622C98;
    void v11[4] = self;
    id v12 = v6;
    id v13 = v7;
    id v14 = v8;
    [(objc_class *)v8 existingShareForFileOrFolderURL:v10 completionHandler:v11];
  }
}

void __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int v10 = v9;
  if (!v9)
  {
    v25[0] = MEMORY[0x1E4F143A8];
    v25[1] = 3221225472;
    v25[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_2;
    v25[3] = &unk_1E5622C70;
    id v16 = v8;
    uint64_t v31 = *(void *)(a1 + 56);
    uint64_t v17 = *(void *)(a1 + 32);
    double v18 = *(void **)(a1 + 40);
    id v26 = v16;
    uint64_t v27 = v17;
    id v28 = v18;
    id v29 = v7;
    id v30 = *(id *)(a1 + 48);
    dispatch_async(MEMORY[0x1E4F14428], v25);

    uint64_t v15 = v26;
    goto LABEL_14;
  }
  int v11 = [v9 domain];
  if ([v11 isEqualToString:*MEMORY[0x1E4F19C40]])
  {
    uint64_t v12 = [v10 code];

    if (v12 == 12)
    {
      if (IMOSLoggingEnabled())
      {
        id v13 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "Sending collaboration composition for file provider.", buf, 2u);
        }
      }
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_909;
      block[3] = &unk_1E5622BA8;
      id v14 = *(void **)(a1 + 40);
      void block[4] = *(void *)(a1 + 32);
      id v36 = v14;
      id v37 = *(id *)(a1 + 48);
      dispatch_async(MEMORY[0x1E4F14428], block);

      uint64_t v15 = v36;
      goto LABEL_14;
    }
  }
  else
  {
  }
  id v19 = IMLogHandleForCategory();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
    __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_cold_1(v10);
  }

  id v20 = *(void **)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 40);
  v32[0] = MEMORY[0x1E4F143A8];
  v32[1] = 3221225472;
  v32[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_910;
  v32[3] = &unk_1E5622BD0;
  id v22 = *(id *)(a1 + 48);
  uint64_t v23 = *(void *)(a1 + 32);
  id v24 = *(void **)(a1 + 40);
  id v34 = v22;
  void v32[4] = v23;
  id v33 = v24;
  [v20 presentCollaborationFailureAlertForComposition:v21 sharingURL:v7 error:v10 completion:v32];

  uint64_t v15 = v34;
LABEL_14:
}

uint64_t __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_909(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendCompositionForFileProviderCloudDrive:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

uint64_t __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_910(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) sendCompositionForFileProvider:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v16 = v3;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Querying for current user's status on share %@", buf, 0xCu);
    }
  }
  id v4 = *(void **)(a1 + 72);
  id v5 = *(void **)(a1 + 32);
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_911;
  _OWORD v9[3] = &unk_1E5622C48;
  id v6 = v5;
  uint64_t v7 = *(void *)(a1 + 40);
  id v8 = *(void **)(a1 + 48);
  id v10 = v6;
  uint64_t v11 = v7;
  id v12 = v8;
  id v13 = *(id *)(a1 + 56);
  id v14 = *(id *)(a1 + 64);
  [v4 sharingStatusForShare:v6 completionHandler:v9];
}

void __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_911(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = [*(id *)(a1 + 32) recordID];
      *(_DWORD *)long long buf = 138412802;
      id v33 = v7;
      __int16 v34 = 2048;
      unint64_t v35 = a2;
      __int16 v36 = 2112;
      id v37 = v5;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Received current user's status for share %@, status: %ld, error: %@", buf, 0x20u);
    }
  }
  if (v5)
  {
    id v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_911_cold_1();
    }

    id v10 = *(void **)(a1 + 40);
    id v9 = *(void **)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 56);
    v29[0] = MEMORY[0x1E4F143A8];
    v29[1] = 3221225472;
    v29[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_912;
    _OWORD v29[3] = &unk_1E5622BF8;
    v29[4] = v10;
    id v30 = v9;
    id v31 = *(id *)(a1 + 64);
    [v10 presentCollaborationFailureAlertForComposition:v30 sharingURL:v11 error:v5 completion:v29];
  }
  else if (a2 <= 4 && ((1 << a2) & 0x16) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Updating collaboration composition for file provider.", buf, 2u);
      }
    }
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_913;
    block[3] = &unk_1E5622C20;
    id v13 = *(void **)(a1 + 48);
    void block[4] = *(void *)(a1 + 40);
    id v25 = v13;
    id v26 = *(id *)(a1 + 32);
    id v27 = *(id *)(a1 + 56);
    id v28 = *(id *)(a1 + 64);
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v33 = 0;
        _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "Can't add people because you are not the owner or the share doesn't allow others to invite. Error: %@", buf, 0xCu);
      }
    }
    uint64_t v15 = *(void **)(a1 + 40);
    uint64_t v16 = *(void *)(a1 + 48);
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_914;
    v21[3] = &unk_1E5622BD0;
    uint64_t v17 = *(void *)(a1 + 56);
    id v18 = *(id *)(a1 + 64);
    uint64_t v19 = *(void *)(a1 + 40);
    id v20 = *(void **)(a1 + 48);
    id v23 = v18;
    void v21[4] = v19;
    id v22 = v20;
    [v15 presentCollaborationFailureAlertForComposition:v16 sharingURL:v17 error:0 completion:v21];
  }
}

uint64_t __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_912(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) sendCompositionForFileProvider:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_913(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAndSendCompositionForFileProvider:*(void *)(a1 + 40) share:*(void *)(a1 + 48) sharingURL:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
}

uint64_t __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_914(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) sendCompositionForFileProvider:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (id)createAnalyticsDictionaryForCollaborationForType:(int64_t)a3 sharingURL:(id)a4
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a4;
  id v6 = objc_alloc_init(MEMORY[0x1E4F6EA70]);
  [v6 bundleIDsForCollaborationURL:v5];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v27 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    int64_t v20 = a3;
    uint64_t v10 = *(void *)v22;
    uint64_t v11 = @"NA";
    while (2)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        id v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        uint64_t v14 = [objc_alloc(MEMORY[0x1E4F223C8]) initWithBundleIdentifier:v13 allowPlaceholder:0 error:0];
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          uint64_t v11 = v13;

          goto LABEL_11;
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v27 count:16];
      if (v9) {
        continue;
      }
      break;
    }
LABEL_11:
    a3 = v20;
  }
  else
  {
    uint64_t v11 = @"NA";
  }

  uint64_t v16 = *MEMORY[0x1E4F6D718];
  v25[0] = *MEMORY[0x1E4F6D708];
  v25[1] = v16;
  v26[0] = v11;
  uint64_t v17 = [NSNumber numberWithInteger:a3];
  v26[1] = v17;
  id v18 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v26 forKeys:v25 count:2];

  return v18;
}

- (void)sendAnalyticsForElapsedSendTimeForType:(int64_t)a3 sharingURL:(id)a4 timeInterval:(double)a5
{
  id v6 = [(CKChatController *)self createAnalyticsDictionaryForCollaborationForType:a3 sharingURL:a4];
  id v9 = (id)[v6 mutableCopy];

  id v7 = [NSNumber numberWithDouble:a5];
  [v9 setObject:v7 forKey:*MEMORY[0x1E4F6D710]];

  uint64_t v8 = [MEMORY[0x1E4F6E890] sharedInstance];
  [v8 trackEvent:*MEMORY[0x1E4F6D810] withDictionary:v9];
}

- (void)_sendCollaborationCompositionForFileProvider:(id)a3 sharingURL:(id)a4 share:(id)a5 completion:(id)a6
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v27 = a5;
  id v12 = a6;
  if (v11)
  {
    id v13 = [v10 shelfPluginPayload];
    uint64_t v14 = [v13 url];
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke;
    aBlock[3] = &unk_1E5622CC0;
    id v15 = v13;
    id v34 = v15;
    id v16 = v11;
    id v35 = v16;
    __int16 v36 = self;
    id v37 = v10;
    id v38 = v12;
    uint64_t v17 = _Block_copy(aBlock);
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v40 = v14;
        _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "Starting to perform _SWStartCollaborationAction action for url: %@", buf, 0xCu);
      }
    }
    if (_sendCollaborationCompositionForFileProvider_sharingURL_share_completion___pred_SWPerformActionForDocumentURLSharedWithYouCore != -1) {
      dispatch_once(&_sendCollaborationCompositionForFileProvider_sharingURL_share_completion___pred_SWPerformActionForDocumentURLSharedWithYouCore, &__block_literal_global_932);
    }
    uint64_t v19 = (void *)MEMORY[0x1E4F3BE28];
    int64_t v20 = objc_msgSend(v15, "collaborationMetadata", v27);
    long long v21 = [v19 actionWithMetadata:v20];

    long long v22 = (void (*)(void *, void *, void *))_sendCollaborationCompositionForFileProvider_sharingURL_share_completion___SWPerformActionForDocumentURL;
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    void v28[2] = __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_2;
    v28[3] = &unk_1E5622CE8;
    id v29 = v15;
    id v30 = v27;
    id v31 = v16;
    id v32 = v17;
    id v23 = v17;
    id v24 = v15;
    id v25 = _Block_copy(v28);
    v22(v14, v21, v25);
  }
  else if (IMOSLoggingEnabled())
  {
    id v26 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v26, OS_LOG_TYPE_INFO, "Received nil share URL from CloudSharing.", buf, 2u);
    }
  }
}

void __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3) {
    [*(id *)(a1 + 32) setCollaborationMetadata:v3];
  }
  id v4 = *(void **)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) ckURLByPercentEncodingFragment];
  [v4 setUrl:v5];

  id v6 = *(void **)(a1 + 32);
  id v7 = [NSString stringGUID];
  [v6 setMessageGUID:v7];

  uint64_t v8 = *(void **)(a1 + 32);
  id v9 = [*(id *)(a1 + 40) absoluteString];
  if ([v9 length])
  {
    id v10 = objc_alloc(MEMORY[0x1E4F28B18]);
    id v11 = [*(id *)(a1 + 40) absoluteString];
    id v12 = (void *)[v10 initWithString:v11];
    [v8 setText:v12];
  }
  else
  {
    [v8 setText:0];
  }

  [*(id *)(a1 + 32) setPluginBundleID:*MEMORY[0x1E4F6CC10]];
  id v13 = *(void **)(a1 + 48);
  uint64_t v14 = *(void **)(a1 + 32);
  id v15 = [v14 messageGUID];
  id v16 = [v13 updateDataSourceForPluginPayload:v14 forGUID:v15 withCollaborationMetadata:v3 shareURL:*(void *)(a1 + 40)];

  uint64_t v17 = [CKComposition alloc];
  id v18 = [*(id *)(a1 + 56) text];
  uint64_t v19 = [*(id *)(a1 + 56) subject];
  int64_t v20 = [(CKComposition *)v17 initWithText:v18 subject:v19 shelfPluginPayload:v16];

  if (IMOSLoggingEnabled())
  {
    long long v21 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      uint64_t v22 = *(void *)(a1 + 40);
      id v23 = [v16 collaborationMetadata];
      *(_DWORD *)long long buf = 138412546;
      uint64_t v29 = v22;
      __int16 v30 = 2112;
      id v31 = v23;
      _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Sending the final composition for sharingURL: %@ with CollaborationMetadata:%@", buf, 0x16u);
    }
  }
  [*(id *)(a1 + 48) setShareWasCreated:1];
  id v24 = [*(id *)(a1 + 32) collaborationMetadata];
  [v24 checkSendReadiness];

  [*(id *)(*(void *)(a1 + 48) + 1400) stopTimingForKey:@"sendGelato"];
  [*(id *)(*(void *)(a1 + 48) + 1400) totalTimeForKey:@"sendGelato"];
  objc_msgSend(*(id *)(a1 + 48), "sendAnalyticsForElapsedSendTimeForType:sharingURL:timeInterval:", 1, *(void *)(a1 + 40));
  if ([MEMORY[0x1E4F29060] isMainThread])
  {
    [*(id *)(a1 + 48) sendCollaborationCompositionAndSetSendingState:v20];
  }
  else
  {
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    void v26[2] = __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_928;
    _OWORD v26[3] = &unk_1E5620AF8;
    void v26[4] = *(void *)(a1 + 48);
    id v27 = v20;
    dispatch_sync(MEMORY[0x1E4F14428], v26);
  }
  uint64_t v25 = *(void *)(a1 + 64);
  if (v25) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v25, 1);
  }
}

uint64_t __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_928(uint64_t a1)
{
  return [*(id *)(a1 + 32) sendCollaborationCompositionAndSetSendingState:*(void *)(a1 + 40)];
}

void *__93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_930()
{
  uint64_t result = (void *)MEMORY[0x192FBA870]("SWPerformActionForDocumentURL", @"SharedWithYouCore");
  _sendCollaborationCompositionForFileProvider_sharingURL_share_completion___SWPerformActionForDocumentURL = result;
  return result;
}

void __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v7 = v5;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;
  if ([v8 success]
    && ([v8 url], (id v9 = objc_claimAutoreleasedReturnValue()) != 0)
    && ([v8 updatedMetadata],
        id v10 = objc_claimAutoreleasedReturnValue(),
        v10,
        v9,
        v10))
  {
    if (IMOSLoggingEnabled())
    {
      id v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = [v8 url];
        id v13 = [v8 updatedMetadata];
        int v20 = 138412546;
        id v21 = v12;
        __int16 v22 = 2112;
        id v23 = v13;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Updating the collaborationMetadata for url: %@ with metadata: %@", (uint8_t *)&v20, 0x16u);
      }
    }
    uint64_t v14 = [*(id *)(a1 + 32) collaborationMetadata];
    id v15 = [v8 updatedMetadata];
    id v16 = [v14 updatedCollaborationMetadataWithUpdatedMetadata:v15 ckShare:*(void *)(a1 + 40) sharingURL:*(void *)(a1 + 48)];

    if (!v16)
    {
      uint64_t v17 = IMLogHandleForCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_2_cold_1();
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        int v20 = 138412290;
        id v21 = v6;
        _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "Failed to update the collaborationMetadata. Error: %@", (uint8_t *)&v20, 0xCu);
      }
    }
    uint64_t v19 = *(void *)(a1 + 56);
    id v16 = [*(id *)(a1 + 32) collaborationMetadata];
    (*(void (**)(uint64_t, void *))(v19 + 16))(v19, v16);
  }
}

- (void)_sendCompositionForFileProviderCloudDrive:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [v6 shelfPluginPayload];
  id v9 = [v8 url];
  id v10 = (void *)MEMORY[0x1E4F59BA0];
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke;
  v14[3] = &unk_1E5622D88;
  id v15 = v9;
  id v16 = self;
  id v17 = v6;
  id v18 = v7;
  id v11 = v7;
  id v12 = v6;
  id v13 = v9;
  [v10 sharingStatusForFileOrFolderURL:v13 completionHandler:v14];
}

void __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke(id *a1, unint64_t a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (v5)
  {
    id v6 = IMLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_cold_1();
    }

    id v8 = a1[5];
    id v7 = a1[6];
    id v9 = a1[4];
    v24[0] = MEMORY[0x1E4F143A8];
    v24[1] = 3221225472;
    v24[2] = __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_941;
    v24[3] = &unk_1E5622D10;
    id v25 = a1[7];
    [v8 presentCollaborationFailureAlertForComposition:v7 sharingURL:v9 error:v5 completion:v24];
  }
  else
  {
    if (a2 > 6)
    {
      unint64_t v10 = 0;
      objc_msgSend(a1[5], "disableSendButtonSpinner", 0);
    }
    else
    {
      if (a2 == 3)
      {
        [a1[5] _startSharingForURLForFileProviderCloudDrive:a1[6] completion:a1[7]];
        goto LABEL_13;
      }
      unint64_t v10 = a2;
      objc_msgSend(a1[5], "disableSendButtonSpinner", @"CKCollaborationStatusErrorDomain");
    }
    if (IMOSLoggingEnabled())
    {
      id v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = a1[4];
        *(_DWORD *)long long buf = 138412546;
        id v27 = v12;
        __int16 v28 = 2048;
        unint64_t v29 = a2;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Unable to share %@ with CSUIShareItemStatus: %ld", buf, 0x16u);
      }
    }
    id v13 = a1[5];
    id v14 = a1[6];
    id v15 = a1[4];
    id v16 = [MEMORY[0x1E4F28C58] errorWithDomain:v19 code:v10 userInfo:0];
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    void v20[2] = __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_942;
    v20[3] = &unk_1E5622D60;
    id v17 = a1[7];
    id v18 = a1[5];
    id v23 = v17;
    v20[4] = v18;
    id v21 = a1[6];
    id v22 = a1[4];
    [v13 presentCollaborationFailureAlertForComposition:v14 sharingURL:v15 error:v16 completion:v20];
  }
LABEL_13:
}

uint64_t __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_941(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_942(uint64_t a1, uint64_t a2)
{
  if (a2 == 2)
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 56);
    [v6 _startSharingForURLForFileProviderCloudDrive:v7 completion:v8];
  }
  else if (a2 == 3)
  {
    [*(id *)(a1 + 32) enableSendButtonSpinner];
    id v4 = *(void **)(a1 + 32);
    id v3 = *(void **)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_2;
    v11[3] = &unk_1E5622D38;
    void v11[4] = v4;
    id v12 = v3;
    id v13 = *(id *)(a1 + 56);
    [v4 _removeSubsharesAndSendFileProviderComposition:v12 shareURL:v5 completion:v11];
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 56);
    if (v9)
    {
      unint64_t v10 = *(void (**)(void))(v9 + 16);
      v10();
    }
  }
}

void __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  [*(id *)(a1 + 32) disableSendButtonSpinner];
  if (v7 && v5)
  {
    [*(id *)(a1 + 32) _sendCollaborationCompositionForFileProvider:*(void *)(a1 + 40) sharingURL:v7 share:v5 completion:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6) {
      (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
    }
  }
}

- (void)_startSharingForURLForFileProviderCloudDrive:(id)a3 completion:(id)a4
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v23 = a4;
  id v25 = [v6 shelfPluginPayload];
  uint64_t v24 = [v25 url];
  if (IMOSLoggingEnabled())
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      int64_t v31 = (int64_t)v24;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Sending composition for iCloudDrive. url = %@", buf, 0xCu);
    }
  }
  uint64_t v8 = [(CKCoreChatController *)self conversation];
  id v22 = [v8 recipientPhoneNumbers];

  uint64_t v9 = [(CKCoreChatController *)self conversation];
  unint64_t v10 = [v9 recipientEmailAddresses];

  id v11 = [v6 collaborationShareOptions];
  id v12 = [v11 optionsGroups];
  int64_t v13 = [(CKChatController *)self _sharingAccessTypeFromOptionsGroups:v12];

  id v14 = [v11 optionsGroups];
  int64_t v15 = [(CKChatController *)self _sharingPermissionTypeFromOptionsGroups:v14];

  id v16 = [v11 optionsGroups];
  BOOL v17 = [(CKChatController *)self _sharingAllowOthersToInviteFromOptionsGroups:v16];

  if (IMOSLoggingEnabled())
  {
    id v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v19 = @"NO";
      *(_DWORD *)long long buf = 134218498;
      int64_t v31 = v13;
      if (v17) {
        uint64_t v19 = @"YES";
      }
      __int16 v32 = 2048;
      int64_t v33 = v15;
      __int16 v34 = 2112;
      id v35 = v19;
      _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "Invoking the share creation with options: accessType: %ld, permissionType:%ld, allowOthersToInvite=%@", buf, 0x20u);
    }
  }
  id v20 = objc_alloc_init(MEMORY[0x1E4F6C3F8]);
  [v20 startTimingForKey:@"shareFileOrFolderURL"];
  id v21 = [(CKChatController *)self CKCloudSharingClass];
  if (objc_opt_respondsToSelector())
  {
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    void v26[2] = __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke;
    _OWORD v26[3] = &unk_1E5622DB0;
    void v26[4] = self;
    id v27 = v20;
    id v28 = v6;
    id v29 = v23;
    [(objc_class *)v21 shareFileOrFolderURL:v24 emailAddresses:v10 phoneNumbers:v22 accessType:v13 permissionType:v15 allowOthersToInvite:v17 completionHandler:v26];
  }
}

void __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke(id *a1, void *a2, void *a3, void *a4)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [a1[4] disableSendButtonSpinner];
  [a1[5] stopTimingForKey:@"shareFileOrFolderURL"];
  [a1[5] totalTimeForKey:@"shareFileOrFolderURL"];
  double v11 = v10;
  id v12 = IMLogHandleForCategory();
  int64_t v13 = v12;
  if (v9)
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke_cold_1((uint64_t)v9, v13, v14, v11);
    }

    id v15 = a1[4];
    v25[0] = MEMORY[0x1E4F143A8];
    v25[1] = 3221225472;
    void v25[2] = __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke_950;
    v25[3] = &unk_1E5622BD0;
    id v16 = a1[6];
    id v17 = a1[7];
    id v18 = a1[4];
    id v27 = v17;
    void v25[4] = v18;
    id v26 = a1[6];
    [v15 presentCollaborationFailureAlertForComposition:v16 sharingURL:v7 error:v9 completion:v25];

    uint64_t v19 = v27;
  }
  else
  {
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      double v29 = v11;
      _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "shareFileOrFolderURL finished in %f seconds", buf, 0xCu);
    }

    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    void v20[2] = __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke_951;
    v20[3] = &unk_1E5622C20;
    v20[4] = a1[4];
    id v21 = a1[6];
    id v22 = v7;
    id v23 = v8;
    id v24 = a1[7];
    dispatch_async(MEMORY[0x1E4F14428], v20);

    uint64_t v19 = v21;
  }
}

uint64_t __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke_950(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) _sendCompositionForFileProviderCloudDrive:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke_951(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendCollaborationCompositionForFileProvider:*(void *)(a1 + 40) sharingURL:*(void *)(a1 + 48) share:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
}

- (void)_updateAndSendCompositionForFileProvider:(id)a3 share:(id)a4 sharingURL:(id)a5 completion:(id)a6
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v45 = a5;
  id v46 = a6;
  double v47 = v11;
  double v48 = v10;
  if (v11)
  {
    if (v10)
    {
      id v12 = [(CKCoreChatController *)self conversation];
      int64_t v13 = [v12 recipientPhoneNumbers];
      uint64_t v14 = v13;
      if (v13)
      {
        id v15 = v13;
      }
      else
      {
        id v15 = [MEMORY[0x1E4F1C978] array];
      }
      id v17 = v15;

      id v18 = [(CKCoreChatController *)self conversation];
      uint64_t v19 = [v18 recipientEmailAddresses];
      id v20 = v19;
      if (v19)
      {
        id v21 = v19;
      }
      else
      {
        id v21 = [MEMORY[0x1E4F1C978] array];
      }
      id v22 = v21;

      id v23 = [v10 shelfPluginPayload];
      id v24 = [v23 containerSetupInfo];

      __int16 v44 = [v10 collaborationShareOptions];
      id v25 = [v44 optionsGroups];
      int64_t v26 = [(CKChatController *)self _sharingPermissionTypeFromOptionsGroups:v25];

      id v27 = [v44 optionsGroups];
      BOOL v28 = [(CKChatController *)self _sharingAllowOthersToInviteFromOptionsGroups:v27];

      if (IMOSLoggingEnabled())
      {
        double v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          if (v28) {
            uint64_t v30 = @"YES";
          }
          else {
            uint64_t v30 = @"NO";
          }
          id v31 = [v17 componentsJoinedByString:@", "];
          __int16 v32 = [v22 componentsJoinedByString:@", "];
          *(_DWORD *)long long buf = 134218754;
          *(void *)&uint8_t buf[4] = v26;
          *(_WORD *)&unsigned char buf[12] = 2112;
          *(void *)&buf[14] = v30;
          *(_WORD *)&buf[22] = 2112;
          id v70 = v31;
          __int16 v71 = 2112;
          long long v72 = v32;
          _os_log_impl(&dword_18EF18000, v29, OS_LOG_TYPE_INFO, "Updating the share with options: permissionType:%ld, allowOthersToInvite=%@, new phone numbers: %@, new email addresses: %@", buf, 0x2Au);
        }
      }
      int64_t v33 = [(CKChatController *)self CKCloudSharingClass];
      *(void *)long long buf = 0;
      *(void *)&uint8_t buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x2020000000;
      LOBYTE(v70) = 0;
      LOBYTE(v70) = [v47 publicPermission] != 1;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke;
      aBlock[3] = &unk_1E5622E50;
      id v65 = buf;
      void aBlock[4] = self;
      id v34 = v48;
      id v58 = v34;
      id v35 = v45;
      id v59 = v35;
      uint64_t v36 = v17;
      id v37 = v47;
      id v60 = v37;
      id v38 = v46;
      id v64 = v38;
      uint64_t v66 = v33;
      id v39 = v24;
      id v61 = v39;
      id v43 = v22;
      id v62 = v43;
      id v16 = v36;
      id v63 = v16;
      int64_t v67 = v26;
      BOOL v68 = v28;
      id v40 = _Block_copy(aBlock);
      uint64_t v41 = (void *)MEMORY[0x1E4F59BA0];
      v50[0] = MEMORY[0x1E4F143A8];
      v50[1] = 3221225472;
      v50[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_3;
      v50[3] = &unk_1E5622EA0;
      id v51 = v35;
      id v52 = self;
      id v53 = v34;
      id v55 = v38;
      id v42 = v40;
      id v56 = v42;
      id v54 = v37;
      [v41 sharingStatusForFileOrFolderURL:v51 completionHandler:v50];

      _Block_object_dispose(buf, 8);
    }
    else
    {
      id v16 = IMLogHandleForCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        -[CKChatController _updateAndSendCompositionForFileProvider:share:sharingURL:completion:](a2);
      }
    }
  }
  else
  {
    id v16 = IMLogHandleForCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      -[CKChatController _updateAndSendCompositionForFileProvider:share:sharingURL:completion:](a2);
    }
  }
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 96) + 8) + 24))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v2 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Not calling addParticipants because it's a public share.", buf, 2u);
      }
    }
    [*(id *)(a1 + 32) _sendCollaborationCompositionForFileProvider:*(void *)(a1 + 40) sharingURL:*(void *)(a1 + 48) share:*(void *)(a1 + 56) completion:*(void *)(a1 + 88)];
  }
  else if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t v4 = *(void *)(a1 + 64);
    uint64_t v5 = *(void *)(a1 + 72);
    uint64_t v6 = *(void *)(a1 + 80);
    id v7 = *(void **)(a1 + 104);
    uint64_t v8 = *(void *)(a1 + 112);
    uint64_t v9 = *(unsigned __int8 *)(a1 + 120);
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_957;
    v11[3] = &unk_1E5622E28;
    id v10 = *(void **)(a1 + 40);
    void v11[4] = *(void *)(a1 + 32);
    id v12 = v10;
    id v14 = *(id *)(a1 + 88);
    id v13 = *(id *)(a1 + 48);
    [v7 addParticipantsToShare:v3 containerSetupInfo:v4 emailAddresses:v5 phoneNumbers:v6 permissionType:v8 allowOthersToInvite:v9 completionHandler:v11];
  }
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_957(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [*(id *)(a1 + 32) disableSendButtonSpinner];
  if (v9)
  {
    id v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_957_cold_1();
    }

    id v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    v32[0] = MEMORY[0x1E4F143A8];
    v32[1] = 3221225472;
    v32[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_958;
    v32[3] = &unk_1E5622DD8;
    id v13 = &v36;
    id v14 = *(id *)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 32);
    id v16 = *(void **)(a1 + 40);
    id v36 = v14;
    void v32[4] = v15;
    id v33 = v16;
    id v34 = v8;
    id v35 = v7;
    id v17 = v7;
    id v18 = v8;
    [v11 presentCollaborationFailureAlertForComposition:v12 sharingURL:v17 error:v9 completion:v32];

    uint64_t v19 = v33;
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_2;
    block[3] = &unk_1E5622E00;
    id v13 = &v26;
    id v26 = v7;
    id v20 = *(id *)(a1 + 48);
    uint64_t v21 = *(void *)(a1 + 32);
    id v22 = *(void **)(a1 + 40);
    id v27 = v20;
    uint64_t v28 = v21;
    id v29 = v22;
    id v30 = v8;
    id v31 = *(id *)(a1 + 56);
    id v23 = v7;
    id v24 = v8;
    dispatch_async(MEMORY[0x1E4F14428], block);

    uint64_t v19 = v27;
  }
}

uint64_t __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_958(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) _updateAndSendCompositionForFileProvider:*(void *)(a1 + 40) share:*(void *)(a1 + 48) sharingURL:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
  }
  uint64_t result = *(void *)(a1 + 64);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_2(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = v2;
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4)
  {
    id v6 = v2;
    id v5 = v4;

    id v3 = v5;
  }
  id v7 = v3;
  [*(id *)(a1 + 48) _sendCollaborationCompositionForFileProvider:*(void *)(a1 + 56) sharingURL:v3 share:*(void *)(a1 + 64) completion:*(void *)(a1 + 72)];
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_3(id *a1, unint64_t a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (v5)
  {
    id v6 = IMLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_3_cold_1();
    }

    id v8 = a1[5];
    id v7 = a1[6];
    id v9 = a1[4];
    v24[0] = MEMORY[0x1E4F143A8];
    v24[1] = 3221225472;
    v24[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_960;
    v24[3] = &unk_1E5622D10;
    id v25 = a1[8];
    [v8 presentCollaborationFailureAlertForComposition:v7 sharingURL:v9 error:v5 completion:v24];
  }
  else if (a2 <= 6)
  {
    if (((1 << a2) & 0x63) != 0)
    {
      [a1[5] disableSendButtonSpinner];
      if (IMOSLoggingEnabled())
      {
        id v10 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          id v11 = a1[4];
          *(_DWORD *)long long buf = 134218242;
          unint64_t v27 = a2;
          __int16 v28 = 2112;
          id v29 = v11;
          _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "_checkEnclosingShareForFileProviderUpdate received CSUIShareItemStatus: %ld for url: %@", buf, 0x16u);
        }
      }
      id v12 = a1[5];
      id v13 = a1[6];
      id v14 = a1[4];
      uint64_t v15 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKCollaborationStatusErrorDomain" code:a2 userInfo:0];
      v18[0] = MEMORY[0x1E4F143A8];
      v18[1] = 3221225472;
      void v18[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_961;
      v18[3] = &unk_1E5622E78;
      id v16 = a1[8];
      id v17 = a1[5];
      id v22 = v16;
      void v18[4] = v17;
      id v19 = a1[6];
      id v20 = a1[7];
      id v21 = a1[4];
      id v23 = a1[9];
      [v12 presentCollaborationFailureAlertForComposition:v13 sharingURL:v14 error:v15 completion:v18];
    }
    else
    {
      (*((void (**)(void))a1[9] + 2))();
    }
  }
}

uint64_t __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_960(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_961(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      uint64_t v3 = *(void *)(a1 + 64);
      if (v3)
      {
        uint64_t v4 = *(void (**)(void))(v3 + 16);
        v4();
      }
      break;
    case 1:
      id v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = *(void *)(a1 + 64);
      [v5 _updateAndSendCompositionForFileProvider:v6 share:v7 sharingURL:v8 completion:v9];
      break;
    case 2:
      id v10 = *(void (**)(void))(*(void *)(a1 + 72) + 16);
      v10();
      break;
    case 3:
      [*(id *)(a1 + 32) enableSendButtonSpinner];
      id v12 = *(void **)(a1 + 32);
      id v11 = *(void **)(a1 + 40);
      uint64_t v13 = *(void *)(a1 + 56);
      v14[0] = MEMORY[0x1E4F143A8];
      v14[1] = 3221225472;
      v14[2] = __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_2_962;
      v14[3] = &unk_1E5622D38;
      void v14[4] = v12;
      id v15 = v11;
      id v16 = *(id *)(a1 + 64);
      [v12 _removeSubsharesAndSendFileProviderComposition:v15 shareURL:v13 completion:v14];

      break;
    default:
      return;
  }
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_2_962(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  [*(id *)(a1 + 32) disableSendButtonSpinner];
  if (v6 && v5) {
    [*(id *)(a1 + 32) _sendCollaborationCompositionForFileProvider:*(void *)(a1 + 40) sharingURL:v6 share:v5 completion:*(void *)(a1 + 48)];
  }
}

- (void)_removeSubsharesAndSendFileProviderComposition:(id)a3 shareURL:(id)a4 completion:(id)a5
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v34 = a5;
  id v10 = [v8 collaborationShareOptions];
  id v11 = [v10 optionsGroups];
  int64_t v35 = [(CKChatController *)self _sharingPermissionTypeFromOptionsGroups:v11];

  id v12 = [v10 optionsGroups];
  int64_t v33 = [(CKChatController *)self _sharingAccessTypeFromOptionsGroups:v12];

  uint64_t v13 = [(CKCoreChatController *)self conversation];
  id v14 = [v13 recipientPhoneNumbers];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
  }
  else
  {
    id v16 = [MEMORY[0x1E4F1C978] array];
  }
  id v17 = v16;

  id v18 = [(CKCoreChatController *)self conversation];
  id v19 = [v18 recipientEmailAddresses];
  id v20 = v19;
  if (v19)
  {
    id v21 = v19;
  }
  else
  {
    id v21 = [MEMORY[0x1E4F1C978] array];
  }
  id v22 = v21;

  id v23 = [v10 optionsGroups];
  BOOL v24 = [(CKChatController *)self _sharingAllowOthersToInviteFromOptionsGroups:v23];

  if (IMOSLoggingEnabled())
  {
    id v25 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      id v32 = v9;
      if (v24) {
        id v26 = @"YES";
      }
      else {
        id v26 = @"NO";
      }
      id v27 = [v17 componentsJoinedByString:@", "];
      __int16 v28 = [v22 componentsJoinedByString:@", "];
      *(_DWORD *)long long buf = 134218754;
      int64_t v40 = v35;
      __int16 v41 = 2112;
      id v42 = v26;
      __int16 v43 = 2112;
      id v44 = v27;
      __int16 v45 = 2112;
      id v46 = v28;
      _os_log_impl(&dword_18EF18000, v25, OS_LOG_TYPE_INFO, "_removeSubsharesAndSendFileProviderComposition permissionType:%ld, allowOthersToInvite=%@, new phone numbers: %@, new email addresses: %@", buf, 0x2Au);

      id v9 = v32;
    }
  }
  id v29 = (void *)MEMORY[0x1E4F59BA0];
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke;
  v36[3] = &unk_1E5622EF0;
  void v36[4] = self;
  id v37 = v8;
  id v38 = v34;
  id v30 = v34;
  id v31 = v8;
  [v29 shareFolderRemovingSubshares:v9 emailAddresses:v22 phoneNumbers:v17 accessType:v33 permissionType:v35 allowOthersToInvite:v24 completionHandler:v36];
}

void __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    id v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_cold_1();
    }

    id v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    void v18[2] = __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_963;
    v18[3] = &unk_1E5622D10;
    uint64_t v13 = &v19;
    id v19 = *(id *)(a1 + 48);
    [v11 presentCollaborationFailureAlertForComposition:v12 sharingURL:v7 error:v9 completion:v18];
  }
  else
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_3;
    v14[3] = &unk_1E5622EC8;
    uint64_t v13 = &v17;
    id v17 = *(id *)(a1 + 48);
    id v15 = v7;
    id v16 = v8;
    dispatch_async(MEMORY[0x1E4F14428], v14);
  }
}

void __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_963(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_2;
    block[3] = &unk_1E5620F48;
    id v2 = *(id *)(a1 + 32);
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_3(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

- (id)updateDataSourceForPluginPayload:(id)a3 forGUID:(id)a4 withCollaborationMetadata:(id)a5 shareURL:(id)a6
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  if (!v9 || (uint64_t v13 = [v10 length], !v11) || !v13)
  {
    id v14 = IMLogHandleForCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      int v25 = 138412802;
      id v26 = v9;
      __int16 v27 = 2112;
      id v28 = v10;
      __int16 v29 = 2112;
      id v30 = v11;
      _os_log_error_impl(&dword_18EF18000, v14, OS_LOG_TYPE_ERROR, "Not updating data source. pluginPayload: %@ messageGUID: %@ collaborationMetadata: %@", (uint8_t *)&v25, 0x20u);
    }
  }
  id v15 = (void *)MEMORY[0x1E4F30AA8];
  id v16 = [v9 data];
  id v17 = [v15 linkWithDataRepresentationWithoutSubstitutingAttachments:v16];

  id v18 = [v17 metadata];
  [v18 setOriginalURL:v12];
  [v18 setCollaborationMetadata:v11];
  [v17 setMetadata:v18];
  id v19 = [v17 dataRepresentationWithOutOfLineAttachments:0];
  [v9 setData:v19];

  id v20 = [MEMORY[0x1E4F6BC18] sharedInstance];
  id v21 = [v20 dataSourceForPluginPayload:v9];

  id v22 = [MEMORY[0x1E4F6BC18] sharedInstance];
  id v23 = [v9 messageGUID];
  [v22 insertDataSource:v21 forGUID:v23];

  return v9;
}

- (void)_sendCollaborationCompositionForCloudKit:(id)a3 sharingURL:(id)a4 share:(id)a5 completion:(id)a6
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v39 = a5;
  id v12 = (void (**)(id, uint64_t))a6;
  if (v11)
  {
    uint64_t v13 = [v10 shelfPluginPayload];
    id v14 = [v13 url];
    id v15 = [v14 ckURLByPercentEncodingFragment];
    [v13 setUrl:v15];

    id v16 = [NSString stringGUID];
    [v13 setMessageGUID:v16];

    id v17 = [v11 absoluteString];
    if ([v17 length])
    {
      id v18 = objc_alloc(MEMORY[0x1E4F28B18]);
      id v19 = [v11 absoluteString];
      id v20 = (void *)[v18 initWithString:v19];
      [v13 setText:v20];
    }
    else
    {
      [v13 setText:0];
    }

    [v13 setPluginBundleID:*MEMORY[0x1E4F6CC10]];
    id v22 = [v13 messageGUID];
    id v23 = [v13 collaborationMetadata];
    BOOL v24 = [(CKChatController *)self updateDataSourceForPluginPayload:v13 forGUID:v22 withCollaborationMetadata:v23 shareURL:v11];

    if ([MEMORY[0x1E4F6BC10] isPayloadServiceManatee:v24])
    {
      int v25 = [(CKChatController *)self shareMetadataWithDugongTokensForCKShare:v39 shareURL:v11];
      id v26 = [v24 datasource];
      __int16 v27 = [v26 richLinkMetadata];

      id v28 = [v27 specialization];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        id v30 = [v27 specialization];
        uint64_t v31 = [v30 specialization];

        if (objc_opt_respondsToSelector()) {
          [v31 setEncodedTokens:v25];
        }
      }
    }
    id v32 = [CKComposition alloc];
    int64_t v33 = [v10 text];
    id v34 = [v10 subject];
    int64_t v35 = [(CKComposition *)v32 initWithText:v33 subject:v34 shelfPluginPayload:v24];

    if (IMOSLoggingEnabled())
    {
      id v36 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
      {
        id v37 = [v13 url];
        *(_DWORD *)long long buf = 138412290;
        __int16 v43 = v37;
        _os_log_impl(&dword_18EF18000, v36, OS_LOG_TYPE_INFO, "Sending the final composition for CloudKit sharingURL: %@", buf, 0xCu);
      }
    }
    [(CKCoreChatController *)self setShareWasCreated:1];
    id v38 = [v13 collaborationMetadata];
    [v38 checkSendReadiness];

    [(IMTimingCollection *)self->_timingCollectionSendGelato stopTimingForKey:@"sendGelato"];
    [(IMTimingCollection *)self->_timingCollectionSendGelato totalTimeForKey:@"sendGelato"];
    -[CKChatController sendAnalyticsForElapsedSendTimeForType:sharingURL:timeInterval:](self, "sendAnalyticsForElapsedSendTimeForType:sharingURL:timeInterval:", 2, v11);
    if ([MEMORY[0x1E4F29060] isMainThread])
    {
      [(CKChatController *)self sendCollaborationCompositionAndSetSendingState:v35];
    }
    else
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __89__CKChatController__sendCollaborationCompositionForCloudKit_sharingURL_share_completion___block_invoke;
      block[3] = &unk_1E5620AF8;
      void block[4] = self;
      __int16 v41 = v35;
      dispatch_sync(MEMORY[0x1E4F14428], block);
    }
    if (v12) {
      v12[2](v12, 1);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v21 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Received nil share URL from CloudSharing.", buf, 2u);
    }
  }
}

uint64_t __89__CKChatController__sendCollaborationCompositionForCloudKit_sharingURL_share_completion___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) sendCollaborationCompositionAndSetSendingState:*(void *)(a1 + 40)];
}

- (void)_sendCompositionForNewCloudKitShare:(id)a3 completion:(id)a4
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v27 = a4;
  id v7 = [v6 shelfPluginPayload];
  BOOL v24 = [v7 url];
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      int64_t v32 = (int64_t)v24;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Sending collaboration composition for New CloudKit share. URL = %@", buf, 0xCu);
    }
  }
  id v9 = [(CKCoreChatController *)self conversation];
  id v26 = [v9 recipientPhoneNumbers];

  id v10 = [(CKCoreChatController *)self conversation];
  int v25 = [v10 recipientEmailAddresses];

  id v11 = [v7 containerSetupInfo];
  id v12 = [v7 cloudKitShare];
  uint64_t v13 = [v6 collaborationShareOptions];
  id v14 = [v13 optionsGroups];
  int64_t v15 = [(CKChatController *)self _sharingAccessTypeFromOptionsGroups:v14];

  id v16 = [v13 optionsGroups];
  int64_t v17 = [(CKChatController *)self _sharingPermissionTypeFromOptionsGroups:v16];

  id v18 = [v13 optionsGroups];
  BOOL v19 = [(CKChatController *)self _sharingAllowOthersToInviteFromOptionsGroups:v18];

  if (IMOSLoggingEnabled())
  {
    id v20 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      id v21 = @"NO";
      *(_DWORD *)long long buf = 134218498;
      int64_t v32 = v15;
      if (v19) {
        id v21 = @"YES";
      }
      __int16 v33 = 2048;
      int64_t v34 = v17;
      __int16 v35 = 2112;
      id v36 = v21;
      _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "Invoking the share creation with options: accessType: %ld permissionType:%ld, allowOthersToInvite=%@", buf, 0x20u);
    }
  }
  id v22 = [(CKChatController *)self CKCloudSharingClass];
  if (objc_opt_respondsToSelector())
  {
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    void v28[2] = __67__CKChatController__sendCompositionForNewCloudKitShare_completion___block_invoke;
    v28[3] = &unk_1E5622EF0;
    void v28[4] = self;
    id v29 = v6;
    id v30 = v27;
    LOBYTE(v23) = v19;
    [(objc_class *)v22 completeShare:v12 containerSetupInfo:v11 emailAddresses:v25 phoneNumbers:v26 accessType:v15 permissionType:v17 allowOthersToInvite:v23 completionHandler:v28];
  }
}

void __67__CKChatController__sendCompositionForNewCloudKitShare_completion___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [*(id *)(a1 + 32) disableSendButtonSpinner];
  if (v9)
  {
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v26 = v9;
        __int16 v27 = 2112;
        id v28 = v7;
        _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Error while creating the share URL for CloudKit: %@. Sharing URL: %@", buf, 0x16u);
      }
    }
    id v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 3221225472;
    v22[2] = __67__CKChatController__sendCompositionForNewCloudKitShare_completion___block_invoke_972;
    v22[3] = &unk_1E5622BD0;
    id v13 = *(id *)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 32);
    int64_t v15 = *(void **)(a1 + 40);
    id v24 = v13;
    void v22[4] = v14;
    id v23 = v15;
    [v11 presentCollaborationFailureAlertForComposition:v12 sharingURL:v7 error:v9 completion:v22];
  }
  else
  {
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __67__CKChatController__sendCompositionForNewCloudKitShare_completion___block_invoke_2;
    v17[3] = &unk_1E5622C20;
    id v16 = *(void **)(a1 + 40);
    void v17[4] = *(void *)(a1 + 32);
    id v18 = v16;
    id v19 = v7;
    id v20 = v8;
    id v21 = *(id *)(a1 + 48);
    dispatch_async(MEMORY[0x1E4F14428], v17);
  }
}

uint64_t __67__CKChatController__sendCompositionForNewCloudKitShare_completion___block_invoke_972(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return [*(id *)(a1 + 32) _sendCompositionForNewCloudKitShare:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t __67__CKChatController__sendCompositionForNewCloudKitShare_completion___block_invoke_2(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "CloudSharing API returned without error. Calling send composition.", v4, 2u);
    }
  }
  return [*(id *)(a1 + 32) _sendCollaborationCompositionForCloudKit:*(void *)(a1 + 40) sharingURL:*(void *)(a1 + 48) share:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
}

- (void)_updateAndSendCompositionForExistingCloudKitShare:(id)a3 share:(id)a4 attempt:(unint64_t)a5 completion:(id)a6
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  if (v11)
  {
    if (v10)
    {
      id v13 = [(CKCoreChatController *)self conversation];
      uint64_t v14 = [v13 recipientPhoneNumbers];

      int64_t v15 = [(CKCoreChatController *)self conversation];
      id v16 = [v15 recipientEmailAddresses];

      int64_t v17 = [v10 shelfPluginPayload];
      uint64_t v31 = [v17 containerSetupInfo];

      id v18 = [v10 collaborationShareOptions];
      id v19 = [v18 optionsGroups];
      int64_t v30 = [(CKChatController *)self _sharingPermissionTypeFromOptionsGroups:v19];

      id v20 = [v18 optionsGroups];
      BOOL v29 = [(CKChatController *)self _sharingAllowOthersToInviteFromOptionsGroups:v20];

      if (IMOSLoggingEnabled())
      {
        id v21 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          id v28 = v16;
          if (v29) {
            id v22 = @"YES";
          }
          else {
            id v22 = @"NO";
          }
          id v23 = [v14 componentsJoinedByString:@", "];
          id v24 = [v28 componentsJoinedByString:@", "];
          *(_DWORD *)long long buf = 134218754;
          int64_t v38 = v30;
          __int16 v39 = 2112;
          int64_t v40 = v22;
          __int16 v41 = 2112;
          id v42 = v23;
          __int16 v43 = 2112;
          uint64_t v44 = v24;
          _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Updating the share with options: permissionType:%ld, allowOthersToInvite=%@, new phone numbers: %@, new email addresses: %@", buf, 0x2Au);

          id v16 = v28;
        }
      }
      int v25 = [(CKChatController *)self CKCloudSharingClass];
      if ([v11 publicPermission] == 1)
      {
        if (objc_opt_respondsToSelector())
        {
          v33[0] = MEMORY[0x1E4F143A8];
          v33[1] = 3221225472;
          v33[2] = __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke;
          v33[3] = &unk_1E5622F18;
          void v33[4] = self;
          unint64_t v36 = a5;
          id v34 = v10;
          id v35 = v12;
          [(objc_class *)v25 addParticipantsToShare:v11 containerSetupInfo:v31 emailAddresses:v16 phoneNumbers:v14 permissionType:v30 allowOthersToInvite:v29 completionHandler:v33];
        }
      }
      else
      {
        if (IMOSLoggingEnabled())
        {
          id v26 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_18EF18000, v26, OS_LOG_TYPE_INFO, "Not calling addParticipants because it's a public share.", buf, 2u);
          }
        }
        __int16 v27 = [v11 URL];
        [(CKChatController *)self _sendCollaborationCompositionForCloudKit:v10 sharingURL:v27 share:v11 completion:v12];
      }
    }
    else
    {
      uint64_t v14 = IMLogHandleForCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        -[CKChatController _updateAndSendCompositionForExistingCloudKitShare:share:attempt:completion:](a2);
      }
    }
  }
  else
  {
    uint64_t v14 = IMLogHandleForCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[CKChatController _updateAndSendCompositionForExistingCloudKitShare:share:attempt:completion:](a2);
    }
  }
}

void __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  [*(id *)(a1 + 32) disableSendButtonSpinner];
  if (v9)
  {
    id v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_cold_2();
    }

    id v11 = [v9 updatedServerChangedShare];
    id v12 = [MEMORY[0x1E4F6B598] sharedInstanceForBagType:1];
    uint64_t v13 = [v12 objectForKey:@"sharedwithyou-max-retry-attempts" ofClass:objc_opt_class()];
    uint64_t v14 = (void *)v13;
    int64_t v15 = &unk_1EDF16190;
    if (v13) {
      int64_t v15 = (void *)v13;
    }
    id v16 = v15;

    unint64_t v17 = *(void *)(a1 + 56);
    int v18 = [v16 intValue];

    if (v17 > v18 || v11 == 0)
    {
      id v20 = *(void **)(a1 + 32);
      uint64_t v21 = *(void *)(a1 + 40);
      v33[0] = MEMORY[0x1E4F143A8];
      v33[1] = 3221225472;
      v33[2] = __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_980;
      v33[3] = &unk_1E5622DD8;
      id v22 = *(id *)(a1 + 48);
      uint64_t v23 = *(void *)(a1 + 32);
      id v24 = *(void **)(a1 + 40);
      id v37 = v22;
      void v33[4] = v23;
      id v34 = v24;
      id v35 = v11;
      id v36 = v8;
      [v20 presentCollaborationFailureAlertForComposition:v21 sharingURL:v7 error:v9 completion:v33];
    }
    else
    {
      id v26 = IMLogHandleForCategory();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_cold_1();
      }

      [*(id *)(a1 + 32) _updateAndSendCompositionForExistingCloudKitShare:*(void *)(a1 + 40) share:v11 attempt:*(void *)(a1 + 56) + 1 completion:*(void *)(a1 + 48)];
    }
  }
  else
  {
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    void v28[2] = __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_2;
    v28[3] = &unk_1E5622C20;
    int v25 = *(void **)(a1 + 40);
    void v28[4] = *(void *)(a1 + 32);
    id v29 = v25;
    id v30 = v7;
    id v31 = v8;
    id v32 = *(id *)(a1 + 48);
    dispatch_async(MEMORY[0x1E4F14428], v28);
  }
}

uint64_t __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_980(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v2 = *(void *)(a1 + 48);
    if (!v2) {
      uint64_t v2 = *(void *)(a1 + 56);
    }
    return [*(id *)(a1 + 32) _updateAndSendCompositionForExistingCloudKitShare:*(void *)(a1 + 40) share:v2 completion:*(void *)(a1 + 64)];
  }
  else
  {
    uint64_t result = *(void *)(a1 + 64);
    if (result) {
      return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
    }
  }
  return result;
}

uint64_t __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendCollaborationCompositionForCloudKit:*(void *)(a1 + 40) sharingURL:*(void *)(a1 + 48) share:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
}

- (void)_updateAndSendCompositionForExistingCloudKitShare:(id)a3 share:(id)a4 completion:(id)a5
{
}

- (void)sendCompositionForPendingCollaboration:(id)a3 completion:(id)a4
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Sending collaboration composition for GroupActivity.", buf, 2u);
    }
  }
  id v9 = [v6 shelfPluginPayload];
  id v10 = objc_alloc(MEMORY[0x1E4FA5608]);
  id v35 = (void *)[v10 initWithTargetSerialQueue:MEMORY[0x1E4F14428] synchronous:1];
  id v11 = [(CKCoreChatController *)self conversation];
  id v12 = [v11 recipientStrings];

  uint64_t v13 = (void *)[objc_alloc(MEMORY[0x1E4F1CAD0]) initWithArray:v12];
  uint64_t v14 = [v9 url];
  int64_t v15 = [v9 collaborationMetadata];
  id v16 = [v6 collaborationShareOptions];
  [v15 setUserSelectedShareOptions:v16];

  int v17 = [v14 isFileURL];
  char v18 = 0;
  *(void *)long long buf = 0;
  id v51 = buf;
  uint64_t v52 = 0x2020000000;
  char v53 = 0;
  if (v17) {
    char v18 = [v14 startAccessingSecurityScopedResource];
  }
  char v53 = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke;
  aBlock[3] = &unk_1E5622F90;
  id v19 = v9;
  id v43 = v19;
  long long v49 = buf;
  id v20 = v14;
  id v44 = v20;
  uint64_t v45 = self;
  id v21 = v6;
  id v46 = v21;
  id v22 = v7;
  id v48 = v22;
  id v23 = v13;
  id v47 = v23;
  id v24 = _Block_copy(aBlock);
  if (v17)
  {
    if (v51[24])
    {
      int v25 = [MEMORY[0x1E4F25D38] defaultManager];
      id v26 = [v25 itemForURL:v20 error:0];

      if (v26)
      {
        if (IMOSLoggingEnabled())
        {
          __int16 v27 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
          {
            if (v51[24]) {
              id v28 = @"YES";
            }
            else {
              id v28 = @"NO";
            }
            *(_DWORD *)id v54 = 138412290;
            id v55 = v28;
            _os_log_impl(&dword_18EF18000, v27, OS_LOG_TYPE_INFO, "Payload appears to be for a file provider. Starting handshake with a file url. did startAccessingSecurityScopedResource: %@", v54, 0xCu);
          }
        }
        [(CKChatController *)self enableSendButtonSpinner];
        id v29 = [v19 collaborationMetadata];
        [v35 startCollaborationWithFileURL:v20 metadata:v29 participants:v23 timeout:v24 completion:10.0];
        goto LABEL_30;
      }
      id v34 = IMLogHandleForCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        -[CKChatController sendCompositionForPendingCollaboration:completion:]();
      }

      [(CKChatController *)self disableSendButtonSpinner];
      id v32 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKCollaborationErrorDomain" code:2 userInfo:0];
      __int16 v33 = v36;
      v36[0] = MEMORY[0x1E4F143A8];
      v36[1] = 3221225472;
      v36[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_988;
      v36[3] = &unk_1E5622BD0;
      id v38 = v22;
      void v36[4] = self;
      id v37 = v21;
      [(CKChatController *)self presentCollaborationFailureAlertForComposition:v37 sharingURL:0 error:v32 completion:v36];
    }
    else
    {
      id v31 = IMLogHandleForCategory();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        -[CKChatController sendCompositionForPendingCollaboration:completion:]();
      }

      [(CKChatController *)self disableSendButtonSpinner];
      id v32 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKCollaborationErrorDomain" code:1 userInfo:0];
      __int16 v33 = v39;
      v39[0] = MEMORY[0x1E4F143A8];
      v39[1] = 3221225472;
      v39[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_986;
      v39[3] = &unk_1E5622BD0;
      id v41 = v22;
      v39[4] = self;
      id v40 = v21;
      [(CKChatController *)self presentCollaborationFailureAlertForComposition:v40 sharingURL:0 error:v32 completion:v39];
    }

    id v29 = (void *)v33[6];
    goto LABEL_30;
  }
  if (IMOSLoggingEnabled())
  {
    id v30 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v54 = 0;
      _os_log_impl(&dword_18EF18000, v30, OS_LOG_TYPE_INFO, "Payload appears to be for a generic 3rd party. Starting handshake with metadata.", v54, 2u);
    }
  }
  [(CKChatController *)self enableSendButtonSpinner];
  id v29 = [v19 collaborationMetadata];
  [v35 startCollaborationWithMetadata:v29 participants:v23 timeout:v24 completion:10.0];
LABEL_30:

  _Block_object_dispose(buf, 8);
}

void __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v48 = a3;
  id v47 = a4;
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = [*(id *)(a1 + 32) collaborationMetadata];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v62 = (uint64_t)v9;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Starting collaboration for pending collaboration with metadata: %@", buf, 0xCu);
    }
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24)) {
    [*(id *)(a1 + 40) stopAccessingSecurityScopedResource];
  }
  if (v7)
  {
    [*(id *)(a1 + 32) setUrl:v7];
    id v10 = *(void **)(a1 + 32);
    id v11 = [NSString stringGUID];
    [v10 setMessageGUID:v11];

    id v12 = *(void **)(a1 + 32);
    uint64_t v13 = [v7 absoluteString];
    if ([v13 length])
    {
      id v14 = objc_alloc(MEMORY[0x1E4F28B18]);
      int64_t v15 = [v7 absoluteString];
      id v16 = (void *)[v14 initWithString:v15];
      [v12 setText:v16];
    }
    else
    {
      [v12 setText:0];
    }

    [*(id *)(a1 + 32) setPluginBundleID:*MEMORY[0x1E4F6CC10]];
    [*(id *)(a1 + 32) setCollaborationMetadata:v48];
    id v24 = *(void **)(a1 + 48);
    int v25 = *(void **)(a1 + 32);
    id v26 = [v25 messageGUID];
    uint64_t v46 = [v24 updateDataSourceForPluginPayload:v25 forGUID:v26 withCollaborationMetadata:v48 shareURL:v7];

    __int16 v27 = [CKComposition alloc];
    id v28 = [*(id *)(a1 + 56) text];
    id v29 = [*(id *)(a1 + 56) subject];
    id v30 = [(CKComposition *)v27 initWithText:v28 subject:v29 shelfPluginPayload:v46];

    [*(id *)(a1 + 48) setShareWasCreated:1];
    id v31 = [*(id *)(a1 + 32) collaborationMetadata];
    [v31 checkSendReadiness];

    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_2;
    aBlock[3] = &unk_1E5622F40;
    id v32 = v7;
    uint64_t v33 = *(void *)(a1 + 48);
    id v54 = v32;
    uint64_t v55 = v33;
    id v34 = v30;
    uint64_t v56 = v34;
    id v57 = *(id *)(a1 + 72);
    id v35 = (void (**)(void))_Block_copy(aBlock);
    uint64_t v36 = [*(id *)(a1 + 64) count];
    id v37 = [v48 handleToIdentityMap];
    id v38 = [v37 allKeys];
    uint64_t v39 = [v38 count];

    uint64_t v40 = v36 + 1;
    if (v39 == v36 + 1)
    {
      v35[2](v35);
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        id v41 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 134218240;
          uint64_t v62 = v40;
          __int16 v63 = 2048;
          uint64_t v64 = v39;
          _os_log_impl(&dword_18EF18000, v41, OS_LOG_TYPE_INFO, "Did not receive all participant identities from sociallayerd, alerting the user. Expected: %lu, actual: %lu", buf, 0x16u);
        }
      }
      if (v39 == 1) {
        uint64_t v42 = 3;
      }
      else {
        uint64_t v42 = 4;
      }
      id v43 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CKCollaborationErrorDomain" code:v42 userInfo:0];
      id v44 = *(void **)(a1 + 48);
      uint64_t v45 = *(void *)(a1 + 56);
      v49[0] = MEMORY[0x1E4F143A8];
      v49[1] = 3221225472;
      v49[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_984;
      v49[3] = &unk_1E5622F68;
      uint64_t v52 = v42;
      id v50 = *(id *)(a1 + 72);
      id v51 = v35;
      [v44 presentCollaborationFailureAlertForComposition:v45 sharingURL:v32 error:v43 completion:v49];
    }
    id v23 = (void *)v46;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      int v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v62 = (uint64_t)v47;
        _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Received a nil shareURL when starting a pending collaboration. Error: %@", buf, 0xCu);
      }
    }
    char v18 = *(void **)(a1 + 48);
    uint64_t v19 = *(void *)(a1 + 56);
    v58[0] = MEMORY[0x1E4F143A8];
    v58[1] = 3221225472;
    v58[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_982;
    void v58[3] = &unk_1E5622BD0;
    id v20 = *(id *)(a1 + 72);
    uint64_t v21 = *(void *)(a1 + 48);
    id v22 = *(void **)(a1 + 56);
    id v60 = v20;
    void v58[4] = v21;
    id v59 = v22;
    [v18 presentCollaborationFailureAlertForComposition:v19 sharingURL:0 error:v47 completion:v58];

    id v23 = v60;
  }

  [*(id *)(a1 + 48) disableSendButtonSpinner];
}

uint64_t __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_982(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) sendCompositionForPendingCollaboration:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v9 = v3;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Sending the final composition for pending conversation for share URL: %@", buf, 0xCu);
    }
  }
  [*(id *)(*(void *)(a1 + 40) + 1400) stopTimingForKey:@"sendGelato"];
  [*(id *)(*(void *)(a1 + 40) + 1400) totalTimeForKey:@"sendGelato"];
  objc_msgSend(*(id *)(a1 + 40), "sendAnalyticsForElapsedSendTimeForType:sharingURL:timeInterval:", 3, *(void *)(a1 + 32));
  if ([MEMORY[0x1E4F29060] isMainThread])
  {
    [*(id *)(a1 + 40) sendCollaborationCompositionAndSetSendingState:*(void *)(a1 + 48)];
  }
  else
  {
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_983;
    v6[3] = &unk_1E5620AF8;
    uint64_t v4 = *(void **)(a1 + 48);
    v6[4] = *(void *)(a1 + 40);
    id v7 = v4;
    dispatch_sync(MEMORY[0x1E4F14428], v6);
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

uint64_t __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_983(uint64_t a1)
{
  return [*(id *)(a1 + 32) sendCollaborationCompositionAndSetSendingState:*(void *)(a1 + 40)];
}

uint64_t __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_984(void *a1)
{
  if (a1[6] != 3) {
    return (*(uint64_t (**)(void))(a1[5] + 16))();
  }
  uint64_t result = a1[4];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_986(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) sendCompositionForPendingCollaboration:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t __70__CKChatController_sendCompositionForPendingCollaboration_completion___block_invoke_988(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return [*(id *)(a1 + 32) sendCompositionForPendingCollaboration:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)sendCompositionForCloudKit:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [v6 shelfPluginPayload];
  uint64_t v9 = [v8 cloudKitShare];
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    id v11 = [v6 shelfPluginPayload];
    id v12 = [v11 cloudKitShare];
    uint64_t v13 = [v12 participants];
    unint64_t v14 = [v13 count];

    if (v14 > 1)
    {
      if (IMOSLoggingEnabled())
      {
        int64_t v15 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v19 = 0;
          _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Updating collaboration composition for existing Cloud Kit Share.", v19, 2u);
        }
      }
      id v16 = [v6 shelfPluginPayload];
      int v17 = [v16 cloudKitShare];
      [(CKChatController *)self _updateAndSendCompositionForExistingCloudKitShare:v6 share:v17 completion:v7];

      goto LABEL_14;
    }
  }
  else
  {
  }
  if (IMOSLoggingEnabled())
  {
    char v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "There is no existing share for the shareURL.", buf, 2u);
    }
  }
  [(CKChatController *)self _sendCompositionForNewCloudKitShare:v6 completion:v7];
LABEL_14:
}

- (void)sendCompositionForCollaboration:(id)a3 collaborationType:(int64_t)a4 completion:(id)a5
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __81__CKChatController_sendCompositionForCollaboration_collaborationType_completion___block_invoke;
  aBlock[3] = &unk_1E5622750;
  void aBlock[4] = self;
  id v10 = v9;
  id v25 = v10;
  id v11 = _Block_copy(aBlock);
  if (IMOSLoggingEnabled())
  {
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      int64_t v27 = a4;
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Collaboration type switch: %ld", buf, 0xCu);
    }
  }
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  void v20[2] = __81__CKChatController_sendCompositionForCollaboration_collaborationType_completion___block_invoke_989;
  v20[3] = &unk_1E5622FB8;
  v20[4] = self;
  id v21 = v8;
  id v22 = v11;
  int64_t v23 = a4;
  id v13 = v11;
  id v14 = v8;
  int64_t v15 = _Block_copy(v20);
  id v16 = [v14 shelfPluginPayload];
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  void v18[2] = __81__CKChatController_sendCompositionForCollaboration_collaborationType_completion___block_invoke_2;
  v18[3] = &unk_1E5622750;
  void v18[4] = self;
  id v19 = v15;
  id v17 = v15;
  [(CKChatController *)self _presentCollaborationAlertsIfNecessaryForPayload:v16 collaborationType:a4 sendBlock:v17 completionHandler:v18];
}

uint64_t __81__CKChatController_sendCompositionForCollaboration_collaborationType_completion___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsSettingUpCollaboration:0];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t __81__CKChatController_sendCompositionForCollaboration_collaborationType_completion___block_invoke_989(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 56);
  switch(v1)
  {
    case 3:
      return [*(id *)(result + 32) sendCompositionForPendingCollaboration:*(void *)(result + 40) completion:*(void *)(result + 48)];
    case 2:
      return [*(id *)(result + 32) sendCompositionForCloudKit:*(void *)(result + 40) completion:*(void *)(result + 48)];
    case 1:
      return [*(id *)(result + 32) sendCompositionForFileProvider:*(void *)(result + 40) completion:*(void *)(result + 48)];
  }
  return result;
}

uint64_t __81__CKChatController_sendCompositionForCollaboration_collaborationType_completion___block_invoke_2(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = result;
    uint64_t result = [*(id *)(result + 32) isSettingUpCollaboration];
    if ((result & 1) == 0)
    {
      [*(id *)(v2 + 32) setIsSettingUpCollaboration:1];
      uint64_t v3 = *(uint64_t (**)(void))(*(void *)(v2 + 40) + 16);
      return v3();
    }
  }
  return result;
}

- (void)_presentCollaborationAlertsIfNecessaryForPayload:(id)a3 collaborationType:(int64_t)a4 sendBlock:(id)a5 completionHandler:(id)a6
{
  id v12 = a3;
  id v10 = a5;
  id v11 = (void (**)(id, uint64_t))a6;
  if ([(CKChatController *)self _presentCollabInvalidFileProviderLocationAlertIfNecessaryForPayload:v12 collaborationType:a4])
  {
    v11[2](v11, 1);
  }
  else
  {
    [(CKChatController *)self _presentCollabAddToMessagesGroupAlertIfNecessary:v12 collaborationType:a4 sendBlock:v10 completionHandler:v11];
  }
}

- (BOOL)_presentCollabInvalidFileProviderLocationAlertIfNecessaryForPayload:(id)a3 collaborationType:(int64_t)a4
{
  if (a4 != 1) {
    return 0;
  }
  id v5 = (void *)MEMORY[0x1E4F25D38];
  id v6 = a3;
  id v7 = [v5 defaultManager];
  id v8 = [v6 url];

  id v22 = 0;
  id v9 = [v7 itemForURL:v8 error:&v22];
  id v10 = v22;

  BOOL v11 = v9 == 0;
  if (!v9)
  {
    if (v10)
    {
      id v12 = IMLogHandleForCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        -[CKChatController _presentCollabInvalidFileProviderLocationAlertIfNecessaryForPayload:collaborationType:]();
      }
    }
    id v13 = CKFrameworkBundle();
    id v14 = [v13 localizedStringForKey:@"ALERT_TITLE_COLLAB_INVALID_FILE_PROVIDER_LOCATION" value:&stru_1EDE4CA38 table:@"ChatKit"];

    int64_t v15 = CKFrameworkBundle();
    id v16 = [v15 localizedStringForKey:@"ALERT_MESSAGE_COLLAB_INVALID_FILE_PROVIDER_LOCATION" value:&stru_1EDE4CA38 table:@"ChatKit"];

    id v17 = CKFrameworkBundle();
    char v18 = [v17 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];

    id v19 = +[CKAlertController alertControllerWithTitle:v14 message:v16 preferredStyle:CKIsRunningInMacCatalyst() != 0];
    id v20 = +[CKAlertAction actionWithTitle:v18 style:0 handler:&__block_literal_global_997];
    [v19 addAction:v20];

    [v19 presentFromViewController:self animated:1 completion:0];
  }

  return v11;
}

- (void)_presentCollabAddToMessagesGroupAlertIfNecessary:(id)a3 collaborationType:(int64_t)a4 sendBlock:(id)a5 completionHandler:(id)a6
{
  id v10 = a3;
  id v11 = a5;
  id v12 = a6;
  id v13 = [(CKCoreChatController *)self conversation];
  unint64_t v14 = [v13 recipientCount];

  if (v14 < 2)
  {
    if (a4 == 1)
    {
      id v15 = objc_alloc(MEMORY[0x1E4F59558]);
      id v16 = [v10 url];
      id v17 = (void *)[v15 initWithFileURL:v16 documentType:*MEMORY[0x1E4F226F8]];

      v19[0] = MEMORY[0x1E4F143A8];
      v19[1] = 3221225472;
      v19[2] = __115__CKChatController__presentCollabAddToMessagesGroupAlertIfNecessary_collaborationType_sendBlock_completionHandler___block_invoke;
      v19[3] = &unk_1E5623008;
      void v19[4] = self;
      id v20 = v12;
      id v21 = v11;
      [v17 setCopyShareURLCompletionBlock:v19];
      id v18 = objc_alloc_init(MEMORY[0x1E4F28F08]);
      [v18 setMaxConcurrentOperationCount:1];
      [v18 addOperation:v17];
    }
    else
    {
      id v17 = [v10 url];
      [(CKChatController *)self _presentCollabAddToMessagesGroupAlert:v17 sendBlock:v11 completionHandler:v12];
    }
  }
  else
  {
    (*((void (**)(id, void))v12 + 2))(v12, 0);
  }
}

void __115__CKChatController__presentCollabAddToMessagesGroupAlertIfNecessary_collaborationType_sendBlock_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5 || v6)
  {
    id v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __115__CKChatController__presentCollabAddToMessagesGroupAlertIfNecessary_collaborationType_sendBlock_completionHandler___block_invoke_cold_1();
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __115__CKChatController__presentCollabAddToMessagesGroupAlertIfNecessary_collaborationType_sendBlock_completionHandler___block_invoke_999;
    _OWORD v9[3] = &unk_1E5622FE0;
    void v9[4] = *(void *)(a1 + 32);
    id v10 = v5;
    id v11 = *(id *)(a1 + 48);
    id v12 = *(id *)(a1 + 40);
    dispatch_async(MEMORY[0x1E4F14428], v9);
  }
}

uint64_t __115__CKChatController__presentCollabAddToMessagesGroupAlertIfNecessary_collaborationType_sendBlock_completionHandler___block_invoke_999(uint64_t a1)
{
  return [*(id *)(a1 + 32) _presentCollabAddToMessagesGroupAlert:*(void *)(a1 + 40) sendBlock:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
}

- (void)_presentCollabAddToMessagesGroupAlert:(id)a3 sendBlock:(id)a4 completionHandler:(id)a5
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v52 = a4;
  id v54 = (void (**)(id, void))a5;
  id v51 = v8;
  if (v8)
  {
    id v57 = self;
    char v53 = [(CKChatController *)self _groupConversationContainingSharedURL:v8];
    if (!v53)
    {
LABEL_31:
      v54[2](v54, 0);
      goto LABEL_36;
    }
    if (IMOSLoggingEnabled())
    {
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        id v10 = [v53 chat];
        id v11 = [v10 chatIdentifier];
        *(_DWORD *)long long buf = 138412290;
        long long v69 = v11;
        _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "Presenting Group Collaboration alert for chat identifier: %@", buf, 0xCu);
      }
    }
    long long v65 = 0u;
    long long v66 = 0u;
    long long v63 = 0u;
    long long v64 = 0u;
    id obj = [v53 recipients];
    uint64_t v12 = [obj countByEnumeratingWithState:&v63 objects:v67 count:16];
    if (v12)
    {
      uint64_t v13 = *(void *)v64;
      while (2)
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v64 != v13) {
            objc_enumerationMutation(obj);
          }
          id v15 = [*(id *)(*((void *)&v63 + 1) + 8 * i) defaultIMHandle];
          id v16 = [v15 ID];
          id v17 = [(CKCoreChatController *)v57 conversation];
          id v18 = [v17 recipient];
          id v19 = [v18 defaultIMHandle];
          id v20 = [v19 ID];
          int v21 = [v16 isEqualToString:v20];

          if (v21)
          {
            if (IMOSLoggingEnabled())
            {
              id v34 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_18EF18000, v34, OS_LOG_TYPE_INFO, "Recipient is already part of group conversation, sending separately", buf, 2u);
              }
            }
            goto LABEL_31;
          }
        }
        uint64_t v12 = [obj countByEnumeratingWithState:&v63 objects:v67 count:16];
        if (v12) {
          continue;
        }
        break;
      }
    }

    id v22 = [(CKCoreChatController *)v57 conversation];
    int64_t v23 = [v22 recipient];
    id v50 = [v23 name];

    id obja = [v53 displayName];
    if (!obja)
    {
      id obja = [v53 name];
    }
    BOOL v24 = CKIsRunningInMacCatalyst() == 0;
    id v25 = NSString;
    id v26 = CKFrameworkBundle();
    int64_t v27 = v26;
    if (v24)
    {
      id v35 = [v26 localizedStringForKey:@"ALERT_TITLE_ADD_TO_EXISTING_GROUP_CONVERSATION_IOS" value:&stru_1EDE4CA38 table:@"ChatKit"];
      id v29 = objc_msgSend(v25, "stringWithFormat:", v35, v50, obja);

      uint64_t v36 = [MEMORY[0x1E4F42738] sharedApplication];
      BOOL v37 = [v36 userInterfaceLayoutDirection] == 1;

      if (v37) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v28 = [v26 localizedStringForKey:@"ALERT_TITLE_ADD_TO_EXISTING_GROUP_CONVERSATION_MAC" value:&stru_1EDE4CA38 table:@"ChatKit"];
      id v29 = objc_msgSend(v25, "stringWithFormat:", v28, v50, obja);

      id v30 = [MEMORY[0x1E4F42738] sharedApplication];
      BOOL v31 = [v30 userInterfaceLayoutDirection] == 1;

      if (v31)
      {
LABEL_19:
        [@"\u200F" stringByAppendingString:v29];
        uint64_t v32 = LABEL_20:;
        id v38 = (void *)v32;

        uint64_t v39 = CKFrameworkBundle();
        uint64_t v40 = [v39 localizedStringForKey:@"ALERT_ACTION_ADD_TO_GROUP" value:&stru_1EDE4CA38 table:@"ChatKit"];

        id v41 = CKFrameworkBundle();
        uint64_t v42 = [v41 localizedStringForKey:@"ALERT_ACTION_SHARE_WITH_PARTICIPANT_ONLY" value:&stru_1EDE4CA38 table:@"ChatKit"];

        id v43 = +[CKAlertController alertControllerWithTitle:v38 message:0 preferredStyle:CKIsRunningInMacCatalyst() != 0];
        v60[0] = MEMORY[0x1E4F143A8];
        v60[1] = 3221225472;
        v60[2] = __86__CKChatController__presentCollabAddToMessagesGroupAlert_sendBlock_completionHandler___block_invoke;
        v60[3] = &unk_1E5623030;
        v60[4] = v57;
        id v61 = v53;
        id v44 = v52;
        id v62 = v44;
        uint64_t v45 = +[CKAlertAction actionWithTitle:v40 style:0 handler:v60];
        [v43 addAction:v45];

        v58[0] = MEMORY[0x1E4F143A8];
        v58[1] = 3221225472;
        v58[2] = __86__CKChatController__presentCollabAddToMessagesGroupAlert_sendBlock_completionHandler___block_invoke_1014;
        void v58[3] = &unk_1E5621380;
        id v59 = v44;
        uint64_t v46 = +[CKAlertAction actionWithTitle:v42 style:0 handler:v58];
        [v43 addAction:v46];

        id v47 = CKFrameworkBundle();
        id v48 = [v47 localizedStringForKey:@"CANCEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
        long long v49 = +[CKAlertAction actionWithTitle:v48 style:1 handler:&__block_literal_global_1017];
        [v43 addAction:v49];

        [v43 presentFromViewController:v57 animated:1 completion:0];
        v54[2](v54, 1);

LABEL_36:
        goto LABEL_37;
      }
    }
    [@"\u200E" stringByAppendingString:v29];
    goto LABEL_20;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v33 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v33, OS_LOG_TYPE_INFO, "Can't find a group conversation, URL is nil", buf, 2u);
    }
  }
  v54[2](v54, 0);
LABEL_37:
}

void __86__CKChatController__presentCollabAddToMessagesGroupAlert_sendBlock_completionHandler___block_invoke(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v15) = 0;
      _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Add to group and share with recipient", (uint8_t *)&v15, 2u);
    }
  }
  id v5 = [*(id *)(a1 + 32) conversation];
  id v6 = [v5 recipient];

  id v7 = [v6 rawAddress];
  id v8 = [*(id *)(a1 + 32) conversation];
  id v9 = [v8 chat];
  id v10 = [v9 account];
  id v11 = [v10 imHandleWithID:v7 alreadyCanonical:0];

  if (v11)
  {
    [*(id *)(a1 + 32) setConversation:*(void *)(a1 + 40)];
    uint64_t v12 = [*(id *)(a1 + 32) conversation];
    v17[0] = v11;
    uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:1];
    [v12 addRecipientHandles:v13];

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else if (IMOSLoggingEnabled())
  {
    unint64_t v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      int v15 = 138412290;
      id v16 = v6;
      _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "CKChatController_Collaboration: Couldn't get handle from recipient: %@", (uint8_t *)&v15, 0xCu);
    }
  }
}

void __86__CKChatController__presentCollabAddToMessagesGroupAlert_sendBlock_completionHandler___block_invoke_1014(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Share with recipient only", v5, 2u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __86__CKChatController__presentCollabAddToMessagesGroupAlert_sendBlock_completionHandler___block_invoke_1015(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Cancel", v4, 2u);
    }
  }
}

- (id)_groupConversationContainingSharedURL:(id)a3
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  if (v3)
  {
    uint64_t v4 = [MEMORY[0x1E4F6BDA8] sharedController];
    id v26 = 0;
    id v5 = [v4 collaborationHighlightForURL:v3 error:&v26];
    id v6 = v26;

    if (v6 || !v5)
    {
      if (IMOSLoggingEnabled())
      {
        id v17 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          id v18 = [v6 localizedDescription];
          *(_DWORD *)long long buf = 138412546;
          id v29 = v5;
          __int16 v30 = 2112;
          BOOL v31 = v18;
          _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Could not get collaboration highlight: %@ with error: %@", buf, 0x16u);
        }
      }
      id v9 = 0;
      id v10 = 0;
    }
    else
    {
      id v7 = [MEMORY[0x1E4F6BDA8] sharedController];
      int v21 = [v7 fetchAttributionsForHighlight:v5];

      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      id v8 = [v21 attributions];
      id v9 = 0;
      id v10 = (void *)[v8 countByEnumeratingWithState:&v22 objects:v27 count:16];
      if (v10)
      {
        uint64_t v11 = 0;
        uint64_t v12 = *(void *)v23;
        while (2)
        {
          for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v23 != v12) {
              objc_enumerationMutation(v8);
            }
            unint64_t v14 = *(void **)(*((void *)&v22 + 1) + 8 * i);
            if ([v14 isGroupConversation])
            {
              int v15 = [v14 conversationIdentifier];

              if (v11 >= 1)
              {
                if (IMOSLoggingEnabled())
                {
                  id v19 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
                  {
                    *(_WORD *)long long buf = 0;
                    _os_log_impl(&dword_18EF18000, v19, OS_LOG_TYPE_INFO, "Found more than 1 group where the url is shared, not returning a conversation", buf, 2u);
                  }
                }
                id v9 = 0;
                id v10 = 0;
                goto LABEL_31;
              }
              ++v11;
              id v9 = v15;
            }
          }
          id v10 = (void *)[v8 countByEnumeratingWithState:&v22 objects:v27 count:16];
          if (v10) {
            continue;
          }
          break;
        }

        if (v9)
        {
          id v8 = +[CKConversationList sharedConversationList];
          id v10 = [v8 conversationForExistingChatWithGUID:v9];
          goto LABEL_31;
        }
        id v10 = 0;
      }
      else
      {
LABEL_31:
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "No URL provided", buf, 2u);
      }
    }
    id v10 = 0;
  }

  return v10;
}

- (void)_validateAndSendComposition:(id)a3 completion:(id)a4
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v8 addObserver:self selector:sel__passKitUIDismissed_ name:@"CKPluginExtensionStateObserverPassKitUIDismissed" object:0];

  id v9 = [v6 shelfPluginPayload];
  BOOL v10 = [(CKChatController *)self _shouldValidatePayloadBeforeSendingPayload:v9];
  int v11 = [v9 sendAsCopy];
  if (![v9 supportsCollaboration] || (v11 & 1) != 0)
  {
    if (v10)
    {
      id v13 = v9;
      unint64_t v14 = +[CKBalloonPluginManager sharedInstance];
      int v15 = [v13 pluginBundleID];
      id v16 = [v13 datasource];
      id v17 = (void *)[v14 newViewControllerForPluginIdentifier:v15 dataSource:v16];

      id v18 = [v6 text];
      id v19 = [v18 string];

      id v20 = [v19 stringByReplacingOccurrencesOfString:*MEMORY[0x1E4F6C110] withString:&stru_1EDE4CA38];
      int v21 = [v20 stringByReplacingOccurrencesOfString:*MEMORY[0x1E4F6C130] withString:&stru_1EDE4CA38];

      if (objc_opt_respondsToSelector())
      {
        long long v22 = [(CKCoreChatController *)self conversation];
        long long v23 = [v22 senderIdentifier];
        [v17 setSender:v23];
      }
      if (objc_opt_respondsToSelector())
      {
        long long v24 = [(CKCoreChatController *)self conversation];
        long long v25 = [v24 recipientStrings];

        [v17 setRecipients:v25];
      }
      [(CKChatController *)self enableSendButtonSpinner];
      id v26 = [(CKChatController *)self entryView];
      int64_t v27 = [v26 contentView];
      [v27 setClearPluginButtonEnabled:0];

      v44[0] = MEMORY[0x1E4F143A8];
      v44[1] = 3221225472;
      v44[2] = __59__CKChatController__validateAndSendComposition_completion___block_invoke;
      v44[3] = &unk_1E56230A8;
      void v44[4] = self;
      id v45 = v6;
      id v46 = v13;
      id v47 = v7;
      id v28 = v13;
      [v17 validatePayloadForSending:v28 associatedText:v21 completionHandler:v44];
    }
    else
    {
      if (v11 && [v9 payloadCollaborationType] == 2) {
        [v6 cleanupCKShareFromComposition];
      }
      id v29 = v6;
      __int16 v30 = [v9 sendAsCopyURL];
      if (v30)
      {
        int v31 = [v9 sendAsCopy];

        if (v31)
        {
          uint64_t v32 = [v9 sendAsCopyURL];
          [v9 setUrl:v32];

          uint64_t v42 = [CKComposition alloc];
          uint64_t v33 = [v29 text];
          id v34 = [v29 subject];
          id v35 = [v29 bizIntent];
          uint64_t v36 = [v29 shelfMediaObject];
          BOOL v37 = [v29 proofreadingInfo];
          uint64_t v43 = [(CKComposition *)v42 initWithText:v33 subject:v34 shelfPluginPayload:v9 bizIntent:v35 shelfMediaObject:v36 proofreadingInfo:v37];

          id v29 = (id)v43;
        }
      }
      id v38 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
      int v39 = [v38 isExpressiveTextEnabled];

      if (v39)
      {
        uint64_t v40 = [(CKChatController *)self entryView];
        id v41 = [v40 contentView];
        [v41 prepareTextEffectsForImmediateMessageSend];
      }
      [(CKChatController *)self sendCompositionIfAllowed:v29];
      if (v7) {
        (*((void (**)(id, uint64_t))v7 + 2))(v7, 1);
      }
    }
  }
  else
  {
    [(CKChatController *)self enableSendButtonSpinner];
    if (IMOSLoggingEnabled())
    {
      uint64_t v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 134217984;
        uint64_t v49 = [v9 payloadCollaborationType];
        _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Sending collaboration item for type %ld", buf, 0xCu);
      }
    }
    -[CKChatController sendCompositionForCollaboration:collaborationType:completion:](self, "sendCompositionForCollaboration:collaborationType:completion:", v6, [v9 payloadCollaborationType], v7);
  }
}

void __59__CKChatController__validateAndSendComposition_completion___block_invoke(uint64_t a1, char a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __59__CKChatController__validateAndSendComposition_completion___block_invoke_2;
  block[3] = &unk_1E5623080;
  char v19 = a2;
  id v13 = v7;
  id v14 = v8;
  id v9 = *(void **)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 32);
  id v16 = v9;
  id v18 = *(id *)(a1 + 56);
  id v17 = *(id *)(a1 + 48);
  id v10 = v8;
  id v11 = v7;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void __59__CKChatController__validateAndSendComposition_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      id v3 = *(void **)(a1 + 32);
      uint64_t v4 = [NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 80)];
      id v5 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138412802;
      id v34 = v3;
      __int16 v35 = 2112;
      uint64_t v36 = v4;
      __int16 v37 = 2112;
      id v38 = v5;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Received payload validation for payload %@. shouldSend %@. localizedInvalidationDescription %@", buf, 0x20u);
    }
  }
  [*(id *)(a1 + 48) disableSendButtonSpinner];
  id v6 = [*(id *)(a1 + 48) entryView];
  id v7 = [v6 contentView];
  [v7 setClearPluginButtonEnabled:1];

  if (*(unsigned char *)(a1 + 80))
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __59__CKChatController__validateAndSendComposition_completion___block_invoke_1021;
    aBlock[3] = &unk_1E5622F40;
    id v29 = *(id *)(a1 + 32);
    id v8 = *(id *)(a1 + 56);
    uint64_t v9 = *(void *)(a1 + 48);
    id v30 = v8;
    uint64_t v31 = v9;
    id v32 = *(id *)(a1 + 72);
    id v10 = (void (**)(void))_Block_copy(aBlock);
    id v11 = [*(id *)(a1 + 32) pluginBundleID];
    uint64_t v12 = IMBalloonExtensionIDWithSuffix();
    uint64_t v13 = [v11 isEqualToString:v12];

    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = *(void **)(a1 + 32);
        id v16 = _Block_copy(v10);
        id v17 = NSNumber;
        id v18 = +[CKPluginExtensionStateObserver sharedInstance];
        char v19 = objc_msgSend(v17, "numberWithBool:", objc_msgSend(v18, "passKitUIPresented"));
        id v20 = [NSNumber numberWithBool:v13];
        *(_DWORD *)long long buf = 138413058;
        id v34 = v15;
        __int16 v35 = 2112;
        uint64_t v36 = v16;
        __int16 v37 = 2112;
        id v38 = v19;
        __int16 v39 = 2112;
        uint64_t v40 = v20;
        _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "Preparing for send after payload validation. payload %@. sendBlock %@. passKitUIPresented %@. isSurf:%@", buf, 0x2Au);
      }
    }
    int v21 = +[CKPluginExtensionStateObserver sharedInstance];
    int v22 = [v21 passKitUIPresented];

    if (v22 & v13) {
      [*(id *)(a1 + 48) setDeferredSendAnimationBlock:v10];
    }
    else {
      v10[2](v10);
    }
  }
  else if (*(void *)(a1 + 40))
  {
    if (IMOSLoggingEnabled())
    {
      long long v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        long long v24 = [*(id *)(a1 + 64) pluginBundleID];
        long long v25 = *(void **)(a1 + 64);
        id v26 = *(void **)(a1 + 40);
        *(_DWORD *)long long buf = 138412802;
        id v34 = v24;
        __int16 v35 = 2112;
        uint64_t v36 = v25;
        __int16 v37 = 2112;
        id v38 = v26;
        _os_log_impl(&dword_18EF18000, v23, OS_LOG_TYPE_INFO, "Payload validation from plugin %@ for payload (%@) failed. reason %@", buf, 0x20u);
      }
    }
    [*(id *)(a1 + 48) showPayloadValidationAlertWithDescription:*(void *)(a1 + 40)];
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __59__CKChatController__validateAndSendComposition_completion___block_invoke_1024;
    block[3] = &unk_1E5620C40;
    void block[4] = *(void *)(a1 + 48);
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void __59__CKChatController__validateAndSendComposition_completion___block_invoke_1021(uint64_t a1)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __59__CKChatController__validateAndSendComposition_completion___block_invoke_2_1022;
  v6[3] = &unk_1E5623058;
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v5 = *(void **)(a1 + 56);
  id v7 = v3;
  uint64_t v8 = v4;
  id v9 = v5;
  +[CKComposition compositionWithShelfPluginPayload:v2 completionHandler:v6];
}

void __59__CKChatController__validateAndSendComposition_completion___block_invoke_2_1022(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) compositionByAppendingComposition:a2];
  objc_msgSend(*(id *)(a1 + 40), "sendCompositionIfAllowed:");
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v3, 1);
  }
}

void __59__CKChatController__validateAndSendComposition_completion___block_invoke_1024(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) entryView];
  [v1 updateEntryView];
}

- (void)showPayloadValidationAlertWithDescription:(id)a3
{
  id v4 = [MEMORY[0x1E4F42728] alertControllerWithTitle:0 message:a3 preferredStyle:1];
  id v5 = (void *)MEMORY[0x1E4F42720];
  id v6 = CKFrameworkBundle();
  id v7 = [v6 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __62__CKChatController_showPayloadValidationAlertWithDescription___block_invoke;
  _OWORD v9[3] = &unk_1E5621178;
  void v9[4] = self;
  uint64_t v8 = [v5 actionWithTitle:v7 style:0 handler:v9];
  [v4 addAction:v8];

  [(CKChatController *)self presentViewController:v4 animated:1 completion:0];
}

uint64_t __62__CKChatController_showPayloadValidationAlertWithDescription___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

- (void)checkForSensitivePhotosAndSendComposition:(id)a3
{
  uint64_t v87 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F6E6D0] sharedManager];
  id v6 = [v4 shelfPluginPayload];
  if (v6) {
    char v7 = 0;
  }
  else {
    char v7 = objc_msgSend((id)objc_msgSend(v4, "balloonViewClass"), "isSubclassOfClass:", objc_opt_class()) ^ 1;
  }

  if (![v5 checksForSensitivityOnSend] || (v7 & 1) != 0)
  {
    [(CKChatController *)self sendComposition:v4];
  }
  else
  {
    id v48 = v5;
    uint64_t v8 = [MEMORY[0x1E4F6E6C8] sharedManager];
    id v9 = [(CKCoreChatController *)self conversation];
    id v10 = [v9 chat];
    id v11 = [v10 chatIdentifier];

    id v12 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v13 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v14 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    dispatch_group_t v15 = dispatch_group_create();
    id v47 = self;
    id v16 = [(CKCoreChatController *)self inputController];
    v80[0] = MEMORY[0x1E4F143A8];
    v80[1] = 3221225472;
    v80[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke;
    v80[3] = &unk_1E56230F8;
    id v17 = v15;
    long long v81 = v17;
    id v18 = v8;
    id v82 = v18;
    id v19 = v11;
    id v83 = v19;
    id v20 = v12;
    id v84 = v20;
    id v21 = v13;
    id v85 = v21;
    [v16 requestPhotoBrowserToEnumerateSelectedImagesUsingBlock:v80];

    int v22 = [v4 mediaObjects];
    v74[0] = MEMORY[0x1E4F143A8];
    v74[1] = 3221225472;
    v74[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_3;
    v74[3] = &unk_1E5623148;
    long long v23 = v17;
    uint64_t v75 = v23;
    id v52 = v18;
    id v76 = v52;
    id v51 = v19;
    id v77 = v51;
    id v50 = v20;
    id v78 = v50;
    id v49 = v14;
    id v79 = v49;
    [v22 enumerateObjectsUsingBlock:v74];

    long long v24 = [v4 shelfPluginPayload];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      long long v25 = v24;
    }
    else {
      long long v25 = 0;
    }
    id v26 = v25;
    int64_t v27 = v26;
    if (v26)
    {
      id v28 = [v26 mediaObjectFromPayload];
      if (v28 || ([v4 shelfMediaObject], (id v28 = objc_claimAutoreleasedReturnValue()) != 0))
      {
        dispatch_group_enter(v23);
        id v29 = [v28 fileURL];
        v69[0] = MEMORY[0x1E4F143A8];
        v69[1] = 3221225472;
        v69[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_5;
        v69[3] = &unk_1E5623120;
        id v70 = v50;
        id v71 = v28;
        id v72 = v49;
        uint64_t v73 = v23;
        id v30 = v28;
        [v52 isSensitiveContent:v29 withChatID:v51 completionHandler:v69];
      }
      else
      {
        objc_msgSend(v27, "__ck_photoCompositionMediaObjects");
        id v30 = (id)objc_claimAutoreleasedReturnValue();
        long long v65 = 0u;
        long long v66 = 0u;
        long long v67 = 0u;
        long long v68 = 0u;
        uint64_t v38 = [v30 countByEnumeratingWithState:&v65 objects:v86 count:16];
        if (v38)
        {
          uint64_t v39 = v38;
          id v44 = v27;
          id v45 = v21;
          id v46 = v4;
          uint64_t v40 = *(void *)v66;
          do
          {
            for (uint64_t i = 0; i != v39; ++i)
            {
              if (*(void *)v66 != v40) {
                objc_enumerationMutation(v30);
              }
              uint64_t v42 = *(void **)(*((void *)&v65 + 1) + 8 * i);
              dispatch_group_enter(v23);
              uint64_t v43 = [v42 fileURL];
              v60[0] = MEMORY[0x1E4F143A8];
              v60[1] = 3221225472;
              v60[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_6;
              v60[3] = &unk_1E5623120;
              id v61 = v50;
              id v62 = v42;
              id v63 = v49;
              long long v64 = v23;
              [v52 isSensitiveContent:v43 withChatID:v51 completionHandler:v60];
            }
            uint64_t v39 = [v30 countByEnumeratingWithState:&v65 objects:v86 count:16];
          }
          while (v39);
          id v21 = v45;
          id v4 = v46;
          int64_t v27 = v44;
        }
      }
    }
    uint64_t v31 = dispatch_get_global_queue(25, 0);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_7;
    block[3] = &unk_1E5623198;
    id v54 = v23;
    id v55 = v50;
    id v56 = v49;
    id v57 = v4;
    id v58 = v21;
    id v59 = v47;
    id v32 = v21;
    id v33 = v4;
    id v34 = v32;
    id v35 = v49;
    id v36 = v50;
    __int16 v37 = v23;
    dispatch_async(v31, block);

    id v4 = v33;
    id v5 = v48;
  }
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  char v7 = [v5 fileURL];

  if (v7)
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    uint64_t v8 = *(void **)(a1 + 40);
    id v9 = [v5 fileURL];
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_2;
    v11[3] = &unk_1E56230D0;
    uint64_t v10 = *(void *)(a1 + 48);
    id v12 = *(id *)(a1 + 56);
    id v13 = v5;
    id v14 = v6;
    id v15 = *(id *)(a1 + 64);
    id v16 = *(id *)(a1 + 32);
    [v8 isSensitiveContent:v9 withChatID:v10 completionHandler:v11];
  }
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_2(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [*(id *)(a1 + 40) fileURL];
    [v3 addObject:v4];

    if (*(void *)(a1 + 48)) {
      objc_msgSend(*(id *)(a1 + 56), "addObject:");
    }
  }
  id v5 = *(NSObject **)(a1 + 64);

  dispatch_group_leave(v5);
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 fileURL];

  if (v4)
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    id v5 = *(void **)(a1 + 40);
    id v6 = [v3 fileURL];
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_4;
    v8[3] = &unk_1E5623120;
    uint64_t v7 = *(void *)(a1 + 48);
    id v9 = *(id *)(a1 + 56);
    id v10 = v3;
    id v11 = *(id *)(a1 + 64);
    id v12 = *(id *)(a1 + 32);
    [v5 isSensitiveContent:v6 withChatID:v7 completionHandler:v8];
  }
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_4(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [*(id *)(a1 + 40) fileURL];
    [v3 addObject:v4];

    [*(id *)(a1 + 48) addObject:*(void *)(a1 + 40)];
  }
  id v5 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v5);
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_5(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [*(id *)(a1 + 40) fileURL];
    [v3 addObject:v4];

    [*(id *)(a1 + 48) addObject:*(void *)(a1 + 40)];
  }
  id v5 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v5);
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_6(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [*(id *)(a1 + 40) fileURL];
    [v3 addObject:v4];

    [*(id *)(a1 + 48) addObject:*(void *)(a1 + 40)];
  }
  id v5 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v5);
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_7(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)(a1 + 32);
  dispatch_time_t v3 = dispatch_time(0, 5000000000);
  if (dispatch_group_wait(v2, v3) && IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Timed out waiting for media analysis to complete.", buf, 2u);
    }
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_1034;
  block[3] = &unk_1E5623170;
  id v8 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  id v11 = v5;
  uint64_t v12 = v6;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void __62__CKChatController_checkForSensitivePhotosAndSendComposition___block_invoke_1034(id *a1)
{
  if ([a1[4] count] || objc_msgSend(a1[5], "count"))
  {
    id v11 = [a1[6] compositionWithExpressiveSendStyleID:&stru_1EDE4CA38];
    uint64_t v2 = +[CKiOSCommSafetySendContext contextWithComposition:sensitiveMediaObjects:identifiersOfShelvedImages:](CKiOSCommSafetySendContext, "contextWithComposition:sensitiveMediaObjects:identifiersOfShelvedImages:");
    dispatch_time_t v3 = CKCommSafetyReceiveContextDictionary(v2);
    if ([a1[8] effectPickerIsPresented]) {
      [a1[8] dismissEffectPickerAnimated:1];
    }
    id v4 = [getUSUIInterventionViewControllerClass() viewControllerWithWorkflow:1 contextDictionary:v3];
    [v4 setInterventionDelegate:a1[8]];
    id v5 = a1[8];
    uint64_t v6 = (void *)v5[178];
    v5[178] = v4;
    id v7 = v4;

    [a1[8] presentViewController:v7 animated:1 completion:0];
  }
  else
  {
    id v8 = [MEMORY[0x1E4F6E710] sharedInstance];
    [v8 logPrivatizedImageSentEvent:0];

    id v9 = a1[8];
    id v10 = a1[6];
    [v9 sendComposition:v10];
  }
}

- (void)presentCommSafetyInterventionIfNecessaryForFileURL:(id)a3 withSendContext:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = [MEMORY[0x1E4F6E6D0] sharedManager];
  if ([v11 checksForSensitivityOnSend])
  {
    uint64_t v12 = [MEMORY[0x1E4F6E6C8] sharedManager];
    id v13 = [(CKCoreChatController *)self conversation];
    id v14 = [v13 chat];
    id v15 = [v14 chatIdentifier];

    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    void v16[2] = __98__CKChatController_presentCommSafetyInterventionIfNecessaryForFileURL_withSendContext_completion___block_invoke;
    v16[3] = &unk_1E56231E8;
    id v17 = v9;
    id v18 = self;
    id v19 = v10;
    [v12 isSensitiveContent:v8 withChatID:v15 completionHandler:v16];
  }
  else
  {
    (*((void (**)(id, void))v10 + 2))(v10, 0);
  }
}

void __98__CKChatController_presentCommSafetyInterventionIfNecessaryForFileURL_withSendContext_completion___block_invoke(uint64_t a1, char a2)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __98__CKChatController_presentCommSafetyInterventionIfNecessaryForFileURL_withSendContext_completion___block_invoke_2;
  v6[3] = &unk_1E56231C0;
  char v10 = a2;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = *(void **)(a1 + 48);
  id v7 = v3;
  uint64_t v8 = v4;
  id v9 = v5;
  dispatch_async(MEMORY[0x1E4F14428], v6);
}

void __98__CKChatController_presentCommSafetyInterventionIfNecessaryForFileURL_withSendContext_completion___block_invoke_2(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    CKCommSafetyReceiveContextDictionary(*(void **)(a1 + 32));
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v2 = [getUSUIInterventionViewControllerClass() viewControllerWithWorkflow:1 contextDictionary:v7];
    [v2 setInterventionDelegate:*(void *)(a1 + 40)];
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(v3 + 1424);
    *(void *)(v3 + 1424) = v2;
    id v5 = v2;

    [*(id *)(a1 + 40) presentViewController:v5 animated:1 completion:0];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    uint64_t v6 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v6();
  }
}

- (void)setPreferredAudioMessageAppLaunchBehaviorForComposition:(id)a3
{
  id v11 = a3;
  uint64_t v4 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  char v5 = [v4 isAudioMessagesEntryViewRecordingEnabled];

  if ((v5 & 1) == 0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      BOOL v6 = [(CKChatController *)self audioMessageWasPlayedAndIsLatestMessage];
      id v7 = [(CKCoreChatController *)self conversation];
      uint64_t v8 = [v7 chat];
      id v9 = v8;
      if (v6)
      {
        uint64_t v10 = 0;
LABEL_7:
        [v8 setPrefersTextResponseToIncomingAudioMessages:v10];

        goto LABEL_8;
      }
    }
    else
    {
      id v7 = [(CKCoreChatController *)self conversation];
      uint64_t v8 = [v7 chat];
      id v9 = v8;
    }
    uint64_t v10 = 1;
    goto LABEL_7;
  }
LABEL_8:
}

- (void)_handleDictationStarted:(id)a3
{
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F6E778], "sharedFeatureFlags", a3);
  int v5 = [v4 isAudioMessagesEntryViewRecordingEnabled];

  if (v5) {
    [(CKChatController *)self setShouldShowAudioButtonInEntryView:0];
  }

  [(CKChatController *)self _updateEntryViewFrameIfNeeded:1];
}

- (void)_handleDictationEnded:(id)a3
{
}

- (void)setShouldShowAudioButtonInEntryView:(BOOL)a3
{
  BOOL v3 = a3;
  int v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v6 = [v5 isAudioMessagesEntryViewRecordingEnabled];

  if (v6)
  {
    id v8 = [(CKCoreChatController *)self conversation];
    id v7 = [v8 chat];
    [v7 setShouldShowAudioButtonInEntryView:v3];
  }
}

- (void)sendCompositionIfAllowed:(id)a3
{
  id v8 = a3;
  uint64_t v4 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  char v5 = [v4 isAudioMessagesEntryViewRecordingEnabled];

  if ((v5 & 1) == 0) {
    [(CKChatController *)self setPreferredAudioMessageAppLaunchBehaviorForComposition:v8];
  }
  int v6 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v7 = [v6 isAudioMessagesEntryViewRecordingEnabled];

  if (v7)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [(CKChatController *)self setShouldShowAudioButtonInEntryView:1];
    }
  }
  [(CKChatController *)self checkForSensitivePhotosAndSendComposition:v8];
}

- (void)didConfirmForInterventionViewController:(id)a3
{
  id v4 = a3;
  char v5 = [v4 contextDictionary];
  id v20 = [v5 objectForKey:@"CKCommSafetyContextKeyiOSSend"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    int v6 = v20;
  }
  else {
    int v6 = 0;
  }
  id v7 = v6;
  id v8 = [v4 contextDictionary];
  id v9 = [v8 objectForKey:@"CKCommSafetyContextKeyStickerDropSend"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  id v11 = v10;
  uint64_t v12 = [v4 contextDictionary];
  id v13 = [v12 objectForKey:@"CKCommSafetyContextKeyAutomaticallyPlacedStickerSend"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v14 = v13;
  }
  else {
    id v14 = 0;
  }
  id v15 = v14;
  id v16 = [v4 contextDictionary];

  id v17 = [v16 objectForKey:@"CKCommSafetyContextKeyStickerTapbackSend"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v18 = v17;
  }
  else {
    id v18 = 0;
  }
  id v19 = v18;
  [(CKChatController *)self _dismissInterventionController];
  if (v7)
  {
    [(CKChatController *)self handleiOSConfirmCommSafetySendContext:v7];
  }
  else if (v11)
  {
    [(CKChatController *)self handleStickerDropConfirmCommSafetySendContext:v11];
  }
  else if (v19)
  {
    [(CKChatController *)self handleStickerTapbackConfirmCommSafetySendContext:v19];
  }
  else if (v15)
  {
    [(CKChatController *)self handleAutomaticallyPlacedStickerCommSafetySendContext:v15];
  }
}

- (void)handleiOSConfirmCommSafetySendContext:(id)a3
{
  id v4 = [a3 composition];
  [(CKChatController *)self sendComposition:v4];
}

- (void)handleStickerTapbackConfirmCommSafetySendContext:(id)a3
{
  id v4 = a3;
  id v7 = [v4 stickerTapback];
  char v5 = [v4 parentMessagePartChatItem];

  int v6 = [(CKCoreChatController *)self chat];
  [v6 sendTapback:v7 forChatItem:v5];
}

- (void)handleAutomaticallyPlacedStickerCommSafetySendContext:(id)a3
{
  id v4 = a3;
  id v17 = [v4 sticker];
  char v5 = [v4 stickerReactionSession];
  int v6 = [v4 chatItem];
  id v7 = [v4 parentChatItem];
  [v4 stickerFrame];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  id v16 = [v4 animationCompletionHandler];

  -[CKChatController _sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:](self, "_sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:", v17, v5, v6, v7, v16, v9, v11, v13, v15);
}

- (void)didRejectForInterventionViewController:(id)a3
{
  id v4 = [a3 contextDictionary];
  [(CKChatController *)self _clearStagedSensitiveContentUsingContextDictionary:v4];

  [(CKChatController *)self _dismissInterventionController];
}

- (void)_clearStagedSensitiveContentUsingContextDictionary:(id)a3
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  char v5 = [v4 objectForKey:@"CKCommSafetyContextKeyiOSSend"];
  int v6 = [v5 composition];
  id v7 = [v5 sensitiveMediaObjects];
  double v8 = [v5 identifiersOfShelvedImages];
  if ([v7 count])
  {
    double v9 = [v6 compositionByRemovingMediaObjects:v7];
    double v10 = [v9 shelfPluginPayload];
    if (v10)
    {
      double v11 = [v6 shelfMediaObject];
      int v12 = [v7 containsObject:v11];

      if (v12)
      {
        long long v24 = [CKComposition alloc];
        double v13 = [v9 text];
        long long v23 = [v9 subject];
        double v14 = [v9 bizIntent];
        double v15 = [v9 proofreadingInfo];
        uint64_t v16 = [(CKComposition *)v24 initWithText:v13 subject:v23 shelfPluginPayload:0 bizIntent:v14 shelfMediaObject:0 proofreadingInfo:v15];
        id v25 = v4;
        id v17 = (void *)v16;

        double v9 = v17;
        id v4 = v25;
      }
    }
    [(CKChatController *)self setComposition:v9];
  }
  id v18 = [(CKCoreChatController *)self inputController];
  [v18 requestPhotoBrowserToUnstageImages:v8];

  if (IMOSLoggingEnabled())
  {
    id v19 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      id v20 = [(CKCoreChatController *)self conversation];
      id v21 = [v20 chat];
      int v22 = [v21 chatIdentifier];
      *(_DWORD *)long long buf = 138412546;
      int64_t v27 = v6;
      __int16 v28 = 2112;
      id v29 = v22;
      _os_log_impl(&dword_18EF18000, v19, OS_LOG_TYPE_INFO, "Not sending composition %@ for chat %@ since composition flagged as sensitive and user clicked Don't Send", buf, 0x16u);
    }
  }
}

- (void)_dismissInterventionController
{
  [(SCUIInterventionViewController *)self->_commSafetyInterventionController dismissModalViewControllerWithTransition:9];
  commSafetyInterventionController = self->_commSafetyInterventionController;
  self->_commSafetyInterventionController = 0;
}

- (id)mediaObjectsFromComposition:(id)a3
{
  id v3 = a3;
  id v4 = [v3 mediaObjects];
  char v5 = (void *)[v4 mutableCopy];

  int v6 = [v3 shelfPluginPayload];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v7 = v6;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;
  double v9 = v8;
  if (v8)
  {
    if ([v8 payloadCollaborationType] == 1
      && [v9 sendAsCopy]
      && ([v3 shelfMediaObject], double v10 = objc_claimAutoreleasedReturnValue(),
                                                v10,
                                                v10))
    {
      uint64_t v11 = [v3 shelfMediaObject];
    }
    else
    {
      int v12 = [v9 mediaObjectFromPayload];

      if (!v12)
      {
        double v13 = objc_msgSend(v9, "__ck_photoCompositionMediaObjects");
        if ([v13 count]) {
          [v5 addObjectsFromArray:v13];
        }
LABEL_15:

        goto LABEL_16;
      }
      uint64_t v11 = [v9 mediaObjectFromPayload];
    }
    double v13 = (void *)v11;
    if (!v11) {
      goto LABEL_16;
    }
    [v5 addObject:v11];
    goto LABEL_15;
  }
LABEL_16:
  double v14 = (void *)[v5 copy];

  return v14;
}

- (void)flagSensitiveMediaObjects:(id)a3
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  char v5 = [MEMORY[0x1E4F6E6D0] sharedManager];
  if ([v5 checksForSensitivityOnSend])
  {
    __int16 v37 = v5;
    id v38 = v4;
    int v6 = [(CKChatController *)self mediaObjectsFromComposition:v4];
    id v39 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v7 = [MEMORY[0x1E4F6E6C8] sharedManager];
    id v36 = self;
    id v8 = [(CKCoreChatController *)self conversation];
    double v9 = [v8 chat];
    double v10 = [v9 chatIdentifier];

    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    id obj = v6;
    uint64_t v11 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v43;
      do
      {
        uint64_t v14 = 0;
        uint64_t v40 = v12;
        do
        {
          if (*(void *)v43 != v13) {
            objc_enumerationMutation(obj);
          }
          double v15 = *(void **)(*((void *)&v42 + 1) + 8 * v14);
          uint64_t v16 = [v15 transfer];
          id v17 = [v16 fileURL];

          id v18 = [v7 cachedResultForContentAttachment:v17 withChatID:v10];
          id v19 = [v15 transfer];
          id v20 = [v19 guid];

          if (v18) {
            BOOL v21 = v20 == 0;
          }
          else {
            BOOL v21 = 1;
          }
          if (!v21)
          {
            int v22 = v10;
            long long v23 = v7;
            if ([v18 BOOLValue])
            {
              long long v24 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfURL:v17];
              if (v24)
              {
                id v25 = (void *)[objc_alloc(MEMORY[0x1E4F6BC80]) initWithIdentifier:v20 imageData:v24];
                [v39 addObject:v25];
              }
            }
            if ([v18 BOOLValue]) {
              uint64_t v26 = 2;
            }
            else {
              uint64_t v26 = 0;
            }
            int64_t v27 = [MEMORY[0x1E4F6BCC8] sharedInstance];
            __int16 v28 = [v27 transferForGUID:v20];

            [v28 setCommSafetySensitive:v26];
            id v7 = v23;
            double v10 = v22;
            uint64_t v12 = v40;
          }

          ++v14;
        }
        while (v12 != v14);
        uint64_t v12 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
      }
      while (v12);
    }

    if ([v39 count])
    {
      id v29 = (void *)MEMORY[0x1E4F6BC78];
      [(CKCoreChatController *)v36 conversation];
      v31 = uint64_t v30 = v7;
      [v31 chat];
      v33 = id v32 = v10;
      id v34 = [v33 localTypingMessageGUID];
      id v35 = [(CKCoreChatController *)v36 chat];
      [v29 registerEvent:0 eventType:0 messageGUID:v34 chat:v35 forImages:v39];

      double v10 = v32;
      id v7 = v30;
    }

    char v5 = v37;
    id v4 = v38;
  }
}

- (void)messageEntryViewDidChange:(id)a3 isTextChange:(BOOL)a4 isShelfChange:(BOOL)a5
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  id v30 = a3;
  id v8 = [(CKChatController *)self typingUpdater];
  [v8 setNeedsUpdate];

  if (![(CKChatController *)self isAnimatingMessageSend]) {
    goto LABEL_3;
  }
  double v9 = [v30 contentView];
  double v10 = [v9 textView];
  uint64_t v11 = [v10 text];
  uint64_t v12 = [v11 length];

  if (v12)
  {
LABEL_3:
    int v13 = [v30 isShowingAudioRecordingView];
    uint64_t v14 = [MEMORY[0x1E4F6E778] sharedInstance];
    int v15 = [v14 isSendMenuEnabled];

    int v16 = CKIsRunningInMacCatalyst();
    BOOL v17 = [(CKChatController *)self hasFinishedRestoringDraftState]
       || CKIsRunningInMessagesViewService() != 0;
    id v18 = [(CKCoreChatController *)self delegate];
    char v19 = objc_opt_respondsToSelector();

    if (v19)
    {
      id v20 = [(CKCoreChatController *)self delegate];
      int v21 = [v20 hasDetailsNavigationController];

      if (!v5) {
        goto LABEL_8;
      }
    }
    else
    {
      int v21 = 0;
      if (!v5)
      {
LABEL_8:
        if ((v13 | v21) == 1) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
    }
    if (v16) {
      int v22 = 0;
    }
    else {
      int v22 = v15;
    }
    if ((v22 | v13 | v21)) {
      goto LABEL_16;
    }
LABEL_15:
    BOOL v17 = 0;
LABEL_16:
    [(CKChatController *)self _updateEntryViewFrameIfNeeded:v17];
  }
  [(CKCoreChatController *)self _updateTitleAnimated:1];
  if (![(CKScrollViewController *)self isKeyboardVisible]) {
    goto LABEL_22;
  }
  long long v23 = [(CKChatController *)self entryView];
  long long v24 = [v23 composition];
  if ([v24 hasContent]) {
    goto LABEL_21;
  }
  id v25 = [(CKChatController *)self entryView];
  if ([v25 animatingLayoutChange])
  {

LABEL_21:
    goto LABEL_22;
  }
  BOOL v29 = [(CKChatController *)self isShowingEmojiKeyboard];

  if (!v29) {
    [(CKChatController *)self updateAppStripVisibility:1 animated:1];
  }
LABEL_22:
  uint64_t v26 = [(CKCoreChatController *)self collectionViewController];
  int64_t v27 = [[CKTranscriptScrollIntentEntryViewChangedTrigger alloc] initWithEntryView:v30 isTextChange:v6 isShelfChange:v5 isSendLaterPluginChange:0];
  __int16 v28 = [(CKScrollViewController *)self activeKeyboardAppearanceAnimationProperties];
  [v26 updateScrollIntentWithTrigger:v27 activeKeyboardAppearanceAnimationProperties:v28];
}

- (void)messageEntryViewRecordingDidChange:(id)a3
{
  objc_msgSend(MEMORY[0x1E4F42FF8], "attemptRotationToDeviceOrientation", a3);
  id v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 stopPlayingAudio];

  id v5 = [(CKChatController *)self typingUpdater];
  [v5 setNeedsUpdate];
}

- (id)inputContextHistoryForMessageEntryView:(id)a3
{
  id v4 = [(CKCoreChatController *)self conversation];
  if ([v4 isKnownSender])
  {
    id v5 = [(CKCoreChatController *)self collectionViewController];
    BOOL v6 = [v5 inputContextHistory];
  }
  else
  {
    id v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)double v9 = 0;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Not providing input context history because conversation is with an unknown sender.", v9, 2u);
    }

    BOOL v6 = 0;
  }

  return v6;
}

- (BOOL)messageEntryViewShouldBeginEditing:(id)a3
{
  return ![(CKChatController *)self isFullScreenBalloonViewOnScreen];
}

- (BOOL)_transcriptScrollsOnEntryViewActivation
{
  uint64_t v2 = [(CKChatController *)self collectionView];
  unint64_t v3 = [v2 transcriptScrollIntent];

  if (CKIsRunningInMacCatalyst()
    || [MEMORY[0x1E4F42B08] isInHardwareKeyboardMode])
  {
    return !v3 || v3 == 6;
  }
  else if (v3 <= 6)
  {
    return (0x47u >> v3) & 1;
  }
  else
  {
    return 0;
  }
}

- (void)messageEntryViewDidBeginEditing:(id)a3
{
  if ([(CKChatController *)self _wantsThreeColumnLayout]
    && !CKIsRunningInMacCatalyst())
  {
    id v4 = [(CKChatController *)self splitViewController];
    [v4 hideColumn:0];
  }
  [(CKChatController *)self registerForTextInputPayloadHandling];
  if (![(CKChatController *)self hasAlreadyPresentedSatelliteConnectionBanner])
  {
    id v5 = [MEMORY[0x1E4F6BC48] sharedInstance];
    BOOL v6 = [(CKCoreChatController *)self conversation];
    id v7 = [v6 chat];
    [v5 presentSatelliteConnectionBannerIfNecessaryWithChat:v7 withReason:*MEMORY[0x1E4F6BBA8] ignoreTimerLimit:1];

    [(CKChatController *)self setHasAlreadyPresentedSatelliteConnectionBanner:1];
  }
}

- (void)messageEntryViewDidBeginEditingNotAlreadyActive:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self targetFirstResponder] == 1) {
    [(CKChatController *)self setTargetFirstResponder:0];
  }
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Learned messageEntryViewDidBeginEditingNotAlreadyActive, updating scrollIntent.", v11, 2u);
    }
  }
  BOOL v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [[CKTranscriptScrollIntentEntryViewActiveTrigger alloc] initWithChatController:self];
  id v8 = [(CKScrollViewController *)self activeKeyboardAppearanceAnimationProperties];
  [v6 updateScrollIntentWithTrigger:v7 activeKeyboardAppearanceAnimationProperties:v8];

  [(CKChatController *)self updateAppStripVisibility:1 animated:0];
  double v9 = [(CKChatController *)self inlineReplyController];
  if (v9
    || [(CKChatController *)self entryViewWasActiveOnContextMenuPresentation])
  {
  }
  else if (!CKIsRunningInMessagesTranscriptExtension())
  {
    [(CKChatController *)self setupScrollingForKeyboardInteraction];
  }
  [(CKChatController *)self setEntryViewWasActiveOnContextMenuPresentation:0];
  [(CKChatController *)self _setAvoidanceInsetsNeedsUpdate];
  if (CKIsRunningInMacCatalyst())
  {
    double v10 = [(CKCoreChatController *)self collectionViewController];
    [v10 deselectAllBalloons];
  }
}

- (BOOL)messageEntryView:(id)a3 shouldInsertMediaObjects:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKCoreChatController *)self conversation];
  double v9 = [v7 composition];

  double v10 = [v9 compositionByAppendingMediaObjects:v6];

  LOBYTE(v6) = [v8 canSendComposition:v10 error:0];
  return (char)v6;
}

- (void)messageEntryView:(id)a3 didInsertPluginPayload:(id)a4
{
  id v5 = objc_msgSend(a4, "pluginBundleID", a3);
  id v6 = IMBalloonExtensionIDWithSuffix();
  int v7 = [v5 isEqualToString:v6];

  if (CKIsRunningInMacCatalyst() && v7)
  {
    id v8 = [(CKChatController *)self viewControllerForChatInputModalPresentation];
    [v8 dismissViewControllerAnimated:1 completion:0];

    id v9 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v9 postNotificationName:@"CKAnimojiStickerPopoverWillHide" object:0];
  }
}

- (void)messageEntryViewSendButtonHit:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self effectPickerWindow];

  if (!v5)
  {
    if (CKIsRunningInMacCatalyst())
    {
      id v6 = [(CKChatController *)self viewControllerForChatInputModalPresentation];
      [v6 dismissViewControllerAnimated:1 completion:0];
    }
    int v7 = +[CKAdaptivePresentationController sharedInstance];
    [v7 dismissViewControllerAnimated:1 completion:0];

    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = __50__CKChatController_messageEntryViewSendButtonHit___block_invoke;
    v8[3] = &unk_1E5622818;
    void v8[4] = self;
    [v4 compositionWithAcceptedAutocorrection:v8];
  }
}

uint64_t __50__CKChatController_messageEntryViewSendButtonHit___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) selectAccountAndSendComposition:a2 completion:0];
}

- (void)selectAccountAndSendComposition:(id)a3 completion:(id)a4
{
  id v9 = a3;
  id v6 = a4;
  int v7 = [(CKCoreChatController *)self chat];
  char v8 = [v7 isStewieChat];

  if ((v8 & 1) != 0 || !IMSharedHelperDeviceHasMultipleSubscriptions()) {
    [(CKChatController *)self _validateAndSendComposition:v9 completion:v6];
  }
  else {
    [(CKChatController *)self presentActionMenuForAccountSelection:v9 completion:v6];
  }
}

- (void)messageEntryViewPopulatePreviousSentMessage:(id)a3
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v25 = [(CKCoreChatController *)self collectionViewController];
  id v4 = [v25 chatItems];
  id v5 = [(CKChatController *)self lastPopulatedMessageGuidFromMe];
  char v6 = v5 == 0;

  if (!v5)
  {
    int v7 = [(CKChatController *)self entryView];
    char v8 = [v7 composition];
    [(CKChatController *)self setOriginalComposition:v8];
  }
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v9 = objc_msgSend(v4, "reverseObjectEnumerator", v4);
  uint64_t v10 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v27;
    while (2)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v27 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          int v15 = [v14 IMChatItem];
          if ([v15 isFromMe])
          {
            int v16 = [v15 guid];
            if (v6)
            {
              [(CKChatController *)self setLastPopulatedMessageGuidFromMe:v16];
              id v18 = v14;
              char v19 = [(CKChatController *)self entryView];
              id v20 = [CKComposition alloc];
              int v21 = [v18 text];
              int v22 = [v18 subject];

              long long v23 = [(CKComposition *)v20 initWithText:v21 subject:v22 shelfPluginPayload:0];
              [v19 setComposition:v23];

              goto LABEL_17;
            }
            BOOL v17 = [(CKChatController *)self lastPopulatedMessageGuidFromMe];
            char v6 = [v16 isEqualToString:v17];
          }
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
      if (v11) {
        continue;
      }
      break;
    }
  }
LABEL_17:
}

- (void)messageEntryViewPopulateNextSentMessage:(id)a3
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v4 = [(CKChatController *)self lastPopulatedMessageGuidFromMe];

  if (v4)
  {
    long long v24 = [(CKCoreChatController *)self collectionViewController];
    [v24 chatItems];
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v6 = [v5 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      char v8 = 0;
      uint64_t v9 = *(void *)v26;
      while (2)
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v26 != v9) {
            objc_enumerationMutation(v5);
          }
          uint64_t v11 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v12 = [v11 IMChatItem];
            if ([v12 isFromMe])
            {
              int v13 = [v12 guid];
              if (v8)
              {
                [(CKChatController *)self setLastPopulatedMessageGuidFromMe:v13];
                id v18 = v11;
                char v19 = [(CKChatController *)self entryView];
                id v20 = [CKComposition alloc];
                int v21 = [v18 text];
                int v22 = [v18 subject];

                long long v23 = [(CKComposition *)v20 initWithText:v21 subject:v22 shelfPluginPayload:0];
                [v19 setComposition:v23];

                return;
              }
              uint64_t v14 = [(CKChatController *)self lastPopulatedMessageGuidFromMe];
              char v8 = [v13 isEqualToString:v14];
            }
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v25 objects:v29 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }
  }
  [(CKChatController *)self setLastPopulatedMessageGuidFromMe:0];
  int v15 = [(CKChatController *)self originalComposition];

  if (v15)
  {
    int v16 = [(CKChatController *)self entryView];
    BOOL v17 = [(CKChatController *)self originalComposition];
    [v16 setComposition:v17];

    [(CKChatController *)self setOriginalComposition:0];
  }
}

- (void)_passKitUIDismissed:(id)a3
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = NSNumber;
      uint64_t v7 = +[CKPluginExtensionStateObserver sharedInstance];
      char v8 = objc_msgSend(v6, "numberWithBool:", objc_msgSend(v7, "passKitUIPresented"));
      uint64_t v9 = [(CKChatController *)self deferredSendAnimationBlock];
      uint64_t v10 = _Block_copy(v9);
      *(_DWORD *)long long buf = 138412546;
      BOOL v17 = v8;
      __int16 v18 = 2112;
      char v19 = v10;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "passKit UI dismissed. PassKitUIPresented %@. sendAnimationBlock %@", buf, 0x16u);
    }
  }
  uint64_t v11 = [(CKChatController *)self deferredSendAnimationBlock];
  if (v11)
  {
    uint64_t v12 = +[CKPluginExtensionStateObserver sharedInstance];
    char v13 = [v12 passKitUIPresented];

    if ((v13 & 1) == 0)
    {
      uint64_t v14 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v14 removeObserver:self name:@"CKPluginExtensionStateObserverPassKitUIDismissed" object:0];

      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __40__CKChatController__passKitUIDismissed___block_invoke;
      block[3] = &unk_1E5620C40;
      void block[4] = self;
      dispatch_async(MEMORY[0x1E4F14428], block);
    }
  }
}

uint64_t __40__CKChatController__passKitUIDismissed___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) deferredSendAnimationBlock];
  v2[2]();

  unint64_t v3 = *(void **)(a1 + 32);

  return [v3 setDeferredSendAnimationBlock:0];
}

- (void)messageEntryViewPlusButtonHit:(id)a3
{
  id v4 = IMLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Plus button hit", v5, 2u);
  }

  [(CKChatController *)self _beginDeferringSystemNavigationPopGestureForPlusButton];
}

- (unint64_t)preferredScreenEdgesDeferringSystemGestures
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  unint64_t result = [(CKChatController *)&v4 preferredScreenEdgesDeferringSystemGestures];
  if (self->_deferSystemNavigationPopGestureForPlusButton) {
    result |= 2uLL;
  }
  return result;
}

- (void)_beginDeferringSystemNavigationPopGestureForPlusButton
{
  if (!self->_deferSystemNavigationPopGestureForPlusButton)
  {
    unint64_t v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Began deferring system navigation pop gesture for PlusButton", v7, 2u);
    }

    self->_deferSystemNavigationPopGestureForPlusButton = 1;
    objc_super v4 = [(CKChatController *)self navigationController];
    id v5 = [v4 interactivePopGestureRecognizer];
    [v5 setDelaysTouchesBegan:0];

    [(CKChatController *)self setNeedsUpdateOfScreenEdgesDeferringSystemGestures];
    uint64_t v6 = [(CKCoreChatController *)self delegate];
    [v6 chatControllerDidChangeDeferringSystemNavigationPopGestureForPlusButton:self];
  }
}

- (void)_endDeferringSystemNavigationPopGestureForPlusButton
{
  if (self->_deferSystemNavigationPopGestureForPlusButton)
  {
    unint64_t v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Ended deferring system navigation pop gesture for PlusButton", v7, 2u);
    }

    self->_deferSystemNavigationPopGestureForPlusButton = 0;
    objc_super v4 = [(CKChatController *)self navigationController];
    id v5 = [v4 interactivePopGestureRecognizer];
    [v5 setDelaysTouchesBegan:1];

    [(CKChatController *)self setNeedsUpdateOfScreenEdgesDeferringSystemGestures];
    uint64_t v6 = [(CKCoreChatController *)self delegate];
    [v6 chatControllerDidChangeDeferringSystemNavigationPopGestureForPlusButton:self];
  }
}

- (CGSize)messageEntryViewMaxShelfPluginViewSize:(id)a3
{
  [(CKChatController *)self balloonMaxWidth];
  double v4 = v3;
  id v5 = +[CKUIBehavior sharedBehaviors];
  [v5 maxTranscriptPortraitHeight];
  double v7 = v6;

  double v8 = v4;
  double v9 = v7;
  result.CGFloat height = v9;
  result.CGFloat width = v8;
  return result;
}

- (BOOL)messageEntryViewWidth:(double *)a3 andOffset:(double *)a4
{
  BOOL v4 = 0;
  if (a3 && a4)
  {
    double v8 = [(CKChatController *)self view];
    uint64_t v9 = [v8 window];
    BOOL v4 = v9 != 0;
    if (!v9)
    {
LABEL_24:

      return v4;
    }
    uint64_t v10 = (void *)v9;
    uint64_t v11 = [(CKChatController *)self view];
    uint64_t v12 = [v11 superview];

    if (v12)
    {
      double v8 = [(CKChatController *)self splitViewController];
      if (v8)
      {
LABEL_6:
        double v13 = 0.0;
        if (![(CKChatController *)self isCollapsed]
          && ![(id)*MEMORY[0x1E4F43630] userInterfaceLayoutDirection])
        {
          if ([(CKChatController *)self _wantsThreeColumnLayout])
          {
            uint64_t v14 = [v8 viewControllerForColumn:2];
            int v15 = [v14 view];
            [v15 bounds];
            double v17 = v16;
            double v19 = v18;

            uint64_t v20 = [v14 view];
            int v21 = [(CKChatController *)self view];
            int v22 = [v21 window];
            objc_msgSend(v20, "convertPoint:toView:", v22, v17, v19);
            double v13 = v23;
          }
          else
          {
            [v8 primaryColumnWidth];
            double v28 = v27;
            if (CKPixelWidth_once_2 != -1) {
              dispatch_once(&CKPixelWidth_once_2, &__block_literal_global_3610);
            }
            double v13 = v28 + *(double *)&CKPixelWidth_sPixel_2;
          }
        }
        goto LABEL_18;
      }
      long long v24 = [(CKChatController *)self navigationController];
      long long v25 = [v24 presentingViewController];
      long long v26 = [v25 presentingViewController];
      double v8 = [v26 splitViewController];

      if ([v8 isCollapsed])
      {

        double v8 = 0;
      }
      else if (v8)
      {
        goto LABEL_6;
      }
      double v13 = 0.0;
LABEL_18:
      long long v29 = [(CKChatController *)self view];
      [v29 bounds];
      double v31 = v30;
      id v32 = [(CKChatController *)self view];
      id v33 = [v32 window];
      [v33 bounds];
      double v35 = v34;

      objc_opt_class();
      if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
      {
        if (v13 == 0.0 && v31 < v35)
        {
          id v36 = [(CKChatController *)self view];
          __int16 v37 = [(CKChatController *)self view];
          [v37 origin];
          objc_msgSend(v36, "convertPoint:toView:", 0);
          double v13 = v38;
        }
      }
      id v39 = [(CKChatController *)self view];
      [v39 bounds];
      *(void *)a3 = v40;

      *a4 = v13;
      goto LABEL_24;
    }
    return 0;
  }
  return v4;
}

- (CGRect)messageEntryView:(id)a3 frameInThrowViewCoordinatesForView:(id)a4
{
  id v5 = a4;
  double v6 = [(CKChatController *)self throwAnimationContainerSuperview:0];
  [v5 bounds];
  objc_msgSend(v5, "convertRect:toView:", v6);
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  double v15 = v8;
  double v16 = v10;
  double v17 = v12;
  double v18 = v14;
  result.size.CGFloat height = v18;
  result.size.CGFloat width = v17;
  result.origin.CGFloat y = v16;
  result.origin.CGFloat x = v15;
  return result;
}

- (void)openURLInExtensionContextForMode:(id)a3
{
  id v4 = [(CKChatController *)self launchURLForMode:a3];
  double v3 = [MEMORY[0x1E4F42738] sharedApplication];
  [v3 openURL:v4 options:MEMORY[0x1E4F1CC08] completionHandler:0];
}

- (id)launchURLForMode:(id)a3
{
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F6BC40] sharedRegistry];
  double v6 = [(CKCoreChatController *)self conversation];
  double v7 = [v6 chat];
  double v8 = [(CKChatController *)self entryView];
  double v9 = [v8 composition];
  double v10 = [v9 text];
  double v11 = [v10 string];
  double v12 = [v5 messagesURLWithChat:v7 orHandles:0 withMessageText:v11];

  double v13 = [MEMORY[0x1E4F29088] componentsWithURL:v12 resolvingAgainstBaseURL:0];
  double v14 = (void *)MEMORY[0x1E4F1CA48];
  double v15 = [v13 queryItems];
  double v16 = [v14 arrayWithArray:v15];

  double v17 = [(CKChatController *)self messageGUIDForTranscriptExtension];
  uint64_t v18 = [v17 length];

  if (v18)
  {
    double v19 = (void *)MEMORY[0x1E4F290C8];
    uint64_t v20 = [(CKChatController *)self messageGUIDForTranscriptExtension];
    int v21 = [v19 queryItemWithName:@"message-guid" value:v20];
    [v16 addObject:v21];
  }
  int v22 = [MEMORY[0x1E4F290C8] queryItemWithName:@"inputmode" value:v4];
  [v16 addObject:v22];

  double v23 = [MEMORY[0x1E4F290C8] queryItemWithName:@"overlay" value:@"1"];
  [v16 addObject:v23];

  [v13 setQueryItems:v16];
  long long v24 = [v13 URL];

  return v24;
}

- (BOOL)shouldMessageEntryViewReportBrowserButtonHitToInputDelegate:(id)a3
{
  id v4 = a3;
  if (CKIsRunningInMessagesTranscriptExtension())
  {
    [(CKChatController *)self openURLInExtensionContextForMode:@"apps"];
  }
  else
  {
    double v7 = [(CKCoreChatController *)self inputController];
    char v8 = [v7 isInputViewVisible];

    if (v8)
    {
      BOOL v5 = 1;
      goto LABEL_4;
    }
    int v9 = [v4 shouldShowAppStrip];
    uint64_t v10 = v9 ^ 1u;
    CKSetShowAppStripInEntryView(v9 ^ 1);
    double v11 = +[CKUIBehavior sharedBehaviors];
    if ([v11 isAppStripInKeyboard])
    {
      BOOL v12 = [(CKScrollViewController *)self isKeyboardVisible];

      if (v12)
      {
        double v13 = [(CKCoreChatController *)self inputController];
        char v14 = [v13 isInputViewVisible];

        if ((v14 & 1) == 0)
        {
          if ([(CKChatController *)self isShowingEmojiKeyboard])
          {
            double v15 = [MEMORY[0x1E4F42B30] sharedInputModeController];
            double v16 = [MEMORY[0x1E4F42B28] keyboardInputModeWithIdentifier:*MEMORY[0x1E4F43B00]];
            [v15 setCurrentInputMode:v16];

            double v17 = [MEMORY[0x1E4F42B30] sharedInputModeController];
            uint64_t v18 = [(CKChatController *)self savedKeyboardInputMode];
            [v17 setCurrentInputMode:v18];

            uint64_t v10 = 1;
          }
          [(CKChatController *)self updateAppStripVisibility:v10 animated:1];
        }
        goto LABEL_3;
      }
    }
    else
    {
    }
    [v4 setShowAppStrip:v10 animated:0 completion:0];
    [(CKChatController *)self _updateEntryViewFrameIfNeeded:1];
  }
LABEL_3:
  BOOL v5 = 0;
LABEL_4:

  return v5;
}

- (void)messageEntryView:(id)a3 shouldShowAppStrip:(BOOL)a4 animated:(BOOL)a5
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  id v10 = a3;
  if (v6
    || ([(CKCoreChatController *)self inputController],
        char v8 = objc_claimAutoreleasedReturnValue(),
        char v9 = [v8 isInputViewVisible],
        v8,
        (v9 & 1) == 0))
  {
    [(CKChatController *)self updateAppStripVisibility:v6 animated:v5];
  }
}

- (void)updateAppStripVisibility:(BOOL)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  BOOL v5 = a3;
  double v7 = +[CKUIBehavior sharedBehaviors];
  int v8 = [v7 isAppStripInKeyboard];

  if (v8 && (!v5 || CKShowAppStripInEntryView()))
  {
    id location = 0;
    objc_initWeak(&location, self);
    char v9 = [(CKChatController *)self entryView];
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    void v10[2] = __54__CKChatController_updateAppStripVisibility_animated___block_invoke;
    v10[3] = &unk_1E5623210;
    objc_copyWeak(&v11, &location);
    BOOL v12 = v5;
    BOOL v13 = v4;
    [v9 setShowAppStrip:v5 animated:v4 completion:v10];

    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }
}

void __54__CKChatController_updateAppStripVisibility_animated___block_invoke(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained updateEntryViewHeightIncludingAppStrip:*(unsigned __int8 *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 41)];
  }
}

- (void)contentInsetWillChange:(UIEdgeInsets)a3 withAnimationProperties:(id)a4
{
  v5.receiver = self;
  v5.super_class = (Class)CKChatController;
  -[CKCoreChatController contentInsetWillChange:withAnimationProperties:](&v5, sel_contentInsetWillChange_withAnimationProperties_, a4, a3.top, a3.left, a3.bottom, a3.right);
  [(CKChatController *)self setNextEntryViewSafeAreaInsetUpdateIsSynchronous:1];
}

- (void)updateEntryViewHeightIncludingAppStrip:(BOOL)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5 completionHandler:(id)a6
{
  BOOL v6 = a5;
  BOOL v7 = a4;
  id v20 = a6;
  char v9 = [(CKChatController *)self view];
  [v9 bounds];
  double v11 = v10;

  [(CKChatController *)self _maxEntryViewHeight];
  double v13 = v12;
  char v14 = [(CKChatController *)self entryView];
  [v14 frame];
  double v16 = v15;
  double v18 = v17;

  if (v16 != v11 || v18 != v13) {
    -[CKChatController _setEntryViewFrame:isContentChange:animated:completionHandler:](self, "_setEntryViewFrame:isContentChange:animated:completionHandler:", v7, v6, v20, *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), v11, v13);
  }
}

- (void)updateEntryViewHeightIncludingAppStrip:(BOOL)a3 isContentChange:(BOOL)a4 animated:(BOOL)a5
{
}

- (void)updateEntryViewHeightIncludingAppStrip:(BOOL)a3 animated:(BOOL)a4
{
}

- (void)messageEntryViewSwipeDownGestureRecognized:(id)a3
{
  id v9 = a3;
  if (CKIsRunningInMessages())
  {
    BOOL v4 = [(CKChatController *)self inputViewController];

    if (v4)
    {
      objc_super v5 = [(CKCoreChatController *)self inputController];
      [v5 swipeDismissBrowser];
    }
    else
    {
      BOOL v6 = [v9 contentView];
      BOOL v7 = [v6 activeView];
      int v8 = [v7 isFirstResponder];

      if (!v8) {
        goto LABEL_6;
      }
    }
    [(CKChatController *)self dismissKeyboard];
  }
LABEL_6:
}

- (void)updateTyping
{
  id v16 = [(CKChatController *)self entryView];
  if ([v16 isRecording])
  {
    double v3 = [(CKCoreChatController *)self conversation];
    [v3 setLocalUserIsRecording:1];
    goto LABEL_10;
  }
  BOOL v4 = [v16 composition];
  double v3 = [v4 shelfPluginPayload];

  if (!v3) {
    goto LABEL_7;
  }
  objc_super v5 = [v3 pluginBundleID];
  if ([v5 isEqualToIgnoringCase:*MEMORY[0x1E4F6CBF8]])
  {

LABEL_7:
    id v9 = [(CKCoreChatController *)self conversation];
    double v10 = [v16 composition];
    objc_msgSend(v9, "setLocalUserIsTyping:", objc_msgSend(v10, "hasContent"));
    goto LABEL_8;
  }
  BOOL v6 = [v3 pluginBundleID];
  BOOL v7 = IMBalloonExtensionIDWithSuffix();
  int v8 = [v6 isEqualToIgnoringCase:v7];

  if (v8) {
    goto LABEL_7;
  }
  double v11 = [v16 composition];
  double v12 = [v11 shelfPluginPayload];
  id v9 = [v12 pluginBundleID];

  if (!v9 || ([v9 isEqualToString:*MEMORY[0x1E4F6CBA0]] & 1) != 0) {
    goto LABEL_9;
  }
  double v13 = [MEMORY[0x1E4F6BC18] sharedInstance];
  double v10 = [v13 balloonPluginForBundleID:v9];

  char v14 = objc_msgSend(v10, "__ck_statusJPEGImageDataForTransportWithCompressionFactor:", 0.2);
  if (v14)
  {
    double v15 = [(CKCoreChatController *)self conversation];
    [v15 setLocalUserIsComposing:v9 typingIndicatorIcon:v14];
  }
LABEL_8:

LABEL_9:
LABEL_10:
}

- (void)setEffectPickerIsPresented:(BOOL)a3
{
  if (((!self->_effectPickerIsPresented ^ a3) & 1) == 0)
  {
    BOOL v3 = a3;
    self->_effectPickerIsPresented = a3;
    id v7 = [(CKCoreChatController *)self collectionViewController];
    objc_super v5 = [(CKCoreChatController *)self conversation];
    BOOL v6 = [v5 chat];

    if (v3)
    {
      [v7 addContentAnimationPauseReasons:2];
      [v6 beginHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B928]];
    }
    else
    {
      [v6 endHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B928]];
      [v7 removeContentAnimationPauseReasons:2];
    }
  }
}

- (BOOL)gestureRecognizer:(id)a3 shouldRequireFailureOfGestureRecognizer:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  BOOL v8 = 0;
  if (isKindOfClass)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      BOOL v8 = 1;
    }
  }

  return v8;
}

- (BOOL)gestureRecognizer:(id)a3 shouldReceiveTouch:(id)a4
{
  id v5 = objc_msgSend(a4, "view", a3);
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass) {
    return 1;
  }
  else {
    return [(CKChatController *)self isEditing] ^ 1;
  }
}

- (BOOL)allowEffectPickerToBePresented
{
  BOOL v3 = [MEMORY[0x1E4F42948] currentDevice];
  uint64_t v4 = [v3 userInterfaceIdiom];

  if (v4 == 1) {
    return 1;
  }
  id v6 = [(CKChatController *)self view];
  id v7 = [v6 window];
  BOOL v8 = [v7 windowScene];
  BOOL v5 = (unint64_t)([v8 interfaceOrientation] - 5) < 0xFFFFFFFFFFFFFFFELL;

  return v5;
}

- (CGRect)fullScreenBalloonViewControllerSafeAreaLayoutFrame:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewControllerSafeAreaLayoutFrame:v4];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
  }
  else
  {
    v26.receiver = self;
    v26.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v26 fullScreenBalloonViewControllerSafeAreaLayoutFrame:v4];
    double v6 = v13;
    double v8 = v14;
    double v10 = v15;
    double v17 = v16;

    id v4 = [(CKChatController *)self entryView];
    [v4 bounds];
    double v19 = v18;
    id v20 = [(CKChatController *)self view];
    [v20 safeAreaInsets];
    double v12 = v17 - (v19 - v21);
  }
  double v22 = v6;
  double v23 = v8;
  double v24 = v10;
  double v25 = v12;
  result.size.CGFloat height = v25;
  result.size.CGFloat width = v24;
  result.origin.CGFloat y = v23;
  result.origin.CGFloat x = v22;
  return result;
}

- (CGRect)fullScreenBalloonViewControllerSafeAreaLayoutFrameIgnoreEntryView:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewControllerSafeAreaLayoutFrame:v4];
  }
  else
  {
    v17.receiver = self;
    v17.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v17 fullScreenBalloonViewControllerSafeAreaLayoutFrame:v4];
  }
  double v9 = v5;
  double v10 = v6;
  double v11 = v7;
  double v12 = v8;

  double v13 = v9;
  double v14 = v10;
  double v15 = v11;
  double v16 = v12;
  result.size.CGFloat height = v16;
  result.size.CGFloat width = v15;
  result.origin.CGFloat y = v14;
  result.origin.CGFloat x = v13;
  return result;
}

- (BOOL)clickInteractionShouldBegin:(id)a3
{
  id v4 = a3;
  double v5 = [(CKChatController *)self entryView];
  uint64_t v6 = [v5 composition];
  double v7 = [(id)v6 shelfPluginPayload];

  double v8 = [v7 datasource];
  LOBYTE(v6) = [v8 supportsDynamicSize];

  if (v6) {
    goto LABEL_7;
  }
  double v9 = +[CKUIBehavior sharedBehaviors];
  char v10 = [v9 shouldDisableSendButtonClickInteraction];

  if (v10) {
    goto LABEL_7;
  }
  double v11 = [(CKChatController *)self entryView];
  char v12 = [v11 hasRecording];

  if (v12) {
    goto LABEL_7;
  }
  double v13 = [(CKCoreChatController *)self chat];
  int v14 = [v13 supportsCapabilities:0x20000];

  if (!v14
    || ([(CKCoreChatController *)self chat],
        double v15 = objc_claimAutoreleasedReturnValue(),
        int v16 = [v15 canSend],
        v15,
        !v16)
    || (IMIsRunningInMessagesTranscriptExtension() & 1) != 0)
  {
LABEL_7:
    BOOL v17 = 0;
  }
  else if ([(CKChatController *)self allowEffectPickerToBePresented])
  {
    BOOL v17 = 1;
  }
  else
  {
    [v4 locationInCoordinateSpace:0];
    double v20 = v19;
    double v22 = v21;
    double v23 = [(CKChatController *)self entryView];
    double v24 = [v23 sendButton];
    double v25 = objc_msgSend(v24, "hitTest:withEvent:", 0, v20, v22);
    BOOL v17 = v25 == 0;
  }
  return v17;
}

- (void)showEffectPicker
{
  if (CKIsRunningInMacCatalyst()
    || ([(CKChatController *)self entryView],
        BOOL v3 = objc_claimAutoreleasedReturnValue(),
        [v3 sendButton],
        id v4 = objc_claimAutoreleasedReturnValue(),
        int v5 = [v4 isEnabled],
        v4,
        v3,
        v5))
  {
    [(CKChatController *)self _initializeEffectPicker];
    uint64_t v6 = [(CKChatController *)self effectPickerViewController];
    [v6 presentPicker];

    self->_effectPickerIsPresented = 1;
    id v7 = [(CKChatController *)self view];
    [v7 setNeedsDisplay];
  }
}

- (void)dismissEffectPickerAnimated:(BOOL)a3
{
  BOOL v3 = a3;
  int v5 = [(CKChatController *)self effectPickerViewController];
  [(CKChatController *)self effectPickerViewControllerClose:v5 animated:v3];

  uint64_t v6 = +[CKAdaptivePresentationController sharedInstance];
  [v6 dismissViewControllerAnimated:v3 completion:0];

  [(CKChatController *)self setEffectPickerIsPresented:0];
}

- (void)tapGestureRecognized:(id)a3
{
  id v12 = [(CKChatController *)self entryView];
  id v4 = +[CKUIBehavior sharedBehaviors];
  int v5 = [v4 isEntryViewCollapsable];

  if (v5)
  {
    [v12 setEntryFieldCollapsed:1 animated:1];
    [v12 minifyAppStrip];
  }
  else if (CKIsRunningInMacCatalyst())
  {
    uint64_t v6 = [(CKCoreChatController *)self collectionViewController];
    [v6 hideTranscriptTimestampsIfNeeded];

    id v7 = [(CKCoreChatController *)self collectionViewController];
    [v7 deselectAllBalloons];

    double v8 = [v12 contentView];
    double v9 = [v8 textView];
    [v9 resignFirstResponder];

    char v10 = [v12 contentView];
    double v11 = [v10 textView];
    [v11 setHideCaretUntilUserTypes:1];
  }
}

- (void)raiseGestureRecognized:(id)a3
{
  id v6 = a3;
  id v4 = [(CKCoreChatController *)self conversation];
  char v5 = [v4 isBlockedByCommunicationLimits];

  if ((v5 & 1) == 0) {
    [(CKChatController *)self __raiseGestureRecognized:v6];
  }
}

- (void)__raiseGestureRecognized:(id)a3
{
  id v4 = a3;
  char v5 = [MEMORY[0x1E4F42B30] sharedInputModeController];
  id v6 = [v5 currentInputMode];
  id v7 = [v6 identifier];
  double v8 = (void *)*MEMORY[0x1E4F43AF8];

  if (v7 != v8)
  {
    double v9 = [(CKCoreChatController *)self collectionViewController];
    int v10 = [v9 canRaiseToListen];

    if (v10)
    {
      double v11 = [(CKCoreChatController *)self collectionViewController];
      [v11 raiseGestureRecognized:v4];
    }
    else
    {
      id v12 = [(CKCoreChatController *)self conversation];
      double v13 = [v12 chat];
      char v14 = [v13 supportsCapabilities:0x10000];

      if (v14)
      {
        if ([v4 isRecognized])
        {
          if (IMOSLoggingEnabled())
          {
            double v15 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Starting audio recording invoked by raise to record gesture.", buf, 2u);
            }
          }
          double v11 = [(CKChatController *)self entryView];
          [v11 startRecordingForRaiseGesture];
        }
        else
        {
          uint64_t v16 = [v4 gestureState];
          int v17 = IMOSLoggingEnabled();
          if (v16 == 2)
          {
            if (v17)
            {
              double v18 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v23 = 0;
                _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "Stopping audio recording invoked by raise to record gesture because of failure.", v23, 2u);
              }
            }
            double v19 = [(CKChatController *)self entryView];
            double v11 = v19;
            uint64_t v20 = 1;
          }
          else
          {
            if (v17)
            {
              double v21 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)double v22 = 0;
                _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Stopping audio recording invoked by raise to record gesture.", v22, 2u);
              }
            }
            double v19 = [(CKChatController *)self entryView];
            double v11 = v19;
            uint64_t v20 = 0;
          }
          [v19 stopRecordingForRaiseGestureWithFailure:v20];
        }
      }
      else
      {
        if (!IMOSLoggingEnabled()) {
          goto LABEL_5;
        }
        double v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)double v25 = 0;
          _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Ignoring raise gesture for audio recording because chat does not support capability.", v25, 2u);
        }
      }
    }
  }
LABEL_5:
}

- (void)updateRaiseGesture
{
  id v8 = [(CKCoreChatController *)self collectionViewController];
  BOOL v3 = [MEMORY[0x1E4F42738] sharedApplication];
  if ([v3 applicationState] || !-[CKViewController appeared](self, "appeared"))
  {
    uint64_t v5 = 0;
  }
  else
  {
    id v4 = [(CKChatController *)self imagePickerController];
    if (v4)
    {
      uint64_t v5 = 0;
    }
    else
    {
      id v7 = [(CKChatController *)self presentedViewController];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v5 = 0;
      }
      else if ([v8 canRaiseToListen])
      {
        uint64_t v5 = 1;
      }
      else
      {
        uint64_t v5 = [v8 canRaiseToTalk];
      }
    }
  }

  id v6 = [(CKChatController *)self raiseGesture];
  [v6 setEnabled:v5];
}

- (void)_saveDraftState
{
  uint64_t v3 = [(CKCoreChatController *)self conversation];
  id v4 = (void *)v3;
  if (v3)
  {
    id v17 = (id)v3;
    int v5 = IMIsRunningInMessagesComposeViewService();
    id v4 = v17;
    if (!v5)
    {
      id v6 = [(CKCoreChatController *)self conversation];
      id v7 = [v6 chat];
      uint64_t v8 = [v7 joinState];

      if (v8 == 1) {
        return;
      }
      double v9 = [(CKCoreChatController *)self conversation];
      if ([(CKChatController *)self isAnimatingMessageSend]
        || (+[CKConversationList sharedConversationList],
            int v10 = objc_claimAutoreleasedReturnValue(),
            [v10 pendingConversation],
            double v11 = objc_claimAutoreleasedReturnValue(),
            v11,
            v10,
            v11 == v9))
      {
        if (IMOSLoggingEnabled())
        {
          char v14 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            double v15 = "Skip saving draft state";
            uint64_t v16 = buf;
            goto LABEL_15;
          }
LABEL_16:
        }
      }
      else
      {
        id v12 = [(CKCoreChatController *)self inputController];
        [v12 requestPhotoBrowserToPrepareForDraft];

        double v13 = [(CKChatController *)self composition];
        [v9 setUnsentComposition:v13];

        if (IMOSLoggingEnabled())
        {
          char v14 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            __int16 v19 = 0;
            double v15 = "Conversation has unsent composition, saving draft state";
            uint64_t v16 = (uint8_t *)&v19;
LABEL_15:
            _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, v15, v16, 2u);
            goto LABEL_16;
          }
          goto LABEL_16;
        }
      }

      return;
    }
  }
}

- (BOOL)_shouldRestoreDraftState
{
  uint64_t v2 = [(CKChatController *)self composition];
  if ([v2 hasContent]) {
    LOBYTE(v3) = 0;
  }
  else {
    BOOL v3 = !CKBalloonPluginViewCacheNeedsPrewarm();
  }

  return v3;
}

- (void)_restoreDraftState
{
  if ([(CKChatController *)self _shouldRestoreDraftState])
  {
    if (IMOSLoggingEnabled())
    {
      BOOL v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Composition does not have content, trying to restore draft", buf, 2u);
      }
    }
    if ((IMIsRunningInMessagesComposeViewService() & 1) == 0)
    {
      id v4 = [(CKCoreChatController *)self inputController];

      if (!v4) {
        [(CKChatController *)self loadChatInputController];
      }
      int v5 = [(CKCoreChatController *)self conversation];
      id v6 = [v5 unsentComposition];

      if (([v6 hasContent] & 1) != 0
        || ([v6 bizIntent], id v7 = objc_claimAutoreleasedReturnValue(), v7, v7))
      {
        uint64_t v8 = [(CKCoreChatController *)self conversation];
        double v9 = [v8 chat];
        int v10 = [v6 bizIntent];
        [v9 setBizIntent:v10];

        [(CKChatController *)self setComposition:v6];
        double v11 = +[CKBalloonPluginManager sharedInstance];
        [v11 invalidatePhotosViewController];

        id v12 = [(CKCoreChatController *)self inputController];
        [v12 requestPhotoBrowserInitFromDraft:v6];

        double v13 = +[CKUIBehavior sharedBehaviors];
        LODWORD(v9) = [v13 restoringDraftShouldShowKeyboard];

        if (v9)
        {
          [(CKChatController *)self setTargetFirstResponder:1];
          self->_entryViewShouldBecomeTargetFirstResponderForPendingDraft = 1;
        }
        if (IMOSLoggingEnabled())
        {
          char v14 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)double v15 = 0;
            _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "Draft composition restored", v15, 2u);
          }
        }
      }
      [(CKChatController *)self setHasFinishedRestoringDraftState:1];
    }
  }
}

- (id)getCurrentContext
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(CKCoreChatController *)self conversation];
  id v4 = [v3 chat];

  int v5 = [v4 lastFinishedMessage];
  if (v5)
  {
    id v6 = objc_alloc_init(MEMORY[0x1E4F96A60]);
    id v7 = [v5 time];
    [v6 setDateSent:v7];

    uint64_t v8 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v5, "isFromMe"));
    [v6 setOutgoing:v8];

    if (([v5 isFromMe] & 1) == 0)
    {
      id v9 = objc_alloc_init(MEMORY[0x1E4F968D0]);
      int v10 = [v5 sender];
      double v11 = [v10 ID];

      id v12 = [v5 sender];
      double v13 = [v12 fullName];

      [v9 setData:v11];
      if (v13)
      {
        [v9 setDisplayText:v13];
      }
      else
      {
        double v15 = IMFormattedDisplayStringForIDInAddressBook();
        [v9 setDisplayText:v15];
      }
      uint64_t v16 = CKSAPersonForAddress(v11);
      [v9 setObject:v16];

      [v6 setMsgSender:v9];
    }
    id v17 = [(CKCoreChatController *)self conversation];
    double v18 = [v17 recipients];

    if (([v5 isFromMe] & 1) != 0 || (unint64_t)objc_msgSend(v18, "count") >= 2)
    {
      uint64_t v47 = v5;
      id v48 = v4;
      __int16 v19 = [MEMORY[0x1E4F1CA48] array];
      long long v54 = 0u;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      long long v45 = v18;
      id v20 = v18;
      uint64_t v21 = [v20 countByEnumeratingWithState:&v54 objects:v59 count:16];
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = *(void *)v55;
        do
        {
          for (uint64_t i = 0; i != v22; ++i)
          {
            if (*(void *)v55 != v23) {
              objc_enumerationMutation(v20);
            }
            double v25 = [*(id *)(*((void *)&v54 + 1) + 8 * i) rawAddress];
            [v19 addObject:v25];
          }
          uint64_t v22 = [v20 countByEnumeratingWithState:&v54 objects:v59 count:16];
        }
        while (v22);
      }
      id v46 = v6;

      id v26 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      long long v50 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      id obj = v19;
      uint64_t v27 = [obj countByEnumeratingWithState:&v50 objects:v58 count:16];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = *(void *)v51;
        do
        {
          for (uint64_t j = 0; j != v28; ++j)
          {
            if (*(void *)v51 != v29) {
              objc_enumerationMutation(obj);
            }
            double v31 = *(void **)(*((void *)&v50 + 1) + 8 * j);
            id v32 = [MEMORY[0x1E4F6E6D8] sharedInstance];
            id v33 = [v32 fetchCNContactForHandleWithID:v31];

            double v34 = [MEMORY[0x1E4F6E6D8] fullNameForCNContact:v33];
            id v35 = objc_alloc_init(MEMORY[0x1E4F968D0]);
            [v35 setData:v31];
            if (v34)
            {
              [v35 setDisplayText:v34];
            }
            else
            {
              id v36 = IMFormattedDisplayStringForIDInAddressBook();
              [v35 setDisplayText:v36];
            }
            __int16 v37 = CKSAPersonForAddress(v31);
            [v35 setObject:v37];

            [v26 addObject:v35];
          }
          uint64_t v28 = [obj countByEnumeratingWithState:&v50 objects:v58 count:16];
        }
        while (v28);
      }

      id v6 = v46;
      [v46 setMsgRecipients:v26];

      int v5 = v47;
      id v4 = v48;
      double v18 = v45;
    }
    double v38 = (void *)MEMORY[0x1E4F1CB10];
    id v39 = objc_msgSend(NSString, "stringWithFormat:", @"x-apple-sms:guid=%lld", objc_msgSend(v5, "messageID"));
    uint64_t v40 = [v38 URLWithString:v39];
    [v6 setIdentifier:v40];

    uint64_t v41 = [v4 guid];
    [v6 setChatIdentifier:v41];

    long long v42 = (void *)MEMORY[0x1E4F1C978];
    long long v43 = [v6 dictionary];
    char v14 = [v42 arrayWithObject:v43];
  }
  else
  {
    char v14 = 0;
  }

  return v14;
}

- (void)setEditing:(BOOL)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  BOOL v5 = a3;
  if ([(CKChatController *)self isEditing] == a3)
  {
    id v26 = [(CKChatController *)self navigationController];
    [v26 setToolbarHidden:v5 ^ 1 animated:v4];
  }
  else
  {
    if ([(CKChatController *)self wantsChromelessAppearance])
    {
      [(CKNavigationBarTitleController *)self->_navigationBarTitleController setEditing:v5];
      id v7 = [(CKChatController *)self navigationItem];
      uint64_t v8 = [(CKNavigationBarTitleController *)self->_navigationBarTitleController titleView];
      [v7 setTitleView:v8];

      id v9 = [(CKChatController *)self navigationItem];
      int v10 = [(CKNavigationBarTitleController *)self->_navigationBarTitleController leftBarButtonItems];
      [v9 setLeftBarButtonItems:v10];

      double v11 = [(CKChatController *)self navigationItem];
      id v12 = [(CKNavigationBarTitleController *)self->_navigationBarTitleController rightBarButtonItems];
      [v11 setRightBarButtonItems:v12];
    }
    v31.receiver = self;
    v31.super_class = (Class)CKChatController;
    [(CKChatController *)&v31 setEditing:v5 animated:v4];
    [(CKChatController *)self _updateNavigationButtons];
    double v13 = [(CKChatController *)self navbarCanvasViewController];
    [v13 setIsInEditingMode:v5];

    if (v5)
    {
      [(CKChatController *)self _updateToolbarItems];
      char v14 = [(CKChatController *)self editingToolbarItems];
      [(CKChatController *)self setToolbarItems:v14 animated:0];

      BOOL v15 = CKIsAppCardsEnabled();
      uint64_t v16 = [(CKCoreChatController *)self inputController];
      id v17 = v16;
      if (v15) {
        [v16 dismissAppCardIfNecessaryAnimated:v4 completion:0];
      }
      else {
        [v16 forceDismissBrowserWithoutAnimation];
      }

      [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
      [(CKChatController *)self removeFooterView];
      [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:0];
    }
    else
    {
      if ([(CKViewController *)self appeared])
      {
        [(CKChatController *)self becomeFirstResponder];
        [(CKChatController *)self reloadInputViews];
      }
      [(CKChatController *)self _updateToolbarItems];
      [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
      [(CKChatController *)self reloadFooterViewIfNecessaryForNewConversation:self];
      [(CKChatController *)self _showCatchUpButtonIfNeeded];
    }
    double v18 = [(CKCoreChatController *)self collectionViewController];
    __int16 v19 = [v18 collectionView];

    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __40__CKChatController_setEditing_animated___block_invoke;
    aBlock[3] = &unk_1E5622A18;
    BOOL v30 = v5;
    void aBlock[4] = self;
    id v20 = (void (**)(void))_Block_copy(aBlock);
    v27[0] = MEMORY[0x1E4F143A8];
    v27[1] = 3221225472;
    v27[2] = __40__CKChatController_setEditing_animated___block_invoke_2;
    v27[3] = &unk_1E5621EA8;
    v27[4] = self;
    id v21 = v19;
    id v28 = v21;
    uint64_t v22 = (void (**)(void *, uint64_t))_Block_copy(v27);
    uint64_t v23 = +[CKAdaptivePresentationController sharedInstance];
    [v23 dismissViewControllerAnimated:v4 completion:0];

    if (v4)
    {
      [MEMORY[0x1E4F42FF0] animateWithDuration:4 delay:v20 options:v22 animations:0.300000012 completion:0.0];
    }
    else
    {
      v20[2](v20);
      v22[2](v22, 1);
    }
    double v24 = [(CKCoreChatController *)self collectionViewController];
    [v24 setEditing:v5 animated:v4];

    double v25 = [(CKChatController *)self navigationController];
    [v25 setToolbarHidden:v5 ^ 1 animated:v4];
  }
}

uint64_t __40__CKChatController_setEditing_animated___block_invoke(uint64_t result)
{
  if (!*(unsigned char *)(result + 40)) {
    return [*(id *)(result + 32) _updateEntryViewFrameIfNeeded:0];
  }
  return result;
}

void __40__CKChatController_setEditing_animated___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) addOrRemoveEntryViewIfNeeded];
  [*(id *)(a1 + 32) updateScrollGeometryWithoutAnimationForReason:@"CollectionViewEditModeChanged"];
  id v2 = +[CKScrollViewAnimationProperties systemDefaultScrollAnimation];
  [*(id *)(a1 + 40) enforceTranscriptScrollIntentWithAnimationProperties:v2];
}

- (id)editingToolbarItems
{
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  BOOL v4 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:16 target:self action:sel__deleteSelectedMessages_];
  [v4 setTag:0];
  BOOL v5 = +[CKUIBehavior sharedBehaviors];
  id v6 = [v5 forwardImage];

  id v7 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithImage:v6 style:0 target:self action:sel__editingToolbarSelectedForward_];
  [v7 setTag:1];
  [v3 addObject:v4];
  uint64_t v8 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:5 target:0 action:0];
  id v9 = [(CKCoreChatController *)self chat];
  int v10 = [v9 chatItems];
  double v11 = [v10 arrayByApplyingSelector:sel__item];

  if (!IMSSMSReportSpamShouldShowReportMessagesForItems()) {
    goto LABEL_11;
  }
  id v12 = [(CKCoreChatController *)self chat];
  unint64_t v13 = [v12 messageCount];

  if (v13 < 2)
  {
    id v17 = [(CKCoreChatController *)self chat];
    uint64_t v18 = [v17 messageCount];

    if (v18 != 1)
    {
      __int16 v19 = 0;
      goto LABEL_8;
    }
    char v14 = CKFrameworkBundle();
    BOOL v15 = v14;
    uint64_t v16 = @"REPORT_SPAM_SMS_BUTTON_TITLE_SINGULAR";
  }
  else
  {
    char v14 = CKFrameworkBundle();
    BOOL v15 = v14;
    uint64_t v16 = @"REPORT_SPAM_SMS_BUTTON_TITLE_MULTIPLE";
  }
  __int16 v19 = [v14 localizedStringForKey:v16 value:&stru_1EDE4CA38 table:@"ChatKit"];

LABEL_8:
  if ([v19 length])
  {
    id v20 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithTitle:v19 style:0 target:self action:sel__reportSelectedMessages_];
    [v20 setTag:2];
    id v21 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:5 target:0 action:0];
    [v3 addObject:v21];
    [v3 addObject:v20];
  }
LABEL_11:
  [v3 addObject:v8];
  if ([(CKChatController *)self allowDebugItems])
  {
    uint64_t v22 = [(CKChatController *)self internalBarButtonItems];
    [v3 addObjectsFromArray:v22];
  }
  [v3 addObject:v7];

  return v3;
}

- (id)_actionsToolbar
{
  return 0;
}

- (void)_updateToolbarItems
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self isEditing])
  {
    id v3 = [(CKCoreChatController *)self collectionViewController];
    BOOL v4 = [v3 selectedItems];
    BOOL v5 = [v3 chatItems];
    id v6 = [v5 objectsAtIndexes:v4];

    if ([v4 count])
    {
      id v7 = [(CKCoreChatController *)self conversation];
      uint64_t v8 = [v7 isUserDeletable];
    }
    else
    {
      uint64_t v8 = 0;
    }
    long long v34 = 0u;
    long long v35 = 0u;
    uint64_t v9 = [v4 count] != 0;
    long long v36 = 0u;
    long long v37 = 0u;
    id v10 = v6;
    uint64_t v11 = [v10 countByEnumeratingWithState:&v34 objects:v39 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v35;
      do
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v35 != v13) {
            objc_enumerationMutation(v10);
          }
          BOOL v15 = *(void **)(*((void *)&v34 + 1) + 8 * i);
          uint64_t v8 = [v15 canDelete] & v8;
          uint64_t v9 = [v15 canForward] & v9;
        }
        uint64_t v12 = [v10 countByEnumeratingWithState:&v34 objects:v39 count:16];
      }
      while (v12);
    }

    uint64_t v16 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v17 = [v16 isTranscriptSharingEnabled];

    if (v17)
    {
      uint64_t v18 = [(CKCoreChatController *)self conversation];
      __int16 v19 = [v18 chat];
      int v20 = [v19 isStewieSharingChat];

      uint64_t v8 = v8 & ~v20;
    }
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v21 = [(CKChatController *)self toolbarItems];
    uint64_t v22 = [v21 countByEnumeratingWithState:&v30 objects:v38 count:16];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = *(void *)v31;
      do
      {
        for (uint64_t j = 0; j != v23; ++j)
        {
          if (*(void *)v31 != v24) {
            objc_enumerationMutation(v21);
          }
          id v26 = *(void **)(*((void *)&v30 + 1) + 8 * j);
          uint64_t v27 = [v26 tag];
          uint64_t v28 = v8;
          if (v27)
          {
            uint64_t v29 = objc_msgSend(v26, "tag", v8);
            uint64_t v28 = v9;
            if (v29 != 1)
            {
              if (objc_msgSend(v26, "tag", v9) != 2) {
                continue;
              }
              uint64_t v28 = 1;
            }
          }
          [v26 setEnabled:v28];
        }
        uint64_t v23 = [v21 countByEnumeratingWithState:&v30 objects:v38 count:16];
      }
      while (v23);
    }
  }
}

- (void)_deleteSelectedMessages:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self collectionViewController];
  [v5 deleteSelectedChatItems:v4];
}

- (void)_editingToolbarSelectedForward:(id)a3
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v4 = [(CKCoreChatController *)self collectionViewController];
  id v5 = [v4 selectedItems];
  id v6 = [v4 chatItems];
  id v7 = [v6 objectsAtIndexes:v5];

  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v8 = v7;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v34 objects:v39 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v35;
    int v12 = 1;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v35 != v11) {
          objc_enumerationMutation(v8);
        }
        v12 &= [*(id *)(*((void *)&v34 + 1) + 8 * i) canForward];
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v34 objects:v39 count:16];
    }
    while (v10);
  }
  else
  {
    int v12 = 1;
  }

  if ([v5 count] && v12)
  {
    char v14 = objc_opt_new();
    uint64_t v29 = v4;
    BOOL v15 = [v4 chatItems];
    uint64_t v16 = [v15 objectsAtIndexes:v5];

    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v17 = v16;
    uint64_t v18 = [v17 countByEnumeratingWithState:&v30 objects:v38 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)v31;
      do
      {
        for (uint64_t j = 0; j != v19; ++j)
        {
          if (*(void *)v31 != v20) {
            objc_enumerationMutation(v17);
          }
          uint64_t v22 = *(void **)(*((void *)&v30 + 1) + 8 * j);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v23 = [v22 aggregateChatItems];
            [v14 addObjectsFromArray:v23];
          }
          else
          {
            [v14 addObject:v22];
          }
        }
        uint64_t v19 = [v17 countByEnumeratingWithState:&v30 objects:v38 count:16];
      }
      while (v19);
    }

    uint64_t v24 = [(CKChatController *)self entryView];
    uint64_t v25 = [v24 shouldShowSubject];
    id v26 = [(CKChatController *)self chatInputTranscriptIdentifier];
    uint64_t v27 = +[CKComposition compositionForMessageParts:v14 preserveSubject:v25 contextIdentifier:v26];

    [(CKChatController *)self setEditing:0 animated:1];
    uint64_t v28 = [(CKCoreChatController *)self delegate];
    [v28 chatController:self forwardComposition:v27];

    id v4 = v29;
  }
}

- (void)_reportSelectedMessages:(id)a3
{
  id v10 = [(CKCoreChatController *)self collectionViewController];
  id v4 = [v10 selectedItems];
  id v5 = [v10 chatItems];
  id v6 = [v5 objectsAtIndexes:v4];
  id v7 = [v6 arrayByApplyingSelector:sel_IMChatItem];

  id v8 = [(CKCoreChatController *)self chat];
  uint64_t v9 = [v8 messagesToReportAsSpamFromChatItems:v7];

  [(CKChatController *)self showSMSReportSpamExtensionControllerForMessages:v9];
}

- (void)_editCancelButtonPressed
{
  if ([(CKChatController *)self isEditing])
  {
    [(CKChatController *)self setEditing:0 animated:1];
  }
  else if (CKIsRunningInMessagesTranscriptExtension())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [(CKChatController *)self dismissViewControllerAnimated:1 completion:0];
    }
  }
}

- (void)_doneButtonPressed
{
  id v3 = [(CKCoreChatController *)self delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    id v5 = [(CKCoreChatController *)self delegate];
    [v5 doneButtonPressedForChatController:self];
  }
}

- (int64_t)unreadCountForCurrentFilterModeForNavbarCanvasViewController:(id)a3
{
  char v4 = [(CKCoreChatController *)self delegate];
  char v5 = objc_opt_respondsToSelector();

  if ((v5 & 1) == 0) {
    return 0;
  }
  id v6 = [(CKCoreChatController *)self delegate];
  int64_t v7 = [v6 unreadCountForCurrentFilterModeForChatController:self];

  return v7;
}

- (BOOL)shouldShowChevronInNavbarCanvasViewController:(id)a3
{
  char v4 = [(CKCoreChatController *)self delegate];
  if (objc_opt_respondsToSelector())
  {
    char v5 = [(CKCoreChatController *)self delegate];
    char v6 = [v5 hasRecentlyDeletedFilterSelected];

    char v7 = v6 ^ 1;
  }
  else
  {
    char v7 = 1;
  }

  return v7;
}

- (BOOL)shouldShowFacetimeButtonInNavbarCanvasViewController:(id)a3
{
  id v4 = a3;
  if (CKIsRunningInMacCatalyst())
  {
    if (!IMOSLoggingEnabled())
    {
LABEL_7:
      BOOL v8 = 0;
      goto LABEL_8;
    }
    char v5 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
LABEL_6:

      goto LABEL_7;
    }
    *(_WORD *)long long buf = 0;
    char v6 = "Running in Mac Catalyst, hide the facetime button.";
    char v7 = buf;
LABEL_5:
    _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, v6, v7, 2u);
    goto LABEL_6;
  }
  id v10 = [(CKCoreChatController *)self delegate];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v11 = [(CKCoreChatController *)self delegate];
    int v12 = [v11 hasRecentlyDeletedFilterSelected];

    if (v12)
    {
      if (!IMOSLoggingEnabled()) {
        goto LABEL_7;
      }
      char v5 = OSLogHandleForIMFoundationCategory();
      if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
        goto LABEL_6;
      }
      __int16 v21 = 0;
      char v6 = "Recently deleted filter is selected, hide the facetime button.";
      char v7 = (uint8_t *)&v21;
      goto LABEL_5;
    }
  }
  else
  {
  }
  if ([(CKChatController *)self isShowingOscarChat])
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_7;
    }
    char v5 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
      goto LABEL_6;
    }
    __int16 v20 = 0;
    char v6 = "Is showing oscar chat, hide the facetime button.";
    char v7 = (uint8_t *)&v20;
    goto LABEL_5;
  }
  uint64_t v13 = [(CKCoreChatController *)self conversation];
  char v14 = [v13 chat];
  char v15 = [v14 supportsCapabilities:1024];

  int v16 = IMOSLoggingEnabled();
  if ((v15 & 1) == 0)
  {
    if (!v16) {
      goto LABEL_7;
    }
    char v5 = OSLogHandleForIMFoundationCategory();
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
      goto LABEL_6;
    }
    __int16 v19 = 0;
    char v6 = "Chat capabilities do not support facetime, hide the facetime button.";
    char v7 = (uint8_t *)&v19;
    goto LABEL_5;
  }
  if (v16)
  {
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Should show facetime button: YES", v18, 2u);
    }
  }
  BOOL v8 = 1;
LABEL_8:

  return v8;
}

- (void)recoverableDeleteConversation
{
  v16[1] = *MEMORY[0x1E4F143B8];
  id v3 = [MEMORY[0x1E4F1C9C8] now];
  id v4 = [(CKCoreChatController *)self conversation];
  v16[0] = v4;
  char v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v16 count:1];

  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  int v12 = __49__CKChatController_recoverableDeleteConversation__block_invoke;
  uint64_t v13 = &unk_1E5620AF8;
  id v14 = v5;
  id v15 = v3;
  id v6 = v3;
  id v7 = v5;
  BOOL v8 = _Block_copy(&v10);
  uint64_t v9 = objc_opt_new();
  objc_msgSend(v9, "presentRecoverableDeletionConfirmationsFromViewController:forConversations:alertControllerStyle:alertsCompletedBlock:cancelBlock:", self, v7, 1, v8, 0, v10, v11, v12, v13);
}

void __49__CKChatController_recoverableDeleteConversation__block_invoke(uint64_t a1)
{
  id v2 = +[CKConversationList sharedConversationList];
  [v2 recoverableDeleteForConversations:*(void *)(a1 + 32) deleteDate:*(void *)(a1 + 40) synchronousQuery:0 completionHandler:0];
}

- (void)layoutFooterView
{
  id v15 = [(CKChatController *)self footerViewController];
  id v3 = [(CKChatController *)self view];
  [v3 frame];
  double v5 = v4;
  id v6 = [v15 view];
  [v6 frame];
  double v8 = v5 - v7;
  [v3 frame];
  double v10 = v9;
  uint64_t v11 = [v15 view];
  [v11 frame];
  double v13 = v12;
  id v14 = [v15 view];
  objc_msgSend(v14, "setFrame:", 0.0, v8, v10, v13);
}

- (void)removeFooterView
{
  footerViewController = self->_footerViewController;
  if (footerViewController)
  {
    [(UIViewController *)footerViewController willMoveToParentViewController:0];
    double v4 = [(UIViewController *)self->_footerViewController view];
    [v4 removeFromSuperview];

    [(UIViewController *)self->_footerViewController removeFromParentViewController];
    double v5 = self->_footerViewController;
    self->_footerViewController = 0;
  }
}

- (void)reloadFooterViewIfNecessaryForNewConversation:(id)a3
{
  id v13 = a3;
  [(CKChatController *)self removeFooterView];
  double v4 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v5 = [v4 isTranscriptSharingEnabled];

  if (v5
    && ([v13 conversation],
        id v6 = objc_claimAutoreleasedReturnValue(),
        [v6 chat],
        double v7 = objc_claimAutoreleasedReturnValue(),
        int v8 = [v7 isStewieSharingChat],
        v7,
        v6,
        v8))
  {
    double v9 = [[CKTranscriptSharingFooterViewController alloc] initWithChatController:v13];
  }
  else
  {
    double v9 = 0;
  }
  p_footerViewController = &self->_footerViewController;
  objc_storeStrong((id *)&self->_footerViewController, v9);
  if (self->_footerViewController)
  {
    uint64_t v11 = [(CKChatController *)self viewIfLoaded];
    [(CKChatController *)self addChildViewController:*p_footerViewController];
    double v12 = [(UIViewController *)*p_footerViewController view];
    [v11 addSubview:v12];

    [(UIViewController *)*p_footerViewController didMoveToParentViewController:self];
  }
}

- (BOOL)_isRunningPPT
{
  return [(id)*MEMORY[0x1E4F43630] isRunningTest];
}

- (void)setUpStyleForDarkEffect
{
  id v3 = [(CKChatController *)self inlineReplyController];

  if (!v3)
  {
    [(CKChatController *)self setNeedsDarkEffectStyleCleanUp:1];
    if (IMOSLoggingEnabled())
    {
      double v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Setting style for dark effect", v23, 2u);
      }
    }
    int v5 = +[CKUIBehavior sharedBehaviors];
    int v6 = [v5 isAppStripInKeyboard];

    if (v6)
    {
      double v7 = [(CKChatController *)self entryView];
      [v7 setStyle:1];
    }
    if (CKIsAppCardsEnabled())
    {
      int v8 = [(CKChatController *)self entryView];
      [v8 setStyle:1];

      double v9 = [(CKChatController *)self _viewControllerForModalPresentation];
      if (v9 != self)
      {
        double v10 = [(CKChatController *)self traitCollection];
        BOOL v11 = [v10 userInterfaceStyle] == 2;

        [(CKChatController *)v9 setShowingDarkEffect:1 isInDarkMode:v11];
      }
    }
    double v12 = [(CKCoreChatController *)self conversation];
    char v13 = [v12 isBusinessConversation];

    if ((v13 & 1) == 0)
    {
      id v14 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
      [v14 setDarkEffectStyle:1];

      id v15 = [(CKChatController *)self navbarCanvasViewController];
      int v16 = [v15 conversationIdentityView];
      [v16 setStyle:1];
    }
    [(CKChatController *)self _setBannersHidden:1];
    if (![(CKChatController *)self wantsChromelessAppearance])
    {
      id v17 = [(CKChatController *)self navigationItem];
      uint64_t v18 = [v17 standardAppearance];
      __int16 v19 = (void *)[v18 copy];

      __int16 v20 = [MEMORY[0x1E4F427D8] effectWithStyle:18];
      [v19 setBackgroundEffect:v20];
      __int16 v21 = [(CKChatController *)self navigationItem];
      [v21 setScrollEdgeAppearance:v19];

      uint64_t v22 = [(CKChatController *)self navigationItem];
      [v22 setStandardAppearance:v19];
    }
  }
}

- (void)cleanUpDarkEffectStyle
{
  id v3 = [(CKChatController *)self inlineReplyController];

  if (!v3)
  {
    if ([(CKChatController *)self needsDarkEffectStyleCleanUp])
    {
      if (CKIsAppCardsEnabled())
      {
        double v4 = [(CKChatController *)self _viewControllerForModalPresentation];
        if (v4 != self && (objc_opt_respondsToSelector() & 1) != 0)
        {
          int v5 = [(CKChatController *)self traitCollection];
          BOOL v6 = [v5 userInterfaceStyle] == 2;

          [(CKChatController *)v4 setShowingDarkEffect:0 isInDarkMode:v6];
        }
      }
      id v17 = [(CKChatController *)self traitCollection];
      double v7 = [(CKChatController *)self entryView];
      [v7 setEntryViewTraitCollection:v17 resetStyle:1];

      [(CKMessageEntryBackgroundViewProtocol *)self->_keyboardCandidateBarBackgroundView setEntryViewTraitCollection:v17];
      int v8 = [(CKCoreChatController *)self conversation];
      char v9 = [v8 isBusinessConversation];

      if ((v9 & 1) == 0)
      {
        double v10 = [(CKChatController *)self navbarCanvasViewController];
        BOOL v11 = [v10 conversationIdentityView];
        [v11 setStyle:4];

        double v12 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
        [v12 setDarkEffectStyle:0];
      }
      [(CKChatController *)self _setBannersHidden:0];
      if (![(CKChatController *)self wantsChromelessAppearance])
      {
        char v13 = [(CKChatController *)self _defaultTranscriptNavBarAppearance];
        id v14 = [(CKChatController *)self navigationItem];
        [v14 setScrollEdgeAppearance:v13];

        id v15 = [(CKChatController *)self navigationItem];
        [v15 setStandardAppearance:v13];
      }
      [(CKChatController *)self setNeedsDarkEffectStyleCleanUp:0];
    }
    else if (IMOSLoggingEnabled())
    {
      int v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "Skipping dark effect style clean up", buf, 2u);
      }
    }
  }
}

- (void)_setBannersHidden:(BOOL)a3
{
  BOOL v3 = a3;
  int v5 = [(CKChatController *)self nicknameBanner];
  [v5 setHidden:v3];

  BOOL v6 = [(CKChatController *)self groupPhotoUpdateBanner];
  [v6 setHidden:v3];

  id v7 = [(CKChatController *)self suggestionBannerView];
  [v7 setHidden:v3];
}

- (id)_defaultTranscriptNavBarAppearance
{
  v9[1] = *MEMORY[0x1E4F143B8];
  id v2 = [(CKChatController *)self navigationItem];
  BOOL v3 = [v2 standardAppearance];

  if (CKIsRunningInMacCatalyst())
  {
    double v4 = [MEMORY[0x1E4F427D8] effectWithStyle:4];
    int v5 = +[CKUIBehavior sharedBehaviors];
    BOOL v6 = [v5 chatNavbarColor];
    [v3 setBackgroundColor:v6];
  }
  else
  {
    double v4 = [MEMORY[0x1E4F427D8] effectWithStyle:8];
  }
  v9[0] = v4;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:1];
  [v3 setBackgroundEffects:v7];

  return v3;
}

- (void)updateStyleForCurrentEffect
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  double v4 = (objc_class *)objc_opt_class();
  int v5 = NSStringFromClass(v4);
  int v7 = 134218242;
  uint64_t v8 = a1;
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_8(&dword_18EF18000, a2, v6, "<%p> ChatController (class: %@) does not respond to -setUpStyleForDarkEffect. Please file a radar.", (uint8_t *)&v7);
}

- (BOOL)transcriptCollectionViewController:(id)a3 shouldSetupFullscreenEffectUI:(id)a4
{
  v18[1] = *MEMORY[0x1E4F143B8];
  if (objc_msgSend(a4, "effectIsDark", a3))
  {
    if (objc_opt_respondsToSelector())
    {
      [(CKChatController *)self setUpStyleForDarkEffect];
    }
    else
    {
      int v5 = IMLogHandleForCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        [(CKChatController *)(uint64_t)self updateStyleForCurrentEffect];
      }

      uint64_t v6 = [MEMORY[0x1E4F6C360] sharedInstance];
      int v7 = [v6 isInternalInstall];

      if (v7)
      {
        uint64_t v8 = NSString;
        uint64_t v9 = (objc_class *)objc_opt_class();
        double v10 = NSStringFromClass(v9);
        BOOL v11 = [v8 stringWithFormat:@"<%p> ChatController (class: %@) does not respond to -setUpStyleForDarkEffect. Please file a radar.", self, v10];

        double v12 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v17 = *MEMORY[0x1E4F28228];
        v18[0] = v11;
        char v13 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v18 forKeys:&v17 count:1];
        id v14 = [v12 errorWithDomain:@"CKChatControllerErrorDomain" code:0 userInfo:v13];

        id v15 = [MEMORY[0x1E4F6E890] sharedInstance];
        [v15 forceAutoBugCaptureWithSubType:@"Unexpected method list for CKChatController" errorPayload:v14];
      }
    }
  }
  else
  {
    [(CKChatController *)self cleanUpDarkEffectStyle];
  }
  return 1;
}

- (BOOL)transcriptCollectionViewController:(id)a3 shouldCleanupFullscreenEffectUI:(id)a4
{
  return 1;
}

- (void)transcriptCollectionViewControllerWillBeginFullscreenEffectAnimationForOutgoingMessage:(id)a3
{
}

- (id)transcriptCollectionViewControllerOuterEffectPresentingView:(id)a3
{
  v5.receiver = self;
  v5.super_class = (Class)CKChatController;
  BOOL v3 = [(CKCoreChatController *)&v5 transcriptCollectionViewControllerOuterEffectPresentingView:a3];

  return v3;
}

- (BOOL)_smsEnabled
{
  return [MEMORY[0x1E4F6BDC0] smsEnabled];
}

- (id)_interfaceActionsForChatItem:(id)a3
{
  id v4 = a3;
  objc_super v5 = [MEMORY[0x1E4F1CA48] array];
  location[0] = 0;
  objc_initWeak(location, self);
  uint64_t v6 = &off_18F81A000;
  if ([(CKCoreChatController *)self wantsReplyButton]
    && [v4 canInlineReply])
  {
    int v7 = (void *)MEMORY[0x1E4F42AC8];
    uint64_t v8 = CKFrameworkBundle();
    uint64_t v9 = [v8 localizedStringForKey:@"INLINE_REPLY_ORB_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
    v110[0] = MEMORY[0x1E4F143A8];
    v110[1] = 3221225472;
    v110[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke;
    v110[3] = &unk_1E5623238;
    objc_copyWeak(&v111, location);
    double v10 = [v7 actionWithTitle:v9 type:0 handler:v110];

    objc_msgSend(v10, "setEnabled:", objc_msgSend(v4, "canInlineReply"));
    [v5 addObject:v10];

    objc_destroyWeak(&v111);
  }
  if ([v4 canRetract])
  {
    BOOL v11 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    if ([v11 isScheduledMessagesCoreEnabled])
    {
      uint64_t v12 = [v4 scheduleType];

      if (v12 == 2)
      {
        char v13 = CKFrameworkBundle();
        uint64_t v14 = [v13 localizedStringForKey:@"DELETE_SCHEDULED_ACTION" value:&stru_1EDE4CA38 table:@"ChatKit"];
LABEL_10:
        id v15 = (void *)v14;

        int v16 = (void *)MEMORY[0x1E4F42AC8];
        v107[0] = MEMORY[0x1E4F143A8];
        v107[1] = 3221225472;
        v107[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_2;
        v107[3] = &unk_1E5623260;
        objc_copyWeak(&v109, location);
        id v108 = v4;
        uint64_t v17 = [v16 actionWithTitle:v15 type:0 handler:v107];
        [v5 addObject:v17];

        objc_destroyWeak(&v109);
        goto LABEL_11;
      }
    }
    else
    {
    }
    char v13 = CKFrameworkBundle();
    uint64_t v14 = [v13 localizedStringForKey:@"UNDO_SEND_ACTION" value:&stru_1EDE4CA38 table:@"ChatKit"];
    goto LABEL_10;
  }
LABEL_11:
  if ([v4 canCopy])
  {
    uint64_t v18 = (void *)MEMORY[0x1E4F42AC8];
    __int16 v19 = CKFrameworkBundle();
    __int16 v20 = [v19 localizedStringForKey:@"COPY" value:&stru_1EDE4CA38 table:@"ChatKit"];
    v105[0] = MEMORY[0x1E4F143A8];
    v105[1] = 3221225472;
    v105[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_3;
    v105[3] = &unk_1E5623288;
    id v106 = v4;
    __int16 v21 = [v18 actionWithTitle:v20 type:0 handler:v105];
    [v5 addObject:v21];
  }
  if ([v4 syndicationBehavior] == 1)
  {
    uint64_t v22 = [(CKCoreChatController *)self chat];
    char v23 = [v22 isBusinessChat];

    if ((v23 & 1) == 0)
    {
      if ([v4 isHighlighted])
      {
        uint64_t v24 = CKFrameworkBundle();
        [v24 localizedStringForKey:@"REMOVE_PIN_ACTION" value:&stru_1EDE4CA38 table:@"ChatKit"];
      }
      else
      {
        uint64_t v24 = CKFrameworkBundle();
        [v24 localizedStringForKey:@"ADD_PIN_ACTION" value:&stru_1EDE4CA38 table:@"ChatKit"];
      uint64_t v25 = };

      id v26 = (void *)MEMORY[0x1E4F42AC8];
      v102[0] = MEMORY[0x1E4F143A8];
      v102[1] = 3221225472;
      v102[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_4;
      v102[3] = &unk_1E56232B0;
      id v103 = v4;
      objc_copyWeak(&v104, location);
      uint64_t v27 = [v26 actionWithTitle:v25 type:0 handler:v102];
      [v5 addObject:v27];

      objc_destroyWeak(&v104);
    }
  }
  if (+[CKTranslatorUtilities shouldShowTranslateMenuOption:v4])
  {
    uint64_t v28 = +[CKTranslationMenu translateActionForChatItem:v4 forController:self];
    [v5 addObject:v28];
  }
  if ([v4 canExport])
  {
    uint64_t v29 = CKFrameworkBundle();
    long long v30 = [v29 localizedStringForKey:@"BALLOON_EXPORT_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      long long v31 = CKFrameworkBundle();
      uint64_t v32 = [v31 localizedStringForKey:@"AUDIO_MESSAGE_SAVE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      long long v30 = (void *)v32;
    }
    long long v33 = (void *)MEMORY[0x1E4F42AC8];
    v100[0] = MEMORY[0x1E4F143A8];
    v100[1] = 3221225472;
    v100[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_5;
    v100[3] = &unk_1E5623288;
    id v101 = v4;
    long long v34 = [v33 actionWithTitle:v30 type:0 handler:v100];
    [v5 addObject:v34];
  }
  if ([v4 canSendAsTextMessage])
  {
    long long v35 = [v4 IMChatItem];
    long long v36 = [v4 IMChatItem];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) == 0)
    {
LABEL_36:

      goto LABEL_37;
    }
    double v38 = [v35 message];
    id WeakRetained = objc_loadWeakRetained(location);
    uint64_t v40 = [WeakRetained conversation];

    if ([(CKChatController *)self _smsEnabled]
      && [v38 isFromMe]
      && ([v38 isDelivered] & 1) == 0)
    {
      uint64_t v41 = [v38 error];
      if (!v41)
      {
        if ([v40 isGroupConversation]) {
          goto LABEL_35;
        }
        id v42 = objc_loadWeakRetained(location);
        long long v43 = [v42 collectionViewController];
        id v84 = [v43 chatItems];

        long long v44 = [v38 guid];
        long long v45 = objc_msgSend(v84, "__ck_indexesOfPartsOfMessageWithGUID:", v44);
        id v46 = [v84 objectsAtIndexes:v45];

        uint64_t v47 = [(CKCoreChatController *)self textInputContextIdentifier];
        id v48 = +[CKComposition compositionForMessageParts:v46 preserveSubject:1 contextIdentifier:v47];

        LOBYTE(v47) = [v40 canSendComposition:v48 error:0];
        uint64_t v6 = &off_18F81A000;
        if ((v47 & 1) == 0) {
          goto LABEL_35;
        }
        uint64_t v41 = [v40 fallbackSendString];
        id v49 = (void *)MEMORY[0x1E4F42AC8];
        v95[0] = MEMORY[0x1E4F143A8];
        v95[1] = 3221225472;
        v95[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_1150;
        v95[3] = &unk_1E56232D8;
        id v96 = v38;
        id v97 = v40;
        objc_copyWeak(&v99, location);
        double v98 = self;
        long long v50 = [v49 actionWithTitle:v41 type:0 handler:v95];
        [v5 addObject:v50];

        objc_destroyWeak(&v99);
        uint64_t v6 = &off_18F81A000;
      }
    }
LABEL_35:

    goto LABEL_36;
  }
LABEL_37:
  long long v51 = [v4 visibleAssociatedMessageChatItems];

  if (v51)
  {
    id v52 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v53 = [v4 visibleAssociatedMessageChatItems];
    v93[0] = MEMORY[0x1E4F143A8];
    uint64_t v54 = *((void *)v6 + 245);
    v93[1] = v54;
    v93[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_2_1156;
    v93[3] = &unk_1E5621268;
    id v55 = v52;
    id v94 = v55;
    [v53 enumerateObjectsUsingBlock:v93];

    if ([v55 count])
    {
      long long v56 = (void *)MEMORY[0x1E4F42AC8];
      long long v57 = CKFrameworkBundle();
      id v58 = [v57 localizedStringForKey:@"BALLOON_STICKER_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];
      v91[0] = MEMORY[0x1E4F143A8];
      v91[1] = v54;
      v91[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_3_1160;
      v91[3] = &unk_1E5623300;
      v91[4] = self;
      id v92 = v55;
      id v59 = [v56 actionWithTitle:v58 type:0 handler:v91];
      [v5 addObject:v59];
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v60 = [v4 mediaObject];
    id v61 = [v60 transfer];
    id v62 = [v61 attributionInfo];

    if (v62)
    {
      id v63 = objc_msgSend(v62, "__ck_localizedAppNameForTranscriptAttribution");
      if (v63)
      {
        id v85 = self;
        long long v64 = v5;
        long long v65 = v6;
        long long v66 = (void *)MEMORY[0x1E4F42AC8];
        long long v67 = NSString;
        long long v68 = CKFrameworkBundle();
        long long v69 = [v68 localizedStringForKey:@"MEDIA_ATTRIBUTION_TITLE_FORMAT" value:&stru_1EDE4CA38 table:@"ChatKit"];
        id v70 = objc_msgSend(v67, "stringWithFormat:", v69, v63);

        id v71 = [MEMORY[0x1E4F42738] sharedApplication];
        uint64_t v72 = [v71 userInterfaceLayoutDirection];

        if (v72 == 1) {
          uint64_t v73 = @"\u200F";
        }
        else {
          uint64_t v73 = @"\u200E";
        }
        long long v74 = [(__CFString *)v73 stringByAppendingString:v70];

        v88[0] = MEMORY[0x1E4F143A8];
        v88[1] = *((void *)v65 + 245);
        v88[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_4_1164;
        v88[3] = &unk_1E56232B0;
        id v89 = v62;
        objc_copyWeak(&v90, location);
        uint64_t v75 = [v66 actionWithTitle:v74 type:0 handler:v88];
        [v64 addObject:v75];

        objc_destroyWeak(&v90);
        uint64_t v6 = v65;
        objc_super v5 = v64;
        self = v85;
      }
    }
  }
  id v76 = objc_loadWeakRetained(location);
  id v77 = [v76 conversation];
  if ([v77 isPending])
  {
  }
  else
  {
    BOOL v78 = [(CKCoreChatController *)self isInline];

    if (!v78)
    {
      id v79 = (void *)MEMORY[0x1E4F42AC8];
      CGFloat v80 = CKFrameworkBundle();
      long long v81 = [v80 localizedStringForKey:@"BALLOON_MORE_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];
      v86[0] = MEMORY[0x1E4F143A8];
      v86[1] = *((void *)v6 + 245);
      v86[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_6_1169;
      v86[3] = &unk_1E5623300;
      v86[4] = self;
      id v87 = v4;
      id v82 = [v79 actionWithTitle:v81 type:0 handler:v86];
      [v5 addObject:v82];
    }
  }
  objc_destroyWeak(location);

  return v5;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setWantsInlineOverlay:1];

  *a3 = 1;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_2(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained actionRetractIsTappedForChatItem:*(void *)(a1 + 32)];

  *a3 = 1;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_3(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  objc_super v5 = [MEMORY[0x1E4F42C50] generalPasteboard];
  uint64_t v6 = [*(id *)(a1 + 32) pasteboardItemProviders];
  [v5 setItemProviders:v6];

  *a3 = 1;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  int v5 = [*(id *)(a1 + 32) isHighlighted];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v7 = [WeakRetained conversation];
  uint64_t v8 = [v7 chat];
  uint64_t v9 = [*(id *)(a1 + 32) IMChatItem];
  double v10 = [v9 guid];
  uint64_t v12 = [*(id *)(a1 + 32) messagePartRange];
  if (v5) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = 4;
  }
  objc_msgSend(v8, "sendSyndicationAction:forMessagePartGUID:syndicatedMessagePartRange:", v13, v10, v12, v11);

  *a3 = 1;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_5(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id v4 = *(id *)(a1 + 32);
  int v5 = [v4 mediaObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v6 = [v4 sender];
    int v7 = NSString;
    uint64_t v8 = CKFrameworkBundle();
    uint64_t v9 = [v8 localizedStringForKey:@"AUDIO_MESSAGE_VOICE_MEMO_LABEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
    if ([v6 hasName]) {
      [v6 name];
    }
    else {
    uint64_t v11 = [v6 displayID];
    }
    uint64_t v12 = objc_msgSend(v7, "stringWithFormat:", v9, v11);

    uint64_t v13 = [MEMORY[0x1E4F42738] sharedApplication];
    uint64_t v14 = [v13 userInterfaceLayoutDirection];

    if (v14 == 1) {
      id v15 = @"\u200F";
    }
    else {
      id v15 = @"\u200E";
    }
    double v10 = [(__CFString *)v15 stringByAppendingString:v12];
  }
  else
  {
    double v10 = 0;
  }
  int v16 = objc_alloc_init(CKMediaObjectExportManager);
  [(CKMediaObjectExportManager *)v16 setMetricsSource:*MEMORY[0x1E4F6DB50]];
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  void v18[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_6;
  v18[3] = &unk_1E56211F0;
  id v19 = v5;
  id v17 = v5;
  [(CKMediaObjectExportManager *)v16 exportMediaObject:v17 withFileName:v10 completion:v18];
  *a3 = 1;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_6(uint64_t a1, int a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  int v6 = IMOSLoggingEnabled();
  if (a2)
  {
    if (v6)
    {
      int v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        uint64_t v8 = *(void **)(a1 + 32);
        int v10 = 138412290;
        id v11 = v8;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Successfully exported media object: %@", (uint8_t *)&v10, 0xCu);
      }
LABEL_9:
    }
  }
  else if (v6)
  {
    int v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412546;
      id v11 = v5;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Error exporting media object. error: %@, mediaObject: %@", (uint8_t *)&v10, 0x16u);
    }
    goto LABEL_9;
  }
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_1150(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  if (IMOSLoggingEnabled())
  {
    CKLogCStringForType(29);
    int v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v7 = [*(id *)(a1 + 32) guid];
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      __int16 v20 = v7;
      __int16 v21 = 2112;
      uint64_t v22 = v8;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Manually downgrading message with GUID {%@} -- conversation:%@", buf, 0x16u);
    }
  }
  if (os_log_shim_legacy_logging_enabled() && _CKShouldLogExternal())
  {
    uint64_t v14 = [*(id *)(a1 + 32) guid];
    uint64_t v15 = *(void *)(a1 + 40);
    _CKLogExternal();
  }
  uint64_t v9 = objc_msgSend(*(id *)(a1 + 40), "chat", v14, v15);
  [v9 downgradeMessage:*(void *)(a1 + 32) manualDowngrade:1];

  int v10 = objc_msgSend(*(id *)(a1 + 32), "__ck_downgradedMessage");
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  __int16 v12 = [WeakRetained collectionViewController];
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  void v16[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_1154;
  v16[3] = &unk_1E5620AA8;
  void v16[4] = *(void *)(a1 + 48);
  id v17 = v10;
  id v18 = *(id *)(a1 + 40);
  id v13 = v10;
  [v12 updateTranscript:v16 animated:0 completion:0];

  *a3 = 1;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_1154(void *a1)
{
  id v1 = (void *)a1[4];
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  id v4 = [MEMORY[0x1E4F6BDB8] smsService];
  [v1 sendMessage:v2 forConversation:v3 onService:v4 newComposition:0];
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_2_1156(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_3_1160(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id v5 = [*(id *)(a1 + 32) fullScreenBalloonViewController];
  [v5 presentStickerDetailControllerWithStickers:*(void *)(a1 + 40)];

  *a3 = 0;
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_4_1164(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  dispatch_time_t v5 = dispatch_time(0, 200000000);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __49__CKChatController__interfaceActionsForChatItem___block_invoke_5_1165;
  v6[3] = &unk_1E5623328;
  id v7 = *(id *)(a1 + 32);
  objc_copyWeak(&v8, (id *)(a1 + 40));
  dispatch_after(v5, MEMORY[0x1E4F14428], v6);
  *a3 = 1;
  objc_destroyWeak(&v8);
}

void __49__CKChatController__interfaceActionsForChatItem___block_invoke_5_1165(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) objectForKey:*MEMORY[0x1E4F6D3C8]];
  uint64_t v2 = [*(id *)(a1 + 32) objectForKey:*MEMORY[0x1E4F6D3E0]];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v6, "longLongValue"));

    id v6 = (id)v3;
  }
  id v4 = [*(id *)(a1 + 32) objectForKey:*MEMORY[0x1E4F6D428]];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _presentBrowserOrAppStoreForAdamID:v6 url:v4 identifier:v2];
}

uint64_t __49__CKChatController__interfaceActionsForChatItem___block_invoke_6_1169(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t result = [*(id *)(a1 + 32) actionMoreIsTappedForChatItem:*(void *)(a1 + 40)];
  *a3 = 1;
  return result;
}

- (void)actionCancelIsTappedForChatItem:(id)a3
{
  id v7 = a3;
  objc_opt_class();
  id v4 = v7;
  if (objc_opt_isKindOfClass())
  {
    id v4 = [(CKChatController *)self currentTopChatItemForAggregateChatItem:v7];
  }
  dispatch_time_t v5 = [(CKCoreChatController *)self conversation];
  id v6 = [v4 IMChatItem];
  [v5 retractMessagePart:v6];
}

- (void)actionRetractIsTappedForChatItem:(id)a3
{
  id v4 = a3;
  objc_opt_class();
  dispatch_time_t v5 = v4;
  if (objc_opt_isKindOfClass())
  {
    dispatch_time_t v5 = [(CKChatController *)self currentTopChatItemForAggregateChatItem:v4];
  }
  dispatch_time_t v6 = dispatch_time(0, 500000000);
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 3221225472;
  uint64_t v15 = __53__CKChatController_actionRetractIsTappedForChatItem___block_invoke;
  int v16 = &unk_1E5620AF8;
  id v17 = self;
  id v18 = v5;
  id v7 = v5;
  dispatch_after(v6, MEMORY[0x1E4F14428], &v13);
  id v8 = objc_msgSend(MEMORY[0x1E4F6E890], "sharedInstance", v13, v14, v15, v16, v17);
  [v8 trackEvent:*MEMORY[0x1E4F6DBE8]];

  uint64_t v9 = [(CKChatController *)self tipManager];
  [v9 undoOrEditMessageUsed];

  int v10 = NSNumber;
  [v4 timeIntervalSinceMessageSent];
  id v11 = objc_msgSend(v10, "numberWithDouble:");
  __int16 v12 = [MEMORY[0x1E4F6E890] sharedInstance];
  [v12 trackEvent:*MEMORY[0x1E4F6DBF0] withStatistic:v11];
}

void __53__CKChatController_actionRetractIsTappedForChatItem___block_invoke(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (id *)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 32) collectionViewController];
  if ([*v2 transcriptCollectionViewControllerPlaybackForOutgoingEffectsIsAllowed:v3])
  {
    id v4 = [v3 impactEffectManager];
    [v4 playUndoSendAnimationForChatItem:*(void *)(a1 + 40)];
  }
  dispatch_time_t v5 = [*(id *)(a1 + 32) conversation];
  dispatch_time_t v6 = [*(id *)(a1 + 40) IMChatItem];
  [v5 retractMessagePart:v6];
  if (IMOSLoggingEnabled())
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v9 = 136315138;
      int v10 = "-[CKChatController actionRetractIsTappedForChatItem:]_block_invoke";
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "%s requesting purge of default snapshot", (uint8_t *)&v9, 0xCu);
    }
  }
  id v8 = objc_alloc_init(MEMORY[0x1E4FA69B8]);
  [v8 deleteSnapshotsForApplicationIdentifier:@"com.apple.MobileSMS"];
  [v8 invalidate];
}

- (void)actionMoreIsTappedForChatItem:(id)a3
{
  id v8 = a3;
  [(CKChatController *)self setEditing:1 animated:1];
  if (v8)
  {
    id v4 = [(CKCoreChatController *)self collectionViewController];
    [v4 selectChatItem:v8];
  }
  [(CKChatController *)self _updateToolbarItems];
  dispatch_time_t v5 = [(CKChatController *)self view];
  dispatch_time_t v6 = [v5 window];
  id v7 = [v6 firstResponder];
  [v7 reloadInputViews];
}

- (CGRect)fullScreenBalloonViewController:(id)a3 stickerBoundsForChatItem:(id)a4
{
  id v5 = a4;
  dispatch_time_t v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [v6 cellForAssociatedChatItem:v5];

  id v8 = [v7 associatedItemView];
  if (v8)
  {
    int v9 = [(CKChatController *)self view];
    [v8 bounds];
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    id v18 = [v8 superview];
    objc_msgSend(v9, "convertRect:fromView:", v18, v11, v13, v15, v17);
    double v20 = v19;
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;
  }
  else
  {
    double v20 = *MEMORY[0x1E4F1DB28];
    double v22 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
    double v24 = *(double *)(MEMORY[0x1E4F1DB28] + 16);
    double v26 = *(double *)(MEMORY[0x1E4F1DB28] + 24);
  }

  double v27 = v20;
  double v28 = v22;
  double v29 = v24;
  double v30 = v26;
  result.size.CGFloat height = v30;
  result.size.CGFloat width = v29;
  result.origin.CGFloat y = v28;
  result.origin.CGFloat x = v27;
  return result;
}

- (CGPoint)fullScreenBalloonViewController:(id)a3 stickerCenterForChatItem:(id)a4
{
  id v5 = a4;
  dispatch_time_t v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [v6 cellForAssociatedChatItem:v5];

  id v8 = [v7 associatedItemView];
  if (v8)
  {
    int v9 = [(CKChatController *)self view];
    [v8 center];
    double v11 = v10;
    double v13 = v12;
    double v14 = [v8 superview];
    objc_msgSend(v9, "convertPoint:fromView:", v14, v11, v13);
    double v16 = v15;
    double v18 = v17;
  }
  else
  {
    double v16 = *MEMORY[0x1E4F1DAD8];
    double v18 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
  }

  double v19 = v16;
  double v20 = v18;
  result.CGFloat y = v20;
  result.CGFloat x = v19;
  return result;
}

- (BOOL)shouldShowFullScreenAcknowledgmentPickerForChatItem:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self isShowingOscarChat]
    || [(CKChatController *)self isEditingMessage])
  {
    BOOL v5 = 0;
  }
  else
  {
    v7.receiver = self;
    v7.super_class = (Class)CKChatController;
    BOOL v5 = [(CKCoreChatController *)&v7 shouldShowFullScreenAcknowledgmentPickerForChatItem:v4];
  }

  return v5;
}

- (BOOL)shouldShowTapbackPickerForChatItem:(id)a3
{
  id v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_4;
  }
  BOOL v5 = (void *)MEMORY[0x1E4F6BCC8];
  id v6 = v4;
  uint64_t v7 = [v5 sharedInstance];
  id v8 = [v6 transferGUID];

  int v9 = [(id)v7 transferForGUID:v8];

  LOBYTE(v7) = +[CKCommSafetyHelper shouldDisableTranscriptCapabilitiesForFileTransfer:v9];
  if (v7)
  {
    BOOL v10 = 0;
  }
  else
  {
LABEL_4:
    v12.receiver = self;
    v12.super_class = (Class)CKChatController;
    BOOL v10 = [(CKCoreChatController *)&v12 shouldShowTapbackPickerForChatItem:v4];
  }

  return v10;
}

- (BOOL)shouldDismissKeyboardWhenShowingFullScreenAcknowledgmentPickerForBalloonChatItem:(id)a3
{
  [(CKChatController *)self fullScreenBalloonViewController:0 balloonFrameForChatItem:a3];
  double MaxY = CGRectGetMaxY(v19);
  BOOL v5 = [(CKChatController *)self view];
  [v5 bounds];
  double Height = CGRectGetHeight(v20);
  uint64_t v7 = [(CKChatController *)self collectionView];
  [v7 contentInset];
  double v9 = v8;

  BOOL v10 = [(CKChatController *)self isCollapsed];
  double v11 = +[CKUIBehavior sharedBehaviors];
  int v12 = [v11 canPresentOverKeyboard] ^ 1;
  if (MaxY > Height - v9) {
    int v13 = 1;
  }
  else {
    int v13 = v12;
  }

  int v14 = v13 | !v10;
  if (v14 == 1)
  {
    double v15 = [(CKChatController *)self entryView];
    double v16 = [v15 contentView];
    int v17 = [v16 isActive];

    if (v17)
    {
      [(CKChatController *)self setEntryViewWasActiveOnContextMenuPresentation:1];
      [(CKChatController *)self setTargetFirstResponder:1];
    }
  }
  return v14;
}

- (void)fullScreenBalloonViewController:(id)a3 didTapToSaveSticker:(id)a4
{
  id v5 = a4;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __72__CKChatController_fullScreenBalloonViewController_didTapToSaveSticker___block_invoke;
  _OWORD v7[3] = &unk_1E5620AF8;
  void v7[4] = self;
  id v8 = v5;
  id v6 = v5;
  [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:v7];
}

uint64_t __72__CKChatController_fullScreenBalloonViewController_didTapToSaveSticker___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) saveStickerFromTapbackAttributionFlow:*(void *)(a1 + 40)];
}

- (void)fullScreenBalloonViewControllerWillTransitionToKeyboardInput:(id)a3
{
  [(CKChatController *)self hideExistingKeyboardSnapshot];

  [(CKChatController *)self updateActiveEntryViewPositioningGuide];
}

- (void)fullScreenBalloonViewControllerWillReturnToSuggestionsPicker:(id)a3
{
  [(CKChatController *)self revealExistingKeyboardSnapshot];

  [(CKChatController *)self updateActiveEntryViewPositioningGuide];
}

- (BOOL)showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:(id)a3
{
  id v4 = a3;
  if (!v4)
  {
LABEL_8:
    LOBYTE(v7) = 0;
    goto LABEL_14;
  }
  if (![(CKCoreChatController *)self isInline])
  {
    id v5 = [(CKChatController *)self inlineReplyController];

    if (v5)
    {
      if (IMOSLoggingEnabled())
      {
        id v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Not presenting tapback picker: inlineReplyController active", buf, 2u);
        }
      }
      goto LABEL_8;
    }
  }
  id v8 = [(CKCoreChatController *)self collectionViewController];
  double v9 = [v8 chatItems];
  BOOL v10 = objc_msgSend(v9, "objectAtIndex:", objc_msgSend(v4, "item"));

  v13.receiver = self;
  v13.super_class = (Class)CKChatController;
  BOOL v7 = [(CKCoreChatController *)&v13 showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:v4];
  if (v7)
  {
    if ([(CKChatController *)self shouldDismissKeyboardWhenShowingFullScreenAcknowledgmentPickerForBalloonChatItem:v10])
    {
      double v11 = [(CKCoreChatController *)self inputController];
      [v11 dismissBrowserViewController];

      [(CKChatController *)self dismissKeyboard];
    }
    [(CKChatController *)self hideAssociatedCellsForChatItem:v10];
    [(CKChatController *)self updateActiveEntryViewPositioningGuide];
  }

LABEL_14:
  return v7;
}

- (void)hideAssociatedCellsForChatItem:(id)a3
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id obj = [a3 visibleAssociatedMessageChatItems];
  uint64_t v3 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v16 + 1) + 8 * v6);
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();
        objc_opt_class();
        int v9 = objc_opt_isKindOfClass();
        BOOL v10 = +[CKUIBehavior sharedBehaviors];
        int v11 = [v10 longPressHidesAssociatedAcknowledgments];

        if ((isKindOfClass & 1) != 0 || (v9 & v11) != 0)
        {
          int v12 = [(CKCoreChatController *)self collectionViewController];
          objc_super v13 = [v12 cellForAssociatedChatItem:v7];

          [v13 performHide:0];
        }
        ++v6;
      }
      while (v4 != v6);
      uint64_t v4 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v4);
  }
}

- (void)setIgnoresAutomaticScrollsTowardBottom:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v4 = [(CKCoreChatController *)self collectionViewController];
  id v5 = [v4 collectionView];

  [v5 setIgnoresAutomaticScrollsTowardBottom:v3];
}

- (void)showSMSReportSpamExtensionControllerForMessages:(id)a3
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = (objc_class *)MEMORY[0x192FBA860](@"ILMessageCommunication", @"IdentityLookup");
  long long v33 = (objc_class *)MEMORY[0x192FBA860](@"ILMessageClassificationRequest", @"IdentityLookup");
  uint64_t v6 = MEMORY[0x192FBA860](@"ILClassificationUIExtensionHostViewController", @"IdentityLookupUI");
  if (v5 && v33 && v6)
  {
    Class v29 = (Class)v6;
    uint64_t v32 = v4;
    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "SMS Report Spam classes exist -- going to display controller", buf, 2u);
      }
    }
    long long v31 = self;
    id v8 = [(CKCoreChatController *)self chat];
    int v9 = [v8 participants];
    long long v36 = [v9 firstObject];

    id v35 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    id obj = v32;
    uint64_t v10 = [obj countByEnumeratingWithState:&v41 objects:v47 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v42;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v42 != v11) {
            objc_enumerationMutation(obj);
          }
          objc_super v13 = *(void **)(*((void *)&v41 + 1) + 8 * i);
          if ([v13 hasDataDetectorResults])
          {
            int v14 = [v13 body];
            double v15 = [v14 string];
          }
          else
          {
            double v15 = [v13 plainBody];
          }
          id v16 = [v5 alloc];
          long long v17 = [v36 ID];
          long long v18 = objc_msgSend(v17, "im_stripCategoryLabel");
          long long v19 = [v13 time];
          CGRect v20 = (void *)[v16 initWithSender:v18 dateReceived:v19 messageBody:v15];

          [v35 addObject:v20];
        }
        uint64_t v10 = [obj countByEnumeratingWithState:&v41 objects:v47 count:16];
      }
      while (v10);
    }

    if (IMOSLoggingEnabled())
    {
      uint64_t v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v46 = v35;
        _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Going to report the following communications: %@", buf, 0xCu);
      }
    }
    double v22 = (void *)[[v33 alloc] initWithMessageCommunications:v35];
    id v23 = [v30 alloc];
    double v24 = [v36 ID];
    double v25 = [v36 countryCode];
    double v26 = (void *)[v23 initUnactivatedVCWithRequest:v22 sender:v24 isoCountryCode:v25];

    [v26 setDelegate:v31];
    v37[0] = MEMORY[0x1E4F143A8];
    v37[1] = 3221225472;
    v37[2] = __68__CKChatController_showSMSReportSpamExtensionControllerForMessages___block_invoke;
    v37[3] = &unk_1E5623350;
    id v38 = v22;
    id v39 = v31;
    id v40 = v26;
    id v27 = v26;
    id v28 = v22;
    [v27 activateExtensionWithCompletion:v37];

    id v4 = v32;
  }
}

void __68__CKChatController_showSMSReportSpamExtensionControllerForMessages___block_invoke(uint64_t a1)
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __68__CKChatController_showSMSReportSpamExtensionControllerForMessages___block_invoke_2;
  block[3] = &unk_1E5620AA8;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = *(void **)(a1 + 48);
  id v6 = v2;
  uint64_t v7 = v3;
  id v8 = v4;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t __68__CKChatController_showSMSReportSpamExtensionControllerForMessages___block_invoke_2(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v3;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Going to display spam extension for message classification request: %@", (uint8_t *)&v5, 0xCu);
    }
  }
  return [*(id *)(a1 + 40) presentViewController:*(void *)(a1 + 48) animated:1 completion:0];
}

- (BOOL)isFullScreenBalloonViewOnScreen
{
  uint64_t v3 = [(CKChatController *)self inlineReplyController];

  if (v3)
  {
    id v4 = [(CKChatController *)self inlineReplyController];
    char v5 = [v4 isFullScreenBalloonViewOnScreen];

    return v5;
  }
  else
  {
    v7.receiver = self;
    v7.super_class = (Class)CKChatController;
    return [(CKCoreChatController *)&v7 isFullScreenBalloonViewOnScreen];
  }
}

- (CGRect)fullScreenBalloonViewController:(id)a3 balloonFrameForChatItem:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v6 balloonFrameForChatItem:v7];
LABEL_10:
    double v16 = v8;
    double v18 = v9;
    double v20 = v10;
    double v22 = v11;
    goto LABEL_11;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v12 = [(CKCoreChatController *)self collectionViewController];
    objc_super v13 = [v12 balloonViewForChatItem:v7];

    int v14 = [(CKChatController *)self view];
    objc_msgSend(v13, "ck_identityTransformFrameInView:", v14);
    double v16 = v15;
    double v18 = v17;
    double v20 = v19;
    double v22 = v21;
  }
  else
  {
    uint64_t v23 = [v6 supplementaryLayoutChatItem];
    if (!v23
      || (double v24 = (void *)v23,
          [v6 supplementaryLayoutChatItem],
          double v25 = objc_claimAutoreleasedReturnValue(),
          objc_opt_class(),
          char isKindOfClass = objc_opt_isKindOfClass(),
          v25,
          v24,
          (isKindOfClass & 1) == 0))
    {
      v39.receiver = self;
      v39.super_class = (Class)CKChatController;
      [(CKCoreChatController *)&v39 fullScreenBalloonViewController:v6 balloonFrameForChatItem:v7];
      goto LABEL_10;
    }
    id v27 = [(CKChatController *)self view];
    objc_super v13 = [v27 coordinateSpace];

    id v28 = [(CKCoreChatController *)self collectionViewController];
    Class v29 = [v6 supplementaryLayoutChatItem];
    double v30 = [v28 balloonViewForChatItem:v29];

    [v30 currentAssetFrameInCoordinateSpace:v13];
    double v16 = v31;
    double v18 = v32;
    double v20 = v33;
    double v22 = v34;
  }
LABEL_11:

  double v35 = v16;
  double v36 = v18;
  double v37 = v20;
  double v38 = v22;
  result.size.CGFloat height = v38;
  result.size.CGFloat width = v37;
  result.origin.CGFloat y = v36;
  result.origin.CGFloat x = v35;
  return result;
}

- (void)fullScreenBalloonViewControllerHandleDismissTap:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewControllerHandleDismissTap:v4];
  }
  else
  {
    v5.receiver = self;
    v5.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v5 fullScreenBalloonViewControllerHandleDismissTap:v4];
  }
}

- (BOOL)fullScreenBalloonViewControllerShouldShowReplyButton:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    unsigned __int8 v5 = [(CKChatController *)self photosGridFullScreenBalloonViewControllerShouldShowReplyButton:v4];
  }
  else
  {
    v8.receiver = self;
    v8.super_class = (Class)CKChatController;
    unsigned __int8 v5 = [(CKCoreChatController *)&v8 fullScreenBalloonViewControllerShouldShowReplyButton:v4];
  }
  BOOL v6 = v5;

  return v6;
}

- (BOOL)fullScreenBalloonViewControllerShouldShowHightlightButton:(id)a3 forChatItem:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    unsigned __int8 v8 = [(CKChatController *)self photosGridFullScreenBalloonViewControllerShouldShowHightlightButton:v7 forChatItem:v6];
  }
  else
  {
    v11.receiver = self;
    v11.super_class = (Class)CKChatController;
    unsigned __int8 v8 = [(CKCoreChatController *)&v11 fullScreenBalloonViewControllerShouldShowHightlightButton:v7 forChatItem:v6];
  }
  BOOL v9 = v8;

  return v9;
}

- (void)fullScreenBalloonViewController:(id)a3 sendMessageHighlight:(BOOL)a4 forChatItem:(id)a5
{
  BOOL v5 = a4;
  id v8 = a5;
  id v9 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v9 sendMessageHighlight:v5 forChatItem:v8];
  }
  else
  {
    v10.receiver = self;
    v10.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v10 fullScreenBalloonViewController:v9 sendMessageHighlight:v5 forChatItem:v8];
  }
}

- (void)fullScreenBalloonViewController:(id)a3 willAppearAnimated:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v6 didAppearAnimated:v4];
  }
  else
  {
    id v7 = [(CKChatController *)self collectionView];
    [v7 setTranscriptScrollIntent:8];

    v10.receiver = self;
    v10.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v10 fullScreenBalloonViewController:v6 willAppearAnimated:v4];
    id v8 = [v6 displayConfiguration];
    uint64_t v9 = [v8 type];

    if (v9 == 1) {
      [(CKChatController *)self requestShowKeyboardSnapshotForReason:16];
    }
    [(CKChatController *)self updateActiveEntryViewPositioningGuide];
  }
}

- (void)fullScreenBalloonViewController:(id)a3 didAppearAnimated:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v6 didAppearAnimated:v4];
  }
  else
  {
    id v7 = [(CKCoreChatController *)self collectionViewController];
    id v8 = [v7 collectionView];
    [v8 contentOffset];
    self->_startingScrollOffset.CGFloat x = v9;
    self->_startingScrollOffset.CGFloat y = v10;

    v11.receiver = self;
    v11.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v11 fullScreenBalloonViewController:v6 didAppearAnimated:v4];
    [(CKChatController *)self beginHoldingAutorotationForKey:@"CKAutorotationFullScreenBubble"];
    [(CKChatController *)self updateActiveEntryViewPositioningGuide];
  }
}

- (double)_currentScrollDelta
{
  uint64_t v3 = [(CKCoreChatController *)self collectionViewController];
  BOOL v4 = [v3 collectionView];
  [v4 contentOffset];
  double v6 = v5;

  return self->_startingScrollOffset.y - v6;
}

- (void)fullScreenBalloonViewController:(id)a3 willDisappearWithSendAnimation:(BOOL)a4 duration:(double)a5
{
  BOOL v6 = a4;
  id v8 = a3;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v8 willDisappearWithSendAnimation:v6];
  }
  else
  {
    v18.receiver = self;
    v18.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v18 fullScreenBalloonViewController:v8 willDisappearWithSendAnimation:v6 duration:a5];
    [(CKChatController *)self setIgnoresAutomaticScrollsTowardBottom:0];
    [(CKChatController *)self _currentScrollDelta];
    if (v9 != 0.0)
    {
      double v10 = v9;
      objc_super v11 = [(CKCoreChatController *)self fullScreenBalloonViewController];
      int v12 = [v11 displayConfiguration];
      uint64_t v13 = [v12 type];

      if (v13 == 2)
      {
        int v14 = [v8 chatItem];
        [(CKChatController *)self updateChatItemBalloonViewAndStickerViews:v14 hidden:1];
      }
      double v15 = [v8 displayConfiguration];
      int v16 = [v15 shouldReturnToStartingScrollOffset];

      if (v16)
      {
        double v17 = [(CKCoreChatController *)self collectionViewController];
        [v17 verticallyScrollTranscriptByAmount:1 animated:0 duration:v10 completion:a5];
      }
    }
  }
}

- (void)fullScreenBalloonViewController:(id)a3 sendMessageAcknowledgment:(int64_t)a4 forChatItem:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v8 sendMessageAcknowledgment:a4 forChatItem:v9];
  }
  else
  {
    double v10 = [(CKChatController *)self revealAnimationGroup];
    dispatch_group_enter(v10);

    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __90__CKChatController_fullScreenBalloonViewController_sendMessageAcknowledgment_forChatItem___block_invoke;
    v11[3] = &unk_1E5620E38;
    void v11[4] = self;
    int64_t v13 = a4;
    id v12 = v9;
    [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:1 completion:v11];
  }
}

void __90__CKChatController_fullScreenBalloonViewController_sendMessageAcknowledgment_forChatItem___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) revealAnimationGroup];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __90__CKChatController_fullScreenBalloonViewController_sendMessageAcknowledgment_forChatItem___block_invoke_2;
  block[3] = &unk_1E5620E38;
  BOOL v4 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  void block[4] = *(void *)(a1 + 32);
  uint64_t v8 = v3;
  id v7 = v4;
  dispatch_group_notify(v2, MEMORY[0x1E4F14428], block);

  double v5 = [*(id *)(a1 + 32) revealAnimationGroup];
  dispatch_group_leave(v5);
}

void __90__CKChatController_fullScreenBalloonViewController_sendMessageAcknowledgment_forChatItem___block_invoke_2(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chat];
  [v2 sendMessageAcknowledgment:*(void *)(a1 + 48) forChatItem:*(void *)(a1 + 40)];

  if (([*(id *)(a1 + 32) showingInStandAloneWindow] & 1) == 0)
  {
    uint64_t v3 = [*(id *)(a1 + 32) delegate];
    if (v3)
    {
      BOOL v4 = (void *)v3;
      double v5 = [*(id *)(a1 + 32) delegate];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        id v9 = [*(id *)(a1 + 32) delegate];
        id v7 = [v9 conversationListController];
        uint64_t v8 = [*(id *)(a1 + 32) conversation];
        [v7 updateConversationListForMessageSentToConversation:v8];
      }
    }
  }
}

- (void)fullScreenBalloonViewControllerDidDisappear:(id)a3
{
  id v4 = a3;
  double v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v6 = [v5 isExpressiveTextEnabled];

  if (v6)
  {
    id v7 = [(CKCoreChatController *)self collectionViewController];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [v7 setTextEffectCoordinatorPaused:0 reason:@"fullscreen view controller did disappear"];
    }
  }
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewControllerDidDisappear:v4];
  }
  else
  {
    uint64_t v8 = [v4 supplementaryLayoutChatItem];
    id v9 = v8;
    if (v8)
    {
      id v10 = v8;
    }
    else
    {
      id v10 = [v4 chatItem];
    }
    objc_super v11 = v10;

    id v12 = [(CKCoreChatController *)self collectionViewController];
    int64_t v13 = [v4 chatItem];
    int v14 = [v12 balloonViewForChatItem:v13];

    [v14 setInvisibleInkEffectPaused:0];
    if (([v4 willPresentInlineReplies] & 1) == 0)
    {
      double v15 = [v4 chatItem];
      [(CKChatController *)self updateChatItemBalloonViewAndStickerViews:v15 hidden:0];
    }
    uint64_t v20 = MEMORY[0x1E4F143A8];
    uint64_t v21 = 3221225472;
    double v22 = __64__CKChatController_fullScreenBalloonViewControllerDidDisappear___block_invoke;
    uint64_t v23 = &unk_1E5620AF8;
    id v16 = v4;
    id v24 = v16;
    double v25 = self;
    double v17 = _Block_copy(&v20);
    objc_super v18 = objc_msgSend(v16, "displayConfiguration", v20, v21, v22, v23);
    uint64_t v19 = [v18 shouldShowStickers] ^ 1;

    [(CKChatController *)self showAssociatedCellsForChatItem:v11 animated:v19 completion:v17];
  }
}

void __64__CKChatController_fullScreenBalloonViewControllerDidDisappear___block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v11.receiver = *(id *)(a1 + 40);
  v11.super_class = (Class)CKChatController;
  objc_msgSendSuper2(&v11, sel_fullScreenBalloonViewControllerDidDisappear_, v2);
  [*(id *)(a1 + 40) endHoldingAutorotationForKey:@"CKAutorotationFullScreenBubble"];
  if ([*(id *)(a1 + 40) targetFirstResponder] == 1) {
    [*(id *)(a1 + 40) becomeFirstResponder];
  }
  uint64_t v3 = [*(id *)(a1 + 40) collectionViewController];
  [v3 updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset];

  id v4 = +[CKScrollViewAnimationProperties systemDefaultScrollAnimation];
  double v5 = [*(id *)(a1 + 40) collectionViewController];
  int v6 = [v5 collectionView];
  [v6 enforceTranscriptScrollIntentWithAnimationProperties:v4];

  [*(id *)(a1 + 40) setRevealAnimationGroup:0];
  if (([*(id *)(a1 + 40) isAnimatingStickerReaction] & 1) == 0)
  {
    id v7 = [*(id *)(a1 + 40) inputController];
    [v7 endStickerReactionSession];

    [*(id *)(a1 + 40) updateActiveEntryViewPositioningGuide];
  }
  uint64_t v8 = [*(id *)(a1 + 32) view];
  [v8 removeFromSuperview];

  id v9 = [*(id *)(a1 + 32) displayConfiguration];
  uint64_t v10 = [v9 type];

  if (v10 == 1) {
    [*(id *)(a1 + 40) requestDismissKeyboardSnapshotForReason:16];
  }
}

- (void)showAssociatedCellsForChatItem:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  BOOL v30 = a4;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  dispatch_block_t block = a5;
  id v27 = v6;
  id v28 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id obj = [v6 visibleAssociatedMessageChatItems];
  uint64_t v7 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v39;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v39 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void *)(*((void *)&v38 + 1) + 8 * i);
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();
        objc_opt_class();
        int v13 = objc_opt_isKindOfClass();
        int v14 = +[CKUIBehavior sharedBehaviors];
        int v15 = [v14 longPressHidesAssociatedAcknowledgments];

        if ((isKindOfClass & 1) != 0 || (v13 & v15) != 0) {
          [v28 addObject:v11];
        }
      }
      uint64_t v8 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
    }
    while (v8);
  }

  id v16 = [(CKChatController *)self revealAnimationGroup];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v17 = v28;
  uint64_t v18 = [v17 countByEnumeratingWithState:&v34 objects:v42 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v35;
    do
    {
      for (uint64_t j = 0; j != v19; ++j)
      {
        if (*(void *)v35 != v20) {
          objc_enumerationMutation(v17);
        }
        uint64_t v22 = *(void *)(*((void *)&v34 + 1) + 8 * j);
        uint64_t v23 = [(CKCoreChatController *)self collectionViewController];
        id v24 = [v23 cellForAssociatedChatItem:v22];

        if (v24)
        {
          dispatch_group_enter(v16);
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 3221225472;
          aBlock[2] = __71__CKChatController_showAssociatedCellsForChatItem_animated_completion___block_invoke;
          aBlock[3] = &unk_1E5620C40;
          double v33 = v16;
          double v25 = _Block_copy(aBlock);
          [v24 performRevealAnimated:v30 completion:v25];
        }
      }
      uint64_t v19 = [v17 countByEnumeratingWithState:&v34 objects:v42 count:16];
    }
    while (v19);
  }

  if (block) {
    dispatch_group_notify(v16, MEMORY[0x1E4F14428], block);
  }
}

void __71__CKChatController_showAssociatedCellsForChatItem_animated_completion___block_invoke(uint64_t a1)
{
}

- (OS_dispatch_group)revealAnimationGroup
{
  revealAnimationGroup = self->_revealAnimationGroup;
  if (!revealAnimationGroup)
  {
    id v4 = (OS_dispatch_group *)dispatch_group_create();
    double v5 = self->_revealAnimationGroup;
    self->_revealAnimationGroup = v4;

    revealAnimationGroup = self->_revealAnimationGroup;
  }

  return revealAnimationGroup;
}

- (void)fullScreenBalloonViewController:(id)a3 verticallyScrollTranscriptByAmount:(double)a4 animated:(BOOL)a5 duration:(double)a6 completion:(id)a7
{
  BOOL v9 = a5;
  id v14 = a3;
  id v12 = a7;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v14 verticallyScrollTranscriptByAmount:v9 animated:v12 duration:a4 completion:a6];
  }
  else
  {
    int v13 = [(CKCoreChatController *)self collectionViewController];
    [v13 verticallyScrollTranscriptByAmount:v9 animated:v12 duration:a4 completion:a6];
  }
}

- (void)fullScreenBalloonViewController:(id)a3 stickerPackTappedWithAdamID:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v6 stickerPackTappedWithAdamID:v7];
  }
  else
  {
    dispatch_time_t v8 = dispatch_time(0, 300000000);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    void v9[2] = __80__CKChatController_fullScreenBalloonViewController_stickerPackTappedWithAdamID___block_invoke;
    _OWORD v9[3] = &unk_1E5620AF8;
    void v9[4] = self;
    id v10 = v7;
    dispatch_after(v8, MEMORY[0x1E4F14428], v9);
  }
}

uint64_t __80__CKChatController_fullScreenBalloonViewController_stickerPackTappedWithAdamID___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _presentAppStoreForAdamID:*(void *)(a1 + 40)];
}

- (void)_presentAppStoreForAdamID:(id)a3
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    double v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412290;
      id v9 = v4;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "present app store for ID: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  id v6 = [(CKCoreChatController *)self inputController];
  [v6 presentAppStoreForAdamID:v4];

  id v7 = [MEMORY[0x1E4F6E890] sharedInstance];
  [v7 trackEvent:*MEMORY[0x1E4F6D758]];
}

- (void)fullScreenBalloonViewController:(id)a3 deleteStickerWithTransferGUID:(id)a4
{
  id v7 = a3;
  id v6 = a4;
  if ([(CKChatController *)self photosGridViewPresented]) {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v7 deleteStickerWithTransferGUID:v6];
  }
  else {
    [(CKChatController *)self _deleteStickerWithTransferGUID:v6];
  }
}

- (void)fullScreenBalloonViewController:(id)a3 didRequestSaveSticker:(id)a4
{
}

- (void)_deleteStickerWithTransferGUID:(id)a3
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  double v5 = [(CKCoreChatController *)self chat];
  v11[0] = v4;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
  [v5 deleteTransfers:v6];

  if (IMOSLoggingEnabled())
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v9 = 136315138;
      uint64_t v10 = "-[CKChatController _deleteStickerWithTransferGUID:]";
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "%s requesting purge of default snapshot", (uint8_t *)&v9, 0xCu);
    }
  }
  id v8 = objc_alloc_init(MEMORY[0x1E4FA69B8]);
  [v8 deleteSnapshotsForApplicationIdentifier:@"com.apple.MobileSMS"];
  [v8 invalidate];
}

- (void)fullScreenBalloonViewController:(id)a3 replyButtonPressedForChatItem:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(CKChatController *)self photosGridViewPresented])
  {
    [(CKChatController *)self photosGridFullScreenBalloonViewController:v6 replyButtonPressedForChatItem:v7];
  }
  else
  {
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = __82__CKChatController_fullScreenBalloonViewController_replyButtonPressedForChatItem___block_invoke;
    v8[3] = &unk_1E5620AF8;
    id v9 = v7;
    uint64_t v10 = self;
    [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:v8];
  }
}

uint64_t __82__CKChatController_fullScreenBalloonViewController_replyButtonPressedForChatItem___block_invoke(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (v1) {
    return [*(id *)(result + 40) showInlineReplyControllerForChatItem:v1 presentKeyboard:1];
  }
  return result;
}

- (id)chatItems
{
  uint64_t v2 = [(CKCoreChatController *)self chat];
  uint64_t v3 = [v2 chatItems];

  return v3;
}

- (BOOL)_anyLegacyBannerIsVisible
{
  uint64_t v3 = [(CKChatController *)self nicknameBanner];
  if (v3)
  {
    BOOL v4 = 1;
  }
  else
  {
    double v5 = [(CKChatController *)self groupPhotoUpdateBanner];
    BOOL v4 = v5 != 0;
  }
  return v4;
}

- (BOOL)_anySuggestionPresenterWantsToShowBanner
{
  uint64_t v3 = [(CKChatController *)self standardSuggestionPresenter];
  if ([v3 wantsToShowBanner])
  {
    char v4 = 1;
  }
  else
  {
    double v5 = [(CKChatController *)self foundInSuggestionPresenter];
    char v4 = [v5 wantsToShowBanner];
  }
  return v4;
}

- (BOOL)_wantsToShowCollaborationNotices
{
  uint64_t v2 = [(CKChatController *)self collaborationNoticeSuggestions];
  BOOL v3 = [v2 count] != 0;

  return v3;
}

- (void)suggestionPresenterWantsToShowBanner:(id)a3
{
  id v9 = a3;
  char v4 = [(CKChatController *)self suggestionBannerView];
  uint64_t v5 = v4 == 0;

  id v6 = [v9 banner];
  [(CKChatController *)self setSuggestionBannerView:v6];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = [(CKChatController *)self transitionContext];
    uint64_t v5 = [v7 isParentChatControllerShowingBanner] ^ 1;
  }
  id v8 = [v9 banner];
  [(CKChatController *)self addSuggestionBanner:v8 animated:v5];
}

- (void)suggestionPresenterWantsToHideBanner:(id)a3
{
  id v12 = a3;
  id v4 = [(CKChatController *)self standardSuggestionPresenter];
  if (v4 == v12)
  {
  }
  else
  {
    id v5 = [(CKChatController *)self foundInSuggestionPresenter];

    id v6 = v12;
    if (v5 != v12) {
      goto LABEL_11;
    }
  }
  id v7 = [(CKChatController *)self standardSuggestionPresenter];
  if (v7 == v12) {
    [(CKChatController *)self foundInSuggestionPresenter];
  }
  else {
  id v8 = [(CKChatController *)self standardSuggestionPresenter];
  }

  id v9 = [v12 banner];
  [(CKChatController *)self removeSuggestionsBanner:v9 animated:1];

  [(CKChatController *)self setSuggestionBannerView:0];
  if ([v8 wantsToShowBanner])
  {
    uint64_t v10 = [v12 banner];
    [(CKChatController *)self setSuggestionBannerView:v10];

    uint64_t v11 = [v8 banner];
    [(CKChatController *)self addSuggestionBanner:v11 animated:1];
  }
  id v6 = v12;
LABEL_11:
}

- (void)removeSuggestionsBanner:(id)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if (v4)
  {
    id v7 = [(CKChatController *)self view];
    [v7 layoutIfNeeded];

    id v8 = (void *)MEMORY[0x1E4F42FF0];
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __53__CKChatController_removeSuggestionsBanner_animated___block_invoke;
    v14[3] = &unk_1E5620AF8;
    id v15 = v6;
    id v16 = self;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __53__CKChatController_removeSuggestionsBanner_animated___block_invoke_2;
    v11[3] = &unk_1E5621EA8;
    id v12 = v15;
    int v13 = self;
    [v8 animateWithDuration:v14 animations:v11 completion:0.3];
  }
  else
  {
    id v9 = [(CKChatController *)self suggestionBannerTopConstraint];
    [v6 removeConstraint:v9];

    suggestionBannerTopConstraint = self->_suggestionBannerTopConstraint;
    self->_suggestionBannerTopConstraint = 0;

    [v6 removeFromSuperview];
    [(CKChatController *)self _updateTranscriptOffsetForBannerView];
  }
}

uint64_t __53__CKChatController_removeSuggestionsBanner_animated___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  [*(id *)(a1 + 40) suggestionBannerHeight];
  double v3 = -v2;
  BOOL v4 = [*(id *)(a1 + 40) suggestionBannerTopConstraint];
  [v4 setConstant:v3];

  [*(id *)(a1 + 32) setNeedsUpdateConstraints];
  id v5 = [*(id *)(a1 + 40) view];
  [v5 layoutIfNeeded];

  id v6 = *(void **)(a1 + 40);

  return [v6 _updateTranscriptOffsetForBannerView];
}

uint64_t __53__CKChatController_removeSuggestionsBanner_animated___block_invoke_2(uint64_t a1)
{
  double v2 = *(void **)(a1 + 32);
  double v3 = [*(id *)(a1 + 40) suggestionBannerTopConstraint];
  [v2 removeConstraint:v3];

  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = *(void **)(v4 + 1552);
  *(void *)(v4 + 1552) = 0;

  id v6 = *(void **)(a1 + 32);

  return [v6 removeFromSuperview];
}

- (void)addSuggestionBanner:(id)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if (v6)
  {
    id v7 = (void *)CFPreferencesCopyAppValue(@"AppCanShowSiriSuggestionsBlacklist", @"com.apple.suggestions");
    char v8 = [v7 containsObject:@"com.apple.MobileSMS"];

    if ((v8 & 1) == 0)
    {
      id v9 = [v6 superview];

      if (v9) {
        [(CKChatController *)self removeSuggestionsBanner:v6 animated:0];
      }
      [v6 intrinsicContentSize];
      self->_suggestionBannerdouble Height = v10;
      [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
      uint64_t v11 = [(CKChatController *)self view];
      [v11 addSubview:v6];

      id v12 = [v6 superview];
      int v13 = [(CKChatController *)self view];

      if (v12 == v13)
      {
        id v17 = [v6 leadingAnchor];
        uint64_t v18 = [(CKChatController *)self view];
        uint64_t v19 = [v18 leadingAnchor];
        uint64_t v20 = [v17 constraintEqualToAnchor:v19];
        [v20 setActive:1];

        uint64_t v21 = [v6 trailingAnchor];
        uint64_t v22 = [(CKChatController *)self view];
        uint64_t v23 = [v22 trailingAnchor];
        id v24 = [v21 constraintEqualToAnchor:v23];
        [v24 setActive:1];

        double v25 = [v6 topAnchor];
        double v26 = [(CKChatController *)self view];
        id v27 = [v26 safeAreaLayoutGuide];
        id v28 = [v27 topAnchor];
        if (v4)
        {
          [(CKChatController *)self suggestionBannerHeight];
          BOOL v30 = [v25 constraintEqualToAnchor:v28 constant:-v29];
          [(CKChatController *)self setSuggestionBannerTopConstraint:v30];

          double v31 = [(CKChatController *)self suggestionBannerTopConstraint];
          [v31 setActive:1];

          [v6 setAlpha:0.0];
          double v32 = [(CKChatController *)self view];
          [v32 layoutIfNeeded];

          double v33 = (void *)MEMORY[0x1E4F42FF0];
          v37[0] = MEMORY[0x1E4F143A8];
          v37[1] = 3221225472;
          v37[2] = __49__CKChatController_addSuggestionBanner_animated___block_invoke;
          v37[3] = &unk_1E5620AF8;
          id v38 = v6;
          long long v39 = self;
          [v33 animateWithDuration:v37 animations:0.3];
        }
        else
        {
          long long v34 = [v25 constraintEqualToAnchor:v28 constant:0.0];
          [(CKChatController *)self setSuggestionBannerTopConstraint:v34];

          long long v35 = [(CKChatController *)self suggestionBannerTopConstraint];
          [v35 setActive:1];

          long long v36 = [(CKChatController *)self view];
          [v36 layoutIfNeeded];

          [(CKChatController *)self _updateTranscriptOffsetForBannerView];
        }
      }
      else
      {
        if (IMOSLoggingEnabled())
        {
          id v14 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            id v15 = [v6 superview];
            id v16 = [(CKChatController *)self view];
            *(_DWORD *)long long buf = 138412546;
            id v41 = v15;
            __int16 v42 = 2112;
            long long v43 = v16;
            _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "CKChatController - Not displaying suggestions banner, banner superview: %@ isn't the chat controller's view: %@ after insertion", buf, 0x16u);
          }
        }
        [v6 removeFromSuperview];
      }
    }
  }
}

uint64_t __49__CKChatController_addSuggestionBanner_animated___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  double v2 = [*(id *)(a1 + 40) suggestionBannerTopConstraint];
  [v2 setConstant:0.0];

  [*(id *)(a1 + 32) setNeedsUpdateConstraints];
  double v3 = [*(id *)(a1 + 40) view];
  [v3 layoutIfNeeded];

  BOOL v4 = *(void **)(a1 + 40);

  return [v4 _updateTranscriptOffsetForBannerView];
}

- (void)_updateTranscriptOffsetForBannerView
{
  double v3 = [(CKChatController *)self collectionView];
  [v3 contentOffset];
  double v5 = v4;
  double v7 = v6;

  char v8 = [(CKChatController *)self collectionView];
  [v8 contentInset];
  double v10 = v9;

  [(CKScrollViewController *)self updateScrollGeometryWithInheritedAnimationForReason:@"BannerChangedSize"];
  uint64_t v11 = [(CKChatController *)self collectionView];
  [v11 contentInset];
  double v13 = v12;

  id v14 = [(CKChatController *)self collectionView];
  objc_msgSend(v14, "setContentOffset:", v5, v7 - (v13 - v10));
}

- (void)_handleChatItemDidChange:(id)a3
{
  id v4 = a3;
  [(CKChatController *)self removeLoadingIndicatorCoverIfNeeded];
  [(CKChatController *)self checkSuggestionsForBanner];
  double v5 = [v4 userInfo];

  double v6 = [v5 objectForKey:*MEMORY[0x1E4F6B8E0]];

  double v7 = [MEMORY[0x1E4F1CA48] array];
  char v8 = [(CKCoreChatController *)self conversation];
  double v9 = [v8 chat];
  double v10 = [v9 chatItems];
  uint64_t v11 = [v10 count];

  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 3221225472;
  id v17 = __45__CKChatController__handleChatItemDidChange___block_invoke;
  uint64_t v18 = &unk_1E5623378;
  id v19 = v7;
  uint64_t v20 = self;
  id v21 = v6;
  uint64_t v22 = v11;
  id v12 = v6;
  id v13 = v7;
  [v12 enumerateIndexesUsingBlock:&v15];
  id v14 = [(CKCoreChatController *)self inputController];
  [v14 notifyBrowserViewControllerOfMatchingNewMessages:v13];
}

void __45__CKChatController__handleChatItemDidChange___block_invoke(uint64_t a1, unint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 56) <= a2)
  {
    if (IMOSLoggingEnabled())
    {
      char v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        uint64_t v9 = [*(id *)(a1 + 48) count];
        uint64_t v10 = *(void *)(a1 + 56);
        int v12 = 134218496;
        unint64_t v13 = a2;
        __int16 v14 = 2048;
        uint64_t v15 = v9;
        __int16 v16 = 2048;
        uint64_t v17 = v10;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Index out of bounds for inserted index %ld. Inserted Index count = %ld, chat items count = %ld", (uint8_t *)&v12, 0x20u);
      }
    }
  }
  else
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v11 = [*(id *)(a1 + 40) conversation];
    double v5 = [v11 chat];
    double v6 = [v5 chatItems];
    double v7 = [v6 objectAtIndex:a2];
    [v4 addObject:v7];
  }
}

- (void)_handleKeyTransparencyShouldRefresh:(id)a3
{
  id v3 = [(CKCoreChatController *)self chat];
  [v3 refreshServiceForSending];
}

- (void)_handleInterworkingStateChanged:(id)a3
{
  id v3 = [(CKChatController *)self entryView];
  [v3 updateEntryView];
}

- (BOOL)_hasExistingBannerMatchingStyle:(unint64_t)a3 withNicknames:(id)a4
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v6 = a4;
  double v7 = [(CKChatController *)self nicknameBanner];
  char v8 = v7;
  if (v7
    && [v7 style] == a3
    && ([v8 nicknameUpdates],
        uint64_t v9 = objc_claimAutoreleasedReturnValue(),
        int v10 = [v9 isEqualToArray:v6],
        v9,
        v10))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        int v14 = 138412290;
        uint64_t v15 = v8;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Asked to represent identical banner, bailing! Existing is %@", (uint8_t *)&v14, 0xCu);
      }
    }
    BOOL v12 = 1;
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

- (void)clearHandlesFromScrutiny:(id)a3
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v10 + 1) + 8 * v7);
        uint64_t v9 = [MEMORY[0x1E4F6BD50] sharedInstance];
        [v9 clearHandleFromScrutiny:v8];

        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }
}

- (BOOL)shouldNotShowGroupBanners
{
  id v3 = [(CKCoreChatController *)self conversation];
  uint64_t v4 = [v3 groupIdentityUpdateHandleID];
  if (v4)
  {
    uint64_t v5 = [(CKCoreChatController *)self conversation];
    if ([v5 isGroupConversation] && !-[CKCoreChatController isInline](self, "isInline"))
    {
      uint64_t v7 = +[CKUIBehavior sharedBehaviors];
      if ([v7 areBannersSupported]) {
        char v6 = IMIsRunningInScreenshotTesting_IsolatedTranscriptUI();
      }
      else {
        char v6 = 1;
      }
    }
    else
    {
      char v6 = 1;
    }
  }
  else
  {
    char v6 = 1;
  }

  return v6;
}

- (BOOL)showGroupBannerUpdateIfNeeded
{
  v15[1] = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self shouldNotShowGroupBanners]) {
    return 0;
  }
  id v3 = [(CKChatController *)self groupPhotoUpdateBanner];

  if (!v3)
  {
    uint64_t v4 = [(CKCoreChatController *)self conversation];
    uint64_t v5 = [v4 conversationVisualIdentityWithKeys:MEMORY[0x1E4F1CBF0] requestedNumberOfContactsToFetch:0];
    char v6 = [v5 groupPhoto];
    uint64_t v7 = [v5 groupName];
    if ([v4 shouldShowGroupPhotoUpdateBanner]
      && [v4 shouldShowGroupNameUpdateBanner])
    {
      if ([v6 length] && objc_msgSend(v7, "length"))
      {
        uint64_t v8 = 3;
      }
      else if ([v6 length])
      {
        uint64_t v8 = 8;
      }
      else if ([v7 length])
      {
        uint64_t v8 = 7;
      }
      else
      {
        uint64_t v8 = 6;
      }
    }
    else if ([v4 shouldShowGroupNameUpdateBanner] && objc_msgSend(v7, "length"))
    {
      uint64_t v8 = 1;
    }
    else if ([v4 shouldShowGroupNameUpdateBanner] && !objc_msgSend(v7, "length"))
    {
      uint64_t v8 = 5;
    }
    else if ([v4 shouldShowGroupPhotoUpdateBanner] && objc_msgSend(v6, "length"))
    {
      uint64_t v8 = 2;
    }
    else
    {
      if (![v4 shouldShowGroupPhotoUpdateBanner] || v6) {
        goto LABEL_27;
      }
      uint64_t v8 = 4;
    }
    uint64_t v9 = [(CKChatController *)self createGroupUpdateWithType:v8];
    if (v9)
    {
      long long v10 = (void *)v9;
      v15[0] = v9;
      long long v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v15 count:1];
      long long v12 = [(CKChatController *)self createBannerForGroupUpdates:v11];
      [(CKChatController *)self setGroupPhotoUpdateBanner:v12];
    }
LABEL_27:
  }
  long long v13 = [(CKChatController *)self groupPhotoUpdateBanner];

  if (v13) {
    return [(CKChatController *)self presentUpdateBanner];
  }
  return 0;
}

- (id)createGroupUpdateWithType:(int64_t)a3
{
  uint64_t v5 = [CKGroupUpdate alloc];
  char v6 = [(CKCoreChatController *)self conversation];
  uint64_t v7 = [v6 groupIdentityUpdateHandleID];
  uint64_t v8 = [(CKGroupUpdate *)v5 initWithType:a3 handleID:v7];

  return v8;
}

- (BOOL)presentUpdateBanner
{
  id v3 = [(CKChatController *)self view];
  uint64_t v4 = [(CKChatController *)self groupPhotoUpdateBanner];
  [v3 addSubview:v4];

  uint64_t v5 = [(CKChatController *)self groupPhotoUpdateBanner];
  [(CKChatController *)self _presentBannerView:v5 completion:0];

  return 1;
}

- (BOOL)accountCanCreateNickname
{
  double v2 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v3 = [v2 isAllowMultiplePhoneNumbersSNaPEnabled];

  int v4 = IMSharedHelperNickNameEnabled();
  if (v3)
  {
    if (v4)
    {
      uint64_t v5 = [MEMORY[0x1E4F6BD50] sharedInstance];
      LOBYTE(v6) = [v5 iCloudSignedInToUseNicknames];
LABEL_9:

      return v6;
    }
  }
  else if (v4)
  {
    uint64_t v5 = [MEMORY[0x1E4F6BD50] sharedInstance];
    if ([v5 iCloudSignedInToUseNicknames]) {
      int v6 = [MEMORY[0x1E4F6BD50] multiplePhoneNumbersTiedToAppleID] ^ 1;
    }
    else {
      LOBYTE(v6) = 0;
    }
    goto LABEL_9;
  }
  LOBYTE(v6) = 0;
  return v6;
}

- (BOOL)_showOrHideNicknameBannerIfNeeded
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v3 = [(CKCoreChatController *)self chat];
  char v4 = [v3 isStewieChat];

  if ((v4 & 1) == 0 && ![(CKChatController *)self isShowingOscarChat])
  {
    uint64_t v5 = [(CKCoreChatController *)self conversation];
    char v6 = [v5 isWithMyself];

    if ((v6 & 1) == 0)
    {
      uint64_t v47 = 0;
      uint64_t v9 = [(CKCoreChatController *)self _retrieveNicknameBannerUpdatesIfNeeded:&v47];
      if (v9)
      {
        if (!v47 || [(CKChatController *)self _wantsToShowCollaborationNotices])
        {
          long long v10 = [(CKChatController *)self nicknameBanner];

          if (v10)
          {
            long long v11 = [(CKChatController *)self nicknameBanner];
            v40[0] = MEMORY[0x1E4F143A8];
            v40[1] = 3221225472;
            void v40[2] = __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_7;
            v40[3] = &unk_1E5620C40;
            void v40[4] = self;
            [(CKChatController *)self _dismissBannerView:v11 completion:v40];
          }
          BOOL v7 = [v9 count] != 0;
          goto LABEL_14;
        }
        if (![(CKChatController *)self _hasExistingBannerMatchingStyle:v47 withNicknames:v9])
        {
          if (IMOSLoggingEnabled())
          {
            long long v12 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 134218242;
              *(void *)&uint8_t buf[4] = v47;
              __int16 v49 = 2112;
              long long v50 = v9;
              _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Will present nickname banner with state %lu, and updates %@", buf, 0x16u);
            }
          }
          if (v47 == (char *)4)
          {
            uint64_t v13 = 0;
          }
          else
          {
            int v14 = [(CKCoreChatController *)self conversation];
            uint64_t v13 = [v14 isGroupConversation];
          }
          *(void *)long long buf = 0;
          objc_initWeak((id *)buf, self);
          uint64_t v15 = [v9 firstObject];
          long long v39 = [v15 contact];
          int v16 = CKIsRunningInMacCatalyst();
          if (v39) {
            BOOL v17 = 0;
          }
          else {
            BOOL v17 = v16 == 0;
          }
          if (v17 && (unint64_t)(v47 - 4) >= 3)
          {
            id v38 = +[CKNicknameUtility addContactOptionsMenuItemsWithTarget:self update:v15];
          }
          else
          {
            id v38 = 0;
            if (v47 == (char *)3 && v39)
            {
              id v38 = +[CKNicknameUtility updateNameAndPhotoMenuItemsWithTarget:self update:v15];
            }
          }
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 3221225472;
          aBlock[2] = __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke;
          aBlock[3] = &unk_1E56233C8;
          v46[1] = v47;
          objc_copyWeak(v46, (id *)buf);
          id v18 = v9;
          id v45 = v18;
          long long v37 = _Block_copy(aBlock);
          long long v36 = +[CKNicknameUtility bannerTitleTextWithUpdates:v18 style:v47 useNamedTitles:v13];
          long long v35 = +[CKNicknameUtility bannerSubtitleTextWithUpdates:v18 style:v47];
          long long v34 = +[CKNicknameUtility bannerActionButtonStringWithUpdates:v18 style:v47];
          v41[0] = MEMORY[0x1E4F143A8];
          v41[1] = 3221225472;
          v41[2] = __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_4;
          v41[3] = &unk_1E56233F0;
          objc_copyWeak(&v43, (id *)buf);
          id v19 = v18;
          id v42 = v19;
          uint64_t v20 = _Block_copy(v41);
          id v21 = +[CKNicknameUtility avatarContactsForUpdates:v19 style:v47];
          uint64_t v22 = +[CKNicknameUtility customImageForUpdate:v15 style:v47];
          uint64_t v23 = [CKNicknameBannerView alloc];
          id v24 = [(CKNicknameBannerView *)v23 initWithStyle:v47 updates:v19 useNamedTitles:v13 avatarImages:0 contacts:v21 customImage:v22 titleString:v36 subtitleString:v35 actionButtonTitle:v34 actionButtonHandler:v20 actionButtonMenuItems:v38 xButtonHandler:v37];
          if ([(CKChatController *)self _anySuggestionPresenterWantsToShowBanner])
          {
            double v25 = [(CKChatController *)self suggestionBannerView];
            BOOL v26 = v25 == 0;

            if (!v26)
            {
              id v27 = [(CKChatController *)self suggestionBannerView];
              [(CKChatController *)self removeSuggestionsBanner:v27 animated:1];
            }
          }
          id v28 = [(CKChatController *)self nicknameBanner];

          if (v28)
          {
            double v29 = [(CKChatController *)self nicknameBanner];
            BOOL v30 = [v29 nicknameUpdates];
            double v31 = objc_msgSend(v30, "__imArrayByApplyingBlock:", &__block_literal_global_1226);

            double v32 = [(CKChatController *)self nicknameBanner];
            [(CKChatController *)self _replaceBannerView:v32 withNewBannerView:v24 placingHandlesUnderScrutiny:v31 completion:0];

            [(CKChatController *)self setNicknameBanner:v24];
          }
          else
          {
            [(CKChatController *)self setNicknameBanner:v24];
            double v33 = [(CKNicknameBannerView *)v24 nicknameUpdates];
            double v31 = objc_msgSend(v33, "__imArrayByApplyingBlock:", &__block_literal_global_1228);

            [(CKChatController *)self _presentBannerView:v24 placingHandlesUnderScrutiny:v31 completion:0];
          }

          objc_destroyWeak(&v43);
          objc_destroyWeak(v46);

          objc_destroyWeak((id *)buf);
          BOOL v7 = 1;
          goto LABEL_14;
        }
      }
      BOOL v7 = 0;
LABEL_14:

      return v7;
    }
  }
  return 0;
}

void __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke(id *a1, void *a2)
{
  id v3 = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_2;
  aBlock[3] = &unk_1E56233A0;
  v18[1] = a1[6];
  char v4 = a1 + 5;
  objc_copyWeak(v18, a1 + 5);
  id v17 = a1[4];
  uint64_t v5 = _Block_copy(aBlock);
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained setNicknameBanner:0];

  id v7 = objc_loadWeakRetained(v4);
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_3;
  v13[3] = &unk_1E5621358;
  id v8 = v5;
  id v14 = v8;
  objc_copyWeak(&v15, v4);
  [v7 _dismissBannerView:v3 completion:v13];

  id v9 = objc_loadWeakRetained(v4);
  if (![v9 _anySuggestionPresenterWantsToShowBanner]) {
    goto LABEL_4;
  }
  id v10 = objc_loadWeakRetained(v4);
  long long v11 = [v10 suggestionBannerView];

  if (v11)
  {
    id v9 = objc_loadWeakRetained(v4);
    long long v12 = [v9 suggestionBannerView];
    [v9 addSuggestionBanner:v12 animated:1];

LABEL_4:
  }
  objc_destroyWeak(&v15);

  objc_destroyWeak(v18);
}

void __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_2(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == 5)
  {
    id v15 = [MEMORY[0x1E4F6BD50] sharedInstance];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    char v4 = [WeakRetained conversation];
    uint64_t v5 = [v4 chat];
    char v6 = [v5 participants];
    [v15 denyHandlesForNicknameSharing:v6];

    goto LABEL_5;
  }
  if (v2 == 6)
  {
    id v15 = objc_loadWeakRetained((id *)(a1 + 40));
    [v15 nicknameBannerDidInteractWithOnboardingOffer];
LABEL_5:

    return;
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        long long v12 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v13 = [MEMORY[0x1E4F6BD50] sharedInstance];
        id v14 = [v12 handle];
        [v13 clearPendingNicknameUpdatesForHandle:v14 forceClear:1];
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }
}

void __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_3(uint64_t a1)
{
  uint64_t v1 = (id *)a1;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  v1 += 5;
  id WeakRetained = objc_loadWeakRetained(v1);
  [WeakRetained setNicknameBanner:0];

  id v3 = objc_loadWeakRetained(v1);
  [v3 updateScrollGeometryWithoutAnimationForReason:@"BannerDismissed"];

  id v4 = objc_loadWeakRetained(v1);
  [v4 updateFoundInSuggestionPresenter];
}

void __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (id *)(a1 + 40);
  id v6 = a3;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained nicknameBannerView:v7 actionButtonTapped:v6 forUpdates:*(void *)(a1 + 32)];
}

uint64_t __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_5(uint64_t a1, void *a2)
{
  return [a2 handle];
}

uint64_t __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_6(uint64_t a1, void *a2)
{
  return [a2 handle];
}

uint64_t __53__CKChatController__showOrHideNicknameBannerIfNeeded__block_invoke_7(uint64_t a1)
{
  [*(id *)(a1 + 32) setNicknameBanner:0];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 updateScrollGeometryWithoutAnimationForReason:@"BannerDismissed"];
}

- (void)nicknameStoreDidChange:(id)a3
{
  [(CKChatController *)self _showOrHideNicknameBannerIfNeeded];

  [(CKChatController *)self _autoAcceptNicknameIfNeeded];
}

- (void)_autoAcceptNicknameIfNeeded
{
  v28[1] = *MEMORY[0x1E4F143B8];
  id v3 = [(CKCoreChatController *)self conversation];
  id v4 = [v3 handles];
  uint64_t v5 = [v4 firstObject];
  id v6 = [v5 ID];

  if (![(CKChatController *)self shouldShowAvatarViewInNavBarCanvas])
  {
    id v7 = [(CKCoreChatController *)self conversation];
    char v8 = [v7 isGroupConversation];

    if ((v8 & 1) == 0)
    {
      if (v6)
      {
        uint64_t v9 = [MEMORY[0x1E4F6BD50] sharedInstance];
        uint64_t v10 = (void *)MEMORY[0x1E4F1CAD0];
        v28[0] = v6;
        long long v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v28 count:1];
        long long v12 = [v10 setWithArray:v11];
        uint64_t v13 = [v9 pendingNicknameForHandleIDs:v12];
        BOOL v14 = v13 == 0;

        if (v14)
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v21 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Not auto-updating, no pending nickname available.", buf, 2u);
            }
          }
        }
        else
        {
          id v15 = [MEMORY[0x1E4F6BD50] sharedInstance];
          id v27 = v6;
          long long v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v27 count:1];
          long long v17 = [v15 createSharedProfileStateOracleForHandles:v16];

          if ([v17 effectiveStateForContact] == 1 || objc_msgSend(v17, "effectiveStateForContact") == 3)
          {
            id v22 = 0;
            id v18 = (id)[v17 updateContactAndNicknamesForAutoUpdateWithError:&v22];
            id v19 = v22;
            if (IMOSLoggingEnabled())
            {
              uint64_t v20 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412546;
                id v24 = v6;
                __int16 v25 = 2112;
                id v26 = v19;
                _os_log_impl(&dword_18EF18000, v20, OS_LOG_TYPE_INFO, "Updated contact and nicknames for recipient: %@, error: %@", buf, 0x16u);
              }
            }
          }
        }
      }
    }
  }
}

- (void)_presentBannerView:(id)a3 completion:(id)a4
{
}

- (void)_presentBannerView:(id)a3 placingHandlesUnderScrutiny:(id)a4 completion:(id)a5
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  id v44 = a3;
  id v43 = a4;
  id v42 = a5;
  if (IMOSLoggingEnabled())
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v57 = v44;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Present update banner view %@", buf, 0xCu);
    }
  }
  if ([v43 count])
  {
    long long v53 = 0u;
    long long v54 = 0u;
    long long v52 = 0u;
    long long v51 = 0u;
    id v8 = v43;
    uint64_t v9 = [v8 countByEnumeratingWithState:&v51 objects:v55 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v52;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v52 != v10) {
            objc_enumerationMutation(v8);
          }
          long long v12 = *(void **)(*((void *)&v51 + 1) + 8 * i);
          uint64_t v13 = [MEMORY[0x1E4F6BD50] sharedInstance];
          BOOL v14 = [v13 handlesForNicknamesUnderScrutiny];
          id v15 = [v12 ID];
          int v16 = [v14 containsObject:v15];

          int v17 = IMOSLoggingEnabled();
          if (v16)
          {
            if (v17)
            {
              id v38 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
              {
                long long v39 = [v12 ID];
                *(_DWORD *)long long buf = 138412290;
                id v57 = v39;
                _os_log_impl(&dword_18EF18000, v38, OS_LOG_TYPE_INFO, "CKChatController - Skipping handling %@, under scrutiny;  now clearing from scrutiny",
                  buf,
                  0xCu);
              }
            }
            long long v40 = [MEMORY[0x1E4F6BD50] sharedInstance];
            [v40 ignorePendingNicknameUpdatesForHandle:v12];

            id v41 = [MEMORY[0x1E4F6BD50] sharedInstance];
            [v41 clearHandleFromScrutiny:v12];

            goto LABEL_39;
          }
          if (v17)
          {
            id v18 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
            {
              id v19 = [v12 ID];
              *(_DWORD *)long long buf = 138412290;
              id v57 = v19;
              _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "Placing %@ under scrutiny", buf, 0xCu);
            }
          }
          uint64_t v20 = [MEMORY[0x1E4F6BD50] sharedInstance];
          [v20 markHandleUnderScrutiny:v12];
        }
        uint64_t v9 = [v8 countByEnumeratingWithState:&v51 objects:v55 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
  }
  [v44 setAlpha:0.0];
  if ([(CKCoreChatController *)self isShowingLockoutView]
    && ([(CKCoreChatController *)self lockoutViewController],
        uint64_t v21 = objc_claimAutoreleasedReturnValue(),
        [v21 view],
        id v8 = (id)objc_claimAutoreleasedReturnValue(),
        v21,
        v8))
  {
    id v22 = [(CKChatController *)self view];
    [v22 insertSubview:v44 belowSubview:v8];
  }
  else
  {
    id v22 = [(CKChatController *)self view];
    [v22 addSubview:v44];
    id v8 = 0;
  }

  if ([v43 count])
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v57 = v43;
        _os_log_impl(&dword_18EF18000, v23, OS_LOG_TYPE_INFO, "Removing from scrutiny after presenting banner: %@", buf, 0xCu);
      }
    }
    [(CKChatController *)self clearHandlesFromScrutiny:v43];
  }
  id v24 = [(CKChatController *)self view];
  [v24 bounds];
  double v26 = v25;

  objc_msgSend(v44, "sizeThatFits:", v26, 1.79769313e308);
  double v28 = v27;
  double v30 = v29;
  [(CKScrollViewController *)self navigationBarInsets];
  objc_msgSend(v44, "setFrame:", *MEMORY[0x1E4F1DB28], v31, v28, v30);
  double v32 = [(CKChatController *)self inlineReplyController];

  if (!v32)
  {
    double v33 = [(CKChatController *)self transitionCoordinator];

    if (v33)
    {
      long long v34 = [(CKChatController *)self transitionCoordinator];
      v49[0] = MEMORY[0x1E4F143A8];
      v49[1] = 3221225472;
      v49[2] = __78__CKChatController__presentBannerView_placingHandlesUnderScrutiny_completion___block_invoke;
      v49[3] = &unk_1E5621550;
      id v35 = v44;
      id v50 = v35;
      char v36 = [v34 animateAlongsideTransition:v49 completion:0];

      if ((v36 & 1) == 0)
      {
        long long v37 = (void *)MEMORY[0x1E4F42FF0];
        v47[0] = MEMORY[0x1E4F143A8];
        v47[1] = 3221225472;
        v47[2] = __78__CKChatController__presentBannerView_placingHandlesUnderScrutiny_completion___block_invoke_2;
        v47[3] = &unk_1E5620C40;
        id v48 = v35;
        v46[0] = MEMORY[0x1E4F143A8];
        v46[1] = 3221225472;
        id v46[2] = __78__CKChatController__presentBannerView_placingHandlesUnderScrutiny_completion___block_invoke_3;
        v46[3] = &unk_1E5620BF0;
        v46[4] = self;
        [v37 animateWithDuration:v47 animations:v46 completion:0.1];
      }
    }
    else
    {
      [v44 setAlpha:1.0];
      [(CKChatController *)self _showCatchUpButtonIfNeeded];
    }
  }
LABEL_39:
}

uint64_t __78__CKChatController__presentBannerView_placingHandlesUnderScrutiny_completion___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

uint64_t __78__CKChatController__presentBannerView_placingHandlesUnderScrutiny_completion___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

uint64_t __78__CKChatController__presentBannerView_placingHandlesUnderScrutiny_completion___block_invoke_3(uint64_t a1)
{
  return [*(id *)(a1 + 32) _showCatchUpButtonIfNeeded];
}

- (void)_dismissBannerView:(id)a3 completion:(id)a4
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v22 = v6;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Dismiss banner view %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [(CKChatController *)self collectionView];
  char v10 = objc_msgSend(v9, "__ck_isScrolledToTop");

  long long v11 = (void *)MEMORY[0x1E4F42FF0];
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __50__CKChatController__dismissBannerView_completion___block_invoke;
  v19[3] = &unk_1E5620C40;
  id v20 = v6;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __50__CKChatController__dismissBannerView_completion___block_invoke_2;
  v14[3] = &unk_1E5623438;
  id v15 = v20;
  int v16 = self;
  char v18 = v10;
  id v17 = v7;
  id v12 = v7;
  id v13 = v20;
  [v11 animateWithDuration:v19 animations:v14 completion:0.1];
}

uint64_t __50__CKChatController__dismissBannerView_completion___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t __50__CKChatController__dismissBannerView_completion___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setAlpha:1.0];
  [*(id *)(a1 + 40) updateScrollGeometryWithoutAnimationForReason:@"BannerDismissed"];
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v2 = [*(id *)(a1 + 40) collectionView];
    objc_msgSend(v2, "__ck_scrollToTop:", 1);
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  id v4 = *(void **)(a1 + 40);

  return [v4 _showCatchUpButtonIfNeeded];
}

- (void)_replaceBannerView:(id)a3 withNewBannerView:(id)a4 placingHandlesUnderScrutiny:(id)a5 completion:(id)a6
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v46 = a4;
  id v45 = a5;
  id v43 = a6;
  if (IMOSLoggingEnabled())
  {
    char v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&unsigned char buf[12] = 2112;
      *(void *)&buf[14] = v46;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Replace nickname banner view %@ with new banner view %@", buf, 0x16u);
    }
  }
  id v42 = v9;
  if (v9 == v46)
  {
    if (IMOSLoggingEnabled())
    {
      id v41 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v41, OS_LOG_TYPE_INFO, "Nickname banners are equal, not replacing", buf, 2u);
      }
    }
  }
  else
  {
    long long v58 = 0u;
    long long v59 = 0u;
    long long v57 = 0u;
    long long v56 = 0u;
    id v11 = v45;
    uint64_t v12 = [v11 countByEnumeratingWithState:&v56 objects:v64 count:16];
    if (v12)
    {
      uint64_t v13 = *(void *)v57;
      while (2)
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v57 != v13) {
            objc_enumerationMutation(v11);
          }
          id v15 = *(void **)(*((void *)&v56 + 1) + 8 * i);
          int v16 = objc_msgSend(MEMORY[0x1E4F6BD50], "sharedInstance", v42, v43);
          id v17 = [v16 handlesForNicknamesUnderScrutiny];
          char v18 = [v15 ID];
          int v19 = [v17 containsObject:v18];

          int v20 = IMOSLoggingEnabled();
          if (v19)
          {
            if (v20)
            {
              long long v37 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
              {
                id v38 = [v15 ID];
                *(_DWORD *)long long buf = 138412290;
                *(void *)&uint8_t buf[4] = v38;
                _os_log_impl(&dword_18EF18000, v37, OS_LOG_TYPE_INFO, "CKChatController - Skipping handling %@, under scrutiny;  now clearing from scrutiny",
                  buf,
                  0xCu);
              }
            }
            long long v39 = [MEMORY[0x1E4F6BD50] sharedInstance];
            [v39 ignorePendingNicknameUpdatesForHandle:v15];

            long long v40 = [MEMORY[0x1E4F6BD50] sharedInstance];
            [v40 clearHandleFromScrutiny:v15];

            goto LABEL_34;
          }
          if (v20)
          {
            uint64_t v21 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
            {
              id v22 = [v15 ID];
              *(_DWORD *)long long buf = 138412290;
              *(void *)&uint8_t buf[4] = v22;
              _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Placing %@ under scrutiny", buf, 0xCu);
            }
          }
          uint64_t v23 = [MEMORY[0x1E4F6BD50] sharedInstance];
          [v23 markHandleUnderScrutiny:v15];
        }
        uint64_t v12 = [v11 countByEnumeratingWithState:&v56 objects:v64 count:16];
        if (v12) {
          continue;
        }
        break;
      }
    }

    id v24 = [(CKChatController *)self view];
    [v24 bounds];
    double v26 = v25;

    objc_msgSend(v46, "sizeThatFits:", v26, 1.79769313e308);
    double v28 = v27;
    double v30 = v29;
    [(CKScrollViewController *)self navigationBarInsets];
    objc_msgSend(v46, "setFrame:", *MEMORY[0x1E4F1DB28], v31, v28, v30);
    [v46 setAlpha:0.0];
    double v32 = [(CKChatController *)self view];
    [v32 addSubview:v46];

    if ([v11 count])
    {
      if (IMOSLoggingEnabled())
      {
        double v33 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          *(void *)&uint8_t buf[4] = v11;
          _os_log_impl(&dword_18EF18000, v33, OS_LOG_TYPE_INFO, "Removing from scrutiny after replacing banner: %@", buf, 0xCu);
        }
      }
      -[CKChatController clearHandlesFromScrutiny:](self, "clearHandlesFromScrutiny:", v11, v42);
    }
    long long v34 = [(CKChatController *)self collectionView];
    char v35 = objc_msgSend(v34, "__ck_isScrolledToTop");

    *(void *)long long buf = 0;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    id v61 = __Block_byref_object_copy__10;
    id v62 = __Block_byref_object_dispose__10;
    id v63 = 0;
    id v63 = v42;
    char v36 = (void *)MEMORY[0x1E4F42FF0];
    v53[0] = MEMORY[0x1E4F143A8];
    v53[1] = 3221225472;
    v53[2] = __96__CKChatController__replaceBannerView_withNewBannerView_placingHandlesUnderScrutiny_completion___block_invoke;
    v53[3] = &unk_1E5620AF8;
    id v54 = v63;
    id v55 = v46;
    v47[0] = MEMORY[0x1E4F143A8];
    v47[1] = 3221225472;
    v47[2] = __96__CKChatController__replaceBannerView_withNewBannerView_placingHandlesUnderScrutiny_completion___block_invoke_2;
    v47[3] = &unk_1E5623460;
    long long v51 = buf;
    id v48 = v54;
    __int16 v49 = self;
    char v52 = v35;
    id v50 = v43;
    [v36 animateWithDuration:v53 animations:v47 completion:0.1];

    _Block_object_dispose(buf, 8);
  }
LABEL_34:
}

uint64_t __96__CKChatController__replaceBannerView_withNewBannerView_placingHandlesUnderScrutiny_completion___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

uint64_t __96__CKChatController__replaceBannerView_withNewBannerView_placingHandlesUnderScrutiny_completion___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  uint64_t v2 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  [*(id *)(a1 + 40) updateScrollGeometryWithoutAnimationForReason:@"BannerChangedSize"];
  if (*(unsigned char *)(a1 + 64))
  {
    id v4 = [*(id *)(a1 + 40) collectionView];
    objc_msgSend(v4, "__ck_scrollToTop:", 1);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

- (void)groupPhotoUpdateBanner:(id)a3 dismissedUpdate:(id)a4
{
  id v6 = a3;
  unint64_t v7 = [a4 groupUpdateType];
  if ((v7 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    id v8 = [(CKCoreChatController *)self conversation];
    [v8 setShouldShowGroupNameUpdateBanner:0];
LABEL_8:

    goto LABEL_9;
  }
  if (v7 <= 8)
  {
    if (((1 << v7) & 0x1C8) != 0)
    {
      id v9 = [(CKCoreChatController *)self conversation];
      [v9 setShouldShowGroupNameUpdateBanner:0];

LABEL_7:
      id v8 = [(CKCoreChatController *)self conversation];
      [v8 setShouldShowGroupPhotoUpdateBanner:0];
      goto LABEL_8;
    }
    if (((1 << v7) & 0x14) != 0) {
      goto LABEL_7;
    }
  }
LABEL_9:
  char v10 = [(CKCoreChatController *)self conversation];
  [v10 setGroupIdentityUpdateHandleID:0];

  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __59__CKChatController_groupPhotoUpdateBanner_dismissedUpdate___block_invoke;
  v11[3] = &unk_1E5620C40;
  void v11[4] = self;
  [(CKChatController *)self _dismissBannerView:v6 completion:v11];
}

uint64_t __59__CKChatController_groupPhotoUpdateBanner_dismissedUpdate___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) setGroupPhotoUpdateBanner:0];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 updateScrollGeometryWithoutAnimationForReason:@"GroupPhotoBannerChangedSize"];
}

- (void)nicknameBannerView:(id)a3 actionButtonTapped:(id)a4 forUpdates:(id)a5
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke;
  aBlock[3] = &unk_1E5620C40;
  id v11 = v10;
  id v28 = v11;
  uint64_t v12 = _Block_copy(aBlock);
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke_2;
  v22[3] = &unk_1E56234B0;
  objc_copyWeak(&v26, &location);
  id v13 = v8;
  id v23 = v13;
  id v14 = v12;
  id v24 = self;
  id v25 = v14;
  id v15 = (void (**)(void *, void))_Block_copy(v22);
  int v16 = [v11 firstObject];
  if (IMOSLoggingEnabled())
  {
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      uint64_t v18 = [v13 style];
      *(_DWORD *)long long buf = 138412546;
      double v31 = v16;
      __int16 v32 = 2048;
      uint64_t v33 = v18;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Performing action for update %@, with style: %lu", buf, 0x16u);
    }
  }
  uint64_t v19 = [v13 style];
  uint64_t v20 = 4;
  switch(v19)
  {
    case 1:
      goto LABEL_10;
    case 2:
      uint64_t v20 = 2;
LABEL_10:
      [(CKChatController *)self updateContactQuietlyForNicknameUpdate:v16 updateType:v20];
      v15[2](v15, 0);
      break;
    case 4:
      -[CKChatController presentNicknameUpdatesViewControllerFromView:](self, "presentNicknameUpdatesViewControllerFromView:", v9, 4);
      break;
    case 5:
    case 6:
      if ([v13 style] == 6)
      {
        [(CKChatController *)self nicknameBannerDidInteractWithOnboardingOffer];
        [(CKChatController *)self showNicknameSharingOnboardingWithMemoji:1];
      }
      v21[0] = MEMORY[0x1E4F143A8];
      v21[1] = 3221225472;
      v21[2] = __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke_1230;
      v21[3] = &unk_1E5620C40;
      void v21[4] = self;
      ((void (**)(void *, void *))v15)[2](v15, v21);
      break;
    default:
      break;
  }

  objc_destroyWeak(&v26);
  objc_destroyWeak(&location);
}

void __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        id v6 = *(void **)(*((void *)&v9 + 1) + 8 * v5);
        unint64_t v7 = objc_msgSend(MEMORY[0x1E4F6BD50], "sharedInstance", (void)v9);
        id v8 = [v6 handle];
        [v7 clearPendingNicknameUpdatesForHandle:v8 forceClear:0];

        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v3);
  }
}

void __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v5 = [WeakRetained nicknameBanner];
  id v6 = *(void **)(a1 + 32);

  if (v5 == v6)
  {
    id v7 = objc_loadWeakRetained((id *)(a1 + 56));
    uint64_t v8 = *(void *)(a1 + 32);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    void v9[2] = __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke_3;
    _OWORD v9[3] = &unk_1E5623488;
    long long v10 = v3;
    id v11 = *(id *)(a1 + 48);
    objc_copyWeak(&v12, (id *)(a1 + 56));
    void v9[4] = *(void *)(a1 + 40);
    [v7 _dismissBannerView:v8 completion:v9];

    objc_destroyWeak(&v12);
  }
  else
  {
    if (v3) {
      v3[2](v3);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

uint64_t __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke_3(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setNicknameBanner:0];

  [*(id *)(a1 + 32) updateScrollGeometryWithoutAnimationForReason:@"BannerChangedSize"];
  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 updateFoundInSuggestionPresenter];
}

void __69__CKChatController_nicknameBannerView_actionButtonTapped_forUpdates___block_invoke_1230(uint64_t a1)
{
  id v9 = [MEMORY[0x1E4F6BD50] sharedInstance];
  uint64_t v2 = [*(id *)(a1 + 32) conversation];
  uint64_t v3 = [v2 chat];
  uint64_t v4 = [v3 participants];
  uint64_t v5 = [*(id *)(a1 + 32) conversation];
  id v6 = [v5 chat];
  id v7 = [*(id *)(a1 + 32) conversation];
  uint64_t v8 = [v7 lastAddressedHandle];
  [v9 allowHandlesForNicknameSharing:v4 forChat:v6 fromHandle:v8 forceSend:0];
}

- (void)presentNicknameUpdatesViewControllerFromView:(id)a3
{
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Presenting updates controller!", v10, 2u);
    }
  }
  id v6 = [(CKCoreChatController *)self _nicknameBannerUpdatesAndStyle:0];
  id v7 = +[CKNicknameUpdateListViewFactory listViewWithUpdates:v6 delegate:self];
  [(CKChatController *)self setNicknameUpdateController:v7];
  id v8 = v7;
  if (CKIsRunningInMacCatalyst())
  {
    [v8 setModalPresentationStyle:7];
    id v9 = [v8 popoverPresentationController];
    [v9 setSourceView:v4];
  }
  [(CKChatController *)self presentViewController:v8 animated:1 completion:0];
}

- (void)nicknameBannerDidInteractWithOnboardingOffer
{
  uint64_t v2 = [MEMORY[0x1E4F6E820] sharedInstance];
  if (([v2 wasSharingEverEnabled] & 1) == 0 && (objc_msgSend(v2, "sharingEnabled") & 1) == 0)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v4 = 0;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "User interacted with outgoing share CTA. Disabling.", v4, 2u);
      }
    }
    [v2 setSharingEnabled:0];
  }
}

- (id)currentNicknameUpdates
{
  return [(CKCoreChatController *)self _nicknameBannerUpdatesAndStyle:0];
}

- (void)updateInterfaceSelectedAction:(unint64_t)a3 forUpdate:(id)a4
{
  id v6 = a4;
  id v9 = [(CKChatController *)self nicknameUpdateController];
  id v7 = [(CKChatController *)self nicknameUpdateController];
  id v8 = [v7 view];
  [(CKChatController *)self nicknameUpdatesViewController:v9 selectedAction:a3 forNicknameUpdate:v6 sourceView:v8];
}

- (void)nicknameUpdatesViewController:(id)a3 selectedAction:(unint64_t)a4 forNicknameUpdate:(id)a5 sourceView:(id)a6
{
  id v24 = a3;
  id v10 = a5;
  id v11 = a6;
  switch(a4)
  {
    case 0uLL:
      id v12 = [MEMORY[0x1E4F6BD50] sharedInstance];
      id v13 = [v10 handle];
      [v12 clearPendingNicknameUpdatesForHandle:v13 forceClear:1];
      goto LABEL_8;
    case 1uLL:
      uint64_t v14 = [v10 contact];
      [(CKChatController *)self updateContact:v14 withNicknameUpdate:v10 updateType:2 addHandleToContact:0 presentationMode:3];

      id v12 = [MEMORY[0x1E4F6BD50] sharedInstance];
      id v13 = [v10 handle];
      id v15 = [v13 ID];
      [v12 acceptPendingNicknameForHandleID:v15 updateType:2];
      goto LABEL_7;
    case 2uLL:
      int v16 = [v10 contact];
      [(CKChatController *)self updateContact:v16 withNicknameUpdate:v10 updateType:4 addHandleToContact:0 presentationMode:3];

      id v17 = [MEMORY[0x1E4F6BD50] sharedInstance];
      uint64_t v18 = [v10 handle];
      uint64_t v19 = [v18 ID];
      uint64_t v20 = v17;
      uint64_t v21 = v19;
      uint64_t v22 = 4;
      goto LABEL_6;
    case 3uLL:
      id v23 = [v10 contact];
      [(CKChatController *)self updateContact:v23 withNicknameUpdate:v10 updateType:6 addHandleToContact:0 presentationMode:3];

      id v17 = [MEMORY[0x1E4F6BD50] sharedInstance];
      uint64_t v18 = [v10 handle];
      uint64_t v19 = [v18 ID];
      uint64_t v20 = v17;
      uint64_t v21 = v19;
      uint64_t v22 = 6;
LABEL_6:
      [v20 acceptPendingNicknameForHandleID:v21 updateType:v22];

      id v12 = [MEMORY[0x1E4F6BD50] sharedInstance];
      id v13 = [v10 handle];
      id v15 = [v13 ID];
      [v12 markTransitionAsObservedForHandleID:v15 isAutoUpdate:0];
LABEL_7:

LABEL_8:
      break;
    case 4uLL:
      if (CKIsRunningInMacCatalyst()) {
        [(CKChatController *)self macShowUnknownContactPopoverForNicknameUpdate:v10 presentingViewController:v24 sourceView:v11];
      }
      else {
        [(CKChatController *)self updateContact:0 withNicknameUpdate:v10 updateType:*MEMORY[0x1E4F6DDE0] addHandleToContact:1 presentationMode:1];
      }
      [(CKChatController *)self setCurrentNicknameUpdate:v10];
      break;
    case 5uLL:
      if (CKIsRunningInMacCatalyst())
      {
        [(CKChatController *)self macShowUnknownContactPopoverForNicknameUpdate:v10 presentingViewController:v24 sourceView:v11];
      }
      else
      {
        [(CKChatController *)self setCurrentNicknameUpdate:v10];
        [(CKChatController *)self selectContact];
      }
      break;
    default:
      break;
  }
}

- (BOOL)shouldShowBanners
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(CKCoreChatController *)self chat];
  id v4 = v3;
  if (v3 && ([v3 allowedToShowConversation] & 1) == 0)
  {
    if (IMOSLoggingEnabled())
    {
      id v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        id v9 = [MEMORY[0x1E4F1C9C8] date];
        [v9 timeIntervalSince1970];
        uint64_t v11 = v10;
        id v12 = [(CKCoreChatController *)self chat];
        int v14 = 134218242;
        uint64_t v15 = v11;
        __int16 v16 = 2112;
        id v17 = v12;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Bypassing checking checkSuggestionsForBanner due to downtime being on and chat containing nonallowlisted participants:   - %f %@", (uint8_t *)&v14, 0x16u);
      }
    }
    goto LABEL_11;
  }
  uint64_t v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v6 = [v5 stewieEnabled];

  if (v6 && [v4 isStewieChat])
  {
    [(CKChatController *)self _presentTranscriptSharingBannerIfNecessary];
LABEL_11:
    BOOL v7 = 0;
    goto LABEL_12;
  }
  BOOL v7 = 1;
LABEL_12:

  return v7;
}

- (void)_updateSuggestionsBanners
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self _anyLegacyBannerIsVisible]
    || [(CKChatController *)self _wantsToShowCollaborationNotices])
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        LOWORD(v7) = 0;
        _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Bypassing checkSuggestionsForBanner, another banner is already up", (uint8_t *)&v7, 2u);
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v5 = [MEMORY[0x1E4F1C9C8] date];
        [v5 timeIntervalSince1970];
        int v7 = 134217984;
        uint64_t v8 = v6;
        _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Handling _updateSuggestionsBanners - %f ", (uint8_t *)&v7, 0xCu);
      }
    }
    [(CKChatController *)self updateFoundInSuggestionPresenter];
  }
}

- (void)checkSuggestionsForBanner
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self shouldShowBanners])
  {
    if ([(CKChatController *)self _supportsCollaborationNotices]
      && [(CKChatController *)self shouldFetchCollaborationNotices])
    {
      [(CKChatController *)self _fetchCollaborationNotices];
      [(CKChatController *)self setShouldFetchCollaborationNotices:0];
    }
    else if ([(CKChatController *)self _anyLegacyBannerIsVisible] {
           || [(CKChatController *)self _wantsToShowCollaborationNotices])
    }
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v3 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
        {
          LOWORD(v7) = 0;
          _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Bypassing checkSuggestionsForBanner, another banner is already up", (uint8_t *)&v7, 2u);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        id v4 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
        {
          uint64_t v5 = [MEMORY[0x1E4F1C9C8] date];
          [v5 timeIntervalSince1970];
          int v7 = 134217984;
          uint64_t v8 = v6;
          _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Handling checkSuggestionsForBanner - %f ", (uint8_t *)&v7, 0xCu);
        }
      }
      [(CKChatController *)self _updateSuggestionsBanners];
    }
  }
}

- (BOOL)_supportsCollaborationNotices
{
  return !CKIsRunningInMessagesViewService()
      && CKIsRunningInMessagesNotificationExtension() == 0;
}

- (void)_handleCollaborationNoticesChanged:(id)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v6 = [v4 object];
  int v7 = [v5 setWithArray:v6];

  uint64_t v8 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v9 = [MEMORY[0x1E4F6BC40] sharedRegistry];
  uint64_t v10 = [(CKCoreChatController *)self conversation];
  uint64_t v11 = [v10 chat];
  id v12 = [v9 allGUIDsForChat:v11];
  id v13 = [v8 setWithArray:v12];

  LODWORD(v9) = [v7 intersectsSet:v13];
  int v14 = IMOSLoggingEnabled();
  if (v9)
  {
    if (v14)
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        int v17 = 138412290;
        uint64_t v18 = v13;
        _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Fetching CollaborationNotices in response to change notification for guids: %@.", (uint8_t *)&v17, 0xCu);
      }
    }
    [(CKChatController *)self setShouldFetchCollaborationNotices:1];
    [(CKChatController *)self checkSuggestionsForBanner];
  }
  else if (v14)
  {
    __int16 v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_18EF18000, v16, OS_LOG_TYPE_INFO, "Ignoring CollaborationNotices change notification, not relevant to displayed chat.", (uint8_t *)&v17, 2u);
    }
  }
}

- (void)_handleContactStoreBatchLoadCompleteNotification:(id)a3
{
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Fetching CollaborationNotices in response to contact store load completion", v6, 2u);
    }
  }
  [(CKChatController *)self setShouldFetchCollaborationNotices:1];
  [(CKChatController *)self checkSuggestionsForBanner];
}

- (void)_fetchCollaborationNotices
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Received CollaborationNoticesChanged notification in unsupported process.", v2, v3, v4, v5, v6);
}

void __46__CKChatController__fetchCollaborationNotices__block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __46__CKChatController__fetchCollaborationNotices__block_invoke_2;
  v6[3] = &unk_1E5620AF8;
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v6);
}

uint64_t __46__CKChatController__fetchCollaborationNotices__block_invoke_2(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v7 = 138412290;
      uint64_t v8 = v3;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Received CollaborationNotices: %@", (uint8_t *)&v7, 0xCu);
    }
  }
  id v5 = *(void **)(a1 + 40);
  uint64_t v4 = (id *)(a1 + 40);
  [v5 _processCollaborationNoticesForBanner:*(v4 - 1)];
  return [*v4 _updateSuggestionsBanners];
}

- (void)_processCollaborationNoticesForBanner:(id)a3
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F1CA48] array];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v6 = v4;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v16;
    while (2)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        if (-[CKChatController _noticeIsExpired:](self, "_noticeIsExpired:", v11, (void)v15))
        {
          int v14 = [MEMORY[0x1E4F6BC70] sharedInstance];
          [v14 dismissNotice:v11];

          goto LABEL_11;
        }
        objc_opt_class();
        id v12 = +[CKCollaborationNoticeSuggestion suggestionWithNotice:v11 delegate:self wantsInlineReplyStyle:objc_opt_isKindOfClass() & 1];
        [v5 addObject:v12];
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }

  id v13 = (void *)[v5 copy];
  [(CKChatController *)self setCollaborationNoticeSuggestions:v13];

  [(CKChatController *)self _showOrHideNicknameBannerIfNeeded];
LABEL_11:
}

- (void)setCollaborationNoticeSuggestions:(id)a3
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  objc_storeStrong((id *)&self->_collaborationNoticeSuggestions, a3);
  if (IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = [v5 count];
      uint64_t v8 = [(CKChatController *)self standardSuggestionPresenter];
      *(_DWORD *)long long buf = 134218242;
      uint64_t v24 = v7;
      __int16 v25 = 2112;
      id v26 = v8;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "setCollaborationNoticeSuggestions invoked with %lu suggestions. standardSuggestionPresenter %@", buf, 0x16u);
    }
  }
  uint64_t v9 = [(CKChatController *)self standardSuggestionPresenter];
  [v9 setSuggestions:v5];

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v10 = v5;
  uint64_t v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v19;
    do
    {
      uint64_t v13 = 0;
      do
      {
        if (*(void *)v19 != v12) {
          objc_enumerationMutation(v10);
        }
        int v14 = objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v13), "notice", (void)v18);
        long long v15 = [v14 dateViewed];
        BOOL v16 = v15 == 0;

        if (v16)
        {
          long long v17 = [MEMORY[0x1E4F6BC70] sharedInstance];
          [v17 markAsViewedForNotice:v14];
        }
        ++v13;
      }
      while (v11 != v13);
      uint64_t v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v11);
  }
}

- (BOOL)_noticeIsExpired:(id)a3
{
  id v3 = a3;
  id v4 = [v3 date];
  [v4 timeIntervalSinceNow];
  double v6 = v5;

  uint64_t v7 = [v3 dateViewed];
  if (v7)
  {
    uint64_t v8 = [v3 dateViewed];
    [v8 timeIntervalSinceNow];
    double v10 = -v9;
  }
  else
  {
    double v10 = 0.0;
  }

  uint64_t v11 = IMGetCachedDomainIntForKeyWithDefaultValue();
  BOOL v12 = v10 >= (double)IMGetCachedDomainIntForKeyWithDefaultValue() || -v6 >= (double)v11;

  return v12;
}

- (void)dismissCollaborationNoticeBannersIfNecessary
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v19 = [(CKChatController *)self standardSuggestionPresenter];
  id v3 = [v19 banner];
  id v4 = [(CKChatController *)self suggestionBannerView];
  if (v3 == v4)
  {
    double v5 = [(CKChatController *)self suggestionBannerView];
    double v6 = [v5 window];

    if (!v6) {
      return;
    }
    uint64_t v7 = [(CKChatController *)self standardSuggestionPresenter];
    uint64_t v8 = [v7 suggestions];

    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v9 = v8;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (!v10) {
      goto LABEL_19;
    }
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v21;
    while (1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v21 != v12) {
          objc_enumerationMutation(v9);
        }
        int v14 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v15 = v14;
          BOOL v16 = [v15 notice];
          if ([v16 wantsEphemeralDismissal])
          {

            goto LABEL_15;
          }
          long long v17 = [v15 notice];
          BOOL v18 = [(CKChatController *)self _noticeIsExpired:v17];

          if (v18) {
LABEL_15:
          }
            [(CKChatController *)self dismissCollaborationNoticeSuggestion:v15];

          continue;
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (!v11)
      {
LABEL_19:

        return;
      }
    }
  }
}

- (void)dismissCollaborationNoticeSuggestion:(id)a3
{
  id v4 = a3;
  double v5 = [(CKChatController *)self standardSuggestionPresenter];
  [v5 removeSuggestion:v4];

  id v7 = [MEMORY[0x1E4F6BC70] sharedInstance];
  double v6 = [v4 notice];

  [v7 dismissNotice:v6];
}

- (id)_newCollaborationPayloadFromPayload:(id)a3 shareURL:(id)a4 updatedMetadata:(id)a5
{
  id v6 = a5;
  id v7 = a3;
  uint64_t v8 = +[CKBrowserItemPayload browserItemPayloadFromIMPluginPayload:v7];
  id v9 = StringGUID();
  [v8 setMessageGUID:v9];

  uint64_t v10 = StringGUID();
  [v8 setPluginSessionGUID:v10];

  [v8 setAttachments:0];
  objc_msgSend(v8, "setPayloadCollaborationType:", objc_msgSend(v7, "payloadCollaborationType"));
  [v8 setCollaborationMetadata:v6];

  uint64_t v11 = [v7 cloudKitShare];

  [v8 setCloudKitShare:v11];
  return v8;
}

- (void)addToCollaboration:(id)a3
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  double v5 = [v4 notice];
  double v31 = [v5 senderHandle];

  id v6 = [v4 notice];
  id v7 = [v6 metadata];
  uint64_t v8 = [v7 contentURL];

  id v9 = [v4 notice];
  uint64_t v10 = [v9 metadata];
  __int16 v32 = [v10 messageGUID];

  if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412802;
      *(void *)&uint8_t buf[4] = v31;
      __int16 v42 = 2112;
      id v43 = v8;
      __int16 v44 = 2112;
      id v45 = v32;
      _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Adding handle: %@ to share URL: %@ with messageGUID: %@", buf, 0x20u);
    }
  }
  uint64_t v12 = [MEMORY[0x1E4F6BC18] sharedInstance];
  double v30 = [v12 existingDataSourceForMessageGUID:v32 bundleID:*MEMORY[0x1E4F6CC10]];

  uint64_t v13 = [v30 pluginPayload];
  int v14 = (void *)MEMORY[0x1E4F30AA8];
  id v15 = [v13 data];
  BOOL v16 = [v14 linkWithDataRepresentationWithoutSubstitutingAttachments:v15];

  long long v17 = [v16 metadata];
  BOOL v18 = [v17 collaborationMetadata];
  id v19 = [v18 containerSetupInfo];

  long long v20 = [v19 containerOptions];
  [v20 setAccountOverrideInfo:0];

  long long v21 = [v19 containerOptions];
  [v21 setPersonaIdentifier:0];

  if (IMOSLoggingEnabled())
  {
    long long v22 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v13;
      __int16 v42 = 2112;
      id v43 = v19;
      _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "Adding - PluginPayload: %@, Container Setup Info: %@", buf, 0x16u);
    }
  }
  *(void *)long long buf = 0;
  objc_initWeak((id *)buf, self);
  long long v23 = [(CKCoreChatController *)self chat];
  uint64_t v24 = [v23 guid];
  v35[0] = MEMORY[0x1E4F143A8];
  v35[1] = 3221225472;
  _DWORD v35[2] = __39__CKChatController_addToCollaboration___block_invoke;
  v35[3] = &unk_1E5623550;
  id v25 = v17;
  id v36 = v25;
  objc_copyWeak(&v40, (id *)buf);
  id v26 = v13;
  id v37 = v26;
  id v27 = v8;
  id v38 = v27;
  id v28 = v4;
  id v39 = v28;
  [(CKChatController *)self addParticipant:v31 toCollaboration:v27 forChatGUID:v24 containerSetupInfo:v19 completionHandler:v35];

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __39__CKChatController_addToCollaboration___block_invoke_2_1238;
  block[3] = &unk_1E5620AF8;
  void block[4] = self;
  id v34 = v28;
  id v29 = v28;
  dispatch_async(MEMORY[0x1E4F14428], block);

  objc_destroyWeak(&v40);
  objc_destroyWeak((id *)buf);
}

void __39__CKChatController_addToCollaboration___block_invoke(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2)
  {
    if (v5)
    {
      id v7 = v5;
    }
    else
    {
      id v7 = [*(id *)(a1 + 32) collaborationMetadata];
    }
    uint64_t v8 = v7;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    uint64_t v10 = (void *)[WeakRetained _newCollaborationPayloadFromPayload:*(void *)(a1 + 40) shareURL:*(void *)(a1 + 48) updatedMetadata:v8];

    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    void v16[2] = __39__CKChatController_addToCollaboration___block_invoke_2;
    v16[3] = &unk_1E5623528;
    id v17 = *(id *)(a1 + 48);
    objc_copyWeak(&v20, (id *)(a1 + 64));
    id v11 = v10;
    id v18 = v11;
    id v12 = v8;
    id v19 = v12;
    +[CKComposition compositionWithShelfPluginPayload:v11 completionHandler:v16];

    objc_destroyWeak(&v20);
  }
  else
  {
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = __39__CKChatController_addToCollaboration___block_invoke_1236;
    v13[3] = &unk_1E5622AB8;
    objc_copyWeak(&v15, (id *)(a1 + 64));
    id v14 = *(id *)(a1 + 56);
    dispatch_async(MEMORY[0x1E4F14428], v13);

    objc_destroyWeak(&v15);
  }
}

void __39__CKChatController_addToCollaboration___block_invoke_2(id *a1, void *a2)
{
  id v3 = a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __39__CKChatController_addToCollaboration___block_invoke_3;
  block[3] = &unk_1E5623500;
  id v6 = a1[4];
  objc_copyWeak(&v10, a1 + 7);
  id v7 = a1[5];
  id v8 = a1[6];
  id v9 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], block);

  objc_destroyWeak(&v10);
}

void __39__CKChatController_addToCollaboration___block_invoke_3(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v16 = 138412290;
      uint64_t v17 = v3;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Sending the final composition for sharingURL: %@", (uint8_t *)&v16, 0xCu);
    }
  }
  id v4 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v6 = *(void **)(a1 + 40);
  id v7 = [v6 messageGUID];
  id v8 = [WeakRetained updateDataSourceForPluginPayload:v6 forGUID:v7 withCollaborationMetadata:*(void *)(a1 + 48) shareURL:*(void *)(a1 + 32)];

  id v9 = [v8 datasource];
  [v9 setPayloadInShelf:1];

  id v10 = [v8 datasource];
  [v10 payloadWillEnterShelf];

  id v11 = [CKComposition alloc];
  id v12 = [*(id *)(a1 + 56) text];
  uint64_t v13 = [*(id *)(a1 + 56) subject];
  id v14 = [(CKComposition *)v11 initWithText:v12 subject:v13 shelfPluginPayload:v8];

  id v15 = objc_loadWeakRetained(v4);
  [v15 sendCompositionIfAllowed:v14];
}

void __39__CKChatController_addToCollaboration___block_invoke_1236(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained createCollaborationFailureAlertForNotice:*(void *)(a1 + 32)];
}

void __39__CKChatController_addToCollaboration___block_invoke_2_1238(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  [v2 removeSuggestion:*(void *)(a1 + 40)];
}

- (void)removeFromCollaboration:(id)a3
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 notice];
  id v28 = [v5 senderHandle];

  id v6 = [v4 notice];
  id v7 = [v6 metadata];
  id v27 = [v7 contentURL];

  id v8 = [v4 notice];
  id v9 = [v8 metadata];
  id v29 = [v9 messageGUID];

  if (IMOSLoggingEnabled())
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412802;
      *(void *)&uint8_t buf[4] = v28;
      __int16 v36 = 2112;
      id v37 = v27;
      __int16 v38 = 2112;
      id v39 = v29;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Removing handle: %@ from share URL: %@ with messageGUID: %@", buf, 0x20u);
    }
  }
  id v11 = [MEMORY[0x1E4F6BC18] sharedInstance];
  id v12 = [v11 existingDataSourceForMessageGUID:v29 bundleID:*MEMORY[0x1E4F6CC10]];

  uint64_t v13 = [v12 pluginPayload];
  id v14 = (void *)MEMORY[0x1E4F30AA8];
  id v15 = [v13 data];
  int v16 = [v14 linkWithDataRepresentationWithoutSubstitutingAttachments:v15];

  uint64_t v17 = [v16 metadata];
  uint64_t v18 = [v17 collaborationMetadata];
  id v19 = [v18 containerSetupInfo];

  id v20 = [v19 containerOptions];
  [v20 setAccountOverrideInfo:0];

  long long v21 = [v19 containerOptions];
  [v21 setPersonaIdentifier:0];

  if (IMOSLoggingEnabled())
  {
    long long v22 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v13;
      __int16 v36 = 2112;
      id v37 = v19;
      _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "Removing - PluginPayload: %@, Container Setup Info: %@", buf, 0x16u);
    }
  }
  *(void *)long long buf = 0;
  objc_initWeak((id *)buf, self);
  long long v23 = [(CKCoreChatController *)self chat];
  uint64_t v24 = [v23 guid];
  v32[0] = MEMORY[0x1E4F143A8];
  v32[1] = 3221225472;
  v32[2] = __44__CKChatController_removeFromCollaboration___block_invoke;
  v32[3] = &unk_1E5623578;
  objc_copyWeak(&v34, (id *)buf);
  id v25 = v4;
  id v33 = v25;
  [(CKChatController *)self removeParticipant:v28 fromCollaboration:v27 forChatGUID:v24 containerSetupInfo:v19 completionHandler:v32];

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __44__CKChatController_removeFromCollaboration___block_invoke_3;
  block[3] = &unk_1E5620AF8;
  void block[4] = self;
  id v31 = v25;
  id v26 = v25;
  dispatch_async(MEMORY[0x1E4F14428], block);

  objc_destroyWeak(&v34);
  objc_destroyWeak((id *)buf);
}

void __44__CKChatController_removeFromCollaboration___block_invoke(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __44__CKChatController_removeFromCollaboration___block_invoke_2;
    v3[3] = &unk_1E5622AB8;
    objc_copyWeak(&v5, (id *)(a1 + 40));
    id v4 = *(id *)(a1 + 32);
    dispatch_async(MEMORY[0x1E4F14428], v3);

    objc_destroyWeak(&v5);
  }
}

void __44__CKChatController_removeFromCollaboration___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained createCollaborationFailureAlertForNotice:*(void *)(a1 + 32)];
}

void __44__CKChatController_removeFromCollaboration___block_invoke_3(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  [v2 removeSuggestion:*(void *)(a1 + 40)];
}

- (void)collaborationNoticeSuggestionWillDismiss:(id)a3
{
  id v4 = a3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __61__CKChatController_collaborationNoticeSuggestionWillDismiss___block_invoke;
  v6[3] = &unk_1E5620AF8;
  void v6[4] = self;
  id v7 = v4;
  id v5 = v4;
  dispatch_async(MEMORY[0x1E4F14428], v6);
}

uint64_t __61__CKChatController_collaborationNoticeSuggestionWillDismiss___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissCollaborationNoticeSuggestion:*(void *)(a1 + 40)];
}

- (void)_satelliteStateChangedNotification:(id)a3
{
  id v4 = a3;
  id v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v6 = [v5 stewieEnabled];

  if (v6)
  {
    v12.receiver = self;
    v12.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v12 _satelliteStateChangedNotification:v4];
    if (IMOSLoggingEnabled())
    {
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v11 = 0;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Satellite state changed, determining whether to show or hide entry view and updating chat items.", v11, 2u);
      }
    }
    [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
    id v8 = [(CKCoreChatController *)self chat];
    [v8 _reloadChatItemsForSatelliteStateChangeIfRequired:@"Satellite status changed"];

    id v9 = [(CKCoreChatController *)self conversation];
    int v10 = [v9 isStewieConversation];

    if (v10) {
      [(CKChatController *)self checkSuggestionsForBanner];
    }
  }
}

- (void)_presentTranscriptSharingBannerIfNecessary
{
  uint64_t v3 = [MEMORY[0x1E4F6BC48] sharedInstance];
  char v4 = [v3 isStewieEmergencyActive];

  if (v4)
  {
    id v5 = [(CKCoreChatController *)self chat];
    uint64_t v6 = [v5 transcriptSharingState];

    if (!v6) {
      return;
    }
    id v7 = [(CKChatController *)self standardSuggestionPresenter];
    id v8 = [v7 suggestions];
    uint64_t v9 = [v8 count];

    if (v9) {
      return;
    }
    int v10 = +[CKTranscriptSharingSuggestion bannerWithState:v6];
    [(CKChatController *)self setTranscriptSharingBannerSuggestion:v10];

    id v11 = [(CKChatController *)self transcriptSharingBannerSuggestion];
    [v11 setDelegate:self];

    id v16 = [(CKChatController *)self standardSuggestionPresenter];
    objc_super v12 = [(CKChatController *)self transcriptSharingBannerSuggestion];
    [v16 addSuggestion:v12];
  }
  else
  {
    uint64_t v13 = [(CKChatController *)self standardSuggestionPresenter];
    id v14 = [v13 suggestions];
    uint64_t v15 = [v14 count];

    if (!v15) {
      return;
    }
    id v16 = [(CKChatController *)self standardSuggestionPresenter];
    objc_super v12 = [(CKChatController *)self transcriptSharingBannerSuggestion];
    [v16 removeSuggestion:v12];
  }
}

- (void)transcriptSharingBannerWillDismiss:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self chat];
  [v5 updateTranscriptSharingState:0];

  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __55__CKChatController_transcriptSharingBannerWillDismiss___block_invoke;
  _OWORD v7[3] = &unk_1E5620AF8;
  void v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  dispatch_async(MEMORY[0x1E4F14428], v7);
}

void __55__CKChatController_transcriptSharingBannerWillDismiss___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  [v2 removeSuggestion:*(void *)(a1 + 40)];
}

- (void)transcriptStopSharingButtonTapped:(id)a3
{
  id v4 = a3;
  id v5 = CKFrameworkBundle();
  id v6 = [v5 localizedStringForKey:@"TS_ALERT_TITLE_STOP_SHARING" value:&stru_1EDE4CA38 table:@"TranscriptSharing-SYDROB_FEATURES"];
  id v7 = +[CKAlertController alertControllerWithTitle:v6 message:0 preferredStyle:1];

  id v8 = CKFrameworkBundle();
  uint64_t v9 = [v8 localizedStringForKey:@"TS_STOP_SHARING_ACTION_ALERT" value:&stru_1EDE4CA38 table:@"TranscriptSharing-SYDROB_FEATURES"];
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 3221225472;
  uint64_t v17 = __54__CKChatController_transcriptStopSharingButtonTapped___block_invoke;
  uint64_t v18 = &unk_1E56218C8;
  id v19 = self;
  id v20 = v4;
  id v10 = v4;
  id v11 = +[CKAlertAction actionWithTitle:v9 style:2 handler:&v15];

  objc_msgSend(v7, "addAction:", v11, v15, v16, v17, v18, v19);
  objc_super v12 = CKFrameworkBundle();
  uint64_t v13 = [v12 localizedStringForKey:@"CANCEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
  id v14 = +[CKAlertAction actionWithTitle:v13 style:1 handler:0];

  [v7 addAction:v14];
  [v7 presentFromViewController:self animated:1 completion:0];
}

void __54__CKChatController_transcriptStopSharingButtonTapped___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chat];
  [v2 updateTranscriptSharingState:3];

  uint64_t v3 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  [v3 removeSuggestion:*(void *)(a1 + 40)];

  id v6 = +[CKTranscriptSharingSuggestion bannerWithState:3];
  [v6 setDelegate:*(void *)(a1 + 32)];
  id v4 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  [v4 addSuggestion:v6];

  id v5 = [*(id *)(a1 + 32) chat];
  [v5 stopTranscriptSharingWithChat];
}

- (void)updateFoundInSuggestionPresenter
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  __int16 v44 = [MEMORY[0x1E4F1CA48] array];
  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  id v2 = [(CKCoreChatController *)self chat];
  uint64_t v3 = [v2 chatItems];
  id obj = [v3 reverseObjectEnumerator];

  uint64_t v49 = [obj countByEnumeratingWithState:&v50 objects:v61 count:16];
  if (v49)
  {
    uint64_t v48 = *(void *)v51;
    uint64_t v45 = *MEMORY[0x1E4F1AE60];
    int v5 = 20;
    *(void *)&long long v4 = 138412546;
    long long v43 = v4;
    do
    {
      for (uint64_t i = 0; i != v49; ++i)
      {
        if (*(void *)v51 != v48) {
          objc_enumerationMutation(obj);
        }
        id v7 = *(void **)(*((void *)&v50 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & (v5 > 0)) == 1)
        {
          id v8 = v7;
          uint64_t v9 = [v8 message];
          id v10 = [v9 guid];

          if (v10)
          {
            id v11 = objc_alloc_init(MEMORY[0x1E4F23850]);
            objc_super v12 = [v8 message];
            uint64_t v13 = [v12 sender];
            int v14 = [v13 hasName];

            if (v14)
            {
              uint64_t v15 = [v8 message];
              uint64_t v16 = [v15 sender];
              uint64_t v17 = [v16 name];
            }
            else
            {
              uint64_t v17 = 0;
            }
            id v18 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            id v19 = [v8 message];
            id v20 = [v19 sender];
            long long v21 = [v20 ID];

            if (v21)
            {
              long long v22 = [v8 message];
              long long v23 = [v22 sender];
              uint64_t v24 = [v23 ID];
              [v18 addObject:v24];
            }
            else if (IMOSLoggingEnabled())
            {
              id v25 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
              {
                id v26 = [v8 message];
                *(_DWORD *)long long buf = v43;
                id v55 = v8;
                __int16 v56 = 2112;
                uint64_t v57 = (uint64_t)v26;
                _os_log_impl(&dword_18EF18000, v25, OS_LOG_TYPE_INFO, "sending id is nil. partChatItem: %@ =, message: %@", buf, 0x16u);
              }
            }
            id v27 = (void *)[objc_alloc(MEMORY[0x1E4F23810]) initWithDisplayName:v17 handles:v18 handleIdentifier:v45];
            uint64_t v60 = v27;
            id v28 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v60 count:1];
            [v11 setAuthors:v28];

            if ([v8 isFromMe]) {
              [v11 setAccountHandles:v18];
            }
            id v29 = objc_msgSend(v8, "message", v43);
            double v30 = [v29 time];

            if (v30)
            {
              id v31 = [v8 message];
              __int16 v32 = [v31 time];
              [v11 setContentCreationDate:v32];
            }
            id v33 = objc_alloc(MEMORY[0x1E4F23840]);
            id v34 = [(CKCoreChatController *)self chat];
            char v35 = [v34 guid];
            __int16 v36 = (void *)[v33 initWithUniqueIdentifier:v10 domainIdentifier:v35 attributeSet:v11];

            if (v36)
            {
              id v37 = [MEMORY[0x1E4F28B50] mainBundle];
              __int16 v38 = [v37 bundleIdentifier];
              [v36 setBundleID:v38];

              [v44 addObject:v36];
            }
          }
          --v5;
        }
        else if (v5 < 1)
        {
          goto LABEL_31;
        }
      }
      uint64_t v49 = [obj countByEnumeratingWithState:&v50 objects:v61 count:16];
    }
    while (v49);
  }
  else
  {
    int v5 = 20;
  }
LABEL_31:

  if (IMOSLoggingEnabled())
  {
    id v39 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
    {
      uint64_t v40 = [v44 count];
      id v41 = [(CKChatController *)self foundInSuggestionPresenter];
      *(_DWORD *)long long buf = 134218498;
      id v55 = (id)(20 - v5);
      __int16 v56 = 2048;
      uint64_t v57 = v40;
      __int16 v58 = 2112;
      long long v59 = v41;
      _os_log_impl(&dword_18EF18000, v39, OS_LOG_TYPE_INFO, "checkCSSearchableItemSuggestionsForBanner for %lu sliced searchables from %lu. foundInSuggestionPresenter %@", buf, 0x20u);
    }
  }
  __int16 v42 = [(CKChatController *)self foundInSuggestionPresenter];
  [v42 addSuggestionsFromSearchableItems:v44 options:0 filter:&__block_literal_global_1260];
}

id __52__CKChatController_updateFoundInSuggestionPresenter__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  id v14 = (id)objc_opt_new();
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v3 = v2;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v3);
        }
        id v7 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        MEMORY[0x192FBA860](@"SGRealtimeEvent", @"CoreSuggestions");
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v8 = v7;
          if ([v8 state] == 4 || objc_msgSend(v8, "state") == 5)
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "Filtered out Duplicate event", buf, 2u);
              }
              goto LABEL_12;
            }
            goto LABEL_20;
          }
          id v11 = [v8 event];
          int v12 = [v11 isNaturalLanguageEvent];

          if (v12)
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v9 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "Filtered out Natural Language event", buf, 2u);
              }
LABEL_12:
            }
LABEL_20:

            continue;
          }
          goto LABEL_26;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v8 = v7;
          if ([v8 updatedFields])
          {
            if (IMOSLoggingEnabled())
            {
              id v10 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "Filtered out Suggestions realtime contact", buf, 2u);
              }
            }
            goto LABEL_20;
          }
LABEL_26:
        }
        [v14 addObject:v7];
      }
      uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v4);
  }

  return v14;
}

- (BOOL)canShowBusinessOnboarding
{
  return 0;
}

- (CKOnboardingController)onboardingController
{
  onboardingController = self->_onboardingController;
  if (!onboardingController)
  {
    uint64_t v4 = objc_alloc_init(CKOnboardingController);
    uint64_t v5 = self->_onboardingController;
    self->_onboardingController = v4;

    [(CKOnboardingController *)self->_onboardingController setDelegate:self];
    onboardingController = self->_onboardingController;
  }

  return onboardingController;
}

- (id)presentingViewControllerForOnboardingController:(id)a3
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKChatController *)self onboardingController];

  if (v5 == v4)
  {
    id v7 = self;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v9 = 138412290;
        id v10 = v4;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Unexpected instance of onboardingController %@", (uint8_t *)&v9, 0xCu);
      }
    }
    id v7 = 0;
  }

  return v7;
}

- (void)onboardingControllerDidFinish:(id)a3
{
}

- (BOOL)_shouldShowNicknameOnboardingFlow
{
  if (IMSharedHelperNickNameEnabled())
  {
    id v2 = [MEMORY[0x1E4F6BD50] sharedInstance];
    if ([v2 iCloudSignedInToUseNicknames]) {
      int v3 = [MEMORY[0x1E4F6BD50] multiplePhoneNumbersTiedToAppleID] ^ 1;
    }
    else {
      LOBYTE(v3) = 0;
    }
  }
  else
  {
    LOBYTE(v3) = 0;
  }
  return v3;
}

- (BOOL)showNicknameSharingOnboardingWithMemoji:(BOOL)a3
{
  BOOL v3 = a3;
  if (![(CKChatController *)self _shouldShowNicknameOnboardingFlow]) {
    return 0;
  }
  id v5 = [MEMORY[0x1E4F6E820] sharedInstance];
  char v6 = [v5 sharingEnabled];
  if ((v6 & 1) == 0)
  {
    id v7 = [(CKChatController *)self onboardingController];
    [v7 presentNicknameSharingSetupFlowWithMemoji:v3 forUserInitiatedEdit:1];
  }
  char v8 = v6 ^ 1;

  return v8;
}

- (id)_meContact
{
  id v2 = [MEMORY[0x1E4F6E6D8] sharedInstance];
  BOOL v3 = [MEMORY[0x1E4F6E6D8] keysForNicknameHandling];
  id v4 = [v2 fetchMeContactWithKeys:v3];

  return v4;
}

- (id)textDroppableView:(id)a3 proposalForDrop:(id)a4
{
  id v5 = a4;
  char v6 = [(CKChatController *)self entryView];
  if ([v6 displayMode] == 2)
  {

LABEL_4:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  id v7 = [(CKChatController *)self entryView];
  uint64_t v8 = [v7 displayMode];

  if (v8 == 3) {
    goto LABEL_4;
  }
  if ([v5 isSameView]) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = 2;
  }
LABEL_8:
  id v10 = (void *)[objc_alloc(MEMORY[0x1E4F42F00]) initWithDropOperation:v9];
  [v10 setDropAction:0];
  uint64_t v11 = IMLogHandleForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController textDroppableView:proposalForDrop:]();
  }

  return v10;
}

- (void)textPasteConfigurationSupporting:(id)a3 transformPasteItem:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (!self->_dropComposition)
  {
    uint64_t v8 = +[CKComposition composition];
    dropComposition = self->_dropComposition;
    self->_dropComposition = v8;
  }
  id v10 = [(CKCoreChatController *)self conversation];
  uint64_t v11 = objc_alloc_init(_TtC7ChatKit27CKCompositionBuilderContext);
  -[CKCompositionBuilderContext setIsInLockdownMode:](v11, "setIsInLockdownMode:", [MEMORY[0x1E4F6E730] deviceIsLockedDown]);
  int v12 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v13 = [v12 isExpressiveTextEnabled];

  if (v13)
  {
    id v14 = [v10 chat];
    -[CKCompositionBuilderContext setSupportsExpressiveText:](v11, "setSupportsExpressiveText:", [v14 supportsCapabilities:0x100000]);
  }
  -[CKCompositionBuilderContext setConversationSupportsInlineAdaptiveImageGlyphs:](v11, "setConversationSupportsInlineAdaptiveImageGlyphs:", [v10 supportsInlineAdaptiveImageGlyphs]);
  [(CKCompositionBuilderContext *)v11 setCanUseRichTextAttributes:1];
  uint64_t v15 = [v7 itemProvider];
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  void v17[2] = __72__CKChatController_textPasteConfigurationSupporting_transformPasteItem___block_invoke;
  v17[3] = &unk_1E56235C0;
  void v17[4] = self;
  id v18 = v7;
  id v16 = v7;
  +[CKComposition requestCompositionFromItemProvider:v15 builderContext:v11 completion:v17];
}

void __72__CKChatController_textPasteConfigurationSupporting_transformPasteItem___block_invoke(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 1304) compositionByAppendingComposition:v4];
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 1304);
    *(void *)(v6 + 1304) = v5;

    uint64_t v8 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v9 = [v8 isAudioMessagesEntryViewRecordingEnabled];

    if (v9)
    {
      if ([v4 isAudioComposition]) {
        objc_storeStrong((id *)(*(void *)(a1 + 32) + 1304), a2);
      }
    }
  }
  id v10 = IMLogHandleForCategory();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
    __72__CKChatController_textPasteConfigurationSupporting_transformPasteItem___block_invoke_cold_1();
  }

  [*(id *)(a1 + 40) setNoResult];
}

- (id)textPasteConfigurationSupporting:(id)a3 combineItemAttributedStrings:(id)a4 forRange:(id)a5
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (self->_dropComposition)
  {
    int v12 = [(CKChatController *)self entryView];
    id v13 = [v12 pasteBoardTextFromComposition:self->_dropComposition];

    id v14 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v15 = [v14 isAudioMessagesEntryViewRecordingEnabled];

    if (v15 && [(CKComposition *)self->_dropComposition isAudioComposition])
    {

      int v16 = 1;
    }
    else
    {
      if (v13)
      {
        dropComposition = self->_dropComposition;
        self->_dropComposition = 0;

        goto LABEL_29;
      }
      int v16 = 0;
    }
    long long v22 = [(CKComposition *)self->_dropComposition shelfPluginPayload];
    if (v22)
    {
    }
    else
    {
      long long v23 = [(CKComposition *)self->_dropComposition shelfMediaObject];
      BOOL v24 = v23 == 0;

      if (v24 & ~v16)
      {
LABEL_28:
        id v13 = 0;
        goto LABEL_29;
      }
    }
    uint64_t v44 = 0;
    uint64_t v45 = &v44;
    uint64_t v46 = 0x3032000000;
    uint64_t v47 = __Block_byref_object_copy__10;
    uint64_t v48 = __Block_byref_object_dispose__10;
    id v49 = 0;
    id v25 = [(CKChatController *)self entryView];
    id v49 = [v25 composition];

    uint64_t v40 = 0;
    id v41 = &v40;
    uint64_t v42 = 0x2020000000;
    char v43 = 0;
    id v26 = [(id)v45[5] shelfPluginPayload];
    LOBYTE(v25) = v26 != 0;

    char v43 = (char)v25;
    id v27 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v28 = [v27 isAudioMessagesEntryViewRecordingEnabled];

    if (v28)
    {
      id v29 = v41;
      char v30 = *((unsigned char *)v41 + 24) != 0;
      if (!*((unsigned char *)v41 + 24) && ((v16 ^ 1) & 1) == 0)
      {
        char v30 = [(id)v45[5] hasContent];
        id v29 = v41;
      }
      *((unsigned char *)v29 + 24) = v30;
    }
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke;
    aBlock[3] = &unk_1E5623610;
    void aBlock[4] = self;
    void aBlock[5] = &v40;
    void aBlock[6] = &v44;
    id v31 = _Block_copy(aBlock);
    __int16 v32 = v31;
    if (*((unsigned char *)v41 + 24))
    {
      v37[0] = MEMORY[0x1E4F143A8];
      v37[1] = 3221225472;
      v37[2] = __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke_3;
      v37[3] = &unk_1E5620F48;
      id v38 = v31;
      v35[0] = MEMORY[0x1E4F143A8];
      v35[1] = 3221225472;
      _DWORD v35[2] = __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke_4;
      v35[3] = &unk_1E5620F48;
      id v36 = v38;
      [(CKChatController *)self presentReplaceCompositionAlertWithConfirmationBlock:v37 cancelBlock:v35];
    }
    else
    {
      (*((void (**)(void *, uint64_t))v31 + 2))(v31, 1);
    }

    _Block_object_dispose(&v40, 8);
    _Block_object_dispose(&v44, 8);

    goto LABEL_28;
  }
  id v13 = objc_alloc_init(MEMORY[0x1E4F28E48]);
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id v18 = v10;
  uint64_t v19 = [v18 countByEnumeratingWithState:&v50 objects:v54 count:16];
  if (v19)
  {
    uint64_t v20 = *(void *)v51;
    do
    {
      for (uint64_t i = 0; i != v19; ++i)
      {
        if (*(void *)v51 != v20) {
          objc_enumerationMutation(v18);
        }
        [v13 appendAttributedString:*(void *)(*((void *)&v50 + 1) + 8 * i)];
      }
      uint64_t v19 = [v18 countByEnumeratingWithState:&v50 objects:v54 count:16];
    }
    while (v19);
  }

LABEL_29:
  id v33 = IMLogHandleForCategory();
  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController textPasteConfigurationSupporting:combineItemAttributedStrings:forRange:](a2);
  }

  return v13;
}

void __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke(uint64_t a1, char a2)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) || (a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v6 = *(void **)(v5 + 40);
    id v7 = *(void **)(*(void *)(a1 + 32) + 1304);
    if (v6)
    {
      uint64_t v8 = [v6 compositionByAppendingComposition:v7];
      uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
      id v10 = *(void **)(v9 + 40);
      *(void *)(v9 + 40) = v8;
    }
    else
    {
      id v11 = v7;
      id v10 = *(void **)(v5 + 40);
      *(void *)(v5 + 40) = v11;
    }

    if ([*(id *)(*(void *)(a1 + 32) + 1304) isAudioComposition]) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(id *)(*(void *)(a1 + 32) + 1304));
    }
    id location = 0;
    objc_initWeak(&location, *(id *)(a1 + 32));
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke_2;
    block[3] = &unk_1E56235E8;
    objc_copyWeak(&v15, &location);
    void block[4] = *(void *)(a1 + 48);
    dispatch_async(MEMORY[0x1E4F14428], block);
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = *(void **)(v12 + 1304);
    *(void *)(v12 + 1304) = 0;

    objc_destroyWeak(&v15);
    objc_destroyWeak(&location);
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 1304);
    *(void *)(v3 + 1304) = 0;
  }
}

void __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained entryView];
  [v2 setComposition:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

uint64_t __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __91__CKChatController_textPasteConfigurationSupporting_combineItemAttributedStrings_forRange___block_invoke_4(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl(&dword_18EF18000, v2, OS_LOG_TYPE_INFO, "Do not replace composition, return.", v4, 2u);
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (id)textPasteConfigurationSupporting:(id)a3 performPasteOfAttributedString:(id)a4 toRange:(id)a5
{
  id v8 = a3;
  [v8 handlePastedString:a4 toRange:a5];
  uint64_t v9 = IMLogHandleForCategory();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController textPasteConfigurationSupporting:performPasteOfAttributedString:toRange:](a2);
  }

  id v10 = [v8 selectedTextRange];

  return v10;
}

- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)a3
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(&self->_currentDragPreviewContainer);

  if (WeakRetained)
  {
    uint64_t v6 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v4];
    if (v6)
    {
      id v7 = [(CKChatController *)self collectionView];
      [v7 setScrollEnabled:0];

      id v8 = objc_loadWeakRetained(&self->_currentDragPreviewContainer);
      v9[0] = MEMORY[0x1E4F143A8];
      v9[1] = 3221225472;
      void v9[2] = __65__CKChatController__dragInteractionDidCancelLiftWithoutDragging___block_invoke;
      _OWORD v9[3] = &unk_1E5620AF8;
      void v9[4] = self;
      id v10 = v4;
      [v8 _animateLiftCancellationAlongsideAnimator:0 completion:v9];

      objc_storeWeak(&self->_currentDragPreviewContainer, 0);
    }
  }
}

void __65__CKChatController__dragInteractionDidCancelLiftWithoutDragging___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) collectionView];
  [v2 setScrollEnabled:1];

  uint64_t v3 = [*(id *)(a1 + 32) _transcriptStickerCellContainingInteraction:*(void *)(a1 + 40)];
  if (v3)
  {
    id v4 = v3;
    [v3 setStickerViewHidden:0];
    uint64_t v3 = v4;
  }
}

- (void)_dragInteraction:(id)a3 prepareForSession:(id)a4 completion:(id)a5
{
  id v9 = a3;
  uint64_t v6 = (void (**)(void))a5;
  id v7 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v8 = [v7 isStickerRepositioningEnabled];

  if (v8) {
    [v9 _setLiftMoveHysteresis:0.0];
  }
  v6[2](v6);
}

- (id)_dragInteraction:(id)a3 sessionPropertiesForSession:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_alloc_init(MEMORY[0x1E4F43148]);
  id v9 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v10 = [v9 isStickerRepositioningEnabled];

  if (v10 && [v7 hasItemsConformingToTypeIdentifiers:&unk_1EDF15170])
  {
    objc_msgSend(v8, "set_wantsElasticEffects:", 1);
    objc_msgSend(v8, "set_resizable:", 1);
    objc_msgSend(v8, "set_rotatable:", 1);
    id v11 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v6];
    if (v11)
    {
      uint64_t v12 = [(CKCoreChatController *)self collectionViewController];
      id v13 = [v12 chatItemForCell:v11];

      if (v13 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        id v14 = (void *)MEMORY[0x1E4F6EA58];
        id v15 = v13;
        int v16 = [(CKChatController *)self collectionView];
        [v16 bounds];
        [v14 calculatedRecentsItemWidthFromStickersUltraExtensionForStickerChatItem:v15 collectionViewWidth:v17];
        double v19 = v18;
        double v21 = v20;
      }
      else
      {
        double v21 = 48.0;
        double v19 = 48.0;
      }
    }
    else
    {
      double v21 = 48.0;
      double v19 = 48.0;
    }
    objc_msgSend(v8, "set_minimumResizableSize:", v19, v21);
    long long v22 = +[CKUIBehavior sharedBehaviors];
    [v22 stickerDropPreviewMaxDimension];
    double v24 = v23;
    id v25 = +[CKUIBehavior sharedBehaviors];
    [v25 stickerDropPreviewMaxDimension];
    objc_msgSend(v8, "set_maximumResizableSize:", v24, v26);
  }

  return v8;
}

- (BOOL)dragInteraction:(id)a3 sessionIsRestrictedToDraggingApplication:(id)a4
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = a4;
  uint64_t v5 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  LODWORD(v6) = [v5 isStickerRepositioningEnabled];

  if (v6)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v7 = objc_msgSend(v4, "items", 0);
    uint64_t v6 = [v7 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v6)
    {
      uint64_t v8 = *(void *)v12;
      while (2)
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v12 != v8) {
            objc_enumerationMutation(v7);
          }
          if ([MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:*(void *)(*((void *)&v11 + 1) + 8 * i)])
          {
            LOBYTE(v6) = 1;
            goto LABEL_12;
          }
        }
        uint64_t v6 = [v7 countByEnumeratingWithState:&v11 objects:v15 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
LABEL_12:
  }
  return v6;
}

- (id)dragInteraction:(id)a3 itemsForAddingToSession:(id)a4 withTouchAtPoint:(CGPoint)a5
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v8 = [a4 items];
  uint64_t v9 = [v8 countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v24;
    long long v12 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_3:
    uint64_t v13 = 0;
    while (1)
    {
      if (*(void *)v24 != v11) {
        objc_enumerationMutation(v8);
      }
      if ([MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:*(void *)(*((void *)&v23 + 1) + 8 * v13)])break; {
      if (v10 == ++v13)
      }
      {
        uint64_t v10 = [v8 countByEnumeratingWithState:&v23 objects:v28 count:16];
        if (v10) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:

    [(CKChatController *)self _dragItemsForInteraction:v7];
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v14 = [v8 countByEnumeratingWithState:&v19 objects:v27 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)v20;
      while (2)
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v20 != v16) {
            objc_enumerationMutation(v8);
          }
          if (objc_msgSend(MEMORY[0x1E4F6EA58], "dragItemIsRepositioningSticker:", *(void *)(*((void *)&v19 + 1) + 8 * i), (void)v19))
          {

            long long v12 = (void *)MEMORY[0x1E4F1CBF0];
            goto LABEL_19;
          }
        }
        uint64_t v15 = [v8 countByEnumeratingWithState:&v19 objects:v27 count:16];
        if (v15) {
          continue;
        }
        break;
      }
    }

    id v8 = v8;
    long long v12 = v8;
  }
LABEL_19:

  return v12;
}

- (id)dragInteraction:(id)a3 previewForLiftingItem:(id)a4 session:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  if (![v9 isStickerRepositioningEnabled])
  {

LABEL_13:
    int v28 = [v8 localObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) == 0)
    {
      long long v25 = 0;
      goto LABEL_47;
    }
    long long v12 = [v8 localObject];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      char v30 = [v12 stackView];
      id v31 = [v30 currentAssetReference];
      id v32 = [v30 regionOfInterestForAssetReference:v31];
      long long v25 = [v32 placeholderViewFactory];
      if (v25)
      {
        id v33 = [v32 placeholderViewFactory];
        uint64_t v34 = ((void (**)(void, id))v33)[2](v33, v32);

        if (v34)
        {
          id v87 = v7;
          char v35 = [(CKChatController *)self view];
          [v32 rectInCoordinateSpace:v35];
          float64_t v79 = v37;
          float64_t v81 = v36;
          float64_t v83 = v39;
          float64_t v85 = v38;

          id v40 = objc_alloc(MEMORY[0x1E4F42D00]);
          id v41 = [(CKChatController *)self view];
          float64x2_t v42 = *(float64x2_t *)(MEMORY[0x1E4F1DB28] + 16);
          char v43 = (void *)v34;
          if (CKMainScreenScale_once_13 != -1)
          {
            float64x2_t v78 = *(float64x2_t *)(MEMORY[0x1E4F1DB28] + 16);
            dispatch_once(&CKMainScreenScale_once_13, &__block_literal_global_3612);
            float64x2_t v42 = v78;
          }
          double v44 = *(double *)&CKMainScreenScale_sMainScreenScale_13;
          if (*(double *)&CKMainScreenScale_sMainScreenScale_13 == 0.0) {
            double v44 = 1.0;
          }
          double v45 = 1.0 / v44;
          v46.f64[0] = v81;
          v46.f64[1] = v79;
          float64x2_t v47 = vmulq_n_f64(v42, v44);
          float64x2_t v48 = vmulq_n_f64(v46, v44);
          v49.f64[0] = v85;
          v49.f64[1] = v83;
          float64x2_t v50 = vsubq_f64(vmulq_n_f64(v49, v44), v47);
          __asm { FMOV            V2.2D, #0.5 }
          __int16 v56 = objc_msgSend(v40, "initWithContainer:center:", v41, vmulq_n_f64(vaddq_f64(v48, vrndmq_f64(vmulq_f64(v50, _Q2))), v45), *(_OWORD *)&v78);

          id v57 = objc_alloc_init(MEMORY[0x1E4F42CF8]);
          long long v25 = (void *)[objc_alloc(MEMORY[0x1E4F42ED0]) initWithView:v43 parameters:v57 target:v56];

          id v7 = v87;
        }
        else
        {
          long long v25 = 0;
        }
      }
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0 || ![v12 shouldProvideDragPreview]) {
        goto LABEL_45;
      }
      char v30 = [(CKChatController *)self dragPreviewParametersForBalloonView:v12];
      id v58 = objc_alloc(MEMORY[0x1E4F42D00]);
      long long v59 = [v12 superview];
      [v12 frame];
      float64x2_t v64 = *(float64x2_t *)(MEMORY[0x1E4F1DB28] + 16);
      if (CKMainScreenScale_once_13 != -1)
      {
        double v86 = v63;
        float64_t v88 = v62.f64[0];
        double v82 = v61;
        float64_t v84 = v60.f64[0];
        float64x2_t v80 = *(float64x2_t *)(MEMORY[0x1E4F1DB28] + 16);
        dispatch_once(&CKMainScreenScale_once_13, &__block_literal_global_3612);
        float64x2_t v64 = v80;
        float64_t v61 = v82;
        v60.f64[0] = v84;
        float64_t v63 = v86;
        v62.f64[0] = v88;
      }
      if (*(double *)&CKMainScreenScale_sMainScreenScale_13 == 0.0) {
        double v65 = 1.0;
      }
      else {
        double v65 = *(double *)&CKMainScreenScale_sMainScreenScale_13;
      }
      v60.f64[1] = v61;
      float64x2_t v66 = vmulq_n_f64(v60, v65);
      v62.f64[1] = v63;
      float64x2_t v67 = vsubq_f64(vmulq_n_f64(v62, v65), vmulq_n_f64(v64, v65));
      __asm { FMOV            V2.2D, #0.5 }
      id v31 = objc_msgSend(v58, "initWithContainer:center:", v59, vmulq_n_f64(vaddq_f64(v66, vrndmq_f64(vmulq_f64(v67, _Q2))), 1.0 / v65));

      uint64_t v69 = [v12 attachmentBalloonViewPreview];
      id v70 = (void *)v69;
      if (v69) {
        id v71 = (void *)v69;
      }
      else {
        id v71 = v12;
      }
      id v32 = v71;

      long long v25 = (void *)[objc_alloc(MEMORY[0x1E4F42ED0]) initWithView:v32 parameters:v30 target:v31];
    }

    if (v25) {
      goto LABEL_46;
    }
LABEL_45:
    [v12 setCanUseOpaqueMask:0];
    [v12 prepareForDisplayIfNeeded];
    id v76 = [(CKChatController *)self dragPreviewParametersForBalloonView:v12];
    long long v25 = (void *)[objc_alloc(MEMORY[0x1E4F42ED0]) initWithView:v12 parameters:v76];

    goto LABEL_46;
  }
  int v10 = [MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:v8];

  if (!v10) {
    goto LABEL_13;
  }
  uint64_t v11 = [v8 localObject];
  long long v12 = [v11 objectForKey:@"kStickerDragItemImageViewKey"];

  if (v12)
  {
    id v13 = objc_alloc_init(MEMORY[0x1E4F429B0]);
    id v14 = objc_alloc_init(MEMORY[0x1E4F427D0]);
    [v13 setShadowPath:v14];

    uint64_t v15 = [MEMORY[0x1E4F428B8] clearColor];
    [v13 setBackgroundColor:v15];

    uint64_t v16 = (void *)MEMORY[0x192FBA860](@"_MSStickerDragPreviewContainerView", @"Messages");
    if (v16 && (objc_opt_respondsToSelector() & 1) != 0)
    {
      double v17 = [v16 shadowPropertiesForDrag];
      if (v17 && (objc_opt_respondsToSelector() & 1) != 0) {
        [v13 _setShadowProperties:v17];
      }
    }
    double v18 = [v12 superview];
    [v12 center];
    objc_msgSend(v18, "convertPoint:toView:", v18);
    double v20 = v19;
    double v22 = v21;
    id v23 = objc_alloc(MEMORY[0x1E4F429B8]);
    [(CKChatController *)self stickerPreviewTransform];
    long long v24 = objc_msgSend(v23, "initWithContainer:center:transform:", v18, v89, v20, v22);
    long long v25 = (void *)[objc_alloc(MEMORY[0x1E4F42ED0]) initWithView:v12 parameters:v13 target:v24];
    long long v26 = (void *)[objc_alloc((Class)v16) initWithIsDropAnimation:0];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v27 = [v12 currentFrameIndex];
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
LABEL_38:
        [v25 _setPreviewContainer:v26];
        [(CKChatController *)self setCurrentDragPreviewContainer:v26];
        long long v74 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v7];
        if (v74)
        {
          uint64_t v75 = IMLogHandleForCategory();
          if (os_log_type_enabled(v75, OS_LOG_TYPE_DEBUG)) {
            -[CKChatController dragInteraction:previewForLiftingItem:session:]();
          }

          [v74 setGestureRecognizersEnabled:0];
        }

        goto LABEL_46;
      }
      id v72 = v12;
      uint64_t v27 = 0;
    }
    [(CKChatController *)self setInitialFrameIndexForCurrentDrag:v27];
    uint64_t v73 = [v12 image];

    [v26 setImage:v73];
    goto LABEL_38;
  }
  long long v25 = 0;
LABEL_46:

LABEL_47:

  return v25;
}

- (void)dragInteraction:(id)a3 sessionWillBegin:(id)a4
{
  id v11 = a3;
  [(CKChatController *)self setDragSession:a4];
  uint64_t v6 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v7 = [v6 isStickerRepositioningEnabled];

  id v8 = v11;
  if (v7)
  {
    uint64_t v9 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v11];
    int v10 = v9;
    if (v9)
    {
      [v9 setHidden:1];
      [v10 setStickerViewHidden:1];
    }

    id v8 = v11;
  }
}

- (void)dragInteraction:(id)a3 session:(id)a4 didEndWithOperation:(unint64_t)a5
{
  id v6 = a3;
  [(CKChatController *)self setDragSession:0];
  [(CKChatController *)self setCurrentDragPreviewContainer:0];
  int v7 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v6];

  if (v7)
  {
    id v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController dragInteraction:session:didEndWithOperation:]();
    }

    [v7 setGestureRecognizersEnabled:1];
  }
}

- (id)dragInteraction:(id)a3 previewForCancellingItem:(id)a4 withDefault:(id)a5
{
  id v7 = a3;
  id v8 = a5;
  uint64_t v9 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v10 = [v9 isStickerRepositioningEnabled];

  if (v10)
  {
    id v11 = [(CKChatController *)self _transcriptStickerCellContainingInteraction:v7];
    long long v12 = v11;
    if (v11)
    {
      id v13 = [v11 associatedItemView];
      id v14 = [(CKChatController *)self view];
      [v13 frameInView:v14];
      double v16 = v15;
      double v18 = v17;
      double v20 = v19;
      double v22 = v21;

      double v23 = v16 + v20 * 0.5;
      long long v34 = 0u;
      long long v35 = 0u;
      double v24 = v18 + v22 * 0.5;
      long long v33 = 0u;
      long long v25 = [v12 associatedItemView];
      long long v26 = v25;
      if (v25)
      {
        [v25 transform];
      }
      else
      {
        long long v34 = 0u;
        long long v35 = 0u;
        long long v33 = 0u;
      }

      id v28 = objc_alloc(MEMORY[0x1E4F429B8]);
      uint64_t v29 = [(CKChatController *)self view];
      v32[0] = v33;
      v32[1] = v34;
      v32[2] = v35;
      char v30 = objc_msgSend(v28, "initWithContainer:center:transform:", v29, v32, v23, v24);
      uint64_t v27 = [v8 retargetedPreviewWithTarget:v30];
    }
    else
    {
      uint64_t v27 = 0;
    }
  }
  else
  {
    uint64_t v27 = 0;
  }

  return v27;
}

- (void)dragInteraction:(id)a3 item:(id)a4 willAnimateCancelWithAnimator:(id)a5
{
  id v7 = a3;
  id v8 = a5;
  uint64_t v9 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v10 = [v9 isStickerRepositioningEnabled];

  if (v10)
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __71__CKChatController_dragInteraction_item_willAnimateCancelWithAnimator___block_invoke;
    v14[3] = &unk_1E5620C40;
    void v14[4] = self;
    [v8 addAnimations:v14];
    id v11 = [(CKChatController *)self collectionView];
    [v11 setScrollEnabled:0];

    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = __71__CKChatController_dragInteraction_item_willAnimateCancelWithAnimator___block_invoke_2;
    v12[3] = &unk_1E5623638;
    void v12[4] = self;
    id v13 = v7;
    [v8 addCompletion:v12];
  }
}

uint64_t __71__CKChatController_dragInteraction_item_willAnimateCancelWithAnimator___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _clearBalloonViewOverlays];
}

void __71__CKChatController_dragInteraction_item_willAnimateCancelWithAnimator___block_invoke_2(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v4 = [*(id *)(a1 + 32) collectionView];
    [v4 setScrollEnabled:1];

    uint64_t v5 = [*(id *)(a1 + 32) _transcriptStickerCellContainingInteraction:*(void *)(a1 + 40)];
    if (v5)
    {
      id v6 = v5;
      [v5 setHidden:0];
      [v6 setStickerViewHidden:0];
      uint64_t v5 = v6;
    }
  }
}

- (BOOL)dragManager:(id)a3 shouldCancelDraggingForItem:(id)a4 toDragTarget:(id)a5 dropArea:(int)a6
{
  return 1;
}

- (BOOL)dragManager:(id)a3 canScaleItem:(id)a4
{
  return 0;
}

- (BOOL)dragManager:(id)a3 canRotateItem:(id)a4
{
  return 0;
}

- (BOOL)dragManager:(id)a3 canPeelItem:(id)a4
{
  return 1;
}

- (id)_dragItemsForInteraction:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self isShowingOscarChat]
    || (+[CKUIBehavior sharedBehaviors],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        char v6 = [v5 disableTranscriptInteractions],
        v5,
        (v6 & 1) != 0))
  {
    id v7 = 0;
    goto LABEL_12;
  }
  id v8 = [(CKChatController *)self collectionView];
  uint64_t v9 = [v8 visibleCells];

  int v10 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v11 = [v10 isStickerRepositioningEnabled];

  if (!v11) {
    goto LABEL_7;
  }
  id v7 = [(CKChatController *)self _dragItemsIfRepositioningForInteraction:v4];
  if (![v7 count])
  {

LABEL_7:
    uint64_t v30 = 0;
    id v31 = &v30;
    uint64_t v32 = 0x3032000000;
    long long v33 = __Block_byref_object_copy__10;
    long long v34 = __Block_byref_object_dispose__10;
    id v35 = 0;
    uint64_t v24 = 0;
    long long v25 = &v24;
    uint64_t v26 = 0x3032000000;
    uint64_t v27 = __Block_byref_object_copy__10;
    id v28 = __Block_byref_object_dispose__10;
    id v29 = 0;
    uint64_t v16 = MEMORY[0x1E4F143A8];
    uint64_t v17 = 3221225472;
    double v18 = __45__CKChatController__dragItemsForInteraction___block_invoke;
    double v19 = &unk_1E5623660;
    id v20 = v4;
    double v21 = self;
    double v22 = &v30;
    double v23 = &v24;
    [v9 enumerateObjectsUsingBlock:&v16];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v7 = 0;
    }
    else
    {
      long long v12 = [(CKCoreChatController *)self collectionViewController];
      id v13 = [v12 chatItems];
      id v14 = objc_msgSend(v13, "objectAtIndex:", objc_msgSend((id)v31[5], "item"));

      id v7 = [(CKChatController *)self _dragItemsFromChatItem:v14 balloonView:v25[5]];
    }
    _Block_object_dispose(&v24, 8);

    _Block_object_dispose(&v30, 8);
  }

LABEL_12:

  return v7;
}

void __45__CKChatController__dragItemsForInteraction___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v14 = a2;
  if (objc_opt_respondsToSelector())
  {
    char v6 = [v14 balloonView];
    if (objc_opt_respondsToSelector()) {
      int v7 = [v14 isReplyContextPreview] ^ 1;
    }
    else {
      int v7 = 1;
    }
    id v8 = [v6 interactions];
    int v9 = [v8 containsObject:*(void *)(a1 + 32)];

    if (v9 && v7)
    {
      int v10 = [*(id *)(a1 + 40) collectionView];
      uint64_t v11 = [v10 indexPathForCell:v14];
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
      id v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v6);
      *a4 = 1;
    }
  }
}

- (id)_itemProvidersFromDragItems:(id)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v5);
        }
        int v10 = objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * i), "itemProvider", (void)v13);
        [v4 addObject:v10];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v7);
  }

  uint64_t v11 = (void *)[v4 copy];

  return v11;
}

- (id)_dragItemsFromChatItem:(id)a3 balloonView:(id)a4
{
  v27[1] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    long long v13 = [MEMORY[0x1E4F1C978] array];
    goto LABEL_22;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v8 = [(CKCoreChatController *)self collectionViewController];
    int v9 = [v8 balloonViewForChatItem:v6];

    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass)
    {
      uint64_t v11 = [v9 currentAssetChatItem];
      uint64_t v12 = [v11 dragItemProvider];
    }
    else
    {
      uint64_t v12 = 0;
    }
    char v18 = isKindOfClass ^ 1;

    if (v12)
    {
LABEL_12:
      double v19 = (void *)[objc_alloc(MEMORY[0x1E4F429A0]) initWithItemProvider:v12];
      [v19 setLocalObject:v7];
      if (v18)
      {
        id location = 0;
        objc_initWeak(&location, self);
        v23[0] = MEMORY[0x1E4F143A8];
        v23[1] = 3221225472;
        v23[2] = __55__CKChatController__dragItemsFromChatItem_balloonView___block_invoke_2;
        id v23[3] = &unk_1E5623688;
        objc_copyWeak(&v25, &location);
        id v24 = v7;
        [v19 setPreviewProvider:v23];

        objc_destroyWeak(&v25);
        objc_destroyWeak(&location);
      }
      v27[0] = v19;
      long long v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v27 count:1];

      goto LABEL_21;
    }
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v14 = v6;
      long long v15 = [MEMORY[0x1E4F6BCC8] sharedInstance];
      long long v16 = [v14 transferGUID];
      uint64_t v17 = [v15 transferForGUID:v16];

      if ([v17 commSafetySensitive])
      {

        long long v13 = 0;
        goto LABEL_22;
      }
      uint64_t v12 = [v14 dragItemProvider];
      id v20 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
      int v21 = [v20 isAudioMessagesEntryViewRecordingEnabled];

      if (v21 && [v7 isAudioMessage]) {
        [v12 registerItemForTypeIdentifier:@"com.apple.messages.audioMessage" loadHandler:&__block_literal_global_1315];
      }
    }
    else
    {
      uint64_t v12 = [v6 dragItemProvider];
    }
    char v18 = 1;
    if (v12) {
      goto LABEL_12;
    }
  }
  long long v13 = 0;
LABEL_21:

LABEL_22:

  return v13;
}

void __55__CKChatController__dragItemsFromChatItem_balloonView___block_invoke(uint64_t a1, void (**a2)(void, void, void))
{
  id v3 = (void *)MEMORY[0x1E4F1C9B8];
  id v4 = a2;
  id v5 = [v3 data];
  ((void (**)(void, id, void))a2)[2](v4, v5, 0);
}

id __55__CKChatController__dragItemsFromChatItem_balloonView___block_invoke_2(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    id v5 = [v4 dragPreviewParametersForBalloonView:*(void *)(a1 + 32)];

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && [*(id *)(a1 + 32) shouldProvideDragPreview])
    {
      id v6 = [*(id *)(a1 + 32) attachmentBalloonViewPreview];
      id v7 = v6;
      if (!v6) {
        id v7 = *(void **)(a1 + 32);
      }
      id v8 = v7;

      int v9 = (void *)[objc_alloc(MEMORY[0x1E4F429A8]) initWithView:v8 parameters:v5];
    }
    else
    {
      int v9 = (void *)[objc_alloc(MEMORY[0x1E4F429A8]) initWithView:*(void *)(a1 + 32) parameters:v5];
    }
  }
  else
  {
    int v9 = 0;
  }

  return v9;
}

- (id)dragPreviewParametersForBalloonView:(id)a3
{
  id v3 = a3;
  id v4 = objc_alloc_init(MEMORY[0x1E4F429B0]);
  [v3 bounds];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  long long v13 = +[CKUIBehavior sharedBehaviors];
  [v13 dragBalloonTailCropWidth];
  double v15 = v14;

  if (v3)
  {
    [v3 balloonDescriptor];
    double v16 = -0.0;
    if (!BYTE3(v23)) {
      double v16 = v15;
    }
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v23 = 0u;
    double v16 = v15;
  }
  double v17 = v6 + v16;
  char v18 = (void *)MEMORY[0x1E4F427D0];
  double v19 = +[CKUIBehavior sharedBehaviors];
  [v19 dragBalloonCornerRadius];
  int v21 = objc_msgSend(v18, "bezierPathWithRoundedRect:cornerRadius:", v17, v8, v10 - v15, v12, v20);

  [v4 setVisiblePath:v21];

  return v4;
}

- (BOOL)dropInteraction:(id)a3 canHandleSession:(id)a4
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v5 = a4;
  double v6 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v7 = [v6 isAudioMessagesEntryViewRecordingEnabled];

  if (v7)
  {
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    double v8 = [v5 items];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v35 objects:v40 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v36;
LABEL_4:
      uint64_t v12 = 0;
      while (1)
      {
        if (*(void *)v36 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = [*(id *)(*((void *)&v35 + 1) + 8 * v12) itemProvider];
        char v14 = [v13 hasItemConformingToTypeIdentifier:@"com.apple.messages.audioMessage"];

        if (v14) {
          goto LABEL_32;
        }
        if (v10 == ++v12)
        {
          uint64_t v10 = [v8 countByEnumeratingWithState:&v35 objects:v40 count:16];
          if (v10) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  double v15 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v16 = [v15 isStickerRepositioningEnabled];

  if (v16)
  {
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    double v8 = objc_msgSend(v5, "items", 0);
    uint64_t v17 = [v8 countByEnumeratingWithState:&v31 objects:v39 count:16];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)v32;
LABEL_14:
      uint64_t v20 = 0;
      while (1)
      {
        if (*(void *)v32 != v19) {
          objc_enumerationMutation(v8);
        }
        if ([MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:*(void *)(*((void *)&v31 + 1) + 8 * v20)])break; {
        if (v18 == ++v20)
        }
        {
          uint64_t v18 = [v8 countByEnumeratingWithState:&v31 objects:v39 count:16];
          if (v18) {
            goto LABEL_14;
          }
          goto LABEL_20;
        }
      }
LABEL_32:
      BOOL v29 = 1;
      goto LABEL_37;
    }
LABEL_20:
  }
  double v8 = [v5 localDragSession];
  int v21 = [(CKChatController *)self dragSession];

  double v22 = [v8 localContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    long long v23 = v22;
  }
  else {
    long long v23 = 0;
  }
  id v24 = v23;
  int v25 = [v24 isEqualToString:@"CKConversationListDragContext"];
  int v26 = [v24 isEqualToString:@"CKMessageEntryContentViewDragContext"];

  if (v8 && (v8 == v21 ? (int v27 = 1) : (int v27 = v25), (v27 | v26) == 1))
  {
    id v28 = IMLogHandleForCategory();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController dropInteraction:canHandleSession:]();
    }
    BOOL v29 = 0;
  }
  else
  {
    id v28 = IMLogHandleForCategory();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController dropInteraction:canHandleSession:]();
    }
    BOOL v29 = 1;
  }

LABEL_37:
  return v29;
}

- (void)dropInteraction:(id)a3 sessionDidEnter:(id)a4
{
  id v5 = a4;
  id v6 = [(CKChatController *)self dropSession];

  int v7 = IMLogHandleForCategory();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (v6 == v5)
  {
    if (v8) {
      -[CKChatController dropInteraction:sessionDidEnter:]();
    }
  }
  else
  {
    if (v8) {
      -[CKChatController dropInteraction:sessionDidEnter:]();
    }

    [(CKChatController *)self setDropSession:v5];
  }
}

- (id)dropInteraction:(id)a3 sessionDidUpdate:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = [(CKChatController *)self entryView];
  if ([v8 displayMode] == 2)
  {

LABEL_4:
    uint64_t v11 = (void *)[objc_alloc(MEMORY[0x1E4F429D8]) initWithDropOperation:0];
    goto LABEL_5;
  }
  uint64_t v9 = [(CKChatController *)self entryView];
  uint64_t v10 = [v9 displayMode];

  if (v10 == 3) {
    goto LABEL_4;
  }
  long long v32 = [(CKChatController *)self entryView];
  long long v33 = [v32 window];

  if (v33)
  {
    uint64_t v11 = (void *)[objc_alloc(MEMORY[0x1E4F429D8]) initWithDropOperation:2];
    int v12 = 1;
    goto LABEL_6;
  }
  if (IMOSLoggingEnabled())
  {
    long long v34 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v36 = 0;
      _os_log_impl(&dword_18EF18000, v34, OS_LOG_TYPE_INFO, "Drop proposal is forbidden because the entry view is not in a window. UIDragPreviewTarget requires that its container (the entry view in this case) be in a window.", v36, 2u);
    }
  }
  uint64_t v11 = (void *)[objc_alloc(MEMORY[0x1E4F429D8]) initWithDropOperation:1];
  long long v35 = IMLogHandleForCategory();
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController dropInteraction:sessionDidUpdate:].cold.4();
  }

LABEL_5:
  int v12 = 0;
LABEL_6:
  if (![(CKChatController *)self _dropSessionIsNewSticker:v7]
    && ![MEMORY[0x1E4F6EA58] dropSessionIsRepositioningSticker:v7])
  {
    goto LABEL_30;
  }
  long long v13 = [(CKChatController *)self _selectedBalloonFromTouchForDropSession:v7];
  if (v13)
  {
    char v14 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
    int v15 = [v14 isScheduledMessagesCoreEnabled];

    if (!v15) {
      goto LABEL_19;
    }
    int v16 = [(CKCoreChatController *)self collectionViewController];
    uint64_t v17 = [v16 chatItems];
    uint64_t v18 = objc_msgSend(v17, "objectAtIndex:", objc_msgSend(v13, "row"));

    if (([v18 canAttachStickers] & 1) == 0)
    {
      uint64_t v19 = IMLogHandleForCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
        -[CKChatController dropInteraction:sessionDidUpdate:]();
      }

      uint64_t v20 = [objc_alloc(MEMORY[0x1E4F429D8]) initWithDropOperation:1];
      int v12 = 0;
      uint64_t v11 = (void *)v20;
    }
    uint64_t v21 = (uint64_t)v11;

    uint64_t v11 = v16;
  }
  else
  {
    double v22 = IMLogHandleForCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController dropInteraction:sessionDidUpdate:]();
    }

    uint64_t v21 = [objc_alloc(MEMORY[0x1E4F429D8]) initWithDropOperation:1];
  }

  uint64_t v11 = (void *)v21;
LABEL_19:
  long long v23 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v24 = [v23 isStickerRepositioningEnabled];

  if (!v24)
  {
    [v11 _setPreferredBadgeStyle:1];

    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  int v25 = [(CKChatController *)self _originalIndexPathForRepositioningDropSession:v7];
  if (v25)
  {
    uint64_t v26 = [v13 section];
    if (v26 != [v25 section] || (uint64_t v27 = objc_msgSend(v13, "item"), v27 != objc_msgSend(v25, "item")))
    {
      id v28 = IMLogHandleForCategory();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        -[CKChatController dropInteraction:sessionDidUpdate:]();
      }

      uint64_t v29 = [objc_alloc(MEMORY[0x1E4F429D8]) initWithDropOperation:1];
      [(CKChatController *)self _clearBalloonViewOverlays];
      LOBYTE(v12) = 0;
      uint64_t v11 = (void *)v29;
    }
  }

  [v11 _setPreferredBadgeStyle:1];
  if (v12)
  {
LABEL_29:
    uint64_t v30 = [(CKChatController *)self _selectedBalloonFromTouchForDropSession:v7];
    [(CKChatController *)self _setOverlayForBalloonViewAtIndexPath:v30];
  }
LABEL_30:

  return v11;
}

- (void)dropInteraction:(id)a3 performDrop:(id)a4
{
  id v5 = a4;
  id v6 = IMLogHandleForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController dropInteraction:performDrop:](v6, v7, v8, v9, v10, v11, v12, v13);
  }

  if ([(CKChatController *)self _dropSessionIsNewSticker:v5]
    || [MEMORY[0x1E4F6EA58] dropSessionIsRepositioningSticker:v5]
    && ([MEMORY[0x1E4F6E778] sharedFeatureFlags],
        char v14 = objc_claimAutoreleasedReturnValue(),
        int v15 = [v14 isStickerRepositioningEnabled],
        v14,
        v15))
  {
    [(CKChatController *)self _sendNewStickerFromDropSession:v5];
  }
  else
  {
    int v16 = [v5 items];
    uint64_t v17 = [(CKChatController *)self _itemProvidersFromDragItems:v16];

    uint64_t v18 = IMLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController dropInteraction:performDrop:](v17);
    }

    if ([v17 count]) {
      [(CKChatController *)self appendCompositionFromItemProviders:v17];
    }
  }
}

- (void)dropInteraction:(id)a3 item:(id)a4 willAnimateDropWithAnimator:(id)a5
{
  id v6 = a5;
  uint64_t v7 = IMLogHandleForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController dropInteraction:item:willAnimateDropWithAnimator:](v7, v8, v9, v10, v11, v12, v13, v14);
  }

  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  void v17[2] = __69__CKChatController_dropInteraction_item_willAnimateDropWithAnimator___block_invoke;
  v17[3] = &unk_1E5620C40;
  void v17[4] = self;
  [v6 addAnimations:v17];
  int v15 = [(CKChatController *)self collectionView];
  [v15 setScrollEnabled:0];

  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  void v16[2] = __69__CKChatController_dropInteraction_item_willAnimateDropWithAnimator___block_invoke_2;
  v16[3] = &unk_1E5622978;
  void v16[4] = self;
  [v6 addCompletion:v16];
}

uint64_t __69__CKChatController_dropInteraction_item_willAnimateDropWithAnimator___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _clearBalloonViewOverlays];
}

void __69__CKChatController_dropInteraction_item_willAnimateDropWithAnimator___block_invoke_2(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) collectionView];
  [v1 setScrollEnabled:1];

  uint64_t v2 = IMLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    __69__CKChatController_dropInteraction_item_willAnimateDropWithAnimator___block_invoke_2_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);
  }
}

- (void)dropInteraction:(id)a3 concludeDrop:(id)a4
{
  uint64_t v4 = IMLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController dropInteraction:concludeDrop:]();
  }
}

- (void)dropInteraction:(id)a3 sessionDidEnd:(id)a4
{
  uint64_t v5 = IMLogHandleForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController dropInteraction:sessionDidEnd:]();
  }

  [(CKChatController *)self setDropSession:0];
  uint64_t v6 = [(CKCoreChatController *)self inputController];
  [v6 stickerDropAnimationFinished];
}

- (id)dropInteraction:(id)a3 previewForDroppingItem:(id)a4 withDefault:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = IMLogHandleForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController dropInteraction:previewForDroppingItem:withDefault:]();
  }

  if ([MEMORY[0x1E4F6EA58] dragItemIsSticker:v9]
    || ([MEMORY[0x1E4F6E778] sharedFeatureFlags],
        uint64_t v13 = objc_claimAutoreleasedReturnValue(),
        int v14 = [v13 isStickerRepositioningEnabled],
        v13,
        v14)
    && [MEMORY[0x1E4F6EA58] dragItemIsRepositioningSticker:v9])
  {
    uint64_t v12 = [(CKChatController *)self _stickerDragPreviewForDragItem:v9 defaultPreview:v10];
  }
  else
  {
    int v15 = [(CKChatController *)self entryView];
    int v16 = [v15 window];

    if (v16)
    {
      uint64_t v17 = [(CKChatController *)self dropSession];
      uint64_t v18 = [(CKChatController *)self view];
      [v17 locationInView:v18];
      double v20 = v19;
      double v22 = v21;

      long long v23 = IMLogHandleForCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG)) {
        -[CKChatController dropInteraction:previewForDroppingItem:withDefault:](v23, v24, v25, v26, v27, v28, v29, v30);
      }

      id v31 = objc_alloc(MEMORY[0x1E4F429B8]);
      CGAffineTransformMakeScale(&v37, 0.00000011920929, 0.00000011920929);
      long long v32 = objc_msgSend(v31, "initWithContainer:center:transform:", v15, &v37, v20, v22);
      uint64_t v12 = [v10 retargetedPreviewWithTarget:v32];
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        long long v33 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long v36 = 0;
          _os_log_impl(&dword_18EF18000, v33, OS_LOG_TYPE_INFO, "Drop preview generation failed because the entry view is not in a window. UIDragPreviewTarget requires that its container (the entry view in this case) be in a window.", v36, 2u);
        }
      }
      uint64_t v12 = 0;
    }
    long long v34 = IMLogHandleForCategory();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController dropInteraction:previewForDroppingItem:withDefault:]();
    }
  }

  return v12;
}

- (BOOL)_dropSessionIsTargetingEntryView:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(CKChatController *)self entryView];
  uint64_t v6 = [v5 contentView];
  uint64_t v7 = [v6 textView];

  [v4 locationInView:v7];
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  [v7 bounds];
  v13.CGFloat x = v9;
  v13.CGFloat y = v11;
  LOBYTE(v5) = CGRectContainsPoint(v14, v13);

  return (char)v5;
}

- (void)_clearBalloonViewOverlays
{
  uint64_t v2 = [(CKCoreChatController *)self collectionViewController];
  id v4 = [v2 collectionView];

  uint64_t v3 = [v4 visibleCells];
  [v3 enumerateObjectsUsingBlock:&__block_literal_global_1327];
}

void __45__CKChatController__clearBalloonViewOverlays__block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v2 = [v3 balloonView];
    [v2 showOverlay:0];
  }
}

- (void)_setOverlayForBalloonViewAtIndexPath:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v6 = [v5 collectionView];

  uint64_t v7 = [v6 visibleCells];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __57__CKChatController__setOverlayForBalloonViewAtIndexPath___block_invoke;
  v10[3] = &unk_1E56236D0;
  id v11 = v6;
  id v12 = v4;
  id v8 = v4;
  id v9 = v6;
  [v7 enumerateObjectsUsingBlock:v10];
}

void __57__CKChatController__setOverlayForBalloonViewAtIndexPath___block_invoke(uint64_t a1, void *a2)
{
  id v10 = a2;
  char v3 = objc_opt_respondsToSelector();
  id v4 = v10;
  if (v3)
  {
    id v5 = v10;
    uint64_t v6 = [*(id *)(a1 + 32) indexPathForCell:v5];
    uint64_t v7 = *(void **)(a1 + 40);
    if (v7) {
      uint64_t v8 = [v7 isEqual:v6];
    }
    else {
      uint64_t v8 = 0;
    }
    id v9 = [v5 balloonView];
    [v9 showOverlay:v8];

    id v4 = v10;
  }
}

- (void)detailsAdapter:(id)a3 wantsToStageComposition:(id)a4
{
  id v6 = a4;
  [(CKChatController *)self _detailsAdapterWantsDismiss:a3];
  [(CKChatController *)self setComposition:v6];
}

- (void)_detailsAdapterWantsDismiss:(id)a3
{
  id v13 = [a3 detailsController];
  if (CKIsRunningInMacCatalyst())
  {
    id v4 = [(CKCoreChatController *)self delegate];
    if (objc_opt_respondsToSelector())
    {
      id v5 = [(CKCoreChatController *)self delegate];
      if ([v5 hasDetailsNavigationController])
      {
        id v6 = [(CKCoreChatController *)self delegate];
        char v7 = objc_opt_respondsToSelector();

        uint64_t v8 = v13;
        if ((v7 & 1) == 0) {
          goto LABEL_13;
        }
        id v9 = [(CKCoreChatController *)self delegate];
        [v9 dismissDetailsNavigationController];

        goto LABEL_12;
      }
    }
    goto LABEL_11;
  }
  uint64_t v8 = v13;
  if (!v13) {
    goto LABEL_13;
  }
  id v4 = [(CKChatController *)self presentedViewController];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_11:

    goto LABEL_12;
  }
  id v10 = [(CKChatController *)self presentedViewController];
  id v11 = [v10 viewControllers];
  int v12 = [v11 containsObject:v13];

  uint64_t v8 = v13;
  if (!v12) {
    goto LABEL_13;
  }
  [(CKChatController *)self dismissDetailsControllerAnimated:1];
LABEL_12:
  uint64_t v8 = v13;
LABEL_13:
}

- (void)detailsAdapter:(id)a3 shouldComposeConversationWithRecipientAddresses:(id)a4
{
  id v17 = a4;
  id v6 = [a3 detailsController];
  if (CKIsRunningInMacCatalyst())
  {
    char v7 = [(CKCoreChatController *)self delegate];
    if (objc_opt_respondsToSelector())
    {
      uint64_t v8 = [(CKCoreChatController *)self delegate];
      if ([v8 hasDetailsNavigationController])
      {
        id v9 = [(CKCoreChatController *)self delegate];
        char v10 = objc_opt_respondsToSelector();

        if ((v10 & 1) == 0) {
          goto LABEL_12;
        }
        char v7 = [(CKCoreChatController *)self delegate];
        [v7 dismissDetailsNavigationController];
      }
      else
      {
      }
    }
LABEL_11:

    goto LABEL_12;
  }
  if (!v6) {
    goto LABEL_12;
  }
  char v7 = [(CKChatController *)self presentedViewController];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_11;
  }
  id v11 = [(CKChatController *)self presentedViewController];
  int v12 = [v11 viewControllers];
  int v13 = [v12 containsObject:v6];

  if (v13) {
    [(CKChatController *)self dismissDetailsControllerAnimated:1];
  }
LABEL_12:
  CGRect v14 = [(CKCoreChatController *)self delegate];
  char v15 = objc_opt_respondsToSelector();

  if (v15)
  {
    int v16 = [(CKCoreChatController *)self delegate];
    [v16 chatController:self shouldComposeConversationWithRecipientAddresses:v17];
  }
}

- (id)presentingViewControllerForGroupAlertsFromDetailsAdapter:(id)a3
{
  if (CKIsRunningInMacCatalyst()) {
    id v4 = self;
  }
  else {
    id v4 = 0;
  }

  return v4;
}

- (void)detailsAdapterWantsToPresentKTContactVerificationUI:(id)a3
{
  id v5 = [(CKCoreChatController *)self conversation];
  id v4 = [v5 chat];
  +[CKKeyTransparencyErrorUtilities showKTContactVerificationUIForIMChat:v4 fromViewController:self];
}

- (void)detailsAdapterWantsToPresentReportToAppleUI:(id)a3
{
}

- (void)detailsAdapterWillDismiss:(id)a3
{
  id v3 = +[CKLinkIntentsManager sharedManager];
  [v3 purgeDependencies];
}

- (void)detailsAdapterDidDismiss:(id)a3
{
  id v4 = [(CKCoreChatController *)self conversation];
  id v5 = [v4 chat];
  [v5 fetchKTStatus];

  if ([(CKChatController *)self _shouldRestoreFirstResponderAfterDetailsViewDismiss])
  {
    [(CKChatController *)self becomeFirstResponder];
  }
}

- (void)dismissDetailsNavigationController
{
  id v3 = [(CKCoreChatController *)self delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    id v5 = [(CKCoreChatController *)self delegate];
    [v5 dismissDetailsNavigationController];
  }
}

- (void)dismissDetailsViewAndShowConversationList
{
  id v2 = [(CKCoreChatController *)self delegate];
  [v2 dismissDetailsViewAndShowConversationList];
}

- (BOOL)isDetailsNavigationControllerDetached
{
  id v2 = [(CKCoreChatController *)self delegate];
  char v3 = [v2 isDetailsNavigationControllerDetached];

  return v3;
}

- (BOOL)_shouldRestoreFirstResponderAfterDetailsViewDismiss
{
  char v3 = [(CKCoreChatController *)self conversation];
  char v4 = [v3 hasLeftGroupChat];
  char v5 = [v3 isReadOnlyChat];
  char v6 = [v3 isBusinessChatDisabled];
  char v7 = [(CKChatController *)self isFirstResponder];
  uint64_t v8 = [(CKChatController *)self entryView];
  id v9 = [v8 contentView];
  char v10 = [v9 isActive];

  return (v4 | v7 | v10 | v6 | v5) ^ 1;
}

- (void)keyTransparencyConversationViewControllerDidComplete:(id)a3
{
  char v4 = [(CKCoreChatController *)self conversation];
  char v5 = [v4 chat];
  [v5 fetchKTStatus];

  [(CKChatController *)self dismissViewControllerAnimated:1 completion:&__block_literal_global_1334];
}

- (void)showModalInlineReplyControllerForChatItem:(id)a3 fromViewController:(id)a4
{
  id v7 = a4;
  char v6 = [(CKChatController *)self modalInlineReplyControllerForChatItem:a3];
  if (v6) {
    [v7 presentViewController:v6 animated:1 completion:0];
  }
}

- (id)modalInlineReplyControllerForChatItem:(id)a3
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  char v5 = [(CKChatController *)self inlineReplyController];
  if (v5)
  {

LABEL_4:
    if (!IMOSLoggingEnabled())
    {
LABEL_8:
      id v7 = 0;
      goto LABEL_9;
    }
    char v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      LOWORD(v21) = 0;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Inline reply controller already presented/presenting, bailing!", (uint8_t *)&v21, 2u);
    }
LABEL_7:

    goto LABEL_8;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    goto LABEL_4;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_8;
    }
    char v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      LOWORD(v21) = 0;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Grid asked to present non-message part item, bailing", (uint8_t *)&v21, 2u);
    }
    goto LABEL_7;
  }
  id v9 = v4;
  char v10 = +[CKUtilities threadIdentifierForMessagePart:v9];
  id v11 = +[CKUtilities threadOriginatorForMessagePart:v9];
  int v12 = [MEMORY[0x1E4F6BC28] configureMessageSummaryInfoForChatItem:v9];
  int v13 = [v9 message];
  CGRect v14 = [v13 guid];

  if (IMOSLoggingEnabled())
  {
    char v15 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      int v21 = 138412546;
      double v22 = v10;
      __int16 v23 = 2112;
      uint64_t v24 = v11;
      _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Creating reply modal for grid with thread identifier %@ originator %@", (uint8_t *)&v21, 0x16u);
    }
  }
  int v16 = [(CKCoreChatController *)self chat];
  [v16 loadInlineRepliesForThreadIdentifier:v10 threadOriginator:v11 messageGuid:v14];

  id v17 = [(CKChatController *)self _transcriptOverlayTransitionContextForModalPresentation];
  [v17 setNavBarContext:2];
  uint64_t v18 = [CKInlineReplyChatController alloc];
  double v19 = [(CKCoreChatController *)self conversation];
  double v20 = [(CKInlineReplyChatController *)v18 initWithConversation:v19 threadIdentifier:v10 threadOriginator:v11 transitionContext:v17 originatorMessageSummaryInfo:v12 parentChatController:self];

  [(CKChatController *)v20 setSendMenuDelegate:self];
  id v7 = (void *)[objc_alloc(MEMORY[0x1E4F42BF8]) initWithRootViewController:v20];
  [v7 setModalPresentationStyle:6];
  if (CKIsRunningInMacCatalyst()) {
    [v7 setNavigationBarHidden:1];
  }

LABEL_9:

  return v7;
}

- (void)showInlineReplyControllerForChatItem:(id)a3 presentKeyboard:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = +[CKInlineReplyTransitionProperties defaultProperties];
  [(CKChatController *)self showInlineReplyControllerForChatItem:v6 presentKeyboard:v4 replyTransitionProperties:v7];
}

- (void)showInlineReplyControllerForChatItem:(id)a3 presentKeyboard:(BOOL)a4 replyTransitionProperties:(id)a5
{
  BOOL v6 = a4;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a5;
  char v10 = [(CKChatController *)self inlineReplyController];
  if (v10)
  {
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_6;
    }
  }
  if (!CKIsRunningInMacCatalyst())
  {
    if (IMOSLoggingEnabled())
    {
      int v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Inline reply controller already presented/presenting, bailing!", buf, 2u);
      }
    }
    goto LABEL_37;
  }
  [(CKChatController *)self dismissInlineReplyController:0];
LABEL_6:
  if ([v8 canInlineReply])
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"MainTranscriptWhileInlineReplyControllerVisible"];
      id v11 = [(CKChatController *)self collectionView];
      [v11 setScrollEnabled:0];

      int v12 = [(CKChatController *)self collectionView];
      [v12 endHoldingContentOffsetUpdatesForAllReasons];

      int v13 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
      int v14 = [v13 isExpressiveTextEnabled];

      if (v14)
      {
        char v15 = [(CKCoreChatController *)self collectionViewController];
        [v15 updateTextEffectsState:&__block_literal_global_1339];
      }
      if ([v8 itemIsReplyContextPreview])
      {
        int v16 = [(CKCoreChatController *)self collectionViewController];
        id v17 = [v16 chatItems];

        for (unint64_t i = [v17 indexOfObject:v8]; i < objc_msgSend(v17, "count"); ++i)
        {
          id v19 = [v17 objectAtIndex:i];
          if ([v19 itemIsReply]) {
            goto LABEL_24;
          }
        }
        id v19 = 0;
LABEL_24:
      }
      else
      {
        id v19 = v8;
      }
      double v22 = [(CKChatController *)self _threadIdentifierForMessagePart:v19];
      float64x2_t v49 = [(CKChatController *)self _threadOriginatorForMessagePart:v19];
      float64x2_t v47 = [MEMORY[0x1E4F6BC28] configureMessageSummaryInfoForChatItem:v19];
      __int16 v23 = [v19 message];
      float64x2_t v48 = [v23 guid];

      if (IMOSLoggingEnabled())
      {
        uint64_t v24 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412546;
          long long v51 = v22;
          __int16 v52 = 2112;
          long long v53 = v49;
          _os_log_impl(&dword_18EF18000, v24, OS_LOG_TYPE_INFO, "Creating reply overlay,\n\tthreadIdentifier: %@\n\toriginator: %@", buf, 0x16u);
        }
      }
      uint64_t v25 = [(CKCoreChatController *)self chat];
      [v25 loadInlineRepliesForThreadIdentifier:v22 threadOriginator:v49 messageGuid:v48];

      uint64_t v26 = [(CKChatController *)self _transcriptOverlayTransitionContextForAnchoredMessagePart:v19 threadIdentifier:v22 presentKeyboard:v6];
      [v26 setNavBarContext:1];
      uint64_t v27 = [(CKChatController *)self collaborationNoticeSuggestions];
      objc_msgSend(v26, "setIsParentChatControllerShowingBanner:", objc_msgSend(v27, "count") != 0);

      [v26 setReplyTransitionProperties:v9];
      uint64_t v28 = [CKInlineReplyChatController alloc];
      uint64_t v29 = [(CKCoreChatController *)self conversation];
      uint64_t v30 = [(CKInlineReplyChatController *)v28 initWithConversation:v29 threadIdentifier:v22 threadOriginator:v49 transitionContext:v26 originatorMessageSummaryInfo:v47 parentChatController:self];

      [(CKChatController *)v30 setMessageGUIDForTranscriptExtension:v48];
      [(CKInlineReplyChatController *)v30 setInteractionDelegate:self];
      [(CKInlineReplyChatController *)v30 setTranscriptOverlayTransitionDelegate:self];
      id v31 = v8;
      long long v32 = [v31 messageItem];
      BOOL v33 = [v32 scheduleType] == 2;

      if (v33)
      {
        long long v34 = [(CKCoreChatController *)self inputController];
        long long v35 = [v34 sendLaterPluginInfo];

        long long v36 = [v31 time];
        [v35 setSelectedDate:v36];

        CGAffineTransform v37 = [(CKChatController *)self entryView];
        [v37 setSendLaterPluginInfo:v35 animated:0];
      }
      long long v38 = [(CKChatController *)self entryView];
      [(CKChatController *)v30 setEntryView:v38];

      [(CKScrollViewController *)self keyboardFrame];
      -[CKScrollViewController primeWithKeyboardFrame:](v30, "primeWithKeyboardFrame:");
      [(CKChatController *)v30 setSendMenuDelegate:self];
      if ([(CKScrollViewController *)self isKeyboardFloating]) {
        [(CKInlineReplyChatController *)v30 setShouldReloadInsetsForFloatingKeyboard:1];
      }
      double v39 = [(CKChatController *)self entryView];
      [v39 setDelegate:v30];

      id v40 = [(CKChatController *)self entryView];
      [v40 setClickInteractionDelegate:v30];

      uint64_t v41 = [(CKCoreChatController *)self inputController];
      [v41 setDelegate:v30];

      [(CKChatController *)self setInlineReplyController:v30];
      [(CKChatController *)self presentTranscriptOverlayViewController:v30];
      float64x2_t v42 = [(CKChatController *)self traitCollection];
      BOOL v43 = [v42 userInterfaceStyle] == 2;

      double v44 = [(CKChatController *)self entryView];
      double v45 = v44;
      if (v43) {
        uint64_t v46 = 7;
      }
      else {
        uint64_t v46 = 8;
      }
      [v44 setStyle:v46];

      [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:0];
    }
  }
  else
  {
    double v20 = IMLogHandleForCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      -[CKChatController showInlineReplyControllerForChatItem:presentKeyboard:replyTransitionProperties:]();
    }
  }
LABEL_37:
}

uint64_t __99__CKChatController_showInlineReplyControllerForChatItem_presentKeyboard_replyTransitionProperties___block_invoke(uint64_t a1, void *a2)
{
  return [a2 setInTransition:1];
}

- (void)showMessageEditingViewControllerForChatItem:(id)a3 presentKeyboard:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = [(CKChatController *)self tipManager];
  [v7 undoOrEditMessageUsed];

  if (!CKIsAppCardsEnabled())
  {
    id v8 = [(CKCoreChatController *)self inputController];
    [v8 forceDismissBrowserWithoutAnimation];
  }
  [(CKChatController *)self updateAppStripVisibility:0 animated:0];
  [(CKChatController *)self hideAcknowledgmentsAssociatedWithChatItem:v6];
  id v18 = [(CKChatController *)self _transcriptOverlayTransitionContextForAnchoredMessagePart:v6 threadIdentifier:0 presentKeyboard:v4];
  [v18 setNavBarContext:3];
  id v9 = [CKMessageEditingViewController alloc];
  char v10 = [(CKCoreChatController *)self conversation];
  id v11 = [(CKMessageEditingViewController *)v9 initWithTransitionContext:v18 conversation:v10];

  [(CKMessageEditingViewController *)v11 setTranscriptOverlayTransitionDelegate:self];
  [(CKMessageEditingViewController *)v11 setInteractionDelegate:self];
  int v12 = [(CKCoreChatController *)self collectionViewController];
  int v13 = [v12 balloonViewForChatItem:v6];
  int v14 = [v6 IMChatItem];

  char v15 = [v14 guid];

  [v13 frame];
  id v17 = (void *)[objc_alloc(MEMORY[0x1E4F77EA0]) initWithEditedMessageGuid:v15 editedMessageHeight:v16];
  [v12 setMessageEditingContext:v17];
  [(CKChatController *)self presentTranscriptOverlayViewController:v11];
  [(CKChatController *)self setMessageEditingViewController:v11];
  [(CKChatController *)self _hideCatchUpButtonIfNeededAndRemoveOnCompletion:0];
}

- (void)hideAcknowledgmentsAssociatedWithChatItem:(id)a3
{
  id v16 = a3;
  BOOL v4 = [v16 visibleAssociatedMessageChatItems];
  uint64_t v5 = [v4 indexOfObjectPassingTest:&__block_literal_global_1344];

  id v6 = v16;
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    id v7 = [v16 visibleAssociatedMessageChatItems];
    id v8 = [v7 objectAtIndex:v5];

    id v9 = [(CKCoreChatController *)self collectionViewController];
    char v10 = [v9 cellForAssociatedChatItem:v8];

    id v11 = [(CKCoreChatController *)self collectionViewController];
    int v12 = [v11 collectionView];
    int v13 = [v12 indexPathForCell:v10];

    if (v13)
    {
      int v14 = objc_msgSend(MEMORY[0x1E4F28D60], "indexSetWithIndex:", objc_msgSend(v13, "item"));
      char v15 = [(CKCoreChatController *)self collectionViewController];
      [v15 setHiddenAssociatedItemsForMessageEditing:v14];
    }
    id v6 = v16;
  }
}

uint64_t __62__CKChatController_hideAcknowledgmentsAssociatedWithChatItem___block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

- (void)showAcknowledgmentsAssociatedWithChatItem:(id)a3
{
  id v18 = a3;
  BOOL v4 = [v18 visibleAssociatedMessageChatItems];
  uint64_t v5 = [v4 indexOfObjectPassingTest:&__block_literal_global_1347];

  id v6 = v18;
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    id v7 = [v18 visibleAssociatedMessageChatItems];
    id v8 = [v7 objectAtIndex:v5];

    id v9 = [(CKCoreChatController *)self collectionViewController];
    char v10 = [v9 cellForAssociatedChatItem:v8];

    id v11 = [(CKCoreChatController *)self collectionViewController];
    int v12 = [v11 collectionView];
    int v13 = [v12 indexPathForCell:v10];

    if (v13)
    {
      int v14 = [(CKCoreChatController *)self collectionViewController];
      char v15 = [v14 hiddenAssociatedItems];
      id v16 = (void *)[v15 mutableCopy];

      objc_msgSend(v16, "removeIndex:", objc_msgSend(v13, "item"));
      id v17 = [(CKCoreChatController *)self collectionViewController];
      [v17 setHiddenAssociatedItemsForMessageEditing:v16];
    }
    id v6 = v18;
  }
}

uint64_t __62__CKChatController_showAcknowledgmentsAssociatedWithChatItem___block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

- (void)presentTranscriptOverlayViewController:(id)a3
{
  id v4 = a3;
  id v12 = [v4 transitionContext];
  [(CKChatController *)self addChildViewController:v4];
  uint64_t v5 = [(CKChatController *)self view];
  id v6 = [v4 view];
  [(id)v5 addSubview:v6];

  [v4 didMoveToParentViewController:self];
  id v7 = +[CKUIBehavior sharedBehaviors];
  LOBYTE(v5) = [v7 isEntryViewInputAccessory];

  if ((v5 & 1) == 0)
  {
    id v8 = [(CKChatController *)self view];
    id v9 = [(CKChatController *)self entryViewContainerView];
    [v8 bringSubviewToFront:v9];
  }
  uint64_t v10 = [v12 navBarContext];
  id v11 = [(CKChatController *)self navbarCanvasViewController];
  [v11 setNavBarContext:v10];
}

- (id)_transcriptOverlayTransitionContextForAnchoredMessagePart:(id)a3 threadIdentifier:(id)a4 presentKeyboard:(BOOL)a5
{
  BOOL v5 = a5;
  id v7 = a3;
  id v8 = objc_alloc_init(CKTranscriptOverlayTransitionContext);
  id v9 = [v7 IMChatItem];

  uint64_t v10 = [v9 guid];
  [(CKTranscriptOverlayTransitionContext *)v8 setAnchorChatItemGUID:v10];

  id v11 = [(CKChatController *)self _visibleChatItemsToScreenFrameMap];
  [(CKTranscriptOverlayTransitionContext *)v8 setVisibleChatItemToFrameMap:v11];

  if (v5)
  {
    [(CKTranscriptOverlayTransitionContext *)v8 setPresentWithKeyboard:1];
  }
  else
  {
    id v12 = [(CKChatController *)self entryView];
    int v13 = [v12 contentView];
    -[CKTranscriptOverlayTransitionContext setPresentWithKeyboard:](v8, "setPresentWithKeyboard:", [v13 isActive]);
  }
  int v14 = [(CKChatController *)self entryView];
  char v15 = [v14 contentView];
  -[CKTranscriptOverlayTransitionContext setKeyboardWasUpInMainTranscript:](v8, "setKeyboardWasUpInMainTranscript:", [v15 isActive]);

  id v16 = [(CKCoreChatController *)self collectionViewController];
  id v17 = [v16 view];
  [v17 frame];
  -[CKTranscriptOverlayTransitionContext setParentCollectionViewFrame:](v8, "setParentCollectionViewFrame:");

  id v18 = [(CKCoreChatController *)self collectionViewController];
  [v18 marginInsets];
  -[CKTranscriptOverlayTransitionContext setTranscriptMarginInsets:](v8, "setTranscriptMarginInsets:");

  id v19 = [(CKCoreChatController *)self collectionViewController];
  double v20 = [v19 view];
  [v20 safeAreaInsets];
  -[CKTranscriptOverlayTransitionContext setTranscriptSafeAreaInsets:](v8, "setTranscriptSafeAreaInsets:");

  if (CKIsRunningInMessagesTranscriptExtension()) {
    [(CKTranscriptOverlayTransitionContext *)v8 setWantsUnanimatedPresentation:1];
  }

  return v8;
}

- (id)_transcriptOverlayTransitionContextForModalPresentation
{
  id v2 = objc_alloc_init(CKTranscriptOverlayTransitionContext);
  [(CKTranscriptOverlayTransitionContext *)v2 setWantsModalPresentation:1];
  [(CKTranscriptOverlayTransitionContext *)v2 setPresentWithKeyboard:1];

  return v2;
}

- (id)_visibleChatItemsToScreenFrameMap
{
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v4 = [(CKCoreChatController *)self collectionViewController];
  BOOL v5 = [v4 chatItems];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  void v15[2] = __53__CKChatController__visibleChatItemsToScreenFrameMap__block_invoke;
  void v15[3] = &unk_1E5623738;
  void v15[4] = self;
  id v6 = v3;
  id v16 = v6;
  [v5 enumerateObjectsUsingBlock:v15];

  id v7 = [(CKCoreChatController *)self collectionViewController];
  id v8 = [v7 associatedChatItems];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __53__CKChatController__visibleChatItemsToScreenFrameMap__block_invoke_2;
  v13[3] = &unk_1E5623738;
  void v13[4] = self;
  id v9 = v6;
  id v14 = v9;
  [v8 enumerateObjectsUsingBlock:v13];

  uint64_t v10 = v14;
  id v11 = v9;

  return v11;
}

void __53__CKChatController__visibleChatItemsToScreenFrameMap__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [MEMORY[0x1E4F28D58] indexPathForRow:a3 inSection:0];
  id v7 = [*(id *)(a1 + 32) collectionView];
  id v8 = [v7 collectionViewLayout];
  id v9 = [v8 layoutAttributesForItemAtIndexPath:v6];

  uint64_t v10 = [*(id *)(a1 + 32) view];
  [v9 frame];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  id v19 = [*(id *)(a1 + 32) collectionView];
  objc_msgSend(v10, "convertRect:fromView:", v19, v12, v14, v16, v18);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;

  uint64_t v28 = [v5 IMChatItem];
  uint64_t v29 = [v28 guid];

  if (v29 && [v5 supportsInlineReplyTransition])
  {
    uint64_t v30 = *(void **)(a1 + 40);
    v32[0] = v21;
    v32[1] = v23;
    v32[2] = v25;
    _OWORD v32[3] = v27;
    id v31 = [MEMORY[0x1E4F29238] valueWithBytes:v32 objCType:"{CGRect={CGPoint=dd}{CGSize=dd}}"];
    [v30 setObject:v31 forKey:v29];
  }
}

void __53__CKChatController__visibleChatItemsToScreenFrameMap__block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [MEMORY[0x1E4F28D58] indexPathForRow:a3 inSection:1];
  id v7 = [*(id *)(a1 + 32) collectionView];
  id v8 = [v7 collectionViewLayout];
  id v9 = [v8 layoutAttributesForItemAtIndexPath:v6];

  uint64_t v10 = [*(id *)(a1 + 32) view];
  [v9 frame];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  id v19 = [*(id *)(a1 + 32) collectionView];
  objc_msgSend(v10, "convertRect:fromView:", v19, v12, v14, v16, v18);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;

  uint64_t v28 = [v5 IMChatItem];
  uint64_t v29 = [v28 guid];

  if (v29 && [v5 supportsInlineReplyTransition])
  {
    uint64_t v30 = *(void **)(a1 + 40);
    v32[0] = v21;
    v32[1] = v23;
    v32[2] = v25;
    _OWORD v32[3] = v27;
    id v31 = [MEMORY[0x1E4F29238] valueWithBytes:v32 objCType:"{CGRect={CGPoint=dd}{CGSize=dd}}"];
    [v30 setObject:v31 forKey:v29];
  }
}

- (id)_threadIdentifierForMessagePart:(id)a3
{
  return +[CKUtilities threadIdentifierForMessagePart:a3];
}

- (id)_threadOriginatorForMessagePart:(id)a3
{
  return +[CKUtilities threadOriginatorForMessagePart:a3];
}

- (void)dismissInlineReplyController:(BOOL)a3
{
  BOOL v3 = a3;
  id v6 = [(CKChatController *)self inlineReplyController];
  [(CKChatController *)self setInlineReplyController:0];
  id v5 = [(CKCoreChatController *)self chat];
  [v5 dismissInlineReplies];

  [(CKChatController *)self dismissTranscriptOverlayViewController:v6 presentKeyboard:v3];
  [(CKChatController *)self _showCatchUpButtonIfNeeded];
}

- (void)dismissMessageEditingViewController:(BOOL)a3
{
  BOOL v3 = a3;
  id v21 = [(CKChatController *)self messageEditingViewController];
  [(CKChatController *)self setMessageEditingViewController:0];
  id v5 = [(CKCoreChatController *)self collectionViewController];
  id v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [v6 messageEditingContext];

  [v5 setMessageEditingContext:0];
  [v5 balloonMaxWidth];
  double v9 = v8;
  [v5 marginInsets];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  double v18 = [(CKChatController *)self traitCollection];
  objc_msgSend(v5, "invalidateChatItemLayoutWithNewBalloonMaxWidth:marginInsets:traitCollection:", v18, v9, v11, v13, v15, v17);

  [v5 updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset];
  [(CKChatController *)self dismissTranscriptOverlayViewController:v21 presentKeyboard:v3];
  id v19 = [v7 editedMessageGuid];
  uint64_t v20 = [v5 chatItemForGUID:v19];

  [(CKChatController *)self showAcknowledgmentsAssociatedWithChatItem:v20];
  [(CKChatController *)self _showCatchUpButtonIfNeeded];
}

- (void)dismissTranscriptOverlayViewController:(id)a3 presentKeyboard:(BOOL)a4
{
  id v5 = a3;
  id v6 = [(CKChatController *)self standardSuggestionPresenter];
  id v7 = [v6 banner];
  [v7 setHidden:0];

  double v8 = [(CKChatController *)self standardSuggestionPresenter];
  double v9 = [v8 banner];
  [v9 setAlpha:1.0];

  if (v5)
  {
    [v5 willMoveToParentViewController:0];
    [(CKChatController *)self removeChildViewController:v5];
    double v10 = [v5 view];
    [v10 removeFromSuperview];
  }
  double v11 = [(CKChatController *)self entryView];
  [v11 setDelegate:self];

  double v12 = [(CKChatController *)self entryView];
  [v12 setClickInteractionDelegate:self];

  double v13 = [(CKChatController *)self traitCollection];
  double v14 = [(CKChatController *)self entryView];
  [v14 setEntryViewTraitCollection:v13 resetStyle:1];

  [(CKMessageEntryBackgroundViewProtocol *)self->_keyboardCandidateBarBackgroundView setEntryViewTraitCollection:v13];
  double v15 = [(CKCoreChatController *)self inputController];
  [v15 setDelegate:self];

  double v16 = [(CKCoreChatController *)self collectionViewController];
  double v17 = objc_opt_new();
  [v16 setHiddenItems:v17];

  double v18 = [(CKCoreChatController *)self collectionViewController];
  id v19 = objc_opt_new();
  [v18 setHiddenAssociatedItems:v19];

  uint64_t v20 = [(CKCoreChatController *)self collectionViewController];
  id v21 = objc_opt_new();
  [v20 setHiddenBalloonViews:v21];

  uint64_t v22 = [(CKChatController *)self collectionView];
  [v22 setScrollEnabled:1];

  uint64_t v23 = [(CKChatController *)self collectionView];
  [v23 endHoldingContentOffsetUpdatesForReason:@"TranscriptOverlayViewController"];

  uint64_t v24 = [(CKChatController *)self navbarCanvasViewController];
  uint64_t v25 = [v24 backButtonView];
  [v25 setAlpha:1.0];

  uint64_t v26 = [(CKChatController *)self navbarCanvasViewController];
  uint64_t v27 = [v26 unifiedCallButton];
  [v27 setAlpha:1.0];

  uint64_t v28 = [(CKChatController *)self navbarCanvasViewController];
  [v28 setNavBarContext:0];

  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"MainTranscriptWhileInlineReplyControllerVisible"];
  if ([(CKScrollViewController *)self isKeyboardFloating]) {
    [(CKScrollViewController *)self inputAccessoryViewFrameUpdatedForFloatingKeyboard];
  }
  uint64_t v29 = [(CKChatController *)self groupPhotoUpdateBanner];

  if (v29)
  {
    uint64_t v30 = +[CKUIBehavior sharedBehaviors];
    [v30 replyTranscriptUpdateBannerAnimateInTime];
    double v32 = v31;

    v40[0] = MEMORY[0x1E4F143A8];
    v40[1] = 3221225472;
    void v40[2] = __75__CKChatController_dismissTranscriptOverlayViewController_presentKeyboard___block_invoke;
    v40[3] = &unk_1E5620C40;
    void v40[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:v40 animations:0 completion:v32];
  }
  BOOL v33 = [(CKChatController *)self nicknameBanner];

  if (v33)
  {
    long long v34 = +[CKUIBehavior sharedBehaviors];
    [v34 replyTranscriptUpdateBannerAnimateInTime];
    double v36 = v35;

    v39[0] = MEMORY[0x1E4F143A8];
    v39[1] = 3221225472;
    v39[2] = __75__CKChatController_dismissTranscriptOverlayViewController_presentKeyboard___block_invoke_2;
    v39[3] = &unk_1E5620C40;
    v39[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:v39 animations:0 completion:v36];
  }
  dispatch_time_t v37 = dispatch_time(0, 100000000);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __75__CKChatController_dismissTranscriptOverlayViewController_presentKeyboard___block_invoke_3;
  block[3] = &unk_1E5620C40;
  void block[4] = self;
  dispatch_after(v37, MEMORY[0x1E4F14428], block);
}

void __75__CKChatController_dismissTranscriptOverlayViewController_presentKeyboard___block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) groupPhotoUpdateBanner];
  [v1 setAlpha:1.0];
}

void __75__CKChatController_dismissTranscriptOverlayViewController_presentKeyboard___block_invoke_2(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) nicknameBanner];
  [v1 setAlpha:1.0];
}

void __75__CKChatController_dismissTranscriptOverlayViewController_presentKeyboard___block_invoke_3(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) collectionView];
  int v2 = [*(id *)(a1 + 32) transcriptWasScrolledToBottomBeforeInlinePresentation];
  BOOL v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 setTranscriptWasScrolledToBottomBeforeInlinePresentation:0];
    id v4 = [*(id *)(a1 + 32) collectionViewController];
    [v4 scrollTranscriptToEntryViewInsertionTimeWithAnimation:1];
  }
  else
  {
    id v5 = [v3 collectionViewController];
    [v5 updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset];

    id v4 = +[CKScrollViewAnimationProperties systemDefaultScrollAnimation];
    [v6 enforceTranscriptScrollIntentWithAnimationProperties:v4];
  }
}

- (void)messageEditingViewControllerRequestsDismissal:(id)a3 presentKeyboard:(BOOL)a4
{
}

- (void)messageEditingViewController:(id)a3 confirmedEditWithComposition:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    double v8 = [v6 transitionContext];
    uint64_t v28 = [v8 anchorChatItemGUID];

    double v9 = [(CKCoreChatController *)self collectionViewController];
    double v10 = [v9 chatItemForGUID:v28];

    id v11 = v10;
    double v12 = [v11 messageItem];
    uint64_t v13 = [v11 index];
    double v14 = [(CKCoreChatController *)self conversation];
    [v14 editMessageItem:v12 partIndex:v13 withNewComposition:v7];
    double v15 = [(CKCoreChatController *)self conversation];
    double v16 = [v15 chat];
    [v16 setProofreadingInfo:0];

    double v17 = [v12 historyForMessagePart:v13];
    uint64_t v18 = [v17 count] - 1;
    id v19 = [MEMORY[0x1E4F6E890] sharedInstance];
    uint64_t v20 = *MEMORY[0x1E4F6D848];
    id v21 = [NSNumber numberWithInteger:v18];
    [v19 trackEvent:v20 withCount:v21];

    uint64_t v22 = NSNumber;
    [v11 timeIntervalSinceMessageSent];
    double v24 = v23;

    uint64_t v25 = [v22 numberWithDouble:v24];
    uint64_t v26 = [MEMORY[0x1E4F6E890] sharedInstance];
    [v26 trackEvent:*MEMORY[0x1E4F6DBF0] withStatistic:v25];
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v27 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v27, OS_LOG_TYPE_INFO, "Confirmed edit with no changes to the original message, aborting edit.", buf, 2u);
    }
  }
}

- (void)messageEditingViewControllerIsAnimatingIn:(id)a3
{
  id v4 = a3;
  [(CKChatController *)self setTargetFirstResponder:3];
  [(CKChatController *)self reloadInputViews];
  int v5 = [v4 becomeFirstResponder];

  if (v5) {
    [(CKChatController *)self setTargetFirstResponder:4];
  }
  id v6 = [(CKCoreChatController *)self inputController];
  [v6 setShouldBlurForMessageEditing:1];
}

- (void)messageEditingViewControllerIsAnimatingOut:(id)a3
{
  [(CKChatController *)self setTargetFirstResponder:1];
  if ([(CKChatController *)self becomeFirstResponder]) {
    [(CKChatController *)self setTargetFirstResponder:4];
  }
  id v4 = [(CKCoreChatController *)self inputController];
  [v4 setShouldBlurForMessageEditing:0];
}

- (void)messageEditingViewControllerWillAnimateOut:(id)a3
{
}

- (void)messageEditingViewControllerDidFinishAnimatingOut:(id)a3
{
}

- (id)messageEditingViewController:(id)a3 originalMessageCompositionForMessageWithGuid:(id)a4
{
  id v5 = a4;
  id v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [v6 chatItemForGUID:v5];

  id v8 = v7;
  uint64_t v9 = [v8 index];
  double v10 = [v8 message];

  id v11 = [v10 messageSubject];
  double v12 = [v10 text];
  uint64_t v13 = objc_msgSend(v12, "__im_messagePartMatchingPartIndex:", v9);
  double v14 = [v13 messagePartBody];
  double v15 = [[CKComposition alloc] initWithText:v14 subject:v11];

  return v15;
}

- (void)messageEditingViewController:(id)a3 didUpdateFrameForBalloonView:(id)a4
{
  id v6 = a4;
  id v7 = [a3 transitionContext];
  id v25 = [v7 anchorChatItemGUID];

  id v8 = [(CKCoreChatController *)self collectionViewController];
  [v6 frame];
  double v10 = v9;

  id v11 = (void *)[objc_alloc(MEMORY[0x1E4F77EA0]) initWithEditedMessageGuid:v25 editedMessageHeight:v10];
  double v12 = [v8 messageEditingContext];
  char v13 = [v11 isEqualToContext:v12];

  if ((v13 & 1) == 0)
  {
    [v8 setMessageEditingContext:v11];
    [v8 balloonMaxWidth];
    double v15 = v14;
    [v8 marginInsets];
    double v17 = v16;
    double v19 = v18;
    double v21 = v20;
    double v23 = v22;
    double v24 = [(CKChatController *)self traitCollection];
    objc_msgSend(v8, "invalidateChatItemLayoutWithNewBalloonMaxWidth:marginInsets:traitCollection:", v24, v15, v17, v19, v21, v23);
  }
  [(CKChatController *)self scrollTranscriptToAlignWithMessageEditingBalloonView];
}

- (void)scrollTranscriptToAlignWithMessageEditingBalloonView
{
  BOOL v3 = [(CKChatController *)self messageEditingViewController];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 transitionContext];
    id v6 = [v5 anchorChatItemGUID];

    id v7 = [v4 balloonViewForAlignment];
    id v8 = [(CKCoreChatController *)self collectionViewController];
    double v9 = [v8 chatItemForGUID:v6];

    id v10 = v9;
    id v11 = [v10 message];
    double v12 = (void *)[v10 index];
    id location = 0;
    objc_initWeak(&location, self);
    char v13 = [(CKChatController *)self collectionView];
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    void v16[2] = __72__CKChatController_scrollTranscriptToAlignWithMessageEditingBalloonView__block_invoke;
    v16[3] = &unk_1E5620B40;
    objc_copyWeak(v19, &location);
    id v14 = v11;
    id v17 = v14;
    v19[1] = v12;
    id v15 = v7;
    id v18 = v15;
    [v13 performContentOffsetUpdateTemporarilyOverridingHoldStatus:v16];

    objc_destroyWeak(v19);
    objc_destroyWeak(&location);
  }
}

void __72__CKChatController_scrollTranscriptToAlignWithMessageEditingBalloonView__block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained scrollToMessage:*(void *)(a1 + 32) atSpecificMessagePartIndex:*(void *)(a1 + 56) highlight:0 withInlineReplyOverlay:0 alignedWithView:*(void *)(a1 + 40) allowOverScroll:1];
}

- (UIEdgeInsets)messageEditingViewController:(id)a3 contentInsetsForChatItemGuid:(id)a4
{
  id v5 = a4;
  double v6 = *MEMORY[0x1E4F437F8];
  double v7 = *(double *)(MEMORY[0x1E4F437F8] + 8);
  double v8 = *(double *)(MEMORY[0x1E4F437F8] + 16);
  double v9 = *(double *)(MEMORY[0x1E4F437F8] + 24);
  id v10 = [(CKCoreChatController *)self collectionViewController];
  id v11 = [v10 chatItemForGUID:v5];

  if (v11)
  {
    double v12 = [(CKCoreChatController *)self collectionViewController];
    char v13 = [v12 cellForChatItem:v11];

    if (v13)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        [v13 contentAlignmentInsets];
        double v6 = v14;
        double v7 = v15;
        double v8 = v16;
        double v9 = v17;
        goto LABEL_12;
      }
      id v18 = IMLogHandleForCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        -[CKChatController messageEditingViewController:contentInsetsForChatItemGuid:]();
      }
    }
    else
    {
      id v18 = IMLogHandleForCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        -[CKChatController messageEditingViewController:contentInsetsForChatItemGuid:]();
      }
    }

    goto LABEL_12;
  }
  char v13 = IMLogHandleForCategory();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    -[CKChatController messageEditingViewController:contentInsetsForChatItemGuid:]();
  }
LABEL_12:

  double v19 = v6;
  double v20 = v7;
  double v21 = v8;
  double v22 = v9;
  result.double right = v22;
  result.double bottom = v21;
  result.double left = v20;
  result.double top = v19;
  return result;
}

- (UIEdgeInsets)transcriptContentInsetsForMessageEditingViewController:(id)a3
{
  BOOL v3 = [(CKChatController *)self collectionView];
  [v3 contentInset];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  double v12 = v5;
  double v13 = v7;
  double v14 = v9;
  double v15 = v11;
  result.double right = v15;
  result.double bottom = v14;
  result.double left = v13;
  result.double top = v12;
  return result;
}

- (BOOL)messageEditingViewController:(id)a3 balloonHasTailForChatItemGuid:(id)a4
{
  id v5 = a4;
  double v6 = [(CKCoreChatController *)self collectionViewController];
  double v7 = [v6 chatItemForGUID:v5];

  LOBYTE(v6) = [v7 hasTail];
  return (char)v6;
}

- (char)messageEditingViewController:(id)a3 colorForChatItemGuid:(id)a4
{
  id v5 = a4;
  double v6 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v7 = [v6 isPriusEnabled];

  if (v7)
  {
    double v8 = [(CKCoreChatController *)self collectionViewController];
    double v9 = [v8 chatItemForGUID:v5];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      char v10 = [v9 color];
    }
    else {
      char v10 = 1;
    }
  }
  else
  {
    char v10 = 1;
  }

  return v10;
}

- (id)proofReadingInfoForMessageEditingViewController:(id)a3
{
  BOOL v3 = [(CKCoreChatController *)self conversation];
  double v4 = [v3 chat];
  id v5 = [v4 proofreadingInfo];

  return v5;
}

- (void)inlineReplyControllerRequestsDismissal:(id)a3 presentKeyboard:(BOOL)a4
{
  [(CKChatController *)self dismissInlineReplyController:a4];

  [(CKChatController *)self _registerSendProgressDelegate];
}

- (void)transcriptOverlayViewController:(id)a3 visibleGUIDsDidChange:(id)a4
{
  id v5 = a4;
  double v6 = objc_opt_new();
  int v7 = objc_opt_new();
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __74__CKChatController_transcriptOverlayViewController_visibleGUIDsDidChange___block_invoke;
  v12[3] = &unk_1E56218F0;
  void v12[4] = self;
  id v13 = v6;
  id v14 = v7;
  id v8 = v7;
  id v9 = v6;
  [v5 enumerateObjectsUsingBlock:v12];

  char v10 = [(CKCoreChatController *)self collectionViewController];
  [v10 setHiddenItems:v9];

  double v11 = [(CKCoreChatController *)self collectionViewController];
  [v11 setHiddenAssociatedItems:v8];
}

void __74__CKChatController_transcriptOverlayViewController_visibleGUIDsDidChange___block_invoke(id *a1, void *a2)
{
  id v13 = a2;
  BOOL v3 = [a1[4] collectionViewController];
  double v4 = [v3 chatItemForGUID:v13];

  if (v4)
  {
    if ([v4 supportsInlineReplyTransition])
    {
      id v5 = [a1[4] collectionViewController];
      double v6 = [v5 chatItems];
      uint64_t v7 = [v6 indexOfObject:v4];

      [a1[5] addIndex:v7];
    }
  }
  else
  {
    id v8 = [a1[4] collectionViewController];
    id v9 = [v8 associatedChatItemForGUID:v13];

    if (v9)
    {
      char v10 = [a1[4] collectionViewController];
      double v11 = [v10 associatedChatItems];
      uint64_t v12 = [v11 indexOfObject:v9];

      [a1[6] addIndex:v12];
    }
  }
}

- (CGRect)inlineReplyController:(id)a3 gradientFrameWithInsets:(UIEdgeInsets)a4
{
  double bottom = a4.bottom;
  double v6 = [(CKChatController *)self collectionView];
  [v6 contentInset];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  if (v12 >= bottom) {
    double v15 = v12;
  }
  else {
    double v15 = bottom;
  }

  -[CKCoreChatController gradientFrameWithInsets:](self, "gradientFrameWithInsets:", v8, v10, v15, v14);
  result.size.CGFloat height = v19;
  result.size.CGFloat width = v18;
  result.origin.CGFloat y = v17;
  result.origin.CGFloat x = v16;
  return result;
}

- (void)inlineReplyControllerIsAppearing:(id)a3
{
  double v4 = [(CKChatController *)self collectionView];
  switch([v4 transcriptScrollIntent])
  {
    case 0:
    case 3:
    case 6:
      [(CKChatController *)self setTranscriptWasScrolledToBottomBeforeInlinePresentation:1];
      break;
    case 4:
      id v5 = IMLogHandleForCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        -[CKChatController inlineReplyControllerIsAppearing:]();
      }

      break;
    default:
      break;
  }
  [v4 setTranscriptScrollIntent:4];
}

- (void)transcriptOverlayViewControllerWillAnimateIn:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self groupPhotoUpdateBanner];

  if (v5)
  {
    double v6 = +[CKUIBehavior sharedBehaviors];
    [v6 replyTranscriptUpdateBannerAnimateOutTime];
    double v8 = v7;

    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    void v15[2] = __65__CKChatController_transcriptOverlayViewControllerWillAnimateIn___block_invoke;
    void v15[3] = &unk_1E5620C40;
    void v15[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:v15 animations:0 completion:v8];
  }
  double v9 = [(CKChatController *)self nicknameBanner];

  if (v9)
  {
    double v10 = +[CKUIBehavior sharedBehaviors];
    [v10 replyTranscriptUpdateBannerAnimateOutTime];
    double v12 = v11;

    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __65__CKChatController_transcriptOverlayViewControllerWillAnimateIn___block_invoke_2;
    v14[3] = &unk_1E5620C40;
    void v14[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:v14 animations:0 completion:v12];
  }
  if ([v4 wantsBackingTranscriptToIgnoreContentOffsetChanges])
  {
    double v13 = [(CKChatController *)self collectionView];
    [v13 beginHoldingContentOffsetUpdatesForReason:@"TranscriptOverlayViewController"];
  }
}

void __65__CKChatController_transcriptOverlayViewControllerWillAnimateIn___block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) groupPhotoUpdateBanner];
  [v1 setAlpha:0.0];
}

void __65__CKChatController_transcriptOverlayViewControllerWillAnimateIn___block_invoke_2(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) nicknameBanner];
  [v1 setAlpha:0.0];
}

- (void)transcriptOverlayViewControllerIsAnimatingIn:(id)a3
{
  id v4 = [(CKChatController *)self navbarCanvasViewController];
  id v5 = [v4 backButtonView];
  [v5 setAlpha:0.0];

  double v6 = [(CKChatController *)self navbarCanvasViewController];
  double v7 = [v6 unifiedCallButton];
  [v7 setAlpha:0.0];

  double v8 = [(CKCoreChatController *)self collectionViewController];
  [v8 updateTargetAlphaForVisibleChatItems];

  id v12 = [(CKCoreChatController *)self collectionViewController];
  double v9 = [v12 collectionView];
  double v10 = +[CKUIBehavior sharedBehaviors];
  double v11 = [v10 theme];
  [v11 transcriptOverlayBackingCollectionViewOpacity];
  objc_msgSend(v9, "setAlpha:");
}

- (void)transcriptOverlayViewControllerDidAnimateIn:(id)a3
{
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __64__CKChatController_transcriptOverlayViewControllerDidAnimateIn___block_invoke;
  v8[3] = &unk_1E5620C40;
  void v8[4] = self;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __64__CKChatController_transcriptOverlayViewControllerDidAnimateIn___block_invoke_2;
  _OWORD v7[3] = &unk_1E5620BF0;
  void v7[4] = self;
  [MEMORY[0x1E4F42FF0] animateWithDuration:v8 animations:v7 completion:0.3];
  id v4 = [(CKChatController *)self entryViewContainerView];
  [v4 setNeedsLayout];

  id v5 = [(CKCoreChatController *)self collectionViewController];
  [v5 updateTextEffectsState:&__block_literal_global_1354];
  double v6 = [(CKCoreChatController *)self->_inlineReplyController collectionViewController];
  [v6 updateTextEffectsState:&__block_literal_global_1356];
}

void __64__CKChatController_transcriptOverlayViewControllerDidAnimateIn___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  id v1 = [v2 banner];
  [v1 setAlpha:0.0];
}

void __64__CKChatController_transcriptOverlayViewControllerDidAnimateIn___block_invoke_2(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) standardSuggestionPresenter];
  id v1 = [v2 banner];
  [v1 setHidden:1];
}

uint64_t __64__CKChatController_transcriptOverlayViewControllerDidAnimateIn___block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 setInTransition:0];
}

void __64__CKChatController_transcriptOverlayViewControllerDidAnimateIn___block_invoke_4(uint64_t a1, void *a2)
{
  id v2 = a2;
  [v2 setInTransition:0];
  [v2 setIsReady:1];
}

- (void)transcriptOverlayViewControllerWillAnimateOut:(id)a3
{
  if (self->_inlineReplyController == a3)
  {
    id v5 = [(CKCoreChatController *)self collectionViewController];
    [v5 updateTextEffectsState:&__block_literal_global_1358];
    id v4 = [(CKCoreChatController *)self->_inlineReplyController collectionViewController];
    [v4 updateTextEffectsState:&__block_literal_global_1360];
  }
}

uint64_t __66__CKChatController_transcriptOverlayViewControllerWillAnimateOut___block_invoke(uint64_t a1, void *a2)
{
  return [a2 setInTransition:1];
}

uint64_t __66__CKChatController_transcriptOverlayViewControllerWillAnimateOut___block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 setInTransition:1];
}

- (void)transcriptOverlayViewControllerIsAnimatingOut:(id)a3
{
  id v4 = [(CKChatController *)self navbarCanvasViewController];
  id v5 = [v4 backButtonView];
  [v5 setAlpha:1.0];

  double v6 = [(CKChatController *)self navbarCanvasViewController];
  double v7 = [v6 unifiedCallButton];
  [v7 setAlpha:1.0];

  double v8 = [(CKChatController *)self navbarCanvasViewController];
  [v8 setNavBarContext:0];

  double v9 = [(CKCoreChatController *)self collectionViewController];
  [v9 updateTargetAlphaForVisibleChatItems];

  id v11 = [(CKCoreChatController *)self collectionViewController];
  double v10 = [v11 collectionView];
  [v10 setAlpha:1.0];
}

- (void)transcriptOverlayViewControllerDidAnimateOut:(id)a3
{
  if (self->_inlineReplyController == a3)
  {
    id v5 = [(CKCoreChatController *)self collectionViewController];
    [v5 updateTextEffectsState:&__block_literal_global_1362];
    id v4 = [(CKCoreChatController *)self->_inlineReplyController collectionViewController];
    [v4 updateTextEffectsState:&__block_literal_global_1364];
  }
}

uint64_t __65__CKChatController_transcriptOverlayViewControllerDidAnimateOut___block_invoke(uint64_t a1, void *a2)
{
  return [a2 setInTransition:0];
}

uint64_t __65__CKChatController_transcriptOverlayViewControllerDidAnimateOut___block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 setInTransition:0];
}

- (void)inlineReplyController:(id)a3 setTargetFirstResponder:(int64_t)a4
{
}

- (BOOL)inlineReplyController:(id)a3 containerWidth:(double *)a4 offset:(double *)a5
{
  return [(CKChatController *)self messageEntryViewWidth:a4 andOffset:a5];
}

- (void)inlineReplyController:(id)a3 setIsShowingPreview:(BOOL)a4
{
}

- (void)inlineReplyController:(id)a3 messageEntryView:(id)a4 didMoveToWindow:(id)a5
{
}

- (void)inlineReplyController:(id)a3 appCardDidChangeEntryViewAlignmentHeight:(double)a4 animated:(BOOL)a5
{
}

- (UIEdgeInsets)parentTranscriptContentInsetsForInlineReplyController:(id)a3
{
  BOOL v3 = [(CKChatController *)self collectionView];
  [v3 contentInset];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  double v12 = v5;
  double v13 = v7;
  double v14 = v9;
  double v15 = v11;
  result.double right = v15;
  result.double bottom = v14;
  result.double left = v13;
  result.double top = v12;
  return result;
}

- (void)imagePickerController:(id)a3 didFinishPickingMediaWithInfo:(id)a4
{
  v18[1] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  double v8 = [v7 objectForKey:*MEMORY[0x1E4F439A8]];
  double v9 = [v8 localIdentifier];

  if (v9)
  {
    double v10 = (void *)MEMORY[0x1E4F38EB8];
    double v11 = [v8 localIdentifier];
    v18[0] = v11;
    double v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v18 count:1];
    double v13 = [v10 fetchAssetsWithLocalIdentifiers:v12 options:0];
    double v14 = [v13 firstObject];

    if (v14)
    {
      id location = 0;
      objc_initWeak(&location, self);
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 3221225472;
      void v15[2] = __72__CKChatController_imagePickerController_didFinishPickingMediaWithInfo___block_invoke;
      void v15[3] = &unk_1E5623760;
      objc_copyWeak(&v16, &location);
      +[CKComposition mediaObjectFromPhotosAsset:v14 completion:v15];
      objc_destroyWeak(&v16);
      objc_destroyWeak(&location);
    }
  }
}

void __72__CKChatController_imagePickerController_didFinishPickingMediaWithInfo___block_invoke(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  double v5 = [WeakRetained composition];
  id v7 = [v5 compositionByAppendingMediaObject:v3];

  id v6 = objc_loadWeakRetained(v2);
  [v6 setComposition:v7];
}

- (void)appendCompositionFromItemProviders:(id)a3
{
  id v4 = a3;
  id location = 0;
  objc_initWeak(&location, self);
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __55__CKChatController_appendCompositionFromItemProviders___block_invoke;
  v5[3] = &unk_1E5623788;
  objc_copyWeak(&v6, &location);
  void v5[4] = self;
  +[CKComposition requestCompositionFromItemProviders:v4 completion:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void __55__CKChatController_appendCompositionFromItemProviders___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __55__CKChatController_appendCompositionFromItemProviders___block_invoke_2;
  block[3] = &unk_1E5622778;
  id v6 = v3;
  id v4 = v3;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  uint64_t v7 = *(void *)(a1 + 32);
  dispatch_async(MEMORY[0x1E4F14428], block);
  objc_destroyWeak(&v8);
}

void __55__CKChatController_appendCompositionFromItemProviders___block_invoke_2(id *a1)
{
  uint64_t v25 = 0;
  uint64_t v26 = (id *)&v25;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy__10;
  uint64_t v29 = __Block_byref_object_dispose__10;
  id v30 = 0;
  id v2 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v3 = [v2 isAudioMessagesEntryViewRecordingEnabled];

  if (v3)
  {
    if ([a1[4] isAudioComposition]) {
      id v4 = a1 + 4;
    }
    else {
      id v4 = v26 + 5;
    }
    objc_storeStrong(v26 + 5, *v4);
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v6 = [WeakRetained composition];

  if (([v26[5] isAudioComposition] & 1) == 0)
  {
    id v7 = a1[4];
    if (v6)
    {
      id v7 = [v6 compositionByAppendingComposition:a1[4]];
    }
    objc_storeStrong(v26 + 5, v7);
    if (v6) {

    }
    id v8 = [a1[4] collaborationShareOptions];
    uint64_t v9 = [v26[5] compositionWithCollaborationShareOptions:v8];
    id v10 = v26[5];
    void v26[5] = (id)v9;
  }
  double v11 = [a1[5] delegate];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    double v13 = [a1[5] delegate];
  }
  else
  {
    double v13 = 0;
  }
  if ([v13 isComposingMessage])
  {
    BOOL v14 = 0;
  }
  else
  {
    double v15 = [a1[5] composition];
    id v16 = [v15 shelfPluginPayload];
    BOOL v14 = v16 != 0;
  }
  double v17 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v18 = [v17 isAudioMessagesEntryViewRecordingEnabled];

  if (v18)
  {
    if (!v14)
    {
      if (![v26[5] isAudioComposition]) {
        goto LABEL_22;
      }
      double v19 = [a1[5] composition];
      char v20 = [v19 hasContent];

      if ((v20 & 1) == 0) {
        goto LABEL_22;
      }
    }
LABEL_24:
    id v22 = a1[5];
    v23[0] = MEMORY[0x1E4F143A8];
    v23[1] = 3221225472;
    v23[2] = __55__CKChatController_appendCompositionFromItemProviders___block_invoke_3;
    id v23[3] = &unk_1E56235E8;
    objc_copyWeak(&v24, a1 + 6);
    void v23[4] = &v25;
    [v22 presentReplaceCompositionAlertWithConfirmationBlock:v23 cancelBlock:&__block_literal_global_1368];
    objc_destroyWeak(&v24);
    goto LABEL_25;
  }
  if (v14) {
    goto LABEL_24;
  }
LABEL_22:
  id v21 = objc_loadWeakRetained(a1 + 6);
  [v21 setComposition:v26[5]];

LABEL_25:
  _Block_object_dispose(&v25, 8);
}

void __55__CKChatController_appendCompositionFromItemProviders___block_invoke_3(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setComposition:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void __55__CKChatController_appendCompositionFromItemProviders___block_invoke_4()
{
  if (IMOSLoggingEnabled())
  {
    id v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v1 = 0;
      _os_log_impl(&dword_18EF18000, v0, OS_LOG_TYPE_INFO, "Do not replace composition. Return early.", v1, 2u);
    }
  }
}

- (id)presentedControllerDoneButtonItem
{
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:0 target:self action:sel_dismissPresentedViewController_];

  return v2;
}

- (void)dismissPresentedViewController:(id)a3
{
}

- (void)startDeferredEditingPayload:(id)a3 forConversation:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id location = 0;
  objc_initWeak(&location, self);
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = __64__CKChatController_startDeferredEditingPayload_forConversation___block_invoke;
  _OWORD v9[3] = &unk_1E56237B0;
  void v9[4] = self;
  objc_copyWeak(&v11, &location);
  id v8 = v6;
  id v10 = v8;
  +[CKComposition compositionWithShelfPluginPayload:v8 completionHandler:v9];

  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);
}

void __64__CKChatController_startDeferredEditingPayload_forConversation___block_invoke(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [a1[4] conversation];
  [v7 setUnsentComposition:v5];

  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __64__CKChatController_startDeferredEditingPayload_forConversation___block_invoke_2;
  v8[3] = &unk_1E5622AB8;
  objc_copyWeak(&v10, a1 + 6);
  id v9 = a1[5];
  [a1[4] setDeferredPresentationBlock:v8];

  objc_destroyWeak(&v10);
}

void __64__CKChatController_startDeferredEditingPayload_forConversation___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained inputController];
  [v2 startEditingPayload:*(void *)(a1 + 32)];
}

- (void)startCommitPayload:(id)a3 forConversation:(id)a4
{
  id v5 = a3;
  [v5 setIsFromMe:1];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __55__CKChatController_startCommitPayload_forConversation___block_invoke;
  _OWORD v7[3] = &unk_1E56237D8;
  void v7[4] = self;
  id v8 = v5;
  id v6 = v5;
  +[CKComposition compositionWithShelfPluginPayload:v6 completionHandler:v7];
}

void __55__CKChatController_startCommitPayload_forConversation___block_invoke(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) chatInputSentComposition:a2];
  id v4 = +[CKBalloonPluginManager sharedInstance];
  int v3 = [*(id *)(a1 + 40) pluginBundleID];
  [v4 updateInteractionTimeForPlugin:v3];
}

- (void)willDismissFunCamera:(id)a3
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  [(CKChatController *)self setIsShowingCamera:0];
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v6 = 136315138;
      id v7 = "-[CKChatController willDismissFunCamera:]";
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "reloadEntryViewIfNeeded called from %s", (uint8_t *)&v6, 0xCu);
    }
  }
  [(CKChatController *)self reloadEntryViewIfNeeded];
  [(CKChatController *)self becomeFirstResponder];
}

- (void)didDismissFunCamera:(id)a3
{
}

- (void)stageAssetArchive:(id)a3 skipShelf:(BOOL)a4 completionHandler:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  id location = 0;
  objc_initWeak(&location, self);
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __66__CKChatController_stageAssetArchive_skipShelf_completionHandler___block_invoke;
  v12[3] = &unk_1E5623800;
  objc_copyWeak(&v15, &location);
  id v10 = v8;
  id v13 = v10;
  BOOL v16 = a4;
  id v11 = v9;
  id v14 = v11;
  [(CKChatController *)self setDeferredPresentationBlock:v12];

  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);
}

void __66__CKChatController_stageAssetArchive_skipShelf_completionHandler___block_invoke(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = [WeakRetained inputController];

  if (objc_opt_respondsToSelector())
  {
    [v4 stageAssetArchive:*(void *)(a1 + 32) skipShelf:*(unsigned __int8 *)(a1 + 56) completionHandler:*(void *)(a1 + 40)];
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = objc_loadWeakRetained(v2);
      int v7 = 138412546;
      id v8 = v6;
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Failed to dispatch to input controller %@ %@ -stageAssetArchive:skipShelf:completionHandler: as it doesn't implement that method!", (uint8_t *)&v7, 0x16u);
    }
  }
}

- (void)presentPhotosApp
{
  id v2 = [(CKCoreChatController *)self inputController];
  [v2 presentPluginWithBundleID:*MEMORY[0x1E4F6CC00] appLaunchPayload:0];
}

- (void)controller:(id)a3 didCompleteClassificationRequest:(id)a4 withResponse:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "didCompleteClassificationRequest -- di", buf, 2u);
    }
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __77__CKChatController_controller_didCompleteClassificationRequest_withResponse___block_invoke;
  v13[3] = &unk_1E5620AF8;
  id v14 = v8;
  id v15 = self;
  id v12 = v8;
  dispatch_async(MEMORY[0x1E4F14428], v13);
}

uint64_t __77__CKChatController_controller_didCompleteClassificationRequest_withResponse___block_invoke(uint64_t a1)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __77__CKChatController_controller_didCompleteClassificationRequest_withResponse___block_invoke_2;
  v3[3] = &unk_1E5620C40;
  id v1 = *(void **)(a1 + 32);
  void v3[4] = *(void *)(a1 + 40);
  return [v1 dismissViewControllerAnimated:1 completion:v3];
}

uint64_t __77__CKChatController_controller_didCompleteClassificationRequest_withResponse___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) becomeFirstResponder];
}

- (UIView)recipientsVirtualToolbarItem
{
  int v3 = [(CKChatController *)self macRecipientsController];
  id v4 = [v3 view];

  if (v4 && self->_recipientsVirtualToolbarItem != v4) {
    objc_storeStrong((id *)&self->_recipientsVirtualToolbarItem, v4);
  }
  id v5 = self->_recipientsVirtualToolbarItem;

  return v5;
}

- (void)dismissBusinessOnboardingIfShowing
{
  if ([(CKChatController *)self isShowingBusinessOnboarding])
  {
    [(CKChatController *)self dismissViewControllerAnimated:0 completion:0];
  }
}

- (void)dismissTipIfPresented
{
  id v2 = [(CKChatController *)self tipManager];
  [v2 dismissTipIfPresented];
}

- (BOOL)isShowingBusinessOnboarding
{
  id v2 = [(CKChatController *)self presentedViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

- (BOOL)isTesting
{
  return (IMIsRunningInUnitTesting() & 1) != 0
      || [(CKChatController *)self _isRunningPPT]
      || CKRegistrationBypassEnabled() != 0;
}

- (void)inputController:(id)a3 willDismissPresentationController:(id)a4
{
  [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:0];
  if (![(CKChatController *)self isAnimatingStickerReaction])
  {
    [(CKChatController *)self setIgnoresAutomaticScrollsTowardBottom:0];
  }
}

- (void)_dismissFullScreenBubbleViewControllerAnimated:(BOOL)a3 withSendAnimation:(BOOL)a4 completion:(id)a5
{
  BOOL v5 = a4;
  BOOL v6 = a3;
  id v11 = a5;
  id v8 = [(CKCoreChatController *)self fullScreenBalloonViewController];
  id v9 = [v8 displayConfiguration];
  uint64_t v10 = [v9 shouldDismissAppCardOnExit];

  [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:v6 withSendAnimation:v5 dismissAppCard:v10 completion:v11];
}

- (void)_dismissFullScreenBubbleViewControllerAnimated:(BOOL)a3 withSendAnimation:(BOOL)a4 dismissAppCard:(BOOL)a5 completion:(id)a6
{
  BOOL v6 = a5;
  BOOL v7 = a4;
  BOOL v8 = a3;
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v10 = a6;
  id v11 = [(CKCoreChatController *)self fullScreenBalloonViewController];

  if (v11)
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __111__CKChatController__dismissFullScreenBubbleViewControllerAnimated_withSendAnimation_dismissAppCard_completion___block_invoke;
    aBlock[3] = &unk_1E5623828;
    void aBlock[4] = self;
    id v22 = v10;
    id v12 = _Block_copy(aBlock);
    if (![(CKCoreChatController *)self isInline])
    {
      id v13 = [(CKChatController *)self navbarCanvasViewController];
      [v13 setNavBarContext:0];

      id v14 = (void *)MEMORY[0x1E4F42FF0];
      id v15 = +[CKUIBehavior sharedBehaviors];
      [v15 replyTranscriptBackgroundBlurAnimationTime];
      v20[0] = MEMORY[0x1E4F143A8];
      v20[1] = 3221225472;
      void v20[2] = __111__CKChatController__dismissFullScreenBubbleViewControllerAnimated_withSendAnimation_dismissAppCard_completion___block_invoke_2;
      v20[3] = &unk_1E5620C40;
      v20[4] = self;
      objc_msgSend(v14, "animateWithDuration:animations:", v20);
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      BOOL v16 = [(CKCoreChatController *)self inputController];
      [v16 showKeyboard];
    }
    else if ([(CKChatController *)self entryViewWasActiveOnContextMenuPresentation])
    {
      [(CKChatController *)self showKeyboard];
    }
    else if (v6)
    {
      int v18 = [(CKCoreChatController *)self inputController];
      [v18 dismissAppCardIfNecessaryAnimated:1 completion:0];
    }
    v19.receiver = self;
    v19.super_class = (Class)CKChatController;
    [(CKCoreChatController *)&v19 _dismissFullScreenBubbleViewControllerAnimated:v8 withSendAnimation:v7 completion:v12];
  }
  else if (IMOSLoggingEnabled())
  {
    double v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 136315138;
      id v24 = "-[CKChatController _dismissFullScreenBubbleViewControllerAnimated:withSendAnimation:dismissAppCard:completion:]";
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "[%s] called but fullScreenBalloonViewController is nil", buf, 0xCu);
    }
  }
}

void __111__CKChatController__dismissFullScreenBubbleViewControllerAnimated_withSendAnimation_dismissAppCard_completion___block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  if (CKIsRunningInMacCatalyst())
  {
    id v4 = [*(id *)(a1 + 32) entryView];
    int v3 = [v4 contentView];
    [v3 makeActive];
  }
}

void __111__CKChatController__dismissFullScreenBubbleViewControllerAnimated_withSendAnimation_dismissAppCard_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) navbarCanvasViewController];
  int v3 = [v2 backButtonView];
  [v3 setAlpha:1.0];

  id v5 = [*(id *)(a1 + 32) navbarCanvasViewController];
  id v4 = [v5 unifiedCallButton];
  [v4 setAlpha:1.0];
}

- (BOOL)_isRunningInMacCatalyst
{
  return CKIsRunningInMacCatalyst() != 0;
}

- (BOOL)_wantsThreeColumnLayout
{
  uint64_t v2 = +[CKUIBehavior sharedBehaviors];
  char v3 = [v2 wantsUniversalThreeColumn];

  return v3;
}

- (void)registerForTextinputPayloadHandlingForCheckInForConversation:(id)a3
{
  id v13 = a3;
  id v4 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v5 = [v4 isZelkovaEnabled];

  if (v5)
  {
    BOOL v6 = [v13 chat];
    char v7 = [v6 isGroupChat];

    if ((v7 & 1) == 0)
    {
      BOOL v8 = [v13 senderIdentifier];
      id v9 = [v13 recipients];
      id v10 = [v9 firstObject];

      if (v10)
      {
        id v11 = [v10 rawAddress];
      }
      else
      {
        id v11 = 0;
      }
      id v12 = [(CKCoreChatController *)self inputController];
      [v12 registerForTextInputPayloadHandlingForSenderHandleID:v8 receiverHandleID:v11];
    }
  }
}

- (void)learnMoreButtonTapped
{
  id v8 = [(id)*MEMORY[0x1E4F6CBE8] stringByAppendingFormat:@":%@:%@", @"0000000000", *MEMORY[0x1E4F6CB28]];
  char v3 = [MEMORY[0x1E4F6E940] sharedCoordinator];
  id v4 = [v3 appPayloadID];

  int v5 = [MEMORY[0x1E4F6E940] sharedCoordinator];
  BOOL v6 = [v5 appPayload];

  char v7 = [(CKCoreChatController *)self inputController];
  [v7 handleTextInputPayload:v6 withPayloadID:v4 forPlugin:v8];
}

- (void)didRequestSendResponseForAction:(id)a3
{
  id v4 = (objc_class *)MEMORY[0x1E4F6BD18];
  id v5 = a3;
  id v6 = [v4 alloc];
  char v7 = [MEMORY[0x1E4F1C9C8] date];
  id v8 = [v5 suggestedActionBody];

  id v9 = [NSString stringGUID];
  id v11 = (void *)[v6 initWithSender:0 time:v7 text:v8 messageSubject:0 fileTransferGUIDs:0 flags:5 error:0 guid:v9 subject:0 balloonBundleID:0 payloadData:0 expressiveSendStyleID:0 threadIdentifier:0 scheduleType:0 scheduleState:0];

  id v10 = [(CKCoreChatController *)self chat];
  [v10 sendMessage:v11];
}

- (void)didRequestLocationPush:(BOOL)a3
{
  id v3 = [(CKCoreChatController *)self inputController];
  [v3 showLocationPlugin];
}

- (void)didRequestComposeText:(id)a3 text:(id)a4
{
  v22[1] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  char v7 = (objc_class *)MEMORY[0x1E4F28B18];
  id v8 = a4;
  id v9 = (void *)[[v7 alloc] initWithString:v8];

  id v10 = [[CKComposition alloc] initWithText:v9 subject:0];
  id v11 = [(CKCoreChatController *)self chat];
  id v12 = [v11 participants];
  if ([v12 count] != 1)
  {

    goto LABEL_5;
  }
  [(CKCoreChatController *)self chat];
  id v21 = v9;
  id v14 = v13 = v6;
  id v15 = [v14 participants];
  BOOL v16 = [v15 firstObject];
  double v17 = [v16 ID];
  int v18 = [v17 isEqualToString:v13];

  id v6 = v13;
  id v9 = v21;

  if (!v18)
  {
LABEL_5:
    objc_super v19 = [(CKCoreChatController *)self delegate];
    v22[0] = v6;
    char v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
    [v19 chatController:self shouldComposeConversationWithRecipientAddresses:v20 composition:v10];

    goto LABEL_6;
  }
  [(CKChatController *)self setComposition:v10];
LABEL_6:
}

- (void)didRequestComposeAudio:(id)a3
{
  v16[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self chat];
  id v6 = [v5 participants];
  if ([v6 count] != 1)
  {

    goto LABEL_5;
  }
  char v7 = [(CKCoreChatController *)self chat];
  id v8 = [v7 participants];
  id v9 = [v8 firstObject];
  id v10 = [v9 ID];
  int v11 = [v10 isEqualToString:v4];

  if (!v11)
  {
LABEL_5:
    id v14 = [(CKCoreChatController *)self delegate];
    v16[0] = v4;
    id v15 = [MEMORY[0x1E4F1C978] arrayWithObjects:v16 count:1];
    [v14 chatController:self shouldComposeAudioMessageWithRecipientAddresses:v15];

    goto LABEL_6;
  }
  id v12 = [(CKCoreChatController *)self inputController];
  id v13 = [v12 entryView];
  [v13 startRecordingForAudioButtonInEntryView];

LABEL_6:
}

- (void)didRequestComposeVideo:(id)a3
{
  v15[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self chat];
  id v6 = [v5 participants];
  if ([v6 count] != 1)
  {

    goto LABEL_5;
  }
  char v7 = [(CKCoreChatController *)self chat];
  id v8 = [v7 participants];
  id v9 = [v8 firstObject];
  id v10 = [v9 ID];
  int v11 = [v10 isEqualToString:v4];

  if (!v11)
  {
LABEL_5:
    id v13 = [(CKCoreChatController *)self delegate];
    v15[0] = v4;
    id v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v15 count:1];
    [v13 chatController:self shouldComposeVideoMessageWithRecipientAddresses:v14];

    goto LABEL_6;
  }
  id v12 = [(CKCoreChatController *)self inputController];
  [v12 showFunCamera];

LABEL_6:
}

- (void)didRequestCreateCalendarEvent:(id)a3
{
  if (a3)
  {
    id v4 = a3;
    [v4 setEditViewDelegate:self];
    [(CKChatController *)self presentViewController:v4 animated:1 completion:0];
  }
}

- (void)didRequestOpenWebView:(id)a3
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = (void *)MEMORY[0x1E4F1CB10];
  id v6 = [v4 url];
  char v7 = [v5 URLWithString:v6];

  if (!v7) {
    goto LABEL_18;
  }
  id v8 = [v7 scheme];
  if ([v8 isEqualToString:@"http"])
  {

LABEL_5:
    gotLoadHelper_x8__OBJC_CLASS___SFSafariViewController(v9);
    id v13 = (void *)[objc_alloc(*(Class *)(v12 + 3768)) initWithURL:v7];
    [v13 setDelegate:self];
    [v13 setModalPresentationStyle:2];
    id v14 = [v13 sheetPresentationController];
    id v15 = [(CKChatController *)self view];
    [v15 bounds];
    uint64_t v17 = v16;

    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    void v28[2] = __42__CKChatController_didRequestOpenWebView___block_invoke;
    v28[3] = &__block_descriptor_40_e64_d16__0___UISheetPresentationControllerDetentResolutionContext__8l;
    void v28[4] = v17;
    int v18 = [MEMORY[0x1E4F42DE8] customDetentWithIdentifier:@"OpenWebViewControllerFullDetent" resolver:v28];
    v27[0] = MEMORY[0x1E4F143A8];
    v27[1] = 3221225472;
    void v27[2] = __42__CKChatController_didRequestOpenWebView___block_invoke_2;
    v27[3] = &__block_descriptor_40_e64_d16__0___UISheetPresentationControllerDetentResolutionContext__8l;
    v27[4] = v17;
    objc_super v19 = [MEMORY[0x1E4F42DE8] customDetentWithIdentifier:@"OpenWebViewControllerTallDetent" resolver:v27];
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    void v26[2] = __42__CKChatController_didRequestOpenWebView___block_invoke_3;
    _OWORD v26[3] = &__block_descriptor_40_e64_d16__0___UISheetPresentationControllerDetentResolutionContext__8l;
    void v26[4] = v17;
    char v20 = [MEMORY[0x1E4F42DE8] customDetentWithIdentifier:@"OpenWebViewControllerHalfDetent" resolver:v26];
    uint64_t v21 = [v4 mode];
    if (v21 == 2)
    {
      v31[0] = v19;
      v31[1] = v18;
      uint64_t v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:v31 count:2];
    }
    else if (v21 == 1)
    {
      v30[0] = v20;
      v30[1] = v18;
      uint64_t v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:v30 count:2];
    }
    else
    {
      if (v21)
      {
        uint64_t v29 = v18;
        [MEMORY[0x1E4F1C978] arrayWithObjects:&v29 count:1];
      }
      else
      {
        double v32 = v18;
        [MEMORY[0x1E4F1C978] arrayWithObjects:&v32 count:1];
      uint64_t v22 = };
    }
    uint64_t v25 = (void *)v22;
    [v14 setPrefersGrabberVisible:0];
    [v14 setDetents:v25];
    [(CKChatController *)self presentViewController:v13 animated:1 completion:0];
    [(CKChatController *)self setIsWebViewVisible:1];

    goto LABEL_18;
  }
  id v10 = [v7 scheme];
  char v11 = [v10 isEqualToString:@"https"];

  if (v11) {
    goto LABEL_5;
  }
  if (IMOSLoggingEnabled())
  {
    double v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      id v24 = [v7 scheme];
      *(_DWORD *)long long buf = 136315394;
      long long v34 = "-[CKChatController didRequestOpenWebView:]";
      __int16 v35 = 2112;
      double v36 = v24;
      _os_log_impl(&dword_18EF18000, v23, OS_LOG_TYPE_INFO, "[%s] called with an invalid URL scheme: %@", buf, 0x16u);
    }
  }
LABEL_18:
}

double __42__CKChatController_didRequestOpenWebView___block_invoke(uint64_t a1)
{
  return *(double *)(a1 + 32);
}

double __42__CKChatController_didRequestOpenWebView___block_invoke_2(uint64_t a1)
{
  return *(double *)(a1 + 32) * 0.75;
}

double __42__CKChatController_didRequestOpenWebView___block_invoke_3(uint64_t a1)
{
  return *(double *)(a1 + 32) * 0.5;
}

- (void)didRequestSendDeviceDetails
{
  id v18 = (id)MGCopyAnswer();
  id v3 = NSString;
  id v4 = [MEMORY[0x1E4F42948] currentDevice];
  id v5 = [v4 systemName];
  id v6 = [MEMORY[0x1E4F42948] currentDevice];
  char v7 = [v6 systemVersion];
  id v8 = [v3 stringWithFormat:@"%@ %@", v5, v7];

  double v9 = NSString;
  id v10 = [MEMORY[0x1E4F42948] currentDevice];
  char v11 = [v10 systemVersion];
  uint64_t v12 = [v9 stringWithFormat:@"Apple Messages %@", v11];

  id v13 = [NSString stringWithFormat:@"%@\n%@", v8, v12];
  id v14 = +[CKSuggestedActionsHandler pluginPayloadForShelfCardWithTitle:v18 summary:v13 userInfo:&unk_1EDF17988];
  id v15 = [[CKComposition alloc] initWithText:0 subject:0 shelfPluginPayload:v14];
  uint64_t v16 = [(CKChatController *)self composition];
  uint64_t v17 = [v16 compositionByAppendingComposition:v15];
  [(CKChatController *)self setComposition:v17];
}

- (void)didRequestSettings
{
}

- (void)safariViewControllerDidFinish:(id)a3
{
}

- (void)eventEditViewController:(id)a3 didCompleteWithAction:(int64_t)a4
{
}

- (void)setSendingCompositionBackgroundTask:(unint64_t)a3
{
  unint64_t sendingCompositionBackgroundTask = self->_sendingCompositionBackgroundTask;
  id v6 = [MEMORY[0x1E4F42738] sharedApplication];
  [v6 endBackgroundTask:sendingCompositionBackgroundTask];

  self->_unint64_t sendingCompositionBackgroundTask = a3;
}

- (void)mentionsControllerDidFinishAnimation:(id)a3
{
  id v4 = objc_msgSend(MEMORY[0x1E4F6E778], "sharedFeatureFlags", a3);
  int v5 = [v4 isModernMentionsAndEmojiAnimationsEnabled];

  if (v5)
  {
    id v9 = [(CKChatController *)self entryView];
    id v6 = [v9 contentView];
    char v7 = [v6 textView];
    id v8 = [v7 textStorage];
    objc_msgSend(v8, "ck_addDisplayableAttributeForIMTextEffectAttribute");

    [v9 setTextEffectCoordinatorPaused:0 reason:@"resuming because mentions controller did finish animation."];
  }
}

- (CKChatControllerSendMenuDelegate)sendMenuDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_sendMenuDelegate);

  return (CKChatControllerSendMenuDelegate *)WeakRetained;
}

- (void)setSendMenuDelegate:(id)a3
{
}

- (CKMentionsController)mentionsController
{
  return self->_mentionsController;
}

- (void)setMentionsController:(id)a3
{
}

- (CKExternalPluginViewControllerProvider)externalPluginControllerProvider
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_externalPluginControllerProvider);

  return (CKExternalPluginViewControllerProvider *)WeakRetained;
}

- (void)setExternalPluginControllerProvider:(id)a3
{
}

- (BOOL)isAnimatingMessageSend
{
  return self->_isAnimatingMessageSend;
}

- (void)setIsAnimatingMessageSend:(BOOL)a3
{
  self->_isAnimatingMessageSend = a3;
}

- (BOOL)isDeferringSystemNavigationPopGestureForPlusButton
{
  return self->_deferSystemNavigationPopGestureForPlusButton;
}

- (void)setDeferSystemNavigationPopGestureForPlusButton:(BOOL)a3
{
  self->_deferSystemNavigationPopGestureForPlusButton = a3;
}

- (BOOL)shouldShowDoneButton
{
  return self->_shouldShowDoneButton;
}

- (void)setShouldShowDoneButton:(BOOL)a3
{
  self->_shouldShowDoneButton = a3;
}

- (BOOL)wasKeyboardShowingWithApp
{
  return self->_wasKeyboardShowingWithApp;
}

- (void)setWasKeyboardShowingWithApp:(BOOL)a3
{
  self->_wasKeyboardShowingWithApp = a3;
}

- (BOOL)recipientsAreHEIFCapable
{
  return self->_recipientsAreHEIFCapable;
}

- (void)setRecipientsAreHEIFCapable:(BOOL)a3
{
  self->_recipientsAreHEIFCapable = a3;
}

- (BOOL)isSettingUpCollaboration
{
  return self->_isSettingUpCollaboration;
}

- (void)setIsSettingUpCollaboration:(BOOL)a3
{
  self->_isSettingUpCollaboration = a3;
}

- (NSString)messageGUIDForTranscriptExtension
{
  return self->_messageGUIDForTranscriptExtension;
}

- (void)setMessageGUIDForTranscriptExtension:(id)a3
{
}

- (int64_t)collaborationFailureCount
{
  return self->_collaborationFailureCount;
}

- (void)setCollaborationFailureCount:(int64_t)a3
{
  self->_collaborationFailureCount = a3;
}

- (IMTimingCollection)timingCollectionSendGelato
{
  return self->_timingCollectionSendGelato;
}

- (void)setTimingCollectionSendGelato:(id)a3
{
}

- (CKDetailsContactsManager)detailsContactsManager
{
  return self->_detailsContactsManager;
}

- (void)setDetailsContactsManager:(id)a3
{
}

- (CKMediaObject)mediaObjectToDownload
{
  return self->_mediaObjectToDownload;
}

- (void)setMediaObjectToDownload:(id)a3
{
}

- (SCUIInterventionViewController)commSafetyInterventionController
{
  return self->_commSafetyInterventionController;
}

- (void)setCommSafetyInterventionController:(id)a3
{
}

- (BOOL)isEntryViewResizeAnimationRunning
{
  return self->_entryViewResizeAnimationRunning;
}

- (void)setEntryViewResizeAnimationRunning:(BOOL)a3
{
  self->_entryViewResizeAnimationRunning = a3;
}

- (BOOL)isTransitioningSize
{
  return self->_transitioningSize;
}

- (void)setTransitioningSize:(BOOL)a3
{
  self->_transitioningSize = a3;
}

- (CGSize)lastLaidOutSize
{
  double width = self->_lastLaidOutSize.width;
  double height = self->_lastLaidOutSize.height;
  result.double height = height;
  result.double width = width;
  return result;
}

- (void)setLastLaidOutSize:(CGSize)a3
{
  self->_lastLaidOutSize = a3;
}

- (BOOL)needToEnforceScrollIntent
{
  return self->_needToEnforceScrollIntent;
}

- (void)setNeedToEnforceScrollIntent:(BOOL)a3
{
  self->_needToEnforceScrollIntent = a3;
}

- (int64_t)lastKnownDeviceOrientation
{
  return self->_lastKnownDeviceOrientation;
}

- (void)setLastKnownDeviceOrientation:(int64_t)a3
{
  self->_lastKnownDeviceOrientation = a3;
}

- (NSNumber)transcriptBottomContentOffsetAtSuspend
{
  return self->_transcriptBottomContentOffsetAtSuspend;
}

- (void)setTranscriptBottomContentOffsetAtSuspend:(id)a3
{
}

- (BOOL)firstLayoutAfterResume
{
  return self->_firstLayoutAfterResume;
}

- (void)setFirstLayoutAfterResume:(BOOL)a3
{
  self->_firstLayoutAfterResume = a3;
}

- (double)keyboardHeightFromPreviousLayout
{
  return self->_keyboardHeightFromPreviousLayout;
}

- (void)setKeyboardHeightFromPreviousLayout:(double)a3
{
  self->_double keyboardHeightFromPreviousLayout = a3;
}

- (double)entryViewMaxYFromPreviousLayout
{
  return self->_entryViewMaxYFromPreviousLayout;
}

- (void)setEntryViewMaxYFromPreviousLayout:(double)a3
{
  self->_double entryViewMaxYFromPreviousLayout = a3;
}

- (int64_t)targetFirstResponder
{
  return self->_targetFirstResponder;
}

- (BOOL)entryViewShouldBecomeTargetFirstResponderForPendingDraft
{
  return self->_entryViewShouldBecomeTargetFirstResponderForPendingDraft;
}

- (void)setEntryViewShouldBecomeTargetFirstResponderForPendingDraft:(BOOL)a3
{
  self->_entryViewShouldBecomeTargetFirstResponderForPendingDraft = a3;
}

- (CKMessageEntryViewController)entryViewController
{
  return self->_entryViewController;
}

- (void)setEntryViewController:(id)a3
{
}

- (BOOL)suppressEntryViewKeyboardNotifications
{
  return self->_suppressEntryViewKeyboardNotifications;
}

- (void)setSuppressEntryViewKeyboardNotifications:(BOOL)a3
{
  self->_suppressEntryViewKeyboardNotifications = a3;
}

- (CKMessageEntryViewContainerView)entryViewContainerView
{
  return self->_entryViewContainerView;
}

- (void)setEntryViewContainerView:(id)a3
{
}

- (CKMessageEntryBackgroundViewProtocol)keyboardCandidateBarBackgroundView
{
  return self->_keyboardCandidateBarBackgroundView;
}

- (void)setKeyboardCandidateBarBackgroundView:(id)a3
{
}

- (IMScheduledUpdater)autorotationUpdater
{
  return self->_autorotationUpdater;
}

- (void)setAutorotationUpdater:(id)a3
{
}

- (CKScheduledUpdater)typingUpdater
{
  return self->_typingUpdater;
}

- (void)setTypingUpdater:(id)a3
{
}

- (CKNavbarCanvasViewController)navbarCanvasViewController
{
  return self->_navbarCanvasViewController;
}

- (void)setNavbarCanvasViewController:(id)a3
{
}

- (UIViewController)footerViewController
{
  return self->_footerViewController;
}

- (void)setFooterViewController:(id)a3
{
}

- (SGFoundInSuggestionPresenter)foundInSuggestionPresenter
{
  return self->_foundInSuggestionPresenter;
}

- (void)setFoundInSuggestionPresenter:(id)a3
{
}

- (SGSuggestionPresenter)standardSuggestionPresenter
{
  return self->_standardSuggestionPresenter;
}

- (void)setStandardSuggestionPresenter:(id)a3
{
}

- (double)suggestionBannerHeight
{
  return self->_suggestionBannerHeight;
}

- (void)setSuggestionBannerHeight:(double)a3
{
  self->_suggestionBannerdouble Height = a3;
}

- (NSLayoutConstraint)suggestionBannerTopConstraint
{
  return self->_suggestionBannerTopConstraint;
}

- (void)setSuggestionBannerTopConstraint:(id)a3
{
}

- (SGBannerProtocol)suggestionBannerView
{
  return self->_suggestionBannerView;
}

- (void)setSuggestionBannerView:(id)a3
{
}

- (BOOL)didDisplayFirstUnreadMessage
{
  return self->_didDisplayFirstUnreadMessage;
}

- (void)setDidDisplayFirstUnreadMessage:(BOOL)a3
{
  self->_didDisplayFirstUnreadMessage = a3;
}

- (BOOL)didComputeInitiallyVisibleIndexPaths
{
  return self->_didComputeInitiallyVisibleIndexPaths;
}

- (void)setDidComputeInitiallyVisibleIndexPaths:(BOOL)a3
{
  self->_didComputeInitiallyVisibleIndexPaths = a3;
}

- (BOOL)isCatchUpButtonNeededOnFirstLoad
{
  return self->_isCatchUpButtonNeededOnFirstLoad;
}

- (void)setIsCatchUpButtonNeededOnFirstLoad:(BOOL)a3
{
  self->_isCatchUpButtonNeededOnFirstLoad = a3;
}

- (double)firstUnreadMessageCellOriginY
{
  return self->_firstUnreadMessageCellOriginY;
}

- (void)setFirstUnreadMessageCellOriginY:(double)a3
{
  self->_firstUnreadMessageCellOriginY = a3;
}

- (NSString)firstUnreadMessageGUID
{
  return self->_firstUnreadMessageGUID;
}

- (void)setFirstUnreadMessageGUID:(id)a3
{
}

- (NSString)firstUnreadMessageGUIDForTextEffects
{
  return self->_firstUnreadMessageGUIDForTextEffects;
}

- (void)setFirstUnreadMessageGUIDForTextEffects:(id)a3
{
}

- (UIView)catchUpButton
{
  return self->_catchUpButton;
}

- (void)setCatchUpButton:(id)a3
{
}

- (_TtC7ChatKit22CKCatchUpButtonManager)catchUpButtonManager
{
  return self->_catchUpButtonManager;
}

- (void)setCatchUpButtonManager:(id)a3
{
}

- (NSLayoutConstraint)catchUpButtonTopConstraint
{
  return self->_catchUpButtonTopConstraint;
}

- (void)setCatchUpButtonTopConstraint:(id)a3
{
}

- (CGPoint)contentOffsetForFirstUnreadMessage
{
  double x = self->_contentOffsetForFirstUnreadMessage.x;
  double y = self->_contentOffsetForFirstUnreadMessage.y;
  result.double y = y;
  result.double x = x;
  return result;
}

- (void)setContentOffsetForFirstUnreadMessage:(CGPoint)a3
{
  self->_contentOffsetForFirstUnreadMessage = a3;
}

- (NSIndexPath)indexPathForFirstUnreadMessage
{
  return self->_indexPathForFirstUnreadMessage;
}

- (void)setIndexPathForFirstUnreadMessage:(id)a3
{
}

- (id)scrollBlock
{
  return self->_scrollBlock;
}

- (void)setScrollBlock:(id)a3
{
}

- (BOOL)viewDidMoveToWindowAndNeedsToScrollToInsertionTime
{
  return self->_viewDidMoveToWindowAndNeedsToScrollToInsertionTime;
}

- (void)setViewDidMoveToWindowAndNeedsToScrollToInsertionTime:(BOOL)a3
{
  self->_viewDidMoveToWindowAndNeedsToScrollToInsertionTime = a3;
}

- (BOOL)entryViewWasActiveBeforePresentingDataDetector
{
  return self->_entryViewWasActiveBeforePresentingDataDetector;
}

- (void)setEntryViewWasActiveBeforePresentingDataDetector:(BOOL)a3
{
  self->_entryViewWasActiveBeforePresentingDataDetector = a3;
}

- (BOOL)nextEntryViewSafeAreaInsetUpdateIsSynchronous
{
  return self->_nextEntryViewSafeAreaInsetUpdateIsSynchronous;
}

- (void)setNextEntryViewSafeAreaInsetUpdateIsSynchronous:(BOOL)a3
{
  self->_nextEntryViewSafeAreaInsetUpdateIsSynchronous = a3;
}

- (CKMacToolbarController)macToolbarController
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_macToolbarController);

  return (CKMacToolbarController *)WeakRetained;
}

- (void)setMacToolbarController:(id)a3
{
}

- (UIMenu)macFaceTimeButtonMenu
{
  return self->_macFaceTimeButtonMenu;
}

- (void)setMacFaceTimeButtonMenu:(id)a3
{
}

- (CKMacMenuToolbarItem)macFaceTimeStartCallToolbarItem
{
  return self->_macFaceTimeStartCallToolbarItem;
}

- (void)setMacFaceTimeStartCallToolbarItem:(id)a3
{
}

- (CKMacToolbarItem)macFaceTimeJoinedCallToolbarItem
{
  return self->_macFaceTimeJoinedCallToolbarItem;
}

- (void)setMacFaceTimeJoinedCallToolbarItem:(id)a3
{
}

- (CKMacToolbarItem)macFaceTimeJoinCallToolbarItem
{
  return self->_macFaceTimeJoinCallToolbarItem;
}

- (void)setMacFaceTimeJoinCallToolbarItem:(id)a3
{
}

- (CKMacBarButtonToolbarItem)detailsToolbarItem
{
  return self->_detailsToolbarItem;
}

- (void)setDetailsToolbarItem:(id)a3
{
}

- (void)setRecipientsVirtualToolbarItem:(id)a3
{
}

- (CKMacToolBarImageProperties)macToolbarFaceTimeButtonProps
{
  return self->_macToolbarFaceTimeButtonProps;
}

- (void)setMacToolbarFaceTimeButtonProps:(id)a3
{
}

- (CKMacToolBarImageProperties)macToolbarDetailsButtonProps
{
  return self->_macToolbarDetailsButtonProps;
}

- (void)setMacToolbarDetailsButtonProps:(id)a3
{
}

- (int64_t)macJoinStyle
{
  return self->_macJoinStyle;
}

- (void)setMacJoinStyle:(int64_t)a3
{
  self->_macJoinStyle = a3;
}

- (NSLayoutConstraint)entryViewFauxKeyboardLayoutConstraint
{
  return self->_entryViewFauxKeyboardLayoutConstraint;
}

- (NSLayoutConstraint)entryViewKeyboardLayoutConstraint
{
  return self->_entryViewKeyboardLayoutConstraint;
}

- (NSLayoutConstraint)entryViewKeyboardSnapshotLayoutConstraint
{
  return self->_entryViewKeyboardSnapshotLayoutConstraint;
}

- (NSLayoutConstraint)entryViewAppCardLayoutConstraint
{
  return self->_entryViewAppCardLayoutConstraint;
}

- (NSLayoutConstraint)entryViewLeadingLayoutConstraint
{
  return self->_entryViewLeadingLayoutConstraint;
}

- (NSLayoutConstraint)entryViewTrailingLayoutConstraint
{
  return self->_entryViewTrailingLayoutConstraint;
}

- (UIViewController)appCardBackgroundViewController
{
  return self->_appCardBackgroundViewController;
}

- (void)setAppCardBackgroundViewController:(id)a3
{
}

- (NSArray)appCardBackgroundViewConstraints
{
  return self->_appCardBackgroundViewConstraints;
}

- (void)setAppCardBackgroundViewConstraints:(id)a3
{
}

- (BOOL)primeTranscriptWithInitialScrollGeometries
{
  return self->_primeTranscriptWithInitialScrollGeometries;
}

- (void)setPrimeTranscriptWithInitialScrollGeometries:(BOOL)a3
{
  self->_primeTranscriptWithInitialScrollGeometries = a3;
}

- (CGPoint)initialContentOffset
{
  double x = self->_initialContentOffset.x;
  double y = self->_initialContentOffset.y;
  result.double y = y;
  result.double x = x;
  return result;
}

- (void)setInitialContentOffset:(CGPoint)a3
{
  self->_initialContentOffset = a3;
}

- (UIEdgeInsets)initialContentInset
{
  double top = self->_initialContentInset.top;
  double left = self->_initialContentInset.left;
  double bottom = self->_initialContentInset.bottom;
  double right = self->_initialContentInset.right;
  result.double right = right;
  result.double bottom = bottom;
  result.double left = left;
  result.double top = top;
  return result;
}

- (void)setInitialContentInset:(UIEdgeInsets)a3
{
  self->_initialContentInset = a3;
}

- (CKComposition)initialComposition
{
  return self->_initialComposition;
}

- (void)setInitialComposition:(id)a3
{
}

- (BOOL)shouldDisableEntryView
{
  return self->_shouldDisableEntryView;
}

- (void)setShouldDisableEntryView:(BOOL)a3
{
  self->_shouldDisableEntryView = a3;
}

- (BOOL)shouldUpdateEntryViewPasteConfiguration
{
  return self->_shouldUpdateEntryViewPasteConfiguration;
}

- (void)setShouldUpdateEntryViewPasteConfiguration:(BOOL)a3
{
  self->_shouldUpdateEntryViewPasteConfiguration = a3;
}

- (CKRaiseGesture)raiseGesture
{
  return self->_raiseGesture;
}

- (void)setRaiseGesture:(id)a3
{
}

- (BOOL)hasFinishedRestoringDraftState
{
  return self->_hasFinishedRestoringDraftState;
}

- (void)setHasFinishedRestoringDraftState:(BOOL)a3
{
  self->_hasFinishedRestoringDraftState = a3;
}

- (BOOL)needsDarkEffectStyleCleanUp
{
  return self->_needsDarkEffectStyleCleanUp;
}

- (void)setNeedsDarkEffectStyleCleanUp:(BOOL)a3
{
  self->_needsDarkEffectStyleCleanUp = a3;
}

- (UIView)loadingIndicatorCoverView
{
  return self->_loadingIndicatorCoverView;
}

- (void)setLoadingIndicatorCoverView:(id)a3
{
}

- (CKComposition)compositionBeingTrimmed
{
  return self->_compositionBeingTrimmed;
}

- (void)setCompositionBeingTrimmed:(id)a3
{
}

- (CKAudioTrimViewController)audioTrimController
{
  return self->_audioTrimController;
}

- (void)setAudioTrimController:(id)a3
{
}

- (CKVideoTrimController)videoTrimController
{
  return self->_videoTrimController;
}

- (void)setVideoTrimController:(id)a3
{
}

- (IMPluginPayload)extensionPayloadBeingSent
{
  return self->_extensionPayloadBeingSent;
}

- (void)setExtensionPayloadBeingSent:(id)a3
{
}

- (CKThrowAnimationManager)throwAnimationManager
{
  return self->_throwAnimationManager;
}

- (void)setThrowAnimationManager:(id)a3
{
}

- (id)deferredSendAnimationBlock
{
  return self->_deferredSendAnimationBlock;
}

- (void)setDeferredSendAnimationBlock:(id)a3
{
}

- (UIImagePickerController)imagePickerController
{
  return self->_imagePickerController;
}

- (void)setImagePickerController:(id)a3
{
}

- (CKVideoMessageRecordingViewController)videoMessageRecordingViewController
{
  return self->_videoMessageRecordingViewController;
}

- (void)setVideoMessageRecordingViewController:(id)a3
{
}

- (BOOL)isShowingVideoMessageRecordingView
{
  return self->_showingVideoMessageRecordingView;
}

- (void)setShowingVideoMessageRecordingView:(BOOL)a3
{
  self->_showingVideoMessageRecordingView = a3;
}

- (UIViewController)collaborationPopoverController
{
  return self->_collaborationPopoverController;
}

- (void)setCollaborationPopoverController:(id)a3
{
}

- (CKQLPreviewControllerDataSource)qlPreviewDataSource
{
  return self->_qlPreviewDataSource;
}

- (void)setQlPreviewDataSource:(id)a3
{
}

- (CKQLPreviewController)previewController
{
  return self->_previewController;
}

- (void)setPreviewController:(id)a3
{
}

- (UIView)previewSourceView
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_previewSourceView);

  return (UIView *)WeakRetained;
}

- (void)setPreviewSourceView:(id)a3
{
}

- (BOOL)isShowingPreview
{
  return self->_isShowingPreview;
}

- (void)setIsShowingPreview:(BOOL)a3
{
  self->_isShowingPreview = a3;
}

- (BOOL)entryViewWasActiveOnPreview
{
  return self->_entryViewWasActiveOnPreview;
}

- (void)setEntryViewWasActiveOnPreview:(BOOL)a3
{
  self->_entryViewWasActiveOnPreview = a3;
}

- (BOOL)entryViewWasActiveOnContextMenuPresentation
{
  return self->_entryViewWasActiveOnContextMenuPresentation;
}

- (void)setEntryViewWasActiveOnContextMenuPresentation:(BOOL)a3
{
  self->_entryViewWasActiveOnContextMenuPresentation = a3;
}

- (CKInvisibleInkEffectController)previewInvisibleInkEffectController
{
  return self->_previewInvisibleInkEffectController;
}

- (void)setPreviewInvisibleInkEffectController:(id)a3
{
}

- (UIView)previewRevealView
{
  return self->_previewRevealView;
}

- (void)setPreviewRevealView:(id)a3
{
}

- (UITapGestureRecognizer)tapGestureRecognizer
{
  return self->_tapGestureRecognizer;
}

- (void)setTapGestureRecognizer:(id)a3
{
}

- (BOOL)isShowingEmojiKeyboard
{
  return self->_isShowingEmojiKeyboard;
}

- (void)setIsShowingEmojiKeyboard:(BOOL)a3
{
  self->_isShowingEmojiKeyboard = a3;
}

- (UIKeyboardInputMode)savedKeyboardInputMode
{
  return self->_savedKeyboardInputMode;
}

- (void)setSavedKeyboardInputMode:(id)a3
{
}

- (CKEffectPickerViewController)effectPickerViewController
{
  return (CKEffectPickerViewController *)self->_effectPickerViewController;
}

- (void)setEffectPickerViewController:(id)a3
{
}

- (UIWindow)effectPickerWindow
{
  return self->_effectPickerWindow;
}

- (void)setEffectPickerWindow:(id)a3
{
}

- (BOOL)effectPickerIsPresented
{
  return self->_effectPickerIsPresented;
}

- (int64_t)notificationBannerType
{
  return self->_notificationBannerType;
}

- (void)setNotificationBannerType:(int64_t)a3
{
  self->_notificationBannerType = a3;
}

- (UIView)notificationBannerView
{
  return self->_notificationBannerView;
}

- (void)setNotificationBannerView:(id)a3
{
}

- (CKScheduledUpdater)transcriptInlineNotificationUpdater
{
  return self->_transcriptInlineNotificationUpdater;
}

- (void)setTranscriptInlineNotificationUpdater:(id)a3
{
}

- (CADisplayLink)stickerTranscriptScrollDisplayLink
{
  return self->_stickerTranscriptScrollDisplayLink;
}

- (void)setStickerTranscriptScrollDisplayLink:(id)a3
{
}

- (double)stickerTranscriptScrollDelta
{
  return self->_stickerTranscriptScrollDelta;
}

- (void)setStickerTranscriptScrollDelta:(double)a3
{
  self->_double stickerTranscriptScrollDelta = a3;
}

- (BOOL)scrollDownIsValid
{
  return self->_scrollDownIsValid;
}

- (void)setScrollDownIsValid:(BOOL)a3
{
  self->_scrollDownIsValid = a3;
}

- (void)setRevealAnimationGroup:(id)a3
{
}

- (UIDragSession)dragSession
{
  return self->_dragSession;
}

- (void)setDragSession:(id)a3
{
}

- (UIDropSession)dropSession
{
  return self->_dropSession;
}

- (void)setDropSession:(id)a3
{
}

- (id)currentDragPreviewContainer
{
  id WeakRetained = objc_loadWeakRetained(&self->_currentDragPreviewContainer);

  return WeakRetained;
}

- (void)setCurrentDragPreviewContainer:(id)a3
{
}

- (CKFunCameraViewController)funCameraViewController
{
  return self->_funCameraViewController;
}

- (void)setFunCameraViewController:(id)a3
{
}

- (BOOL)isShowingCamera
{
  return self->_isShowingCamera;
}

- (void)setIsShowingCamera:(BOOL)a3
{
  self->_isShowingCamera = a3;
}

- (id)deferredPresentationBlock
{
  return self->_deferredPresentationBlock;
}

- (void)setDeferredPresentationBlock:(id)a3
{
}

- (CKNicknameBannerView)nicknameBanner
{
  return self->_nicknameBanner;
}

- (void)setNicknameBanner:(id)a3
{
}

- (UIViewController)nicknameUpdateController
{
  return self->_nicknameUpdateController;
}

- (void)setNicknameUpdateController:(id)a3
{
}

- (void)setContactPicker:(id)a3
{
}

- (CKNicknameUpdate)currentNicknameUpdate
{
  return self->_currentNicknameUpdate;
}

- (void)setCurrentNicknameUpdate:(id)a3
{
}

- (void)setOnboardingController:(id)a3
{
}

- (UIView)lockoutView
{
  return self->_lockoutView;
}

- (void)setLockoutView:(id)a3
{
}

- (UIView)keyboardSnapshotView
{
  return self->_keyboardSnapshotView;
}

- (void)setKeyboardSnapshotView:(id)a3
{
}

- (unint64_t)keyboardSnapshotReason
{
  return self->_keyboardSnapshotReason;
}

- (void)setKeyboardSnapshotReason:(unint64_t)a3
{
  self->_unint64_t keyboardSnapshotReason = a3;
}

- (NSArray)collaborationNoticeSuggestions
{
  return self->_collaborationNoticeSuggestions;
}

- (CKTranscriptSharingSuggestion)transcriptSharingBannerSuggestion
{
  return self->_transcriptSharingBannerSuggestion;
}

- (void)setTranscriptSharingBannerSuggestion:(id)a3
{
}

- (STConversationContext)conversationContext
{
  return self->_conversationContext;
}

- (void)setConversationContext:(id)a3
{
}

- (CKTapbackPickerContainerAccessoryView)pickerContainerAccessoryView
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_pickerContainerAccessoryView);

  return (CKTapbackPickerContainerAccessoryView *)WeakRetained;
}

- (int64_t)acknowledgmentToSend
{
  return self->_acknowledgmentToSend;
}

- (void)setAcknowledgmentToSend:(int64_t)a3
{
  self->_acknowledgmentToSend = a3;
}

- (BOOL)wantsStickerDetails
{
  return self->_wantsStickerDetails;
}

- (void)setWantsStickerDetails:(BOOL)a3
{
  self->_wantsStickerDetails = a3;
}

- (BOOL)wantsEmojiDetails
{
  return self->_wantsEmojiDetails;
}

- (void)setWantsEmojiDetails:(BOOL)a3
{
  self->_wantsEmojiDetails = a3;
}

- (BOOL)wantsInlineOverlay
{
  return self->_wantsInlineOverlay;
}

- (void)setWantsInlineOverlay:(BOOL)a3
{
  self->_wantsInlineOverladouble y = a3;
}

- (BOOL)dismissingContextMenu
{
  return self->_dismissingContextMenu;
}

- (void)setDismissingContextMenu:(BOOL)a3
{
  self->_dismissingContextMenu = a3;
}

- (BOOL)hasAlreadyPresentedSatelliteConnectionBanner
{
  return self->_hasAlreadyPresentedSatelliteConnectionBanner;
}

- (void)setHasAlreadyPresentedSatelliteConnectionBanner:(BOOL)a3
{
  self->_hasAlreadyPresentedSatelliteConnectionBanner = a3;
}

- (CKNavigationBarTitleController)navigationBarTitleController
{
  return self->_navigationBarTitleController;
}

- (void)setNavigationBarTitleController:(id)a3
{
}

- (UIViewController)walletOrderImportViewController
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_walletOrderImportViewController);

  return (UIViewController *)WeakRetained;
}

- (void)setWalletOrderImportViewController:(id)a3
{
}

- (CKMessageEditingViewController)messageEditingViewController
{
  return self->_messageEditingViewController;
}

- (void)setMessageEditingViewController:(id)a3
{
}

- (CKInlineReplyChatController)inlineReplyController
{
  return self->_inlineReplyController;
}

- (void)setInlineReplyController:(id)a3
{
}

- (BOOL)transcriptWasScrolledToBottomBeforeInlinePresentation
{
  return self->_transcriptWasScrolledToBottomBeforeInlinePresentation;
}

- (void)setTranscriptWasScrolledToBottomBeforeInlinePresentation:(BOOL)a3
{
  self->_transcriptWasScrolledToBottomBeforeInlinePresentation = a3;
}

- (CKGroupUpdateBannerView)groupPhotoUpdateBanner
{
  return self->_groupPhotoUpdateBanner;
}

- (void)setGroupPhotoUpdateBanner:(id)a3
{
}

- (CKMacRecipientsController)macRecipientsController
{
  return self->_macRecipientsController;
}

- (void)setMacRecipientsController:(id)a3
{
}

- (CKBusinessMacToolbarViewController)businessMacToolbarController
{
  return self->_businessMacToolbarController;
}

- (void)setBusinessMacToolbarController:(id)a3
{
}

- (NSString)lastPopulatedMessageGuidFromMe
{
  return self->_lastPopulatedMessageGuidFromMe;
}

- (void)setLastPopulatedMessageGuidFromMe:(id)a3
{
}

- (CKComposition)originalComposition
{
  return self->_originalComposition;
}

- (void)setOriginalComposition:(id)a3
{
}

- (NSString)shareSheetHostBundleIdentifier
{
  return self->_shareSheetHostBundleIdentifier;
}

- (void)setShareSheetHostBundleIdentifier:(id)a3
{
}

- (CGRect)photoGridTapbackSnapshotRect
{
  double x = self->_photoGridTapbackSnapshotRect.origin.x;
  double y = self->_photoGridTapbackSnapshotRect.origin.y;
  double width = self->_photoGridTapbackSnapshotRect.size.width;
  double height = self->_photoGridTapbackSnapshotRect.size.height;
  result.size.double height = height;
  result.size.double width = width;
  result.origin.double y = y;
  result.origin.double x = x;
  return result;
}

- (void)setPhotoGridTapbackSnapshotRect:(CGRect)a3
{
  self->_photoGridTapbackSnapshotRect = a3;
}

- (NSString)photoGridDisplayedChatItemGUID
{
  return self->_photoGridDisplayedChatItemGUID;
}

- (void)setPhotoGridDisplayedChatItemGUID:(id)a3
{
}

- (CKAggregateAttachmentMessagePartChatItem)photoGridMomentShareChatItem
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_photoGridMomentShareChatItem);

  return (CKAggregateAttachmentMessagePartChatItem *)WeakRetained;
}

- (void)setPhotoGridMomentShareChatItem:(id)a3
{
}

- (CKAttachmentMessagePartChatItem)photoGridClickyOrbChatItem
{
  return self->_photoGridClickyOrbChatItem;
}

- (void)setPhotoGridClickyOrbChatItem:(id)a3
{
}

- (CKMediaObjectAssetDataSourceManager)photoGridDataSourceManager
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_photoGridDataSourceManager);

  return (CKMediaObjectAssetDataSourceManager *)WeakRetained;
}

- (void)setPhotoGridDataSourceManager:(id)a3
{
}

- (int64_t)momentShareFetchGeneration
{
  return self->_momentShareFetchGeneration;
}

- (void)setMomentShareFetchGeneration:(int64_t)a3
{
  self->_momentShareFetchGeneration = a3;
}

- (BOOL)isTransitioningFromQLPreviewToGrid
{
  return self->_isTransitioningFromQLPreviewToGrid;
}

- (void)setIsTransitioningFromQLPreviewToGrid:(BOOL)a3
{
  self->_isTransitioningFromQLPreviewToGrid = a3;
}

- (_TtC7ChatKit16CKChatTipManager)tipManager
{
  return self->_tipManager;
}

- (void)setTipManager:(id)a3
{
}

- (BOOL)audioMessageWasPlayedAndIsLatestMessage
{
  return self->_audioMessageWasPlayedAndIsLatestMessage;
}

- (void)setAudioMessageWasPlayedAndIsLatestMessage:(BOOL)a3
{
  self->_audioMessageWasPlayedAndIsLatestMessage = a3;
}

- (CKRotationLockUtility)rotationLockUtility
{
  return self->_rotationLockUtility;
}

- (void)setRotationLockUtility:(id)a3
{
}

- (BOOL)shouldFetchCollaborationNotices
{
  return self->_shouldFetchCollaborationNotices;
}

- (void)setShouldFetchCollaborationNotices:(BOOL)a3
{
  self->_shouldFetchCollaborationNotices = a3;
}

- (NSMutableDictionary)activeDropPreviews
{
  return self->_activeDropPreviews;
}

- (void)setActiveDropPreviews:(id)a3
{
}

- (int64_t)initialFrameIndexForCurrentDrag
{
  return self->_initialFrameIndexForCurrentDrag;
}

- (void)setInitialFrameIndexForCurrentDrag:(int64_t)a3
{
  self->_initialFrameIndexForCurrentDrag = a3;
}

- (id)insertItemsCallback
{
  return self->_insertItemsCallback;
}

- (void)setInsertItemsCallback:(id)a3
{
}

- (CKBrowserDragManager)browserDragManager
{
  return self->_browserDragManager;
}

- (void)setBrowserDragManager:(id)a3
{
}

- (BOOL)isAnimatingStickerReaction
{
  return self->_animatingStickerReaction;
}

- (void)setAnimatingStickerReaction:(BOOL)a3
{
  self->_animatingStickerReaction = a3;
}

- (CKNavBarUnifiedCallButton)wolfFaceTimeButton
{
  return self->_wolfFaceTimeButton;
}

- (void)setWolfFaceTimeButton:(id)a3
{
}

- (_TtC7ChatKit25CKSuggestedActionsHandler)suggestedActionsHandler
{
  return self->_suggestedActionsHandler;
}

- (void)setSuggestedActionsHandler:(id)a3
{
}

- (BOOL)isWebViewVisible
{
  return self->_isWebViewVisible;
}

- (void)setIsWebViewVisible:(BOOL)a3
{
  self->_isWebViewVisible = a3;
}

- (unint64_t)sendingCompositionBackgroundTask
{
  return self->_sendingCompositionBackgroundTask;
}

- (NSNumber)frozenEntryViewHeightDuringDismissAnimation
{
  return self->_frozenEntryViewHeightDuringDismissAnimation;
}

- (void)setFrozenEntryViewHeightDuringDismissAnimation:(id)a3
{
}

- (NSMutableDictionary)fileURLKeyToGuidMapping
{
  return self->_fileURLKeyToGuidMapping;
}

- (void)setFileURLKeyToGuidMapping:(id)a3
{
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_fileURLKeyToGuidMapping, 0);
  objc_storeStrong((id *)&self->_frozenEntryViewHeightDuringDismissAnimation, 0);
  objc_storeStrong((id *)&self->_suggestedActionsHandler, 0);
  objc_storeStrong((id *)&self->_wolfFaceTimeButton, 0);
  objc_storeStrong((id *)&self->_browserDragManager, 0);
  objc_storeStrong(&self->_insertItemsCallback, 0);
  objc_storeStrong((id *)&self->_activeDropPreviews, 0);
  objc_storeStrong((id *)&self->_rotationLockUtility, 0);
  objc_storeStrong((id *)&self->_tipManager, 0);
  objc_destroyWeak((id *)&self->_photoGridDataSourceManager);
  objc_storeStrong((id *)&self->_photoGridClickyOrbChatItem, 0);
  objc_destroyWeak((id *)&self->_photoGridMomentShareChatItem);
  objc_storeStrong((id *)&self->_photoGridDisplayedChatItemGUID, 0);
  objc_storeStrong((id *)&self->_shareSheetHostBundleIdentifier, 0);
  objc_storeStrong((id *)&self->_originalComposition, 0);
  objc_storeStrong((id *)&self->_lastPopulatedMessageGuidFromMe, 0);
  objc_storeStrong((id *)&self->_businessMacToolbarController, 0);
  objc_storeStrong((id *)&self->_macRecipientsController, 0);
  objc_storeStrong((id *)&self->_groupPhotoUpdateBanner, 0);
  objc_storeStrong((id *)&self->_inlineReplyController, 0);
  objc_storeStrong((id *)&self->_messageEditingViewController, 0);
  objc_destroyWeak((id *)&self->_walletOrderImportViewController);
  objc_storeStrong((id *)&self->_navigationBarTitleController, 0);
  objc_destroyWeak((id *)&self->_pickerContainerAccessoryView);
  objc_storeStrong((id *)&self->_conversationContext, 0);
  objc_storeStrong((id *)&self->_transcriptSharingBannerSuggestion, 0);
  objc_storeStrong((id *)&self->_collaborationNoticeSuggestions, 0);
  objc_storeStrong((id *)&self->_keyboardSnapshotView, 0);
  objc_storeStrong((id *)&self->_lockoutView, 0);
  objc_storeStrong((id *)&self->_onboardingController, 0);
  objc_storeStrong((id *)&self->_currentNicknameUpdate, 0);
  objc_storeStrong((id *)&self->_contactPicker, 0);
  objc_storeStrong((id *)&self->_nicknameUpdateController, 0);
  objc_storeStrong((id *)&self->_nicknameBanner, 0);
  objc_storeStrong(&self->_deferredPresentationBlock, 0);
  objc_storeStrong((id *)&self->_funCameraViewController, 0);
  objc_destroyWeak(&self->_currentDragPreviewContainer);
  objc_storeStrong((id *)&self->_dropSession, 0);
  objc_storeStrong((id *)&self->_dragSession, 0);
  objc_storeStrong((id *)&self->_revealAnimationGroup, 0);
  objc_storeStrong((id *)&self->_stickerTranscriptScrollDisplayLink, 0);
  objc_storeStrong((id *)&self->_transcriptInlineNotificationUpdater, 0);
  objc_storeStrong((id *)&self->_notificationBannerView, 0);
  objc_storeStrong((id *)&self->_effectPickerWindow, 0);
  objc_storeStrong((id *)&self->_effectPickerViewController, 0);
  objc_storeStrong((id *)&self->_savedKeyboardInputMode, 0);
  objc_storeStrong((id *)&self->_tapGestureRecognizer, 0);
  objc_storeStrong((id *)&self->_previewRevealView, 0);
  objc_storeStrong((id *)&self->_previewInvisibleInkEffectController, 0);
  objc_destroyWeak((id *)&self->_previewSourceView);
  objc_storeStrong((id *)&self->_previewController, 0);
  objc_storeStrong((id *)&self->_qlPreviewDataSource, 0);
  objc_storeStrong((id *)&self->_collaborationPopoverController, 0);
  objc_storeStrong((id *)&self->_videoMessageRecordingViewController, 0);
  objc_storeStrong((id *)&self->_imagePickerController, 0);
  objc_storeStrong(&self->_deferredSendAnimationBlock, 0);
  objc_storeStrong((id *)&self->_throwAnimationManager, 0);
  objc_storeStrong((id *)&self->_extensionPayloadBeingSent, 0);
  objc_storeStrong((id *)&self->_videoTrimController, 0);
  objc_storeStrong((id *)&self->_audioTrimController, 0);
  objc_storeStrong((id *)&self->_compositionBeingTrimmed, 0);
  objc_storeStrong((id *)&self->_loadingIndicatorCoverView, 0);
  objc_storeStrong((id *)&self->_raiseGesture, 0);
  objc_storeStrong((id *)&self->_initialComposition, 0);
  objc_storeStrong((id *)&self->_appCardBackgroundViewConstraints, 0);
  objc_storeStrong((id *)&self->_appCardBackgroundViewController, 0);
  objc_storeStrong((id *)&self->_entryViewTrailingLayoutConstraint, 0);
  objc_storeStrong((id *)&self->_entryViewLeadingLayoutConstraint, 0);
  objc_storeStrong((id *)&self->_entryViewAppCardLayoutConstraint, 0);
  objc_storeStrong((id *)&self->_entryViewKeyboardSnapshotLayoutConstraint, 0);
  objc_storeStrong((id *)&self->_entryViewKeyboardLayoutConstraint, 0);
  objc_storeStrong((id *)&self->_entryViewFauxKeyboardLayoutConstraint, 0);
  objc_storeStrong((id *)&self->_macToolbarDetailsButtonProps, 0);
  objc_storeStrong((id *)&self->_macToolbarFaceTimeButtonProps, 0);
  objc_storeStrong((id *)&self->_recipientsVirtualToolbarItem, 0);
  objc_storeStrong((id *)&self->_detailsToolbarItem, 0);
  objc_storeStrong((id *)&self->_macFaceTimeJoinCallToolbarItem, 0);
  objc_storeStrong((id *)&self->_macFaceTimeJoinedCallToolbarItem, 0);
  objc_storeStrong((id *)&self->_macFaceTimeStartCallToolbarItem, 0);
  objc_storeStrong((id *)&self->_macFaceTimeButtonMenu, 0);
  objc_destroyWeak((id *)&self->_macToolbarController);
  objc_storeStrong(&self->_scrollBlock, 0);
  objc_storeStrong((id *)&self->_indexPathForFirstUnreadMessage, 0);
  objc_storeStrong((id *)&self->_catchUpButtonTopConstraint, 0);
  objc_storeStrong((id *)&self->_catchUpButtonManager, 0);
  objc_storeStrong((id *)&self->_catchUpButton, 0);
  objc_storeStrong((id *)&self->_firstUnreadMessageGUIDForTextEffects, 0);
  objc_storeStrong((id *)&self->_firstUnreadMessageGUID, 0);
  objc_storeStrong((id *)&self->_suggestionBannerView, 0);
  objc_storeStrong((id *)&self->_suggestionBannerTopConstraint, 0);
  objc_storeStrong((id *)&self->_standardSuggestionPresenter, 0);
  objc_storeStrong((id *)&self->_foundInSuggestionPresenter, 0);
  objc_storeStrong((id *)&self->_footerViewController, 0);
  objc_storeStrong((id *)&self->_navbarCanvasViewController, 0);
  objc_storeStrong((id *)&self->_typingUpdater, 0);
  objc_storeStrong((id *)&self->_autorotationUpdater, 0);
  objc_storeStrong((id *)&self->_keyboardCandidateBarBackgroundView, 0);
  objc_storeStrong((id *)&self->_entryViewContainerView, 0);
  objc_storeStrong((id *)&self->_entryViewController, 0);
  objc_storeStrong((id *)&self->_transcriptBottomContentOffsetAtSuspend, 0);
  objc_storeStrong((id *)&self->_commSafetyInterventionController, 0);
  objc_storeStrong((id *)&self->_mediaObjectToDownload, 0);
  objc_storeStrong((id *)&self->_detailsContactsManager, 0);
  objc_storeStrong((id *)&self->_timingCollectionSendGelato, 0);
  objc_storeStrong((id *)&self->_messageGUIDForTranscriptExtension, 0);
  objc_destroyWeak((id *)&self->_externalPluginControllerProvider);
  objc_storeStrong((id *)&self->_mentionsController, 0);
  objc_destroyWeak((id *)&self->_sendMenuDelegate);

  objc_storeStrong((id *)&self->_dropComposition, 0);
}

- (id)selectedChatItems
{
  uint64_t v2 = [(CKCoreChatController *)self collectionViewController];
  id v3 = [v2 selectedChatItems];

  return v3;
}

- (id)selectedChatItemsIncludingTapbackedChatItem
{
  v15[1] = *MEMORY[0x1E4F143B8];
  id v3 = [(CKChatController *)self selectedChatItems];
  if (![v3 count])
  {
    uint64_t v4 = [(CKChatController *)self inlineReplyController];
    int v5 = (void *)v4;
    if (v4) {
      id v6 = (CKChatController *)v4;
    }
    else {
      id v6 = self;
    }
    char v7 = v6;

    id v8 = [(CKChatController *)v7 clickyOrbChatItem];

    if (v8)
    {
      id v9 = [(CKChatController *)v7 clickyOrbChatItem];

      v15[0] = v9;
      [MEMORY[0x1E4F1C978] arrayWithObjects:v15 count:1];
      id v3 = v10 = v3;
    }
    else
    {
      id v9 = [(CKCoreChatController *)v7 fullScreenBalloonViewController];

      uint64_t v11 = [v9 chatItem];
      id v10 = (void *)v11;
      if (v11)
      {
        uint64_t v14 = v11;
        uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v14 count:1];

        id v3 = (void *)v12;
      }
    }
  }

  return v3;
}

- (BOOL)hasSelectedChatItems
{
  uint64_t v2 = [(CKChatController *)self selectedChatItems];
  BOOL v3 = [v2 count] != 0;

  return v3;
}

- (BOOL)hasSelectedChatItemsIncludingAssociatedTapback
{
  uint64_t v2 = [(CKChatController *)self selectedChatItemsIncludingTapbackedChatItem];
  BOOL v3 = [v2 count] != 0;

  return v3;
}

- (id)selectedMessagePartItem
{
  uint64_t v3 = [(CKChatController *)self inlineReplyController];
  uint64_t v4 = (void *)v3;
  if (v3) {
    int v5 = (CKChatController *)v3;
  }
  else {
    int v5 = self;
  }
  id v6 = v5;

  char v7 = [(CKChatController *)v6 selectedChatItemsIncludingTapbackedChatItem];

  if ([v7 count] == 1)
  {
    id v8 = [v7 firstObject];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v9 = v8;
    }
    else {
      id v9 = 0;
    }
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

- (id)lastOutgoingMessagePartItem
{
  uint64_t v3 = [(CKChatController *)self inlineReplyController];
  uint64_t v4 = (void *)v3;
  if (v3) {
    int v5 = (CKChatController *)v3;
  }
  else {
    int v5 = self;
  }
  id v6 = v5;

  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  id v15 = __Block_byref_object_copy__14;
  uint64_t v16 = __Block_byref_object_dispose__14;
  id v17 = 0;
  char v7 = [(CKCoreChatController *)v6 collectionViewController];
  id v8 = [v7 chatItems];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __66__CKChatController_ChatItemSelection__lastOutgoingMessagePartItem__block_invoke;
  v11[3] = &unk_1E5623C50;
  void v11[4] = &v12;
  [v8 enumerateObjectsWithOptions:2 usingBlock:v11];

  id v9 = (id)v13[5];
  _Block_object_dispose(&v12, 8);

  return v9;
}

void __66__CKChatController_ChatItemSelection__lastOutgoingMessagePartItem__block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v10;
  if (isKindOfClass)
  {
    id v9 = v10;
    if ([v9 itemIsFromMe] && (objc_msgSend(v9, "itemIsReplyContextPreview") & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
      *a4 = 1;
    }

    id v8 = v10;
  }
}

- (BOOL)allowDebugItems
{
  uint64_t v2 = [MEMORY[0x1E4F6C360] sharedInstance];
  char v3 = [v2 isInternalInstall];

  uint64_t v4 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  char v5 = [v4 BOOLForKey:@"showTranscriptDebugButton"];

  return v3 & v5;
}

- (NSArray)internalBarButtonItems
{
  void v9[2] = *MEMORY[0x1E4F143B8];
  if ([(CKChatController *)self allowDebugItems])
  {
    char v3 = [MEMORY[0x1E4F42A80] systemImageNamed:@"wrench.and.screwdriver.fill"];
    uint64_t v4 = [(CKChatController *)self _makeInternalMenu];
    char v5 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithImage:v3 menu:v4];
    [v5 setTag:100];
    id v6 = [MEMORY[0x1E4F427C0] flexibleSpaceItem];
    v9[0] = v5;
    v9[1] = v6;
    char v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:2];
  }
  else
  {
    char v7 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return (NSArray *)v7;
}

- (id)_makeInternalMenu
{
  void v17[2] = *MEMORY[0x1E4F143B8];
  id location = 0;
  objc_initWeak(&location, self);
  uint64_t v2 = (void *)MEMORY[0x1E4F426E8];
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __44__CKChatController_Debug___makeInternalMenu__block_invoke;
  v14[3] = &unk_1E5620ED8;
  objc_copyWeak(&v15, &location);
  char v3 = [v2 actionWithTitle:@"Show GUID Summary" image:0 identifier:0 handler:v14];
  uint64_t v4 = (void *)MEMORY[0x1E4F426E8];
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 3221225472;
  uint64_t v11 = __44__CKChatController_Debug___makeInternalMenu__block_invoke_2;
  uint64_t v12 = &unk_1E5620ED8;
  objc_copyWeak(&v13, &location);
  char v5 = [v4 actionWithTitle:@"Chat Item Summary" image:0 identifier:0 handler:&v9];
  v17[0] = v5;
  v17[1] = v3;
  id v6 = objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:count:", v17, 2, v9, v10, v11, v12);
  char v7 = [MEMORY[0x1E4F42B80] menuWithTitle:@"[Internal]" image:0 identifier:0 options:1 children:v6];

  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);

  return v7;
}

void __44__CKChatController_Debug___makeInternalMenu__block_invoke(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained _debugSelectedGuidSummary];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _presentAlertForDebugSummary:v4];
}

void __44__CKChatController_Debug___makeInternalMenu__block_invoke_2(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained collectionViewController];

  id v4 = [v3 selectedItems];
  char v5 = [v3 chatItems];
  id v6 = [v5 objectsAtIndexes:v4];

  char v7 = [MEMORY[0x1E4F1CA48] array];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  void v15[2] = __44__CKChatController_Debug___makeInternalMenu__block_invoke_3;
  void v15[3] = &unk_1E5624B18;
  id v8 = v7;
  id v16 = v8;
  [v4 enumerateIndexesUsingBlock:v15];
  id v9 = objc_loadWeakRetained(v1);
  uint64_t v10 = [v9 view];
  uint64_t v11 = [v10 window];
  uint64_t v12 = [v11 windowScene];
  id v13 = [v12 delegate];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v14 = (void *)[v8 copy];
    [v13 showInspectorViewForChatItems:v6 parallelIndexes:v14];
  }
}

void __44__CKChatController_Debug___makeInternalMenu__block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [NSNumber numberWithInteger:a2];
  [v2 addObject:v3];
}

- (void)_presentAlertForDebugSummary:(id)a3
{
  id v4 = a3;
  char v5 = [MEMORY[0x1E4F42728] alertControllerWithTitle:&stru_1EDE4CA38 message:v4 preferredStyle:1];
  id v6 = (void *)MEMORY[0x1E4F42720];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __56__CKChatController_Debug___presentAlertForDebugSummary___block_invoke;
  v10[3] = &unk_1E5621178;
  id v11 = v4;
  id v7 = v4;
  id v8 = [v6 actionWithTitle:@"Copy" style:0 handler:v10];
  id v9 = [MEMORY[0x1E4F42720] actionWithTitle:@"Cancel" style:1 handler:0];
  [v5 addAction:v8];
  [v5 addAction:v9];
  [(CKChatController *)self presentViewController:v5 animated:1 completion:0];
}

void __56__CKChatController_Debug___presentAlertForDebugSummary___block_invoke(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F42C50] generalPasteboard];
  [v2 setString:*(void *)(a1 + 32)];
}

- (id)_debugSelectedGuidSummary
{
  id v2 = [(CKCoreChatController *)self collectionViewController];
  id v3 = [v2 selectedItems];
  id v4 = [v2 chatItems];
  char v5 = [v4 objectsAtIndexes:v3];

  id v6 = [MEMORY[0x1E4F28E78] string];
  if ([v5 count])
  {
    unint64_t v7 = 0;
    do
    {
      id v8 = [v5 objectAtIndexedSubscript:v7];
      id v9 = [v8 IMChatItem];
      uint64_t v10 = [v9 guid];
      [v6 appendString:v10];

      if (v7 < [v5 count] - 1) {
        [v6 appendString:@"\n\n"];
      }

      ++v7;
    }
    while (v7 < [v5 count]);
  }
  id v11 = (void *)[v6 copy];

  return v11;
}

- (id)_internalMenuForChatItem:(id)a3
{
  v64[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id location = 0;
  uint64_t v46 = self;
  objc_initWeak(&location, self);
  id v5 = objc_alloc(MEMORY[0x1E4F6E868]);
  id v6 = [v4 IMChatItem];
  unint64_t v7 = [v6 guid];
  id v8 = (void *)[v5 initWithEncodedMessagePartGUID:v7];
  id v9 = [v8 messageGUID];

  uint64_t v10 = (void *)MEMORY[0x1E4F426E8];
  id v11 = CKFrameworkBundle();
  uint64_t v12 = [v11 localizedStringForKey:@"Message Details" value:&stru_1EDE4CA38 table:@"ChatKit"];
  id v13 = [MEMORY[0x1E4F42A80] systemImageNamed:@"info.circle"];
  v60[0] = MEMORY[0x1E4F143A8];
  v60[1] = 3221225472;
  v60[2] = __52__CKChatController_Debug___internalMenuForChatItem___block_invoke;
  v60[3] = &unk_1E56210D8;
  BOOL v43 = &v62;
  objc_copyWeak(&v62, &location);
  id v14 = v4;
  id v61 = v14;
  float64x2_t v47 = [v10 actionWithTitle:v12 image:v13 identifier:0 handler:v60];

  id v15 = (void *)MEMORY[0x1E4F426E8];
  id v16 = [MEMORY[0x1E4F42A80] systemImageNamed:@"info.circle"];
  v57[0] = MEMORY[0x1E4F143A8];
  v57[1] = 3221225472;
  id v57[2] = __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_2;
  v57[3] = &unk_1E56210D8;
  double v45 = &v59;
  objc_copyWeak(&v59, &location);
  id v17 = v14;
  id v58 = v17;
  float64x2_t v49 = [v15 actionWithTitle:@"Chat Item Details" image:v16 identifier:0 handler:v57];

  id v18 = (void *)MEMORY[0x1E4F426E8];
  objc_super v19 = CKFrameworkBundle();
  char v20 = [v19 localizedStringForKey:@"Copy GUID" value:&stru_1EDE4CA38 table:@"ChatKit"];
  uint64_t v21 = [MEMORY[0x1E4F42A80] systemImageNamed:@"tag"];
  v55[0] = MEMORY[0x1E4F143A8];
  v55[1] = 3221225472;
  v55[2] = __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_142;
  v55[3] = &unk_1E56211C8;
  id v22 = v9;
  id v56 = v22;
  float64x2_t v48 = [v18 actionWithTitle:v20 image:v21 identifier:0 handler:v55];

  double v23 = (void *)MEMORY[0x1E4F426E8];
  id v24 = CKFrameworkBundle();
  uint64_t v25 = [v24 localizedStringForKey:@"Copy Link" value:&stru_1EDE4CA38 table:@"ChatKit"];
  uint64_t v26 = [MEMORY[0x1E4F42A80] systemImageNamed:@"link"];
  v53[0] = MEMORY[0x1E4F143A8];
  v53[1] = 3221225472;
  v53[2] = __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_2_149;
  v53[3] = &unk_1E56211C8;
  id v27 = v22;
  id v54 = v27;
  uint64_t v28 = [v23 actionWithTitle:v25 image:v26 identifier:0 handler:v53];

  uint64_t v29 = (void *)MEMORY[0x1E4F426E8];
  uint64_t v30 = [MEMORY[0x1E4F42A80] systemImageNamed:@"ant"];
  v50[0] = MEMORY[0x1E4F143A8];
  v50[1] = 3221225472;
  v50[2] = __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_3;
  v50[3] = &unk_1E5624B40;
  id v31 = v17;
  id v51 = v31;
  __int16 v52 = v46;
  double v32 = [v29 actionWithTitle:@"Tap-to-Radar" image:v30 identifier:0 handler:v50];

  id v33 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v34 = [v31 message];
  LOBYTE(v30) = v34 == 0;

  if ((v30 & 1) == 0)
  {
    objc_msgSend(v33, "addObject:", v32, &v62, &v59);
    [v33 addObject:v47];
  }
  objc_msgSend(v33, "addObject:", v49, v43);
  [v33 addObject:v48];
  [v33 addObject:v28];
  __int16 v35 = (void *)MEMORY[0x1E4F42B80];
  double v36 = [MEMORY[0x1E4F42A80] systemImageNamed:@"apple.logo"];
  uint64_t v37 = (void *)[v33 copy];
  long long v38 = [v35 menuWithTitle:@"Internal" image:v36 identifier:0 options:0 children:v37];

  double v39 = (void *)MEMORY[0x1E4F42B80];
  v64[0] = v38;
  id v40 = [MEMORY[0x1E4F1C978] arrayWithObjects:v64 count:1];
  uint64_t v41 = [v39 menuWithTitle:&stru_1EDE4CA38 image:0 identifier:0 options:1 children:v40];

  objc_destroyWeak(v45);
  objc_destroyWeak(v44);

  objc_destroyWeak(&location);

  return v41;
}

void __52__CKChatController_Debug___internalMenuForChatItem___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained view];
  id v4 = [v3 window];
  id v5 = [v4 windowScene];
  id v10 = [v5 delegate];

  uint64_t v6 = [*(id *)(a1 + 32) message];
  if (v6)
  {
    unint64_t v7 = (void *)v6;
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      id v9 = [*(id *)(a1 + 32) message];
      [v10 showInspectorViewForMessage:v9];
    }
  }
}

void __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_2(uint64_t a1)
{
  v16[1] = *MEMORY[0x1E4F143B8];
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained collectionViewController];

  id v5 = [v4 chatItems];
  uint64_t v6 = [v5 indexOfObject:*(void *)(a1 + 32)];

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    unint64_t v7 = &unk_1EDF16370;
  }
  else
  {
    unint64_t v7 = [NSNumber numberWithInteger:v6];
  }
  id v8 = objc_loadWeakRetained(v2);
  id v9 = [v8 view];
  id v10 = [v9 window];
  id v11 = [v10 windowScene];
  uint64_t v12 = [v11 delegate];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    v16[0] = *(void *)(a1 + 32);
    id v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v16 count:1];
    id v15 = v7;
    id v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v15 count:1];
    [v12 showInspectorViewForChatItems:v13 parallelIndexes:v14];
  }
}

void __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_142(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F42C50] generalPasteboard];
  [v2 setString:*(void *)(a1 + 32)];
}

void __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_2_149(uint64_t a1)
{
  id v4 = [MEMORY[0x1E4F42C50] generalPasteboard];
  id v2 = [NSString stringWithFormat:@"sms://open?message-guid=%@", *(void *)(a1 + 32)];
  id v3 = [MEMORY[0x1E4F1CB10] URLWithString:v2];
  [v4 setURL:v3];
}

void __52__CKChatController_Debug___internalMenuForChatItem___block_invoke_3(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) message];
  id v3 = +[TTRSheetViewFactory ttrSheetView:v2];

  [*(id *)(a1 + 40) presentViewController:v3 animated:1 completion:0];
}

- (void)effectPickerViewControllerClose:(id)a3 animated:(BOOL)a4
{
}

- (void)effectPickerViewControllerClose:(id)a3 keepingSideMountContainer:(BOOL)a4 animated:(BOOL)a5
{
  id v7 = a3;
  id v8 = [(CKChatController *)self effectPickerViewController];

  if (v8 == v7)
  {
    id v9 = [(CKChatController *)self entryView];
    id v10 = [v9 composition];
    char v11 = [v10 isAudioComposition];

    if ((v11 & 1) == 0)
    {
      uint64_t v12 = [(CKChatController *)self entryView];
      id v13 = [v12 contentView];
      [v13 setHidden:0];
    }
    id v14 = [(CKChatController *)self effectPickerViewController];
    [v14 setDelegate:0];

    [(CKChatController *)self setEffectPickerViewController:0];
    [(CKChatController *)self setEffectPickerIsPresented:0];
    if (CKIsRunningInMacCatalyst())
    {
      id v15 = [v7 effectPreviewOverlayView];
      [v15 removeFromSuperview];

      v19[0] = MEMORY[0x1E4F143A8];
      v19[1] = 3221225472;
      id v19[2] = __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke;
      v19[3] = &unk_1E5620C40;
      void v19[4] = self;
      [v7 dismissViewControllerAnimated:0 completion:v19];
      id v16 = [MEMORY[0x1E4F42B08] activeKeyboard];
      [v16 setTypingEnabled:1];
    }
    else
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke_2;
      block[3] = &unk_1E5622A18;
      BOOL v18 = a5;
      void block[4] = self;
      dispatch_async(MEMORY[0x1E4F14428], block);
    }
  }
}

uint64_t __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshMacToolbar];
}

uint64_t __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke_2(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id location = 0;
    objc_initWeak(&location, *(id *)(a1 + 32));
    id v2 = (void *)MEMORY[0x1E4F42FF0];
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    void v7[2] = __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke_3;
    _OWORD v7[3] = &unk_1E5620C40;
    void v7[4] = *(void *)(a1 + 32);
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    void v5[2] = __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke_4;
    v5[3] = &unk_1E5623970;
    objc_copyWeak(&v6, &location);
    [v2 animateWithDuration:32 delay:v7 options:v5 animations:0.2 completion:0.0];
    objc_destroyWeak(&v6);
    objc_destroyWeak(&location);
  }
  else
  {
    [*(id *)(a1 + 32) _resetEffectPickerViewController];
  }
  id v3 = [MEMORY[0x1E4F42B08] activeKeyboard];
  [v3 setTypingEnabled:1];

  return [*(id *)(a1 + 32) requestDismissKeyboardSnapshotForReason:4];
}

void __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke_3(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) effectPickerWindow];
  [v1 setAlpha:0.0];
}

void __107__CKChatController_ImpactEffectPicker__effectPickerViewControllerClose_keepingSideMountContainer_animated___block_invoke_4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _resetEffectPickerViewController];
}

- (void)_resetEffectPickerViewController
{
  id v3 = [(CKChatController *)self effectPickerWindow];
  [v3 setAlpha:0.0];

  id v4 = [(CKChatController *)self effectPickerWindow];
  [v4 setRootViewController:0];

  id v5 = [(CKChatController *)self effectPickerWindow];
  [v5 setHidden:1];

  [(CKChatController *)self setEffectPickerWindow:0];
}

- (void)effectPickerViewController:(id)a3 effectWithIdentifierSelected:(id)a4
{
  id v5 = a4;
  id v6 = [(CKChatController *)self entryView];
  id v7 = [v6 contentView];
  [v7 setHidden:0];

  id v8 = [v6 audioMessageAppDelegate];
  [v8 audioMessageDidSendMessage];

  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __96__CKChatController_ImpactEffectPicker__effectPickerViewController_effectWithIdentifierSelected___block_invoke;
  v10[3] = &unk_1E56235C0;
  id v11 = v5;
  uint64_t v12 = self;
  id v9 = v5;
  [v6 compositionWithAcceptedAutocorrection:v10];
}

void __96__CKChatController_ImpactEffectPicker__effectPickerViewController_effectWithIdentifierSelected___block_invoke(uint64_t a1, void *a2)
{
  id v4 = [a2 compositionWithExpressiveSendStyleID:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) selectAccountAndSendComposition:v4 completion:&__block_literal_global_58];
  id v3 = [MEMORY[0x1E4F42B08] activeKeyboard];
  [v3 setTypingEnabled:1];
}

- (id)effectsPresenterViewController
{
  if ([(CKChatController *)self isMainTranscript])
  {
    id v3 = self;
  }
  else
  {
    if (![(CKChatController *)self isInlineReply])
    {
      p_super = IMLogHandleForCategory();
      if (os_log_type_enabled(p_super, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(ImpactEffectPicker) effectsPresenterViewController](p_super);
      }
      goto LABEL_14;
    }
    id v3 = [(CKChatController *)self parentViewController];
  }
  p_super = &v3->super.super.super.super.super.super;
  if ([(CKChatController *)self isChatControllerShowingStandaloneWindow:v3])
  {
    id v5 = [p_super delegate];
    id v6 = [v5 window];
    id v7 = [v6 rootViewController];

    goto LABEL_15;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = [p_super delegate];
    goto LABEL_15;
  }
  id v8 = IMLogHandleForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    -[CKChatController(ImpactEffectPicker) effectsPresenterViewController](v8);
  }

LABEL_14:
  id v7 = 0;
LABEL_15:

  return v7;
}

- (BOOL)isMainTranscript
{
  id v2 = [(CKCoreChatController *)self delegate];
  if (v2)
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

- (BOOL)isInlineReply
{
  id v3 = [(CKCoreChatController *)self delegate];
  if (v3)
  {
    char isKindOfClass = 0;
  }
  else
  {
    id v5 = [(CKChatController *)self parentViewController];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  return isKindOfClass & 1;
}

- (BOOL)isChatControllerShowingStandaloneWindow:(id)a3
{
  id v3 = [a3 delegate];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

- (id)_recipientHandle
{
  id v2 = [(CKCoreChatController *)self conversation];
  id v3 = v2;
  if (v2 && ([v2 recipient], (id v4 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v5 = v4;
    id v6 = [v4 defaultIMHandle];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (void)toggleUnreadState:(id)a3
{
  id v5 = a3;
  id v4 = self;
  if (v4 && (objc_opt_respondsToSelector() & 1) != 0) {
    [(CKChatController *)v4 keyCommandToggleUnreadState];
  }
}

- (BOOL)shouldQuickLookSelectedChatItem
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  [(CKChatController *)self selectedChatItems];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        if (-[CKChatController shouldQuickLookChatItem:](self, "shouldQuickLookChatItem:", *(void *)(*((void *)&v10 + 1) + 8 * i), (void)v10))
        {
          BOOL v8 = 1;
          goto LABEL_11;
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  BOOL v8 = 0;
LABEL_11:

  return v8;
}

- (BOOL)shouldPageSelectedChatItem
{
  id v2 = [(CKChatController *)self selectedChatItems];
  if ([v2 count] == 1)
  {
    id v3 = [v2 firstObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

- (BOOL)shouldViewDetailsForSelectedChatItem
{
  id v2 = [(CKChatController *)self selectedChatItems];
  if ([v2 count] == 1)
  {
    id v3 = [v2 firstObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

- (BOOL)shouldQuickLookChatItem:(id)a3
{
  id v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_7;
    }
LABEL_9:
    BOOL v6 = 0;
    goto LABEL_10;
  }
  uint64_t v4 = [v3 mediaObject];
  uint64_t v5 = v4;
  if (!v4 || ![v4 shouldBeQuickLooked] || (objc_msgSend(v5, "shouldShowViewer") & 1) == 0)
  {

    goto LABEL_9;
  }

LABEL_7:
  BOOL v6 = 1;
LABEL_10:

  return v6;
}

- (void)quickLookSelectedChatItem
{
  id v2 = self;
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v3 = [(CKChatController *)self selectedChatItems];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v24;
    uint64_t v7 = *MEMORY[0x1E4F6DA88];
    unint64_t v8 = 0x1E4F6E000uLL;
    id v22 = v2;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v24 != v6) {
          objc_enumerationMutation(v3);
        }
        long long v10 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        if ([(CKChatController *)v2 shouldQuickLookChatItem:v10])
        {
          long long v11 = [v10 mediaObject];
          long long v12 = [v11 transfer];
          if ([v12 isRestoring])
          {
            long long v13 = [v11 fileURL];
            [v13 path];
            uint64_t v14 = v5;
            uint64_t v15 = v6;
            uint64_t v16 = v7;
            id v17 = v3;
            objc_super v19 = v18 = v8;

            char v20 = +[CKSyncController sharedInstance];
            [v20 prioritizeAttachmentAtPath:v19];

            unint64_t v8 = v18;
            id v3 = v17;
            uint64_t v7 = v16;
            uint64_t v6 = v15;
            uint64_t v5 = v14;
            id v2 = v22;
          }
          [(CKChatController *)v2 showViewerForMediaObject:v11];
          uint64_t v21 = [*(id *)(v8 + 2192) sharedInstance];
          [v21 trackEvent:v7];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v5);
  }
}

- (void)scrollTranscriptPageUp
{
}

- (void)scrollTranscriptPageDown
{
}

- (void)scrollTranscriptEnd
{
}

- (void)scrollTranscriptPageUpDirection:(BOOL)a3 toBounds:(BOOL)a4
{
  BOOL v4 = a4;
  BOOL v5 = a3;
  uint64_t v7 = [(CKCoreChatController *)self collectionViewController];
  id v23 = [v7 collectionView];

  if ([v23 _isAnimatingScroll]) {
    goto LABEL_20;
  }
  uint64_t v8 = 1;
  if (v4 && !v5)
  {
    id v9 = [(CKChatController *)self entryView];
    long long v10 = [v9 sendLaterPluginInfo];

    if (v10) {
      uint64_t v8 = 6;
    }
    else {
      uint64_t v8 = 0;
    }
  }
  [v23 setTranscriptScrollIntent:v8];
  [v23 bounds];
  double v12 = v11;
  [v23 contentInset];
  double v15 = v12 - (v13 + v14);
  objc_msgSend(v23, "__ck_bottomOffset");
  double v17 = v16;
  if (v5)
  {
    double v18 = 0.0;
    if (v4) {
      goto LABEL_13;
    }
    [v23 contentOffset];
    double v18 = fmax(v19 - v15, 0.0);
  }
  else
  {
    double v18 = v16;
    if (!v4)
    {
      [v23 contentOffset];
      double v18 = fmin(v17, v15 + v20);
    }
  }
  if (v18 >= 20.0)
  {
    objc_msgSend(v23, "setContentOffset:animated:", 1, 0.0, v18);
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v21 = [MEMORY[0x1E4F28D58] indexPathForItem:0 inSection:0];
  [v23 scrollToItemAtIndexPath:v21 atScrollPosition:1 animated:1];

LABEL_15:
  if (v18 <= 0.0 || v18 >= v17)
  {
    id v22 = [(CKCoreChatController *)self collectionViewController];
    if (objc_opt_respondsToSelector()) {
      [v22 loadMessagesIfNeededSkipValidation];
    }
  }
LABEL_20:
}

- (void)validateCommand:(id)a3
{
  id v4 = a3;
  if ((char *)[v4 action] == sel_keyCommandApplyTextStyle_)
  {
    BOOL v5 = [(CKChatController *)self entryView];
    uint64_t v6 = [v5 contentView];
    int v7 = [v6 canApplyTextStyleFromKeyCommand];
  }
  else
  {
    if ((char *)[v4 action] != sel_keyCommandApplyTextEffect_)
    {
      v11.receiver = self;
      v11.super_class = (Class)CKChatController;
      [(CKChatController *)&v11 validateCommand:v4];
      goto LABEL_10;
    }
    BOOL v5 = [(CKChatController *)self entryView];
    uint64_t v6 = [v5 contentView];
    int v7 = [v6 canApplyTextEffectFromKeyCommand];
  }
  int v8 = v7;

  uint64_t v9 = [v4 attributes];
  if (v8) {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
  }
  else {
    unint64_t v10 = v9 | 1;
  }
  [v4 setAttributes:v10];
LABEL_10:
}

- (void)keyCommandApplyTextEffect:(id)a3
{
  id v11 = a3;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  BOOL v5 = v11;
  if (isKindOfClass)
  {
    uint64_t v6 = [v11 propertyList];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v7 = [v6 integerValue];
      int v8 = [(CKChatController *)self messageEditingViewController];

      if (v8)
      {
        uint64_t v9 = [(CKChatController *)self messageEditingViewController];
        [v9 modifySelectedTextByTogglingTextEffectType:v7];
      }
      else
      {
        uint64_t v9 = [(CKChatController *)self entryView];
        unint64_t v10 = [v9 contentView];
        [v10 applyTextEffect:v7];
      }
    }

    BOOL v5 = v11;
  }
}

- (void)keyCommandApplyTextStyle:(id)a3
{
  id v11 = a3;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  BOOL v5 = v11;
  if (isKindOfClass)
  {
    uint64_t v6 = [v11 propertyList];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v7 = [v6 unsignedIntegerValue];
      int v8 = [(CKChatController *)self messageEditingViewController];

      if (v8)
      {
        uint64_t v9 = [(CKChatController *)self messageEditingViewController];
        [v9 modifySelectedTextByTogglingTextStyle:v7];
      }
      else
      {
        uint64_t v9 = [(CKChatController *)self entryView];
        unint64_t v10 = [v9 contentView];
        [v10 applyTextStyle:v7];
      }
    }

    BOOL v5 = v11;
  }
}

- (void)askToShareScreenFromBuddyMenu:(id)a3
{
  id v6 = [(CKCoreChatController *)self conversation];
  if (v6)
  {
    id v4 = [(CKChatController *)self detailsContactsManager];
    BOOL v5 = [v6 recipient];
    [v4 inviteEntityToShareTheirScreen:v5];
  }
}

- (void)inviteToShareScreenFromBuddyMenu:(id)a3
{
  id v6 = [(CKCoreChatController *)self conversation];
  if (v6)
  {
    id v4 = [(CKChatController *)self detailsContactsManager];
    BOOL v5 = [v6 recipient];
    [v4 shareMyScreenWithEntity:v5];
  }
}

- (void)spacePressed:(id)a3
{
  id v4 = [(CKChatController *)self selectedChatItems];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __42__CKChatController_MenuBar__spacePressed___block_invoke;
  v5[3] = &unk_1E56255D8;
  void v5[4] = self;
  [v4 enumerateObjectsWithOptions:2 usingBlock:v5];
}

void __42__CKChatController_MenuBar__spacePressed___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v15 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [*(id *)(a1 + 32) collectionViewController];
    uint64_t v7 = [v6 balloonViewForChatItem:v15];

    if (!v15 || !v7) {
      goto LABEL_11;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [v7 pausePlayback];
    }
    int v8 = *(void **)(a1 + 32);
    uint64_t v9 = [v8 collectionViewController];
    [v8 transcriptCollectionViewController:v9 balloonView:v7 tappedForChatItem:v15];
    goto LABEL_10;
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v11 = v15;
  if ((isKindOfClass & 1) == 0) {
    goto LABEL_12;
  }
  double v12 = [*(id *)(a1 + 32) collectionViewController];
  uint64_t v7 = [v12 balloonViewForChatItem:v15];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v9 = [v7 currentAssetReference];
    double v13 = *(void **)(a1 + 32);
    double v14 = [v13 collectionViewController];
    [v13 transcriptCollectionViewController:v14 didTapPhotoStackForChatItem:v15 assetReference:v9];

LABEL_10:
  }
LABEL_11:
  *a4 = 1;

  id v11 = v15;
LABEL_12:
}

- (void)keyCommandReplyAlternate:(id)a3
{
}

- (void)keyCommandReply:(id)a3
{
}

- (id)_chatItemForReplyingToChatItem:(id)a3 explicitlySelected:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  objc_opt_class();
  uint64_t v7 = v6;
  if (objc_opt_isKindOfClass())
  {
    uint64_t v7 = v6;
    if (v4)
    {
      uint64_t v7 = [(CKChatController *)self currentTopChatItemForAggregateChatItem:v6];
    }
  }

  return v7;
}

- (void)keyCommandReply:(id)a3 withModifier:(BOOL)a4
{
  if (![(CKChatController *)self isShowingOscarChat])
  {
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    void v9[2] = __58__CKChatController_MenuBar__keyCommandReply_withModifier___block_invoke;
    void v9[3] = &unk_1E5622A18;
    BOOL v10 = a4;
    void v9[4] = self;
    id v6 = (void (**)(void))_Block_copy(v9);
    uint64_t v7 = [(CKChatController *)self inlineReplyController];

    if (v7)
    {
      int v8 = [(CKChatController *)self inlineReplyController];
      [v8 dismissController];
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        [(CKChatController *)self dismissController];
      }
      else if ([(CKChatController *)self isFullScreenBalloonViewOnScreen])
      {
        [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:v6];
      }
      else
      {
        v6[2](v6);
      }
    }
  }
}

void __58__CKChatController_MenuBar__keyCommandReply_withModifier___block_invoke(uint64_t a1)
{
  int v2 = CKIsRunningInMacCatalyst();
  if (*(unsigned char *)(a1 + 40)
    || ([*(id *)(a1 + 32) selectedChatItems],
        id v3 = objc_claimAutoreleasedReturnValue(),
        uint64_t v4 = [v3 count],
        v3,
        v4 != 1))
  {
    uint64_t v14 = 0;
    id v15 = &v14;
    uint64_t v16 = 0x3032000000;
    double v17 = __Block_byref_object_copy__24;
    double v18 = __Block_byref_object_dispose__24;
    id v19 = 0;
    uint64_t v7 = [*(id *)(a1 + 32) collectionViewController];
    int v8 = [v7 chatItems];
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = __58__CKChatController_MenuBar__keyCommandReply_withModifier___block_invoke_99;
    v12[3] = &unk_1E5625600;
    char v13 = *(unsigned char *)(a1 + 40);
    void v12[4] = *(void *)(a1 + 32);
    void v12[5] = &v14;
    [v8 enumerateObjectsWithOptions:2 usingBlock:v12];

    if (v15[5])
    {
      objc_msgSend(*(id *)(a1 + 32), "showInlineReplyControllerForChatItem:presentKeyboard:");
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "CKChatController_MenuBar: Unable to identify a visible cell that's eligible for reply", buf, 2u);
      }
    }
    _Block_object_dispose(&v14, 8);
  }
  else
  {
    BOOL v5 = [*(id *)(a1 + 32) selectedChatItems];
    id v10 = [v5 firstObject];

    id v6 = [*(id *)(a1 + 32) _chatItemForReplyingToChatItem:v10 explicitlySelected:1];
    if ([v6 canInlineReply]) {
      [*(id *)(a1 + 32) showInlineReplyControllerForChatItem:v6 presentKeyboard:v2 == 0];
    }
  }
}

void __58__CKChatController_MenuBar__keyCommandReply_withModifier___block_invoke_99(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v13 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v7 = v13;
  if (isKindOfClass)
  {
    id v8 = v13;
    uint64_t v9 = v8;
    if (!*(unsigned char *)(a1 + 48))
    {
      if (![v8 itemIsFromMe]) {
        goto LABEL_8;
      }
      if (!*(unsigned char *)(a1 + 48)) {
        goto LABEL_11;
      }
    }
    if (![v9 itemIsReply])
    {
LABEL_11:

      uint64_t v7 = v13;
      goto LABEL_12;
    }
LABEL_8:
    if ([v9 canInlineReply])
    {
      uint64_t v10 = [*(id *)(a1 + 32) _chatItemForReplyingToChatItem:v9 explicitlySelected:0];
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
      double v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;
    }
    *a4 = 1;
    goto LABEL_11;
  }
LABEL_12:
}

- (void)keyCommandTapback:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(CKChatController *)self inlineReplyController];
  id v6 = (void *)v5;
  if (v5) {
    uint64_t v7 = (CKChatController *)v5;
  }
  else {
    uint64_t v7 = self;
  }
  id v8 = v7;

  uint64_t v9 = [(CKCoreChatController *)v8 collectionViewController];
  uint64_t v10 = [v9 collectionView];
  if ([(CKChatController *)v8 isFullScreenBalloonViewOnScreen])
  {
    [(CKChatController *)v8 _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:0];
  }
  else
  {
    if (!CKIsRunningInMacCatalyst()
      && ([(CKChatController *)v8 clickyOrbChatItem],
          (uint64_t v18 = objc_claimAutoreleasedReturnValue()) != 0)
      && (id v19 = (void *)v18,
          [v10 contextMenuInteraction],
          double v20 = objc_claimAutoreleasedReturnValue(),
          v20,
          v19,
          v20))
    {
      uint64_t v11 = [v10 contextMenuInteraction];
      [v11 dismissMenu];
    }
    else
    {
      uint64_t v11 = [(CKChatController *)self selectedChatItems];
      if ([v11 count] == 1)
      {
        double v12 = [v11 firstObject];
        if (([v12 itemIsReplyContextPreview] & 1) == 0
          && ([v12 isEditedMessageHistory] & 1) == 0)
        {
          id v13 = [v9 selectedItems];
          uint64_t v14 = [v13 firstIndex];

          id v15 = [MEMORY[0x1E4F28D58] indexPathForItem:v14 inSection:0];
          [(CKChatController *)v8 showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:v15];
        }
      }
      else
      {
        double v12 = [v9 chatItems];
        uint64_t v22 = 0;
        id v23 = &v22;
        uint64_t v24 = 0x3032000000;
        long long v25 = __Block_byref_object_copy__24;
        long long v26 = __Block_byref_object_dispose__24;
        id v27 = 0;
        v21[0] = MEMORY[0x1E4F143A8];
        v21[1] = 3221225472;
        v21[2] = __47__CKChatController_MenuBar__keyCommandTapback___block_invoke;
        v21[3] = &unk_1E5623C50;
        void v21[4] = &v22;
        [v12 enumerateObjectsWithOptions:2 usingBlock:v21];
        uint64_t v16 = [v9 cellForChatItem:v23[5]];
        double v17 = [v10 indexPathForCell:v16];
        [(CKChatController *)v8 showFullScreenAcknowledgmentPickerIfNeededForBalloonAtIndexPath:v17];

        _Block_object_dispose(&v22, 8);
      }
    }
  }
}

void __47__CKChatController_MenuBar__keyCommandTapback___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v10;
  if (isKindOfClass)
  {
    id v9 = v10;
    if (([v9 itemIsFromMe] & 1) == 0 && (objc_msgSend(v9, "itemIsReplyContextPreview") & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
      *a4 = 1;
    }

    id v8 = v10;
  }
}

- (void)_configureEditMessageCommand:(id)a3
{
  id v26 = a3;
  id v4 = [(CKChatController *)self currentChatController];
  uint64_t v5 = [v4 conversation];
  char v6 = [v5 supportsMessageEditing];

  if (v6)
  {
    uint64_t v7 = [v4 messageEditingViewController];

    if (!v7)
    {
      BOOL v11 = [(CKChatController *)self hasSelectedChatItemsIncludingAssociatedTapback];
      double v12 = CKFrameworkBundle();
      id v13 = v12;
      if (v11)
      {
        uint64_t v14 = [v12 localizedStringForKey:@"EDIT_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
        [v26 setTitle:v14];

        [(CKChatController *)self selectedMessagePartItem];
      }
      else
      {
        id v15 = [v12 localizedStringForKey:@"EDIT_LAST_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
        [v26 setTitle:v15];

        [(CKChatController *)self lastOutgoingMessagePartItem];
      uint64_t v16 = };
      if (v16
        && ([v4 conversation],
            double v17 = objc_claimAutoreleasedReturnValue(),
            [v17 chat],
            uint64_t v18 = objc_claimAutoreleasedReturnValue(),
            char v19 = [v18 supportsCapabilities:1],
            v18,
            v17,
            (v19 & 1) != 0))
      {
        char v20 = [v16 canEditMessageText];
        uint64_t v21 = [v26 attributes];
        unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v23 = v21 | 1;
        uint64_t v24 = v26;
        if (v20) {
          uint64_t v25 = v22;
        }
        else {
          uint64_t v25 = v23;
        }
      }
      else
      {
        uint64_t v25 = [v26 attributes] | 1;
        uint64_t v24 = v26;
      }
      [v24 setAttributes:v25];

      goto LABEL_6;
    }
    id v8 = CKFrameworkBundle();
    id v9 = [v8 localizedStringForKey:@"CANCEL_EDIT" value:&stru_1EDE4CA38 table:@"ChatKit"];
    [v26 setTitle:v9];

    unint64_t v10 = [v26 attributes] & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    unint64_t v10 = [v26 attributes] | 1;
  }
  [v26 setAttributes:v10];
LABEL_6:
}

- (void)keyCommandEditMessage:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(CKChatController *)self currentChatController];
  char v6 = [v5 messageEditingViewController];

  if (v6)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Edit Message Shortcut pressed. Dismissing message editing.", buf, 2u);
      }
    }
    id v8 = [v5 messageEditingViewController];
    [v8 dismissAndRejectChanges];
  }
  else
  {
    id v8 = [(CKChatController *)self _chatItemToEdit];
    if (v8)
    {
      uint64_t v12 = MEMORY[0x1E4F143A8];
      uint64_t v13 = 3221225472;
      uint64_t v14 = __51__CKChatController_MenuBar__keyCommandEditMessage___block_invoke;
      id v15 = &unk_1E5620AF8;
      id v9 = v5;
      id v16 = v9;
      id v8 = v8;
      id v17 = v8;
      unint64_t v10 = (void (**)(void))_Block_copy(&v12);
      if (objc_msgSend(v9, "isFullScreenBalloonViewOnScreen", v12, v13, v14, v15)) {
        [v9 _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:v10];
      }
      else {
        v10[2](v10);
      }
    }
    else if (IMOSLoggingEnabled())
    {
      BOOL v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Unable to identify an eligible item for editing. No op.", buf, 2u);
      }
    }
  }
}

uint64_t __51__CKChatController_MenuBar__keyCommandEditMessage___block_invoke(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) collectionView];
  id v3 = [v2 contextMenuInteraction];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) collectionView];
    uint64_t v5 = [v4 contextMenuInteraction];
    [v5 dismissMenu];
  }
  if (IMOSLoggingEnabled())
  {
    char v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Edit Message Shortcut pressed. Showing message editing.", v8, 2u);
    }
  }
  return [*(id *)(a1 + 32) showMessageEditingViewControllerForChatItem:*(void *)(a1 + 40) presentKeyboard:1];
}

- (id)_chatItemToEdit
{
  id v3 = [(CKChatController *)self selectedMessagePartItem];
  if (v3)
  {
    id v4 = v3;
    if (([v3 canEditMessageText] & 1) == 0)
    {
      id v5 = 0;
      goto LABEL_10;
    }
  }
  else
  {
    char v6 = [(CKChatController *)self lastOutgoingMessagePartItem];
    uint64_t v7 = v6;
    if (v6 && [v6 canEditMessageText]) {
      id v4 = v7;
    }
    else {
      id v4 = 0;
    }
  }
  id v5 = v4;
  id v4 = v5;
LABEL_10:

  return v5;
}

- (id)currentChatController
{
  id v3 = [(CKChatController *)self inlineReplyController];
  id v4 = v3;
  if (!v3) {
    id v3 = self;
  }
  id v5 = v3;

  return v5;
}

- (void)keyCommandPrint:(id)a3
{
  id v3 = [(CKCoreChatController *)self collectionViewController];
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector()) {
    [v3 performSelector:sel_printTranscript];
  }
}

- (void)keyCommandDeleteConversation:(id)a3
{
  id v7 = a3;
  id v4 = [(CKCoreChatController *)self delegate];
  char v5 = objc_opt_respondsToSelector();

  if (v5)
  {
    char v6 = [(CKCoreChatController *)self delegate];
    [v6 keyCommandDeleteConversation:v7];
  }
  else
  {
    [(CKChatController *)self recoverableDeleteConversation];
  }
}

- (void)_cancelDeletion:(id)a3
{
  if (a3) {
    (*((void (**)(id, void))a3 + 2))(a3, 0);
  }
}

- (void)keyCommandPage:(id)a3
{
  id v4 = a3;
  char v5 = [(CKChatController *)self selectedChatItems];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __44__CKChatController_MenuBar__keyCommandPage___block_invoke;
  _OWORD v7[3] = &unk_1E5623738;
  void v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  [v5 enumerateObjectsWithOptions:2 usingBlock:v7];
}

void __44__CKChatController_MenuBar__keyCommandPage___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = [*(id *)(a1 + 32) collectionViewController];
    id v8 = [v7 balloonViewForChatItem:v6];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unint64_t v10 = *(void **)(a1 + 40);
      id v9 = (id *)(a1 + 40);
      BOOL v11 = [v10 input];
      int v12 = [v11 isEqualToString:*MEMORY[0x1E4F43A78]];

      if (v12)
      {
        [v8 pageRightAnimated:1];
      }
      else
      {
        uint64_t v13 = [*v9 input];
        int v14 = [v13 isEqualToString:*MEMORY[0x1E4F43A60]];

        if (v14)
        {
          [v8 pageLeftAnimated:1];
        }
        else
        {
          id v15 = IMLogHandleForCategory();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
            __44__CKChatController_MenuBar__keyCommandPage___block_invoke_cold_1(v9, v15);
          }
        }
      }
    }
    *a4 = 1;
  }
}

- (void)keyCommandShowDetails:(id)a3
{
  id v4 = [(CKChatController *)self selectedChatItems];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __51__CKChatController_MenuBar__keyCommandShowDetails___block_invoke;
  v5[3] = &unk_1E56255D8;
  void v5[4] = self;
  [v4 enumerateObjectsWithOptions:2 usingBlock:v5];
}

void __51__CKChatController_MenuBar__keyCommandShowDetails___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [*(id *)(a1 + 32) collectionViewController];
    id v7 = [v6 balloonViewForChatItem:v11];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v8 = [v7 currentAssetReference];
      id v9 = *(void **)(a1 + 32);
      unint64_t v10 = [v9 collectionViewController];
      [v9 transcriptCollectionViewController:v10 didTapPhotoStackButtonForChatItem:v11 assetReference:v8];
    }
    *a4 = 1;
  }
}

- (void)escButtonPressed:(id)a3
{
  uint64_t v4 = [(CKChatController *)self inlineReplyController];
  char v5 = (void *)v4;
  if (v4) {
    id v6 = (CKChatController *)v4;
  }
  else {
    id v6 = self;
  }
  id v9 = v6;

  if ([(CKChatController *)v9 isFullScreenBalloonViewOnScreen])
  {
    [(CKChatController *)v9 _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:0];
  }
  else
  {
    id v7 = [(CKChatController *)v9 messageEditingViewController];

    if (v7)
    {
      id v8 = [(CKChatController *)v9 messageEditingViewController];
      [v8 dismissAndRejectChanges];
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        [(CKChatController *)v9 dismissController];
      }
    }
  }
}

- (void)delete:(id)a3
{
  id v4 = a3;
  id v5 = [(CKCoreChatController *)self collectionViewController];
  [v5 deleteSelectedChatItems:v4];
}

- (void)copy:(id)a3
{
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Copying selected transcript balloons to pasteboard", v7, 2u);
    }
  }
  id v6 = [(CKCoreChatController *)self collectionViewController];
  [v6 copySelectedChatItemsToPasteboard];
}

- (void)purgeAttachmentsForChat:(id)a3
{
  id v4 = [(CKCoreChatController *)self chat];
  id v5 = [v4 guid];

  id v6 = +[CKAlertController alertControllerWithTitle:@"Purge attachments for this chat?" message:@"This will delete attachment files on disk but you can re-download them. Be sure to imtool kim after running this." preferredStyle:1];
  id v7 = CKFrameworkBundle();
  id v8 = [v7 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __53__CKChatController_MenuBar__purgeAttachmentsForChat___block_invoke;
  v14[3] = &unk_1E5621178;
  id v15 = v5;
  id v9 = v5;
  unint64_t v10 = +[CKAlertAction actionWithTitle:v8 style:0 handler:v14];
  [v6 addAction:v10];

  id v11 = CKFrameworkBundle();
  int v12 = [v11 localizedStringForKey:@"Cancel" value:&stru_1EDE4CA38 table:@"ChatKit"];
  uint64_t v13 = +[CKAlertAction actionWithTitle:v12 style:0 handler:0];
  [v6 addAction:v13];

  [v6 presentFromViewController:self animated:1 completion:0];
}

void __53__CKChatController_MenuBar__purgeAttachmentsForChat___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v7 = 138412290;
      uint64_t v8 = v5;
      _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "Purging attachments for chatGUID: %@", (uint8_t *)&v7, 0xCu);
    }
  }
  id v6 = [MEMORY[0x1E4F6BC98] sharedInstance];
  [v6 purgeAttachmentsForChatGUID:*(void *)(a1 + 32)];
}

- (void)showMessageHistoryViewController
{
  uint64_t v13 = objc_alloc_init(CKMessageHistoryViewController);
  [(CKMessageHistoryViewController *)v13 setMessageHistoryDelegate:self];
  id v3 = [(CKCoreChatController *)self conversation];
  [(CKMessageHistoryViewController *)v13 setMessageHistoryDataSource:v3];
  id v4 = [MEMORY[0x1E4F42948] currentDevice];
  uint64_t v5 = [v4 userInterfaceIdiom];

  if (v5 == 1)
  {
    [(CKMessageHistoryViewController *)v13 setModalPresentationStyle:7];
    id v6 = [(CKChatController *)self navigationController];
    int v7 = [v6 navigationBar];

    uint64_t v8 = [(CKMessageHistoryViewController *)v13 presentationController];
    [v8 setSourceView:v7];

    [(CKChatController *)self presentViewController:v13 animated:1 completion:0];
  }
  else
  {
    int v7 = [MEMORY[0x1E4F42728] alertControllerWithTitle:0 message:0 preferredStyle:0];
    [v7 _setSeparatedHeaderContentViewController:v13];
    uint64_t v9 = (void *)MEMORY[0x1E4F42720];
    unint64_t v10 = CKFrameworkBundle();
    id v11 = [v10 localizedStringForKey:@"CANCEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
    int v12 = [v9 actionWithTitle:v11 style:1 handler:0];

    [v7 addAction:v12];
    [(CKChatController *)self presentViewController:v7 animated:1 completion:0];
  }
}

- (void)messageHistoryViewController:(id)a3 didSelectDate:(id)a4 withMessages:(id)a5
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v6 = a5;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
  id v8 = v6;
  if (v7)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(void *)v17;
LABEL_3:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v17 != v10) {
        objc_enumerationMutation(v6);
      }
      int v12 = *(void **)(*((void *)&v16 + 1) + 8 * v11);
      if (objc_msgSend(v12, "messagePartCount", (void)v16) > 0) {
        break;
      }
      if (v9 == ++v11)
      {
        uint64_t v9 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v9) {
          goto LABEL_3;
        }
        id v8 = v6;
        goto LABEL_12;
      }
    }
    id v8 = v12;

    if (!v8) {
      goto LABEL_13;
    }
    uint64_t v13 = [v8 guid];
    int v14 = [(CKCoreChatController *)self conversation];
    id v15 = (id)[v14 ensureMessageWithGUIDIsLoaded:v13];
    [(CKChatController *)self scrollToMessageGUID:v13 partIndex:0x7FFFFFFFFFFFFFFFLL highlight:1 scrollPosition:1];
  }
LABEL_12:

LABEL_13:
}

- (id)dateOfNewestVisibleMessageForMessageHistoryViewController:(id)a3
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v27 = a3;
  id v4 = [(CKChatController *)self collectionView];
  uint64_t v25 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v5 = [v25 chatItems];
  id v26 = v4;
  id v6 = [v4 indexPathsForVisibleItems];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = 0;
    uint64_t v10 = *(void *)v29;
    uint64_t v11 = &off_1E561D000;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v29 != v10) {
          objc_enumerationMutation(v6);
        }
        uint64_t v13 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        if (![v13 section])
        {
          unint64_t v14 = [v13 item];
          if (v14 < [v5 count])
          {
            id v15 = [v5 objectAtIndex:v14];
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v16 = v15;
              long long v17 = [v16 time];
              long long v18 = v17;
              if (v17 && (!v9 || [v17 compare:v9] == 1))
              {
                id v19 = v18;
                char v20 = v9;
                uint64_t v21 = v11;
                id v22 = v19;

                id v23 = v22;
                uint64_t v11 = v21;
                uint64_t v9 = v23;
              }
            }
          }
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v8);
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

- (void)sendAnimationManagerWillStartAnimation:(id)a3 context:(id)a4
{
  id v5 = a4;
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke;
  v36[3] = &unk_1E5620C40;
  void v36[4] = self;
  [MEMORY[0x1E4F42FF0] performWithoutAnimation:v36];
  id v6 = [(CKChatController *)self entryView];
  uint64_t v7 = [(CKChatController *)self collectionView];
  [v6 placeholderHeight];
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke_2;
  aBlock[3] = &unk_1E5620E38;
  uint64_t v35 = v8;
  id v9 = v6;
  id v33 = v9;
  long long v34 = self;
  uint64_t v10 = (void (**)(void))_Block_copy(aBlock);
  if ([(CKChatController *)self _shouldHideNavigationBarForSendAnimationContext:v5])
  {
    v31[0] = MEMORY[0x1E4F143A8];
    v31[1] = 3221225472;
    void v31[2] = __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke_3;
    v31[3] = &unk_1E5620C40;
    void v31[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:0x10000 delay:v31 options:0 animations:0.2 completion:0.0];
  }
  uint64_t v11 = [(CKChatController *)self throwAnimationManager];
  [v11 sourceRect];
  BOOL v12 = CGRectEqualToRect(v37, *MEMORY[0x1E4F1DB28]);

  if (!v12) {
    [v7 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerSendAnimation"];
  }
  [v7 setScrollEnabled:0];
  [(CKChatController *)self _contentInsetForSendAnimation];
  objc_msgSend(v7, "setContentInset:");
  uint64_t v13 = [v5 messages];
  unint64_t v14 = [v13 firstObject];
  uint64_t v15 = [v14 scheduleType];

  if (v15 == 2)
  {
    objc_msgSend(v7, "__ck_bottomOffset");
    uint64_t v17 = v16;
    uint64_t v19 = v18;
  }
  else
  {
    char v20 = [(CKCoreChatController *)self collectionViewController];
    uint64_t v21 = [v20 latestScheduledMessageIndexPath];
    objc_msgSend(v7, "__ck_bottomOffsetHidingIndexPath:", v21);
    uint64_t v17 = v22;
    uint64_t v19 = v23;
  }
  uint64_t v24 = (void *)MEMORY[0x1E4F42FF0];
  v26[0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  void v26[2] = __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke_4;
  _OWORD v26[3] = &unk_1E5627018;
  id v27 = v7;
  uint64_t v28 = v17;
  uint64_t v29 = v19;
  BOOL v30 = !v12;
  id v25 = v7;
  [v24 animateWithDuration:v26 animations:0.3];
  v10[2](v10);
}

void __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) entryView];
  [v1 invalidateCompositionForReason:1];
}

uint64_t __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) frame];
  int v2 = *(void **)(a1 + 40);

  return objc_msgSend(v2, "_setEntryViewFrame:animated:", 0);
}

void __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke_3(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) currentNavigationBarBasedOnSizeClass];
  [v1 setAlpha:0.0];
}

uint64_t __82__CKChatController_SendAnimation__sendAnimationManagerWillStartAnimation_context___block_invoke_4(uint64_t a1)
{
  uint64_t result = objc_msgSend(*(id *)(a1 + 32), "setContentOffset:", *(double *)(a1 + 40), *(double *)(a1 + 48));
  if (*(unsigned char *)(a1 + 56))
  {
    id v3 = *(void **)(a1 + 32);
    return [v3 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerSendAnimation"];
  }
  return result;
}

- (UIEdgeInsets)_contentInsetForSendAnimation
{
  id v3 = [(CKChatController *)self entryView];
  id v4 = [(CKChatController *)self collectionView];
  [v4 contentInset];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  [v3 bounds];
  double v12 = v11;
  [v3 placeholderHeight];
  double v14 = v8 - (v12 - v13);
  [(CKScrollViewController *)self navigationBarInsetsWithoutPalette];
  double v16 = v15;
  [(CKChatController *)self _currentlyVisibleBannerHeight];
  double v18 = v16 + v17;

  double v19 = v18;
  double v20 = v6;
  double v21 = v14;
  double v22 = v10;
  result.double right = v22;
  result.double bottom = v21;
  result.double left = v20;
  result.double top = v19;
  return result;
}

- (void)sendAnimationManagerDidStopAnimation:(id)a3 context:(id)a4
{
  if ([(CKChatController *)self _shouldHideNavigationBarForSendAnimationContext:a4])
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    void v7[2] = __80__CKChatController_SendAnimation__sendAnimationManagerDidStopAnimation_context___block_invoke;
    _OWORD v7[3] = &unk_1E5620C40;
    void v7[4] = self;
    [MEMORY[0x1E4F42FF0] animateWithDuration:0x20000 delay:v7 options:0 animations:0.2 completion:0.0];
  }
  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"ThrowAnimation"];
  [(CKChatController *)self setIsAnimatingMessageSend:1];
  double v5 = [(CKChatController *)self _fullscreenEffectsManager];
  [v5 endHoldingUpdatesForKey:@"CKFullscreenUpdatesSendAnimation"];

  double v6 = [(CKChatController *)self collectionView];
  [v6 endHoldingContentOffsetUpdatesForReason:@"ChatControllerSendAnimation"];

  [(CKChatController *)self setThrowAnimationManager:0];
  [(CKChatController *)self _finishSendAnimation];
}

void __80__CKChatController_SendAnimation__sendAnimationManagerDidStopAnimation_context___block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) currentNavigationBarBasedOnSizeClass];
  [v1 setAlpha:1.0];
}

- (id)_fullscreenEffectsManager
{
  int v2 = [(CKCoreChatController *)self collectionViewController];
  id v3 = [v2 fullscreenEffectManager];

  return v3;
}

- (void)_finishSendAnimation
{
  id v3 = [(CKCoreChatController *)self conversation];
  [v3 setIgnoringTypingUpdates:0];

  if (![(CKChatController *)self isAnimatingMessageSend]) {
    return;
  }
  id v4 = [(CKCoreChatController *)self collectionViewController];
  [v4 setHiddenItems:0];

  double v5 = [(CKCoreChatController *)self conversation];
  double v6 = [v5 chat];
  uint64_t v7 = [v6 guid];
  if (v7)
  {
    double v8 = (void *)v7;
    id v40 = [(CKCoreChatController *)self conversation];
    double v9 = [v40 chat];
    double v10 = [v9 guid];
    double v11 = +[CKConversationList sharedConversationList];
    double v12 = [v11 pendingConversation];
    double v13 = [v12 chat];
    double v14 = [v13 guid];
    int v38 = [v10 isEqualToString:v14];

    if (!v38) {
      goto LABEL_7;
    }
    double v5 = +[CKConversationList sharedConversationList];
    [v5 unpendConversation];
  }
  else
  {
  }
LABEL_7:
  double v15 = [(CKCoreChatController *)self conversation];
  double v16 = [(CKCoreChatController *)self conversation];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    double v18 = +[CKConversationList sharedConversationList];
    double v19 = [v15 chat];
    double v20 = [v18 conversationForExistingChat:v19];

    if (v20)
    {
      id v21 = v20;

      double v15 = v21;
    }
  }
  [(CKChatController *)self _didSendCompositionInConversation:v15];
  double v22 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v23 = [v22 collectionView];
  [(CKChatController *)self setSendingMessage:0];
  [(CKChatController *)self setIsAnimatingMessageSend:0];
  [(CKChatController *)self endHoldingAutorotationForKey:@"CKHoldingRotationReasonThrowAnimation"];
  [v23 endDisablingTranscriptDynamicsForReason:@"MessageSendAnimation"];
  [v23 setScrollEnabled:1];
  uint64_t v24 = [(CKCoreChatController *)self conversation];
  id v25 = [v24 chat];
  uint64_t v26 = [v25 guid];
  if (!v26)
  {

    goto LABEL_15;
  }
  id v27 = (void *)v26;
  CGRect v37 = [(CKCoreChatController *)self conversation];
  double v36 = [v37 chat];
  uint64_t v28 = [v36 guid];
  +[CKConversationList sharedConversationList];
  uint64_t v29 = v41 = v15;
  [v29 pendingConversation];
  BOOL v30 = v39 = v22;
  long long v31 = [v30 chat];
  double v32 = [v31 guid];
  int v35 = [v28 isEqualToString:v32];

  double v22 = v39;
  double v15 = v41;

  if (v35)
  {
    uint64_t v24 = +[CKConversationList sharedConversationList];
    [v24 unpendConversation];
LABEL_15:
  }
  [(CKChatController *)self _updateNavigationButtons];
  id v33 = [v22 chat];
  [v33 endHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B968]];
  [MEMORY[0x1E4F42FF8] attemptRotationToDeviceOrientation];
  if ([v23 transcriptScrollIntent] == 3)
  {
    long long v34 = IMLogHandleForCategory();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(SendAnimation) _finishSendAnimation](v34);
    }

    [v22 updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset];
  }
}

- (BOOL)_shouldHideNavigationBarForSendAnimationContext:(id)a3
{
  id v4 = a3;
  uint64_t v17 = 0;
  double v18 = &v17;
  uint64_t v19 = 0x2020000000;
  char v20 = 0;
  double v5 = [v4 containerView];
  [(CKChatController *)self _convertedNavigationBarFrameInSendAnimationContainerView:v5];
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  double v14 = [v4 framesOfAddedChatItems];
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  void v16[2] = __83__CKChatController_SendAnimation___shouldHideNavigationBarForSendAnimationContext___block_invoke;
  v16[3] = &unk_1E5627040;
  void v16[5] = v7;
  v16[6] = v9;
  v16[7] = v11;
  v16[8] = v13;
  void v16[4] = &v17;
  [v14 enumerateObjectsUsingBlock:v16];
  LOBYTE(v5) = *((unsigned char *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return (char)v5;
}

void __83__CKChatController_SendAnimation___shouldHideNavigationBarForSendAnimationContext___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  [a2 CGRectValue];
  double MinY = CGRectGetMinY(v7);
  if (MinY < CGRectGetMaxY(*(CGRect *)(a1 + 40)))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
}

- (CGRect)_convertedNavigationBarFrameInSendAnimationContainerView:(id)a3
{
  id v4 = a3;
  double v5 = [(CKChatController *)self currentNavigationBarBasedOnSizeClass];
  uint64_t v6 = [v5 superview];
  [v5 frame];
  objc_msgSend(v6, "convertRect:toView:", v4);
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  double v15 = v8;
  double v16 = v10;
  double v17 = v12;
  double v18 = v14;
  result.size.double height = v18;
  result.size.double width = v17;
  result.origin.double y = v16;
  result.origin.double x = v15;
  return result;
}

- (BOOL)throwAnimationUsesAnimatedReloadForMessages:(id)a3
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  char v5 = [v4 isDiffableTranscriptDataSourceEnabled];

  if (v5)
  {
    BOOL v6 = 0;
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v7 = v3;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v16;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v16 != v10) {
            objc_enumerationMutation(v7);
          }
          double v12 = objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * i), "balloonBundleID", (void)v15);
          uint64_t v13 = [v12 length];

          if (v13)
          {
            BOOL v6 = 0;
            goto LABEL_13;
          }
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
    BOOL v6 = 1;
LABEL_13:
  }
  return v6;
}

- (void)throwAnimationManager:(id)a3 canNowSendMessages:(id)a4
{
  id v5 = a4;
  BOOL v6 = [(CKChatController *)self throwAnimationUsesAnimatedReloadForMessages:v5];
  id v7 = [(CKCoreChatController *)self collectionViewController];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = __76__CKChatController_SendAnimation__throwAnimationManager_canNowSendMessages___block_invoke;
  void v9[3] = &unk_1E5620AF8;
  id v10 = v5;
  double v11 = self;
  id v8 = v5;
  [v7 updateTranscript:v9 animated:v6 completion:0];
}

void __76__CKChatController_SendAnimation__throwAnimationManager_canNowSendMessages___block_invoke(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v10 + 1) + 8 * i);
        id v8 = *(void **)(a1 + 40);
        uint64_t v9 = objc_msgSend(v8, "conversation", (void)v10);
        [v8 sendMessage:v7 forConversation:v9 newComposition:0];
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

- (CGRect)throwAnimationWindowFrame:(id)a3
{
  uint64_t v3 = [(CKChatController *)self navigationController];
  uint64_t v4 = [v3 view];
  [v4 frame];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  double v13 = v6;
  double v14 = v8;
  double v15 = v10;
  double v16 = v12;
  result.size.double height = v16;
  result.size.double width = v15;
  result.origin.double y = v14;
  result.origin.double x = v13;
  return result;
}

- (double)throwAnimationFinalFrameOffset:(id)a3
{
  return 0.0;
}

- (id)throwAnimationContainerSuperview:(id)a3
{
  uint64_t v3 = [(CKChatController *)self view];
  uint64_t v4 = [v3 window];

  return v4;
}

- (double)throwAnimationManagerTopHeaderHeight:(id)a3
{
  [(CKScrollViewController *)self navigationBarInsetsWithoutPalette];
  double v5 = v4;
  [(CKChatController *)self _currentlyVisibleBannerHeight];
  return v5 + v6;
}

- (void)throwAnimationManagerPrepareForThrowAnimation:(id)a3 context:(id)a4
{
  -[CKChatController setIsAnimatingMessageSend:](self, "setIsAnimatingMessageSend:", 1, a4);
  id v7 = [(CKChatController *)self collectionView];
  [v7 beginDisablingTranscriptDynamicsForReason:@"MessageSendAnimation"];
  [(CKChatController *)self beginHoldingAutorotationForKey:@"CKHoldingRotationReasonThrowAnimation"];
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"ThrowAnimation"];
  double v5 = [(CKCoreChatController *)self chat];
  [v5 beginHoldingChatItemsUpdatesForReason:*MEMORY[0x1E4F6B968]];
  double v6 = [(CKChatController *)self _fullscreenEffectsManager];
  [v6 beginHoldingUpdatesForKey:@"CKFullscreenUpdatesSendAnimation"];
}

- (BOOL)wantsOverKeyboardAnimationForSendAnimationContext:(id)a3
{
  return 1;
}

- (id)audioMessageThrowBalloonsForSendAnimationContext:(id)a3
{
  v33[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  double v5 = [v4 messages];
  double v6 = [(CKCoreChatController *)self collectionViewController];
  id v7 = [v6 chatItems];

  double v8 = objc_msgSend(v7, "__ck_indexesOfPartsOfMessages:", v5);
  double v9 = objc_msgSend(v7, "objectAtIndexedSubscript:", objc_msgSend(v8, "firstIndex"));
  double v10 = CKBalloonViewForClass((objc_class *)[v9 balloonViewClass]);
  [v10 configureForMessagePart:v9];
  [v10 setCanUseOpaqueMask:0];
  [v10 prepareForDisplayIfNeeded];
  id v11 = objc_alloc(MEMORY[0x1E4F42FF0]);
  double v12 = [(CKChatController *)self throwAnimationManager];
  [v12 audioMessageSourceRect];
  double v13 = objc_msgSend(v11, "initWithFrame:");

  double v14 = [MEMORY[0x1E4F428B8] clearColor];
  [v13 setBackgroundColor:v14];

  double v15 = [v4 containerView];

  [v15 addSubview:v13];
  double v16 = *MEMORY[0x1E4F1DAD8];
  double v17 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
  long long v18 = [(CKChatController *)self throwAnimationManager];
  [v18 audioMessageSourceRect];
  double v20 = v19;
  double v22 = v21;

  [v9 size];
  double v24 = v20 - v23;
  [v9 size];
  objc_msgSend(v10, "setFrame:", v24, 0.0, v25, v26);
  [v10 layoutIfNeeded];
  [v13 addSubview:v10];
  id v27 = [(CKChatController *)self throwAnimationManager];
  uint64_t v28 = [v27 audioRecordingPillViewSnapshot];

  objc_msgSend(v28, "setFrame:", v16, v17, v20, v22);
  [v13 insertSubview:v28 aboveSubview:v10];
  id v29 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  [v29 setObject:v13 forKeyedSubscript:@"CKSendAnimationSupplementaryViewTextViewContainerView"];
  [v29 setObject:v28 forKeyedSubscript:@"CKSendAnimationSupplementaryViewAudioMessagePillViewSnapshot"];
  BOOL v30 = objc_alloc_init(CKThrowBalloonViewAttributes);
  [(CKThrowBalloonViewAttributes *)v30 setSupplementaryViews:v29];
  [(CKThrowBalloonViewAttributes *)v30 setThrowBalloonView:v10];
  v33[0] = v30;
  long long v31 = [MEMORY[0x1E4F1C978] arrayWithObjects:v33 count:1];

  return v31;
}

- (id)throwBalloonsForSendAnimationContext:(id)a3
{
  id v4 = a3;
  double v5 = [(CKCoreChatController *)self collectionViewController];
  double v6 = [(CKChatController *)self entryView];
  id v7 = [v6 contentView];
  id v56 = [v4 containerView];
  double v8 = [v6 contentView];
  uint64_t v55 = [v8 pluginView];

  double v9 = [(CKChatController *)self composition];
  double v10 = [v9 shelfPluginPayload];

  id v11 = [v10 pluginBundleID];
  char v49 = [v11 isEqualToString:*MEMORY[0x1E4F6CBF8]];

  double v12 = [v10 pluginBundleID];
  double v13 = IMBalloonExtensionIDWithSuffix();
  if ([v12 isEqualToString:v13]
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    char v48 = [v10 shouldSendAsMediaObject];
  }
  else
  {
    char v48 = 0;
  }

  double v14 = [v6 waveformView];
  double v15 = [v14 waveformImageView];
  [v15 bounds];
  double v17 = v16;
  float64x2_t v50 = v14;
  long long v18 = [v14 waveformImageView];
  objc_msgSend(v18, "sizeThatFits:", *MEMORY[0x1E4F1DB30], *(double *)(MEMORY[0x1E4F1DB30] + 8));
  BOOL v47 = v17 > v19;

  double v20 = [v4 messages];
  double v21 = [v20 lastObject];
  id v51 = v5;
  double v22 = [v5 chatItems];
  objc_msgSend(v22, "__ck_indexesOfPartsOfMessages:", v20);
  v54 = long long v53 = v21;
  int v52 = [v21 isAudioMessage];
  double v23 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v24 = [v23 isAudioMessagesEntryViewRecordingEnabled];

  if (v24)
  {
    unint64_t v25 = [v54 firstIndex];
    if (v25 != 0x7FFFFFFFFFFFFFFFLL)
    {
      unint64_t v26 = v25;
      if (v25 < [v22 count])
      {
        id v27 = [v22 objectAtIndexedSubscript:v26];
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v28 = CKBalloonViewForClass((objc_class *)[v27 balloonViewClass]);
          objc_opt_class();
          char isKindOfClass = objc_opt_isKindOfClass();

          if (v52 && (isKindOfClass & 1) != 0)
          {
            id v30 = [(CKChatController *)self audioMessageThrowBalloonsForSendAnimationContext:v4];
            goto LABEL_21;
          }
        }
        else
        {
        }
      }
    }
  }
  uint64_t v79 = 0;
  float64x2_t v80 = (double *)&v79;
  uint64_t v81 = 0x3010000000;
  uint64_t v83 = 0;
  uint64_t v84 = 0;
  double v82 = "";
  [v7 bounds];
  objc_msgSend(v7, "convertRect:toView:", v56);
  uint64_t v83 = v31;
  uint64_t v84 = v32;
  [v7 contentOffset];
  v80[5] = v80[5] - v33;
  long long v34 = [v4 messages];
  int v35 = [v34 firstObject];
  uint64_t v36 = [v35 scheduleType];

  if ([v6 shouldShowSubject]
    && ([v53 subject], CGRect v37 = objc_claimAutoreleasedReturnValue(), v37, !v37)
    || v55
    || v36 == 2)
  {
    uint64_t v41 = [v7 textView];
    [v41 frame];
    v80[5] = v42 + v80[5];
  }
  else if ([v4 shouldUseQuickReplySourceRect])
  {
    [v4 quickReplySourceRect];
    int v38 = v80;
    *((void *)v80 + 4) = v39;
    *((void *)v38 + 5) = v40;
  }
  BOOL v43 = +[CKUIBehavior sharedBehaviors];
  [v43 balloonMaskTailSizeForTailShape:1];
  uint64_t v45 = v44;

  v78[0] = 0;
  v78[1] = v78;
  v78[2] = 0x2020000000;
  void v78[3] = 0;
  uint64_t v72 = 0;
  uint64_t v73 = &v72;
  uint64_t v74 = 0x3032000000;
  uint64_t v75 = __Block_byref_object_copy__33;
  id v76 = __Block_byref_object_dispose__33;
  id v77 = 0;
  id v77 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v57[0] = MEMORY[0x1E4F143A8];
  v57[1] = 3221225472;
  id v57[2] = __72__CKChatController_SendAnimation__throwBalloonsForSendAnimationContext___block_invoke;
  v57[3] = &unk_1E5627068;
  char v68 = v49;
  char v69 = v48;
  float64x2_t v64 = &v72;
  double v65 = v78;
  void v57[4] = self;
  id v58 = v56;
  id v59 = v6;
  uint64_t v67 = v45;
  id v60 = v4;
  float64x2_t v66 = &v79;
  char v70 = v52;
  BOOL v71 = v47;
  id v61 = v54;
  id v62 = v7;
  id v63 = v55;
  [v22 enumerateObjectsAtIndexes:v61 options:0 usingBlock:v57];
  id v30 = (id)v73[5];

  _Block_object_dispose(&v72, 8);
  _Block_object_dispose(v78, 8);
  _Block_object_dispose(&v79, 8);
LABEL_21:

  return v30;
}

void __72__CKChatController_SendAnimation__throwBalloonsForSendAnimationContext___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  if (!*(unsigned char *)(a1 + 120) && !*(unsigned char *)(a1 + 121) || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    v186[0] = 0;
    double v185 = 1.0;
    double v6 = objc_alloc_init(CKThrowBalloonViewAttributes);
    id v181 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    id v7 = v4;
    double v8 = CKBalloonViewForClass((objc_class *)[v7 balloonViewClass]);
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        double v9 = [*(id *)(a1 + 32) entryView];
        double v10 = [v9 contentView];
        id v11 = [v10 pluginSnapshotViewForPluginAtIndex:*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) isFromTextAttachment:v186 startingScaleMultiplier:&v185];

        double v12 = [*(id *)(a1 + 32) collectionViewController];
        double v13 = [v12 transcriptIdentifier];
        [v8 configureForTranscriptPlugin:v7 context:v13];

        [v8 setPluginSnapshotViewForThrowAnimation:v11];
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          [v8 configureForTranscriptPlugin:v7];
        }
      }
      ++*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        [v8 configureForMessagePart:v7];
      }
      else {
        [v8 configureForChatItem:v7];
      }
    }
    [v8 setCanUseOpaqueMask:0];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      [*(id *)(a1 + 40) addSubview:v8];
    }
    [v7 size];
    double v15 = v14;
    double v17 = v16;
    [v8 prepareForDisplayIfNeeded];
    long long v18 = +[CKUIBehavior sharedBehaviors];
    if (v7) {
      [v7 balloonDescriptor];
    }
    else {
      memset(v184, 0, sizeof(v184));
    }
    [v18 balloonMaskSizeWithBalloonDescriptor:v184];
    [v8 setWantsSkinnyMask:v15 < v19];

    int v20 = [v7 itemIsReplyContextPreview];
    double v21 = +[CKUIBehavior sharedBehaviors];
    double v22 = v21;
    if (v20) {
      [v21 textReplyPreviewBalloonMinHeight];
    }
    else {
      [v21 textBalloonMinHeight];
    }
    [v8 setWantsMultilineMask:v17 > v23];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double rect_16 = v15;
      double rect_24 = v17;
      objc_msgSend(v8, "setFrame:", *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8), v15, v17);
      [v8 layoutIfNeeded];
      [v8 bounds];
      CGFloat v25 = v24;
      CGFloat recta = v24;
      double v27 = v26;
      CGFloat v29 = v28;
      CGFloat v31 = v30;
      uint64_t v32 = [v8 textView];
      [v32 frame];
      CGFloat v34 = v33;
      CGFloat v36 = v35;
      CGFloat v38 = v37;
      CGFloat v40 = v39;
      double v171 = v35 - v27;
      v187.origin.double x = v25;
      v187.origin.double y = v27;
      v187.size.double width = v29;
      v187.size.double height = v31;
      double MaxY = CGRectGetMaxY(v187);
      v188.origin.double x = v34;
      v188.origin.double y = v36;
      v188.size.double width = v38;
      v188.size.double height = v40;
      double rect_8 = MaxY - CGRectGetMaxY(v188);
      v189.origin.double x = recta;
      v189.origin.double y = v27;
      v189.size.double width = v29;
      v189.size.double height = v31;
      CGRectGetMaxX(v189);
      v190.origin.double x = v34;
      v190.origin.double y = v36;
      v190.size.double width = v38;
      v190.size.double height = v40;
      CGRectGetMaxX(v190);

      [*(id *)(a1 + 48) coverViewWidth];
      double v43 = v42;
      double v44 = *(double *)(a1 + 112);
      if ([*(id *)(a1 + 56) shouldUseQuickReplySourceRect])
      {
        [*(id *)(a1 + 56) quickReplySourceRect];
        double v46 = v45;
      }
      else
      {
        double v46 = v43 + v44;
      }
      double v47 = v171;
      double v15 = rect_16;
      double v17 = rect_24;
    }
    else
    {
      double v47 = *MEMORY[0x1E4F437F8];
      double rect_8 = *(double *)(MEMORY[0x1E4F437F8] + 16);
      double v46 = *(double *)(MEMORY[0x1E4F1DB28] + 16);
    }
    if (*(unsigned char *)(a1 + 122))
    {
      char v48 = [*(id *)(a1 + 48) waveformView];
      [v48 frame];
      double v50 = v49;
      double v52 = v51;
      double v54 = v53;
      double v56 = v55;
      if (objc_opt_respondsToSelector())
      {
        if (*(unsigned char *)(a1 + 123)) {
          uint64_t v57 = 8;
        }
        else {
          uint64_t v57 = 4;
        }
        [v8 setWaveformContentMode:v57];
      }
    }
    else
    {
      uint64_t v58 = *(void *)(*(void *)(a1 + 104) + 8);
      double v50 = *(double *)(v58 + 32);
      double v52 = *(double *)(v58 + 40) - v47;
      double v56 = v17;
      double v54 = v15;
    }
    if ([*(id *)(a1 + 64) firstIndex] == a3)
    {
      id v59 = [*(id *)(a1 + 72) pluginView];
      BOOL v60 = v59 != 0;
    }
    else
    {
      BOOL v60 = 0;
    }
    objc_opt_class();
    int isKindOfClass = objc_opt_isKindOfClass();
    BOOL v62 = v186[0] != 0;
    if (v60)
    {
      id v63 = *(void **)(a1 + 40);
      [*(id *)(a1 + 80) frame];
      double v65 = v64;
      double v67 = v66;
      double v69 = v68;
      double v71 = v70;
      uint64_t v72 = [*(id *)(a1 + 80) superview];
      objc_msgSend(v63, "convertRect:fromView:", v72, v65, v67, v69, v71);
      double v74 = v73;
      double v76 = v75;
      double v78 = v77;
      double v80 = v79;

      uint64_t v81 = v8;
      double v82 = v74;
      double v83 = v76;
      double v84 = v78;
      double v85 = v80;
LABEL_43:
      objc_msgSend(v81, "setFrame:", v82, v83, v84, v85);
      [v8 layoutIfNeeded];
      [v8 prepareForDisplayIfNeeded];
LABEL_44:
      [(CKThrowBalloonViewAttributes *)v6 setSupplementaryViews:v181];
      [(CKThrowBalloonViewAttributes *)v6 setThrowBalloonView:v8];
      [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) addObject:v6];

      goto LABEL_45;
    }
    int v86 = isKindOfClass;
    if ([v8 isAudioMessage])
    {
      objc_msgSend(*(id *)(a1 + 40), "convertRect:fromView:", *(void *)(a1 + 48), v50, v52, v54, v56);
      uint64_t v81 = v8;
      goto LABEL_43;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double rect_16a = v15;
      double rect_24a = v17;
      id v87 = v8;
      v191.origin.double x = v50;
      v191.origin.double y = v52;
      v191.size.double width = v54;
      v191.size.double height = v56;
      double Height = CGRectGetHeight(v191);
      id v89 = objc_msgSend(objc_alloc(MEMORY[0x1E4F42FF0]), "initWithFrame:", v50, v52, v46, Height);
      id v90 = [MEMORY[0x1E4F428B8] clearColor];
      [v89 setBackgroundColor:v90];

      [*(id *)(a1 + 40) addSubview:v89];
      [v181 setObject:v89 forKeyedSubscript:@"CKSendAnimationSupplementaryViewTextViewContainerView"];
      [v87 frame];
      double v92 = v91;
      double v94 = v93;
      v192.origin.double x = v50;
      v192.origin.double y = v52;
      v192.size.double width = v46;
      v192.size.double height = Height;
      double Width = CGRectGetWidth(v192);
      [v87 frame];
      double v96 = Width - CGRectGetWidth(v193);
      uint64_t v97 = objc_msgSend(objc_alloc(MEMORY[0x1E4F42FF0]), "initWithFrame:", v96, 0.0, v92, v94);
      [v89 addSubview:v97];
      objc_msgSend(v87, "setFrame:", v96, 0.0, v92, v94);
      CGFloat rect = v89;
      [v89 addSubview:v87];
      id v172 = v87;
      [v87 prepareForDisplayIfNeeded];
      double v98 = CKBalloonViewForClass((objc_class *)[v7 balloonViewClass]);
      [v98 configureForMessagePart:v7];
      if ([v98 balloonStyle] - 3 <= 1) {
        [v98 setBalloonStyle:0];
      }
      id v99 = +[CKUIBehavior sharedBehaviors];
      if (v7) {
        [v7 balloonDescriptor];
      }
      else {
        memset(v183, 0, sizeof(v183));
      }
      [v99 balloonMaskSizeWithBalloonDescriptor:v183];
      [v98 setWantsSkinnyMask:rect_16a < v113];

      int v114 = [v7 itemIsReplyContextPreview];
      uint64_t v115 = +[CKUIBehavior sharedBehaviors];
      __int16 v116 = v115;
      uint64_t v169 = v97;
      if (v114) {
        [v115 textReplyPreviewBalloonMinHeight];
      }
      else {
        [v115 textBalloonMinHeight];
      }
      [v98 setWantsMultilineMask:rect_24a > v117];

      [v98 setColor:8];
      [v98 setCanUseOpaqueMask:0];
      [v98 prepareForDisplayIfNeeded];
      __int16 v118 = [v98 textView];
      uint64_t v119 = [MEMORY[0x1E4F428B8] labelColor];
      __int16 v120 = [v7 sendAnimationTextWithColor:v119];
      [v118 setAttributedText:v120];

      objc_msgSend(v98, "setFrame:", v96, 0.0, v92, v94);
      [v98 layoutIfNeeded];
      [rect insertSubview:v98 aboveSubview:v172];
      [v181 setObject:v98 forKeyedSubscript:@"CKSendAnimationSupplementaryViewWhiteTextFadeView"];
      uint64_t v121 = [v172 textView];
      uint64_t v122 = [v121 text];
      LODWORD(v119) = [v122 _isNaturallyRTL];

      if (v119)
      {
        double v123 = [v172 textView];
        [v123 setHidden:1];

        double v124 = [v98 textView];
        [v124 setHidden:1];

        id v125 = objc_alloc_init(MEMORY[0x1E4F42F58]);
        v126 = [v7 transcriptText];
        [v125 setAttributedText:v126];

        float64x2_t v127 = [MEMORY[0x1E4F428B8] clearColor];
        [v125 setBackgroundColor:v127];

        [v125 setTextAlignment:2];
        float64_t v128 = [v172 textView];
        [v128 textContainerInset];
        objc_msgSend(v125, "setTextContainerInset:");

        float64x2_t v129 = [*(id *)(a1 + 48) contentView];
        rect_24b = [v129 textView];

        [rect_24b bounds];
        objc_msgSend(rect_24b, "convertRect:toView:", rect);
        double v131 = v130;
        double v132 = v47;
        double v134 = v133;
        double v136 = v135;
        double v138 = v137;
        objc_msgSend(v125, "setFrame:");
        [rect addSubview:v125];
        id v139 = objc_alloc_init(MEMORY[0x1E4F42F58]);
        double v140 = [MEMORY[0x1E4F428B8] labelColor];
        double v141 = [v7 sendAnimationTextWithColor:v140];
        [v139 setAttributedText:v141];

        v142 = [MEMORY[0x1E4F428B8] clearColor];
        [v139 setBackgroundColor:v142];

        double v143 = v134;
        double v47 = v132;
        objc_msgSend(v139, "setFrame:", v131, v143, v136, v138);
        [v139 setTextAlignment:2];
        v144 = [v172 textView];
        [v144 textContainerInset];
        objc_msgSend(v139, "setTextContainerInset:");

        [rect addSubview:v139];
        [v181 setObject:v139 forKeyedSubscript:@"CKSendAnimationSupplementaryViewWhiteTextFadeViewRTL"];
        [v181 setObject:v125 forKeyedSubscript:@"CKSendAnimationSupplementaryViewBlueTextFadeViewRTL"];
      }
      if (objc_msgSend(*(id *)(a1 + 56), "shouldUseQuickReplySourceRect", v169))
      {
        v145 = [*(id *)(a1 + 32) throwAnimationManager];
        double v146 = [v145 quickReplySnapshot];

        double v147 = [*(id *)(a1 + 32) view];
        double v148 = [*(id *)(a1 + 32) collectionView];
        [v147 insertSubview:v146 belowSubview:v148];

        [v181 setObject:v146 forKeyedSubscript:@"CKSendAnimationSupplementaryViewQuickReplySnapshot"];
      }
      else
      {
        double v149 = v47;
        double v150 = [*(id *)(a1 + 48) sendButton];
        double v146 = [v150 button];

        [v146 frame];
        double v152 = v151;
        double v154 = v153;
        double v156 = v155;
        double v158 = v157;
        id v159 = [v146 superview];
        objc_msgSend(rect, "convertRect:fromView:", v159, v152, v154, v156, v158);
        double v161 = v160;
        double v163 = v162;
        double v165 = v164;
        double v167 = v166;

        v168 = [v146 snapshotViewAfterScreenUpdates:0];
        objc_msgSend(v168, "setFrame:", v161, v163, v165, v167);
        [rect insertSubview:v168 aboveSubview:v98];
        [v181 setObject:v168 forKeyedSubscript:@"CKSendAnimationSupplementaryViewSendButtonSnapshot"];
        if ([*(id *)(a1 + 64) lastIndex] != a3) {
          [v168 setHidden:1];
        }

        double v47 = v149;
      }

      *(double *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) = v56
                                                                   - (rect_8
                                                                    + v47)
                                                                   + *(double *)(*(void *)(*(void *)(a1 + 104) + 8)
                                                                               + 40);

      goto LABEL_44;
    }
    int v100 = v86 & v62;
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_opt_class();
      if (!(v100 & 1 | ((objc_opt_isKindOfClass() & 1) == 0)))
      {
LABEL_53:
        id v101 = v8;
        double v102 = v50;
        double v103 = v52;
        double v104 = v54;
LABEL_64:
        objc_msgSend(v101, "setFrame:", v102, v103, v104, v56);
        [v8 layoutIfNeeded];
        [v8 prepareForDisplayIfNeeded];
        *(double *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) = v56
                                                                     - (rect_8
                                                                      + v47)
                                                                     + *(double *)(*(void *)(*(void *)(a1 + 104)
                                                                                             + 8)
                                                                                 + 40);
        goto LABEL_44;
      }
    }
    else if (!v100)
    {
      goto LABEL_53;
    }
    BOOL v105 = +[CKUIBehavior sharedBehaviors];
    [*(id *)(a1 + 48) coverViewWidth];
    objc_msgSend(v105, "composeBalloonMaxWidthForEntryContentViewWidth:");
    double v106 = v15;
    double v108 = v107 / v15;

    double v109 = v106 * v108;
    double v110 = v17 * v108;
    if (v108 >= 1.0)
    {
      double v110 = v56;
      double v109 = v54;
    }
    if (v185 >= 1.0) {
      double v56 = v110;
    }
    else {
      double v56 = v17 * v185;
    }
    if (v185 >= 1.0) {
      double v111 = v109;
    }
    else {
      double v111 = v106 * v185;
    }
    objc_msgSend(*(id *)(a1 + 48), "marginInsets", v109, v110);
    double v102 = v50 + v112;
    id v101 = v8;
    double v103 = v52;
    double v104 = v111;
    goto LABEL_64;
  }
  double v5 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
  double v6 = [MEMORY[0x1E4F1CA98] null];
  [v5 addObject:v6];
LABEL_45:
}

- (id)previewItemsForMediaObject:(id)a3 currentItemIndex:(int64_t *)a4 containsRestoring:(BOOL *)a5
{
  id v8 = a3;
  if (v8)
  {
    id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v35 = 0;
    CGFloat v36 = &v35;
    uint64_t v37 = 0x2020000000;
    uint64_t v38 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v31 = 0;
    uint64_t v32 = &v31;
    uint64_t v33 = 0x2020000000;
    char v34 = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __93__CKChatController_QuickLook__previewItemsForMediaObject_currentItemIndex_containsRestoring___block_invoke;
    aBlock[3] = &unk_1E5627C28;
    id v10 = v9;
    id v27 = v10;
    id v11 = v8;
    id v28 = v11;
    CGFloat v29 = &v35;
    double v30 = &v31;
    double v12 = _Block_copy(aBlock);
    double v13 = [(CKChatController *)self _chatItemForMediaObject:v11];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v14 = v13;
      double v15 = [v14 layoutGroupIdentifier];
    }
    else
    {
      double v15 = 0;
    }
    double v17 = [(CKCoreChatController *)self collectionViewController];
    long long v18 = [v17 chatItems];

    v23[0] = MEMORY[0x1E4F143A8];
    v23[1] = 3221225472;
    v23[2] = __93__CKChatController_QuickLook__previewItemsForMediaObject_currentItemIndex_containsRestoring___block_invoke_2;
    id v23[3] = &unk_1E5627C50;
    id v19 = v15;
    id v24 = v19;
    id v20 = v12;
    id v25 = v20;
    [v18 enumerateObjectsUsingBlock:v23];
    if (a4) {
      *a4 = v36[3];
    }
    if (a5) {
      *a5 = *((unsigned char *)v32 + 24);
    }
    double v21 = v25;
    id v16 = v10;

    _Block_object_dispose(&v31, 8);
    _Block_object_dispose(&v35, 8);
  }
  else
  {
    id v16 = 0;
  }

  return v16;
}

void __93__CKChatController_QuickLook__previewItemsForMediaObject_currentItemIndex_containsRestoring___block_invoke(uint64_t a1, void *a2)
{
  id v10 = a2;
  int v3 = [v10 shouldBeQuickLooked];
  id v4 = v10;
  if (v3)
  {
    double v5 = [v10 transfer];
    int v6 = [v5 isRestoring];
    if ((v6 & 1) != 0 || [v5 isFileDataReady])
    {
      [*(id *)(a1 + 32) addObject:v10];
      id v7 = [v10 transferGUID];
      id v8 = [*(id *)(a1 + 40) transferGUID];
      int v9 = [v7 isEqualToString:v8];

      if (v9) {
        *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) count] - 1;
      }
      if (v6) {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      }
    }

    id v4 = v10;
  }
}

void __93__CKChatController_QuickLook__previewItemsForMediaObject_currentItemIndex_containsRestoring___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (([v3 itemIsReplyContextPreview] & 1) == 0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      if (![*(id *)(a1 + 32) length]
        || (id v4 = *(void **)(a1 + 32),
            [v3 layoutGroupIdentifier],
            double v5 = objc_claimAutoreleasedReturnValue(),
            LODWORD(v4) = [v4 isEqualToString:v5],
            v5,
            v4))
      {
        int v6 = [v3 mediaObject];
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_16:
      }
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        if (![*(id *)(a1 + 32) length]
          || (id v7 = *(void **)(a1 + 32),
              [v3 layoutGroupIdentifier],
              id v8 = objc_claimAutoreleasedReturnValue(),
              LODWORD(v7) = [v7 isEqualToString:v8],
              v8,
              v7))
        {
          int v6 = [v3 mediaObjects];
          long long v13 = 0u;
          long long v14 = 0u;
          long long v15 = 0u;
          long long v16 = 0u;
          uint64_t v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
          if (v9)
          {
            uint64_t v10 = v9;
            uint64_t v11 = *(void *)v14;
            do
            {
              uint64_t v12 = 0;
              do
              {
                if (*(void *)v14 != v11) {
                  objc_enumerationMutation(v6);
                }
                (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
                ++v12;
              }
              while (v10 != v12);
              uint64_t v10 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
            }
            while (v10);
          }
          goto LABEL_16;
        }
      }
    }
  }
}

- (void)updateQLPreviewControllerIfVisible
{
  id v3 = [(CKChatController *)self navigationController];
  id v4 = [v3 visibleViewController];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v4;
    int v6 = [v5 currentPreviewItem];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
      char v11 = 0;
      id v7 = [(CKChatController *)self previewItemsForMediaObject:v6 currentItemIndex:&v12 containsRestoring:&v11];
      id v8 = [v5 dataSource];
      [v8 setPreviewItems:v7];

      if (v11)
      {
        uint64_t v9 = CKFrameworkBundle();
        uint64_t v10 = [v9 localizedStringForKey:@"RESTORING" value:&stru_1EDE4CA38 table:@"ChatKit"];
        [v5 setLoadingTextForMissingFiles:v10];
      }
      else
      {
        [v5 setLoadingTextForMissingFiles:&stru_1EDE4CA38];
      }
      [v5 reloadData];
      [v5 setCurrentPreviewItemIndex:v12];
      [v5 refreshCurrentPreviewItem];
    }
    else
    {
      if (!IMOSLoggingEnabled())
      {
LABEL_11:

        goto LABEL_12;
      }
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "currentPreviewItem could not be cast as CKMediaObject", buf, 2u);
      }
    }

    goto LABEL_11;
  }
LABEL_12:
}

- (void)updateQLPreviewControllerBarButtonItemsIfVisible
{
  id v2 = [(CKChatController *)self previewController];
  [v2 updateBarButtonItems];
}

- (BOOL)_displayMediaObjectFullscreen:(id)a3
{
  return 0;
}

- (BOOL)_displayPreviewItemForMediaObject:(id)a3
{
  id v4 = a3;
  id v5 = +[CKUIBehavior sharedBehaviors];
  int v6 = [v5 isSizeConstrained];

  if (v6)
  {
    BOOL v7 = [(CKChatController *)self _displayMediaObjectFullscreen:v4];
  }
  else
  {
    uint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
    char v22 = 0;
    id v8 = [(CKChatController *)self previewItemsForMediaObject:v4 currentItemIndex:&v23 containsRestoring:&v22];

    uint64_t v9 = [v8 count];
    if (v9)
    {
      uint64_t v10 = [(CKChatController *)self previewController];

      if (!v10 && !CKIsRunningInMacCatalyst())
      {
        char v11 = objc_alloc_init(CKQLPreviewController);
        [(CKChatController *)self setPreviewController:v11];
      }
      uint64_t v12 = [(CKChatController *)self previewController];
      [v12 setDelegate:self];
      long long v13 = objc_alloc_init(CKQLPreviewControllerDataSource);
      [(CKChatController *)self setQlPreviewDataSource:v13];

      long long v14 = [(CKChatController *)self qlPreviewDataSource];
      [v14 setPreviewItems:v8];

      long long v15 = [(CKChatController *)self qlPreviewDataSource];
      [v12 setDataSource:v15];

      [v12 reloadData];
      [v12 setCurrentPreviewItemIndex:v23];
      [v12 refreshCurrentPreviewItem];
      if (!CKIsRunningInMacCatalyst())
      {
        [v12 setModalPresentationStyle:0];
        if (v22)
        {
          long long v16 = CKFrameworkBundle();
          double v17 = [v16 localizedStringForKey:@"RESTORING" value:&stru_1EDE4CA38 table:@"ChatKit"];
          [v12 setLoadingTextForMissingFiles:v17];
        }
      }
      uint64_t v18 = [(CKChatController *)self entryView];
      id v19 = [v18 contentView];
      -[CKChatController setEntryViewWasActiveOnPreview:](self, "setEntryViewWasActiveOnPreview:", [v19 isActive]);

      v21.receiver = self;
      v21.super_class = (Class)CKChatController;
      [(CKChatController *)&v21 becomeFirstResponder];
      if (CKIsRunningInMacCatalyst()) {
        [v12 presentPreview];
      }
      else {
        [(CKChatController *)self presentViewController:v12 animated:1 completion:0];
      }
    }
    BOOL v7 = v9 != 0;
  }
  return v7;
}

- (void)_showReaderForAggregateChatItem:(id)a3 balloonView:(id)a4
{
  id v9 = a4;
  int v6 = +[CKReaderViewController readerViewControllerForChatItem:a3];
  [v6 setDelegate:self];
  if (CKIsRunningInMacCatalyst())
  {
    [v6 setModalPresentationStyle:7];
    BOOL v7 = [v6 popoverPresentationController];
    [v7 setSourceView:v9];

    [(CKChatController *)self presentViewController:v6 animated:1 completion:0];
  }
  else
  {
    [(CKChatController *)self showViewController:v6 sender:self];
    id v8 = [(CKCoreChatController *)self inputController];
    [v8 dismissAppCardIfNecessary];
  }
}

- (BOOL)_canReloadEntryView
{
  id v2 = [(CKChatController *)self entryView];
  id v3 = [v2 window];
  BOOL v4 = v3 != 0;

  return v4;
}

- (void)readerViewControllerWillDismiss:(id)a3
{
  id v3 = a3;
  id v9 = +[CKReaderViewController readerScrollPositionCache];
  BOOL v4 = (void *)MEMORY[0x1E4F29238];
  uint64_t v5 = [v3 visibleRange];
  BOOL v7 = objc_msgSend(v4, "valueWithRange:", v5, v6);
  id v8 = [v3 messageGUID];

  [v9 setObject:v7 forKey:v8];
}

- (void)_dismissPresentedViewController:(id)a3
{
  int v4 = CKIsRunningInMacCatalyst();
  uint64_t v5 = [(CKChatController *)self presentedViewController];
  uint64_t v6 = v5;
  if (v4) {
    [v5 dismissPreview];
  }
  else {
    [v5 dismissViewControllerAnimated:1 completion:0];
  }

  [(CKChatController *)self becomeFirstResponder];
}

- (void)showViewerForMediaObject:(id)a3
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = [(CKChatController *)self navigationController];
  uint64_t v6 = [v5 visibleViewController];

  objc_opt_class();
  int isKindOfClass = objc_opt_isKindOfClass();
  int v8 = [v6 conformsToProtocol:&unk_1EE09CB18];
  id v9 = [(CKChatController *)self previewController];
  uint64_t v10 = [v9 presentingViewController];

  if (IMOSLoggingEnabled())
  {
    char v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = @"NO";
      if (isKindOfClass) {
        long long v13 = @"YES";
      }
      else {
        long long v13 = @"NO";
      }
      if (v8) {
        long long v14 = @"YES";
      }
      else {
        long long v14 = @"NO";
      }
      int v27 = 138412802;
      id v28 = v13;
      __int16 v29 = 2112;
      double v30 = v14;
      if (v10) {
        uint64_t v12 = @"YES";
      }
      __int16 v31 = 2112;
      uint64_t v32 = v12;
      _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "isChatControllerOnTop={%@} isAppCardOnTop={%@} isPreviewControllerAlreadyPresented={%@}", (uint8_t *)&v27, 0x20u);
    }
  }
  if (((isKindOfClass | v8) & (v10 == 0)) != 0)
  {
    long long v15 = [(CKChatController *)self entryView];
    long long v16 = [v15 contentView];
    -[CKChatController setEntryViewWasActiveOnPreview:](self, "setEntryViewWasActiveOnPreview:", [v16 isActive]);

    if (CKIsRunningInMacCatalyst())
    {
      if ([v4 shouldBeQuickLooked]) {
LABEL_16:
      }
        [(CKChatController *)self _displayPreviewItemForMediaObject:v4];
    }
    else
    {
      if ([v4 mediaType] != 5)
      {
        if ([v4 mediaType] == 4)
        {
          [(CKChatController *)self _showVCardViewerForMediaObject:v4];
          goto LABEL_21;
        }
        if ([v4 mediaType] == 7)
        {
          [(CKChatController *)self _showPassbookCardViewForMediaObject:v4];
          goto LABEL_21;
        }
        if ([v4 mediaType] == 9)
        {
          [(CKChatController *)self _showWalletOrderImportViewForMediaObject:v4];
          goto LABEL_21;
        }
        if (![v4 shouldBeQuickLooked]) {
          goto LABEL_21;
        }
        goto LABEL_16;
      }
      id v24 = +[CKUIBehavior sharedBehaviors];
      int v25 = [v24 opensLocationsInMapsApp];

      if (v25)
      {
        double v26 = [v4 mapItem];
        [v26 openInMapsWithLaunchOptions:0];
      }
      else
      {
        [(CKChatController *)self _showMapViewerForMediaObject:v4];
      }
    }
  }
  else if (IMOSLoggingEnabled())
  {
    double v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      uint64_t v18 = (objc_class *)objc_opt_class();
      NSStringFromClass(v18);
      id v19 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
      id v20 = [(CKChatController *)self navigationController];
      objc_super v21 = [v20 topViewController];
      char v22 = (objc_class *)objc_opt_class();
      NSStringFromClass(v22);
      uint64_t v23 = (__CFString *)objc_claimAutoreleasedReturnValue();
      int v27 = 138412546;
      id v28 = v19;
      __int16 v29 = 2112;
      double v30 = v23;
      _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Criteria not met to show mediaObject. Transcript/AppCard isn't visibleViewController. visibleVC={%@} topVC={%@}", (uint8_t *)&v27, 0x16u);
    }
  }
LABEL_21:
}

- (void)showAlternateViewerForMediaObject:(id)a3
{
  id v6 = a3;
  if ([v6 mediaType] == 5)
  {
    id v4 = +[CKUIBehavior sharedBehaviors];
    int v5 = [v4 showsPlaceCardForBalloonViewTitleTap];

    if (v5) {
      [(CKChatController *)self _showVCardViewerForMediaObject:v6];
    }
  }
}

- (void)_showPassbookCardViewForMediaObject:(id)a3
{
  id v4 = a3;
  if (objc_msgSend((id)MEMORY[0x192FBA860](@"PKPassLibrary", @"PassKit"), "isPassLibraryAvailable"))
  {
    int v5 = [v4 pass];
    id v6 = +[CKPassKitHelper addPassesViewControllerForPass:v5];
    BOOL v7 = v6;
    if (v6)
    {
      [v6 performSelector:sel_setDelegate_ withObject:self];
      [(CKChatController *)self setTargetFirstResponder:[(CKChatController *)self entryViewWasActiveOnPreview]];
      v11.receiver = self;
      v11.super_class = (Class)CKChatController;
      [(CKChatController *)&v11 becomeFirstResponder];
      int v8 = [(CKCoreChatController *)self collectionViewController];
      id v9 = [v8 collectionView];
      [v9 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];

      uint64_t v10 = [(CKChatController *)self navigationController];
      [v10 presentViewController:v7 animated:1 completion:0];
    }
  }
}

- (void)addPassesViewControllerDidFinish:(id)a3
{
  id v4 = [(CKChatController *)self navigationController];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = __64__CKChatController_QuickLook__addPassesViewControllerDidFinish___block_invoke;
  v5[3] = &unk_1E5620C40;
  void v5[4] = self;
  [v4 dismissViewControllerAnimated:1 completion:v5];
}

void __64__CKChatController_QuickLook__addPassesViewControllerDidFinish___block_invoke(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) entryViewWasActiveOnPreview];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 setEntryViewWasActiveOnPreview:0];
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  [v3 setTargetFirstResponder:v4];
  [*(id *)(a1 + 32) becomeFirstResponder];
  int v5 = [*(id *)(a1 + 32) firstResponder];
  [v5 reloadInputViews];

  id v7 = [*(id *)(a1 + 32) collectionViewController];
  id v6 = [v7 collectionView];
  [v6 endHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];
}

- (void)_showWalletOrderImportViewForMediaObject:(id)a3
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  getFKOrderImportPreviewControllerProviderClass();
  int v5 = objc_opt_class();
  if ((objc_opt_respondsToSelector() & 1) != 0
    && [v5 canProvidePreviewControllerForMessages])
  {
    uint64_t v43 = 0;
    double v44 = &v43;
    uint64_t v45 = 0x2050000000;
    id v6 = (void *)getFKOrderMessagesPreviewMetadataClass_softClass;
    uint64_t v46 = getFKOrderMessagesPreviewMetadataClass_softClass;
    if (!getFKOrderMessagesPreviewMetadataClass_softClass)
    {
      *(void *)long long buf = MEMORY[0x1E4F143A8];
      *(void *)&uint8_t buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = __getFKOrderMessagesPreviewMetadataClass_block_invoke;
      char v48 = &unk_1E5620B90;
      double v49 = &v43;
      __getFKOrderMessagesPreviewMetadataClass_block_invoke((uint64_t)buf);
      id v6 = (void *)v44[3];
    }
    id v7 = v6;
    _Block_object_dispose(&v43, 8);
    int v8 = objc_opt_class();
    if ((objc_opt_respondsToSelector() & 1) != 0
      && ([v4 fileURL],
          id v9 = objc_claimAutoreleasedReturnValue(),
          [v8 walletDeepLinkForExistingOrderAtURL:v9],
          id v10 = (id)objc_claimAutoreleasedReturnValue(),
          v9,
          v10))
    {
      if (IMOSLoggingEnabled())
      {
        objc_super v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          uint64_t v12 = [v10 absoluteString];
          *(_DWORD *)long long buf = 138412290;
          *(void *)&uint8_t buf[4] = v12;
          _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_INFO, "Order file is already tracked, viewing in Wallet with url: %@", buf, 0xCu);
        }
      }
      long long v13 = [MEMORY[0x1E4F42738] sharedApplication];
      [v13 openURL:v10];
    }
    else
    {
      FKOrderImportPreviewControllerProviderClass Class = getFKOrderImportPreviewControllerProviderClass();
      long long v15 = [v4 fileURL];
      id v41 = 0;
      v42[0] = MEMORY[0x1E4F143A8];
      v42[1] = 3221225472;
      v42[2] = __72__CKChatController_QuickLook___showWalletOrderImportViewForMediaObject___block_invoke;
      void v42[3] = &unk_1E5627C78;
      v42[4] = self;
      long long v16 = [FKOrderImportPreviewControllerProviderClass makeViewControllerWithOrderURL:v15 completion:v42 error:&v41];
      id v10 = v41;

      if (v10)
      {
        if (IMOSLoggingEnabled())
        {
          double v17 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            uint64_t v18 = [v4 fileURL];
            *(_DWORD *)long long buf = 138412546;
            *(void *)&uint8_t buf[4] = v18;
            *(_WORD *)&unsigned char buf[12] = 2112;
            *(void *)&buf[14] = v10;
            _os_log_impl(&dword_18EF18000, v17, OS_LOG_TYPE_INFO, "Failed to create Add to Wallet VC for order at %@: %@", buf, 0x16u);
          }
        }
        if ([v10 code] == 1)
        {
          id v19 = (void (*)(void))MEMORY[0x192FBA870]("PKCreateAlertControllerForWalletUninstalled", @"PassKitUI");
          _showWalletOrderImportViewForMediaObject__makeWalletUninstalledAlert = (uint64_t)v19;
          if (v19)
          {
            id v20 = v19(0);
            objc_super v21 = [(CKChatController *)self navigationController];
            [v21 presentViewController:v20 animated:1 completion:0];
          }
          else if (IMOSLoggingEnabled())
          {
            uint64_t v38 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl(&dword_18EF18000, v38, OS_LOG_TYPE_INFO, "Unable to show Wallet Uninstalled alert because weak-link of PKCreateAlertControllerForWalletUninstalled() failed.", buf, 2u);
            }
          }
        }
        else
        {
          int v27 = (void *)MEMORY[0x1E4F42728];
          id v28 = CKFrameworkBundle();
          __int16 v29 = [v28 localizedStringForKey:@"WALLET_ORDER_INVALID_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          double v30 = CKFrameworkBundle();
          __int16 v31 = [v30 localizedStringForKey:@"WALLET_ORDER_INVALID_DESCRIPTION" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v32 = [v27 alertControllerWithTitle:v29 message:v31 preferredStyle:1];

          uint64_t v33 = (void *)MEMORY[0x1E4F42720];
          char v34 = CKFrameworkBundle();
          uint64_t v35 = [v34 localizedStringForKey:@"DISMISS" value:&stru_1EDE4CA38 table:@"ChatKit"];
          CGFloat v36 = [v33 actionWithTitle:v35 style:0 handler:0];
          [v32 addAction:v36];

          uint64_t v37 = [(CKChatController *)self navigationController];
          [v37 presentViewController:v32 animated:1 completion:0];
        }
      }
      else if (v16)
      {
        [(CKChatController *)self setWalletOrderImportViewController:v16];
        char v22 = [v16 presentationController];
        [v22 setDelegate:self];

        uint64_t v23 = [(CKCoreChatController *)self collectionViewController];
        id v24 = [v23 collectionView];
        [v24 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];

        int v25 = [(CKCoreChatController *)self delegate];
        [v25 updateSupportedInterfaceOrientations:2];

        dispatch_time_t v26 = dispatch_time(0, 100000000);
        v39[0] = MEMORY[0x1E4F143A8];
        v39[1] = 3221225472;
        v39[2] = __72__CKChatController_QuickLook___showWalletOrderImportViewForMediaObject___block_invoke_189;
        v39[3] = &unk_1E5620AF8;
        v39[4] = self;
        id v40 = v16;
        dispatch_after(v26, MEMORY[0x1E4F14428], v39);
      }
    }
  }
}

void __72__CKChatController_QuickLook___showWalletOrderImportViewForMediaObject___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = IMOSLoggingEnabled();
  if (v4)
  {
    if (v5)
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v12 = v4;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "CKChatController_QuickLook failed to add order file to Wallet: %@", buf, 0xCu);
      }
LABEL_9:
    }
  }
  else if (v5)
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Finished adding order file to Wallet", buf, 2u);
    }
    goto LABEL_9;
  }
  int v8 = *(void **)(a1 + 32);
  id v7 = (id *)(a1 + 32);
  [v8 _walletOrderImportControllerDismissed];
  id v9 = [*v7 navigationController];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __72__CKChatController_QuickLook___showWalletOrderImportViewForMediaObject___block_invoke_172;
  v10[3] = &unk_1E5620C40;
  void v10[4] = *v7;
  [v9 dismissViewControllerAnimated:1 completion:v10];
}

void __72__CKChatController_QuickLook___showWalletOrderImportViewForMediaObject___block_invoke_172(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 stopForcingOrientation];
}

void __72__CKChatController_QuickLook___showWalletOrderImportViewForMediaObject___block_invoke_189(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  [v2 presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

- (void)_showMapViewerForMediaObject:(id)a3
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (_showMapViewerForMediaObject___pred_CLLocationCoordinate2DIsValidCoreLocation != -1) {
    dispatch_once(&_showMapViewerForMediaObject___pred_CLLocationCoordinate2DIsValidCoreLocation, &__block_literal_global_105);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v5 = (__CFString *)v4;
    if (((uint64_t (*)(uint64_t))_showMapViewerForMediaObject___CLLocationCoordinate2DIsValid)([(__CFString *)v5 coordinate]))
    {
      id v6 = (objc_class *)MEMORY[0x192FBA860](@"MUPlaceViewController", @"MapsUI");
      if (v6)
      {
        id v7 = [v6 alloc];
        int v8 = [(__CFString *)v5 mapItem];
        id v9 = (void *)[v7 initWithMapItem:v8];

        id v10 = +[CKUIBehavior sharedBehaviors];
        int v11 = [v10 usesPopovers];

        if (v11)
        {
          id v12 = [(CKChatController *)self entryView];
          uint64_t v13 = [v12 contentView];
          uint64_t v14 = [v13 isActive];

          [(CKChatController *)self setTargetFirstResponder:v14];
          long long v15 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:0 target:self action:sel_dismissPresentedViewController_];
          long long v16 = [v9 navigationItem];
          [v16 setLeftBarButtonItem:v15];

          double v17 = (void *)[objc_alloc(MEMORY[0x1E4F42BF8]) initWithRootViewController:v9];
          uint64_t v18 = [v17 navigationBar];
          id v19 = +[CKUIBehavior sharedBehaviors];
          id v20 = [v19 theme];
          objc_msgSend(v18, "setBarStyle:", objc_msgSend(v20, "navBarStyle"));

          [v17 setModalPresentationStyle:3];
          [(CKChatController *)self presentViewController:v17 animated:1 completion:0];
        }
        else
        {
          [(CKChatController *)self showViewController:v9 sender:self];
        }
      }
      else if (IMOSLoggingEnabled())
      {
        char v22 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          int v23 = 138412546;
          id v24 = @"MUPlaceViewController";
          __int16 v25 = 2112;
          dispatch_time_t v26 = @"MapsUI";
          _os_log_impl(&dword_18EF18000, v22, OS_LOG_TYPE_INFO, "Failed weak linking %@ from %@.", (uint8_t *)&v23, 0x16u);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        objc_super v21 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          int v23 = 138412290;
          id v24 = v5;
          _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "The location for this media object is invalid. [%@]", (uint8_t *)&v23, 0xCu);
        }
      }
      [(CKChatController *)self _showVCardViewerForMediaObject:v5];
    }
  }
}

void *__60__CKChatController_QuickLook___showMapViewerForMediaObject___block_invoke()
{
  CGRect result = (void *)MEMORY[0x192FBA870]("CLLocationCoordinate2DIsValid", @"CoreLocation");
  _showMapViewerForMediaObject___CLLocationCoordinate2DIsValid = result;
  return result;
}

- (void)_showVCardViewerForMediaObject:(id)a3
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [v4 data];
  if (!v5) {
    id v5 = objc_alloc_init(MEMORY[0x1E4F1C9B8]);
  }
  id v17 = 0;
  id v6 = [MEMORY[0x1E4F1B998] contactsWithData:v5 error:&v17];
  id v7 = v17;
  if (!v6 || ![v6 count])
  {
    if (IMOSLoggingEnabled())
    {
      int v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v20 = v7;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Couldn't get contacts out of vcard data: %@", buf, 0xCu);
      }
    }
    id v9 = objc_alloc_init(MEMORY[0x1E4F1BA40]);
    id v18 = v9;
    uint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v18 count:1];

    id v6 = (void *)v10;
  }
  int v11 = (void *)[objc_alloc(MEMORY[0x1E4F1BC10]) initWithContacts:v6 contactStore:0];
  id v12 = objc_alloc_init(MEMORY[0x1E4F42BF0]);
  [v12 configureWithTransparentBackground];
  uint64_t v13 = [v11 viewController];
  uint64_t v14 = [v13 navigationItem];
  [v14 setStandardAppearance:v12];

  long long v15 = [(CKCoreChatController *)self inputController];
  [v15 dismissAppCardIfNecessary];

  long long v16 = [v11 viewController];
  [(CKChatController *)self showViewController:v16 sender:self];
}

- (void)_showVCalViewerForMediaObject:(id)a3
{
  id v10 = a3;
  id v4 = +[CKUIBehavior sharedBehaviors];
  if ([v4 showsVCalViewer] && EKEventStoreClass())
  {
    id v5 = EKICSPreviewControllerClass();

    if (!v5) {
      goto LABEL_6;
    }
    id v4 = objc_alloc_init((Class)EKEventStoreClass());
    id v6 = objc_alloc((Class)EKICSPreviewControllerClass());
    id v7 = [v10 data];
    int v8 = (void *)[v6 initWithData:v7 eventStore:v4 options:2147483649];

    id v9 = [v8 viewController];
    [(CKChatController *)self showViewController:v9 sender:self];
  }
LABEL_6:
}

- (void)restoreEntryViewAfterPreview
{
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v3, OS_LOG_TYPE_INFO, "Calling restoreEntryViewAfterPreview", buf, 2u);
    }
  }
  if ([(CKChatController *)self isShowingPreview])
  {
    [(CKChatController *)self setIsShowingPreview:0];
    if (IMOSLoggingEnabled())
    {
      id v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v6 = 0;
        _os_log_impl(&dword_18EF18000, v4, OS_LOG_TYPE_INFO, "restoreEntryViewAfterPreview: Setting showing preview to NO", v6, 2u);
      }
    }
    if ([(CKChatController *)self entryViewWasActiveOnPreview])
    {
      [(CKChatController *)self setEntryViewWasActiveOnPreview:0];
      uint64_t v5 = 1;
    }
    else
    {
      uint64_t v5 = 0;
    }
    [(CKChatController *)self setTargetFirstResponder:v5];
    [(CKChatController *)self addOrRemoveEntryViewIfNeeded];
    [(CKChatController *)self becomeFirstResponder];
  }
}

- (BOOL)previewController:(id)a3 shouldDetectMachineReadableCodeForPreviewItem:(id)a4
{
  id v4 = [(CKCoreChatController *)self chat];
  BOOL v5 = [v4 isFiltered] == 0;

  return v5;
}

- (id)excludedActivityTypesForPreviewController:(id)a3
{
  v9[1] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = [v3 currentPreviewItem];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ([v4 mediaType] & 0xFFFFFFFE) == 2)
  {
    v9[0] = *MEMORY[0x1E4F9F3C8];
    BOOL v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:1];
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)int v8 = 0;
        _os_log_impl(&dword_18EF18000, v6, OS_LOG_TYPE_INFO, "Will exclude system UIActivityTypeSaveToCameraRoll from ShareSheet.", v8, 2u);
      }
    }
  }
  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

- (id)additionalActivitiesTypesForPreviewController:(id)a3
{
  v14[1] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = [v3 currentPreviewItem];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v4;
    if (([v5 mediaType] & 0xFFFFFFFE) == 2)
    {
      id v6 = [[CKSaveToPhotosActivity alloc] initWithMediaObject:v5 presenterViewController:v3];
      v14[0] = v6;
      id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v14 count:1];
    }
    else
    {
      id v7 = 0;
    }
  }
  else
  {
    id v7 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = [v7 count];
      id v10 = &stru_1EDE4CA38;
      if (!v9) {
        id v10 = @" NOT";
      }
      int v12 = 138412290;
      uint64_t v13 = v10;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Will%@ present additional activities on ShareSheet.", (uint8_t *)&v12, 0xCu);
    }
  }

  return v7;
}

- (BOOL)previewController:(id)a3 shouldOpenURL:(id)a4 forPreviewItem:(id)a5
{
  return 1;
}

- (void)previewControllerWillDismiss:(id)a3
{
  id v4 = a3;
  id v5 = +[CKUIBehavior sharedBehaviors];
  int v6 = [v5 presentsQuickLookController];

  if (v6)
  {
    id v7 = [(CKCoreChatController *)self collectionViewController];
    int v8 = [v7 collectionView];
    uint64_t v9 = [v7 chatItems];
    id v10 = [v4 currentPreviewItem];
    uint64_t v11 = objc_msgSend(v9, "__ck_indexOfMediaObject:", v10);

    if (v11 != 0x7FFFFFFFFFFFFFFFLL)
    {
      int v12 = [MEMORY[0x1E4F28D58] indexPathForRow:v11 inSection:0];
      uint64_t v13 = [v8 cellForItemAtIndexPath:v12];
      if (!v13)
      {
        [v8 beginDisablingTranscriptDynamicsForReason:@"QuickLookAppearanceAnimation"];
        uint64_t v14 = [(CKChatController *)self collectionView];
        v15[0] = MEMORY[0x1E4F143A8];
        v15[1] = 3221225472;
        void v15[2] = __60__CKChatController_QuickLook__previewControllerWillDismiss___block_invoke;
        void v15[3] = &unk_1E5620AF8;
        id v16 = v8;
        id v17 = v12;
        [v14 performContentOffsetUpdateTemporarilyOverridingHoldStatus:v15];
      }
    }
  }
}

void __60__CKChatController_QuickLook__previewControllerWillDismiss___block_invoke(uint64_t a1)
{
  [MEMORY[0x1E4F39CF8] begin];
  id v2 = (void *)MEMORY[0x1E4F39CF8];
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __60__CKChatController_QuickLook__previewControllerWillDismiss___block_invoke_2;
  v3[3] = &unk_1E5620C40;
  id v4 = *(id *)(a1 + 32);
  [v2 setCompletionBlock:v3];
  [*(id *)(a1 + 32) scrollToItemAtIndexPath:*(void *)(a1 + 40) atScrollPosition:2 animated:0];
  [MEMORY[0x1E4F39CF8] commit];
}

uint64_t __60__CKChatController_QuickLook__previewControllerWillDismiss___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) endDisablingTranscriptDynamicsForReason:@"QuickLookAppearanceAnimation"];
}

- (void)previewControllerDidDismiss:(id)a3
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v6 = 136315138;
      id v7 = "-[CKChatController(QuickLook) previewControllerDidDismiss:]";
      _os_log_impl(&dword_18EF18000, v5, OS_LOG_TYPE_INFO, "Dismissing %s", (uint8_t *)&v6, 0xCu);
    }
  }
  [(CKChatController *)self setTargetFirstResponder:0];
  [(CKChatController *)self setPreviewController:0];
  [(CKChatController *)self restoreEntryViewAfterPreview];
}

- (BOOL)previewController:(id)a3 canShareItem:(id)a4
{
  id v4 = a4;
  if (objc_opt_respondsToSelector()) {
    char v5 = [v4 canShareItem];
  }
  else {
    char v5 = 1;
  }

  return v5;
}

- (void)previewController:(id)a3 willTransitionToState:(int64_t)a4
{
  id v6 = a3;
  id v7 = +[CKUIBehavior sharedBehaviors];
  int v8 = [v7 presentsQuickLookController];

  if (v8)
  {
    if (a4 == 3)
    {
      id v10 = [(CKCoreChatController *)self collectionViewController];
      uint64_t v11 = [v10 collectionView];
      int v12 = [v11 window];
      [v12 layoutIfNeeded];

LABEL_10:
      goto LABEL_11;
    }
    if (a4 == 1)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v9 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "willTransitionToState: Setting showing preview to YES", v13, 2u);
        }
      }
      [(CKChatController *)self setIsShowingPreview:1];
      id v10 = [(CKCoreChatController *)self collectionViewController];
      uint64_t v11 = [v10 collectionView];
      [v11 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];
      goto LABEL_10;
    }
  }
LABEL_11:
}

- (void)previewController:(id)a3 didTransitionToState:(int64_t)a4
{
  if (a4 == 3)
  {
    id v18 = [a3 currentPreviewItem];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v6 = [(CKCoreChatController *)self collectionViewController];
      id v7 = [v6 chatItems];
      uint64_t v8 = objc_msgSend(v7, "__ck_indexOfMediaObject:", v18);

      if (v8 != 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v9 = [MEMORY[0x1E4F28D58] indexPathForRow:v8 inSection:0];
        id v10 = [(CKCoreChatController *)self collectionViewController];
        uint64_t v11 = [v10 collectionView];

        int v12 = [v11 cellForItemAtIndexPath:v9];
        if (v12)
        {
          uint64_t v13 = [v11 cellForItemAtIndexPath:v9];
          uint64_t v14 = [v13 balloonView];
          long long v15 = +[CKUIBehavior sharedBehaviors];
          objc_msgSend(v14, "setCanUseOpaqueMask:", objc_msgSend(v15, "transcriptCanUseOpaqueMask"));

          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            [v14 removeTransitionView];
          }
        }
      }
    }
    id v16 = [(CKCoreChatController *)self collectionViewController];
    id v17 = [v16 collectionView];
    [v17 endHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];
  }
}

- (CGRect)previewController:(id)a3 frameForPreviewItem:(id)a4 inSourceView:(id *)a5
{
  double v5 = 0.0;
  double v6 = 0.0;
  double v7 = 1.0;
  double v8 = 1.0;
  result.size.double height = v8;
  result.size.double width = v7;
  result.origin.double y = v6;
  result.origin.double x = v5;
  return result;
}

- (id)previewController:(id)a3 transitionImageForPreviewItem:(id)a4 contentRect:(CGRect *)a5
{
  return 0;
}

- (id)previewController:(id)a3 transitionViewForPreviewItem:(id)a4 uncroppedSourceFrame:(CGRect *)a5
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  if (IMOSLoggingEnabled())
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = (objc_class *)objc_opt_class();
      int v12 = NSStringFromClass(v11);
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v12;
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v9;
      _os_log_impl(&dword_18EF18000, v10, OS_LOG_TYPE_INFO, "QuickLook did request preview view for transition to item <%@: %p>.", buf, 0x16u);
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_16;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v13, OS_LOG_TYPE_INFO, "> Item is found to be a CKMediaObject.", buf, 2u);
    }
  }
  uint64_t v14 = [(CKCoreChatController *)self collectionViewController];
  long long v15 = [v14 collectionView];
  id v16 = [v14 chatItems];
  uint64_t v17 = objc_msgSend(v16, "__ck_indexOfMediaObject:", v9);

  if (IMOSLoggingEnabled())
  {
    id v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      *(void *)&uint8_t buf[4] = v17;
      _os_log_impl(&dword_18EF18000, v18, OS_LOG_TYPE_INFO, "> Media Object is found to be at row {%ld) in the transcript.", buf, 0xCu);
    }
  }
  if (v17 != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v58 = [MEMORY[0x1E4F28D58] indexPathForRow:v17 inSection:0];
    uint64_t v21 = [v15 cellForItemAtIndexPath:v58];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      char v22 = IMLogHandleForCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(QuickLook) previewController:transitionViewForPreviewItem:uncroppedSourceFrame:]((uint64_t)v21, (uint64_t)v58, v22);
      }
      id v20 = 0;
      goto LABEL_52;
    }
    char v22 = v21;
    int v23 = [v22 balloonView];
    [v23 setHidden:0];
    [v23 setCanUseOpaqueMask:0];
    [v23 prepareForDisplayIfNeeded];
    [v22 layoutIfNeeded];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v24 = v23;
      [v24 uncroppedSourceFrame];
      a5->origin.double x = v25;
      a5->origin.double y = v26;
      a5->size.double width = v27;
      a5->size.double height = v28;
      if (IMOSLoggingEnabled())
      {
        __int16 v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          log = v29;
          uint64_t v57 = [v24 uncroppedSourceView];
          double v30 = (objc_class *)objc_opt_class();
          NSStringFromClass(v30);
          id v31 = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v32 = [v24 uncroppedSourceView];
          *(_DWORD *)long long buf = 138412546;
          id v55 = v31;
          *(void *)&uint8_t buf[4] = v31;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v32;
          _os_log_impl(&dword_18EF18000, log, OS_LOG_TYPE_INFO, "> For a CKAttachmentBalloonView, we are returning <%@: %p>.", buf, 0x16u);

          __int16 v29 = log;
        }
      }
      objc_msgSend(v24, "uncroppedSourceView", v55);
      id v20 = (id)objc_claimAutoreleasedReturnValue();

      goto LABEL_51;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        long long v35 = *(_OWORD *)(MEMORY[0x1E4F1DB28] + 16);
        *(_OWORD *)long long buf = *MEMORY[0x1E4F1DB28];
        *(_OWORD *)&uint8_t buf[16] = v35;
        id v20 = [v23 transitionViewForCurrentItem:v9 sourceFrame:buf];
        CGSize v36 = *(CGSize *)&buf[16];
        a5->origin = *(CGPoint *)buf;
        a5->size = v36;
        if (IMOSLoggingEnabled())
        {
          uint64_t v37 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
          {
            uint64_t v38 = (objc_class *)objc_opt_class();
            double v39 = NSStringFromClass(v38);
            *(_DWORD *)id v59 = 138412546;
            BOOL v60 = v39;
            __int16 v61 = 2048;
            id v62 = v20;
            _os_log_impl(&dword_18EF18000, v37, OS_LOG_TYPE_INFO, "> For a CKPhotoStackBalloonView, we are returning <%@: %p>.", v59, 0x16u);
          }
        }
        goto LABEL_51;
      }
      if (!IMOSLoggingEnabled()) {
        goto LABEL_50;
      }
      double v49 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
      {
        double v52 = (objc_class *)objc_opt_class();
        double v53 = NSStringFromClass(v52);
        *(_DWORD *)long long buf = 138412546;
        *(void *)&uint8_t buf[4] = v53;
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v23;
        _os_log_impl(&dword_18EF18000, v49, OS_LOG_TYPE_INFO, "> For all other balloonView types, we are returning <%@: %p>.", buf, 0x16u);
      }
      goto LABEL_49;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v9 originalSize];
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
LABEL_42:
        if (!IMOSLoggingEnabled())
        {
LABEL_50:
          id v20 = v23;
LABEL_51:

LABEL_52:
          goto LABEL_53;
        }
        double v49 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          uint64_t v50 = (objc_class *)objc_opt_class();
          double v51 = NSStringFromClass(v50);
          *(_DWORD *)long long buf = 138412546;
          *(void *)&uint8_t buf[4] = v51;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v23;
          _os_log_impl(&dword_18EF18000, v49, OS_LOG_TYPE_INFO, "> For a CKImageBalloonView, we are returning <%@: %p>.", buf, 0x16u);
        }
LABEL_49:

        goto LABEL_50;
      }
      [v9 pxSize];
    }
    double v40 = v33;
    double v41 = v34;
    [v23 bounds];
    a5->origin.double x = AdaptSizeToRect(v42, v43, v44, v45, v40, v41);
    a5->origin.double y = v46;
    a5->size.double width = v47;
    a5->size.double height = v48;
    goto LABEL_42;
  }

LABEL_16:
  if (IMOSLoggingEnabled())
  {
    id v19 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
    }
  }
  id v20 = 0;
LABEL_53:

  return v20;
}

- (int64_t)previewController:(id)a3 editingModeForPreviewItem:(id)a4
{
  return 0;
}

- (id)_previewingViewControllerForHitView:(id)a3 indexPath:(id)a4
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKCoreChatController *)self collectionViewController];
  id v9 = [v8 balloonViewForIndexPath:v7];

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_50;
      }
      long long v35 = +[CKUIBehavior sharedBehaviors];
      char v36 = [v35 disableTranscriptClickyOrbContextMenu];

      if (v36) {
        goto LABEL_50;
      }
    }
  }
  id v10 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v11 = [v10 chatItems];

  if (v7)
  {
    if (![v7 section])
    {
      unint64_t v12 = [v7 item];
      if (v12 < [v11 count])
      {
        double v52 = objc_msgSend(v11, "objectAtIndex:", objc_msgSend(v7, "item"));
        objc_opt_class();
        uint64_t v13 = v52;
        if (objc_opt_isKindOfClass())
        {
          uint64_t v14 = [v52 mediaObject];
          id v15 = v14;
          if ([v14 shouldBeQuickLooked])
          {
            uint64_t v53 = 0;
            id v16 = [(CKChatController *)self previewItemsForMediaObject:v14 currentItemIndex:&v53 containsRestoring:0];
            uint64_t v17 = [(CKChatController *)self previewController];
            BOOL v18 = v17 == 0;

            if (v18)
            {
              id v19 = objc_alloc_init(CKQLPreviewController);
              [(CKChatController *)self setPreviewController:v19];

              id v20 = [(CKChatController *)self previewController];
              [v20 setDelegate:self];
            }
            uint64_t v21 = [(CKChatController *)self qlPreviewDataSource];
            char v22 = [v21 previewItems];
            char v23 = [v16 isEqualToArray:v22];

            if ((v23 & 1) == 0)
            {
              id v24 = objc_alloc_init(CKQLPreviewControllerDataSource);
              [(CKChatController *)self setQlPreviewDataSource:v24];

              CGFloat v25 = [(CKChatController *)self qlPreviewDataSource];
              [v25 setPreviewItems:v16];
            }
            CGFloat v26 = [(CKChatController *)self previewController];
            CGFloat v27 = [(CKChatController *)self qlPreviewDataSource];
            [v26 setDataSource:v27];

            CGFloat v28 = [(CKChatController *)self previewController];
            [v28 setCurrentPreviewItemIndex:v53];

            __int16 v29 = [(CKChatController *)self previewController];
            [v29 refreshCurrentPreviewItem];

            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && [v6 invisibleInkEffectEnabled])
            {
              double v30 = [v6 invisibleInkEffectController];
              [(CKChatController *)self setPreviewInvisibleInkEffectController:v30];
              if (([v30 isSuspended] & 1) == 0)
              {
                id v31 = CKBalloonViewForClass((objc_class *)[v52 balloonViewClass]);
                [v31 configureForMessagePart:v52];
                [v31 setInvisibleInkEffectEnabled:0];
                [v31 setCanUseOpaqueMask:0];
                [v31 prepareForDisplayIfNeeded];
                [(CKChatController *)self setPreviewRevealView:v31];
              }
            }
            if (IMOSLoggingEnabled())
            {
              uint64_t v32 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
              {
                double v33 = [(CKChatController *)self previewController];
                *(_DWORD *)long long buf = 138412290;
                id v55 = v33;
                _os_log_impl(&dword_18EF18000, v32, OS_LOG_TYPE_INFO, "clicky orb: providing previewController: %@", buf, 0xCu);
              }
            }
            double v34 = [(CKChatController *)self previewController];

            goto LABEL_22;
          }
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            if (_previewingViewControllerForHitView_indexPath___pred_CLLocationCoordinate2DIsValidCoreLocation != -1) {
              dispatch_once(&_previewingViewControllerForHitView_indexPath___pred_CLLocationCoordinate2DIsValidCoreLocation, &__block_literal_global_232_0);
            }
            if (((uint64_t (*)(uint64_t))_previewingViewControllerForHitView_indexPath___CLLocationCoordinate2DIsValid)(objc_msgSend(v14, "coordinate", v52)))
            {
              CGFloat v44 = (objc_class *)MEMORY[0x192FBA860](@"MUPlaceViewController", @"MapsUI");
              if (v44)
              {
                id v45 = [v44 alloc];
                CGFloat v46 = [v14 mapItem];
                double v34 = (__CFString *)[v45 initWithMapItem:v46];

                CGFloat v47 = [v14 title];
                [(__CFString *)v34 setTitle:v47];

                if (IMOSLoggingEnabled())
                {
                  CGFloat v48 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)long long buf = 138412290;
                    id v55 = v34;
                    _os_log_impl(&dword_18EF18000, v48, OS_LOG_TYPE_INFO, "clicky orb: providing placeViewController: %@", buf, 0xCu);
                  }
                }
              }
              else
              {
                if (!IMOSLoggingEnabled())
                {
                  double v34 = 0;
                  goto LABEL_37;
                }
                double v51 = OSLogHandleForIMFoundationCategory();
                if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)long long buf = 138412546;
                  id v55 = @"MUPlaceViewController";
                  __int16 v56 = 2112;
                  uint64_t v57 = @"MapsUI";
                  _os_log_impl(&dword_18EF18000, v51, OS_LOG_TYPE_INFO, "Failed weak linking %@ from %@.", buf, 0x16u);
                }

                double v34 = 0;
              }
LABEL_22:
              id v15 = v14;
LABEL_37:

              goto LABEL_55;
            }
          }

          uint64_t v13 = v52;
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v15 = [v52 dataSource];
            id v37 = v9;
            uint64_t v38 = [v37 stackView];
            double v39 = [v38 currentAssetReference];
            double v34 = [(CKChatController *)self _previewViewControllerForAssetReference:v39 dataSource:v15 previewDelegate:self previewMode:2];
            [(__CFString *)v34 setChatItem:v52];
            if (IMOSLoggingEnabled())
            {
              double v40 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                id v55 = v34;
                _os_log_impl(&dword_18EF18000, v40, OS_LOG_TYPE_INFO, "clicky orb: providing previewViewController: %@", buf, 0xCu);
              }
            }
            goto LABEL_37;
          }
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v15 = v52;
            double v41 = [(CKCoreChatController *)self collectionViewController];
            double v42 = [v41 transcriptIdentifier];
            double v34 = [v15 contentViewControllerForContext:v42];

            if (IMOSLoggingEnabled())
            {
              CGFloat v43 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                id v55 = v34;
                _os_log_impl(&dword_18EF18000, v43, OS_LOG_TYPE_INFO, "clicky orb: providing peekVC: %@", buf, 0xCu);
              }
            }
            goto LABEL_37;
          }
        }
      }
    }
  }

LABEL_50:
  if (IMOSLoggingEnabled())
  {
    double v49 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v49, OS_LOG_TYPE_INFO, "clicky orb: not providing any previewingViewController", buf, 2u);
    }
  }
  double v34 = 0;
LABEL_55:

  return v34;
}

void *__77__CKChatController_QuickLook___previewingViewControllerForHitView_indexPath___block_invoke()
{
  CGRect result = (void *)MEMORY[0x192FBA870]("CLLocationCoordinate2DIsValid", @"CoreLocation");
  _previewingViewControllerForHitView_indexPath___CLLocationCoordinate2DIsValid = result;
  return result;
}

- (id)_previewingViewControllerForLocation:(CGPoint)a3 inSourceView:(id)a4
{
  double y = a3.y;
  double x = a3.x;
  id v7 = a4;
  id v8 = objc_msgSend(v7, "hitTest:withEvent:", 0, x, y);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v9 = [v8 superview];

    id v8 = (void *)v9;
  }
  id v10 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v11 = [v10 collectionView];

  objc_msgSend(v11, "convertPoint:fromView:", v7, x, y);
  double v13 = v12;
  double v15 = v14;

  id v16 = objc_msgSend(v11, "indexPathForItemAtPoint:", v13, v15);
  uint64_t v17 = [(CKChatController *)self _previewingViewControllerForHitView:v8 indexPath:v16];

  return v17;
}

- (id)previewingContext:(id)a3 viewControllerForLocation:(CGPoint)a4
{
  double y = a4.y;
  double x = a4.x;
  id v7 = a3;
  id v8 = +[CKUIBehavior sharedBehaviors];
  char v9 = [v8 disableTranscriptOrb];

  if (v9)
  {
    id v10 = 0;
  }
  else
  {
    uint64_t v11 = [v7 sourceView];
    id v10 = -[CKChatController _previewingViewControllerForLocation:inSourceView:](self, "_previewingViewControllerForLocation:inSourceView:", v11, x, y);
  }

  return v10;
}

- (void)willPresentPreviewViewController:(id)a3 forLocation:(CGPoint)a4 inSourceView:(id)a5
{
  double y = a4.y;
  double x = a4.x;
  id v9 = a5;
  id v10 = a3;
  uint64_t v11 = [(CKCoreChatController *)self collectionViewController];
  double v12 = [v11 collectionView];
  objc_msgSend(v12, "convertPoint:fromView:", v9, x, y);
  double v14 = v13;
  double v16 = v15;

  uint64_t v17 = [(CKCoreChatController *)self collectionViewController];
  BOOL v18 = [v17 collectionView];
  id v19 = objc_msgSend(v18, "indexPathForItemAtPoint:", v14, v16);

  id v20 = [(CKCoreChatController *)self collectionViewController];
  uint64_t v21 = [v20 collectionView];
  char v22 = [v21 cellForItemAtIndexPath:v19];

  id v23 = v22;
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"PreviewController"];
  char v24 = objc_opt_respondsToSelector();
  id v25 = v23;
  if (v24)
  {
    id v31 = [v23 balloonView];
    [v31 setCanUseOpaqueMask:0];
    [v31 prepareForDisplayIfNeeded];

    id v25 = v31;
  }
  id v32 = v25;
  [(CKChatController *)self setPreviewSourceView:v25];
  CGFloat v26 = [v10 presentationController];

  [v26 setSourceView:v32];
  [v32 bounds];
  objc_msgSend(v26, "setSourceRect:");
  CGFloat v27 = [(CKChatController *)self entryView];
  CGFloat v28 = [v27 contentView];
  -[CKChatController setEntryViewWasActiveOnPreview:](self, "setEntryViewWasActiveOnPreview:", [v28 isActive]);

  __int16 v29 = [(CKCoreChatController *)self collectionViewController];
  double v30 = [v29 collectionView];
  [v30 beginHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];
}

- (void)previewingContext:(id)a3 commitViewController:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [MEMORY[0x1E4F6E890] sharedInstance];
  [v8 trackEvent:*MEMORY[0x1E4F6DA88]];

  if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_18EF18000, v9, OS_LOG_TYPE_INFO, "commitViewController: Setting showing preview to YES", buf, 2u);
    }
  }
  [(CKChatController *)self setIsShowingPreview:1];
  id v10 = [(CKChatController *)self previewController];
  id v11 = [(CKChatController *)self previewController];

  if (v11 != v7)
  {
    [(CKChatController *)self restoreEntryViewAfterPreview];
    double v12 = [(CKChatController *)self previewSourceView];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double v13 = [(CKCoreChatController *)self collectionViewController];
      double v14 = [(CKChatController *)self previewSourceView];
      double v15 = [v13 indexPathForBalloonView:v14];

      if (v15)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          double v16 = [v12 pluginViewController];
          if ([v16 conformsToProtocol:&unk_1EE10AAF0]
            && (objc_opt_respondsToSelector() & 1) != 0)
          {
            char v17 = [v16 handlePresentationAction];

            if (v17) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
    }
LABEL_18:
    [(CKChatController *)self showViewController:v7 sender:self];
LABEL_19:

    goto LABEL_20;
  }
  v18.receiver = self;
  v18.super_class = (Class)CKChatController;
  [(CKChatController *)&v18 becomeFirstResponder];
  if (CKIsRunningInMacCatalyst()) {
    [v10 presentPreview];
  }
  else {
    [(CKChatController *)self presentViewController:v10 animated:1 completion:0];
  }
LABEL_20:
}

- (void)didDismissPreviewViewController:(id)a3 committing:(BOOL)a4
{
  [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:@"PreviewController"];
  id v11 = [(CKChatController *)self previewSourceView];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = +[CKUIBehavior sharedBehaviors];
    objc_msgSend(v11, "setCanUseOpaqueMask:", objc_msgSend(v6, "transcriptCanUseOpaqueMask"));

    [v11 prepareForDisplayIfNeeded];
  }
  [(CKChatController *)self setPreviewSourceView:0];
  id v7 = [(CKChatController *)self previewInvisibleInkEffectController];
  [v7 returnBorrowedEffectView];

  id v8 = [(CKChatController *)self previewInvisibleInkEffectController];
  [v8 setSuspended:0];

  [(CKChatController *)self setPreviewInvisibleInkEffectController:0];
  if (!a4)
  {
    id v9 = [(CKCoreChatController *)self collectionViewController];
    id v10 = [v9 collectionView];
    [v10 endHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];
  }
}

- (id)previewActionsForPreviewController:(id)a3
{
  uint64_t v4 = (void *)MEMORY[0x1E4F1CA48];
  id v5 = a3;
  id v6 = [v4 array];
  id v7 = [v5 currentPreviewItem];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v8 = v7;
    id v9 = [(CKCoreChatController *)self collectionViewController];
    id v10 = [v9 chatItems];
    uint64_t v11 = objc_msgSend(v10, "__ck_indexOfMediaObject:", v8);

    double v12 = [(CKCoreChatController *)self collectionViewController];
    double v13 = [v12 chatItems];
    double v14 = [v13 objectAtIndex:v11];

    if ([v14 canCopy])
    {
      double v15 = (void *)MEMORY[0x1E4F42CD8];
      double v16 = CKFrameworkBundle();
      char v17 = [v16 localizedStringForKey:@"COPY" value:&stru_1EDE4CA38 table:@"ChatKit"];
      v36[0] = MEMORY[0x1E4F143A8];
      v36[1] = 3221225472;
      v36[2] = __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke;
      v36[3] = &unk_1E5627CA0;
      id v37 = v8;
      objc_super v18 = [v15 actionWithTitle:v17 style:0 handler:v36];
      [v6 addObject:v18];
    }
    if ([v14 canExport])
    {
      id v19 = (void *)MEMORY[0x1E4F42CD8];
      id v20 = CKFrameworkBundle();
      uint64_t v21 = [v20 localizedStringForKey:@"BALLOON_EXPORT_CALLOUT" value:&stru_1EDE4CA38 table:@"ChatKit"];
      v34[0] = MEMORY[0x1E4F143A8];
      v34[1] = 3221225472;
      v34[2] = __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke_2;
      v34[3] = &unk_1E5627CA0;
      id v35 = v8;
      char v22 = [v19 actionWithTitle:v21 style:0 handler:v34];
      [v6 addObject:v22];
    }
    if ([v14 canForward])
    {
      id v23 = (void *)MEMORY[0x1E4F42CD8];
      char v24 = CKFrameworkBundle();
      id v25 = [v24 localizedStringForKey:@"FORWARD" value:&stru_1EDE4CA38 table:@"ChatKit"];
      uint64_t v28 = MEMORY[0x1E4F143A8];
      uint64_t v29 = 3221225472;
      double v30 = __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke_378;
      id v31 = &unk_1E5627CC8;
      id v32 = self;
      id v33 = v14;
      CGFloat v26 = [v23 actionWithTitle:v25 style:0 handler:&v28];
      objc_msgSend(v6, "addObject:", v26, v28, v29, v30, v31, v32);
    }
  }

  return v6;
}

void __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke(uint64_t a1)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  id v2 = [MEMORY[0x1E4F42C50] generalPasteboard];
  id v3 = [*(id *)(a1 + 32) pasteboardItemProvider];
  v5[0] = v3;
  uint64_t v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v5 count:1];
  [v2 setItemProviders:v4];
}

void __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke_2(uint64_t a1)
{
  id v2 = [[CKMediaObjectExportManager alloc] initWithMediaObject:*(void *)(a1 + 32)];
  [(CKMediaObjectExportManager *)v2 setMetricsSource:*MEMORY[0x1E4F6DB68]];
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke_3;
  v3[3] = &unk_1E56211F0;
  id v4 = *(id *)(a1 + 32);
  [(CKMediaObjectExportManager *)v2 exportQueuedMediaObjectsWithCompletion:v3];
}

void __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke_3(uint64_t a1, int a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  int v6 = IMOSLoggingEnabled();
  if (a2)
  {
    if (v6)
    {
      id v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        id v8 = *(void **)(a1 + 32);
        int v10 = 138412290;
        id v11 = v8;
        _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Successfully quick saved media object: %@", (uint8_t *)&v10, 0xCu);
      }
LABEL_9:
    }
  }
  else if (v6)
  {
    id v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412546;
      id v11 = v5;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_INFO, "Error quick saving media object. error: %@, mediaObject: %@", (uint8_t *)&v10, 0x16u);
    }
    goto LABEL_9;
  }
}

void __66__CKChatController_QuickLook__previewActionsForPreviewController___block_invoke_378(uint64_t a1)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) setIsShowingPreview:0];
  v8[0] = *(void *)(a1 + 40);
  id v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:1];
  id v3 = [*(id *)(a1 + 32) entryView];
  uint64_t v4 = [v3 shouldShowSubject];
  id v5 = [*(id *)(a1 + 32) textInputContextIdentifier];
  int v6 = +[CKComposition compositionForMessageParts:v2 preserveSubject:v4 contextIdentifier:v5];

  id v7 = [*(id *)(a1 + 32) delegate];
  [v7 chatController:*(void *)(a1 + 32) forwardComposition:v6];
}

- (BOOL)shouldShowReplyButtonForMediaObject:(id)a3 previewController:(id)a4
{
  id v5 = -[CKChatController _chatItemForMediaObject:](self, "_chatItemForMediaObject:", a3, a4);
  if (v5)
  {
    int v6 = [(CKCoreChatController *)self conversation];
    char v7 = [v6 canReplyToChatItem:v5];
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

- (void)replyButtonTappedForMediaObject:(id)a3 previewController:(id)a4
{
  id v7 = a4;
  int v6 = [(CKChatController *)self _chatItemForMediaObject:a3];
  if (v6) {
    [(CKChatController *)self showModalInlineReplyControllerForChatItem:v6 fromViewController:v7];
  }
}

- (BOOL)shouldHideInteractionOptions
{
  id v3 = [(CKCoreChatController *)self conversation];
  char v4 = [v3 hasLeftGroupChat];

  id v5 = [(CKCoreChatController *)self conversation];
  int v6 = [v5 isReadOnlyChat];

  id v7 = [(CKCoreChatController *)self conversation];
  int v8 = [v7 isBusinessChatDisabled];

  return ([(CKChatController *)self isEditing] & 1) != 0
      || (v4 & 1) != 0
      || (![(CKCoreChatController *)self shouldDisplayTextEntry] | v8 | v6) == 1;
}

- (BOOL)previewControllerIsInGroupConversation:(id)a3
{
  id v3 = [(CKCoreChatController *)self conversation];
  char v4 = [v3 isGroupConversation];

  return v4;
}

- (void)sendMessageAcknowledgment:(int64_t)a3 chatItem:(id)a4 previewController:(id)a5
{
  id v7 = a4;
  id v8 = [(CKCoreChatController *)self chat];
  [v8 sendMessageAcknowledgment:a3 forChatItem:v7];
}

- (id)contextualCKChatItemsForPreviewController:(id)a3
{
  id v3 = [(CKCoreChatController *)self collectionViewController];
  char v4 = [v3 chatItems];

  return v4;
}

- (void)previewControllerDidCancelDismiss:(id)a3
{
  char v4 = [(CKChatController *)self entryView];
  [v4 endDeferringEntryFieldCollapsedStateChanges];

  id v5 = [(CKCoreChatController *)self collectionViewController];
  [v5 endHoldingUpdatesAfterQuicklookCancelsDismiss];
}

- (id)_chatItemForMediaObject:(id)a3
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v31 = a3;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  char v4 = [(CKCoreChatController *)self collectionViewController];
  id v5 = [v4 chatItems];

  uint64_t v30 = [v5 countByEnumeratingWithState:&v36 objects:v41 count:16];
  if (!v30) {
    goto LABEL_22;
  }
  uint64_t v6 = *(void *)v37;
  uint64_t v26 = *(void *)v37;
  CGFloat v27 = v5;
  do
  {
    for (uint64_t i = 0; i != v30; ++i)
    {
      if (*(void *)v37 != v6) {
        objc_enumerationMutation(v5);
      }
      id v8 = *(void **)(*((void *)&v36 + 1) + 8 * i);
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v9 = v8;
        int v10 = [v9 mediaObject];
        id v11 = [v10 transferGUID];
        __int16 v12 = [v31 transferGUID];
        char v13 = [v11 isEqualToString:v12];

        if (v13) {
          goto LABEL_23;
        }
        goto LABEL_8;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v28 = v8;
        id v14 = v8;
        long long v32 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        long long v35 = 0u;
        id v29 = v14;
        double v15 = [v14 aggregateChatItems];
        uint64_t v16 = [v15 countByEnumeratingWithState:&v32 objects:v40 count:16];
        if (!v16)
        {
LABEL_18:

          uint64_t v6 = v26;
          id v5 = v27;
          id v8 = v28;
LABEL_8:

          continue;
        }
        uint64_t v17 = v16;
        uint64_t v18 = *(void *)v33;
LABEL_12:
        uint64_t v19 = 0;
        while (1)
        {
          if (*(void *)v33 != v18) {
            objc_enumerationMutation(v15);
          }
          id v20 = *(void **)(*((void *)&v32 + 1) + 8 * v19);
          uint64_t v21 = objc_msgSend(v20, "mediaObject", v26, v27);
          char v22 = [v21 transferGUID];
          id v23 = [v31 transferGUID];
          char v24 = [v22 isEqualToString:v23];

          if (v24) {
            break;
          }
          if (v17 == ++v19)
          {
            uint64_t v17 = [v15 countByEnumeratingWithState:&v32 objects:v40 count:16];
            if (v17) {
              goto LABEL_12;
            }
            goto LABEL_18;
          }
        }
        id v9 = v20;

        uint64_t v6 = v26;
        id v5 = v27;
        if (v9) {
          goto LABEL_23;
        }
      }
    }
    uint64_t v30 = [v5 countByEnumeratingWithState:&v36 objects:v41 count:16];
  }
  while (v30);
LABEL_22:
  id v9 = 0;
LABEL_23:

  return v9;
}

- (BOOL)respondsToSelector:(SEL)a3
{
  if (sel_animateRevealWithInteractionProgress_forPreviewingAtLocation_inSourceView_containerView_ == a3)
  {
    char v4 = [(CKChatController *)self previewRevealView];
    BOOL v3 = v4 != 0;
  }
  else
  {
    v6.receiver = self;
    v6.super_class = (Class)CKChatController;
    return -[CKChatController respondsToSelector:](&v6, sel_respondsToSelector_);
  }
  return v3;
}

- (void)animateRevealWithInteractionProgress:(id)a3 forPreviewingAtLocation:(CGPoint)a4 inSourceView:(id)a5 containerView:(id)a6
{
  id v24 = a3;
  id v8 = a5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ([v24 didEnd] & 1) == 0)
  {
    id v9 = [MEMORY[0x1E4F42738] sharedApplication];
    int v10 = [v9 keyWindow];

    [v8 bounds];
    objc_msgSend(v8, "convertRect:toView:", v10);
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    double v18 = v17;
    uint64_t v19 = [(CKChatController *)self previewRevealView];
    [v10 addSubview:v19];

    id v20 = [(CKChatController *)self previewRevealView];
    objc_msgSend(v20, "setFrame:", v12, v14, v16, v18);

    uint64_t v21 = [(CKChatController *)self previewRevealView];
    char v22 = [(CKChatController *)self previewInvisibleInkEffectController];
    id v23 = [v22 borrowEffectView];
    [v21 addSubview:v23];

    [v24 addProgressObserver:self];
  }
  else
  {
    [(CKChatController *)self setPreviewRevealView:0];
  }
}

- (void)interactionProgressDidUpdate:(id)a3
{
  char v4 = (void *)MEMORY[0x1E4F39C10];
  uint64_t v5 = *MEMORY[0x1E4F3A490];
  id v6 = a3;
  id v7 = [v4 functionWithName:v5];
  [v6 percentComplete];
  double v9 = v8;

  *(float *)&double v10 = v9;
  [v7 _solveForInput:v10];
  CGFloat v12 = v11 * 0.0175 + 1.0;
  double v13 = [(CKChatController *)self previewRevealView];
  CGAffineTransformMakeScale(&v14, v12, v12);
  [v13 setTransform:&v14];
}

- (void)interactionProgress:(id)a3 didEnd:(BOOL)a4
{
  id v6 = a3;
  uint64_t v5 = [(CKChatController *)self previewRevealView];
  [v5 removeFromSuperview];

  [(CKChatController *)self setPreviewRevealView:0];
  [v6 removeProgressObserver:self];
}

- (void)presentCollaborationPopoverUI
{
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __64__CKChatController_Collaboration__presentCollaborationPopoverUI__block_invoke;
  aBlock[3] = &unk_1E5628870;
  void aBlock[4] = self;
  BOOL v3 = _Block_copy(aBlock);
  if (CKIsRunningInMacCatalyst()
    && ([MEMORY[0x1E4F59BB0] instancesRespondToSelector:sel_initWithCollaborationSharingOptions_layoutMargins_userDidChangeOption_contentSizeDidChange_] & 1) != 0)
  {
    char v4 = 0;
  }
  else
  {
    int v5 = [MEMORY[0x1E4F59BB0] instancesRespondToSelector:sel_initWithCollaborationSharingOptionsView_userDidChangeOption_];
    id v6 = objc_alloc(MEMORY[0x1E4F59BB0]);
    id v7 = [(CKChatController *)self composition];
    double v8 = [v7 collaborationShareOptions];
    double v9 = v8;
    if (v5)
    {
      char v4 = (void *)[v6 initWithCollaborationSharingOptionsView:v8 userDidChangeOption:v3];
    }
    else
    {
      double v10 = [v8 optionsGroups];
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      void v17[2] = __64__CKChatController_Collaboration__presentCollaborationPopoverUI__block_invoke_2;
      void v17[3] = &unk_1E5628898;
      void v17[4] = self;
      char v4 = (void *)[v6 initWithSharingOptionsView:v10 userDidChangeOption:v17];
    }
  }
  [v4 setModalPresentationStyle:1];
  [v4 setModalTransitionStyle:0];
  float v11 = (void *)[objc_alloc(MEMORY[0x1E4F427C0]) initWithBarButtonSystemItem:0 target:self action:sel__dismissCollaborationPopoverUI];
  CGFloat v12 = [v4 navigationItem];
  [v12 setRightBarButtonItem:v11];

  double v13 = [[CKFullscreenBrowserNavigationController alloc] initWithRootViewController:v4];
  CGAffineTransform v14 = [(CKFullscreenBrowserNavigationController *)v13 navigationBar];
  [v14 setTranslucent:0];
  [v14 _setShadowAlpha:0.0];
  double v15 = [MEMORY[0x1E4F428B8] systemGroupedBackgroundColor];
  [v14 _setBackgroundColor:v15];

  double v16 = +[CKAdaptivePresentationController sharedInstance];
  [v16 presentViewController:v13 fromViewController:self presentationHandler:0 dismissalHandler:0 animated:1 completion:0];
}

void __64__CKChatController_Collaboration__presentCollaborationPopoverUI__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = *(void **)(a1 + 32);
  id v7 = a5;
  double v8 = [v6 composition];
  id v12 = [v8 shelfPluginPayload];

  [v12 setSkipConfigurePlugin:0];
  double v9 = [v7 summary];
  [v12 setCollaborationOptionsSummary:v9];

  double v10 = [*(id *)(a1 + 32) composition];
  float v11 = [v10 compositionByAppendingText:0 shelfPluginPayload:v12 shelfMediaObject:0 collaborationShareOptions:v7];

  [*(id *)(a1 + 32) setComposition:v11];
}

void __64__CKChatController_Collaboration__presentCollaborationPopoverUI__block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = [MEMORY[0x1E4F3BE00] shareOptionsWithOptionsGroups:a5];
  id v6 = [*(id *)(a1 + 32) composition];
  id v7 = [v6 compositionWithCollaborationShareOptions:v8];
  [*(id *)(a1 + 32) setComposition:v7];
}

- (void)_dismissCollaborationPopoverUI
{
  id v2 = +[CKAdaptivePresentationController sharedInstance];
  [v2 dismissViewControllerAnimated:1 completion:0];
}

- (void)presentCollaborationFailureAlertForComposition:(id)a3 sharingURL:(id)a4 error:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  if ([MEMORY[0x1E4F29060] isMainThread])
  {
    [(CKChatController *)self _actuallyPresentCollaborationFailureAlertForComposition:v10 sharingURL:v11 error:v12 completion:v13];
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __110__CKChatController_Collaboration__presentCollaborationFailureAlertForComposition_sharingURL_error_completion___block_invoke;
    block[3] = &unk_1E5622C20;
    void block[4] = self;
    id v15 = v10;
    id v16 = v11;
    id v17 = v12;
    id v18 = v13;
    dispatch_sync(MEMORY[0x1E4F14428], block);
  }
}

uint64_t __110__CKChatController_Collaboration__presentCollaborationFailureAlertForComposition_sharingURL_error_completion___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _actuallyPresentCollaborationFailureAlertForComposition:*(void *)(a1 + 40) sharingURL:*(void *)(a1 + 48) error:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
}

- (void)_actuallyPresentCollaborationFailureAlertForComposition:(id)a3 sharingURL:(id)a4 error:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v192 = a4;
  id v11 = a5;
  id v12 = a6;
  id v13 = [v10 sourceApplicationID];
  int v14 = [v13 isEqual:@"com.apple.FaceTime"];

  if (v14)
  {
    id v15 = [MEMORY[0x1E4F1CB10] URLWithString:@"sms://"];
    TUOpenURL();
  }
  id v16 = v192;
  CGRect v190 = v12;
  CGRect v191 = self;
  if (!v11) {
    goto LABEL_17;
  }
  id v17 = [v11 domain];
  int v18 = [v17 isEqualToString:*MEMORY[0x1E4F19C40]];

  if (v18)
  {
    uint64_t v19 = [(CKChatController *)self composition];
    id v20 = [v19 shelfPluginPayload];

    uint64_t v21 = [v20 collaborationMetadata];
    uint64_t v22 = [v21 initiatorHandle];

    uint64_t v23 = [v11 code];
    CGRect v187 = (void *)v22;
    if (v23 <= 109)
    {
      switch(v23)
      {
        case 3:
        case 4:
          id v24 = CKFrameworkBundle();
          id v25 = v20;
          uint64_t v26 = [v24 localizedStringForKey:@"COLLABORATION_ERROR_NO_INTERNET_CONNECTION_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          CGFloat v27 = CKFrameworkBundle();
          uint64_t v28 = v27;
          id v29 = @"COLLABORATION_ERROR_NO_INTERNET_CONNECTION_MESSAGE";
          goto LABEL_45;
        case 6:
          double v76 = CKFrameworkBundle();
          id v25 = v20;
          uint64_t v26 = [v76 localizedStringForKey:@"COLLABORATION_ERROR_ICLOUD_UNAVAILABLE_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          CGFloat v27 = CKFrameworkBundle();
          uint64_t v28 = v27;
          id v29 = @"COLLABORATION_ERROR_TRY_AGAIN_LATER";
          goto LABEL_45;
        case 7:
        case 23:
        case 34:
          goto LABEL_24;
        case 9:
          double v77 = CKFrameworkBundle();
          double v78 = v20;
          uint64_t v26 = [v77 localizedStringForKey:@"COLLABORATION_ERROR_NOT_AUTHENTICATED_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          double v79 = CKFrameworkBundle();
          uint64_t v28 = v79;
          double v80 = @"COLLABORATION_ERROR_NOT_AUTHENTICATED_ALERT_MESSAGE";
          goto LABEL_57;
        case 18:
          uint64_t v81 = [MEMORY[0x1E4F6EA28] sharedManager];
          double v82 = [v81 appNameFromSharingURL:v192];
          if (v82)
          {
            __int16 v179 = v81;
            v184 = v20;
            id v83 = v10;
            double v84 = NSString;
            double v85 = CKFrameworkBundle();
            int v86 = [v85 localizedStringForKey:@"COLLABORATION_ERROR_INCOMPATIBLE_VERSION_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
            id v87 = [MEMORY[0x1E4F6EA28] sharedManager];
            float64_t v88 = [v87 appNameFromSharingURL:v192];
            id v89 = objc_msgSend(v84, "stringWithFormat:", v86, v88);

            id v90 = [MEMORY[0x1E4F42738] sharedApplication];
            uint64_t v91 = [v90 userInterfaceLayoutDirection];

            if (v91 == 1) {
              double v92 = @"\u200F";
            }
            else {
              double v92 = @"\u200E";
            }
            uint64_t v26 = [(__CFString *)v92 stringByAppendingString:v89];
            id v10 = v83;
            id v16 = v192;
            id v20 = v184;
            uint64_t v81 = v179;
          }
          else
          {
            id v89 = CKFrameworkBundle();
            uint64_t v26 = [v89 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          }

          uint64_t v28 = CKFrameworkBundle();
          double v40 = [v28 localizedStringForKey:@"COLLABORATION_ERROR_INCOMPATIBLE_VERSION_ALERT_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v41 = 2;
          uint64_t v44 = 1;
          goto LABEL_93;
        case 25:
          goto LABEL_21;
        case 27:
          double v93 = CKFrameworkBundle();
          id v25 = v20;
          uint64_t v26 = [v93 localizedStringForKey:@"COLLABORATION_ERROR_LIMIT_EXCEEDED_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          CGFloat v27 = CKFrameworkBundle();
          uint64_t v28 = v27;
          id v29 = @"COLLABORATION_ERROR_LIMIT_EXCEEDED_MESSAGE";
          goto LABEL_45;
        case 29:
          double v94 = CKFrameworkBundle();
          id v25 = v20;
          uint64_t v26 = [v94 localizedStringForKey:@"COLLABORATION_ERROR_TOO_MANY_PARTICIPANTS_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          CGFloat v27 = CKFrameworkBundle();
          uint64_t v28 = v27;
          id v29 = @"COLLABORATION_ERROR_TOO_MANY_PARTICIPANTS_ALERT_MESSAGE";
LABEL_45:
          id v20 = v25;
          uint64_t v95 = [v27 localizedStringForKey:v29 value:&stru_1EDE4CA38 table:@"ChatKit"];
          goto LABEL_53;
        case 32:
          double v185 = v20;
          double v96 = NSString;
          uint64_t v97 = CKFrameworkBundle();
          double v98 = [v97 localizedStringForKey:@"COLLABORATION_ERROR_RESTRICTION_ENABLED_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          objc_msgSend(v96, "stringWithFormat:", v98, v22);
          id v99 = v11;
          v101 = id v100 = v10;

          double v102 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v103 = [v102 userInterfaceLayoutDirection];

          if (v103 == 1) {
            double v104 = @"\u200F";
          }
          else {
            double v104 = @"\u200E";
          }
          uint64_t v26 = [(__CFString *)v104 stringByAppendingString:v101];

          id v10 = v100;
          id v11 = v99;
          BOOL v105 = NSString;
          double v106 = CKFrameworkBundle();
          double v107 = [v106 localizedStringForKey:@"COLLABORATION_ERROR_RESTRICTION_ENABLED_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v28 = objc_msgSend(v105, "stringWithFormat:", v107, v22);

          id v16 = v192;
          double v108 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v109 = [v108 userInterfaceLayoutDirection];

          BOOL v53 = v109 == 1;
          id v20 = v185;
          if (v53) {
            double v54 = @"\u200F";
          }
          else {
            double v54 = @"\u200E";
          }
          goto LABEL_52;
        case 33:
          double v110 = CKFrameworkBundle();
          uint64_t v26 = [v110 localizedStringForKey:@"COLLABORATION_ERROR_PARTICIPANT_MAY_NEED_VERIFICATION_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          uint64_t v28 = CKFrameworkBundle();
          double v40 = [v28 localizedStringForKey:@"COLLABORATION_ERROR_PARTICIPANT_MAY_NEED_VERIFICATION_ALERT_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v44 = 0;
          uint64_t v41 = 3;
          goto LABEL_93;
        case 36:
          double v111 = CKFrameworkBundle();
          double v78 = v20;
          uint64_t v26 = [v111 localizedStringForKey:@"COLLABORATION_ERROR_ACCOUNT_TEMPORARILY_UNAVAILABLE_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          double v79 = CKFrameworkBundle();
          uint64_t v28 = v79;
          double v80 = @"COLLABORATION_ERROR_ACCOUNT_TEMPORARILY_UNAVAILABLE_ALERT_MESSAGE";
          goto LABEL_57;
        default:
          goto LABEL_58;
      }
    }
    if (v23 == 110)
    {
      double v112 = CKFrameworkBundle();
      double v78 = v20;
      uint64_t v26 = [v112 localizedStringForKey:@"COLLABORATION_ERROR_PRIVATE_MANATEE_UNAVAILABLE_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      double v79 = CKFrameworkBundle();
      uint64_t v28 = v79;
      double v80 = @"COLLABORATION_ERROR_PRIVATE_MANATEE_UNAVAILABLE_ALERT_MESSAGE";
LABEL_57:
      id v20 = v78;
      double v40 = [v79 localizedStringForKey:v80 value:&stru_1EDE4CA38 table:@"ChatKit"];
      uint64_t v44 = 1;
      uint64_t v41 = 1;
    }
    else
    {
      if (v23 == 111)
      {
LABEL_24:
        uint64_t v183 = v20;
        uint64_t v28 = [MEMORY[0x1E4F6EA28] sharedManager];
        uint64_t v55 = [v28 appNameFromSharingURL:v192];
        __int16 v56 = (void *)v55;
        if (v55)
        {
          v180 = (void *)v55;
          id v57 = v10;
          uint64_t v58 = NSString;
          id v59 = CKFrameworkBundle();
          BOOL v60 = [v59 localizedStringForKey:@"COLLABORATION_ERROR_COULD_NOT_START_COLLABORATION_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          __int16 v61 = [MEMORY[0x1E4F6EA28] sharedManager];
          id v62 = [v61 appNameFromSharingURL:v192];
          id v63 = objc_msgSend(v58, "stringWithFormat:", v60, v62);

          uint64_t v64 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v65 = [v64 userInterfaceLayoutDirection];

          if (v65 == 1) {
            double v66 = @"\u200F";
          }
          else {
            double v66 = @"\u200E";
          }
          double v40 = [(__CFString *)v66 stringByAppendingString:v63];
          id v10 = v57;
          __int16 v56 = v180;
        }
        else
        {
          id v63 = CKFrameworkBundle();
          double v40 = [v63 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
        }

        uint64_t v44 = 0;
        uint64_t v26 = 0;
        uint64_t v41 = 3;
      }
      else
      {
        if (v23 == 140)
        {
LABEL_21:
          id v45 = CKFrameworkBundle();
          CGFloat v46 = v20;
          uint64_t v26 = [v45 localizedStringForKey:@"COLLABORATION_ERROR_NOT_ENOUGH_SPACE_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          CGFloat v47 = NSString;
          CGFloat v48 = CKFrameworkBundle();
          double v49 = [v48 localizedStringForKey:@"COLLABORATION_ERROR_NOT_ENOUGH_SPACE_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v50 = objc_msgSend(MEMORY[0x1E4F28B68], "stringFromByteCount:countStyle:", objc_msgSend(v10, "mediaObjectsFileSize"), 3);
          uint64_t v28 = objc_msgSend(v47, "stringWithFormat:", v49, v50);

          double v51 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v52 = [v51 userInterfaceLayoutDirection];

          BOOL v53 = v52 == 1;
          id v20 = v46;
          if (v53) {
            double v54 = @"\u200F";
          }
          else {
            double v54 = @"\u200E";
          }
LABEL_52:
          uint64_t v95 = [(__CFString *)v54 stringByAppendingString:v28];
LABEL_53:
          double v40 = (void *)v95;
          uint64_t v44 = 0;
          uint64_t v41 = 0;
          goto LABEL_93;
        }
LABEL_58:
        uint64_t v183 = v20;
        uint64_t v28 = [MEMORY[0x1E4F6EA28] sharedManager];
        uint64_t v113 = [v28 appNameFromSharingURL:v192];
        int v114 = (void *)v113;
        if (v113)
        {
          id v181 = (void *)v113;
          id v115 = v10;
          __int16 v116 = NSString;
          double v117 = CKFrameworkBundle();
          __int16 v118 = [v117 localizedStringForKey:@"COLLABORATION_ERROR_COULD_NOT_START_COLLABORATION_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          uint64_t v119 = [MEMORY[0x1E4F6EA28] sharedManager];
          __int16 v120 = [v119 appNameFromSharingURL:v192];
          uint64_t v121 = objc_msgSend(v116, "stringWithFormat:", v118, v120);

          uint64_t v122 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v123 = [v122 userInterfaceLayoutDirection];

          if (v123 == 1) {
            double v124 = @"\u200F";
          }
          else {
            double v124 = @"\u200E";
          }
          double v40 = [(__CFString *)v124 stringByAppendingString:v121];
          id v10 = v115;
          int v114 = v181;
        }
        else
        {
          uint64_t v121 = CKFrameworkBundle();
          double v40 = [v121 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
        }

        uint64_t v44 = 0;
        uint64_t v41 = 0;
        uint64_t v26 = 0;
      }
      id v20 = v183;
    }
LABEL_93:

    char v43 = 0;
    self = v191;
    goto LABEL_94;
  }
  uint64_t v30 = [v11 domain];
  int v31 = [v30 isEqualToString:@"CKCollaborationErrorDomain"];

  if (v31)
  {
    switch([v11 code])
    {
      case 1:
        long long v32 = CKFrameworkBundle();
        uint64_t v26 = [v32 localizedStringForKey:@"COLLABORATION_ERROR_URL_INACCESSABLE_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

        long long v33 = CKFrameworkBundle();
        long long v34 = v33;
        long long v35 = @"COLLABORATION_ERROR_URL_INACCESSABLE_MESSAGE";
        goto LABEL_28;
      case 2:
        double v67 = CKFrameworkBundle();
        uint64_t v26 = [v67 localizedStringForKey:@"COLLABORATION_ERROR_MISSING_FILE_FOR_URL_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

        long long v33 = CKFrameworkBundle();
        long long v34 = v33;
        long long v35 = @"COLLABORATION_ERROR_MISSING_FILE_FOR_URL_MESSAGE";
LABEL_28:
        double v40 = [v33 localizedStringForKey:v35 value:&stru_1EDE4CA38 table:@"ChatKit"];

        char v43 = 0;
        uint64_t v44 = 0;
        uint64_t v41 = 0;
        goto LABEL_94;
      case 3:
        double v68 = [(CKCoreChatController *)self conversation];
        double v69 = [v68 chat];
        int v70 = [v69 isGroupChat];

        if (v70)
        {
          double v71 = CKFrameworkBundle();
          uint64_t v26 = [v71 localizedStringForKey:@"COLLABORATION_ERROR_ALL_RECIPIENTS_CANNOT_JOIN_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

          uint64_t v72 = CKFrameworkBundle();
          double v73 = v72;
          double v74 = @"COLLABORATION_ERROR_ALL_RECIPIENTS_CANNOT_JOIN_MESSAGE";
LABEL_32:
          double v40 = [v72 localizedStringForKey:v74 value:&stru_1EDE4CA38 table:@"ChatKit"];
        }
        else
        {
          id v125 = [(CKCoreChatController *)self conversation];
          v126 = [v125 recipient];
          float64x2_t v127 = [v126 abbreviatedDisplayName];

          float64_t v128 = NSString;
          float64x2_t v129 = CKFrameworkBundle();
          [v129 localizedStringForKey:@"COLLABORATION_ERROR_SINGLE_RECIPIENT_CANNOT_JOIN_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          id v130 = v11;
          v132 = id v131 = v10;
          double v133 = objc_msgSend(v128, "stringWithFormat:", v132, v127);

          double v134 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v135 = [v134 userInterfaceLayoutDirection];

          if (v135 == 1) {
            double v136 = @"\u200F";
          }
          else {
            double v136 = @"\u200E";
          }
          uint64_t v26 = [(__CFString *)v136 stringByAppendingString:v133];

          self = v191;
          double v137 = NSString;
          double v138 = CKFrameworkBundle();
          id v139 = [v138 localizedStringForKey:@"COLLABORATION_ERROR_SINGLE_RECIPIENT_CANNOT_JOIN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
          double v140 = objc_msgSend(v137, "stringWithFormat:", v139, v127);

          id v10 = v131;
          id v11 = v130;
          id v16 = v192;
          double v141 = [MEMORY[0x1E4F42738] sharedApplication];
          uint64_t v142 = [v141 userInterfaceLayoutDirection];

          if (v142 == 1) {
            double v143 = @"\u200F";
          }
          else {
            double v143 = @"\u200E";
          }
          double v40 = [(__CFString *)v143 stringByAppendingString:v140];
        }
        uint64_t v44 = 0;
        uint64_t v41 = 0;
        char v43 = 1;
        break;
      case 4:
        double v75 = CKFrameworkBundle();
        uint64_t v26 = [v75 localizedStringForKey:@"COLLABORATION_ERROR_SOME_RECIPIENTS_CANNOT_JOIN_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

        uint64_t v72 = CKFrameworkBundle();
        double v73 = v72;
        double v74 = @"COLLABORATION_ERROR_SOME_RECIPIENTS_CANNOT_JOIN_MESSAGE";
        goto LABEL_32;
      default:
        goto LABEL_17;
    }
    goto LABEL_94;
  }
  long long v36 = [v11 domain];
  int v37 = [v36 isEqualToString:@"CKCollaborationStatusErrorDomain"];

  if (!v37)
  {
    uint64_t v42 = IMLogHandleForCategory();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(Collaboration) _actuallyPresentCollaborationFailureAlertForComposition:sharingURL:error:completion:]();
    }

LABEL_17:
    char v43 = 0;
    uint64_t v44 = 0;
    uint64_t v41 = 0;
    double v40 = 0;
    uint64_t v26 = 0;
    goto LABEL_94;
  }
  switch([v11 code])
  {
    case 0:
      v144 = CKFrameworkBundle();
      v145 = v144;
      double v146 = @"COLLABORATION_ERROR_ITEM_CANNOT_BE_SHARED_TITLE";
      goto LABEL_76;
    case 1:
    case 5:
      long long v38 = CKFrameworkBundle();
      uint64_t v26 = [v38 localizedStringForKey:@"COLLABORATION_ERROR_FOLDER_UNMODIFIABLE_SUBITEM_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      long long v39 = CKFrameworkBundle();
      double v40 = [v39 localizedStringForKey:@"COLLABORATION_ERROR_FOLDER_UNMODIFIABLE_SUBITEM_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      uint64_t v41 = 4;
      goto LABEL_86;
    case 2:
      v144 = CKFrameworkBundle();
      v145 = v144;
      double v146 = @"COLLABORATION_ERROR_ITEM_IS_ALREADY_SHARED_BY_ANOTHER_TITLE";
      goto LABEL_76;
    case 3:
      double v147 = IMLogHandleForCategory();
      if (os_log_type_enabled(v147, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(Collaboration) _actuallyPresentCollaborationFailureAlertForComposition:sharingURL:error:completion:]();
      }

      goto LABEL_74;
    case 4:
      v144 = CKFrameworkBundle();
      v145 = v144;
      double v146 = @"COLLABORATION_ERROR_ITEM_IS_ALREADY_SHARED_BY_ME_TITLE";
LABEL_76:
      uint64_t v26 = [v144 localizedStringForKey:v146 value:&stru_1EDE4CA38 table:@"ChatKit"];

      goto LABEL_77;
    case 6:
      double v158 = CKFrameworkBundle();
      uint64_t v26 = [v158 localizedStringForKey:@"COLLABORATION_ERROR_FOLDER_HAS_SHARED_SUBITEM_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      long long v39 = CKFrameworkBundle();
      double v40 = [v39 localizedStringForKey:@"COLLABORATION_ERROR_FOLDER_HAS_SHARED_SUBITEM_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      uint64_t v41 = 5;
LABEL_86:

      uint64_t v44 = 2;
      if (v40) {
        goto LABEL_87;
      }
      goto LABEL_78;
    default:
LABEL_74:
      uint64_t v26 = 0;
LABEL_77:
      uint64_t v41 = 0;
      uint64_t v44 = 0;
LABEL_78:
      CGRect v188 = [MEMORY[0x1E4F6EA28] sharedManager];
      CGPoint v186 = [v188 appNameFromSharingURL:v192];
      if (v186)
      {
        double v148 = NSString;
        v182 = CKFrameworkBundle();
        double v149 = [v182 localizedStringForKey:@"COLLABORATION_ERROR_COULD_NOT_START_COLLABORATION_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
        double v150 = [MEMORY[0x1E4F6EA28] sharedManager];
        [v150 appNameFromSharingURL:v192];
        v152 = id v151 = v10;
        double v153 = objc_msgSend(v148, "stringWithFormat:", v149, v152);

        self = v191;
        double v154 = [MEMORY[0x1E4F42738] sharedApplication];
        uint64_t v155 = [v154 userInterfaceLayoutDirection];

        BOOL v53 = v155 == 1;
        id v10 = v151;
        if (v53) {
          double v156 = @"\u200F";
        }
        else {
          double v156 = @"\u200E";
        }
        uint64_t v157 = [(__CFString *)v156 stringByAppendingString:v153];
      }
      else
      {
        double v153 = CKFrameworkBundle();
        uint64_t v157 = [v153 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      }
      double v40 = (void *)v157;

LABEL_87:
      char v43 = 0;
      break;
  }
LABEL_94:
  uint64_t v159 = [(CKChatController *)self collaborationFailureCount];
  [(CKChatController *)self setCollaborationFailureCount:v159 + 1];
  if ((v43 & 1) != 0 || v159 < 3)
  {
    if (v26)
    {
      if (v40) {
        goto LABEL_109;
      }
    }
    else
    {
      char v176 = CKFrameworkBundle();
      uint64_t v26 = [v176 localizedStringForKey:@"COLLABORATION_ERROR_OCCURRED_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

      if (v40) {
        goto LABEL_109;
      }
    }
    id v160 = v11;
    id v161 = v10;
    double v163 = CKFrameworkBundle();
    uint64_t v175 = [v163 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  }
  else
  {
    id v160 = v11;
    id v161 = v10;
    double v162 = CKFrameworkBundle();
    uint64_t v189 = [v162 localizedStringForKey:@"COLLABORATION_ERROR_OCCURRED_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

    double v163 = [MEMORY[0x1E4F6EA28] sharedManager];
    double v164 = [v163 appNameFromSharingURL:v16];
    if (v164)
    {
      double v165 = NSString;
      double v166 = CKFrameworkBundle();
      double v167 = [v166 localizedStringForKey:@"COLLABORATION_ERROR_COULD_NOT_START_COLLABORATION_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      v168 = [MEMORY[0x1E4F6EA28] sharedManager];
      uint64_t v169 = [v168 appNameFromSharingURL:v16];
      v170 = objc_msgSend(v165, "stringWithFormat:", v167, v169);

      double v171 = [MEMORY[0x1E4F42738] sharedApplication];
      uint64_t v172 = [v171 userInterfaceLayoutDirection];

      if (v172 == 1) {
        v173 = @"\u200F";
      }
      else {
        v173 = @"\u200E";
      }
      uint64_t v175 = [(__CFString *)v173 stringByAppendingString:v170];
      id v16 = v192;
    }
    else
    {
      v174 = CKFrameworkBundle();
      uint64_t v175 = [v174 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      v170 = v40;
      double v40 = v174;
    }

    uint64_t v44 = 0;
    uint64_t v41 = 0;
    uint64_t v26 = (void *)v189;
  }

  double v40 = (void *)v175;
  id v10 = v161;
  id v11 = v160;
  self = v191;
LABEL_109:
  v177 = IMLogHandleForCategory();
  if (os_log_type_enabled(v177, OS_LOG_TYPE_ERROR)) {
    -[CKChatController(Collaboration) _actuallyPresentCollaborationFailureAlertForComposition:sharingURL:error:completion:]();
  }

  v178 = +[CKAlertController alertControllerWithTitle:v26 message:v40 preferredStyle:1];
  [v178 setWantsWindowedPresentation:0];
  [(CKChatController *)self _addDefaultButtonToSharingErrorAlertController:v178 sharingURL:v16 defaultButtonAction:v41 completion:v190];
  [(CKChatController *)self _addOtherButtonToSharingErrorAlertController:v178 otherButtonAction:v44 completion:v190];

  [v178 presentFromViewController:self animated:1 completion:0];
}

- (void)_addOtherButtonToSharingErrorAlertController:(id)a3 otherButtonAction:(int64_t)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  if (a4 == 2)
  {
    id v10 = CKFrameworkBundle();
    id v11 = v10;
    id v12 = @"CANCEL";
  }
  else
  {
    if (a4 != 1) {
      goto LABEL_7;
    }
    id v10 = CKFrameworkBundle();
    id v11 = v10;
    id v12 = @"NOT_NOW";
  }
  id v13 = [v10 localizedStringForKey:v12 value:&stru_1EDE4CA38 table:@"ChatKit"];

  if (v13)
  {
    uint64_t v15 = MEMORY[0x1E4F143A8];
    uint64_t v16 = 3221225472;
    id v17 = __109__CKChatController_Collaboration___addOtherButtonToSharingErrorAlertController_otherButtonAction_completion___block_invoke;
    int v18 = &unk_1E56280C8;
    uint64_t v19 = self;
    id v20 = v9;
    int v14 = +[CKAlertAction actionWithTitle:v13 style:1 handler:&v15];
    objc_msgSend(v8, "addAction:", v14, v15, v16, v17, v18, v19);
  }
LABEL_7:
}

uint64_t __109__CKChatController_Collaboration___addOtherButtonToSharingErrorAlertController_otherButtonAction_completion___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) entryView];
  [v2 configureForDisplayMode:1];

  BOOL v3 = [*(id *)(a1 + 32) entryView];
  char v4 = [v3 sendButton];
  [v4 setEnabled:1];

  int v5 = [*(id *)(a1 + 32) entryView];
  [v5 updateEntryView];

  if (_IMWillLog()) {
    _IMAlwaysLog();
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v7 = *(uint64_t (**)(void))(result + 16);
    return v7();
  }
  return result;
}

- (void)_addDefaultButtonToSharingErrorAlertController:(id)a3 sharingURL:(id)a4 defaultButtonAction:(int64_t)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  switch(a5)
  {
    case 0:
      id v13 = CKFrameworkBundle();
      int v14 = v13;
      uint64_t v15 = @"OK";
      goto LABEL_8;
    case 1:
      id v13 = CKFrameworkBundle();
      int v14 = v13;
      uint64_t v15 = @"GO_TO_SETTINGS";
      goto LABEL_8;
    case 2:
      id v13 = CKFrameworkBundle();
      int v14 = v13;
      uint64_t v15 = @"GO_TO_APP_STORE";
      goto LABEL_8;
    case 3:
      id v13 = CKFrameworkBundle();
      int v14 = v13;
      uint64_t v15 = @"TRY_AGAIN";
      goto LABEL_8;
    case 4:
    case 5:
      id v13 = CKFrameworkBundle();
      int v14 = v13;
      uint64_t v15 = @"SHARE_ANYWAY";
LABEL_8:
      uint64_t v16 = [v13 localizedStringForKey:v15 value:&stru_1EDE4CA38 table:@"ChatKit"];

      break;
    default:
      uint64_t v16 = 0;
      break;
  }
  uint64_t v20 = MEMORY[0x1E4F143A8];
  uint64_t v21 = 3221225472;
  uint64_t v22 = __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke;
  uint64_t v23 = &unk_1E56288C0;
  id v24 = v11;
  id v25 = self;
  id v26 = v12;
  int64_t v27 = a5;
  id v17 = v12;
  id v18 = v11;
  uint64_t v19 = +[CKAlertAction actionWithTitle:v16 style:0 handler:&v20];
  objc_msgSend(v10, "addAction:", v19, v20, v21, v22, v23);
}

void __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(*(void *)(a1 + 56))
  {
    case 1:
      char v4 = [MEMORY[0x1E4F223E0] defaultWorkspace];
      int v5 = [MEMORY[0x1E4F1CB10] URLWithString:@"prefs:root=APPLE_ACCOUNT&path=APPLE_ACCOUNT_CONTACT"];
      id v21 = 0;
      [v4 openSensitiveURL:v5 withOptions:0 error:&v21];
      id v6 = v21;

      id v7 = IMLogHandleForCategory();
      id v8 = v7;
      if (v6)
      {
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
          __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke_cold_3();
        }
      }
      else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Opened user apple account settings page ok", buf, 2u);
      }
      goto LABEL_19;
    case 2:
      id v9 = [MEMORY[0x1E4F6EA28] sharedManager];
      id v6 = [v9 appStoreURLFromSharingURL:*(void *)(a1 + 32)];

      if (v6)
      {
        id v10 = [MEMORY[0x1E4F223E0] defaultWorkspace];
        id v19 = 0;
        [v10 openSensitiveURL:v6 withOptions:0 error:&v19];
        id v8 = v19;

        id v11 = IMLogHandleForCategory();
        id v12 = v11;
        if (v8)
        {
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke_cold_2();
          }
        }
        else if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "Opened App Store updates page ok", buf, 2u);
        }
      }
      else
      {
        id v8 = IMLogHandleForCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke_cold_1();
        }
      }
LABEL_19:

      goto LABEL_20;
    case 3:
      uint64_t v13 = 1;
      goto LABEL_21;
    case 4:
      uint64_t v13 = 2;
      goto LABEL_21;
    case 5:
      uint64_t v13 = 3;
      goto LABEL_21;
    default:
LABEL_20:
      uint64_t v13 = 0;
LABEL_21:
      int v14 = [*(id *)(a1 + 40) entryView];
      [v14 configureForDisplayMode:1];

      uint64_t v15 = [*(id *)(a1 + 40) entryView];
      uint64_t v16 = [v15 sendButton];
      [v16 setEnabled:1];

      id v17 = [*(id *)(a1 + 40) entryView];
      [v17 updateEntryView];

      if (_IMWillLog()) {
        _IMAlwaysLog();
      }
      uint64_t v18 = *(void *)(a1 + 48);
      if (v18) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v18, v13);
      }

      return;
  }
}

- (id)shareMetadataWithDugongTokensForCKShare:(id)a3 shareURL:(id)a4
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v21 = a3;
  id v22 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = [v21 participants];
  uint64_t v4 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v25 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        id v9 = [v8 userIdentity];
        id v10 = [v9 lookupInfo];
        id v11 = [v10 phoneNumber];
        id v12 = v11;
        if (v11)
        {
          id v13 = v11;
        }
        else
        {
          int v14 = [v8 userIdentity];
          uint64_t v15 = [v14 lookupInfo];
          id v13 = [v15 emailAddress];
        }
        uint64_t v16 = [v8 invitationToken];
        id v17 = (void *)v16;
        if (v13) {
          BOOL v18 = v16 == 0;
        }
        else {
          BOOL v18 = 1;
        }
        if (!v18)
        {
          if (MEMORY[0x192FBA6E0](v13))
          {
            uint64_t v19 = IMCanonicalizeFormattedString();

            id v13 = (id)v19;
          }
          [v22 setObject:v17 forKey:v13];
        }
      }
      uint64_t v5 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
    }
    while (v5);
  }

  return v22;
}

- (void)addParticipant:(id)a3 toCollaboration:(id)a4 forChatGUID:(id)a5 containerSetupInfo:(id)a6 completionHandler:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  void v22[2] = __120__CKChatController_GroupCollaboration__addParticipant_toCollaboration_forChatGUID_containerSetupInfo_completionHandler___block_invoke;
  v22[3] = &unk_1E56288E8;
  void v22[4] = self;
  id v23 = v12;
  id v24 = v13;
  id v25 = v15;
  id v26 = v14;
  id v27 = v16;
  id v17 = v14;
  id v18 = v16;
  id v19 = v15;
  id v20 = v13;
  id v21 = v12;
  [(CKChatController *)self _isShareBearURL:v20 completionHandler:v22];
}

uint64_t __120__CKChatController_GroupCollaboration__addParticipant_toCollaboration_forChatGUID_containerSetupInfo_completionHandler___block_invoke(void *a1, int a2)
{
  id v3 = (void *)a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[9];
  if (a2) {
    return [v3 _addParticipant:v4 toShareBearURL:v5 containerSetupInfo:a1[7] completionHandler:v6];
  }
  else {
    return [v3 _addParticipant:v4 toShareURL:v5 forChatGUID:a1[8] completionHandler:v6];
  }
}

- (void)removeParticipant:(id)a3 fromCollaboration:(id)a4 forChatGUID:(id)a5 containerSetupInfo:(id)a6 completionHandler:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  void v22[2] = __125__CKChatController_GroupCollaboration__removeParticipant_fromCollaboration_forChatGUID_containerSetupInfo_completionHandler___block_invoke;
  v22[3] = &unk_1E56288E8;
  void v22[4] = self;
  id v23 = v12;
  id v24 = v13;
  id v25 = v15;
  id v26 = v14;
  id v27 = v16;
  id v17 = v14;
  id v18 = v16;
  id v19 = v15;
  id v20 = v13;
  id v21 = v12;
  [(CKChatController *)self _isShareBearURL:v20 completionHandler:v22];
}

uint64_t __125__CKChatController_GroupCollaboration__removeParticipant_fromCollaboration_forChatGUID_containerSetupInfo_completionHandler___block_invoke(void *a1, int a2)
{
  id v3 = (void *)a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[9];
  if (a2) {
    return [v3 _removeParticipant:v4 fromShareBearURL:v5 containerSetupInfo:a1[7] completionHandler:v6];
  }
  else {
    return [v3 _removeParticipant:v4 fromShareURL:v5 forChatGUID:a1[8] completionHandler:v6];
  }
}

- (void)_addParticipant:(id)a3 toShareBearURL:(id)a4 containerSetupInfo:(id)a5 completionHandler:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = [(CKChatController *)self CKCloudSharingClass];
  if (objc_opt_respondsToSelector())
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    void v15[2] = __108__CKChatController_GroupCollaboration___addParticipant_toShareBearURL_containerSetupInfo_completionHandler___block_invoke;
    void v15[3] = &unk_1E5628910;
    id v20 = v13;
    id v16 = v11;
    id v17 = self;
    id v18 = v10;
    id v19 = v12;
    [(objc_class *)v14 ckMetadataFromShareURL:v16 containerSetupInfo:v19 completionHandler:v15];
  }
}

void __108__CKChatController_GroupCollaboration___addParticipant_toShareBearURL_containerSetupInfo_completionHandler___block_invoke(void *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v5 || ([v10 share], uint64_t v6 = objc_claimAutoreleasedReturnValue(), v6, !v6))
  {
    if (_IMWillLog()) {
      _IMAlwaysLog();
    }
    (*(void (**)(void, void))(a1[8] + 16))(a1[8], 0);
  }
  else
  {
    if (_IMWillLog())
    {
      uint64_t v9 = a1[4];
      _IMAlwaysLog();
    }
    id v7 = (void *)a1[5];
    id v8 = objc_msgSend(v10, "share", v9);
    [v7 _addParticipantToShare:v8 withHandle:a1[6] toCollaboration:a1[4] containerSetupInfo:a1[7] completionHandler:a1[8]];
  }
}

- (void)_addParticipantToShare:(id)a3 withHandle:(id)a4 toCollaboration:(id)a5 containerSetupInfo:(id)a6 completionHandler:(id)a7
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v47 = a6;
  id v14 = a7;
  id v15 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v16 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v17 = [MEMORY[0x1E4F6E6D8] sharedInstance];
  id v18 = [v17 fetchCNContactForHandleWithID:v12];

  if (v18)
  {
    id v42 = v14;
    id v43 = v13;
    id v44 = v12;
    id v45 = v11;
    long long v59 = 0u;
    long long v60 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    id v19 = [v18 phoneNumbers];
    uint64_t v20 = [v19 countByEnumeratingWithState:&v57 objects:v62 count:16];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)v58;
      do
      {
        uint64_t v23 = 0;
        do
        {
          if (*(void *)v58 != v22) {
            objc_enumerationMutation(v19);
          }
          id v24 = [*(id *)(*((void *)&v57 + 1) + 8 * v23) value];
          id v25 = [v24 stringValue];
          id v26 = IMNormalizeFormattedString();

          [v15 addObject:v26];
          ++v23;
        }
        while (v21 != v23);
        uint64_t v21 = [v19 countByEnumeratingWithState:&v57 objects:v62 count:16];
      }
      while (v21);
    }

    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    id v27 = [v18 emailAddresses];
    uint64_t v28 = [v27 countByEnumeratingWithState:&v53 objects:v61 count:16];
    id v11 = v45;
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = *(void *)v54;
      do
      {
        uint64_t v31 = 0;
        do
        {
          if (*(void *)v54 != v30) {
            objc_enumerationMutation(v27);
          }
          long long v32 = [*(id *)(*((void *)&v53 + 1) + 8 * v31) value];
          long long v33 = IMNormalizeFormattedString();

          [v16 addObject:v33];
          ++v31;
        }
        while (v29 != v31);
        uint64_t v29 = [v27 countByEnumeratingWithState:&v53 objects:v61 count:16];
      }
      while (v29);
    }

    id v13 = v43;
    id v12 = v44;
    id v14 = v42;
  }
  if (![v15 count] && !objc_msgSend(v16, "count"))
  {
    long long v34 = IMNormalizeFormattedString();
    int IsEmail = IMStringIsEmail();

    if (IsEmail) {
      long long v36 = v16;
    }
    else {
      long long v36 = v15;
    }
    [v36 addObject:v12];
  }
  int v37 = [(CKChatController *)self CKCloudSharingClass];
  v48[0] = MEMORY[0x1E4F143A8];
  v48[1] = 3221225472;
  v48[2] = __127__CKChatController_GroupCollaboration___addParticipantToShare_withHandle_toCollaboration_containerSetupInfo_completionHandler___block_invoke;
  v48[3] = &unk_1E5622DB0;
  id v49 = v13;
  id v50 = v16;
  id v51 = v15;
  id v52 = v14;
  id v38 = v14;
  id v39 = v15;
  id v40 = v16;
  id v41 = v13;
  [(objc_class *)v37 addParticipantsToShare:v11 containerSetupInfo:v47 emailAddresses:v40 phoneNumbers:v39 completionHandler:v48];
}

void __127__CKChatController_GroupCollaboration___addParticipantToShare_withHandle_toCollaboration_containerSetupInfo_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if ((!v7 || !v8) && _IMWillLog()) {
    _IMAlwaysLog();
  }
  if (v9)
  {
    id v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      __127__CKChatController_GroupCollaboration___addParticipantToShare_withHandle_toCollaboration_containerSetupInfo_completionHandler___block_invoke_cold_1();
    }

    if (_IMWillLog()) {
      _IMAlwaysLog();
    }
    (*(void (**)(void, void))(*(void *)(a1 + 56) + 16))(*(void *)(a1 + 56), 0);
  }
  else
  {
    if (_IMWillLog()) {
      _IMAlwaysLog();
    }
    (*(void (**)(void, uint64_t))(*(void *)(a1 + 56) + 16))(*(void *)(a1 + 56), 1);
  }
}

- (void)_removeParticipant:(id)a3 fromShareBearURL:(id)a4 containerSetupInfo:(id)a5 completionHandler:(id)a6
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v15 = [MEMORY[0x1E4F6E6D8] sharedInstance];
  id v16 = [v15 fetchCNContactForHandleWithID:v10];

  if (v16)
  {
    long long v33 = self;
    id v34 = v13;
    id v35 = v12;
    id v36 = v11;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    id v17 = [v16 phoneNumbers];
    uint64_t v18 = [v17 countByEnumeratingWithState:&v47 objects:v52 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)v48;
      do
      {
        uint64_t v21 = 0;
        do
        {
          if (*(void *)v48 != v20) {
            objc_enumerationMutation(v17);
          }
          uint64_t v22 = [*(id *)(*((void *)&v47 + 1) + 8 * v21) value];
          uint64_t v23 = [v22 stringValue];
          id v24 = IMNormalizeFormattedString();

          [v14 addObject:v24];
          ++v21;
        }
        while (v19 != v21);
        uint64_t v19 = [v17 countByEnumeratingWithState:&v47 objects:v52 count:16];
      }
      while (v19);
    }

    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id v25 = [v16 emailAddresses];
    uint64_t v26 = [v25 countByEnumeratingWithState:&v43 objects:v51 count:16];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = *(void *)v44;
      do
      {
        uint64_t v29 = 0;
        do
        {
          if (*(void *)v44 != v28) {
            objc_enumerationMutation(v25);
          }
          uint64_t v30 = [*(id *)(*((void *)&v43 + 1) + 8 * v29) value];
          uint64_t v31 = IMNormalizeFormattedString();

          [v14 addObject:v31];
          ++v29;
        }
        while (v27 != v29);
        uint64_t v27 = [v25 countByEnumeratingWithState:&v43 objects:v51 count:16];
      }
      while (v27);
    }

    id v12 = v35;
    id v11 = v36;
    self = v33;
    id v13 = v34;
  }
  if (![v14 count]) {
    [v14 addObject:v10];
  }
  long long v32 = [(CKChatController *)self CKCloudSharingClass];
  if (objc_opt_respondsToSelector())
  {
    v37[0] = MEMORY[0x1E4F143A8];
    v37[1] = 3221225472;
    v37[2] = __113__CKChatController_GroupCollaboration___removeParticipant_fromShareBearURL_containerSetupInfo_completionHandler___block_invoke;
    v37[3] = &unk_1E5628910;
    id v42 = v13;
    id v38 = v10;
    id v39 = v14;
    id v40 = self;
    id v41 = v12;
    [(objc_class *)v32 ckMetadataFromShareURL:v11 containerSetupInfo:v41 completionHandler:v37];
  }
}

void __113__CKChatController_GroupCollaboration___removeParticipant_fromShareBearURL_containerSetupInfo_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  int v7 = _IMWillLog();
  if (!v5 || v6)
  {
    if (v7) {
      _IMAlwaysLog();
    }
    (*(void (**)(void, void))(*(void *)(a1 + 64) + 16))(*(void *)(a1 + 64), 0);
  }
  else
  {
    if (v7)
    {
      uint64_t v29 = *(void *)(a1 + 32);
      _IMAlwaysLog();
    }
    id v8 = objc_msgSend(v5, "share", v29);
    [v8 participants];
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v31 = [v9 countByEnumeratingWithState:&v40 objects:v45 count:16];
    if (v31)
    {
      uint64_t v10 = *(void *)v41;
      id v34 = v8;
      id v35 = v5;
      uint64_t v30 = *(void *)v41;
      long long v33 = v9;
      do
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v41 != v10) {
            objc_enumerationMutation(v9);
          }
          id v12 = *(void **)(*((void *)&v40 + 1) + 8 * v11);
          id v13 = [v12 userIdentity];
          id v14 = [v13 lookupInfo];
          id v15 = [v14 phoneNumber];
          id v16 = v15;
          long long v32 = v12;
          if (v15)
          {
            id v17 = v15;
          }
          else
          {
            uint64_t v18 = [v12 userIdentity];
            uint64_t v19 = [v18 lookupInfo];
            id v17 = [v19 emailAddress];
          }
          long long v38 = 0u;
          long long v39 = 0u;
          long long v36 = 0u;
          long long v37 = 0u;
          id v20 = *(id *)(a1 + 40);
          uint64_t v21 = [v20 countByEnumeratingWithState:&v36 objects:v44 count:16];
          if (v21)
          {
            uint64_t v22 = v21;
            uint64_t v23 = *(void *)v37;
            while (2)
            {
              for (uint64_t i = 0; i != v22; ++i)
              {
                if (*(void *)v37 != v23) {
                  objc_enumerationMutation(v20);
                }
                id v25 = *(void **)(*((void *)&v36 + 1) + 8 * i);
                uint64_t v26 = [v17 lowercaseString];
                uint64_t v27 = [v25 lowercaseString];
                int v28 = [v26 isEqualToString:v27];

                if (v28)
                {
                  id v8 = v34;
                  [v34 removeParticipant:v32];

                  id v9 = v33;
                  [*(id *)(a1 + 48) _updateShare:v34 containerSetupInfo:*(void *)(a1 + 56) completionHandler:*(void *)(a1 + 64)];
                  id v5 = v35;
                  id v6 = 0;
                  goto LABEL_30;
                }
              }
              uint64_t v22 = [v20 countByEnumeratingWithState:&v36 objects:v44 count:16];
              if (v22) {
                continue;
              }
              break;
            }
          }

          ++v11;
          id v8 = v34;
          id v5 = v35;
          id v9 = v33;
          uint64_t v10 = v30;
        }
        while (v11 != v31);
        id v6 = 0;
        uint64_t v31 = [v33 countByEnumeratingWithState:&v40 objects:v45 count:16];
      }
      while (v31);
    }

    if (_IMWillLog()) {
      _IMAlwaysLog();
    }
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))(*(void *)(a1 + 64));
LABEL_30:
  }
}

- (void)_addParticipant:(id)a3 toShareURL:(id)a4 forChatGUID:(id)a5 completionHandler:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke;
  aBlock[3] = &unk_1E5628938;
  id v13 = v12;
  id v27 = v13;
  id v14 = a5;
  id v15 = _Block_copy(aBlock);
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  void v20[2] = __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_2;
  v20[3] = &unk_1E5628988;
  char v25 = 0;
  id v21 = v10;
  id v22 = v11;
  id v23 = v13;
  id v24 = v15;
  id v16 = v15;
  id v17 = v11;
  id v18 = v10;
  id v19 = v13;
  [(CKChatController *)self _collaborationMetadataForURL:v17 forChatGUID:v14 completionHandler:v20];
}

void __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (_IMWillLog()) {
    _IMAlwaysLog();
  }
  int v6 = _IMWillLog();
  if (!v7 || v5)
  {
    if (v6) {
      _IMAlwaysLog();
    }
  }
  else if (v6)
  {
    _IMAlwaysLog();
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32));
}

void __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_2(uint64_t a1, void *a2)
{
  v20[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    id v4 = objc_alloc(MEMORY[0x1E4F1CAD0]);
    v20[0] = *(void *)(a1 + 32);
    id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v20 count:1];
    int v6 = (void *)[v4 initWithArray:v5];

    id v7 = objc_alloc(MEMORY[0x1E4FA5608]);
    id v8 = MEMORY[0x1E4F14428];
    id v9 = (void *)[v7 initWithTargetSerialQueue:MEMORY[0x1E4F14428] synchronous:0];
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_331;
    v13[3] = &unk_1E5628960;
    char v19 = *(unsigned char *)(a1 + 64);
    id v14 = v9;
    id v15 = v6;
    id v16 = *(id *)(a1 + 40);
    id v17 = v3;
    id v18 = *(id *)(a1 + 56);
    id v10 = v6;
    id v11 = v9;
    dispatch_async(v8, v13);
  }
  else
  {
    id v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_2_cold_1();
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

uint64_t __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_331(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 72);
  int v3 = _IMWillLog();
  if (v2)
  {
    if (v3) {
      _IMAlwaysLog();
    }
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v8 = *(void *)(a1 + 64);
    return [v4 addParticipantHandles:v5 withFileURL:v6 metadata:v7 timeout:v8 completion:10.0];
  }
  else
  {
    if (v3) {
      _IMAlwaysLog();
    }
    id v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v13 = *(void *)(a1 + 64);
    return [v10 addParticipantHandles:v11 withMetadata:v12 timeout:v13 completion:10.0];
  }
}

- (void)_removeParticipant:(id)a3 fromShareURL:(id)a4 forChatGUID:(id)a5 completionHandler:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  void v18[2] = __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke;
  v18[3] = &unk_1E56289D8;
  void v18[4] = self;
  id v19 = v12;
  id v21 = v11;
  id v22 = v13;
  char v23 = 0;
  id v20 = v10;
  id v14 = v11;
  id v15 = v10;
  id v16 = v13;
  id v17 = v12;
  [(CKChatController *)self _highlightForShareURL:v14 completionHandler:v18];
}

void __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke(uint64_t a1, uint64_t a2)
{
  v42[1] = *MEMORY[0x1E4F143B8];
  int v3 = [*(id *)(a1 + 32) _attributionFromHighlight:a2 forChatGUID:*(void *)(a1 + 40)];
  id v4 = [v3 uniqueIdentifier];
  uint64_t v5 = [v3 collaborationMetadata];
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_2;
  aBlock[3] = &unk_1E56289B0;
  id v6 = v4;
  id v38 = v6;
  id v41 = *(id *)(a1 + 64);
  id v39 = *(id *)(a1 + 48);
  id v40 = *(id *)(a1 + 40);
  uint64_t v7 = _Block_copy(aBlock);
  if (v5)
  {
    uint64_t v8 = [v5 handleToIdentityMap];
    id v9 = v8;
    if (v8)
    {
      uint64_t v10 = [v8 objectForKeyedSubscript:*(void *)(a1 + 48)];
      id v11 = (void *)v10;
      if (v10)
      {
        id v12 = (void *)MEMORY[0x1E4F1CAD0];
        v42[0] = v10;
        id v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v42 count:1];
        id v14 = [v12 setWithArray:v13];

        id v15 = objc_alloc(MEMORY[0x1E4FA5608]);
        id v16 = MEMORY[0x1E4F14428];
        id v17 = (void *)[v15 initWithTargetSerialQueue:MEMORY[0x1E4F14428] synchronous:0];
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_349;
        block[3] = &unk_1E5628960;
        char v36 = *(unsigned char *)(a1 + 72);
        id v31 = v17;
        id v32 = v14;
        id v33 = *(id *)(a1 + 56);
        id v34 = v5;
        id v35 = v7;
        id v18 = v14;
        id v19 = v17;
        dispatch_async(v16, block);
      }
      else
      {
        id v22 = IMLogHandleForCategory();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
          __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_cold_3(v22, v23, v24, v25, v26, v27, v28, v29);
        }

        (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
      }
    }
    else
    {
      id v21 = IMLogHandleForCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_cold_2();
      }

      (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    }
  }
  else
  {
    id v20 = IMLogHandleForCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_2_cold_1();
    }

    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
}

void __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_2(void *a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (_IMWillLog()) {
    _IMAlwaysLog();
  }
  if (v9 && !v5 && a1[4])
  {
    if (_IMWillLog())
    {
      uint64_t v8 = a1[5];
      _IMAlwaysLog();
    }
    id v6 = objc_msgSend(MEMORY[0x1E4F6BC40], "sharedRegistry", v8);
    uint64_t v7 = [v6 existingChatWithGUID:a1[6]];

    if (v7) {
      [v7 sendUpdatedCollaborationMetadata:v9 forMessageGUID:a1[4]];
    }
    (*(void (**)(void))(a1[7] + 16))();
  }
  else
  {
    if (_IMWillLog()) {
      _IMAlwaysLog();
    }
    (*(void (**)(void))(a1[7] + 16))(a1[7]);
  }
}

uint64_t __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_349(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 72);
  int v3 = _IMWillLog();
  if (v2)
  {
    if (v3) {
      _IMAlwaysLog();
    }
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v8 = *(void *)(a1 + 64);
    return [v4 removeParticipantIdentities:v5 withFileURL:v6 metadata:v7 timeout:v8 completion:10.0];
  }
  else
  {
    if (v3) {
      _IMAlwaysLog();
    }
    uint64_t v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v13 = *(void *)(a1 + 64);
    return [v10 removeParticipantIdentities:v11 withMetadata:v12 timeout:v13 completion:10.0];
  }
}

- (Class)CKCloudSharingClass
{
  if (CKCloudSharingClass_onceToken != -1) {
    dispatch_once(&CKCloudSharingClass_onceToken, &__block_literal_global_142);
  }
  int v2 = (void *)CKCloudSharingClass_CKCloudSharingClass;

  return (Class)v2;
}

uint64_t __59__CKChatController_GroupCollaboration__CKCloudSharingClass__block_invoke()
{
  uint64_t result = MEMORY[0x192FBA860](@"CSCloudSharing", @"CloudSharing");
  CKCloudSharingClass_CKCloudSharingClass Class = result;
  return result;
}

- (void)_updateShare:(id)a3 containerSetupInfo:(id)a4 completionHandler:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = [(CKChatController *)self CKCloudSharingClass];
  if (objc_opt_respondsToSelector())
  {
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = __90__CKChatController_GroupCollaboration___updateShare_containerSetupInfo_completionHandler___block_invoke;
    v12[3] = &unk_1E5628A00;
    id v13 = v10;
    [(objc_class *)v11 updateShare:v8 containerSetupInfo:v9 completionHandler:v12];
  }
}

void __90__CKChatController_GroupCollaboration___updateShare_containerSetupInfo_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a2;
  id v7 = a3;
  id v8 = a4;
  int v9 = _IMWillLog();
  if (!v7 || v8)
  {
    if (v9) {
      _IMAlwaysLog();
    }
    (*(void (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, 0);
  }
  else
  {
    if (v9) {
      _IMAlwaysLog();
    }
    (*(void (**)(void, uint64_t, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 1, 0);
  }
}

- (void)_highlightForShareURL:(id)a3 completionHandler:(id)a4
{
  id v5 = a3;
  uint64_t v6 = (void (**)(id, void))a4;
  id v7 = [MEMORY[0x1E4F6BDA8] sharedController];
  id v15 = 0;
  id v8 = [v7 collaborationHighlightForURL:v5 error:&v15];
  id v9 = v15;

  if (v9) {
    BOOL v10 = 1;
  }
  else {
    BOOL v10 = v8 == 0;
  }
  if (v10)
  {
    uint64_t v11 = IMLogHandleForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(GroupCollaboration) _highlightForShareURL:completionHandler:]();
    }

    v6[2](v6, 0);
  }
  else
  {
    uint64_t v12 = [MEMORY[0x1E4F6BDA8] sharedController];
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = __80__CKChatController_GroupCollaboration___highlightForShareURL_completionHandler___block_invoke;
    v13[3] = &unk_1E5628A28;
    id v14 = v6;
    [v12 fetchAttributionsForHighlight:v8 completionHandler:v13];
  }
}

uint64_t __80__CKChatController_GroupCollaboration___highlightForShareURL_completionHandler___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (id)_attributionFromHighlight:(id)a3 forChatGUID:(id)a4
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  id v7 = [v5 attributions];
  uint64_t v8 = [v7 count];

  if (v8)
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v9 = [v5 attributions];
    uint64_t v10 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v21;
LABEL_4:
      uint64_t v13 = 0;
      while (1)
      {
        if (*(void *)v21 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v20 + 1) + 8 * v13);
        id v15 = [v14 conversationIdentifier];
        int v16 = [v15 isEqualToString:v6];

        if (v16) {
          break;
        }
        if (v11 == ++v13)
        {
          uint64_t v11 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
          if (v11) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
      id v17 = v14;
      if (_IMWillLog()) {
        _IMAlwaysLog();
      }

      if (v17) {
        goto LABEL_19;
      }
    }
    else
    {
LABEL_10:
    }
    id v18 = IMLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(GroupCollaboration) _attributionFromHighlight:forChatGUID:]();
    }
  }
  else
  {
    id v18 = IMLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(GroupCollaboration) _attributionFromHighlight:forChatGUID:]();
    }
  }

  id v17 = 0;
LABEL_19:

  return v17;
}

- (void)_collaborationMetadataForURL:(id)a3 forChatGUID:(id)a4 completionHandler:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void (**)(id, void))a5;
  uint64_t v10 = [MEMORY[0x1E4F6BDA8] sharedController];
  id v22 = 0;
  uint64_t v11 = [v10 collaborationHighlightForURL:v7 error:&v22];
  id v12 = v22;

  if (v12 || !v11)
  {
    uint64_t v13 = IMLogHandleForCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(GroupCollaboration) _highlightForShareURL:completionHandler:]();
    }

    v9[2](v9, 0);
  }
  id v14 = [MEMORY[0x1E4F6BDA8] sharedController];
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  void v18[2] = __99__CKChatController_GroupCollaboration___collaborationMetadataForURL_forChatGUID_completionHandler___block_invoke;
  v18[3] = &unk_1E5628A50;
  id v20 = v8;
  id v21 = v9;
  id v19 = v7;
  id v15 = v8;
  int v16 = v9;
  id v17 = v7;
  [v14 fetchAttributionsForHighlight:v11 completionHandler:v18];
}

void __99__CKChatController_GroupCollaboration___collaborationMetadataForURL_forChatGUID_completionHandler___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = [v3 attributions];
  uint64_t v5 = [v4 count];

  if (!v5)
  {
    id v6 = IMLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      __99__CKChatController_GroupCollaboration___collaborationMetadataForURL_forChatGUID_completionHandler___block_invoke_cold_2();
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v7 = [v3 attributions];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v18;
LABEL_7:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v18 != v10) {
        objc_enumerationMutation(v7);
      }
      id v12 = *(void **)(*((void *)&v17 + 1) + 8 * v11);
      uint64_t v13 = [v12 conversationIdentifier];
      int v14 = [v13 isEqualToString:*(void *)(a1 + 40)];

      if (v14) {
        break;
      }
      if (v9 == ++v11)
      {
        uint64_t v9 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
        if (v9) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    id v15 = [v12 collaborationMetadata];
    if (_IMWillLog()) {
      _IMAlwaysLog();
    }

    if (v15) {
      goto LABEL_20;
    }
  }
  else
  {
LABEL_13:
  }
  int v16 = IMLogHandleForCategory();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
    __99__CKChatController_GroupCollaboration___collaborationMetadataForURL_forChatGUID_completionHandler___block_invoke_cold_1();
  }

  (*(void (**)(void, void))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), 0);
  id v15 = 0;
LABEL_20:
  (*(void (**)(void, void *))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), v15);
}

- (void)_isShareBearURL:(id)a3 completionHandler:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)MEMORY[0x1E4F22398];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __74__CKChatController_GroupCollaboration___isShareBearURL_completionHandler___block_invoke;
  v10[3] = &unk_1E5628A78;
  id v11 = v5;
  id v12 = v6;
  id v8 = v6;
  id v9 = v5;
  [v7 getAppLinkWithURL:v9 completionHandler:v10];
}

void __74__CKChatController_GroupCollaboration___isShareBearURL_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5 || v6)
  {
    id v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __74__CKChatController_GroupCollaboration___isShareBearURL_completionHandler___block_invoke_cold_1();
    }
  }
  id v9 = [v5 targetApplicationRecord];
  uint64_t v10 = [v9 bundleIdentifier];

  LODWORD(v9) = [v10 isEqualToString:@"com.apple.CloudKit.ShareBear"];
  int v11 = _IMWillLog();
  if (v9)
  {
    if (v11) {
      _IMAlwaysLog();
    }
    id v12 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  else
  {
    if (v11) {
      _IMAlwaysLog();
    }
    id v12 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  v12();
}

- (void)createCollaborationFailureAlertForNotice:(id)a3
{
  id v4 = a3;
  id v5 = CKFrameworkBundle();
  uint64_t v6 = [v5 localizedStringForKey:@"FAILED_COLLABORATION_UPDATE_ALERT_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

  long long v49 = v4;
  if (!v4)
  {
    uint64_t v24 = self;
    id v15 = 0;
    int v16 = 0;
    goto LABEL_14;
  }
  id v7 = [v4 notice];
  id v8 = [v7 metadata];
  id v9 = [v8 contentTitle];

  uint64_t v10 = [v4 notice];
  int v11 = [v10 metadata];
  uint64_t v12 = [v11 bundleIdentifier];

  uint64_t v53 = 0;
  uint64_t v13 = [MEMORY[0x1E4F223F8] bundleRecordWithBundleIdentifier:v12 allowPlaceholder:0 error:&v53];
  int v14 = v13;
  id v15 = 0;
  int v16 = 0;
  if (!v53)
  {
    uint64_t v48 = v6;
    id v15 = [v13 localizedName];
    long long v17 = [v4 notice];
    long long v18 = [v17 metadata];
    uint64_t v19 = [v18 type];

    if (v19 == 8)
    {
      long long v20 = NSString;
      id v21 = CKFrameworkBundle();
      uint64_t v22 = [v21 localizedStringForKey:@"FAILED_COLLABORATION_ADD_UPDATE_ALERT_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      long long v23 = objc_msgSend(v20, "stringWithFormat:", v22, v9, v15);

LABEL_8:
      id v31 = [MEMORY[0x1E4F42738] sharedApplication];
      uint64_t v32 = [v31 userInterfaceLayoutDirection];

      if (v32 == 1) {
        id v33 = @"\u200F";
      }
      else {
        id v33 = @"\u200E";
      }
      int v16 = [(__CFString *)v33 stringByAppendingString:v23];
      uint64_t v6 = v48;

      goto LABEL_13;
    }
    uint64_t v25 = [v4 notice];
    uint64_t v26 = [v25 metadata];
    uint64_t v27 = [v26 type];

    if (v27 == 9)
    {
      uint64_t v28 = NSString;
      uint64_t v29 = CKFrameworkBundle();
      uint64_t v30 = [v29 localizedStringForKey:@"FAILED_COLLABORATION_REMOVE_UPDATE_ALERT_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
      long long v23 = objc_msgSend(v28, "stringWithFormat:", v30, v9, v15);

      goto LABEL_8;
    }
    int v16 = 0;
    uint64_t v6 = v48;
  }
LABEL_13:
  id v4 = (id)v12;
  uint64_t v24 = self;

LABEL_14:
  id v34 = (void *)v6;
  id v35 = +[CKAlertController alertControllerWithTitle:v6 message:v16 preferredStyle:1];
  if ([v15 length])
  {
    char v36 = NSString;
    long long v37 = CKFrameworkBundle();
    id v38 = [v37 localizedStringForKey:@"FAILED_COLLABORATION_OPEN_IN_APP" value:&stru_1EDE4CA38 table:@"ChatKit"];
    id v39 = objc_msgSend(v36, "stringWithFormat:", v38, v15);

    id v40 = [MEMORY[0x1E4F42738] sharedApplication];
    uint64_t v41 = [v40 userInterfaceLayoutDirection];

    if (v41 == 1) {
      long long v42 = @"\u200F";
    }
    else {
      long long v42 = @"\u200E";
    }
    long long v43 = [(__CFString *)v42 stringByAppendingString:v39];

    v50[0] = MEMORY[0x1E4F143A8];
    v50[1] = 3221225472;
    v50[2] = __81__CKChatController_GroupCollaboration__createCollaborationFailureAlertForNotice___block_invoke;
    v50[3] = &unk_1E56218C8;
    id v51 = v4;
    id v52 = v24;
    long long v44 = +[CKAlertAction actionWithTitle:v43 style:0 handler:v50];
    [v35 addAction:v44];
  }
  long long v45 = CKFrameworkBundle();
  uint64_t v46 = [v45 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];
  long long v47 = +[CKAlertAction actionWithTitle:v46 style:0 handler:&__block_literal_global_400_1];
  [v35 addAction:v47];

  [v35 presentFromViewController:v24 animated:1 completion:0];
}

void __81__CKChatController_GroupCollaboration__createCollaborationFailureAlertForNotice___block_invoke(uint64_t a1)
{
  if ([*(id *)(a1 + 32) length])
  {
    int v2 = [MEMORY[0x1E4F223E0] defaultWorkspace];
    [v2 openApplicationWithBundleID:*(void *)(a1 + 32)];
  }
  id v3 = [*(id *)(a1 + 40) entryView];
  [v3 configureForDisplayMode:1];

  id v4 = [*(id *)(a1 + 40) entryView];
  [v4 updateEntryView];
}

- (void)createCollaborationFailureAlertForFailedMetadataLoadWithFallback:(BOOL)a3 URL:(id)a4
{
  BOOL v4 = a3;
  id v6 = a4;
  id v7 = CKFrameworkBundle();
  id v8 = [v7 localizedStringForKey:@"FAILED_COLLABORATION_METADATA_ALERT_MESSAGE_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id v9 = [MEMORY[0x1E4F6EA28] sharedManager];
  uint64_t v10 = [v9 appNameFromSharingURL:v6];
  if (v10)
  {
    BOOL v29 = v4;
    uint64_t v30 = v8;
    int v11 = self;
    uint64_t v12 = NSString;
    uint64_t v13 = CKFrameworkBundle();
    int v14 = [v13 localizedStringForKey:@"FAILED_COLLABORATION_METADATA_ALERT_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
    id v15 = [MEMORY[0x1E4F6EA28] sharedManager];
    int v16 = [v15 appNameFromSharingURL:v6];
    long long v17 = objc_msgSend(v12, "stringWithFormat:", v14, v16);

    long long v18 = [MEMORY[0x1E4F42738] sharedApplication];
    uint64_t v19 = [v18 userInterfaceLayoutDirection];

    if (v19 == 1) {
      long long v20 = @"\u200F";
    }
    else {
      long long v20 = @"\u200E";
    }
    id v21 = [(__CFString *)v20 stringByAppendingString:v17];
    self = v11;
    id v8 = v30;
    BOOL v4 = v29;
  }
  else
  {
    long long v17 = CKFrameworkBundle();
    id v21 = [v17 localizedStringForKey:@"COLLABORATION_ERROR_UNKNOWN_MESSAGE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  }

  if (v4)
  {
    uint64_t v22 = CKFrameworkBundle();
    long long v23 = [v22 localizedStringForKey:@"FAILED_COLLABORATION_FALLBACK_SENDASCOPY" value:&stru_1EDE4CA38 table:@"ChatKit"];

    uint64_t v24 = [v21 stringByAppendingString:v23];

    id v21 = (void *)v24;
  }
  uint64_t v25 = CKFrameworkBundle();
  uint64_t v26 = [v25 localizedStringForKey:@"OK" value:&stru_1EDE4CA38 table:@"ChatKit"];

  uint64_t v27 = +[CKAlertController alertControllerWithTitle:v8 message:v21 preferredStyle:1];
  v31[0] = MEMORY[0x1E4F143A8];
  v31[1] = 3221225472;
  void v31[2] = __109__CKChatController_GroupCollaboration__createCollaborationFailureAlertForFailedMetadataLoadWithFallback_URL___block_invoke;
  v31[3] = &unk_1E5621178;
  void v31[4] = self;
  uint64_t v28 = +[CKAlertAction actionWithTitle:v26 style:0 handler:v31];
  [v27 addAction:v28];

  [v27 presentFromViewController:self animated:1 completion:0];
}

void __109__CKChatController_GroupCollaboration__createCollaborationFailureAlertForFailedMetadataLoadWithFallback_URL___block_invoke(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) entryView];
  [v2 configureForDisplayMode:1];

  id v3 = [*(id *)(a1 + 32) entryView];
  [v3 updateEntryView];
}

- (void)presentReplaceCompositionAlertWithConfirmationBlock:(id)a3 cancelBlock:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = CKFrameworkBundle();
  id v8 = [v7 localizedStringForKey:@"SHELF_REPLACE_ITEM_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  id v9 = CKFrameworkBundle();
  uint64_t v10 = [v9 localizedStringForKey:@"SHELF_REPLACE_ITEM" value:&stru_1EDE4CA38 table:@"ChatKit"];
  int v11 = +[CKAlertController alertControllerWithTitle:v8 message:v10 preferredStyle:1];

  uint64_t v12 = CKFrameworkBundle();
  uint64_t v13 = [v12 localizedStringForKey:@"SHELF_REPLACE_ITEM_OK_ACTION_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __104__CKChatController_GroupCollaboration__presentReplaceCompositionAlertWithConfirmationBlock_cancelBlock___block_invoke;
  id v23[3] = &unk_1E5621380;
  id v24 = v5;
  id v14 = v5;
  id v15 = +[CKAlertAction actionWithTitle:v13 style:0 handler:v23];
  [v11 addAction:v15];

  int v16 = CKFrameworkBundle();
  long long v17 = [v16 localizedStringForKey:@"SHELF_REPLACE_ITEM_CANCEL_ACTION_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = __104__CKChatController_GroupCollaboration__presentReplaceCompositionAlertWithConfirmationBlock_cancelBlock___block_invoke_2;
  v21[3] = &unk_1E5621380;
  id v22 = v6;
  id v18 = v6;
  uint64_t v19 = +[CKAlertAction actionWithTitle:v17 style:0 handler:v21];
  [v11 addAction:v19];

  [v11 presentFromViewController:self animated:1 completion:0];
}

uint64_t __104__CKChatController_GroupCollaboration__presentReplaceCompositionAlertWithConfirmationBlock_cancelBlock___block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t __104__CKChatController_GroupCollaboration__presentReplaceCompositionAlertWithConfirmationBlock_cancelBlock___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (BOOL)shouldShowTips
{
  if ([(CKChatController *)self _anyLegacyBannerIsVisible]
    || [(CKChatController *)self _anySuggestionPresenterWantsToShowBanner]
    || ([(CKChatController *)self traitCollection],
        id v3 = objc_claimAutoreleasedReturnValue(),
        uint64_t v4 = [v3 verticalSizeClass],
        v3,
        v4 == 1))
  {
    char v5 = 0;
  }
  else
  {
    objc_opt_class();
    char v5 = objc_opt_isKindOfClass() ^ 1;
  }
  return v5 & 1;
}

- (void)determineIfSendMenuShouldElevateCheckInWithCompletion:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self _shouldCheckWithSafetyMonitor])
  {
    char v5 = [(CKChatController *)self _recipientHandleID];
    if ([v5 length])
    {
      id v6 = [MEMORY[0x1E4F6E940] sharedCoordinator];
      v7[0] = MEMORY[0x1E4F143A8];
      v7[1] = 3221225472;
      void v7[2] = __89__CKChatController_SafetyMonitor__determineIfSendMenuShouldElevateCheckInWithCompletion___block_invoke;
      _OWORD v7[3] = &unk_1E5622358;
      id v8 = v4;
      [v6 checkPreferredHandlesCacheForReceiverWith:v5 completion:v7];
    }
  }
  else
  {
    (*((void (**)(id, void))v4 + 2))(v4, 0);
  }
}

void __89__CKChatController_SafetyMonitor__determineIfSendMenuShouldElevateCheckInWithCompletion___block_invoke(uint64_t a1, char a2)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __89__CKChatController_SafetyMonitor__determineIfSendMenuShouldElevateCheckInWithCompletion___block_invoke_2;
  v3[3] = &unk_1E56225E0;
  id v4 = *(id *)(a1 + 32);
  char v5 = a2;
  dispatch_async(MEMORY[0x1E4F14428], v3);
}

uint64_t __89__CKChatController_SafetyMonitor__determineIfSendMenuShouldElevateCheckInWithCompletion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

- (void)updateSendMenuShouldElevateCheckIn
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __69__CKChatController_SafetyMonitor__updateSendMenuShouldElevateCheckIn__block_invoke;
  v2[3] = &unk_1E5620BF0;
  v2[4] = self;
  [(CKChatController *)self determineIfSendMenuShouldElevateCheckInWithCompletion:v2];
}

void __69__CKChatController_SafetyMonitor__updateSendMenuShouldElevateCheckIn__block_invoke(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) conversation];
  [v3 setElevateCheckIn:a2];
}

- (void)showCheckInTips:(id)a3
{
  id v4 = a3;
  if ([(CKChatController *)self _shouldCheckWithSafetyMonitor])
  {
    char v5 = [(CKChatController *)self _sendertHandleID];
    uint64_t v11 = 0;
    uint64_t v12 = &v11;
    uint64_t v13 = 0x3032000000;
    id v14 = __Block_byref_object_copy__47;
    id v15 = __Block_byref_object_dispose__47;
    id v16 = 0;
    id v16 = [(CKChatController *)self _recipientHandleID];
    if ([v5 length] && objc_msgSend((id)v12[5], "length"))
    {
      id v6 = [MEMORY[0x1E4F6E940] sharedCoordinator];
      uint64_t v7 = v12[5];
      v8[0] = MEMORY[0x1E4F143A8];
      v8[1] = 3221225472;
      void v8[2] = __51__CKChatController_SafetyMonitor__showCheckInTips___block_invoke;
      v8[3] = &unk_1E5629700;
      id v9 = v4;
      uint64_t v10 = &v11;
      [v6 shouldShowTipKitSuggestionForInitiator:v5 andReceiver:v7 completion:v8];
    }
    _Block_object_dispose(&v11, 8);
  }
  else
  {
    (*((void (**)(id, void, void))v4 + 2))(v4, 0, 0);
  }
}

void __51__CKChatController_SafetyMonitor__showCheckInTips___block_invoke(uint64_t a1, char a2)
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __51__CKChatController_SafetyMonitor__showCheckInTips___block_invoke_2;
  block[3] = &unk_1E56296D8;
  id v4 = *(id *)(a1 + 32);
  char v9 = a2;
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = v4;
  uint64_t v8 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t __51__CKChatController_SafetyMonitor__showCheckInTips___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 48), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

- (BOOL)_shouldCheckWithSafetyMonitor
{
  id v3 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v4 = [v3 isZelkovaEnabled];

  if (!v4) {
    return 0;
  }
  uint64_t v5 = [(CKCoreChatController *)self conversation];
  char v6 = [v5 isGroupConversation];

  if (v6) {
    return 0;
  }
  uint64_t v8 = [(CKCoreChatController *)self conversation];
  char v9 = [v8 sendingService];
  char v10 = objc_msgSend(v9, "__ck_isSMS");

  return v10 ^ 1;
}

- (id)_recipientHandleID
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  int v2 = [(CKCoreChatController *)self conversation];
  id v3 = [v2 recipients];

  uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    char v6 = 0;
    uint64_t v7 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v3);
        }
        char v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if (([v9 isMe] & 1) == 0)
        {
          char v10 = [v9 defaultIMHandle];
          uint64_t v11 = [v10 ID];
          uint64_t v12 = objc_msgSend(v11, "im_stripCategoryLabel");

          char v6 = (void *)v12;
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v5);
  }
  else
  {
    char v6 = 0;
  }

  return v6;
}

- (id)_sendertHandleID
{
  int v2 = [(CKCoreChatController *)self conversation];
  id v3 = [v2 senderIdentifier];
  uint64_t v4 = objc_msgSend(v3, "im_stripCategoryLabel");

  return v4;
}

- (void)_kickPhotoKit
{
  if (CKIsRunningInMessages())
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __45__CKChatController_MediaInput___kickPhotoKit__block_invoke;
    block[3] = &unk_1E5620C40;
    void block[4] = self;
    if (_kickPhotoKit_onceToken != -1) {
      dispatch_once(&_kickPhotoKit_onceToken, block);
    }
  }
}

void __45__CKChatController_MediaInput___kickPhotoKit__block_invoke(uint64_t a1)
{
  int v2 = dispatch_get_global_queue(17, 0);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __45__CKChatController_MediaInput___kickPhotoKit__block_invoke_2;
  block[3] = &unk_1E5620C40;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v2, block);
}

void __45__CKChatController_MediaInput___kickPhotoKit__block_invoke_2(uint64_t a1)
{
  int v2 = [MEMORY[0x1E4F39228] sharedPhotoLibrary];
  [v2 registerChangeObserver:*(void *)(a1 + 32)];

  id v3 = [MEMORY[0x1E4F39228] sharedPhotoLibrary];
  [v3 unregisterChangeObserver:*(void *)(a1 + 32)];
}

- (void)showMediaPicker:(id)a3 animated:(BOOL)a4
{
  id v5 = a3;
  [(CKChatController *)self setImagePickerController:v5];
  [(CKChatController *)self updateRaiseGesture];
  char v6 = [(CKChatController *)self entryView];
  uint64_t v7 = [v6 contentView];
  unsigned int v8 = [v7 isActive];

  uint64_t v9 = [v5 sourceType];
  if (!CKIsRunningInMessagesViewService())
  {
    if (v9 == 1)
    {
      char v10 = +[CKUIBehavior sharedBehaviors];
      int v11 = [v10 canPresentOverKeyboard];

      [(CKChatController *)self beginHoldingAutorotationForKey:@"CKAutorotationHoldImagePicker"];
      if (!v11) {
        goto LABEL_3;
      }
    }
    else
    {
      [(CKChatController *)self beginHoldingAutorotationForKey:@"CKAutorotationHoldImagePicker"];
    }
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __57__CKChatController_MediaInput__showMediaPicker_animated___block_invoke;
    aBlock[3] = &unk_1E5621578;
    void aBlock[4] = self;
    uint64_t v12 = _Block_copy(aBlock);
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    void v16[2] = __57__CKChatController_MediaInput__showMediaPicker_animated___block_invoke_2;
    v16[3] = &unk_1E56215A0;
    void v16[4] = self;
    uint64_t v13 = _Block_copy(v16);
    long long v14 = +[CKAdaptivePresentationController sharedInstance];
    [v14 presentViewController:v5 fromViewController:self presentationHandler:v12 dismissalHandler:v13 animated:1 completion:0];

    goto LABEL_9;
  }
  [(CKChatController *)self beginHoldingAutorotationForKey:@"CKAutorotationHoldImagePicker"];
LABEL_3:
  v15.receiver = self;
  v15.super_class = (Class)CKChatController;
  [(CKChatController *)&v15 becomeFirstResponder];
  [(CKChatController *)self presentViewController:v5 animated:1 completion:0];
  [(CKChatController *)self setTargetFirstResponder:v8];
LABEL_9:
}

void __57__CKChatController_MediaInput__showMediaPicker_animated___block_invoke(uint64_t a1, void *a2, void *a3)
{
  char v6 = [*(id *)(a1 + 32) entryView];
  uint64_t v7 = [v6 photoButton];
  id v22 = [v7 button];

  [v22 frame];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  long long v16 = [*(id *)(a1 + 32) view];
  long long v17 = [v22 superview];
  objc_msgSend(v16, "convertRect:fromView:", v17, v9, v11, v13, v15);
  *a2 = v18;
  a2[1] = v19;
  a2[2] = v20;
  a2[3] = v21;

  *a3 = [*(id *)(a1 + 32) view];
}

void __57__CKChatController_MediaInput__showMediaPicker_animated___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) hideMediaPickerAnimated:0];
  int v2 = [*(id *)(a1 + 32) entryView];
  id v3 = [v2 contentView];
  char v4 = [v3 isActive];

  if ((v4 & 1) == 0)
  {
    id v5 = *(void **)(a1 + 32);
    [v5 becomeFirstResponder];
  }
}

- (void)hideMediaPickerAnimated:(BOOL)a3
{
}

- (void)hideMediaPickerAnimated:(BOOL)a3 completion:(id)a4
{
  BOOL v4 = a3;
  id v6 = a4;
  uint64_t v7 = [(CKChatController *)self imagePickerController];
  double v8 = v7;
  if (v7)
  {
    uint64_t v9 = [v7 sourceType];
    double v10 = CKScrollViewHoldingScrollGeometryReasonTypePhotoLibraryOverlay;
    if (v9 == 1) {
      double v10 = CKScrollViewHoldingScrollGeometryReasonTypeCameraOverlay;
    }
    double v11 = *v10;
    double v12 = [v8 presentingViewController];

    [(CKScrollViewController *)self endHoldingScrollGeometryUpdatesForReason:v11];
    if (v12)
    {
      uint64_t v17 = MEMORY[0x1E4F143A8];
      uint64_t v18 = 3221225472;
      uint64_t v19 = __67__CKChatController_MediaInput__hideMediaPickerAnimated_completion___block_invoke;
      uint64_t v20 = &unk_1E5623828;
      uint64_t v21 = self;
      id v22 = v6;
      double v13 = _Block_copy(&v17);
      double v14 = +[CKAdaptivePresentationController sharedInstance];
      double v15 = [v14 presentedViewController];

      if (v15 == v8) {
        +[CKAdaptivePresentationController sharedInstance];
      }
      else {
      long long v16 = [v8 presentingViewController];
      }
      [v16 dismissViewControllerAnimated:v4 completion:v13];
    }
  }
  [(CKChatController *)self endHoldingAutorotationForKey:@"CKAutorotationHoldImagePicker"];
  [(CKChatController *)self setImagePickerController:0];
  [(CKChatController *)self updateRaiseGesture];
}

void __67__CKChatController_MediaInput__hideMediaPickerAnimated_completion___block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = [*(id *)(a1 + 32) entryView];
  BOOL v4 = [v3 contentView];
  char v5 = [v4 isActive];

  if ((v5 & 1) == 0)
  {
    id v6 = *(void **)(a1 + 32);
    [v6 becomeFirstResponder];
  }
}

- (void)prewarmCamera:(id)a3
{
  BOOL v4 = [CKVideoMessageRecordingViewController alloc];
  char v5 = [(CKChatController *)self entryView];
  id v6 = [v5 photoButton];
  uint64_t v7 = [(CKVideoMessageRecordingViewController *)v4 initWithPresentationView:v6];

  [(CKVideoMessageRecordingViewController *)v7 setVideoMessageDelegate:self];
  [(CKChatController *)self setVideoMessageRecordingViewController:v7];
}

- (void)actionMenuGestureRecognizerButtonDidTouchDownButton:(id)a3
{
}

- (BOOL)actionMenuGestureRecognizerButtonShouldShowHint:(id)a3
{
  return 0;
}

- (BOOL)actionMenuGestureRecognizerButtonIsShowingHint:(id)a3
{
  return 0;
}

- (BOOL)actionMenuGestureRecognizerButtonShouldRecognizeGesture:(id)a3
{
  id v3 = [(CKCoreChatController *)self conversation];
  BOOL v4 = [v3 sendingService];
  if (objc_msgSend(v4, "__ck_isiMessage"))
  {
    char v5 = +[CKUIBehavior sharedBehaviors];
    char v6 = [v5 cameraIsAllowlisted];
  }
  else
  {
    char v6 = 0;
  }

  return v6;
}

- (void)actionMenuGestureRecognizerButtonGestureDidBegin:(id)a3
{
  if (objc_msgSend(MEMORY[0x1E4F42948], "__ck_currentDeviceIsPadOrMac", a3))
  {
    BOOL v4 = [MEMORY[0x1E4F42D90] mainScreen];
    [v4 bounds];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;

    double v13 = [(CKChatController *)self view];
    double v14 = [v13 window];
    [v14 bounds];
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    CGFloat v22 = v21;

    v31.origin.double x = v6;
    v31.origin.double y = v8;
    v31.size.double width = v10;
    v31.size.double height = v12;
    v32.origin.double x = v16;
    v32.origin.double y = v18;
    v32.size.double width = v20;
    v32.size.double height = v22;
    BOOL v23 = CGRectEqualToRect(v31, v32);
    if ((IMGetAppBoolForKey() & 1) != 0 || v23) {
      goto LABEL_7;
    }
  }
  else
  {
    if (IMGetAppBoolForKey()) {
      goto LABEL_7;
    }
    id v24 = [(CKChatController *)self view];
    uint64_t v25 = [v24 window];
    uint64_t v26 = [v25 windowScene];
    unint64_t v27 = [v26 interfaceOrientation] - 1;

    if (v27 <= 1)
    {
LABEL_7:
      if (![(CKChatController *)self isShowingVideoMessageRecordingView])
      {
        [(CKChatController *)self setShowingVideoMessageRecordingView:1];
        [(CKChatController *)self beginHoldingAutorotationForKey:@"CKAutorotationHoldQuickCamera"];
        uint64_t v28 = [(CKChatController *)self videoMessageRecordingViewController];

        if (!v28) {
          [(CKChatController *)self prewarmCamera:0];
        }
        id v29 = [(CKChatController *)self videoMessageRecordingViewController];
        [v29 presentWithCompletion:0];
      }
      return;
    }
  }

  [(CKChatController *)self addMedia:0];
}

- (void)ckVideoMessageRecordingViewControllerRecordingCanceled:(id)a3
{
  [(CKChatController *)self dismissVideoMessageRecordingViewController];
  id v3 = (void *)MEMORY[0x1E4F42FF8];

  [v3 attemptRotationToDeviceOrientation];
}

- (void)ckVideoMessageRecordingViewController:(id)a3 mediaObjectCaptured:(id)a4 error:(id)a5
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  double v11 = [(CKChatController *)self entryView];
  if (!v9) {
    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    CGFloat v12 = +[CKComposition expirableCompositionWithMediaObject:v9];
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      if (IMOSLoggingEnabled())
      {
        double v14 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v23 = v9;
          _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "Tried to send an attachment from video message recorder which wasn't an image or a movie: %@", buf, 0xCu);
        }
      }
      goto LABEL_12;
    }
    CGFloat v12 = +[CKComposition quickImageCompositionWithMediaObject:v9];
  }
  if (!v12)
  {
LABEL_12:
    id v13 = 0;
    goto LABEL_13;
  }
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  CGFloat v18 = __96__CKChatController_MediaInput__ckVideoMessageRecordingViewController_mediaObjectCaptured_error___block_invoke;
  double v19 = &unk_1E56235C0;
  id v13 = v12;
  id v20 = v13;
  id v21 = v11;
  [v21 compositionWithAcceptedAutocorrection:&v16];

LABEL_13:
  [(CKChatController *)self becomeFirstResponder];
  double v15 = [v11 contentView];
  [v15 makeActive];

  [(CKChatController *)self dismissVideoMessageRecordingViewController];
  [MEMORY[0x1E4F42FF8] attemptRotationToDeviceOrientation];
}

void __96__CKChatController_MediaInput__ckVideoMessageRecordingViewController_mediaObjectCaptured_error___block_invoke(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  if (a2)
  {
    id v4 = [a2 compositionByAppendingComposition:v3];
  }
  else
  {
    id v4 = v3;
  }
  id v5 = v4;
  [*(id *)(a1 + 40) setComposition:v4];
}

- (void)dismissVideoMessageRecordingViewController
{
  id v3 = [(CKChatController *)self videoMessageRecordingViewController];
  [v3 dismissWithCompletion:0];

  [(CKChatController *)self setVideoMessageRecordingViewController:0];
  [(CKChatController *)self endHoldingAutorotationForKey:@"CKAutorotationHoldQuickCamera"];

  [(CKChatController *)self setShowingVideoMessageRecordingView:0];
}

- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackButtonForChatItem:(id)a4 assetReference:(id)a5
{
}

- (void)transcriptCollectionViewController:(id)a3 didPinchPhotoStackForChatItem:(id)a4 assetReference:(id)a5
{
}

- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackAdditionalItemsForChatItem:(id)a4
{
}

- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackForChatItem:(id)a4 assetReference:(id)a5
{
}

- (void)transcriptCollectionViewController:(id)a3 didTapPhotoStackButtonForPendingMomentShareChatItem:(id)a4
{
}

- (void)transcriptCollectionViewController:(id)a3 didTapPendingMomentShareForChatItem:(id)a4
{
}

- (void)photoGridDisplayedChatItemChanged:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self photosGridViewController];
  if (v5)
  {
    CGFloat v6 = [(CKChatController *)self photoGridMomentShareChatItem];

    if (v6)
    {
      double v7 = [(CKChatController *)self _tapbackStatusManagerForChatItem:v4];
      [(CKChatController *)self setPhotoGridMomentShareChatItem:v4];
      id v8 = [v5 viewModel];
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 3221225472;
      void v12[2] = __69__CKChatController_PhotosSupport__photoGridDisplayedChatItemChanged___block_invoke;
      v12[3] = &unk_1E562B6C0;
      id v13 = v7;
      id v9 = v7;
      [v8 performChanges:v12];
    }
    else
    {
      id v10 = [(CKChatController *)self photoGridDataSourceManager];
      double v11 = [v4 dataSource];
      [v10 setMediaObjectDataSource:v11];
    }
  }
}

void __69__CKChatController_PhotosSupport__photoGridDisplayedChatItemChanged___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 setTapbackStatusManager:*(void *)(a1 + 32)];
  }
}

- (void)_presentGridForPendingMomentShareChatItem:(id)a3
{
  id v4 = a3;
  id v5 = [v4 momentShareURL];
  if (v5)
  {
    CGFloat v6 = [MEMORY[0x1E4F6BC98] sharedInstance];
    double v7 = [v4 message];
    id v8 = [v7 guid];
    id v9 = [(CKCoreChatController *)self chat];
    id v10 = [v9 guid];
    [v6 upgradeCompleteMyMomentLinkToStackWithMessageGUID:v8 chatGUID:v10];

    [(CKChatController *)self setMomentShareFetchGeneration:[(CKChatController *)self momentShareFetchGeneration] + 1];
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = __77__CKChatController_PhotosSupport___presentGridForPendingMomentShareChatItem___block_invoke;
    v12[3] = &unk_1E562B6E8;
    void v12[4] = self;
    id v13 = v4;
    [(CKChatController *)self _gridViewNavigationControllerForMomentShareURL:v5 chatItem:v13 tapbackManager:0 completionHandler:v12];
  }
  else
  {
    double v11 = IMLogHandleForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) _presentGridForPendingMomentShareChatItem:]();
    }
  }
}

void __77__CKChatController_PhotosSupport___presentGridForPendingMomentShareChatItem___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    [*(id *)(a1 + 32) _presentGridViewNavigationController:v5];
  }
  else if (a3 != 1)
  {
    CGFloat v6 = IMLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      __77__CKChatController_PhotosSupport___presentGridForPendingMomentShareChatItem___block_invoke_cold_1(a1, a3, v6);
    }
  }
}

- (void)_presentGridForChatItem:(id)a3 assetReference:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  [(CKChatController *)self setPhotoGridMomentShareChatItem:0];
  [(CKChatController *)self setPhotoGridDataSourceManager:0];
  [(CKChatController *)self setPhotoGridDisplayedChatItemGUID:0];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __74__CKChatController_PhotosSupport___presentGridForChatItem_assetReference___block_invoke;
  v10[3] = &unk_1E562B710;
  void v10[4] = self;
  id v11 = v6;
  id v12 = v7;
  id v8 = v7;
  id v9 = v6;
  [(CKChatController *)self _gridViewNavigationControllerForChatItem:v9 assetReference:v8 completionHandler:v10];
}

void __74__CKChatController_PhotosSupport___presentGridForChatItem_assetReference___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    [*(id *)(a1 + 32) _presentGridViewNavigationController:v5];
  }
  else if (a3 != 1)
  {
    id v6 = IMLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      __74__CKChatController_PhotosSupport___presentGridForChatItem_assetReference___block_invoke_cold_1(a1, a3);
    }
  }
}

- (void)_presentGridViewNavigationController:(id)a3
{
  id v4 = a3;
  [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"ShowingPhotoGridOverlay"];
  [(CKChatController *)self presentViewController:v4 animated:1 completion:&__block_literal_global_231];
}

- (void)_gridViewNavigationControllerForMomentShareURL:(id)a3 chatItem:(id)a4 tapbackManager:(id)a5 completionHandler:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  int64_t v14 = [(CKChatController *)self momentShareFetchGeneration];
  double v15 = IMLogHandleForCategory();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
    -[CKChatController(PhotosSupport) _gridViewNavigationControllerForMomentShareURL:chatItem:tapbackManager:completionHandler:]();
  }

  uint64_t v16 = [(CKCoreChatController *)self chat];
  uint64_t v17 = [v16 momentShareCache];

  CGFloat v18 = [v10 absoluteString];
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke;
  id v23[3] = &unk_1E562B738;
  id v27 = v13;
  int64_t v28 = v14;
  void v23[4] = self;
  id v24 = v10;
  id v25 = v11;
  id v26 = v12;
  id v19 = v12;
  id v20 = v11;
  id v21 = v10;
  id v22 = v13;
  [v17 momentShareForURLString:v18 completionHandler:v23];
}

void __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [*(id *)(a1 + 32) momentShareFetchGeneration];
  if (*(void *)(a1 + 72) != v7)
  {
    uint64_t v14 = v7;
    double v15 = IMLogHandleForCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 72);
      *(_DWORD *)id v22 = 134218240;
      *(void *)&void v22[4] = v16;
      *(_WORD *)&v22[12] = 2048;
      *(void *)&v22[14] = v14;
      _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_DEFAULT, "Cancelled fetch with generation: %td, current: %td", v22, 0x16u);
    }

    uint64_t v17 = *(void (**)(void))(*(void *)(a1 + 64) + 16);
    goto LABEL_20;
  }
  id v8 = IMLogHandleForCategory();
  id v9 = v8;
  if (!v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v20 = *(void *)(a1 + 40);
      uint64_t v21 = *(void *)(a1 + 72);
      *(_DWORD *)id v22 = 138412802;
      *(void *)&void v22[4] = v20;
      *(_WORD *)&v22[12] = 2048;
      *(void *)&v22[14] = v21;
      *(_WORD *)&v22[22] = 2112;
      id v23 = v6;
      _os_log_error_impl(&dword_18EF18000, v9, OS_LOG_TYPE_ERROR, "Failed to fetch moment share for URL: %@, generation: %td, error: %@", v22, 0x20u);
    }

    char IsPermanent = IMMomentShareCacheErrorIsPermanent();
    id v19 = IMLogHandleForCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
      __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke_cold_1(IsPermanent, v19);
    }

    uint64_t v17 = *(void (**)(void))(*(void *)(a1 + 64) + 16);
LABEL_20:
    v17();
    goto LABEL_21;
  }
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke_cold_3(a1, (void *)(a1 + 72), v9);
  }

  id v10 = v5;
  if ([v10 status] == 2)
  {
    id v11 = IMLogHandleForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)id v22 = 138412290;
      *(void *)&void v22[4] = v10;
      _os_log_impl(&dword_18EF18000, v11, OS_LOG_TYPE_DEFAULT, "Will accept moment share: %@", v22, 0xCu);
    }

    *(void *)id v22 = MEMORY[0x1E4F143A8];
    *(void *)&v22[8] = 3221225472;
    *(void *)&uint8_t v22[16] = ___AcceptMomentShareIfNecessary_block_invoke;
    id v23 = &unk_1E56211F0;
    id v24 = v10;
    [v24 acceptMomentShareWithCompletion:v22];
  }
  id v12 = IMLogHandleForCategory();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
    __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke_cold_2();
  }

  id v13 = [*(id *)(a1 + 32) _gridViewNavigationControllerForMomentShare:v10 chatItem:*(void *)(a1 + 48) tapbackManager:*(void *)(a1 + 56)];
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();

LABEL_21:
}

- (id)_gridViewNavigationControllerForMomentShare:(id)a3 chatItem:(id)a4 tapbackManager:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  id v10 = a3;
  if ([v10 status] == 1) {
    uint64_t v11 = 3;
  }
  else {
    uint64_t v11 = 2;
  }
  id v12 = (void *)[objc_alloc(MEMORY[0x1E4F90030]) initWithMomentShare:v10 activityType:v11 sourceType:1];

  id v13 = objc_alloc_init(MEMORY[0x1E4F90038]);
  if (objc_opt_respondsToSelector())
  {
    uint64_t v14 = [v12 createSession];
    double v15 = +[CKCMMAssetActionManager assetActionManagerWithCMMSession:v14 chatItem:v8 presentedFromInlineReply:[(CKCoreChatController *)self isInline] chatActionHelper:self performerDelegate:self];
    uint64_t v16 = objc_opt_class();
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    void v26[2] = __103__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShare_chatItem_tapbackManager___block_invoke;
    _OWORD v26[3] = &unk_1E562B760;
    void v26[4] = self;
    id v27 = v9;
    uint64_t v17 = [v13 workflowViewControllerWithSession:v14 embedInNavigationControllerOfClass:v16 assetActionManager:v15 assetCollectionActionManager:0 photosViewConfigurationBlock:v26];
  }
  else
  {
    uint64_t v18 = objc_opt_class();
    uint64_t v20 = MEMORY[0x1E4F143A8];
    uint64_t v21 = 3221225472;
    id v22 = __103__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShare_chatItem_tapbackManager___block_invoke_2;
    id v23 = &unk_1E562B760;
    id v24 = self;
    id v25 = v9;
    uint64_t v17 = [v13 workflowViewControllerWithContext:v12 embedInNavigationControllerOfClass:v18 photosViewConfigurationBlock:&v20];
  }
  objc_msgSend(v17, "setModalPresentationStyle:", 3, v20, v21, v22, v23, v24);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [(CKChatController *)self _configureGridControllerForStackTransition:v17 chatItem:v8];
  }

  return v17;
}

void __103__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShare_chatItem_tapbackManager___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  _ApplyCommonGridConfiguration(v3, *(void **)(a1 + 32));
  [v3 setAllowsDragAndDrop:0];
  objc_msgSend(v3, "setAllowedBehaviors:", objc_msgSend(v3, "allowedBehaviors") | 0x200);
  if ([*(id *)(a1 + 32) isInline]) {
    objc_msgSend(v3, "setAllowedActions:", objc_msgSend(v3, "allowedActions") & 0xFFFFFFFFFFFEFFDFLL);
  }
  objc_msgSend(v3, "setAllowedBehaviors:", objc_msgSend(v3, "allowedBehaviors") & 0xFFFFFFFFFFFFFFBFLL);
  [v3 setTapbackStatusManager:*(void *)(a1 + 40)];
}

void __103__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShare_chatItem_tapbackManager___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  _ApplyCommonGridConfiguration(v4, v3);
  [v4 setAllowsDragAndDrop:0];
  [v4 setTapbackStatusManager:*(void *)(a1 + 40)];
}

- (void)_gridViewNavigationControllerForChatItem:(id)a3 assetReference:(id)a4 completionHandler:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  [(CKChatController *)self setMomentShareFetchGeneration:[(CKChatController *)self momentShareFetchGeneration] + 1];
  uint64_t v11 = [(CKChatController *)self _tapbackStatusManagerForChatItem:v8];
  id v12 = [v8 momentShareURL];
  if (v12)
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    void v15[2] = __109__CKChatController_PhotosSupport___gridViewNavigationControllerForChatItem_assetReference_completionHandler___block_invoke;
    void v15[3] = &unk_1E562B788;
    void v15[4] = self;
    id v16 = v8;
    id v17 = v9;
    id v18 = v11;
    id v19 = v10;
    [(CKChatController *)self _gridViewNavigationControllerForMomentShareURL:v12 chatItem:v16 tapbackManager:v18 completionHandler:v15];
  }
  else
  {
    id v13 = IMLogHandleForCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
      -[CKChatController(PhotosSupport) _gridViewNavigationControllerForChatItem:assetReference:completionHandler:]();
    }

    uint64_t v14 = [(CKChatController *)self _regularGridViewNavigationControllerForChatItem:v8 assetReference:v9 tapbackManager:v11];
    (*((void (**)(id, void *, void))v10 + 2))(v10, v14, 0);
  }
}

- (BOOL)_allowsMultipleSelectionForMessage:(id)a3
{
  id v3 = a3;
  id v4 = [MEMORY[0x1E4F6E778] sharedFeatureFlags];
  int v5 = [v4 isScheduledMessagesEnabled];

  BOOL v6 = !v5 || [v3 scheduleType] != 2 || objc_msgSend(v3, "scheduleState") != 1;
  return v6;
}

- (void)_configureGridControllerForStackTransition:(id)a3 chatItem:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKCoreChatController *)self collectionViewController];
  id v9 = [v8 balloonViewForChatItem:v6];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v10 = [v9 stackView];
  }
  else
  {
    id v10 = 0;
  }
  id v12 = v10;
  uint64_t v11 = [v10 gridTransitioningDelegate];
  [v7 setTransitioningDelegate:v11];
}

- (void)_presentViewerForChatItem:(id)a3 assetReference:(id)a4
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [v7 asset];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    [(CKScrollViewController *)self beginHoldingScrollGeometryUpdatesForReason:@"ShowingPhotoGridOverlay"];
    id v10 = [v6 dataSource];
    uint64_t v11 = [(CKChatController *)self _previewViewControllerForAssetReference:v7 dataSource:v10 previewDelegate:self previewMode:2];

    [v11 setChatItem:v6];
    [(CKChatController *)self presentViewController:v11 animated:1 completion:0];
  }
  else if (IMOSLoggingEnabled())
  {
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      int v13 = 136315138;
      uint64_t v14 = "-[CKChatController(PhotosSupport) _presentViewerForChatItem:assetReference:]";
      _os_log_impl(&dword_18EF18000, v12, OS_LOG_TYPE_INFO, "%s got non-CKMediaObjectBackedAsset PXDisplayAsset!", (uint8_t *)&v13, 0xCu);
    }
  }
}

- (id)_tapbackStatusManagerForChatItem:(id)a3
{
  id v4 = a3;
  int v5 = objc_alloc_init(CKMediaObjectTapbackManager);
  [(CKMediaObjectTapbackManager *)v5 setChatItem:v4];

  id v6 = [(CKChatController *)self view];
  [(CKMediaObjectTapbackManager *)v5 setGradientReferenceView:v6];

  [(CKMediaObjectTapbackManager *)v5 setOriginatedFromGridView:1];
  [(CKMediaObjectTapbackManager *)v5 setInvertTapbackTailDirection:1];
  [(CKMediaObjectTapbackManager *)v5 setPhotoGridTapbackPileDelegate:self];

  return v5;
}

- (void)presentedPreviewControllerDidSelectNavigateToGrid
{
  id v13 = [(CKChatController *)self previewController];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = [(CKChatController *)self previewController];
    id v4 = [v3 chatItem];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      id v6 = [(CKChatController *)self previewController];
      id v7 = [v6 chatItem];
      id v8 = [v7 dataSource];
      id v9 = [v6 currentPreviewItem];
      id v10 = [v8 assetReferenceForMediaObject:v9];

      v14[0] = MEMORY[0x1E4F143A8];
      v14[1] = 3221225472;
      void v14[2] = __84__CKChatController_PhotosSupport__presentedPreviewControllerDidSelectNavigateToGrid__block_invoke;
      v14[3] = &unk_1E562B710;
      void v14[4] = self;
      id v15 = v7;
      id v16 = v10;
      id v11 = v10;
      id v12 = v7;
      [(CKChatController *)self _gridViewNavigationControllerForChatItem:v12 assetReference:v11 completionHandler:v14];
    }
  }
  else
  {
  }
}

void __84__CKChatController_PhotosSupport__presentedPreviewControllerDidSelectNavigateToGrid__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) previewController];
    id v7 = [v6 view];
    id v8 = [v7 window];

    id v9 = [v8 snapshotViewAfterScreenUpdates:0];
    id v10 = [*(id *)(a1 + 32) view];
    [v8 bounds];
    objc_msgSend(v10, "convertRect:fromCoordinateSpace:", v8);
    objc_msgSend(v9, "setFrame:");

    id v11 = [*(id *)(a1 + 32) view];
    [v11 addSubview:v9];

    [*(id *)(a1 + 32) setIsTransitioningFromQLPreviewToGrid:1];
    id v12 = [*(id *)(a1 + 32) previewController];
    [v12 dismissViewControllerAnimated:0 completion:0];

    id v13 = *(void **)(a1 + 32);
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    void v15[2] = __84__CKChatController_PhotosSupport__presentedPreviewControllerDidSelectNavigateToGrid__block_invoke_2;
    void v15[3] = &unk_1E5620AF8;
    void v15[4] = v13;
    id v16 = v9;
    id v14 = v9;
    [v13 presentViewController:v5 animated:1 completion:v15];

LABEL_6:
    goto LABEL_7;
  }
  if (a3 != 1)
  {
    id v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __84__CKChatController_PhotosSupport__presentedPreviewControllerDidSelectNavigateToGrid__block_invoke_cold_1(a1, a3);
    }
    goto LABEL_6;
  }
LABEL_7:
}

uint64_t __84__CKChatController_PhotosSupport__presentedPreviewControllerDidSelectNavigateToGrid__block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsTransitioningFromQLPreviewToGrid:0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 removeFromSuperview];
}

- (void)presentedPreviewControllerDidSelectDismissToGrid
{
  id v2 = [(CKChatController *)self previewController];
  [v2 dismissViewControllerAnimated:1 completion:0];
}

- (id)_previewViewControllerForAssetReference:(id)a3 photosViewController:(id)a4 previewMode:(int64_t)a5
{
  id v8 = a4;
  id v9 = a3;
  id v10 = [v8 viewModel];
  id v11 = [v10 currentDataSource];

  id v12 = [(CKChatController *)self _previewViewControllerForAssetReference:v9 dataSource:v11 previewDelegate:v8 previewMode:a5];

  return v12;
}

- (id)_previewViewControllerForAssetReference:(id)a3 dataSource:(id)a4 previewDelegate:(id)a5 previewMode:(int64_t)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = objc_alloc_init(CKQLPreviewController);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [(CKQLPreviewController *)v13 setChatControllerPreviewDelegate:self];
  }
  [(QLPreviewController *)v13 setDelegate:v12];
  id v14 = objc_alloc_init(CKQLPreviewControllerDataSource);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v15 = [v11 mediaObjects];
    [(CKQLPreviewControllerDataSource *)v14 setPreviewItems:v15];

    [(QLPreviewController *)v13 setDataSource:v14];
    [(CKChatController *)self setQlPreviewDataSource:v14];
    if (v10)
    {
      [v10 indexPath];
      uint64_t v16 = v28;
    }
    else
    {
      uint64_t v16 = 0;
      v27[1] = 0u;
      long long v28 = 0u;
    }
    [(QLPreviewController *)v13 setCurrentPreviewItemIndex:v16];
    [(CKChatController *)self setPreviewController:v13];
    id v19 = [(CKChatController *)self entryView];
    uint64_t v20 = [v19 contentView];
    -[CKChatController setEntryViewWasActiveOnPreview:](self, "setEntryViewWasActiveOnPreview:", [v20 isActive]);

    if (![(CKChatController *)self photosGridViewPresented])
    {
      v27[0].receiver = self;
      v27[0].super_class = (Class)CKChatController;
      [(objc_super *)v27 becomeFirstResponder];
    }
    id v21 = objc_alloc(MEMORY[0x1E4F427C0]);
    id v22 = [MEMORY[0x1E4F42A80] systemImageNamed:@"square.grid.2x2"];
    if (a6 == 2) {
      id v23 = sel_presentedPreviewControllerDidSelectNavigateToGrid;
    }
    else {
      id v23 = sel_presentedPreviewControllerDidSelectDismissToGrid;
    }
    id v24 = (void *)[v21 initWithImage:v22 style:0 target:self action:v23];
    id v25 = [(CKQLPreviewController *)v13 navigationItem];
    [v25 setRightBarButtonItem:v24];

    id v18 = v13;
  }
  else
  {
    id v17 = IMLogHandleForCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) _previewViewControllerForAssetReference:dataSource:previewDelegate:previewMode:]((uint64_t)v11, v17);
    }

    id v18 = 0;
  }

  return v18;
}

- (void)_presentPreviewViewControllerFromPhotosViewController:(id)a3 assetReference:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self _previewViewControllerForAssetReference:v7 photosViewController:v6 previewMode:0];
  if (v8)
  {
    [v6 presentViewController:v8 animated:1 completion:0];
  }
  else
  {
    id v9 = IMLogHandleForCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) _presentPreviewViewControllerFromPhotosViewController:assetReference:]();
    }
  }
}

- (BOOL)photosViewController:(id)a3 didPickAssetReference:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  [(CKChatController *)self _presentPreviewViewControllerFromPhotosViewController:v6 assetReference:v7];

  return 1;
}

- (void)_showTapbackReplyOverlayFromPhotosViewController:(id)a3 assetReference:(id)a4 presentTapbackKeyboardInput:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a4;
  id v9 = a3;
  id v10 = [v9 regionOfInterestForAssetReference:v8 image:0 shouldSnapshotPlaceholder:0];
  id v11 = [v9 view];

  [v10 rectInCoordinateSpace:v11];
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;

  id v20 = [v10 placeholderViewFactory];

  if (v20)
  {
    id v21 = [v10 placeholderViewFactory];
    ((void (**)(void, void *))v21)[2](v21, v10);
    id v20 = (id)objc_claimAutoreleasedReturnValue();
  }
  -[CKChatController setPhotoGridTapbackSnapshotRect:](self, "setPhotoGridTapbackSnapshotRect:", v13, v15, v17, v19);
  id v22 = [(CKChatController *)self photoGridMomentShareChatItem];

  if (v22)
  {
    id v23 = [(CKChatController *)self photoGridMomentShareChatItem];
    id v24 = [v23 dataSource];
    id v25 = [v24 chatItemForAssetReference:v8];

    if (v25) {
      goto LABEL_8;
    }
    id v26 = [(CKChatController *)self photoGridMomentShareChatItem];
    id v27 = [v26 dataSource];
    id v25 = [v27 temporaryChatItemForAssetReference:v8];
  }
  else
  {
    id v26 = [v8 asset];
    id v25 = [v26 chatItem];
  }

LABEL_8:
  long long v28 = [(CKChatController *)self _fullScreenBalloonViewControllerForPhotosGridViewWithChatItem:v25 snapshotView:v20 presentTapbackKeyboardInput:v5];
  [(CKCoreChatController *)self setFullScreenBalloonViewController:v28];
  id v29 = IMLogHandleForCategory();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CGRect v31 = 0;
    _os_log_impl(&dword_18EF18000, v29, OS_LOG_TYPE_DEFAULT, "_fullScreenBalloonViewController has been set", v31, 2u);
  }

  [v28 setModalPresentationStyle:6];
  uint64_t v30 = [(CKChatController *)self presentedViewController];
  [v30 presentViewController:v28 animated:0 completion:0];
}

- (void)photosViewController:(id)a3 didDoubleTapAssetReference:(id)a4
{
  id v7 = a3;
  id v6 = a4;
  if ([(CKCoreChatController *)self _shouldAllowReply]) {
    [(CKChatController *)self _showTapbackReplyOverlayFromPhotosViewController:v7 assetReference:v6 presentTapbackKeyboardInput:0];
  }
}

- (id)photosViewController:(id)a3 dragItemProviderForAssetReference:(id)a4
{
  id v4 = objc_msgSend(a4, "asset", a3);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    BOOL v5 = [v4 chatItem];
    id v6 = [v5 dragItemProvider];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (void)actionManager:(id)a3 presentInlineReplyControllerForChatItem:(id)a4
{
  id v6 = [(CKChatController *)self modalInlineReplyControllerForChatItem:a4];
  BOOL v5 = [(CKChatController *)self photosGridViewController];
  if (v5 && v6) {
    [v5 presentViewController:v6 animated:1 completion:0];
  }
}

- (void)retractScheduledChatItem:(id)a3
{
  id v4 = a3;
  BOOL v5 = [v4 IMChatItem];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v7 = [(CKCoreChatController *)self conversation];
    id v8 = [v4 IMChatItem];
    [v7 retractMessagePart:v8];
  }
  else
  {
    id v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) retractScheduledChatItem:]();
    }
  }
}

- (void)retractScheduledChatItems:(id)a3 fromAggregateChatItem:(id)a4
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [v7 IMChatItem];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v23 = self;
    id v24 = v7;
    id v10 = [MEMORY[0x1E4F1CA48] array];
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v25 = v6;
    id v11 = v6;
    uint64_t v12 = [v11 countByEnumeratingWithState:&v28 objects:v32 count:16];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)v29;
      do
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if (*(void *)v29 != v14) {
            objc_enumerationMutation(v11);
          }
          double v16 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          double v17 = [v16 IMChatItem];
          objc_opt_class();
          char v18 = objc_opt_isKindOfClass();

          if (v18)
          {
            double v19 = [v16 IMChatItem];
            [v10 addObject:v19];
          }
          else
          {
            double v19 = IMLogHandleForCategory();
            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
              -[CKChatController(PhotosSupport) retractScheduledChatItems:fromAggregateChatItem:](&buf, v27, v19);
            }
          }
        }
        uint64_t v13 = [v11 countByEnumeratingWithState:&v28 objects:v32 count:16];
      }
      while (v13);
    }

    id v20 = [(CKCoreChatController *)v23 conversation];
    id v7 = v24;
    id v21 = [v24 IMChatItem];
    if (v21 && [v10 count])
    {
      [v20 retractScheduledMessageParts:v10 fromAggregateChatItem:v21];
    }
    else
    {
      id v22 = IMLogHandleForCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(PhotosSupport) retractScheduledChatItems:fromAggregateChatItem:]();
      }
    }
    id v6 = v25;
  }
  else
  {
    id v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) retractScheduledChatItems:fromAggregateChatItem:]();
    }
  }
}

- (void)deleteMediaObjectAttachmentGUIDs:(id)a3 originalStackCount:(int64_t)a4
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = IMLogHandleForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v6;
    _os_log_impl(&dword_18EF18000, v7, OS_LOG_TYPE_DEFAULT, "deleting media object attachments %@", (uint8_t *)&v10, 0xCu);
  }

  id v8 = [(CKCoreChatController *)self chat];
  [v8 deleteTransfers:v6];

  unint64_t v9 = a4 - [v6 count];
  if (v9 <= [MEMORY[0x1E4F6BD38] _attachmentStackAggregationThreshold]) {
    [(CKChatController *)self dismissViewControllerAnimated:1 completion:0];
  }
}

- (id)_assetReferenceForDisplayedGridChatItem:(id)a3 selectionSnapshot:(id)a4
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self photosGridViewController];
  unint64_t v9 = [v8 viewModel];
  int v10 = [v9 currentDataSource];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v10;
    uint64_t v12 = [v6 mediaObject];
    uint64_t v13 = [v11 assetReferenceForMediaObject:v12];
    if (!v13)
    {
      uint64_t v14 = IMLogHandleForCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(PhotosSupport) _assetReferenceForDisplayedGridChatItem:selectionSnapshot:](v12, v14);
      }
    }
  }
  else
  {
    uint64_t v15 = [(CKChatController *)self photoGridMomentShareChatItem];
    if (v15
      && (double v16 = (void *)v15,
          objc_opt_class(),
          char isKindOfClass = objc_opt_isKindOfClass(),
          v16,
          (isKindOfClass & 1) != 0))
    {
      if (v7) {
        [v7 cursorIndexPath];
      }
      else {
        memset(v20, 0, sizeof(v20));
      }
      uint64_t v13 = [v10 assetReferenceAtItemIndexPath:v20];
      if (v13) {
        goto LABEL_15;
      }
      id v11 = IMLogHandleForCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        if (v7) {
          [v7 cursorIndexPath];
        }
        double v19 = PXSimpleIndexPathDescription();
        *(_DWORD *)uint8_t buf = 138543362;
        id v22 = v19;
        _os_log_error_impl(&dword_18EF18000, v11, OS_LOG_TYPE_ERROR, "nil asset reference for data source at index path %{public}@", buf, 0xCu);
      }
    }
    else
    {
      id v11 = IMLogHandleForCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        -[CKChatController(PhotosSupport) _assetReferenceForDisplayedGridChatItem:selectionSnapshot:]((uint64_t)v10, v11);
      }
    }
    uint64_t v13 = 0;
  }

LABEL_15:

  return v13;
}

- (void)actionManager:(id)a3 quickLookChatItem:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKChatController *)self photosGridViewController];
  unint64_t v9 = [v7 selectionManager];

  int v10 = [v9 selectionSnapshot];
  id v11 = [(CKChatController *)self _assetReferenceForDisplayedGridChatItem:v6 selectionSnapshot:v10];

  if (v11)
  {
    [(CKChatController *)self _presentPreviewViewControllerFromPhotosViewController:v8 assetReference:v11];
  }
  else
  {
    uint64_t v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) actionManager:quickLookChatItem:]();
    }
  }
}

- (void)actionManager:(id)a3 tapbackChatItem:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  id v8 = [(CKChatController *)self photosGridViewController];
  unint64_t v9 = [v7 selectionManager];

  int v10 = [v9 selectionSnapshot];
  id v11 = [(CKChatController *)self _assetReferenceForDisplayedGridChatItem:v6 selectionSnapshot:v10];

  if (v11)
  {
    [(CKChatController *)self _showTapbackReplyOverlayFromPhotosViewController:v8 assetReference:v11 presentTapbackKeyboardInput:0];
  }
  else
  {
    uint64_t v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) actionManager:tapbackChatItem:]();
    }
  }
}

- (id)actionManager:(id)a3 tapbackElementsForChatItem:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = [(CKChatController *)self photosGridViewController];
  unint64_t v9 = [v6 selectionManager];
  int v10 = [v9 selectionSnapshot];
  id v11 = [(CKChatController *)self _assetReferenceForDisplayedGridChatItem:v7 selectionSnapshot:v10];

  location[0] = 0;
  objc_initWeak(location, self);
  if (v11)
  {
    v25[0] = MEMORY[0x1E4F143A8];
    v25[1] = 3221225472;
    void v25[2] = __76__CKChatController_PhotosSupport__actionManager_tapbackElementsForChatItem___block_invoke;
    v25[3] = &unk_1E562B7B0;
    objc_copyWeak(&v26, location);
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = __76__CKChatController_PhotosSupport__actionManager_tapbackElementsForChatItem___block_invoke_2;
    v21[3] = &unk_1E562B7D8;
    objc_copyWeak(&v24, location);
    id v12 = v8;
    id v22 = v12;
    id v13 = v11;
    id v23 = v13;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    void v17[2] = __76__CKChatController_PhotosSupport__actionManager_tapbackElementsForChatItem___block_invoke_3;
    void v17[3] = &unk_1E562B7D8;
    objc_copyWeak(&v20, location);
    id v18 = v12;
    id v19 = v13;
    uint64_t v14 = [(CKChatController *)self buildTapbackMenuElementsForChatItem:v7 sendHandler:v25 emojiKeyboardHandler:v21 detailsHandler:v17];

    objc_destroyWeak(&v20);
    objc_destroyWeak(&v24);
    objc_destroyWeak(&v26);
  }
  else
  {
    uint64_t v15 = IMLogHandleForCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) actionManager:tapbackChatItem:]();
    }

    uint64_t v14 = (void *)MEMORY[0x1E4F1CBF0];
  }
  objc_destroyWeak(location);

  return v14;
}

void __76__CKChatController_PhotosSupport__actionManager_tapbackElementsForChatItem___block_invoke(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v6 = (id *)(a1 + 32);
  id v7 = a3;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained sendTapback:v8 chatItem:v7 isRemoval:a4];
}

void __76__CKChatController_PhotosSupport__actionManager_tapbackElementsForChatItem___block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _showTapbackReplyOverlayFromPhotosViewController:*(void *)(a1 + 32) assetReference:*(void *)(a1 + 40) presentTapbackKeyboardInput:1];
}

void __76__CKChatController_PhotosSupport__actionManager_tapbackElementsForChatItem___block_invoke_3(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _showTapbackReplyOverlayFromPhotosViewController:*(void *)(a1 + 32) assetReference:*(void *)(a1 + 40) presentTapbackKeyboardInput:0];
}

- (void)actionManager:(id)a3 copyChatItems:(id)a4
{
  id v5 = a4;
  id v6 = [(CKCoreChatController *)self collectionViewController];
  [v6 copyChatItemsToPasteboard:v5];
}

- (void)actionManager:(id)a3 forwardChatItems:(id)a4
{
  id v5 = a4;
  if ([(CKChatController *)self photosGridViewPresented]) {
    [(CKChatController *)self dismissViewControllerAnimated:0 completion:0];
  }
  id v6 = [(CKChatController *)self entryView];
  uint64_t v7 = [v6 shouldShowSubject];
  id v8 = [(CKChatController *)self chatInputTranscriptIdentifier];
  id v10 = +[CKComposition compositionForMessageParts:v5 preserveSubject:v7 contextIdentifier:v8];

  unint64_t v9 = [(CKCoreChatController *)self delegate];
  [v9 chatController:self forwardComposition:v10];
}

- (void)selectAllForActionManager:(id)a3
{
  id v4 = a3;
  id v5 = [(CKChatController *)self photosGridViewController];
  id v6 = [v5 viewModel];
  uint64_t v9 = 0;
  id v10 = &v9;
  uint64_t v11 = 0x2020000000;
  char v12 = 0;
  char v12 = [v6 isInSelectMode];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __61__CKChatController_PhotosSupport__selectAllForActionManager___block_invoke;
  v8[3] = &unk_1E562B800;
  void v8[4] = &v9;
  [v6 performChanges:v8];
  if (!*((unsigned char *)v10 + 24))
  {
    uint64_t v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      -[CKChatController(PhotosSupport) selectAllForActionManager:]();
    }
  }
  _Block_object_dispose(&v9, 8);
}

void __61__CKChatController_PhotosSupport__selectAllForActionManager___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  id v6 = v3;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    int v5 = [v3 canEnterSelectMode];
    id v4 = v6;
    if (v5)
    {
      [v6 setIsInSelectMode:1];
      id v4 = v6;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    }
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    [v4 selectAll];
    id v4 = v6;
  }
}

- (BOOL)actionPerformer:(id)a3 transitionToViewController:(id)a4 transitionType:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  if (a5 == 1)
  {
    char v12 = [(CKChatController *)self presentedViewController];
    id v10 = [v12 navigationController];

    BOOL v11 = v10 != 0;
    if (v10)
    {
      BOOL v11 = 1;
      [v10 pushViewController:v9 animated:1];
    }
  }
  else
  {
    if (a5 != 2)
    {
      BOOL v11 = 0;
      goto LABEL_8;
    }
    id v10 = [(CKChatController *)self presentedViewController];
    BOOL v11 = 1;
    [v10 presentViewController:v9 animated:1 completion:0];
  }

LABEL_8:
  return v11;
}

- (BOOL)photosGridViewPresented
{
  id v2 = [(CKChatController *)self photosGridViewController];
  BOOL v3 = v2 != 0;

  return v3;
}

- (id)photosGridViewController
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = [(CKChatController *)self presentedViewController];
  if (v3)
  {
    id v4 = [(CKChatController *)self presentedViewController];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      id v6 = [(CKChatController *)self presentedViewController];
      uint64_t v7 = [v6 viewControllers];

      id v3 = (id)[v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v3)
      {
        uint64_t v8 = *(void *)v13;
        while (2)
        {
          for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v13 != v8) {
              objc_enumerationMutation(v7);
            }
            id v10 = *(void **)(*((void *)&v12 + 1) + 8 * i);
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v3 = v10;
              goto LABEL_14;
            }
          }
          id v3 = (id)[v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
          if (v3) {
            continue;
          }
          break;
        }
      }
LABEL_14:
    }
    else
    {
      id v3 = 0;
    }
  }

  return v3;
}

- (id)_fullScreenBalloonViewControllerForPhotosGridViewWithChatItem:(id)a3 snapshotView:(id)a4 presentTapbackKeyboardInput:(BOOL)a5
{
  BOOL v5 = a5;
  id v7 = a3;
  if (v5) {
    +[CKFullScreenBalloonViewDisplayConfiguration tapbackKeyboardInputContext];
  }
  else {
  uint64_t v8 = +[CKFullScreenBalloonViewDisplayConfiguration tapbackPickerContext];
  }
  id v9 = [CKFullScreenBalloonViewControllerPhone alloc];
  id v10 = [(CKChatController *)self _interfaceActionsForChatItem:v7];
  BOOL v11 = [(CKFullScreenBalloonViewControllerPhone *)v9 initWithChatItem:v7 interfaceActions:v10 displayConfiguration:v8 delegate:self];

  return v11;
}

- (id)currentTopChatItemForAggregateChatItem:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(CKCoreChatController *)self collectionViewController];
  id v6 = [v5 balloonViewForChatItem:v4];

  objc_opt_class();
  id v7 = v4;
  if (objc_opt_isKindOfClass())
  {
    uint64_t v8 = [v6 stackView];
    id v9 = [v8 currentAssetReference];
    id v10 = [v9 asset];
    id v7 = [v10 chatItem];
  }

  return v7;
}

- (void)photosGridFullScreenBalloonViewControllerHandleDismissTap:(id)a3
{
  v3.receiver = self;
  v3.super_class = (Class)CKChatController;
  [(CKCoreChatController *)&v3 fullScreenBalloonViewControllerHandleDismissTap:a3];
}

- (void)photosGridFullScreenBalloonViewController:(id)a3 verticallyScrollTranscriptByAmount:(double)a4 animated:(BOOL)a5 duration:(double)a6 completion:(id)a7
{
  if (a7) {
    (*((void (**)(id, double, double))a7 + 2))(a7, a4, a6);
  }
}

- (void)photosGridFullScreenBalloonViewController:(id)a3 replyButtonPressedForChatItem:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __107__CKChatController_PhotosSupport__photosGridFullScreenBalloonViewController_replyButtonPressedForChatItem___block_invoke;
  v10[3] = &unk_1E5620AA8;
  void v10[4] = self;
  id v11 = v7;
  id v12 = v6;
  id v8 = v6;
  id v9 = v7;
  [(CKChatController *)self _dismissFullScreenBubbleViewControllerAnimated:1 withSendAnimation:0 completion:v10];
}

uint64_t __107__CKChatController_PhotosSupport__photosGridFullScreenBalloonViewController_replyButtonPressedForChatItem___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) showModalInlineReplyControllerForChatItem:*(void *)(a1 + 40) fromViewController:*(void *)(a1 + 48)];
}

- (BOOL)photosGridFullScreenBalloonViewControllerShouldShowReplyButton:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)CKChatController;
  return [(CKCoreChatController *)&v4 fullScreenBalloonViewControllerShouldShowReplyButton:a3];
}

- (CGRect)photosGridFullScreenBalloonViewControllerSafeAreaLayoutFrame:(id)a3
{
  objc_super v3 = [(CKChatController *)self presentedViewController];
  objc_super v4 = [v3 safeAreaLayoutGuide];
  [v4 layoutFrame];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  double v13 = v6;
  double v14 = v8;
  double v15 = v10;
  double v16 = v12;
  result.size.double height = v16;
  result.size.double width = v15;
  result.origin.double y = v14;
  result.origin.double x = v13;
  return result;
}

- (BOOL)photosGridFullScreenBalloonViewControllerShouldShowHightlightButton:(id)a3 forChatItem:(id)a4
{
  return 0;
}

- (id)photosViewController:(id)a3 configurationForContextMenuInteraction:(id)a4 assetReference:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = v8;
  id location = 0;
  objc_initWeak(&location, self);
  double v12 = (void *)MEMORY[0x1E4F428F0];
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __110__CKChatController_PhotosSupport__photosViewController_configurationForContextMenuInteraction_assetReference___block_invoke;
  id v23[3] = &unk_1E562B828;
  objc_copyWeak(&v26, &location);
  id v13 = v10;
  id v24 = v13;
  id v14 = v11;
  id v25 = v14;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  id v19[2] = __110__CKChatController_PhotosSupport__photosViewController_configurationForContextMenuInteraction_assetReference___block_invoke_2;
  v19[3] = &unk_1E562B850;
  objc_copyWeak(&v22, &location);
  id v15 = v13;
  id v20 = v15;
  id v16 = v14;
  id v21 = v16;
  uint64_t v17 = [v12 configurationWithIdentifier:0 previewProvider:v23 actionProvider:v19];

  objc_destroyWeak(&v22);
  objc_destroyWeak(&v26);
  objc_destroyWeak(&location);

  return v17;
}

id __110__CKChatController_PhotosSupport__photosViewController_configurationForContextMenuInteraction_assetReference___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_super v3 = [WeakRetained _previewViewControllerForAssetReference:*(void *)(a1 + 32) photosViewController:*(void *)(a1 + 40) previewMode:1];

  return v3;
}

id __110__CKChatController_PhotosSupport__photosViewController_configurationForContextMenuInteraction_assetReference___block_invoke_2(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained) {
    goto LABEL_5;
  }
  objc_super v3 = [a1[4] asset];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_super v4 = [a1[4] asset];
    double v5 = [(CKMediaObjectAssetActionManager *)v4 chatItem];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      double v6 = [a1[5] viewModel];
      char v7 = [v6 isInSelectMode];

      if (v7)
      {
LABEL_5:
        id v8 = 0;
        goto LABEL_11;
      }
      id v9 = [a1[4] asset];
      objc_super v3 = [v9 chatItem];

      objc_super v4 = -[CKMediaObjectAssetActionManager initWithChatItem:presentedFromInlineReply:chatActionHelper:selectionManager:]([CKMediaObjectAssetActionManager alloc], "initWithChatItem:presentedFromInlineReply:chatActionHelper:selectionManager:", v3, [WeakRetained isInline], WeakRetained, 0);
      [WeakRetained setPhotoGridClickyOrbChatItem:v3];
      [(PXActionManager *)v4 setPerformerDelegate:WeakRetained];
      id v8 = [(CKMediaObjectAssetActionManager *)v4 actionContextMenu];
    }
    else
    {

      id v8 = 0;
    }
  }
  else
  {
    id v8 = 0;
  }

LABEL_11:

  return v8;
}

- (void)photosViewController:(id)a3 commitPreviewViewControllerForContextMenuInteraction:(id)a4
{
  id v6 = a3;
  double v5 = [(CKChatController *)self previewController];
  if (v5) {
    [v6 presentViewController:v5 animated:0 completion:0];
  }
}

- (id)photosViewController:(id)a3 accessoriesForContextMenuInteraction:(id)a4 assetReference:(id)a5
{
  char v7 = (CKChatController *)a3;
  id v8 = a5;
  id v9 = [v8 asset];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) != 0
    && ([v8 asset],
        id v11 = objc_claimAutoreleasedReturnValue(),
        [v11 chatItem],
        double v12 = objc_claimAutoreleasedReturnValue(),
        v11,
        v12))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v13 = v7;
    }
    else {
      id v13 = self;
    }
    id v14 = [(CKChatController *)self contextMenuAccessoryViewsForChatItem:v12 containingViewController:v13];
  }
  else
  {
    id v14 = 0;
  }

  return v14;
}

- (void)photosViewController:(id)a3 contextMenuInteraction:(id)a4 willEndForConfiguration:(id)a5 animator:(id)a6
{
  if ([(CKChatController *)self acknowledgmentToSend])
  {
    char v7 = [(CKCoreChatController *)self chat];
    int64_t v8 = [(CKChatController *)self acknowledgmentToSend];
    id v9 = [(CKChatController *)self photoGridClickyOrbChatItem];
    [v7 sendMessageAcknowledgment:v8 forChatItem:v9];

    [(CKChatController *)self setAcknowledgmentToSend:0];
  }

  [(CKChatController *)self setPhotoGridClickyOrbChatItem:0];
}

- (id)photosViewController:(id)a3 contextMenuInteraction:(id)a4 styleForMenuWithConfiguration:(id)a5
{
  id v5 = a3;
  id v6 = [MEMORY[0x1E4F43130] defaultStyle];
  id v7 = v5;
  int64_t v8 = [v7 view];
  [v8 layoutMargins];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  id v15 = [v7 view];

  id v16 = [v15 window];
  [v16 safeAreaInsets];
  double v18 = v17;
  id v19 = +[CKUIBehavior sharedBehaviors];
  [v19 messageAcknowledgmentPickerBarSize];
  double v21 = v18 + v20;

  id v22 = +[CKUIBehavior sharedBehaviors];
  [v22 attributionViewHeight];
  double v24 = v23;
  id v25 = +[CKUIBehavior sharedBehaviors];
  [v25 attributionViewMinPadding];
  double v27 = v21 + v24 + v26;

  [v6 preferredEdgeInsets];
  objc_msgSend(v6, "setPreferredEdgeInsets:", fmax(v28, v27), v10, v12, v14);

  return v6;
}

- (void)tapbackPileViewTapped:(id)a3 asset:(id)a4
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if (IMOSLoggingEnabled())
  {
    int64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v15 = 138412290;
      id v16 = v6;
      _os_log_impl(&dword_18EF18000, v8, OS_LOG_TYPE_INFO, "Detected tap on view: %@", (uint8_t *)&v15, 0xCu);
    }
  }
  double v9 = [(CKChatController *)self photosGridViewController];
  double v10 = [v9 viewModel];
  double v11 = [v10 currentDataSource];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v12 = v11;
    double v13 = [v7 mediaObject];
    double v14 = [v12 assetReferenceForMediaObject:v13];

    [(CKChatController *)self _showTapbackReplyOverlayFromPhotosViewController:v9 assetReference:v14 presentTapbackKeyboardInput:0];
  }
}

- (id)addContactOptionsMenuWithNicknameUpdate:(id)a3
{
  objc_super v4 = (objc_class *)MEMORY[0x1E4F1CA48];
  id v5 = a3;
  id v6 = objc_alloc_init(v4);
  id v7 = [(CKChatController *)self createNewContactActionWithNicknameUpdate:v5];
  [v6 addObject:v7];

  int64_t v8 = [(CKChatController *)self addToExistingContactActionWithNicknameUpdate:v5];

  [v6 addObject:v8];
  double v9 = (void *)MEMORY[0x1E4F42B80];
  double v10 = (void *)[v6 copy];
  double v11 = [v9 menuWithTitle:&stru_1EDE4CA38 children:v10];

  return v11;
}

- (id)createNewContactActionWithNicknameUpdate:(id)a3
{
  id v4 = a3;
  id v5 = CKFrameworkBundle();
  id v6 = [v5 localizedStringForKey:@"CREATE_NEW_CONTACT" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id v7 = [MEMORY[0x1E4F42A80] systemImageNamed:@"person.crop.circle"];
  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __71__CKChatController_Contacts__createNewContactActionWithNicknameUpdate___block_invoke;
  aBlock[3] = &unk_1E56210D8;
  objc_copyWeak(&v14, &location);
  id v8 = v4;
  id v13 = v8;
  double v9 = _Block_copy(aBlock);
  double v10 = [MEMORY[0x1E4F426E8] actionWithTitle:v6 image:v7 identifier:v6 handler:v9];

  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);

  return v10;
}

void __71__CKChatController_Contacts__createNewContactActionWithNicknameUpdate___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained createContactWithNicknameUpdate:*(void *)(a1 + 32)];
}

- (id)addToExistingContactActionWithNicknameUpdate:(id)a3
{
  id v4 = a3;
  id v5 = CKFrameworkBundle();
  id v6 = [v5 localizedStringForKey:@"ADD_TO_EXISTING_CONTACT" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id v7 = [MEMORY[0x1E4F42A80] systemImageNamed:@"person.crop.circle.badge.plus"];
  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __75__CKChatController_Contacts__addToExistingContactActionWithNicknameUpdate___block_invoke;
  aBlock[3] = &unk_1E56210D8;
  objc_copyWeak(&v14, &location);
  id v8 = v4;
  id v13 = v8;
  double v9 = _Block_copy(aBlock);
  double v10 = [MEMORY[0x1E4F426E8] actionWithTitle:v6 image:v7 identifier:v6 handler:v9];

  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);

  return v10;
}

void __75__CKChatController_Contacts__addToExistingContactActionWithNicknameUpdate___block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setCurrentNicknameUpdate:v1];

  id v4 = objc_loadWeakRetained(v2);
  [v4 selectContact];
}

- (void)showUpdatePromptForNicknameUpdate:(id)a3 sourceView:(id)a4 completionBlock:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  id v49 = a4;
  double v10 = CKFrameworkBundle();
  long long v50 = [v10 localizedStringForKey:@"UPDATE_PHOTO_AND_NAME_TITLE" value:&stru_1EDE4CA38 table:@"ChatKit"];

  double v11 = +[CKAlertController alertControllerWithTitle:v50 message:0 preferredStyle:0];
  id v12 = [v8 nickname];
  id v13 = [(CKChatController *)self contactForNickname:v12];

  id v14 = CKFrameworkBundle();
  int v15 = [v14 localizedStringForKey:@"NAME_AND_PHOTO" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v61[0] = MEMORY[0x1E4F143A8];
  v61[1] = 3221225472;
  v61[2] = __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke;
  void v61[3] = &unk_1E5622B80;
  v61[4] = self;
  id v16 = v13;
  id v62 = v16;
  id v17 = v8;
  id v63 = v17;
  id v18 = v9;
  id v64 = v18;
  id v19 = +[CKAlertAction actionWithTitle:v15 style:0 handler:v61];
  [v11 addAction:v19];

  double v20 = CKFrameworkBundle();
  double v21 = [v20 localizedStringForKey:@"PHOTO_ONLY" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v57[0] = MEMORY[0x1E4F143A8];
  v57[1] = 3221225472;
  id v57[2] = __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke_2;
  v57[3] = &unk_1E5622B80;
  void v57[4] = self;
  id v22 = v16;
  id v58 = v22;
  id v23 = v17;
  id v59 = v23;
  id v24 = v18;
  id v60 = v24;
  id v25 = +[CKAlertAction actionWithTitle:v21 style:0 handler:v57];
  [v11 addAction:v25];

  double v26 = CKFrameworkBundle();
  double v27 = [v26 localizedStringForKey:@"NAME_ONLY" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v53[0] = MEMORY[0x1E4F143A8];
  v53[1] = 3221225472;
  v53[2] = __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke_3;
  v53[3] = &unk_1E5622B80;
  void v53[4] = self;
  id v54 = v22;
  id v55 = v23;
  id v28 = v24;
  id v56 = v28;
  id v29 = v23;
  id v30 = v22;
  long long v31 = +[CKAlertAction actionWithTitle:v27 style:0 handler:v53];
  [v11 addAction:v31];

  CGRect v32 = CKFrameworkBundle();
  uint64_t v33 = [v32 localizedStringForKey:@"CANCEL" value:&stru_1EDE4CA38 table:@"ChatKit"];
  v51[0] = MEMORY[0x1E4F143A8];
  v51[1] = 3221225472;
  v51[2] = __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke_4;
  v51[3] = &unk_1E5621380;
  id v52 = v28;
  id v34 = v28;
  id v35 = +[CKAlertAction actionWithTitle:v33 style:1 handler:v51];
  [v11 addAction:v35];

  char v36 = [v11 popoverPresentationController];
  long long v37 = [(CKChatController *)self view];
  [v36 setSourceView:v37];

  id v38 = [v11 popoverPresentationController];
  id v39 = [(CKChatController *)self view];
  [v49 frame];
  double v41 = v40;
  double v43 = v42;
  double v45 = v44;
  double v47 = v46;
  uint64_t v48 = [v49 superview];

  objc_msgSend(v39, "convertRect:fromView:", v48, v41, v43, v45, v47);
  objc_msgSend(v38, "setSourceRect:");

  [v11 presentFromViewController:self animated:1 completion:0];
}

uint64_t __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) updateContact:*(void *)(a1 + 40) withNicknameUpdate:*(void *)(a1 + 48) updateType:6 addHandleToContact:0 presentationMode:3];
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    objc_super v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) updateContact:*(void *)(a1 + 40) withNicknameUpdate:*(void *)(a1 + 48) updateType:4 addHandleToContact:0 presentationMode:3];
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    objc_super v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke_3(uint64_t a1)
{
  [*(id *)(a1 + 32) updateContact:*(void *)(a1 + 40) withNicknameUpdate:*(void *)(a1 + 48) updateType:2 addHandleToContact:0 presentationMode:3];
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    objc_super v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t __91__CKChatController_Contacts__showUpdatePromptForNicknameUpdate_sourceView_completionBlock___block_invoke_4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)updateContactQuietlyForNicknameUpdate:(id)a3 updateType:(unint64_t)a4
{
  id v6 = a3;
  id v7 = [v6 nickname];
  id v8 = [(CKChatController *)self contactForNickname:v7];

  [(CKChatController *)self updateContact:v8 withNicknameUpdate:v6 updateType:a4 addHandleToContact:0 presentationMode:3];
}

- (id)updateOptionsMenuForContact:(id)a3 withNicknameUpdate:(id)a4 withCompletionBlock:(id)a5
{
  id v8 = (objc_class *)MEMORY[0x1E4F1CA48];
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = objc_alloc_init(v8);
  id v13 = [(CKChatController *)self nameAndPhotoForContact:v11 andNicknameUpdate:v10 withCompletionBlock:v9];
  [v12 addObject:v13];

  id v14 = [(CKChatController *)self nameOnlyForContact:v11 andNicknameUpdate:v10 withCompletionBlock:v9];
  [v12 addObject:v14];

  int v15 = [(CKChatController *)self photoOnlyForContact:v11 andNicknameUpdate:v10 withCompletionBlock:v9];

  [v12 addObject:v15];
  id v16 = (void *)MEMORY[0x1E4F42B80];
  id v17 = (void *)[v12 copy];
  id v18 = [v16 menuWithTitle:&stru_1EDE4CA38 children:v17];

  return v18;
}

- (id)nameAndPhotoForContact:(id)a3 andNicknameUpdate:(id)a4 withCompletionBlock:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = CKFrameworkBundle();
  id v12 = [v11 localizedStringForKey:@"NAME_AND_PHOTO" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __91__CKChatController_Contacts__nameAndPhotoForContact_andNicknameUpdate_withCompletionBlock___block_invoke;
  aBlock[3] = &unk_1E562BE68;
  objc_copyWeak(&v23, &location);
  id v13 = v8;
  id v20 = v13;
  id v14 = v9;
  id v21 = v14;
  id v15 = v10;
  id v22 = v15;
  id v16 = _Block_copy(aBlock);
  id v17 = [MEMORY[0x1E4F426E8] actionWithTitle:v12 image:0 identifier:v12 handler:v16];

  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);

  return v17;
}

uint64_t __91__CKChatController_Contacts__nameAndPhotoForContact_andNicknameUpdate_withCompletionBlock___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained updateContact:*(void *)(a1 + 32) withNicknameUpdate:*(void *)(a1 + 40) updateType:6 addHandleToContact:0 presentationMode:3];

  objc_super v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v3();
}

- (id)nameOnlyForContact:(id)a3 andNicknameUpdate:(id)a4 withCompletionBlock:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = CKFrameworkBundle();
  id v12 = [v11 localizedStringForKey:@"NAME_ONLY" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __87__CKChatController_Contacts__nameOnlyForContact_andNicknameUpdate_withCompletionBlock___block_invoke;
  aBlock[3] = &unk_1E562BE68;
  objc_copyWeak(&v23, &location);
  id v13 = v8;
  id v20 = v13;
  id v14 = v9;
  id v21 = v14;
  id v15 = v10;
  id v22 = v15;
  id v16 = _Block_copy(aBlock);
  id v17 = [MEMORY[0x1E4F426E8] actionWithTitle:v12 image:0 identifier:v12 handler:v16];

  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);

  return v17;
}

uint64_t __87__CKChatController_Contacts__nameOnlyForContact_andNicknameUpdate_withCompletionBlock___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained updateContact:*(void *)(a1 + 32) withNicknameUpdate:*(void *)(a1 + 40) updateType:2 addHandleToContact:0 presentationMode:3];

  objc_super v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v3();
}

- (id)photoOnlyForContact:(id)a3 andNicknameUpdate:(id)a4 withCompletionBlock:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = CKFrameworkBundle();
  id v12 = [v11 localizedStringForKey:@"PHOTO_ONLY" value:&stru_1EDE4CA38 table:@"ChatKit"];

  id location = 0;
  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __88__CKChatController_Contacts__photoOnlyForContact_andNicknameUpdate_withCompletionBlock___block_invoke;
  aBlock[3] = &unk_1E562BE68;
  objc_copyWeak(&v23, &location);
  id v13 = v8;
  id v20 = v13;
  id v14 = v9;
  id v21 = v14;
  id v15 = v10;
  id v22 = v15;
  id v16 = _Block_copy(aBlock);
  id v17 = [MEMORY[0x1E4F426E8] actionWithTitle:v12 image:0 identifier:v12 handler:v16];

  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);

  return v17;
}

uint64_t __88__CKChatController_Contacts__photoOnlyForContact_andNicknameUpdate_withCompletionBlock___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained updateContact:*(void *)(a1 + 32) withNicknameUpdate:*(void *)(a1 + 40) updateType:4 addHandleToContact:0 presentationMode:3];

  objc_super v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v3();
}

- (id)contactForNickname:(id)a3
{
  objc_super v3 = (void *)MEMORY[0x1E4F6E6D8];
  id v4 = a3;
  id v5 = [v3 sharedInstance];
  id v6 = [v4 handle];

  id v7 = [v5 fetchCNContactForHandleWithID:v6];

  id v8 = [MEMORY[0x1E4F6E6D8] sharedInstance];
  id v9 = [MEMORY[0x1E4F6E6D8] keysForNicknameHandling];
  id v10 = [v8 completedContact:v7 withKeys:v9];

  return v10;
}

- (void)createContactWithNicknameUpdate:(id)a3
{
  if (a3) {
    [(CKChatController *)self updateContact:0 withNicknameUpdate:a3 updateType:*MEMORY[0x1E4F6DDE0] addHandleToContact:1 presentationMode:1];
  }
}

- (void)updateContact:(id)a3 withNicknameUpdate:(id)a4 updateType:(unint64_t)a5 addHandleToContact:(BOOL)a6 presentationMode:(unint64_t)a7
{
  BOOL v8 = a6;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v13 = a4;
  if (v13)
  {
    id v14 = [(CKCoreChatController *)self createMutableContact:v12 withNicknameUpdate:v13 updateType:a5 addHandleToContact:v8];
    switch(a7)
    {
      case 0uLL:
        if (IMOSLoggingEnabled())
        {
          id v15 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            LOWORD(v29) = 0;
            _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "CKContactController_Nicknames: invalid presentation mode for updating contact!", (uint8_t *)&v29, 2u);
          }
          goto LABEL_6;
        }
        goto LABEL_20;
      case 1uLL:
        id v16 = [MEMORY[0x1E4F1BBA8] viewControllerForNewContact:v14];
        id v24 = [MEMORY[0x1E4F6E6D8] sharedInstance];
        id v25 = [v24 getContactStore];
        [v16 setContactStore:v25];

        [v16 setDelegate:self];
        id v19 = (void *)[objc_alloc(MEMORY[0x1E4F42BF8]) initWithRootViewController:v16];
        id v20 = [(CKChatController *)self viewControllerToPresentFrom];
        goto LABEL_19;
      case 2uLL:
        id v16 = [MEMORY[0x1E4F1BBA8] viewControllerForUpdatingContact:v12 withPropertiesFromContact:v14];
        id v17 = [MEMORY[0x1E4F6E6D8] sharedInstance];
        id v18 = [v17 getContactStore];
        [v16 setContactStore:v18];

        [v16 setDelegate:self];
        id v19 = (void *)[objc_alloc(MEMORY[0x1E4F42BF8]) initWithRootViewController:v16];
        id v20 = [(CKChatController *)self viewControllerToPresentFrom];
LABEL_19:
        double v26 = v20;
        [v20 presentViewController:v19 animated:1 completion:0];

        goto LABEL_20;
      case 3uLL:
        [(CKCoreChatController *)self saveContact:v14 shouldUpdate:v12 != 0];
        if ((~(_BYTE)a5 & 6) == 0)
        {
          if (IMOSLoggingEnabled())
          {
            id v21 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
            {
              LOWORD(v29) = 0;
              _os_log_impl(&dword_18EF18000, v21, OS_LOG_TYPE_INFO, "Contact update mode silent with name and photo update", (uint8_t *)&v29, 2u);
            }
          }
LABEL_17:
          id v22 = [MEMORY[0x1E4F6BD50] sharedInstance];
          id v23 = [v13 handle];
          [v22 clearPendingNicknameUpdatesForHandle:v23 forceClear:1];

          goto LABEL_20;
        }
        int v27 = IMOSLoggingEnabled();
        if ((a5 & 2) == 0)
        {
          if (v27)
          {
            id v28 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
            {
              LOWORD(v29) = 0;
              _os_log_impl(&dword_18EF18000, v28, OS_LOG_TYPE_INFO, "Contact update mode silent", (uint8_t *)&v29, 2u);
            }
          }
          goto LABEL_17;
        }
        if (v27)
        {
          id v15 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            LOWORD(v29) = 0;
            _os_log_impl(&dword_18EF18000, v15, OS_LOG_TYPE_INFO, "Contact update mode silent with name update", (uint8_t *)&v29, 2u);
          }
LABEL_6:
        }
        break;
      default:
        goto LABEL_20;
    }
    goto LABEL_20;
  }
  if (IMOSLoggingEnabled())
  {
    id v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      int v29 = 138412546;
      id v30 = v12;
      __int16 v31 = 2112;
      uint64_t v32 = 0;
      _os_log_impl(&dword_18EF18000, v14, OS_LOG_TYPE_INFO, "CKChatController_Nicknames: unable to update contact %@ with nickname update %@", (uint8_t *)&v29, 0x16u);
    }
LABEL_20:
  }
}

- (void)contactViewController:(id)a3 didCompleteWithContact:(id)a4
{
  id v6 = [a3 presentingViewController];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __75__CKChatController_Contacts__contactViewController_didCompleteWithContact___block_invoke;
  v10[3] = &unk_1E5620C40;
  void v10[4] = self;
  [v6 dismissViewControllerAnimated:1 completion:v10];

  if (a4)
  {
    id v7 = [MEMORY[0x1E4F6BD50] sharedInstance];
    BOOL v8 = [(CKChatController *)self currentNicknameUpdate];
    id v9 = [v8 handle];
    [v7 clearPendingNicknameUpdatesForHandle:v9 forceClear:1];
  }
  [(CKChatController *)self becomeFirstResponder];
}

uint64_t __75__CKChatController_Contacts__contactViewController_didCompleteWithContact___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _showOrHideNicknameBannerIfNeeded];
}

- (void)selectContact
{
  id v4 = [(CKChatController *)self viewControllerToPresentFrom];
  objc_super v3 = [(CKChatController *)self contactPicker];
  [v4 presentViewController:v3 animated:1 completion:0];
}

- (id)viewControllerToPresentFrom
{
  id v2 = self;
  objc_super v3 = [(CKChatController *)v2 presentedViewController];

  if (v3)
  {
    uint64_t v4 = [(CKChatController *)v2 presentedViewController];

    id v2 = (CKChatController *)v4;
  }

  return v2;
}

- (void)dismissPickerWithCompletion:(id)a3
{
  id v4 = a3;
  id v6 = [(CKChatController *)self contactPicker];
  id v5 = [v6 presentingViewController];
  [v5 dismissViewControllerAnimated:1 completion:v4];
}

- (void)contactPickerDidCancel:(id)a3
{
}

- (void)contactPicker:(id)a3 didSelectContact:(id)a4
{
  id v5 = a4;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = __61__CKChatController_Contacts__contactPicker_didSelectContact___block_invoke;
  _OWORD v7[3] = &unk_1E5620AF8;
  void v7[4] = self;
  id v8 = v5;
  id v6 = v5;
  [(CKChatController *)self dismissPickerWithCompletion:v7];
}

void __61__CKChatController_Contacts__contactPicker_didSelectContact___block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [v1 currentNicknameUpdate];
  [v1 updateContact:v2 withNicknameUpdate:v3 updateType:6 addHandleToContact:1 presentationMode:2];
}

- (void)_walletOrderImportControllerDismissed
{
  [(CKChatController *)self setWalletOrderImportViewController:0];
  [(CKChatController *)self becomeFirstResponder];
  id v3 = [(CKChatController *)self firstResponder];
  [v3 reloadInputViews];

  id v5 = [(CKCoreChatController *)self collectionViewController];
  id v4 = [v5 collectionView];
  [v4 endHoldingContentOffsetUpdatesForReason:@"ChatControllerQuickLook"];
}

- (void)receivedBalloonEmphasisNotification:(id)a3
{
  uint64_t v4 = sub_18F7B5D30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18F7B5CF0();
  id v8 = self;
  sub_18F4E22D8();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

- (void)emphasizeMessageWithMessageGUID:(id)a3
{
  sub_18F7B97E0();
  id v8 = self;
  uint64_t v4 = [(CKCoreChatController *)v8 collectionViewController];
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = sub_18F7B97A0();
    objc_msgSend(v6, sel_beginEmphasisWithMessageGUID_, v7);
    swift_bridgeObjectRelease();

    uint64_t v4 = (CKCoreTranscriptControllerProtocol *)v7;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

- (void)updateEmphasis
{
  uint64_t v2 = self;
  uint64_t v4 = [(CKCoreChatController *)v2 collectionViewController];
  self;
  id v3 = (void *)swift_dynamicCastObjCClass();
  if (v3) {
    objc_msgSend(v3, sel_updateEmphasis);
  }
}

- (void)testEmphasis
{
  uint64_t v2 = self;
  sub_18F4E2A40();
}

- (int64_t)entryViewPositioningGuideForCurrentTapbackPickerPresentation
{
  uint64_t v2 = self;
  int64_t v3 = sub_18F5096C0();

  return v3;
}

- (void)previewController:(id)a3 sendTapback:(id)a4 targetChatItem:(id)a5 isRemoval:(BOOL)a6
{
}

- (BOOL)previewController:(id)a3 shouldShowTapbackAttributionForChatItem:(id)a4
{
  return [(CKCoreChatController *)self shouldShowTapbackAttributionForChatItem:a4];
}

- (BOOL)previewController:(id)a3 shouldShowTapbackPickerForChatItem:(id)a4
{
  return [(CKChatController *)self shouldShowTapbackPickerForChatItem:a4];
}

- (BOOL)previewControllerShouldEnableStickerTapbacks:(id)a3
{
  return [(CKCoreChatController *)self chatSupportsStickerTapbacks];
}

- (id)pickerAccessoryViewForChatItem:(id)a3 containingViewController:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = self;
  uint64_t v9 = sub_18F509944(v6, v7);

  return v9;
}

- (void)tapbackPickerBalloonParentView:(id)a3 didInsertTapback:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = self;
  CKChatController.tapbackPickerBalloonParentView(_:didInsertTapback:)((uint64_t)v6, v7);
}

- (void)tapbackPickerBalloonParentView:(id)a3 requestedPresentPlugin:(id)a4 payloadID:(id)a5
{
  if (a4) {
    uint64_t v7 = sub_18F7B9660();
  }
  else {
    uint64_t v7 = 0;
  }
  sub_18F7B97E0();
  id v8 = a3;
  id v13 = self;
  uint64_t v9 = [(CKCoreChatController *)v13 inputController];
  if (v9)
  {
    id v10 = v9;
    if (v7) {
      id v11 = (void *)sub_18F7B9640();
    }
    else {
      id v11 = 0;
    }
    id v12 = (void *)sub_18F7B97A0();
    [(CKChatInputController *)v10 _presentPluginIfNecessaryWithPayload:v11 withPayloadID:v12];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

- (void)tapbackPickerBalloonParentViewRequestedAppCardDismiss:(id)a3
{
  id v4 = a3;
  uint64_t v5 = self;
  _sSo16CKChatControllerC7ChatKitE53tapbackPickerBalloonParentViewRequestedAppCardDismissyyAC07TapbackfghI0CF_0();
}

- (id)textInputContextIdentifierForPreviewController:(void *)a3
{
  id v4 = a3;
  id v5 = a1;
  id v6 = objc_msgSend(v5, sel_textInputContextIdentifier);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_18F7B97E0();

    id v8 = (void *)sub_18F7B97A0();
    swift_bridgeObjectRelease();
  }
  else
  {

    id v8 = 0;
  }

  return v8;
}

- (id)tapbackMenuElementsForChatItem:(id)a3
{
  id v4 = a3;
  id v5 = self;
  sub_18F50A884((uint64_t)v4);

  sub_18EF3528C(0, &qword_1E923A1A8);
  id v6 = (void *)sub_18F7B99A0();
  swift_bridgeObjectRelease();

  return v6;
}

- (id)buildTapbackMenuElementsForChatItem:(id)a3 sendHandler:(id)a4 emojiKeyboardHandler:(id)a5 detailsHandler:(id)a6
{
  id v10 = _Block_copy(a4);
  id v11 = _Block_copy(a5);
  id v12 = _Block_copy(a6);
  if (v10)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    id v10 = sub_18F50D9C8;
    if (v11) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v14 = 0;
    if (v12) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v13 = 0;
  if (!v11) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v11;
  id v11 = sub_18F50DBE4;
  if (v12)
  {
LABEL_4:
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    id v12 = sub_18F4CCAC8;
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v15 = 0;
LABEL_8:
  id v16 = a3;
  id v17 = self;
  sub_18F50AD7C(v16, (unint64_t)v10, v13, (uint64_t)v11, v14, (uint64_t)v12, v15);
  sub_18EF6E880((uint64_t)v12);
  sub_18EF6E880((uint64_t)v11);
  sub_18EF6E880((uint64_t)v10);

  sub_18EF3528C(0, &qword_1E923A1A8);
  id v18 = (void *)sub_18F7B99A0();
  swift_bridgeObjectRelease();

  return v18;
}

- (void)tapbackPickerViewController:(id)a3 didSelectTapback:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = self;
  CKChatController.tapbackPickerViewController(_:didSelectTapback:)((uint64_t)v6, v7);
}

- (void)tapbackPickerViewController:(id)a3 didDeselectTapback:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = self;
  CKChatController.tapbackPickerViewController(_:didDeselectTapback:)((uint64_t)v6, v7);
}

- (id)contextualCKChatItemsForTapbackPickerViewController:(id)a3
{
  id v4 = a3;
  id v5 = self;
  id v6 = [(CKCoreChatController *)v5 contextualChatItemsForTapbackPicker];
  sub_18EF3528C(0, (unint64_t *)&qword_1E922BBE0);
  sub_18F7B99C0();

  id v7 = (void *)sub_18F7B99A0();
  swift_bridgeObjectRelease();

  return v7;
}

- (id)smartEmojiResponses:(id)a3 chatItem:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = self;
  sub_18F6064C8(a4);

  uint64_t v9 = (void *)sub_18F7B99A0();
  swift_bridgeObjectRelease();

  return v9;
}

- (NSArray)keyCommands
{
  uint64_t v2 = self;
  int64_t v3 = CKChatController.keyCommands.getter();

  if (v3)
  {
    sub_18EF6F0E4();
    id v4 = (void *)sub_18F7B99A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }

  return (NSArray *)v4;
}

- (void)keyCommandDelete:(id)a3
{
}

- (void)keyCommandSelectTapback:(id)a3
{
  id v4 = a3;
  id v5 = self;
  sub_18F5CC53C((uint64_t)v4);
}

- (BOOL)allowsLoadingIndicatorPresentation
{
  return 1;
}

- (void)presentLoadingIndicatorCoverIfNeeded
{
  uint64_t v2 = self;
  CKChatController.presentLoadingIndicatorCoverIfNeeded()();
}

- (void)removeLoadingIndicatorCoverIfNeeded
{
  uint64_t v2 = self;
  CKChatController.removeLoadingIndicatorCoverIfNeeded()();
}

void __111__CKChatController_ClickyOrbConformance___exportActionForChatItem_shouldUseTopMostChatItemIfAggregateChatItem___block_invoke_267_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)int64_t v3 = 138412546;
  *(void *)&void v3[4] = a1;
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = *(void *)(a2 + 32);
  OUTLINED_FUNCTION_2(&dword_18EF18000, a2, a3, "Error saving media objects: %@. mediaObjects: %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16], *MEMORY[0x1E4F143B8]);
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "Failed to commit sticker: %@ after drop animation, because previewContainer was nil for preview: %@");
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_137_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)int64_t v3 = 138412546;
  *(void *)&void v3[4] = *a1;
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = *(void *)(a2 + 40);
  OUTLINED_FUNCTION_2(&dword_18EF18000, a2, a3, "Missing stickerPackGUID for sticker: %@ loaded from drag item: %@. Aborting sticker send to avoid a blastdoor explosion for the recipient.", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16], *MEMORY[0x1E4F143B8]);
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_137_cold_2(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_149_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Error loading _MSMessageMediaPayload from item provider: %@", v2, v3, v4, v5, v6);
}

void __96__CKChatController_CKChatController_Stickers___sendStickerForDragItem_previewSize_dropLocation___block_invoke_162_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Failed to copy dropped sticker with error: %@", v2, v3, v4, v5, v6);
}

- (void)presentationControllerDidDismiss:(NSObject *)a3 .cold.1(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint8_t v6 = [a2 entryView];
  id v7 = [v6 recursiveDescription];
  id v8 = [a2 entryView];
  int v9 = [v8 isFirstResponder];
  id v10 = @"NO";
  int v11 = 138412802;
  uint64_t v12 = a1;
  __int16 v13 = 2112;
  if (v9) {
    id v10 = @"YES";
  }
  uint64_t v14 = v7;
  __int16 v15 = 2112;
  id v16 = v10;
  _os_log_error_impl(&dword_18EF18000, a3, OS_LOG_TYPE_ERROR, "Returned to transcript without an entry view window. PresentationController: %@, entryView.recursiveDescription: %@, entryView.isFirstResponder: %@", (uint8_t *)&v11, 0x20u);
}

void __47__CKChatController_sendComposition_animations___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "CompositionSending background task expired.", v2, v3, v4, v5, v6);
}

void __54__CKChatController_transcriptScrollWithConfiguration___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Could not scroll to requested message, index path not found", v2, v3, v4, v5, v6);
}

- (void)transcriptCollectionViewController:balloonView:didRequestReaderViewControllerForChatItem:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Requested reader view for chat item that was not an audio chat item.", v2, v3, v4, v5, v6);
}

- (void)_updateCatchUpButtonVisibilityResumingFromBackground:(NSObject *)a3 .cold.1(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  [a1 item];
  OUTLINED_FUNCTION_3();
  __int16 v7 = 2048;
  uint64_t v8 = a2;
  OUTLINED_FUNCTION_8(&dword_18EF18000, a3, v5, "Index path of first unread message (%ld) is larger than number of items in collection view (%ld).", v6);
}

- (void)_animationPropertiesToUseInUpdateForReasons:followingHoldForReason:.cold.1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Unexpectedly handling scroll geometry update triggered for multiple reasons: %@", v2, v3, v4, v5, v6);
}

- (void)_animationPropertiesToUseInUpdateForReasons:followingHoldForReason:.cold.2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Unexpectedly handling scroll geometry update for no reasons.", v2, v3, v4, v5, v6);
}

- (void)_maxEntryViewHeight
{
}

- (void)_updateFauxKeyboardLayoutGuideIfNeededForKeyboardAppearanceNotification:.cold.1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Keyboard frame not included in notification: %@", v2, v3, v4, v5, v6);
}

- (void)sendSticker:(void *)a1 withDragTarget:draggedSticker:.cold.1(void *a1)
{
  uint64_t v1 = [a1 description];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "Creating media object for sticker: %@ failed", v4, v5, v6, v7, v8);
}

+ (void)donateStickerToRecents:(void *)a1 .cold.1(void *a1)
{
  uint64_t v1 = [a1 description];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "Missing data for sticker: %@", v4, v5, v6, v7, v8);
}

+ (void)donateStickerToRecents:(void *)a1 .cold.2(void *a1)
{
  uint64_t v1 = [a1 fileURL];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "Unable to get representation from %@", v4, v5, v6, v7, v8);
}

+ (void)donateStickerToRecentsWithIdentifier:representations:stickerEffectType:externalURI:name:accessibilityLabel:metadata:ckAttributionInfo:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Unable to donate sticker to recents; weak linked facade classes are nil",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void __154__CKChatController_donateStickerToRecentsWithIdentifier_representations_stickerEffectType_externalURI_name_accessibilityLabel_metadata_ckAttributionInfo___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Unable to donate sticker to recents: %@", v2, v3, v4, v5, v6);
}

- (void)_sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:.cold.2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Unable to send sticker for nil message part chat item", v2, v3, v4, v5, v6);
}

- (void)_sendAutomaticallyPlacedSticker:stickerReactionSession:forChatItem:forParentChatItem:stickerFrame:animationCompletionHandler:.cold.3()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "React with a sticker - could find backing balloonView. sending sticker but will not animate properly", v2, v3, v4, v5, v6);
}

void __145__CKChatController__sendAutomaticallyPlacedSticker_stickerReactionSession_forChatItem_forParentChatItem_stickerFrame_animationCompletionHandler___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "React with a sticker - could find backing sticker view. Cannot animate. Bailing", v2, v3, v4, v5, v6);
}

void __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_cold_1(void *a1)
{
  uint64_t v1 = [a1 description];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "Failed to get existing shared info: %@", v4, v5, v6, v7, v8);
}

void __62__CKChatController_sendCompositionForFileProvider_completion___block_invoke_911_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Failed to get user's currentStatus, error: %@", v2, v3, v4, v5, v6);
}

void __93__CKChatController__sendCollaborationCompositionForFileProvider_sharingURL_share_completion___block_invoke_2_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Metadata was not updated and is nil", v2, v3, v4, v5, v6);
}

void __73__CKChatController__sendCompositionForFileProviderCloudDrive_completion___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "_sendCompositionForFileProviderCloudDrive: Received unexpected error getting sharing status for url: %@, error: %@");
}

void __76__CKChatController__startSharingForURLForFileProviderCloudDrive_completion___block_invoke_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, double a4)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v4 = 138412546;
  uint64_t v5 = a1;
  __int16 v6 = 2048;
  double v7 = a4;
  OUTLINED_FUNCTION_8(&dword_18EF18000, a2, a3, "Error while creating the share URL: %@, in %f seconds", (uint8_t *)&v4);
}

- (void)_updateAndSendCompositionForFileProvider:(const char *)a1 share:sharingURL:completion:.cold.1(const char *a1)
{
  os_log_t v1 = NSStringFromSelector(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "share is unexpectedly nil in %@", v4, v5, v6, v7, v8);
}

- (void)_updateAndSendCompositionForFileProvider:(const char *)a1 share:sharingURL:completion:.cold.2(const char *a1)
{
  os_log_t v1 = NSStringFromSelector(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "composition is unexpectedly nil in %@", v4, v5, v6, v7, v8);
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_957_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "addParticipantsToShare to share failed: %@", v2, v3, v4, v5, v6);
}

void __89__CKChatController__updateAndSendCompositionForFileProvider_share_sharingURL_completion___block_invoke_3_cold_1()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "_checkCloudSharingStatusUpdateAndSendCompositionForFileProvider: Received unexpected error while getting sharing status for url: %@, error: %@");
}

void __87__CKChatController__removeSubsharesAndSendFileProviderComposition_shareURL_completion___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "shareFolderRemovingSubshares failed: %@", v2, v3, v4, v5, v6);
}

- (void)_updateAndSendCompositionForExistingCloudKitShare:(const char *)a1 share:attempt:completion:.cold.1(const char *a1)
{
  uint64_t v1 = NSStringFromSelector(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "share is unexpectedly nil in %@", v4, v5, v6, v7, v8);
}

- (void)_updateAndSendCompositionForExistingCloudKitShare:(const char *)a1 share:attempt:completion:.cold.2(const char *a1)
{
  uint64_t v1 = NSStringFromSelector(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "composition is unexpectedly nil in %@", v4, v5, v6, v7, v8);
}

void __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Retrying with updated share: %@", v2, v3, v4, v5, v6);
}

void __95__CKChatController__updateAndSendCompositionForExistingCloudKitShare_share_attempt_completion___block_invoke_cold_2()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "addParticipantsToShare to share failed attempt: %ld error: %@");
}

- (void)sendCompositionForPendingCollaboration:completion:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "sendCompositionForPendingCollaboration: we have a URL (which should only happen for 3rd party file providers) but we were unable to begin accessing the URL, which prevents us from starting collaboration.", v2, v3, v4, v5, v6);
}

- (void)sendCompositionForPendingCollaboration:completion:.cold.2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "sendCompositionForPendingCollaboration: we have a url (which should only happen for 3rd party file providers) and we were able to access it, but FileProvider does not have a record of it.", v2, v3, v4, v5, v6);
}

- (void)_presentCollabInvalidFileProviderLocationAlertIfNecessaryForPayload:collaborationType:.cold.1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Received an error retrieving an FPItem for the staged URL. Presenting an alert to the user informing them that the item is not currently in iCloud. Error: %@", v2, v3, v4, v5, v6);
}

void __115__CKChatController__presentCollabAddToMessagesGroupAlertIfNecessary_collaborationType_sendBlock_completionHandler___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "failed to get url with error: %@", v2, v3, v4, v5, v6);
}

- (void)textDroppableView:proposalForDrop:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "Created drop proposal", v2, v3, v4, v5, v6);
}

void __72__CKChatController_textPasteConfigurationSupporting_transformPasteItem___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "Created new drop composition", v2, v3, v4, v5, v6);
}

- (void)textPasteConfigurationSupporting:(const char *)a1 combineItemAttributedStrings:forRange:.cold.1(const char *a1)
{
  uint64_t v1 = NSStringFromSelector(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_10(&dword_18EF18000, v2, v3, "returned from %@", v4, v5, v6, v7, v8);
}

- (void)textPasteConfigurationSupporting:(const char *)a1 performPasteOfAttributedString:toRange:.cold.1(const char *a1)
{
  uint64_t v1 = NSStringFromSelector(a1);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_10(&dword_18EF18000, v2, v3, "performed paste in %@", v4, v5, v6, v7, v8);
}

- (void)dragInteraction:previewForLiftingItem:session:.cold.1()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_12(&dword_18EF18000, v0, v1, "%s disabling gesture recognizer for sticker lift: %@", v2, v3, v4, v5, 2u);
}

- (void)dragInteraction:session:didEndWithOperation:.cold.1()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_12(&dword_18EF18000, v0, v1, "%s re-enabling gesture recognizer for sticker lift: %@", v2, v3, v4, v5, 2u);
}

- (void)dropInteraction:canHandleSession:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "DropInteraction returned YES for canHandleSession", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:canHandleSession:.cold.2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "DropInteraction returned NO for canHandleSession", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:sessionDidEnter:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "DropInteraction session did enter with existing dropSession", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:sessionDidEnter:.cold.2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "DropInteraction session did enter with new dropSession", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:sessionDidUpdate:.cold.1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "The drop session is for repositioning a sticker, and it is targeting a different balloon. Original: %@ Selected: %@");
}

- (void)dropInteraction:sessionDidUpdate:.cold.2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "The drop session is for a sticker, and it is not targeting a balloon. Drop operation is forbidden to prevent the sticker animation from beginning.", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:sessionDidUpdate:.cold.3()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "The drop session is for a sticker, and it is targeting a messageItem that doesn't support stickers. Drop operation is forbidden to prevent the sticker animation from beginning.", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:sessionDidUpdate:.cold.4()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "DropInteraction updated with UIDropOperationForbidden", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:(void *)a1 performDrop:.cold.1(void *a1)
{
  [a1 count];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_10(&dword_18EF18000, v1, v2, "Perform drop with %ld itemProviders", v3, v4, v5, v6, v7);
}

- (void)dropInteraction:(uint64_t)a3 performDrop:(uint64_t)a4 .cold.2(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

- (void)dropInteraction:(uint64_t)a3 item:(uint64_t)a4 willAnimateDropWithAnimator:(uint64_t)a5 .cold.1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void __69__CKChatController_dropInteraction_item_willAnimateDropWithAnimator___block_invoke_2_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

- (void)dropInteraction:concludeDrop:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "Drag session concluded", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:sessionDidEnd:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "Drag session ended", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:previewForDroppingItem:withDefault:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "DropInteraction returned preview for dropping item", v2, v3, v4, v5, v6);
}

- (void)dropInteraction:(uint64_t)a3 previewForDroppingItem:(uint64_t)a4 withDefault:(uint64_t)a5 .cold.2(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_12(&dword_18EF18000, a1, a3, "retargetedPosition = (%.2f, %.2f)", a5, a6, a7, a8, 0);
}

- (void)dropInteraction:previewForDroppingItem:withDefault:.cold.3()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "previewForDroppingItem:withDefault", v2, v3, v4, v5, v6);
}

- (void)showInlineReplyControllerForChatItem:presentKeyboard:replyTransitionProperties:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Not showing inline reply controller for a chat item which does not support replies", v2, v3, v4, v5, v6);
}

- (void)messageEditingViewController:contentInsetsForChatItemGuid:.cold.1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Could not determine content insets, could not find chat item with guid: %@", v2, v3, v4, v5, v6);
}

- (void)messageEditingViewController:contentInsetsForChatItemGuid:.cold.2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Could not determine content insets, could not find cell for chat item with guid: %@", v2, v3, v4, v5, v6);
}

- (void)messageEditingViewController:contentInsetsForChatItemGuid:.cold.3()
{
  uint64_t v0 = (objc_class *)objc_opt_class();
  uint64_t v1 = NSStringFromClass(v0);
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0_0(&dword_18EF18000, v2, v3, "Could not determine content insets, collection view cell was of an unexpected type: %@", v4, v5, v6, v7, v8);
}

- (void)inlineReplyControllerIsAppearing:.cold.1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "While presenting inline overlay, the main transcript unexpectedly encountered an existing scroll intent for inline reply overlay.", v2, v3, v4, v5, v6);
}

void __44__CKChatController_MenuBar__keyCommandPage___block_invoke_cold_1(id *a1, NSObject *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [*a1 input];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl(&dword_18EF18000, a2, OS_LOG_TYPE_ERROR, "Unexpected input key for paging key command %@", (uint8_t *)&v4, 0xCu);
}

void __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Failed to find app store url for sharing url: %@", v2, v3, v4, v5, v6);
}

void __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Failed to open App Store updates page: %@", v2, v3, v4, v5, v6);
}

void __124__CKChatController_Collaboration___addDefaultButtonToSharingErrorAlertController_sharingURL_defaultButtonAction_completion___block_invoke_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Unable to open user apple account settings page: %@", v2, v3, v4, v5, v6);
}

void __127__CKChatController_GroupCollaboration___addParticipantToShare_withHandle_toCollaboration_containerSetupInfo_completionHandler___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "Error while adding participant to share: %@ - error: %@");
}

void __97__CKChatController_GroupCollaboration___addParticipant_toShareURL_forChatGUID_completionHandler___block_invoke_2_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Failed to get collaboration metadata", v2, v3, v4, v5, v6);
}

void __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_cold_2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_18EF18000, v0, v1, "Failed to get handle identity map", v2, v3, v4, v5, v6);
}

void __102__CKChatController_GroupCollaboration___removeParticipant_fromShareURL_forChatGUID_completionHandler___block_invoke_cold_3(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void __99__CKChatController_GroupCollaboration___collaborationMetadataForURL_forChatGUID_completionHandler___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Did not find an attribution for URL: %@", v2, v3, v4, v5, v6);
}

void __99__CKChatController_GroupCollaboration___collaborationMetadataForURL_forChatGUID_completionHandler___block_invoke_cold_2()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_2_0(&dword_18EF18000, v0, v1, "Did not get any attributions from URL: %@", v2, v3, v4, v5, v6);
}

void __74__CKChatController_GroupCollaboration___isShareBearURL_completionHandler___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_2(&dword_18EF18000, v0, v1, "Unable to get app link for url: %@, error: %@");
}

void __77__CKChatController_PhotosSupport___presentGridForPendingMomentShareChatItem___block_invoke_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = @"No Error";
  if (a2 == 3) {
    uint64_t v5 = @"Permanent";
  }
  if (a2 == 2) {
    uint64_t v5 = @"Transient";
  }
  uint8_t v6 = v5;
  int v7 = 138412546;
  uint64_t v8 = v4;
  __int16 v9 = 2114;
  id v10 = v6;
  _os_log_error_impl(&dword_18EF18000, a3, OS_LOG_TYPE_ERROR, "No grid view controller for chat item: %@ (error: %{public}@)", (uint8_t *)&v7, 0x16u);
}

void __74__CKChatController_PhotosSupport___presentGridForChatItem_assetReference___block_invoke_cold_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = @"No Error";
  if (a2 == 3) {
    uint64_t v2 = @"Permanent";
  }
  if (a2 == 2) {
    uint64_t v2 = @"Transient";
  }
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_6(&dword_18EF18000, v4, v5, "No grid view controller for chat item: %@, asset reference: %@ (error: %{public}@)", v6, v7, v8, v9, v10);
}

void __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke_cold_1(char a1, NSObject *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v2[0] = 67109120;
  v2[1] = a1 & 1;
  _os_log_debug_impl(&dword_18EF18000, a2, OS_LOG_TYPE_DEBUG, "Failed to create and return a CMM grid view navigation controller (permanent: %d)", (uint8_t *)v2, 8u);
}

void __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke_cold_2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "Create and return a CMM grid view navigation controller", v2, v3, v4, v5, v6);
}

void __124__CKChatController_PhotosSupport___gridViewNavigationControllerForMomentShareURL_chatItem_tapbackManager_completionHandler___block_invoke_cold_3(uint64_t a1, void *a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&void v3[4] = *(void *)(a1 + 40);
  *(_WORD *)&v3[12] = 2048;
  *(void *)&v3[14] = *a2;
  OUTLINED_FUNCTION_7_1(&dword_18EF18000, (uint64_t)a2, a3, "Did fetch moment share for URL: %@, generation: %td", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16], *MEMORY[0x1E4F143B8]);
}

void __109__CKChatController_PhotosSupport___gridViewNavigationControllerForChatItem_assetReference_completionHandler___block_invoke_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0_1(&dword_18EF18000, v0, v1, "Create and return a standard grid view navigation controller as fallback", v2, v3, v4, v5, v6);
}

void __84__CKChatController_PhotosSupport__presentedPreviewControllerDidSelectNavigateToGrid__block_invoke_cold_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = @"No Error";
  if (a2 == 3) {
    uint64_t v2 = @"Permanent";
  }
  if (a2 == 2) {
    uint64_t v2 = @"Transient";
  }
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_6(&dword_18EF18000, v4, v5, "No grid view controller for QL for chat item: %@, asset reference: %@ (error: %{public}@)", v6, v7, v8, v9, v10);
}

@end