uint64_t InputSignalAnchorSet.__deallocating_deinit()
{
  uint64_t vars8;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_25112C468(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 32) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 32) & ~v8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v12 = *(void *)(v7 + 64);
    }
    else {
      size_t v12 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_25112C5A0(uint64_t a1)
{
  CFAbsoluteTimeGetCurrent();
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v10 = 0;
  v48 = (void *)MEMORY[0x263F8EE78];
  uint64_t v38 = v2;
  uint64_t v37 = v2 + 64;
  int64_t v36 = v7;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v11 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v9 << 6))
  {
    unint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * i);
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_25:
        unint64_t v39 = v6;
        uint64_t v53 = v17;
        uint64_t v18 = 4;
        uint64_t v19 = v10;
        int64_t v40 = v9;
        do
        {
          uint64_t v21 = v18 - 4;
          if ((v16 & 0xC000000000000001) != 0)
          {
            uint64_t result = MEMORY[0x2533971C0](v18 - 4, v16);
            uint64_t v22 = v18 - 3;
            if (__OFADD__(v21, 1)) {
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t result = swift_retain();
            uint64_t v22 = v18 - 3;
            if (__OFADD__(v21, 1))
            {
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
          }
          MEMORY[0x270FA5388](result);
          uint64_t v24 = (uint64_t)&v23[4];
          v25 = v23 + 16;
          os_unfair_lock_lock(v23 + 16);
          sub_25112CB90(v24, &v54);
          os_unfair_lock_unlock(v25);
          unint64_t v26 = v54;
          if ((unint64_t)v54 <= 2)
          {
            swift_release();
            uint64_t v20 = v53;
          }
          else
          {
            uint64_t v43 = v22;
            uint64_t v44 = v19;
            uint64_t v51 = v55;
            uint64_t v52 = *((void *)&v54 + 1);
            uint64_t v50 = v56;
            uint64_t v41 = v57;
            uint64_t v27 = v59;
            uint64_t v47 = v58;
            uint64_t v49 = v60;
            uint64_t v46 = v61;
            uint64_t v28 = v63;
            uint64_t v45 = v62;
            uint64_t v29 = v64;
            uint64_t v30 = v65;
            uint64_t v31 = swift_allocObject();
            swift_weakInit();
            v32 = (void *)swift_allocObject();
            v32[2] = v31;
            v32[3] = v26;
            v32[4] = v52;
            v32[5] = v51;
            v32[6] = v50;
            v32[7] = v41;
            v32[8] = v47;
            v32[9] = v27;
            v32[10] = v49;
            v32[11] = v46;
            v32[12] = v45;
            v32[13] = v28;
            v32[14] = v29;
            v32[15] = v30;
            uint64_t v42 = v28;
            sub_251145420(v26);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v48 = sub_251139B58(0, v48[2] + 1, 1, v48);
            }
            unint64_t v34 = v48[2];
            unint64_t v33 = v48[3];
            if (v34 >= v33 >> 1) {
              v48 = sub_251139B58((void *)(v33 > 1), v34 + 1, 1, v48);
            }
            v48[2] = v34 + 1;
            v35 = &v48[13 * v34];
            v35[4] = v26;
            v35[5] = v52;
            v35[6] = v51;
            v35[7] = v50;
            v35[8] = v41;
            v35[9] = v47;
            v35[10] = v27;
            v35[11] = v49;
            v35[12] = v46;
            v35[13] = v45;
            v35[14] = v42;
            v35[15] = sub_25114BC48;
            v35[16] = v32;
            swift_release();
            sub_2511454B4(v26);
            uint64_t v19 = v44;
            uint64_t v20 = v53;
            int64_t v9 = v40;
            uint64_t v22 = v43;
          }
          ++v18;
        }
        while (v22 != v20);
        uint64_t v10 = v19;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v2 = v38;
        uint64_t v3 = v37;
        int64_t v7 = v36;
        unint64_t v6 = v39;
        if (v39) {
          goto LABEL_4;
        }
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17) {
        goto LABEL_25;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v9 >= v7) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v9);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v6 = (v14 - 1) & v14;
  }
  int64_t v15 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_41;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_41;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v9 + 3;
  if (v9 + 3 >= v7)
  {
LABEL_41:
    swift_release();
    return (uint64_t)v48;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v9 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_25112CB90@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_25112CBB0(a1, a2, *(double *)(v2 + 24));
}

uint64_t sub_25112CBB0@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>, double a3@<D0>)
{
  if (*(unsigned char *)(result + 24) == 1 && (uint64_t v4 = result, *(unsigned char *)(result + 24) = 0, (v5 = *(void *)(result + 8)) != 0))
  {
    *(void *)(result + 8) = *(void *)result;
    swift_retain();
    sub_25113FF44(v4, v5, a2, a3);
    return swift_release();
  }
  else
  {
    *(void *)a2 = 2;
    *(_OWORD *)((char *)a2 + 8) = 0u;
    *(_OWORD *)((char *)a2 + 24) = 0u;
    *(_OWORD *)((char *)a2 + 40) = 0u;
    *(_OWORD *)((char *)a2 + 56) = 0u;
    *(_OWORD *)((char *)a2 + 72) = 0u;
    *(_OWORD *)((char *)a2 + 88) = 0u;
  }
  return result;
}

void *initializeWithCopy for ScopedExecutorIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnqueuedWorkPlan(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void sub_25112CCFC(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  void (*v16)(long long *__return_ptr, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  long long v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  long long v32;
  long long v33;
  uint64_t v34;

  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&unint64_t v33 = *a1;
  *a1 = 0x8000000000000000;
  sub_251149C60(a3, v8, v10, isUniquelyReferenced_nonNull_native);
  *a1 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1[2];
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = v12 + 40;
    int64_t v15 = (void *)MEMORY[0x263F8EE78];
    do
    {
      unint64_t v16 = *(void (**)(long long *__return_ptr, uint64_t))(v14 - 8);
      uint64_t v17 = swift_retain();
      v16(&v33, v17);
      swift_release();
      if ((void)v33)
      {
        v32 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v15 = sub_25112D0FC(0, v15[2] + 1, 1, v15, (unint64_t *)&unk_26B216890, &qword_26B217E20, (uint64_t)&protocol descriptor for EnvironmentalStateManagerObserver);
        }
        uint64_t v19 = v15[2];
        uint64_t v18 = v15[3];
        uint64_t v20 = v32;
        if (v19 >= v18 >> 1)
        {
          uint64_t v21 = sub_25112D0FC((void *)(v18 > 1), v19 + 1, 1, v15, (unint64_t *)&unk_26B216890, &qword_26B217E20, (uint64_t)&protocol descriptor for EnvironmentalStateManagerObserver);
          uint64_t v20 = v32;
          int64_t v15 = v21;
        }
        v15[2] = v19 + 1;
        *(_OWORD *)&v15[2 * v19 + 4] = v20;
      }
      v14 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v22 = *a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v23 = sub_2511C9280();
  uint64_t v24 = sub_2511C9770();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    unint64_t v26 = swift_slowAlloc();
    *(void *)&unint64_t v33 = v26;
    *(_DWORD *)v25 = 136315394;
    sub_25114A7B4();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_2511C9420();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    unint64_t v34 = sub_251140E4C(v27, v29, (uint64_t *)&v33);
    sub_2511C98A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    uint64_t v30 = v15[2];
    swift_bridgeObjectRelease();
    unint64_t v34 = v30;
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25112A000, v23, v24, "Updated environmental state: %s, notifying %ld observers", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v26, -1, -1);
    MEMORY[0x253397D40](v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  *a4 = v22;
  a4[1] = v15;
}

uint64_t sub_25112D0A4@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x253397E50](v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *sub_25112D0FC(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_25112D240(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
      uint64_t v14 = (void *)swift_allocObject();
      int64_t v15 = _swift_stdlib_malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 17;
      }
      v14[2] = v12;
      v14[3] = 2 * (v16 >> 4);
      uint64_t v17 = v14 + 4;
      if (v9) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v17 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v12 + 4]) {
          memmove(v17, a4 + 4, 16 * v12);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251149FAC(0, v12, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void sub_25112D240(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_251131944(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t destroy for WorkPlanIdentifier()
{
  return swift_bridgeObjectRelease();
}

uint64_t ValueAnchor.hasDifference(from:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2511C9890();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v13 = (char *)v21 - v12;
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    char v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, a3);
    uint64_t v18 = v6;
    (*(void (**)(char *, void, uint64_t))(v6 + 16))(v8, v21[1] + *(int *)(a3 + 52), v5);
    char v19 = sub_2511C9470();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a3);
    char v17 = v19 ^ 1;
  }
  return v17 & 1;
}

uint64_t sub_25112D564(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 32) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 32) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

unsigned char *sub_25112D6F4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_25112D6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = (char *)a1;
  uint64_t v47 = (char *)a2;
  uint64_t v6 = sub_2511C9890();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v43 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v10);
  int v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_2511C9890();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v18);
  v23 = (char *)&v40 - v22;
  sub_25112FD4C((uint64_t)v47, (uint64_t)v50);
  sub_25112F678(0, (unint64_t *)&qword_26B216860);
  int v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (!v24)
  {
    v25(v20, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
LABEL_8:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v41 = v14;
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  uint64_t v47 = v9;
  uint64_t v28 = v45;
  v25(v20, 0, 1, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, AssociatedTypeWitness);
  sub_251143080((uint64_t)v46, (uint64_t)&v48);
  uint64_t v29 = v21;
  if (!v49)
  {
    sub_25114BA90((uint64_t)&v48);
    uint64_t v38 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v47, 1, 1, a3);
    char v37 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 64))(v38, v23, a3);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v28);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, AssociatedTypeWitness);
    return v37 & 1;
  }
  uint64_t v40 = v21;
  uint64_t v46 = v23;
  sub_25112F14C(&v48, (uint64_t)v50);
  sub_25112FD4C((uint64_t)v50, (uint64_t)&v48);
  sub_25112F678(0, qword_26B216650);
  uint64_t v30 = v12;
  int v31 = swift_dynamicCast();
  uint64_t v32 = v26;
  unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if (!v31)
  {
    v33(v30, 1, 1, a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v46, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v28);
    goto LABEL_8;
  }
  v33(v30, 0, 1, a3);
  unint64_t v34 = v41;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v41, v30, a3);
  uint64_t v35 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v47, v34, a3);
  v33((char *)v35, 0, 1, a3);
  uint64_t v36 = (uint64_t)v46;
  char v37 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 64))(v35, v46, a3);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v35, v28);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, AssociatedTypeWitness);
  return v37 & 1;
}

uint64_t destroy for ExecutorIdentifier()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_25112DCC4(void (*a1)(void), void (*a2)(unsigned char *, uint64_t))
{
  a1(0);
  uint64_t v26 = v2;
  uint64_t v3 = *v2;
  uint64_t v4 = sub_2511C9AD0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v26 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v27 = v3 + 64;
  int64_t v28 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v14 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v15 = 32 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    uint64_t v20 = v16[3];
    uint64_t v21 = 40 * v14;
    sub_25112FD4C(*(void *)(v3 + 56) + 40 * v14, (uint64_t)v30);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v15);
    *uint64_t v22 = v17;
    v22[1] = v18;
    v22[2] = v19;
    v22[3] = v20;
    a2(v30, *(void *)(v5 + 56) + v21);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25112DED0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>, double a4@<D0>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_2511C92A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[2];
  if (v13)
  {
    uint64_t v14 = *(void *)(v13 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_25112E580(v15, v14);
    type metadata accessor for InputSignalAnchorSet();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v16;
    uint64_t v18 = (void *)v5[12];
    swift_retain();
    uint64_t v19 = sub_25112EBE0(inited, (uint64_t)v18);
    swift_release();
  }
  else
  {
    uint64_t v18 = (void *)v5[12];
    swift_retain();
    swift_retain();
    uint64_t v19 = sub_25112EBE0(a2, (uint64_t)v18);
  }
  swift_retain();
  swift_release();
  a1[2] = v19;
  uint64_t v20 = *a1;
  if (!*a1) {
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  char v21 = _s19HealthOrchestration20InputSignalAnchorSetC2eeoiySbAC_ACtFZ_0(v19, v20);
  swift_release();
  swift_release();
  if (v21)
  {
    uint64_t result = swift_release();
    uint64_t v23 = 1;
    goto LABEL_25;
  }
  uint64_t v24 = *a1;
  if (*a1)
  {
    uint64_t v61 = v10;
    uint64_t v25 = v11;
    uint64_t v26 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_25112E580(v27, v26);
    type metadata accessor for InputSignalAnchorSet();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
  }
  else
  {
LABEL_9:
    uint64_t v61 = v10;
    uint64_t v25 = v11;
    swift_retain();
    uint64_t v29 = v19;
  }
  swift_retain();
  swift_retain();
  uint64_t v30 = sub_25112EBE0(v29, (uint64_t)v18);
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_251131A78(v31);
  uint64_t v33 = v5[13];
  if (sub_251131C3C(v32, v33))
  {
    swift_bridgeObjectRelease();
    sub_25113FF44((uint64_t)a1, v30, a3, a4);
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v59 = v30;
  uint64_t v60 = v29;
  if (*(void *)(v32 + 16) <= *(void *)(v33 + 16) >> 3)
  {
    uint64_t v63 = v33;
    swift_bridgeObjectRetain();
    sub_2511C471C(v32);
    swift_bridgeObjectRelease();
    uint64_t v34 = v63;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_2511C48FC(v32, v33);
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v5[3];
  uint64_t ObjectType = swift_getObjectType();
  char v37 = v62;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(ObjectType, v35);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_2511C9280();
  int v39 = sub_2511C9770();
  if (os_log_type_enabled(v38, (os_log_type_t)v39))
  {
    int v55 = v39;
    uint64_t v56 = v34;
    os_log_t v57 = v38;
    uint64_t v58 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v54 = v41;
    *(_DWORD *)uint64_t v40 = 136315650;
    uint64_t v42 = v5[8];
    uint64_t v43 = v5[9];
    v52[1] = v5[6];
    uint64_t v53 = v42;
    uint64_t v63 = 60;
    unint64_t v64 = 0xE100000000000000;
    v65[0] = v41;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    if (!v43) {
      swift_bridgeObjectRetain();
    }
    uint64_t v53 = v40 + 4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    uint64_t v63 = sub_251140E4C(v63, v64, v65);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    if (v18[5])
    {
      uint64_t v44 = v18[4];
      unint64_t v45 = v18[5];
    }
    else
    {
      uint64_t v44 = v18[2];
      unint64_t v45 = v18[3];
      swift_bridgeObjectRetain();
    }
    uint64_t v46 = v58;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_251140E4C(v44, v45, v65);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2080;
    sub_251132188();
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_2511C96B0();
    unint64_t v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_251140E4C(v47, v49, v65);
    sub_2511C98A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v50 = v57;
    _os_log_impl(&dword_25112A000, v57, (os_log_type_t)v55, "%s:%s: Queuing update while awaiting signals: %s.", (uint8_t *)v40, 0x20u);
    uint64_t v51 = v54;
    swift_arrayDestroy();
    MEMORY[0x253397D40](v51, -1, -1);
    MEMORY[0x253397D40](v40, -1, -1);
    swift_release();
    swift_release();
    swift_release();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v62, v61);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v37, v61);
  }
  uint64_t v23 = 2;
LABEL_25:
  *(void *)a3 = v23;
  *(_OWORD *)((char *)a3 + 8) = 0u;
  *(_OWORD *)((char *)a3 + 24) = 0u;
  *(_OWORD *)((char *)a3 + 40) = 0u;
  *(_OWORD *)((char *)a3 + 56) = 0u;
  *(_OWORD *)((char *)a3 + 72) = 0u;
  *(_OWORD *)((char *)a3 + 88) = 0u;
  return result;
}

uint64_t sub_25112E580(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_25112E60C(a1, (uint64_t)sub_25112EB88, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_25112E60C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  v38[5] = a1;
  v38[6] = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  v38[7] = v8;
  v38[8] = 0;
  v38[9] = v11 & v9;
  v38[10] = a2;
  v38[11] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25112E87C((uint64_t)&v34);
  uint64_t v12 = v35;
  if (!v35)
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25112EB80();
    return swift_release();
  }
  int v39 = (long long *)v38;
  while (1)
  {
    uint64_t v14 = v34;
    uint64_t v15 = v36;
    uint64_t v16 = v37;
    sub_25112F14C(v39, (uint64_t)v33);
    uint64_t v17 = *a5;
    unint64_t v19 = sub_25112F2DC(v14, v12, v15, v16);
    uint64_t v20 = *(void *)(v17 + 16);
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (*(void *)(v17 + 24) >= v22)
    {
      if (a4)
      {
        if (v18) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_251131420();
        if (v23) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_251131918(v22, a4 & 1);
      unint64_t v24 = sub_25112F2DC(v14, v12, v15, v16);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_22;
      }
      unint64_t v19 = v24;
      if (v23)
      {
LABEL_6:
        sub_25112FD4C((uint64_t)v33, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = *(void *)(*a5 + 56) + 40 * v19;
        __swift_destroy_boxed_opaque_existential_1(v13);
        sub_25112F14C(v32, v13);
        goto LABEL_7;
      }
    }
    uint64_t v26 = (void *)*a5;
    *(void *)(*a5 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    uint64_t v27 = (uint64_t *)(v26[6] + 32 * v19);
    *uint64_t v27 = v14;
    v27[1] = v12;
    v27[2] = v15;
    v27[3] = v16;
    sub_25112F14C(v33, v26[7] + 40 * v19);
    uint64_t v28 = v26[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_21;
    }
    v26[2] = v30;
LABEL_7:
    sub_25112E87C((uint64_t)&v34);
    uint64_t v12 = v35;
    a4 = 1;
    if (!v35) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_25112E87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v23 = v1[2];
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v15 = v11[2];
    uint64_t v14 = v11[3];
    sub_25112FD4C(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v30);
    *(void *)&long long v28 = v13;
    *((void *)&v28 + 1) = v12;
    *(void *)&long long v29 = v15;
    *((void *)&v29 + 1) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = v23;
    goto LABEL_23;
  }
  int64_t v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v17 = (unint64_t)(v6 + 64) >> 6;
  if (v16 < v17)
  {
    unint64_t v18 = *(void *)(v4 + 8 * v16);
    if (v18)
    {
LABEL_7:
      uint64_t v23 = v1[2];
      uint64_t v9 = (v18 - 1) & v18;
      unint64_t v10 = __clz(__rbit64(v18)) + (v16 << 6);
      int64_t v7 = v16;
      goto LABEL_3;
    }
    int64_t v19 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v17)
    {
      unint64_t v18 = *(void *)(v4 + 8 * v19);
      if (v18)
      {
LABEL_10:
        int64_t v16 = v19;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v17)
      {
        unint64_t v18 = *(void *)(v4 + 8 * (v5 + 3));
        if (v18)
        {
          int64_t v16 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v19 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v17)
        {
          unint64_t v18 = *(void *)(v4 + 8 * v19);
          if (v18) {
            goto LABEL_10;
          }
          int64_t v16 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v17)
          {
            unint64_t v18 = *(void *)(v4 + 8 * v16);
            if (v18) {
              goto LABEL_7;
            }
            int64_t v7 = v17 - 1;
            int64_t v20 = v5 + 6;
            while (v17 != v20)
            {
              unint64_t v18 = *(void *)(v4 + 8 * v20++);
              if (v18)
              {
                int64_t v16 = v20 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v31 = 0;
  memset(v30, 0, sizeof(v30));
  long long v28 = 0u;
  long long v29 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  BOOL v21 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_25112EAC0((uint64_t)&v28, (uint64_t)v26, &qword_26B218370, (void (*)(uint64_t))sub_251130158);
  if (*((void *)&v26[0] + 1))
  {
    v24[2] = v26[2];
    v24[3] = v26[3];
    uint64_t v25 = v27;
    v24[0] = v26[0];
    v24[1] = v26[1];
    v21(v24);
    return sub_2511300F8((uint64_t)v24, (uint64_t (*)(void))sub_251130158);
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_25112EAC0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_25112EB2C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_25112EB2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9890();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25112EB80()
{
  return swift_release();
}

uint64_t sub_25112EB88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  sub_25112FD4C((uint64_t)(a1 + 4), (uint64_t)(a2 + 4));
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_25112EBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251130704(0, v3, 0);
    uint64_t v5 = v2 + 32;
    uint64_t v4 = v22;
    do
    {
      sub_25112FD4C(v5, (uint64_t)v18);
      uint64_t v6 = v19;
      uint64_t v7 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v21, v6, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      uint64_t v8 = v21[0];
      uint64_t v9 = v21[1];
      uint64_t v10 = v21[2];
      uint64_t v11 = v21[3];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251130704(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v22;
      }
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_251130704(v12 > 1, v13 + 1, 1);
        uint64_t v4 = v22;
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v4 + 32 * v13);
      v14[4] = v8;
      v14[5] = v9;
      v14[6] = v10;
      v14[7] = v11;
      v5 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_2511301D8(v15, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for InputSignalAnchorSet();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v16;
  return result;
}

uint64_t sub_25112EDA4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for InputSignalAnchorSet()
{
  return self;
}

HealthOrchestration::InputSignalIdentifier __swiftcall InputSignalIdentifier.init(stringLiteral:)(Swift::String stringLiteral)
{
  *uint64_t v1 = stringLiteral;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.value = stringLiteral;
  return result;
}

uint64_t _s19HealthOrchestration20InputSignalAnchorSetC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  if (*(void *)(v2 + 16) != *(void *)(v3 + 16)) {
    return 0;
  }
  uint64_t v26 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (2)
  {
    uint64_t v11 = *(void *)(v2 + 56);
    unint64_t v12 = (void *)(*(void *)(v2 + 48) + 32 * v10);
    uint64_t v13 = v12[1];
    uint64_t v14 = v12[2];
    uint64_t v15 = v12[3];
    *(void *)&long long v33 = *v12;
    *((void *)&v33 + 1) = v13;
    *(void *)&long long v34 = v14;
    *((void *)&v34 + 1) = v15;
    sub_25112FD4C(v11 + 40 * v10, (uint64_t)v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_25112F37C((uint64_t)&v33, (uint64_t)&v37);
      uint64_t v19 = v38;
      if (!v38)
      {
        swift_release();
        return 1;
      }
      uint64_t v20 = v37;
      uint64_t v21 = v39;
      uint64_t v22 = v40;
      sub_25112F14C(v41, (uint64_t)&v33);
      if (*(void *)(v3 + 16) && (unint64_t v23 = sub_25112F2DC(v20, v19, v21, v22), (v24 & 1) != 0))
      {
        sub_25112FD4C(*(void *)(v3 + 56) + 40 * v23, (uint64_t)&v28);
      }
      else
      {
        uint64_t v30 = 0;
        long long v28 = 0u;
        long long v29 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((void *)&v29 + 1))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
        swift_release();
        sub_2511BC500((uint64_t)&v28, (unint64_t *)&qword_26B217A30, qword_26B216650);
        return 0;
      }
      sub_25112F14C(&v28, (uint64_t)v31);
      uint64_t v25 = v32;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      LOBYTE(v25) = sub_25112F450((uint64_t)&v33, v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
      if ((v25 & 1) == 0)
      {
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        return 0;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      if (v6) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v16 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v16 < v27)
      {
        unint64_t v17 = *(void *)(v26 + 8 * v16);
        if (v17) {
          goto LABEL_10;
        }
        int64_t v18 = v8 + 2;
        ++v8;
        if (v16 + 1 < v27)
        {
          unint64_t v17 = *(void *)(v26 + 8 * v18);
          if (v17) {
            goto LABEL_13;
          }
          int64_t v8 = v16 + 1;
          if (v16 + 2 < v27)
          {
            unint64_t v17 = *(void *)(v26 + 8 * (v16 + 2));
            if (v17)
            {
              v16 += 2;
              goto LABEL_10;
            }
            int64_t v18 = v16 + 3;
            int64_t v8 = v16 + 2;
            if (v16 + 3 < v27) {
              break;
            }
          }
        }
      }
LABEL_24:
      unint64_t v6 = 0;
      uint64_t v36 = 0;
      memset(v35, 0, sizeof(v35));
      long long v33 = 0u;
      long long v34 = 0u;
    }
    unint64_t v17 = *(void *)(v26 + 8 * v18);
    if (v17)
    {
LABEL_13:
      int64_t v16 = v18;
LABEL_10:
      unint64_t v6 = (v17 - 1) & v17;
      unint64_t v10 = __clz(__rbit64(v17)) + (v16 << 6);
      int64_t v8 = v16;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v27)
    {
      int64_t v8 = v27 - 1;
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v26 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_10;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25112F14C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25112F1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v11 = *(void *)(v5 + 48);
    unint64_t v12 = (void *)(v11 + 32 * v8);
    BOOL v13 = *v12 == a1 && v12[1] == a2;
    if (!v13 && (sub_2511C9CA0() & 1) == 0)
    {
      uint64_t v14 = ~v7;
      do
      {
        unint64_t v8 = (v8 + 1) & v14;
        if (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        uint64_t v15 = (void *)(v11 + 32 * v8);
        BOOL v16 = *v15 == a1 && v15[1] == a2;
      }
      while (!v16 && (sub_2511C9CA0() & 1) == 0);
    }
  }
  return v8;
}

unint64_t sub_25112F2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_2511C9D80();

  return sub_25112F1F8(a1, a2, a3, a4, v8);
}

uint64_t sub_25112F37C(uint64_t a1, uint64_t a2)
{
  sub_25112F3FC(0, &qword_26B218370, (void (*)(uint64_t))sub_251130158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25112F3FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9890();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25112F450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9890();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v17[-v7 - 8];
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25112FD4C(a1, (uint64_t)v17);
  sub_25112F678(0, qword_26B216650);
  int v12 = swift_dynamicCast();
  BOOL v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    char v14 = sub_2511C9470();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_25112F678(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_25112F6C8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void sub_25112F744(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 32) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 >= a2)
  {
    switch(v13)
    {
      case 1:
        a1[v10] = 0;
        if (a2) {
          goto LABEL_24;
        }
        break;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (a2) {
          goto LABEL_24;
        }
        break;
      case 3:
LABEL_41:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_23;
      default:
LABEL_23:
        if (a2)
        {
LABEL_24:
          if ((v7 & 0x80000000) != 0)
          {
            unint64_t v18 = (unint64_t)&a1[v9 + 32] & ~v9;
            uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
            v19(v18);
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *((void *)a1 + 2) = 0;
            *((void *)a1 + 3) = 0;
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = a2 - 1;
          }
        }
        break;
    }
  }
  else
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        break;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        break;
      default:
        return;
    }
  }
}

uint64_t sub_25112F9A8(void *a1, void *a2)
{
  return static ValueAnchor.== infix(_:_:)(a1, a2);
}

uint64_t static ValueAnchor.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (v3 = sub_2511C9CA0(), char v4 = 0, (v3 & 1) != 0))
  {
    type metadata accessor for ValueAnchor();
    char v4 = sub_2511C9470();
  }
  return v4 & 1;
}

uint64_t type metadata accessor for ValueAnchor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25112FA78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v27 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v35 = a3;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v6 = a3 + 64;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  uint64_t v29 = v6;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  long long v28 = (void *)(a4 + 40);
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_21:
    int v17 = (uint64_t *)(*(void *)(v35 + 48) + 32 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    sub_25112FD4C(*(void *)(v35 + 56) + 40 * v13, (uint64_t)v34);
    v32[0] = v18;
    v32[1] = v19;
    long long v32[2] = v20;
    v32[3] = v21;
    sub_25112FD4C((uint64_t)v34, (uint64_t)&v33);
    uint64_t v22 = *(void *)(a4 + 16);
    if (v22)
    {
      unint64_t v23 = v28;
      while (1)
      {
        BOOL v24 = *(v23 - 1) == v18 && *v23 == v19;
        if (v24 || (sub_2511C9CA0() & 1) != 0) {
          break;
        }
        v23 += 4;
        if (!--v22) {
          goto LABEL_4;
        }
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_251130098((uint64_t)v32, (uint64_t (*)(void))sub_251130158);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v27 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return sub_251130394(v27, a2, v4, v35);
      }
    }
    else
    {
LABEL_4:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_251130098((uint64_t)v32, (uint64_t (*)(void))sub_251130158);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v14 >= v30) {
    return sub_251130394(v27, a2, v4, v35);
  }
  unint64_t v15 = *(void *)(v29 + 8 * v14);
  ++v5;
  if (v15) {
    goto LABEL_20;
  }
  int64_t v5 = v14 + 1;
  if (v14 + 1 >= v30) {
    return sub_251130394(v27, a2, v4, v35);
  }
  unint64_t v15 = *(void *)(v29 + 8 * v5);
  if (v15) {
    goto LABEL_20;
  }
  int64_t v5 = v14 + 2;
  if (v14 + 2 >= v30) {
    return sub_251130394(v27, a2, v4, v35);
  }
  unint64_t v15 = *(void *)(v29 + 8 * v5);
  if (v15)
  {
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_21;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v30) {
    return sub_251130394(v27, a2, v4, v35);
  }
  unint64_t v15 = *(void *)(v29 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v30) {
      return sub_251130394(v27, a2, v4, v35);
    }
    unint64_t v15 = *(void *)(v29 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25112FD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_25112FDB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    uint64_t v12 = ((unint64_t)a1 + v6 + 32) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 32) & ~v6;
    int64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for ExecutorIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t *sub_25112FF08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 32) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = a2[3];
    a1[2] = a2[2];
    a1[3] = v16;
    int v17 = (void *)(((unint64_t)a1 + v8 + 32) & ~v8);
    uint64_t v18 = (const void *)(((unint64_t)a2 + v8 + 32) & ~v8);
    uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v18, 1, v4))
    {
      memcpy(v17, v18, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v17, v18, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_251130098(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2511300F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_251130158()
{
  if (!qword_26B218608)
  {
    sub_251131944(255, qword_26B216650);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B218608);
    }
  }
}

uint64_t sub_2511301D8(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25112FA78((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25112FA78((uint64_t)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x253397D40](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_251130394(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_251130684();
  uint64_t result = sub_2511C9AF0();
  uint64_t v8 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v35 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v33) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v33) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v33) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v33) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v33) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = *(void *)(v4 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    sub_25112FD4C(v17 + 40 * v13, (uint64_t)v37);
    sub_25112F14C(v37, (uint64_t)v36);
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C94F0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_2511C9D80();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v8 + 48) + 32 * v26);
    *uint64_t v31 = v20;
    v31[1] = v19;
    v31[2] = v21;
    void v31[3] = v22;
    uint64_t result = sub_25112F14C(v36, *(void *)(v8 + 56) + 40 * v26);
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v35;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_251130684()
{
  if (!qword_26B218940)
  {
    sub_251131944(255, qword_26B216650);
    sub_251132188();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218940);
    }
  }
}

uint64_t sub_251130704(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251130724(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251130724(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218990, (uint64_t)&type metadata for InputSignalIdentifier, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void sub_2511308B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_251130900(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

BOOL sub_25113094C(char *a1, char *a2, uint64_t a3)
{
  return static OptionalValueAnchor.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(char **)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_25113095C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v5;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

void sub_251130A34(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 32) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 <= 3)
  {
    unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      int v6 = 4;
      if (v10 < a2) {
        goto LABEL_18;
      }
      goto LABEL_25;
    }
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 1;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        break;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        break;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        break;
      default:
        return;
    }
    return;
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (a2) {
        goto LABEL_30;
      }
      break;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (a2) {
        goto LABEL_30;
      }
      break;
    case 3:
LABEL_59:
      __break(1u);
      break;
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if ((v9 & 0x80000000) != 0)
        {
          uint64_t v20 = (unsigned char *)((unint64_t)&a1[v11 + 32] & ~v11);
          if (v9 >= a2)
          {
            uint64_t v24 = a2 + 1;
            unint64_t v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v26 = (unint64_t)&a1[v11 + 32] & ~v11;
            v25(v26, v24);
          }
          else
          {
            if (v12 <= 3) {
              int v21 = ~(-1 << (8 * v12));
            }
            else {
              int v21 = -1;
            }
            if (v12)
            {
              int v22 = v21 & (~v9 + a2);
              if (v12 <= 3) {
                int v23 = v12;
              }
              else {
                int v23 = 4;
              }
              bzero(v20, v12);
              switch(v23)
              {
                case 2:
                  *(_WORD *)uint64_t v20 = v22;
                  break;
                case 3:
                  *(_WORD *)uint64_t v20 = v22;
                  v20[2] = BYTE2(v22);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v20 = v22;
                  break;
                default:
                  *uint64_t v20 = v22;
                  break;
              }
            }
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 2) = 0;
          *((void *)a1 + 3) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      break;
  }
}

BOOL static OptionalValueAnchor.== infix(_:_:)(char *a1, char *a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v50 = *(void *)(a3 - 8);
  uint64_t v51 = a5;
  MEMORY[0x270FA5388](a1);
  uint64_t v46 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2511C9890();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  unsigned int v16 = (char *)v44 - v15;
  uint64_t v17 = *(void *)(v12 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  uint64_t v47 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v52 = (char *)v44 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v53 = (char *)v44 - v22;
  if (*(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1)
    || (v23 = sub_2511C9CA0(), BOOL result = 0, (v23 & 1) != 0))
  {
    v44[1] = a6;
    uint64_t v45 = v13;
    uint64_t v55 = a3;
    uint64_t v56 = a4;
    os_log_t v57 = v51;
    uint64_t v58 = a6;
    uint64_t v25 = type metadata accessor for OptionalValueAnchor();
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    char v27 = v53;
    v26(v53, &a1[*(int *)(v25 + 52)], v12);
    unint64_t v28 = v52;
    v26(v52, &a2[*(int *)(v25 + 52)], v12);
    BOOL v29 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
    v26(v16, v27, v12);
    unint64_t v48 = v29;
    v26(v29, v28, v12);
    uint64_t v30 = v50;
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    uint64_t v51 = v16;
    uint64_t v32 = v16;
    uint64_t v33 = v31;
    uint64_t v49 = a3;
    if (v31(v32, 1, a3) == 1)
    {
      long long v34 = v51;
      uint64_t v35 = *(void (**)(char *, uint64_t))(v17 + 8);
      v35(v28, v12);
      v35(v27, v12);
      if (v33(v48, 1, v49) == 1)
      {
        v35(v34, v12);
        return 1;
      }
    }
    else
    {
      v44[0] = v17;
      uint64_t v36 = v47;
      v26(v47, v51, v12);
      uint64_t v37 = v48;
      uint64_t v38 = v49;
      if (v33(v48, 1, v49) != 1)
      {
        uint64_t v40 = v46;
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v46, v37, v38);
        char v41 = sub_2511C9470();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v30 + 8);
        v42(v40, v38);
        uint64_t v43 = *(void (**)(char *, uint64_t))(v44[0] + 8);
        v43(v52, v12);
        v43(v53, v12);
        v42(v36, v38);
        v43(v51, v12);
        return (v41 & 1) != 0;
      }
      long long v34 = v51;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v44[0] + 8);
      v39(v52, v12);
      v39(v53, v12);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v38);
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, TupleTypeMetadata2);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for OptionalValueAnchor()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for ScopedExecutorIdentifier()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for ScopedExecutorIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s19HealthOrchestration17LocaleInputSignalC6AnchorV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_2511C9CA0(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v4)
    {
      if (!v6) {
        return 0;
      }
      if (v2 != v7 || v4 != v6)
      {
        char v12 = sub_2511C9CA0();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v5)
    {
      if (v8 && (v3 == v9 && v5 == v8 || (sub_2511C9CA0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void sub_2511313FC(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002511CE2F0;
  a1[2] = 0;
  a1[3] = 0;
}

void *sub_251131420()
{
  return sub_25112DCC4((void (*)(void))sub_251130684, (void (*)(unsigned char *, uint64_t))sub_25112F14C);
}

void sub_25113144C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2511314A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t static SecureCodingValueAnchor.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_2511C9CA0() & 1) == 0) {
    return 0;
  }
  sub_251131578(0, (unint64_t *)&qword_26B217FC0);
  return sub_2511C9880() & 1;
}

uint64_t sub_251131578(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2511315B4(uint64_t a1, char a2, void (*a3)(void), void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  a3(0);
  char v41 = a2;
  uint64_t v8 = sub_2511C9AE0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v40 = v7 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  uint64_t v38 = v4;
  int64_t v39 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v39) {
      break;
    }
    uint64_t v21 = (void *)(v7 + 64);
    unint64_t v22 = *(void *)(v40 + 8 * v20);
    ++v15;
    if (!v22)
    {
      int64_t v15 = v20 + 1;
      if (v20 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v40 + 8 * v15);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v40 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v15 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v15 >= v39) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v40 + 8 * v15);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v23;
      }
    }
LABEL_21:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v15 << 6);
LABEL_22:
    uint64_t v24 = (uint64_t *)(*(void *)(v7 + 48) + 32 * v19);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    uint64_t v29 = *(void *)(v7 + 56) + 40 * v19;
    if (v41)
    {
      a4(v29, v43);
    }
    else
    {
      sub_25112FD4C(v29, (uint64_t)v43);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    sub_2511C94F0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_2511C9D80();
    uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v13 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v31) & ~*(void *)(v13 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v13 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v16 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t v17 = (void *)(*(void *)(v9 + 48) + 32 * v16);
    *uint64_t v17 = v26;
    v17[1] = v25;
    v17[2] = v27;
    v17[3] = v28;
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v43, *(void *)(v9 + 56) + 40 * v16);
    ++*(void *)(v9 + 16);
  }
  swift_release();
  uint64_t v5 = v38;
  uint64_t v21 = (void *)(v7 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v7 + 32);
  if (v37 >= 64) {
    bzero(v21, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v21 = -1 << v37;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_251131918(uint64_t a1, char a2)
{
  return sub_2511315B4(a1, a2, (void (*)(void))sub_251130684, (void (*)(uint64_t, unsigned char *))sub_25112F14C);
}

uint64_t sub_251131944(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_251131998(void *a1, void *a2)
{
  return static SecureCodingOptionalValueAnchor.== infix(_:_:)(a1, a2);
}

uint64_t static SecureCodingOptionalValueAnchor.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = (void *)a1[4];
  long long v3 = (void *)a2[4];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_2511C9CA0(), result = 0, (v5 & 1) != 0))
  {
    if (v2)
    {
      if (v3)
      {
        id v7 = v3;
        id v8 = v2;
        char v9 = sub_2511C9880();

        if (v9) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_251131A44(double *a1, double *a2)
{
  return *a1 == *a2;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_251131A78(uint64_t a1)
{
  sub_251132188();
  uint64_t result = sub_2511C96C0();
  int64_t v3 = 0;
  uint64_t v20 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      int64_t v3 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v3);
      if (!v17)
      {
        int64_t v3 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v3);
        if (!v17)
        {
          int64_t v3 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v3);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 32 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = v11[2];
    uint64_t v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251132348(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v3);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251131C3C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v28 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v31 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v30 = v3;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v9 >= v29) {
      return 1;
    }
    unint64_t v10 = *(void *)(v28 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v29) {
        return 1;
      }
      unint64_t v10 = *(void *)(v28 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v29) {
          return 1;
        }
        unint64_t v10 = *(void *)(v28 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v29) {
            return 1;
          }
          unint64_t v10 = *(void *)(v28 + 8 * v11);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v10 - 1) & v10;
    int64_t v30 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_26:
    uint64_t v13 = result;
    uint64_t v14 = (uint64_t *)(*(void *)(result + 48) + 32 * v8);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C94F0();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_2511C9D80();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v31 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v20 = *(void *)(a2 + 48);
    uint64_t v21 = (void *)(v20 + 32 * v19);
    BOOL v22 = *v21 == v16 && v21[1] == v15;
    if (!v22 && (sub_2511C9CA0() & 1) == 0)
    {
      uint64_t v23 = ~v18;
      for (unint64_t i = v19 + 1; ; unint64_t i = v25 + 1)
      {
        uint64_t v25 = i & v23;
        if (((*(void *)(v31 + (((i & v23) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v23)) & 1) == 0) {
          break;
        }
        uint64_t v26 = (void *)(v20 + 32 * v25);
        BOOL v27 = *v26 == v16 && v26[1] == v15;
        if (v27 || (sub_2511C9CA0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = v13;
    int64_t v3 = v30;
  }
  uint64_t v12 = v3 + 5;
  if (v3 + 5 >= v29) {
    return 1;
  }
  unint64_t v10 = *(void *)(v28 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v29) {
      return 1;
    }
    unint64_t v10 = *(void *)(v28 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_251131F14(void *a1, void *a2)
{
  return static SecureCodingValuesAnchor.== infix(_:_:)(a1, a2);
}

void sub_251131F24(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 32) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 >= a2)
  {
    switch(v13)
    {
      case 1:
        a1[v10] = 0;
        if (a2) {
          goto LABEL_24;
        }
        break;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (a2) {
          goto LABEL_24;
        }
        break;
      case 3:
LABEL_41:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_23;
      default:
LABEL_23:
        if (a2)
        {
LABEL_24:
          if ((v7 & 0x80000000) != 0)
          {
            unint64_t v18 = (unint64_t)&a1[v9 + 32] & ~v9;
            unint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
            v19(v18);
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *((void *)a1 + 2) = 0;
            *((void *)a1 + 3) = 0;
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = a2 - 1;
          }
        }
        break;
    }
  }
  else
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        break;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        break;
      default:
        return;
    }
  }
}

unint64_t sub_251132188()
{
  unint64_t result = qword_26B218620;
  if (!qword_26B218620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218620);
  }
  return result;
}

void sub_2511321DC(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CBA90;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t storeEnumTagSinglePayload for ExecutorIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t dispatch thunk of WorkPlan.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for InputSignalIdentifier()
{
  return &type metadata for InputSignalIdentifier;
}

uint64_t storeEnumTagSinglePayload for EnqueuedWorkPlan(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

HealthOrchestration::PriorityRuleSet::Rule __swiftcall PriorityRuleSet.Rule.init(descriptions:priority:)(Swift::OpaquePointer descriptions, HealthOrchestration::PriorityRuleSet::Priority priority)
{
  char v3 = *(unsigned char *)priority;
  *(Swift::OpaquePointer *)uint64_t v2 = descriptions;
  *(unsigned char *)(v2 + 8) = v3;
  result.descriptions = descriptions;
  result.priority = priority;
  return result;
}

uint64_t destroy for EnvironmentalStateDescription()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for ScopedExecutorIdentifier()
{
  return &type metadata for ScopedExecutorIdentifier;
}

uint64_t sub_251132338(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t destroy for PriorityRuleSet.Rule()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251132348(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_2511C9D80();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = *(void *)(v10 + 48);
    int v15 = (void *)(v14 + 32 * v13);
    BOOL v16 = *v15 == a2 && v15[1] == a3;
    if (v16 || (sub_2511C9CA0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v17 = (uint64_t *)(*(void *)(*v5 + 48) + 32 * v13);
      uint64_t v18 = v17[1];
      uint64_t v20 = v17[2];
      uint64_t v19 = v17[3];
      *a1 = *v17;
      a1[1] = v18;
      a1[2] = v20;
      a1[3] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v22 = ~v12;
    while (1)
    {
      unint64_t v13 = (v13 + 1) & v22;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        break;
      }
      uint64_t v23 = (void *)(v14 + 32 * v13);
      BOOL v24 = *v23 == a2 && v23[1] == a3;
      if (v24 || (sub_2511C9CA0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251132540(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v27;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  uint64_t result = 1;
  a1[2] = a4;
  a1[3] = a5;
  return result;
}

uint64_t sub_251132540(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  unsigned int v7 = v6;
  uint64_t v12 = result;
  unint64_t v13 = *(void *)(*v6 + 16);
  unint64_t v14 = *(void *)(*v6 + 24);
  if (v14 > v13 && (a6 & 1) != 0) {
    goto LABEL_22;
  }
  if (a6)
  {
    sub_2511A5ED8();
  }
  else
  {
    if (v14 > v13)
    {
      uint64_t result = (uint64_t)sub_2511A7910();
      goto LABEL_22;
    }
    sub_2511A8BC0();
  }
  uint64_t v15 = *v6;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_2511C9D80();
  uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
  a5 = result & ~v16;
  uint64_t v17 = v15 + 56;
  if ((*(void *)(v15 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v18 = *(void *)(v15 + 48);
    uint64_t v19 = (void *)(v18 + 32 * a5);
    BOOL v20 = *v19 == v12 && v19[1] == a2;
    if (v20 || (uint64_t result = sub_2511C9CA0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_2511C9CC0();
      __break(1u);
    }
    else
    {
      uint64_t v21 = ~v16;
      while (1)
      {
        a5 = (a5 + 1) & v21;
        if (((*(void *)(v17 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
          break;
        }
        uint64_t v22 = (void *)(v18 + 32 * a5);
        if (*v22 != v12 || v22[1] != a2)
        {
          uint64_t result = sub_2511C9CA0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v24 = *v7;
  *(void *)(*v7 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v25 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
  uint64_t *v25 = v12;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v28;
  }
  return result;
}

uint64_t static SecureCodingValuesAnchor.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (v3 = sub_2511C9CA0(), char v4 = 0, (v3 & 1) != 0))
  {
    type metadata accessor for SecureCodingValuesAnchor();
    char v4 = sub_2511C9470();
  }
  return v4 & 1;
}

uint64_t type metadata accessor for SecureCodingValuesAnchor()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for PriorityRuleSet.Priority()
{
  return &type metadata for PriorityRuleSet.Priority;
}

uint64_t destroy for WorkQueue.WorkSet()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t WorkEpoch.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t destroy for WorkEpoch.State()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EnvironmentalStateDescription()
{
  return &type metadata for EnvironmentalStateDescription;
}

unint64_t static EnvironmentalStateDescription.deviceUnlocked()@<X0>(unint64_t *a1@<X8>)
{
  return sub_251148598((uint64_t)&unk_2702049B8, a1);
}

uint64_t ScopedExecutorIdentifier.provider.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScopedExecutorIdentifier.executor.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ScopedExecutorIdentifier.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  if (!v1) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  return 60;
}

__n128 SecureCodingValueAnchor.init(identifier:value:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3 = a1->n128_u64[1];
  a3->n128_u64[0] = a1->n128_u64[0];
  a3->n128_u64[1] = v3;
  __n128 result = a1[1];
  a3[1] = result;
  a3[2].n128_u64[0] = a2;
  return result;
}

uint64_t dispatch thunk of InputSignalObserver.didUpdate<A>(anchor:signal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t destroy for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_251132A74()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_2511C9520();
  sub_2511C9C50();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  return v2;
}

ValueMetadata *type metadata accessor for WorkPlanIdentifier()
{
  return &type metadata for WorkPlanIdentifier;
}

uint64_t WorkPlanIdentifier.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkPlanIdentifier.code.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_251132B44()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t destroy for WorkCriteriaRecord.Epoch.State()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for ExecutorIdentifier()
{
  return &type metadata for ExecutorIdentifier;
}

uint64_t ExecutorIdentifier.description.getter()
{
  if (v0[3])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    uint64_t v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for WorkPlanAnalytics()
{
  return &type metadata for WorkPlanAnalytics;
}

double WorkPlanAnalytics.runnableDuration.getter()
{
  return *(double *)(v0 + 16);
}

double WorkPlanAnalytics.blockedDuration.getter()
{
  return *(double *)v0;
}

double WorkPlanAnalytics.pausedDuration.getter()
{
  return *(double *)(v0 + 8);
}

double WorkPlanAnalytics.runDuration.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t WorkPlanAnalytics.description.getter()
{
  return 0;
}

ValueMetadata *type metadata accessor for PriorityRuleSet.Rule()
{
  return &type metadata for PriorityRuleSet.Rule;
}

unsigned char *storeEnumTagSinglePayload for PriorityRuleSet.Priority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of DispatchTarget.run(_:for:context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t WorkBarrier.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_251133034()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + 112);
}

uint64_t sub_251133064()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25113308C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2511330B4(uint64_t a1)
{
  return sub_251145ADC(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t ScheduledWorkPlan.Result.description.getter(id a1)
{
  if (!a1) {
    return 0x73736563637573;
  }
  if (a1 == (id)1) {
    return 0x646563616C706572;
  }
  id v3 = a1;
  sub_2511C9520();
  sub_25113319C();
  sub_2511C9A90();
  sub_2511C9520();
  sub_25113F858(a1);
  return 0;
}

unint64_t sub_25113319C()
{
  unint64_t result = qword_26B218198;
  if (!qword_26B218198)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B218198);
  }
  return result;
}

uint64_t sub_2511331F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_25113321C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_251133244()
{
  return sub_25113324C(v0);
}

uint64_t sub_25113324C(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  id v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_2511332C8(v2, &v6);
  os_unfair_lock_unlock(v3);
  v4._rawValue = v6;
  sub_251135B44(v4);

  return swift_bridgeObjectRelease();
}

void *sub_2511332C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_2511373E4(a1);
  *a2 = result;
  return result;
}

uint64_t OrchestrationDirector.fireOnce(priorityThresholdOverride:barrier:)()
{
  return WorkQueue.enqueue(priorityThresholdOverride:barrier:)();
}

uint64_t WorkQueue.enqueue(priorityThresholdOverride:barrier:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  id v3 = v1 + 19;
  os_unfair_lock_lock(v1 + 19);
  sub_251133408(v2, &v9);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = *(void *)(v9 + 16);
  if (v4)
  {
    uint64_t v5 = v9 + 40;
    do
    {
      unsigned int v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251133408@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251143EB4(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), a2);
}

Swift::Void __swiftcall OrchestrationDirector.fireOnce()()
{
  uint64_t v22 = sub_2511C93D0();
  uint64_t v1 = *(NSObject **)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v3 = (void *)((char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  uint64_t v5 = v4 + 4;
  unsigned int v6 = v4 + 11;
  os_unfair_lock_lock(v4 + 11);
  sub_251133788(v5, aBlock);
  os_unfair_lock_unlock(v6);
  unint64_t v7 = aBlock[0];
  if (aBlock[0] >> 62) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (v8 >= 1)
    {
      uint64_t v9 = 0;
      unint64_t v21 = v7 & 0xC000000000000001;
      unsigned int v20 = *MEMORY[0x263F8F0D8];
      uint64_t v10 = v1 + 13;
      uint64_t v11 = v1 + 1;
      v19[1] = v24;
      v19[0] = v8;
      while (1)
      {
        if (v21)
        {
          uint64_t v12 = MEMORY[0x2533971C0](v9, v7);
        }
        else
        {
          uint64_t v12 = *(void *)(v7 + 8 * v9 + 32);
          swift_retain();
        }
        unint64_t v13 = *(void **)(v12 + 56);
        *id v3 = v13;
        uint64_t v14 = v22;
        ((void (*)(void *, void, uint64_t))v10->isa)(v3, v20, v22);
        uint64_t v1 = v13;
        char v15 = sub_2511C93F0();
        ((void (*)(void *, uint64_t))v11->isa)(v3, v14);
        if ((v15 & 1) == 0) {
          break;
        }
        unint64_t v16 = v7;
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = sub_251133244;
        *(void *)(v17 + 24) = v12;
        v24[2] = sub_25113321C;
        v24[3] = v17;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        v24[0] = sub_2511331F4;
        v24[1] = &block_descriptor_0;
        unint64_t v7 = (unint64_t)_Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        dispatch_async_and_wait(v1, (dispatch_block_t)v7);
        _Block_release((const void *)v7);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release_n();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_13;
        }
        ++v9;
        unint64_t v7 = v16;
        if (v19[0] == v9) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (!v8) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
LABEL_11:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_251133788@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_2511337A4(a1, a2);
}

uint64_t sub_2511337A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }
  swift_retain_n();
  uint64_t v4 = sub_2511C9280();
  os_log_type_t v5 = sub_2511C9770();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v9 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_retain();
    sub_2511C9960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_release();
    sub_251140E4C(0xD000000000000018, 0x80000002511D0C50, &v9);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2048;
    sub_2511C98A0();
    _os_log_impl(&dword_25112A000, v4, v5, "%s: Triggering single fire at %ld contexts.", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v7, -1, -1);
    MEMORY[0x253397D40](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251133A28(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return TimeoutDispatchTarget.run(_:for:context:completion:)(a1, a2, a3, a4, a5, a6);
}

uint64_t TimeoutDispatchTarget.run(_:for:context:completion:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v31 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a1;
  uint64_t v11 = sub_2511C97F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a2[1];
  long long v43 = *a2;
  long long v44 = v15;
  long long v45 = a2[2];
  sub_251131578(0, (unint64_t *)&qword_26B217FB0);
  *(void *)&v42[0] = MEMORY[0x263F8EE78];
  sub_251133DF0(&qword_26B217FA8, MEMORY[0x263F8F148]);
  sub_251133E98();
  sub_251133DF0(&qword_26B217F58, (void (*)(uint64_t))sub_251133E98);
  sub_2511C9900();
  uint64_t v16 = sub_2511C9800();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_251133E38();
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 28) = 0;
  *(void *)(v17 + 16) = v16;
  *(unsigned char *)(v17 + 24) = 0;
  unint64_t v32 = sub_2511351E0;
  uint64_t v33 = v17;
  uint64_t v34 = a3;
  uint64_t v18 = v29;
  uint64_t v35 = v29;
  uint64_t v36 = &v43;
  uint64_t v19 = v30;
  uint64_t v37 = v30;
  uint64_t v38 = a5;
  uint64_t v39 = v31;
  uint64_t v40 = v7;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 28));
  sub_251133EF0((void *)(v17 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 28));
  unsigned int v20 = v7 + 3;
  uint64_t v21 = v7[6];
  uint64_t v22 = v7[7];
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(v20, v21);
  v42[0] = v43;
  v42[1] = v44;
  v42[2] = v45;
  sub_25112FD4C(v19, (uint64_t)v41);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_2511351E0;
  *(void *)(v23 + 24) = v17;
  *(void *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = v18;
  long long v24 = v44;
  *(_OWORD *)(v23 + 48) = v43;
  *(_OWORD *)(v23 + 64) = v24;
  *(_OWORD *)(v23 + 80) = v45;
  sub_25112F14C(v41, v23 + 96);
  uint64_t v25 = v31;
  *(void *)(v23 + 136) = a5;
  *(void *)(v23 + 144) = v25;
  uint64_t v26 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v22 + 8);
  swift_retain();
  swift_unknownObjectRetain();
  sub_25113822C((uint64_t)&v43);
  swift_retain();
  v26(v30, v42, a3, v18, sub_251134AA4, v23, v21, v22);
  swift_release();
  return swift_release_n();
}

uint64_t sub_251133DF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_251133E38()
{
  if (!qword_26B218910)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218910);
    }
  }
}

void sub_251133E98()
{
  if (!qword_26B217F50)
  {
    sub_2511C97F0();
    unint64_t v0 = sub_2511C9610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217F50);
    }
  }
}

uint64_t sub_251133EF0(void *a1)
{
  return sub_251133F28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(_OWORD **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_251133F28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t ObjectType = a8;
  uint64_t v48 = a7;
  uint64_t v50 = a5;
  uint64_t v60 = a1;
  uint64_t v56 = a10;
  uint64_t v52 = a9;
  uint64_t v46 = sub_2511C9350();
  uint64_t v45 = *(void *)(v46 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v46);
  long long v44 = (void **)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  char v41 = (void **)((char *)&v41 - v17);
  uint64_t v57 = sub_2511C93C0();
  uint64_t v43 = *(void *)(v57 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v42 = (char *)&v41 - v20;
  uint64_t v53 = sub_2511C9360();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_2511C9390();
  uint64_t v23 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = *a1;
  swift_getObjectType();
  sub_25112FD4C(v48, (uint64_t)v59);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a2;
  *(void *)(v26 + 24) = a3;
  uint64_t v27 = v50;
  *(void *)(v26 + 32) = a4;
  *(void *)(v26 + 40) = v27;
  long long v28 = a6[1];
  *(_OWORD *)(v26 + 48) = *a6;
  *(_OWORD *)(v26 + 64) = v28;
  *(_OWORD *)(v26 + 80) = a6[2];
  sub_25112F14C(v59, v26 + 96);
  uint64_t v29 = v52;
  *(void *)(v26 + 136) = ObjectType;
  *(void *)(v26 + 144) = v29;
  aBlock[4] = sub_25116EE38;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_251135784;
  aBlock[3] = &block_descriptor_4;
  uint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_25113822C((uint64_t)a6);
  swift_retain();
  sub_2511345EC();
  sub_2511345F0();
  sub_2511C9820();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v53);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v49);
  swift_release();
  uint64_t v31 = v55;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = sub_2511C93A0();
  double v33 = *(double *)(v56 + 16) * 1000.0;
  if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v33 < 9.22337204e18)
  {
    uint64_t v34 = (uint64_t)v41;
    *char v41 = (uint64_t)v33;
    uint64_t v35 = v45;
    uint64_t v36 = v46;
    (*(void (**)(uint64_t, void, uint64_t))(v45 + 104))(v34, *MEMORY[0x263F8F000], v46);
    uint64_t v37 = v42;
    sub_2511C93B0();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v38(v34, v36);
    uint64_t v56 = *(void *)(v43 + 8);
    ((void (*)(char *, uint64_t))v56)(v31, v57);
    uint64_t v39 = ObjectType;
    sub_251134578(v34);
    uint64_t v40 = v44;
    sub_251134500(v44);
    MEMORY[0x2533970A0](v37, v34, v40, v39);
    v38((uint64_t)v40, v36);
    v38(v34, v36);
    ((void (*)(char *, uint64_t))v56)(v37, v57);
    swift_getObjectType();
    return sub_2511C9840();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_251134500@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x263F8EFE0];
  uint64_t v3 = sub_2511C9350();
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_251134578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F8F010];
  uint64_t v3 = sub_2511C9350();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_2511345F0()
{
  sub_2511C9360();
  sub_2511352F4(&qword_26B216870, 255, MEMORY[0x263F8F030]);
  unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F8F030];
  sub_2511346DC(0, (unint64_t *)&unk_26B217EF0, MEMORY[0x263F8F030]);
  sub_2511482C4((unint64_t *)&unk_26B217F00, (unint64_t *)&unk_26B217EF0, v0);
  return sub_2511C9900();
}

void sub_2511346DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9610();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_251134730(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
}

void DirectDispatchTarget.run(_:for:context:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  void (*v27)(long long *__return_ptr, uint64_t, uint64_t);
  char v29;
  void *v30;
  unsigned char *v31;
  void *v32;
  void *v33;
  unsigned char *v34;
  void *v35;
  long long v41;
  uint64_t v42;
  uint64_t v43;
  long long v44;
  long long v45;
  uint64_t v46;
  void v47[3];
  uint64_t v48;
  uint64_t v49;

  uint64_t v7 = a4;
  uint64_t v8 = a3;
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = *(void *)(v6 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = *a2;
    uint64_t v14 = a2[1];
    uint64_t v15 = v11 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_25112FD4C(v15, (uint64_t)&v41);
      uint64_t v16 = v42;
      uint64_t v17 = v43;
      __swift_project_boxed_opaque_existential_1(&v41, v42);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17) == v13 && v18 == v14) {
        break;
      }
      char v20 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_24;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
      v15 += 40;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = a3;
        uint64_t v7 = a4;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v8 = a3;
    swift_bridgeObjectRelease();
    sub_25112F14C(&v41, (uint64_t)&v44);
    swift_bridgeObjectRelease();
    uint64_t v7 = a4;
    if (!*((void *)&v45 + 1)) {
      goto LABEL_25;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v46 = 0;
    long long v44 = 0u;
    uint64_t v45 = 0u;
    swift_bridgeObjectRelease();
    if (!*((void *)&v45 + 1))
    {
LABEL_25:
      sub_25113533C((uint64_t)&v44);
      sub_2511352A0();
      double v33 = (void *)swift_allocError();
      *uint64_t v34 = 0;
      uint64_t v35 = (void *)sub_2511C9130();
      a5();

      return;
    }
  }
  sub_25112F14C(&v44, (uint64_t)v47);
  uint64_t v21 = v48;
  uint64_t v22 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  uint64_t v23 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v8, v7, v21, v22) + 16);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      uint64_t v25 = *v24;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v27 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v25 + 24);
      swift_unknownObjectRetain();
      v27(&v44, ObjectType, v25);
      if ((void)v44 == v10 && *((void *)&v44 + 1) == v9)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      uint64_t v29 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29) {
        break;
      }
      swift_unknownObjectRelease();
      v24 += 2;
      if (!--v23)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_28:
    sub_25118E98C(a1, (void (*)(id))a5, a6, ObjectType, v25);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_22:
    sub_2511352A0();
    uint64_t v30 = (void *)swift_allocError();
    *uint64_t v31 = 1;
    unint64_t v32 = (void *)sub_2511C9130();
    a5();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
}

uint64_t sub_251134AA4(void *a1)
{
  return sub_251134ADC(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t (*)(void *))(v1 + 48), v1 + 96, *(uint64_t (**)(void *))(v1 + 136));
}

uint64_t sub_251134ADC(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *), uint64_t a7, uint64_t (*a8)(void *))
{
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v12 = sub_2511C92A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v51 - v18;
  if (a2(v17)) {
    return v57(a1);
  }
  uint64_t v21 = v56;
  uint64_t v57 = a6;
  uint64_t v54 = v13;
  uint64_t v55 = v12;
  if (a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = a5;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(a5 + 40);
    id v25 = a1;
    uint64_t v26 = v16;
    v24(ObjectType, v23);
    sub_25112FD4C(v21, (uint64_t)v61);
    uint64_t v27 = v57;
    sub_25113822C((uint64_t)v57);
    id v28 = v25;
    sub_25113822C((uint64_t)v27);
    id v29 = v28;
    uint64_t v30 = sub_2511C9280();
    int v31 = sub_2511C9750();
    if (os_log_type_enabled(v30, (os_log_type_t)v31))
    {
      int v52 = v31;
      uint64_t v56 = (uint64_t)a1;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v60 = v53;
      *(_DWORD *)uint64_t v32 = 136315650;
      long long v33 = *((_OWORD *)v27 + 2);
      long long v62 = *((_OWORD *)v27 + 1);
      long long v63 = v33;
      uint64_t v58 = 60;
      unint64_t v59 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      if (!*((void *)&v63 + 1)) {
        swift_bridgeObjectRetain();
      }
      sub_251169A98((uint64_t)&v62);
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_251169AD0((uint64_t)&v62);
      sub_2511C9520();
      uint64_t v58 = sub_251140E4C(v58, v59, &v60);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      uint64_t v42 = v57;
      sub_251138278((uint64_t)v57);
      sub_251138278((uint64_t)v42);
      *(_WORD *)(v32 + 12) = 2080;
      sub_25112FD4C((uint64_t)v61, (uint64_t)&v58);
      sub_25116ED74();
      uint64_t v43 = sub_2511C94C0();
      uint64_t v58 = sub_251140E4C(v43, v44, &v60);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
      *(_WORD *)(v32 + 22) = 2112;
      uint64_t v58 = (uint64_t)v29;
      id v45 = v29;
      sub_2511C98A0();
      uint64_t v46 = v51;
      *uint64_t v51 = v56;

      _os_log_impl(&dword_25112A000, v30, (os_log_type_t)v52, "%s: %s: Failed after timeout with error: %@", (uint8_t *)v32, 0x20u);
      sub_25116EDCC();
      swift_arrayDestroy();
      MEMORY[0x253397D40](v46, -1, -1);
      uint64_t v47 = v53;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v47, -1, -1);
      MEMORY[0x253397D40](v32, -1, -1);
    }
    else
    {

      sub_251138278((uint64_t)v27);
      sub_251138278((uint64_t)v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v26, v55);
  }
  else
  {
    uint64_t v34 = swift_getObjectType();
    uint64_t v35 = v19;
    (*(void (**)(uint64_t, uint64_t))(a5 + 40))(v34, a5);
    sub_25112FD4C(v21, (uint64_t)v61);
    uint64_t v36 = v57;
    sub_25113822C((uint64_t)v57);
    sub_25113822C((uint64_t)v36);
    uint64_t v37 = sub_2511C9280();
    os_log_type_t v38 = sub_2511C9770();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v60 = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      long long v41 = *((_OWORD *)v36 + 2);
      long long v62 = *((_OWORD *)v36 + 1);
      long long v63 = v41;
      uint64_t v58 = 60;
      unint64_t v59 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      if (!*((void *)&v63 + 1)) {
        swift_bridgeObjectRetain();
      }
      sub_251169A98((uint64_t)&v62);
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_251169AD0((uint64_t)&v62);
      sub_2511C9520();
      uint64_t v58 = sub_251140E4C(v58, v59, &v60);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      uint64_t v48 = v57;
      sub_251138278((uint64_t)v57);
      sub_251138278((uint64_t)v48);
      *(_WORD *)(v39 + 12) = 2080;
      sub_25112FD4C((uint64_t)v61, (uint64_t)&v58);
      sub_25116ED74();
      uint64_t v49 = sub_2511C94C0();
      uint64_t v58 = sub_251140E4C(v49, v50, &v60);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
      _os_log_impl(&dword_25112A000, v37, v38, "%s: %s: Finished after timeout.", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v40, -1, -1);
      MEMORY[0x253397D40](v39, -1, -1);
    }
    else
    {
      sub_251138278((uint64_t)v36);
      sub_251138278((uint64_t)v36);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v35, v55);
  }
}

uint64_t sub_2511351E0()
{
  return sub_2511351E8(v0);
}

uint64_t sub_2511351E8(os_unfair_lock_s *a1)
{
  uint64_t v1 = (uint64_t)&a1[4];
  uint64_t v2 = a1 + 7;
  os_unfair_lock_lock(a1 + 7);
  sub_251135244(v1, (char *)&v4);
  os_unfair_lock_unlock(v2);
  return v4;
}

uint64_t sub_251135244@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (*(unsigned char *)(result + 8))
  {
    char v3 = 0;
  }
  else
  {
    char v3 = 1;
    *(unsigned char *)(result + 8) = 1;
    swift_getObjectType();
    uint64_t result = sub_2511C9830();
  }
  *a2 = v3;
  return result;
}

unint64_t sub_2511352A0()
{
  unint64_t result = qword_26B218570;
  if (!qword_26B218570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218570);
  }
  return result;
}

uint64_t sub_2511352F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25113533C(uint64_t a1)
{
  sub_251135398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_251135398()
{
  if (!qword_26B217A28)
  {
    sub_25112F678(255, &qword_26B217A20);
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217A28);
    }
  }
}

uint64_t sub_251135400(void *a1)
{
  return sub_251135410(a1, v1 + 16, *(void *)(v1 + 152), v1 + 160);
}

uint64_t sub_251135410(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    uint64_t v8 = *(void (**)(uint64_t, void *))(a2 + 120);
    id v9 = a1;
    v8(a2, a1);
  }
  else
  {
    (*(void (**)(uint64_t, void))(a2 + 120))(a2, 0);
  }
  uint64_t v10 = *(os_unfair_lock_s **)(a3 + 64);
  uint64_t v11 = (uint64_t)&v10[4];
  uint64_t v12 = v10 + 9;
  os_unfair_lock_lock(v10 + 9);
  sub_251135560(v11);
  os_unfair_lock_unlock(v12);
  return _s19HealthOrchestration15MultiDispatcherC5start6sourceyAA10WorkSource_p_tF_0(a4);
}

uint64_t sub_2511354D0(uint64_t a1, uint64_t a2)
{
  return sub_2511354DC(a1, a2, v2 + 16);
}

uint64_t sub_2511354DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(a3 + 88))();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a2 != 1) {
      sub_2511358B0();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_251135560(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2) {
    __break(1u);
  }
  else {
    *(void *)(result + 8) = v3;
  }
  return result;
}

uint64_t sub_251135578()
{
  return sub_251135584();
}

uint64_t sub_251135584()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 64);
    MEMORY[0x270FA5388](result);
    swift_retain();
    os_unfair_lock_lock(v1 + 22);
    sub_251135664();
    os_unfair_lock_unlock(v1 + 22);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_251135664()
{
  return (*(uint64_t (**)(void, void))(v0[2] + 88))(v0[3], v0[4]);
}

uint64_t sub_25113569C()
{
  return sub_2511356A4();
}

uint64_t sub_2511356A4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 112);
    MEMORY[0x270FA5388](result);
    swift_retain();
    os_unfair_lock_lock(v1 + 16);
    sub_25113DE54((uint64_t)&v1[4]);
    os_unfair_lock_unlock(v1 + 16);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_251135784(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_2511357C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_251135948(v0 + v4, v0+ ((v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1, v2);
}

void sub_2511358B0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 19;
  os_unfair_lock_lock(v1 + 19);
  sub_25113D034(v2, &v6);
  os_unfair_lock_unlock(v3);
  unint64_t v4 = v6;
  if (v6)
  {
    uint64_t v5 = swift_retain();
    ((void (*)(uint64_t))v4)(v5);
    sub_251135B0C((uint64_t)v4);
    sub_251135B0C((uint64_t)v4);
  }
}

void sub_251135948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_2511C93D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void **)(v4 + 56);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_2511C93F0();
  uint64_t v15 = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    MEMORY[0x270FA5388](v15);
    *(void *)&v21[-48] = a3;
    *(void *)&v21[-40] = a4;
    *(void *)&v21[-32] = a2;
    *(void *)&v21[-24] = a1;
    uint64_t v17 = (uint64_t)&v16[4];
    uint64_t v18 = v16 + 22;
    *(void *)&v21[-16] = v4;
    os_unfair_lock_lock(v16 + 22);
    sub_251135E60(v17, &v22);
    os_unfair_lock_unlock(v18);
    uint64_t v19 = v22;
    if (v22)
    {
      uint64_t v20 = swift_retain();
      v19(v20);
      sub_251135B0C((uint64_t)v19);
      sub_251135B0C((uint64_t)v19);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_251135B0C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_251135B1C()
{
  v1._rawValue = *(void **)(v0 + 24);
  sub_251135B44(v1);
}

void sub_251135B44(Swift::OpaquePointer a1)
{
  uint64_t v3 = sub_2511C92A0();
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *((void *)a1._rawValue + 2);
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 32;
    uint64_t v10 = *((void *)a1._rawValue + 2);
    do
    {
      uint64_t v11 = *(void *)(*(void *)((char *)a1._rawValue + v9) + 16);
      BOOL v12 = __OFADD__(v8, v11);
      v8 += v11;
      if (v12)
      {
        __break(1u);
        return;
      }
      v9 += 104;
      --v10;
    }
    while (v10);
    uint64_t v26 = v4;
    uint64_t v13 = *(void *)(v1 + 16);
    uint64_t v14 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v14 + 40))(ObjectType, v14);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v16 = sub_2511C9280();
    os_log_type_t v17 = sub_2511C9770();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v25 = v3;
      uint64_t v19 = v18;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v28 = v14;
      uint64_t v29 = v24;
      *(_DWORD *)uint64_t v19 = 136315650;
      v23[1] = v19 + 4;
      uint64_t v27 = v13;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      uint64_t v20 = sub_2511C94C0();
      uint64_t v27 = sub_251140E4C(v20, v21, &v29);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2048;
      uint64_t v27 = v8;
      sub_2511C98A0();
      *(_WORD *)(v19 + 22) = 2048;
      swift_bridgeObjectRelease();
      uint64_t v27 = v7;
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v16, v17, "[%s]: Enqueuing %ld items for %ld criteria.", (uint8_t *)v19, 0x20u);
      uint64_t v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v22, -1, -1);
      MEMORY[0x253397D40](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v3);
    }
    WorkQueue.enqueue(_:)(a1);
  }
}

uint64_t sub_251135E60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251135E84(a1, *(NSObject **)(v2 + 32), *(void *)(v2 + 40), *(os_log_t *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_251135E84@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, os_log_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  void (*v64)(os_log_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  Class v82;
  uint64_t v83;
  char *v84;
  char *v85;
  NSObject *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  os_log_t v99;
  uint64_t v100;
  char *v101;
  NSObject *v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  NSObject *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  os_log_t v125;
  uint64_t v126;
  void *v127;
  uint64_t result;
  int v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  os_log_t v136;
  os_log_t v137;
  os_log_t v138;
  void *v139;
  os_log_t v140;
  os_log_t v141;
  void (*v142)();
  uint64_t v143;
  uint64_t v144;
  void *v145;
  void v146[3];
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  os_log_t v153;
  os_log_t v154;
  uint64_t v155;
  void *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  os_log_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  os_log_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v161 = a3;
  uint64_t v8 = a5;
  v166 = a2;
  v156 = a7;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  v150 = (char *)v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v151 = (char *)v146 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v148 = (char *)v146 - v17;
  MEMORY[0x270FA5388](v16);
  v149 = (char *)v146 - v18;
  uint64_t v19 = sub_2511C92A0();
  uint64_t v20 = *(void *)(v19 - 8);
  v158 = v19;
  v159 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v167 = (char *)v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v154 = (os_log_t)((char *)v146 - v24);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v152 = (char *)v146 - v26;
  MEMORY[0x270FA5388](v25);
  v153 = (os_log_t)((char *)v146 - v27);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v165 = sub_2511C9890();
  uint64_t v29 = *(void *)(v165 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v165);
  uint64_t v32 = (char *)v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)v146 - v33;
  v163 = a1;
  uint64_t v35 = *(uint64_t **)(a1 + 16);
  v155 = a6;
  if (v35)
  {
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v37 = v11;
    uint64_t v38 = v8;
    uint64_t v39 = v29;
    unint64_t v40 = sub_2511382C8(MEMORY[0x263F8EE78]);
    type metadata accessor for InputSignalAnchorSet();
    uint64_t v36 = (uint64_t *)swift_allocObject();
    long long v36[2] = v40;
    uint64_t v29 = v39;
    uint64_t v8 = v38;
    uint64_t v11 = v37;
    a6 = v155;
  }
  v162 = v11;
  swift_retain();
  v164 = v36;
  InputSignalAnchorSet.anchor<A>(for:)(v8, a6, (uint64_t)v34);
  long long v41 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v157 = v34;
  uint64_t v42 = v165;
  v41(v32, v34, v165);
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v32, 1, AssociatedTypeWitness);
  v160 = v29;
  if (v44 == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v42);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    os_log_t v46 = (os_log_t)v167;
    uint64_t v47 = v161;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v47 = v161;
    char v48 = InputSignalAnchor.isEqual(to:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, AssociatedTypeWitness);
    os_log_t v46 = (os_log_t)v167;
    if (v48)
    {
      uint64_t isa = (uint64_t)a4[2].isa;
      uint64_t v50 = (uint64_t)a4[3].isa;
      uint64_t ObjectType = swift_getObjectType();
      os_log_t v46 = v153;
      (*(void (**)(uint64_t, uint64_t))(v50 + 40))(ObjectType, v50);
      uint64_t v52 = v162;
      uint64_t v53 = v149;
      (*(void (**)(char *, os_log_t, uint64_t))(v162 + 16))(v149, v166, v8);
      swift_retain_n();
      uint64_t v54 = sub_2511C9280();
      int v55 = sub_2511C9770();
      if (os_log_type_enabled(v54, (os_log_type_t)v55))
      {
        LODWORD(v167) = v55;
        uint64_t v56 = swift_slowAlloc();
        v166 = (os_log_t)swift_slowAlloc();
        v173 = v166;
        *(_DWORD *)uint64_t v56 = 136315394;
        v168 = isa;
        v169 = v50;
        sub_251131944(0, (unint64_t *)&qword_26B216848);
        swift_unknownObjectRetain();
        uint64_t v57 = sub_2511C94C0();
        v168 = sub_251140E4C(v57, v58, (uint64_t *)&v173);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v56 + 12) = 2080;
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(v155 + 40))(&v168, v8);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v8);
        unint64_t v59 = v171;
        if (v171)
        {
          uint64_t v60 = v170;
        }
        else
        {
          uint64_t v60 = v168;
          unint64_t v59 = swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        v168 = sub_251140E4C(v60, v59, (uint64_t *)&v173);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25112A000, v54, (os_log_type_t)v167, "[%s]: Received spurious update from %s (identical anchors). Ignoring.", (uint8_t *)v56, 0x16u);
        v138 = v166;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v138, -1, -1);
        MEMORY[0x253397D40](v56, -1, -1);

        swift_release();
        (*(void (**)(os_log_t, uint64_t))(v159 + 8))(v153, v158);
        goto LABEL_58;
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v8);
      swift_release_n();

      goto LABEL_34;
    }
  }
  uint64_t v61 = sub_25113840C(v47, v164, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v62 = v163;
  swift_retain();
  swift_release();
  v161 = v61;
  *(void *)(v62 + 16) = v61;
  sub_251138CD0(v47, (void *)v62, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v63 = v162;
  if ((*(unsigned char *)(v62 + 34) & 1) == 0)
  {
    v153 = a4;
    unint64_t v64 = *(void (**)(os_log_t *__return_ptr, uint64_t, uint64_t))(a6 + 40);
    v146[1] = a6 + 40;
    v146[0] = v64;
    v64(&v173, v8, a6);
    sub_251132348(&v168, (uint64_t)v173, v174, v175, v176);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = *(void *)(v62 + 40);
    v66 = *(void *)v62;
    v67 = *(void *)(*(void *)v62 + 16);
    v68 = MEMORY[0x263F8EE78];
    if (v67)
    {
      v147 = v65;
      v149 = (char *)v8;
      v177 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_251130704(0, v67, 0);
      v146[2] = v66;
      v69 = v66 + 32;
      v68 = v177;
      do
      {
        sub_251139AA0(v69, (uint64_t)&v168);
        v70 = v171;
        v71 = v172;
        __swift_project_boxed_opaque_existential_1(&v168, v171);
        (*(void (**)(os_log_t *__return_ptr, uint64_t, uint64_t))(v71 + 40))(&v173, v70, v71);
        sub_251139A70((uint64_t)&v168);
        v72 = v173;
        v73 = v174;
        v75 = v175;
        v74 = v176;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251130704(0, *(void *)(v68 + 16) + 1, 1);
          v68 = v177;
        }
        v77 = *(void *)(v68 + 16);
        v76 = *(void *)(v68 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_251130704(v76 > 1, v77 + 1, 1);
          v68 = v177;
        }
        *(void *)(v68 + 16) = v77 + 1;
        v78 = (void *)(v68 + 32 * v77);
        v78[4] = v72;
        v78[5] = v73;
        v78[6] = v75;
        v78[7] = v74;
        v69 += 48;
        --v67;
        os_log_t v46 = (os_log_t)v167;
      }
      while (v67);
      swift_bridgeObjectRelease();
      uint64_t v8 = (uint64_t)v149;
      uint64_t v63 = v162;
      uint64_t v65 = v147;
    }
    v79 = sub_25118A6EC(v68);
    swift_bridgeObjectRelease();
    v80 = sub_251131C3C(v65, v79);
    swift_bridgeObjectRelease();
    a4 = v153;
    uint64_t v62 = v163;
    if (v80)
    {
      v81 = (uint64_t)v153[2].isa;
      v82 = v153[3].isa;
      v83 = swift_getObjectType();
      v84 = v152;
      (*((void (**)(uint64_t, Class))v82 + 5))(v83, v82);
      v85 = v148;
      (*(void (**)(char *, os_log_t, uint64_t))(v63 + 16))(v148, v166, v8);
      swift_retain_n();
      v86 = sub_2511C9280();
      LODWORD(v167) = sub_2511C9770();
      if (os_log_type_enabled(v86, (os_log_type_t)v167))
      {
        v166 = v86;
        v87 = swift_slowAlloc();
        v154 = (os_log_t)swift_slowAlloc();
        v173 = v154;
        *(_DWORD *)v87 = 136315394;
        v168 = v81;
        v169 = (uint64_t)v82;
        sub_251131944(0, (unint64_t *)&qword_26B216848);
        swift_unknownObjectRetain();
        v88 = sub_2511C94C0();
        v168 = sub_251140E4C(v88, v89, (uint64_t *)&v173);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v87 + 12) = 2080;
        ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v146[0])(&v168, v8, v155);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v85, v8);
        v90 = v171;
        if (v171)
        {
          v91 = v170;
        }
        else
        {
          v91 = v168;
          v90 = swift_bridgeObjectRetain();
        }
        v123 = v157;
        swift_bridgeObjectRelease();
        v168 = sub_251140E4C(v91, v90, (uint64_t *)&v173);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        v140 = v166;
        _os_log_impl(&dword_25112A000, v166, (os_log_type_t)v167, "[%s]: Received update from %s. Input signal registration complete.", (uint8_t *)v87, 0x16u);
        v141 = v154;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v141, -1, -1);
        MEMORY[0x253397D40](v87, -1, -1);

        (*(void (**)(char *, uint64_t))(v159 + 8))(v152, v158);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v85, v8);

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v159 + 8))(v84, v158);
        v123 = v157;
      }
      v142 = sub_25117AB74(v163);
      v144 = v143;
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v160 + 8))(v123, v165);
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v142;
      *(void *)(result + 24) = v144;
      v145 = v156;
      *v156 = sub_25114A81C;
      v145[1] = result;
      return result;
    }
  }
  v92 = v63;
  v93 = *(unsigned __int8 *)(v62 + 32);
  if (v93 != 1 || (*(unsigned char *)(v62 + 33) & 1) != 0)
  {
    LODWORD(v163) = *(unsigned __int8 *)(v62 + 33);
    v112 = (uint64_t)a4[2].isa;
    v113 = (uint64_t)a4[3].isa;
    v114 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v113 + 40))(v114, v113);
    v115 = v150;
    (*(void (**)(char *, os_log_t, uint64_t))(v92 + 16))(v150, v166, v8);
    swift_retain_n();
    v116 = sub_2511C9280();
    LODWORD(v166) = sub_2511C9770();
    if (os_log_type_enabled(v116, (os_log_type_t)v166))
    {
      v154 = v116;
      v117 = swift_slowAlloc();
      v153 = (os_log_t)swift_slowAlloc();
      v173 = v153;
      *(_DWORD *)v117 = 136315906;
      v168 = v112;
      v169 = v113;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      v118 = sub_2511C94C0();
      v168 = sub_251140E4C(v118, v119, (uint64_t *)&v173);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v117 + 12) = 2080;
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(v155 + 40))(&v168, v8);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v115, v8);
      v120 = v171;
      if (v171)
      {
        v121 = v170;
      }
      else
      {
        v121 = v168;
        v120 = swift_bridgeObjectRetain();
      }
      v129 = v163;
      swift_bridgeObjectRelease();
      v168 = sub_251140E4C(v121, v120, (uint64_t *)&v173);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v117 + 22) = 2080;
      v130 = 0x657669746341;
      v131 = 0xE500000000000000;
      if (v93 == 1) {
        v131 = 0xE600000000000000;
      }
      else {
        v130 = 0x6465646E45;
      }
      if (v93) {
        v132 = v130;
      }
      else {
        v132 = 0x7261745320746F4ELL;
      }
      if (v93) {
        v133 = v131;
      }
      else {
        v133 = 0xEB00000000646574;
      }
      v168 = sub_251140E4C(v132, v133, (uint64_t *)&v173);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v117 + 32) = 2080;
      if (v129) {
        v134 = 0x646573756150;
      }
      else {
        v134 = 0x676E696E6E7552;
      }
      if (v129) {
        v135 = 0xE600000000000000;
      }
      else {
        v135 = 0xE700000000000000;
      }
      v168 = sub_251140E4C(v134, v135, (uint64_t *)&v173);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      v136 = v154;
      _os_log_impl(&dword_25112A000, v154, (os_log_type_t)v166, "[%s]: Received update from %s; ignoring while (%s, %s).",
        (uint8_t *)v117,
        0x2Au);
      v137 = v153;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v137, -1, -1);
      MEMORY[0x253397D40](v117, -1, -1);
      swift_release();

      swift_release();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v167, v158);
      goto LABEL_58;
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v115, v8);
    swift_release();
    swift_release_n();

LABEL_34:
    swift_release();
    (*(void (**)(os_log_t, uint64_t))(v159 + 8))(v46, v158);
LABEL_58:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v157, v165);
    v139 = v156;
    *v156 = 0;
    v139[1] = 0;
    return result;
  }
  v94 = (char *)sub_2511373E4(v62);
  v95 = (uint64_t)a4[2].isa;
  v96 = (uint64_t)a4[3].isa;
  v97 = swift_getObjectType();
  v98 = *(void (**)(uint64_t, uint64_t))(v96 + 40);
  v99 = v154;
  v163 = v96;
  v98(v97, v96);
  v100 = v92;
  v101 = v151;
  (*(void (**)(char *, os_log_t, uint64_t))(v92 + 16))(v151, v166, v8);
  swift_retain_n();
  v167 = v94;
  swift_bridgeObjectRetain_n();
  v102 = sub_2511C9280();
  v103 = sub_2511C9770();
  if (os_log_type_enabled(v102, (os_log_type_t)v103))
  {
    LODWORD(v152) = v103;
    v166 = v102;
    v104 = swift_slowAlloc();
    v105 = v8;
    v106 = a4;
    v107 = (os_log_t)swift_slowAlloc();
    v173 = v107;
    *(_DWORD *)v104 = 136315650;
    v168 = v95;
    v169 = v163;
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_unknownObjectRetain();
    v108 = sub_2511C94C0();
    v168 = sub_251140E4C(v108, v109, (uint64_t *)&v173);
    sub_2511C98A0();
    v153 = v106;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v104 + 12) = 2080;
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v155 + 40))(&v168, v105);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v105);
    v110 = v171;
    if (v171)
    {
      v111 = v170;
    }
    else
    {
      v111 = v168;
      v110 = swift_bridgeObjectRetain();
    }
    v122 = v167;
    swift_bridgeObjectRelease();
    v168 = sub_251140E4C(v111, v110, (uint64_t *)&v173);
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v104 + 22) = 2048;
    v124 = *((void *)v122 + 2);
    swift_bridgeObjectRelease();
    v168 = v124;
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    v125 = v166;
    _os_log_impl(&dword_25112A000, v166, (os_log_type_t)v152, "[%s]: Received update from %s; enqueuing %ld work sets.",
      (uint8_t *)v104,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v107, -1, -1);
    MEMORY[0x253397D40](v104, -1, -1);
    swift_release();

    swift_release();
    (*(void (**)(os_log_t, uint64_t))(v159 + 8))(v154, v158);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v157, v165);
    a4 = v153;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v8);
    swift_release();
    swift_release_n();

    swift_release();
    v122 = v167;
    swift_bridgeObjectRelease_n();
    (*(void (**)(os_log_t, uint64_t))(v159 + 8))(v99, v158);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v157, v165);
  }
  v126 = swift_allocObject();
  *(void *)(v126 + 16) = a4;
  *(void *)(v126 + 24) = v122;
  v127 = v156;
  *v156 = sub_251135B1C;
  v127[1] = v126;
  return swift_retain();
}

uint64_t sub_25113735C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void *initializeWithCopy for ExecutorIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2511373E4(uint64_t a1)
{
  uint64_t v139 = *MEMORY[0x263EF8340];
  uint64_t v1 = (void *)MEMORY[0x263F8EE78];
  uint64_t v115 = *(void *)(a1 + 16);
  if (!v115) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (*(unsigned char *)(a1 + 34) == 1)
  {
    *(void *)(a1 + 16) = 0;
    uint64_t v3 = *(void *)(a1 + 8);
    if (v3)
    {
LABEL_4:
      uint64_t v4 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
      uint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = v4;
      uint64_t v7 = 0;
      uint64_t v8 = sub_25112E580(v5, v6);
      type metadata accessor for InputSignalAnchorSet();
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      uint64_t v10 = swift_retain();
      if (_s19HealthOrchestration20InputSignalAnchorSetC2eeoiySbAC_ACtFZ_0(v10, v9))
      {
        swift_release();
        swift_release();
        swift_release();
        return (void *)MEMORY[0x263F8EE78];
      }
      swift_release();
      goto LABEL_10;
    }
  }
  else
  {
    swift_retain();
    uint64_t v3 = *(void *)(a1 + 8);
    if (v3) {
      goto LABEL_4;
    }
  }
  uint64_t v9 = v115;
  swift_retain();
  uint64_t v7 = 0;
LABEL_10:
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v9;
  CFAbsoluteTimeGetCurrent();
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v93 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v97 = v14 & v12;
  int64_t v94 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v95 = v11;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  v106 = v1;
  uint64_t v105 = v9;
  while (1)
  {
    if (v97)
    {
      unint64_t v16 = __clz(__rbit64(v97));
      v97 &= v97 - 1;
      int64_t v96 = v15;
      unint64_t v17 = v16 | (v15 << 6);
    }
    else
    {
      BOOL v18 = __OFADD__(v15, 1);
      int64_t v19 = v15 + 1;
      if (v18) {
        goto LABEL_77;
      }
      if (v19 >= v94) {
        goto LABEL_73;
      }
      unint64_t v20 = *(void *)(v93 + 8 * v19);
      if (!v20)
      {
        int64_t v21 = v19 + 1;
        if (v19 + 1 >= v94) {
          goto LABEL_73;
        }
        unint64_t v20 = *(void *)(v93 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v19 + 2;
          if (v19 + 2 >= v94) {
            goto LABEL_73;
          }
          unint64_t v20 = *(void *)(v93 + 8 * v21);
          if (!v20)
          {
            int64_t v21 = v19 + 3;
            if (v19 + 3 >= v94) {
              goto LABEL_73;
            }
            unint64_t v20 = *(void *)(v93 + 8 * v21);
            if (!v20)
            {
              while (1)
              {
                int64_t v19 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_78;
                }
                if (v19 >= v94) {
                  break;
                }
                unint64_t v20 = *(void *)(v93 + 8 * v19);
                ++v21;
                if (v20) {
                  goto LABEL_26;
                }
              }
LABEL_73:
              swift_release();
              swift_release();
              swift_release();
              return v106;
            }
          }
        }
        int64_t v19 = v21;
      }
LABEL_26:
      unint64_t v97 = (v20 - 1) & v20;
      int64_t v96 = v19;
      unint64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
    }
    uint64_t v22 = *(void *)(v95 + 56);
    uint64_t v23 = (_OWORD *)(*(void *)(v95 + 48) + 48 * v17);
    long long v25 = v23[1];
    long long v24 = v23[2];
    v138[0] = *v23;
    v138[1] = v25;
    v138[2] = v24;
    unint64_t v26 = *(void *)(v22 + 8 * v17);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_25113822C((uint64_t)v138);
      uint64_t v27 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      sub_25113822C((uint64_t)v138);
    }
    unint64_t v107 = v26;
    if (v27) {
      break;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_251138278((uint64_t)v138);
    int64_t v15 = v96;
  }
  unint64_t v28 = 0;
  unint64_t v117 = v107 & 0xC000000000000001;
  uint64_t v101 = v107 & 0xFFFFFFFFFFFFFF8;
  unint64_t v100 = v107 + 32;
  uint64_t v116 = v27;
  while (1)
  {
    if (v117)
    {
      uint64_t v29 = MEMORY[0x2533971C0](v28, v107);
      BOOL v18 = __OFADD__(v28, 1);
      unint64_t v30 = v28 + 1;
      if (v18) {
        goto LABEL_75;
      }
    }
    else
    {
      if (v28 >= *(void *)(v101 + 16)) {
        goto LABEL_76;
      }
      uint64_t v29 = swift_retain();
      BOOL v18 = __OFADD__(v28, 1);
      unint64_t v30 = v28 + 1;
      if (v18)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
      }
    }
    unint64_t v122 = v30;
    uint64_t v123 = MEMORY[0x270FA5388](v29);
    uint64_t v32 = (uint64_t *)&v31[4];
    uint64_t v33 = v31 + 16;
    os_unfair_lock_lock(v31 + 16);
    sub_2511381A0(v32, &v126);
    os_unfair_lock_unlock(v33);
    unint64_t v34 = v126;
    uint64_t v35 = v129;
    uint64_t v36 = v130;
    uint64_t v37 = v132;
    uint64_t v38 = v134;
    if ((void)v126)
    {
      if ((void)v126 != 1 && (void)v126 != 2)
      {
        uint64_t v114 = v7;
        uint64_t v119 = v128;
        uint64_t v113 = v127;
        uint64_t v118 = *((void *)&v126 + 1);
        uint64_t v112 = v133;
        uint64_t v53 = v136;
        uint64_t v54 = v137;
        uint64_t v55 = v131;
        uint64_t v56 = v135;
        uint64_t v57 = swift_allocObject();
        swift_weakInit();
        unint64_t v58 = (void *)swift_allocObject();
        uint64_t v59 = v38;
        uint64_t v60 = v58;
        v58[2] = v57;
        v58[3] = v34;
        uint64_t v61 = v113;
        v58[4] = v118;
        v58[5] = v61;
        v58[6] = v119;
        v58[7] = v35;
        v58[8] = v36;
        v58[9] = v55;
        uint64_t v62 = v112;
        v58[10] = v37;
        v58[11] = v62;
        v58[12] = v59;
        v58[13] = v56;
        v58[14] = v53;
        v58[15] = v54;
        uint64_t v108 = v54;
        uint64_t v109 = v53;
        uint64_t v110 = v56;
        uint64_t v111 = v59;
        uint64_t v63 = v62;
        uint64_t v64 = v61;
        sub_251145420(v34);
        uint64_t v120 = v55;
        swift_bridgeObjectRetain();
        uint64_t v121 = v37;
        swift_retain();
        uint64_t v65 = v63;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v66 = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v106 = sub_251139B58(0, v106[2] + 1, 1, v106);
        }
        unint64_t v68 = v106[2];
        unint64_t v67 = v106[3];
        if (v68 >= v67 >> 1) {
          v106 = sub_251139B58((void *)(v67 > 1), v68 + 1, 1, v106);
        }
        v69 = v106;
        v106[2] = v68 + 1;
        v70 = &v69[13 * v68];
        uint64_t v71 = v118;
        v70[4] = v34;
        v70[5] = v71;
        uint64_t v72 = v119;
        v70[6] = v66;
        v70[7] = v72;
        v70[8] = v35;
        v70[9] = v36;
        uint64_t v73 = v121;
        v70[10] = v120;
        v70[11] = v73;
        uint64_t v74 = v111;
        v70[12] = v65;
        v70[13] = v74;
        v70[14] = v110;
        v70[15] = sub_251135578;
        v70[16] = v60;
        swift_release();
        sub_2511454B4(v34);
        uint64_t v7 = v114;
        unint64_t v28 = v122;
        uint64_t v9 = v105;
        goto LABEL_34;
      }
      goto LABEL_44;
    }
    uint64_t v108 = v137;
    uint64_t v109 = v136;
    uint64_t v110 = v135;
    uint64_t v111 = v134;
    uint64_t v112 = v133;
    uint64_t v118 = *((void *)&v126 + 1);
    uint64_t v113 = v127;
    uint64_t v119 = v128;
    uint64_t v102 = v129;
    uint64_t v103 = v130;
    uint64_t v121 = v132;
    uint64_t v114 = v7;
    uint64_t v39 = *(void **)(v123 + 96);
    uint64_t v40 = v39[7];
    int64_t v41 = *(void *)(v40 + 16);
    uint64_t v120 = v131;
    if (v41)
    {
      uint64_t v124 = MEMORY[0x263F8EE78];
      swift_retain();
      v99 = v39;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_251130704(0, v41, 0);
      uint64_t v98 = v40;
      uint64_t v42 = v40 + 32;
      uint64_t v43 = v124;
      do
      {
        sub_25112FD4C(v42, (uint64_t)&v126);
        uint64_t v44 = v128;
        uint64_t v45 = v129;
        __swift_project_boxed_opaque_existential_1(&v126, v128);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v45 + 16))(v125, v44, v45);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
        uint64_t v46 = v125[0];
        uint64_t v47 = v125[1];
        uint64_t v48 = v125[2];
        uint64_t v49 = v125[3];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251130704(0, *(void *)(v43 + 16) + 1, 1);
          uint64_t v43 = v124;
        }
        unint64_t v51 = *(void *)(v43 + 16);
        unint64_t v50 = *(void *)(v43 + 24);
        if (v51 >= v50 >> 1)
        {
          sub_251130704(v50 > 1, v51 + 1, 1);
          uint64_t v43 = v124;
        }
        *(void *)(v43 + 16) = v51 + 1;
        uint64_t v52 = (void *)(v43 + 32 * v51);
        v52[4] = v46;
        v52[5] = v47;
        v52[6] = v48;
        v52[7] = v49;
        v42 += 40;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      uint64_t v9 = v105;
      uint64_t v39 = v99;
    }
    else
    {
      swift_retain();
      swift_retain();
      uint64_t v43 = MEMORY[0x263F8EE78];
    }
    uint64_t v75 = *(void *)(v9 + 16);
    char v76 = *(unsigned char *)(v75 + 32);
    unsigned int v77 = v76 & 0x3F;
    unint64_t v78 = (unint64_t)((1 << v76) + 63) >> 6;
    size_t v79 = 8 * v78;
    swift_bridgeObjectRetain_n();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v77 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v39 = (void *)swift_slowAlloc();
    bzero(v39, v79);
    swift_bridgeObjectRetain();
    uint64_t v7 = v114;
    uint64_t v83 = sub_25112FA78((uint64_t)v39, v78, v75, v43);
    if (v7) {
      goto LABEL_80;
    }
    uint64_t v82 = v83;
    swift_bridgeObjectRelease();
    MEMORY[0x253397D40](v39, -1, -1);
LABEL_65:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    type metadata accessor for InputSignalAnchorSet();
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v82;
    uint64_t v85 = *(void *)(v104 + 32);
    if (*(void *)(v85 + 16))
    {
      sub_25113822C((uint64_t)v138);
      unint64_t v86 = sub_251167268((uint64_t)v138);
      if (v87)
      {
        uint64_t v88 = *(void *)(*(void *)(v85 + 56) + 16 * v86 + 8);
        swift_unknownObjectRetain();
        sub_251138278((uint64_t)v138);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v90 = *(void *)(v123 + 96);
        v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 64);
        swift_retain();
        v91(v84, v90, ObjectType, v88);
        swift_release();
        swift_unknownObjectRelease();
        sub_2511454B4(0);
        swift_release();
        uint64_t v9 = v105;
LABEL_44:
        swift_release();
        goto LABEL_33;
      }
      sub_251138278((uint64_t)v138);
    }
    swift_release();
    swift_release();
    sub_2511454B4(0);
LABEL_33:
    unint64_t v28 = v122;
LABEL_34:
    if (v28 == v116) {
      goto LABEL_13;
    }
  }
  MEMORY[0x270FA5388](isStackAllocationSafe);
  bzero((char *)&v93 - ((v79 + 15) & 0x3FFFFFFFFFFFFFF0), v79);
  swift_bridgeObjectRetain();
  uint64_t v7 = v114;
  uint64_t v81 = sub_25112FA78((uint64_t)&v93 - ((v79 + 15) & 0x3FFFFFFFFFFFFFF0), v78, v75, v43);
  if (!v7)
  {
    uint64_t v82 = v81;
    swift_bridgeObjectRelease();
    uint64_t v9 = v105;
    goto LABEL_65;
  }
  swift_bridgeObjectRelease_n();
  swift_willThrow();
  __break(1u);
LABEL_80:
  swift_bridgeObjectRelease_n();
  uint64_t result = (void *)MEMORY[0x253397D40](v39, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_2511381A0@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2511381FC(a1, *(void *)(v2 + 32), a2, *(double *)(v2 + 24));
}

uint64_t sub_2511381C4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_25112DED0(a1, *(void *)(v2 + 32), a2, *(double *)(v2 + 24));
}

uint64_t sub_2511381FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>, double a4@<D0>)
{
  return sub_25112DED0(a1, a2, a3, a4);
}

uint64_t sub_25113822C(uint64_t a1)
{
  return a1;
}

uint64_t sub_251138278(uint64_t a1)
{
  return a1;
}

unint64_t sub_2511382C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251130684();
  uint64_t v2 = sub_2511C9AF0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2511555A4(v6, (uint64_t)&v17);
    uint64_t v7 = v17;
    uint64_t v8 = v18;
    uint64_t v9 = v19;
    uint64_t v10 = v20;
    unint64_t result = sub_25112F2DC(v17, v18, v19, v20);
    if (v12) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v3[6] + 32 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    void v13[2] = v9;
    v13[3] = v10;
    unint64_t result = sub_25112F14C(&v21, v3[7] + 40 * result);
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v3[2] = v16;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25113840C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  void (*v15)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void v28[4];

  unint64_t v26 = *a2;
  long long v25 = *(void *)(a3 - 8);
  uint64_t v7 = v25;
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v22 - v11;
  uint64_t v13 = *(void (**)(char *))(v7 + 16);
  v13((char *)&v22 - v11);
  uint64_t v14 = a2[2];
  BOOL v15 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48);
  swift_bridgeObjectRetain();
  v15(v28, a3, a4);
  uint64_t v16 = v28[1];
  uint64_t v17 = v28[3];
  uint64_t v23 = v28[2];
  long long v24 = v28[0];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = v14;
  ((void (*)(char *, char *, uint64_t))v13)(v10, v12, a3);
  sub_251138704((uint64_t)v10, v24, v16, v23, v17, isUniquelyReferenced_nonNull_native, &v27, a3, a4);
  uint64_t v19 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, a3);
  return v20;
}

void *sub_251138608(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 32) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 32) & ~v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v9, v10, v6);
  return a1;
}

void *sub_2511386B0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t sub_251138704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v37 = a8;
  uint64_t v38 = a9;
  uint64_t v35 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  uint64_t v18 = (void *)*a7;
  unint64_t v20 = sub_25112F2DC(a2, a3, a4, a5);
  uint64_t v21 = v18[2];
  BOOL v22 = (v19 & 1) == 0;
  uint64_t v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v24 = v19;
  uint64_t v25 = v18[3];
  if (v25 >= v23 && (a6 & 1) != 0)
  {
LABEL_7:
    unint64_t v26 = (void *)*a7;
    if (v24)
    {
LABEL_8:
      uint64_t v27 = v26[7] + 40 * v20;
      __swift_destroy_boxed_opaque_existential_1(v27);
      return sub_25112F14C(&v36, v27);
    }
    goto LABEL_11;
  }
  if (v25 >= v23 && (a6 & 1) == 0)
  {
    sub_251131420();
    goto LABEL_7;
  }
  sub_251131918(v23, a6 & 1);
  unint64_t v29 = sub_25112F2DC(a2, a3, a4, a5);
  if ((v24 & 1) != (v30 & 1))
  {
LABEL_14:
    uint64_t result = sub_2511C9CD0();
    __break(1u);
    return result;
  }
  unint64_t v20 = v29;
  unint64_t v26 = (void *)*a7;
  if (v24) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v36, v37);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v35 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v34 + 16))(v33);
  sub_2511389BC(v20, a2, a3, a4, a5, (uint64_t)v33, v26, a8, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2511389BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v24 = a8;
  uint64_t v25 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a6, a8);
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v18 = (void *)(a7[6] + 32 * a1);
  *uint64_t v18 = a2;
  v18[1] = a3;
  v18[2] = a4;
  void v18[3] = a5;
  uint64_t result = sub_25112F14C(&v23, a7[7] + 40 * a1);
  uint64_t v20 = a7[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    a7[2] = v22;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t InputSignalAnchorSet.anchor<A>(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 16);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v13, a1, a2);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_25112F2DC(v13[0], v13[1], v13[2], v13[3]), (v7 & 1) != 0))
  {
    sub_25112FD4C(*(void *)(v5 + 56) + 40 * v6, (uint64_t)v11);
  }
  else
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251138C78(0, (unint64_t *)&qword_26B217A30, qword_26B216650);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a3, v9 ^ 1u, 1, AssociatedTypeWitness);
}

void sub_251138C78(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_25112F678(255, a3);
    unint64_t v4 = sub_2511C9890();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_251138CD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v21)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  BOOL v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  os_log_t v80;
  uint64_t v81;
  uint64_t v82;
  void v83[2];
  long long v84;
  long long v85;
  char *v86;
  uint64_t v87;
  os_log_t v88;
  void (*v89)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  int v94;
  void (**v95)(char *, uint64_t);
  void (**v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (**v99)(char *, uint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  os_log_t v114;
  void v115[3];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t vars8;

  uint64_t v93 = a4;
  uint64_t v104 = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  v92 = (char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v86 = (char *)v83 - v10;
  uint64_t v103 = sub_2511C92A0();
  uint64_t v11 = *(void *)(v103 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v103);
  unint64_t v100 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v91 = (char *)v83 - v14;
  uint64_t v16 = a2[1];
  uint64_t result = a2[2];
  if (v16)
  {
    if (!result)
    {
      unint64_t v17 = sub_2511382C8(MEMORY[0x263F8EE78]);
      type metadata accessor for InputSignalAnchorSet();
      *(void *)(swift_allocObject() + 16) = v17;
    }
    uint64_t v102 = v4;
    uint64_t v18 = *(void *)(v16 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_25112E580(v19, v18);
    unint64_t v107 = 0;
    type metadata accessor for InputSignalAnchorSet();
    v106 = swift_allocObject();
    *(void *)(v106 + 16) = v20;
    swift_release();
  }
  else
  {
    if (!result) {
      return result;
    }
    uint64_t v102 = v4;
    unint64_t v107 = 0;
    v106 = result;
    swift_retain();
  }
  BOOL v21 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v93 + 48);
  uint64_t v101 = a3;
  uint64_t v90 = v93 + 48;
  v89 = v21;
  ((void (*)(void *__return_ptr, uint64_t))v21)(v115, a3);
  uint64_t v22 = v115[1];
  long long v23 = *a2;
  uint64_t v24 = *(void *)(*a2 + 16);
  if (v24)
  {
    v83[0] = v116;
    uint64_t v108 = v115[0];
    uint64_t v109 = v23 + 32;
    v99 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    int64_t v96 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v95 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v105 = &v111;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    *(void *)&unint64_t v26 = 136315650;
    uint64_t v84 = v26;
    v83[1] = MEMORY[0x263F8EE58] + 8;
    *(void *)&unint64_t v26 = 136315906;
    uint64_t v85 = v26;
    uint64_t v98 = v23;
    unint64_t v97 = v24;
    while (1)
    {
      if (v25 >= *(void *)(v23 + 16))
      {
        __break(1u);
        return result;
      }
      sub_251139AA0(v109 + 48 * v25, (uint64_t)&v118);
      uint64_t v27 = v121;
      if (*(void *)(v121 + 16))
      {
        sub_2511C9D40();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v28 = v108;
        sub_2511C94F0();
        swift_bridgeObjectRelease();
        unint64_t v29 = sub_2511C9D80();
        char v30 = -1 << *(unsigned char *)(v27 + 32);
        uint64_t v31 = v29 & ~v30;
        if ((*(void *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
        {
          uint64_t v32 = *(void *)(v27 + 48);
          uint64_t v33 = (void *)(v32 + 32 * v31);
          uint64_t v34 = *v33 == v28 && v33[1] == v22;
          if (v34 || (sub_2511C9CA0() & 1) != 0)
          {
LABEL_20:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            uint64_t v35 = v106;
            swift_retain();
            long long v36 = v107;
            uint64_t v37 = sub_25118B0E4(v27, v35);
            unint64_t v107 = v36;
            swift_release();
            if (*(void *)(v37 + 16))
            {
              uint64_t v39 = *(void *)(v102 + 16);
              uint64_t v38 = *(void *)(v102 + 24);
              uint64_t ObjectType = swift_getObjectType();
              int64_t v41 = v100;
              (*(void (**)(uint64_t, uint64_t))(v38 + 40))(ObjectType, v38);
              uint64_t v42 = v92;
              uint64_t v43 = v101;
              (*v99)(v92, v104, v101);
              sub_251139AA0((uint64_t)&v118, (uint64_t)v115);
              swift_retain_n();
              swift_retain();
              uint64_t v44 = sub_2511C9280();
              int64_t v94 = sub_2511C9770();
              if (os_log_type_enabled(v44, (os_log_type_t)v94))
              {
                uint64_t v88 = v44;
                uint64_t v45 = swift_slowAlloc();
                char v87 = swift_slowAlloc();
                uint64_t v114 = (os_log_t)v87;
                *(_DWORD *)uint64_t v45 = v85;
                uint64_t v110 = v39;
                uint64_t v111 = v38;
                sub_251131944(0, (unint64_t *)&qword_26B216848);
                swift_unknownObjectRetain();
                uint64_t v46 = sub_2511C94C0();
                uint64_t v110 = sub_251140E4C(v46, v47, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v45 + 12) = 2080;
                v89(&v110, v43, v93);
                (*v96)(v42, v43);
                uint64_t v48 = v113;
                if (v113)
                {
                  uint64_t v49 = v112;
                }
                else
                {
                  uint64_t v49 = v110;
                  uint64_t v48 = swift_bridgeObjectRetain();
                }
                uint64_t v66 = v94;
                unint64_t v67 = v87;
                swift_bridgeObjectRelease();
                uint64_t v110 = sub_251140E4C(v49, v48, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v45 + 22) = 2080;
                unint64_t v68 = v116;
                v69 = v117;
                __swift_project_boxed_opaque_existential_1(v115, v116);
                (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v69 + 40))(&v110, v68, v69);
                v70 = v113;
                if (v113)
                {
                  uint64_t v71 = v112;
                }
                else
                {
                  uint64_t v71 = v110;
                  v70 = swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRelease();
                uint64_t v110 = sub_251140E4C(v71, v70, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_bridgeObjectRelease();
                sub_251139A70((uint64_t)v115);
                *(_WORD *)(v45 + 32) = 2080;
                sub_251132188();
                swift_retain();
                uint64_t v72 = sub_2511C96B0();
                uint64_t v74 = v73;
                swift_release();
                uint64_t v110 = sub_251140E4C(v72, v74, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_release_n();
                swift_bridgeObjectRelease();
                uint64_t v75 = v88;
                _os_log_impl(&dword_25112A000, v88, v66, "[%s]: Queuing update for dependent input signal %s -> %s; awaiting anchors from %s",
                  (uint8_t *)v45,
                  0x2Au);
                swift_arrayDestroy();
                MEMORY[0x253397D40](v67, -1, -1);
                MEMORY[0x253397D40](v45, -1, -1);

                (*v95)(v100, v103);
              }
              else
              {
                (*v96)(v42, v43);
                swift_release_n();
                sub_251139A70((uint64_t)v115);

                swift_release_n();
                (*v95)(v41, v103);
              }
              long long v23 = v98;
              uint64_t v24 = v97;
            }
            else
            {
              swift_release();
              unint64_t v51 = *(void *)(v102 + 16);
              unint64_t v50 = *(void *)(v102 + 24);
              uint64_t v52 = swift_getObjectType();
              uint64_t v53 = v91;
              (*(void (**)(uint64_t, uint64_t))(v50 + 40))(v52, v50);
              uint64_t v54 = v86;
              uint64_t v55 = v101;
              (*v99)(v86, v104, v101);
              sub_251139AA0((uint64_t)&v118, (uint64_t)v115);
              swift_retain_n();
              uint64_t v56 = sub_2511C9280();
              uint64_t v57 = sub_2511C9770();
              if (os_log_type_enabled(v56, (os_log_type_t)v57))
              {
                int64_t v94 = v57;
                unint64_t v58 = swift_slowAlloc();
                uint64_t v88 = (os_log_t)swift_slowAlloc();
                uint64_t v114 = v88;
                *(_DWORD *)unint64_t v58 = v84;
                uint64_t v110 = v51;
                uint64_t v111 = v50;
                sub_251131944(0, (unint64_t *)&qword_26B216848);
                swift_unknownObjectRetain();
                uint64_t v59 = sub_2511C94C0();
                uint64_t v110 = sub_251140E4C(v59, v60, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v58 + 12) = 2080;
                v89(&v110, v55, v93);
                (*v96)(v54, v55);
                uint64_t v61 = v113;
                if (v113)
                {
                  uint64_t v62 = v112;
                }
                else
                {
                  uint64_t v62 = v110;
                  uint64_t v61 = swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRelease();
                uint64_t v110 = sub_251140E4C(v62, v61, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v58 + 22) = 2080;
                char v76 = v116;
                unsigned int v77 = v117;
                __swift_project_boxed_opaque_existential_1(v115, v116);
                (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v77 + 40))(&v110, v76, v77);
                unint64_t v78 = v113;
                if (v113)
                {
                  size_t v79 = v112;
                }
                else
                {
                  size_t v79 = v110;
                  unint64_t v78 = swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRelease();
                uint64_t v110 = sub_251140E4C(v79, v78, (uint64_t *)&v114);
                sub_2511C98A0();
                swift_bridgeObjectRelease();
                sub_251139A70((uint64_t)v115);
                _os_log_impl(&dword_25112A000, v56, (os_log_type_t)v94, "[%s]: Updating dependent input signal %s -> %s.", (uint8_t *)v58, 0x20u);
                v80 = v88;
                swift_arrayDestroy();
                MEMORY[0x253397D40](v80, -1, -1);
                MEMORY[0x253397D40](v58, -1, -1);

                (*v95)(v91, v103);
              }
              else
              {
                (*v96)(v54, v55);
                swift_release_n();
                sub_251139A70((uint64_t)v115);

                (*v95)(v53, v103);
              }
              long long v23 = v98;
              uint64_t v24 = v97;
              uint64_t v81 = v119;
              uint64_t v82 = v120;
              __swift_project_boxed_opaque_existential_1(&v118, v119);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 80))(v106, v81, v82);
            }
            goto LABEL_11;
          }
          uint64_t v63 = ~v30;
          while (1)
          {
            uint64_t v31 = (v31 + 1) & v63;
            if (((*(void *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
              break;
            }
            uint64_t v64 = (void *)(v32 + 32 * v31);
            uint64_t v65 = *v64 == v108 && v64[1] == v22;
            if (v65 || (sub_2511C9CA0() & 1) != 0) {
              goto LABEL_20;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_11:
      ++v25;
      uint64_t result = sub_251139A70((uint64_t)&v118);
      if (v25 == v24)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_251139A70(uint64_t a1)
{
  return a1;
}

uint64_t sub_251139AA0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t SecureCodingValueAnchor.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *sub_251139B58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_25113B21C(0, &qword_26B218148);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251139C90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_251139C90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

Swift::Void __swiftcall WorkQueue.enqueue(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = (uint64_t *)&v2[4];
  uint64_t v4 = v2 + 19;
  os_unfair_lock_lock(v2 + 19);
  sub_251139E2C(v3, &v9);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = *(void *)(v9 + 16);
  if (v5)
  {
    uint64_t v6 = v9 + 40;
    do
    {
      uint64_t v7 = *(void (**)(uint64_t))(v6 - 8);
      uint64_t v8 = swift_retain();
      v7(v8);
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_251139E2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251139E48(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251139E48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(a2 + v6 + 40);
      uint64_t v9 = *(void *)(a2 + v6 + 48);
      uint64_t v8 = *(void *)(a2 + v6 + 56);
      uint64_t v11 = *(void *)(a2 + v6 + 64);
      uint64_t v10 = *(void *)(a2 + v6 + 72);
      uint64_t v13 = *(void *)(a2 + v6 + 80);
      uint64_t v12 = *(void *)(a2 + v6 + 88);
      uint64_t v14 = *(void *)(a2 + v6 + 112);
      uint64_t v15 = *(void *)(a2 + v6 + 120);
      uint64_t v16 = *(void *)(a2 + v6 + 128);
      v21[0] = *(void *)(a2 + v6 + 32);
      v21[1] = v7;
      uint64_t v26 = v21[0];
      void v21[2] = v9;
      v21[3] = v8;
      void v21[4] = v11;
      v21[5] = v10;
      v21[6] = v13;
      v21[7] = v12;
      long long v22 = *(_OWORD *)(a2 + v6 + 96);
      uint64_t v23 = v14;
      uint64_t v24 = v15;
      uint64_t v25 = v16;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251139FB4((uint64_t)v21, a1);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 104;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v4 = a3;
    uint64_t v3 = a1;
  }
  uint64_t result = sub_2511464D4(v3);
  *uint64_t v4 = result;
  return result;
}

uint64_t sub_251139FB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  long long v5 = *(_OWORD *)(a1 + 80);
  long long v29 = *(_OWORD *)(a1 + 64);
  long long v30 = v5;
  uint64_t v31 = *(void *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v28[2] = *(_OWORD *)(a1 + 32);
  v28[3] = v7;
  uint64_t v8 = sub_251144678(a2);
  uint64_t v9 = *(os_unfair_lock_s **)(*(void *)(v2 + 24) + 16);
  uint64_t v10 = v9 + 4;
  uint64_t v11 = v9 + 10;
  os_unfair_lock_lock(v9 + 10);
  sub_251144C54(v10, v25);
  os_unfair_lock_unlock(v11);
  uint64_t v12 = *(void *)&v28[0];
  swift_retain();
  sub_25113A1A8((uint64_t)v28);
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_25113C7F8(v13, v3, (uint64_t)v28);
  sub_25113D6BC((uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = *(os_unfair_lock_s **)(v8 + 16);
  uint64_t v15 = (uint64_t)&v14[4];
  uint64_t v16 = v14 + 11;
  os_unfair_lock_lock(v14 + 11);
  sub_25113A5C4(v15);
  os_unfair_lock_unlock(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25113D3C0((uint64_t)(a2 + 2), (uint64_t)&v23);
  if (v24)
  {
    sub_25112F14C(&v23, (uint64_t)v25);
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    uint64_t v19 = *(void *)(v12 + 16);
    long long v20 = v29;
    uint64_t v21 = sub_25113A230(a2);
    (*(void (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))(v18 + 8))(v19, v20, *((void *)&v20 + 1), v21, v17, v18);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    swift_release();
    return sub_25113DDF8((uint64_t)&v23);
  }
}

uint64_t sub_25113A1A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25113A230(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    uint64_t result = sub_25113A424(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    long long v5 = v18;
    while (v2 != v4)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x2533971C0](v4, v1);
      }
      else
      {
        uint64_t v6 = *(void *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      long long v7 = *(os_unfair_lock_s **)(v6 + 16);
      uint64_t v8 = (uint64_t)&v7[4];
      uint64_t v9 = v7 + 11;
      os_unfair_lock_lock(v7 + 11);
      sub_25113A414(v8, &v17);
      os_unfair_lock_unlock(v9);
      uint64_t v10 = v17;
      swift_release();
      uint64_t v18 = v5;
      unint64_t v12 = v5[2];
      unint64_t v11 = v5[3];
      if (v12 >= v11 >> 1)
      {
        sub_25113A424(v11 > 1, v12 + 1, 1);
        long long v5 = v18;
      }
      ++v4;
      v5[2] = v12 + 1;
      v5[v12 + 4] = v10;
      if (v2 == v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v5[2];
        if (v13) {
          goto LABEL_13;
        }
LABEL_21:
        uint64_t v1 = 0;
LABEL_22:
        swift_bridgeObjectRelease();
        return v1;
      }
    }
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain_n();
      uint64_t v2 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (v2) {
        break;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      long long v5 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v13) {
        goto LABEL_21;
      }
LABEL_13:
      uint64_t v1 = 0;
      uint64_t v14 = v5 + 4;
      while (1)
      {
        uint64_t v15 = *v14++;
        BOOL v16 = __OFADD__(v1, v15);
        v1 += v15;
        if (v16) {
          break;
        }
        if (!--v13) {
          goto LABEL_22;
        }
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25113A414@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)(result + 8) + 16);
  return result;
}

uint64_t sub_25113A424(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25113A444(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25113A444(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B216828, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25113A5C4(uint64_t a1)
{
  return sub_25113A5E0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_25113A5E0(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(unsigned char *)(a1 + 25))
  {
    char v3 = 2;
LABEL_5:
    sub_2511B3090();
    swift_allocError();
    *long long v5 = v3;
    return swift_willThrow();
  }
  if (*(void *)a1)
  {
    char v3 = 0;
    goto LABEL_5;
  }
  char v9 = *(unsigned char *)(a1 + 24);
  swift_bridgeObjectRetain();
  v10._rawValue = a3;
  uint64_t v11 = sub_25113A94C(a2, v10, v9);
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)MEMORY[0x263F8EE78];
  uint64_t v12 = (void **)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_25113BD08((uint64_t *)(a1 + 8), a2, &v21);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(*(void *)(a1 + 8) + 16);
  if (v14 < v13)
  {
    __break(1u);
  }
  else
  {
    sub_25113A7D4(v13, v14);
    uint64_t v15 = v21[2];
    if (v15)
    {
      BOOL v16 = v21 + 4;
      swift_bridgeObjectRetain();
      do
      {
        sub_251146D6C((uint64_t)v16, (uint64_t)v19);
        uint64_t v17 = (void (*)(void *, uint64_t))v20[15];
        swift_retain();
        v17(v20, 1);
        swift_release();
        sub_251146EDC((uint64_t)v19);
        v16 += 27;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = sub_25113AD3C(v11, (uint64_t)&v21);
    swift_bridgeObjectRelease();
    sub_25113AE94(v18);
    sub_25113B264(v12, sub_25113B2DC);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25113A7D4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_25113AFF0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    BOOL v16 = (char *)&v4[27 * a2 + 4];
    if (a1 != a2 || &v4[27 * a1 + 4] >= (void *)&v16[216 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[27 * a1 + 4], v16, 216 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25113A94C(uint64_t a1, Swift::OpaquePointer a2, char a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_25113C61C(0, v3, 0);
    uint64_t v8 = 0;
    uint64_t v39 = a1 + 32;
    int64_t v38 = v3;
    uint64_t v37 = a3;
    do
    {
      int64_t v9 = (void *)(v39 + 136 * v8);
      sub_251145778((uint64_t)v9, (uint64_t)v46);
      uint64_t v10 = v9[11];
      uint64_t v11 = v9[12];
      __swift_project_boxed_opaque_existential_1(v9 + 8, v10);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 32))(&v44, v10, v11);
      uint64_t v12 = v44;
      int v13 = v45;
      uint64_t v14 = *(void *)(v44 + 16);
      if (v14)
      {
        uint64_t v15 = v44 + 32;
        uint64_t result = swift_bridgeObjectRetain();
        unint64_t v17 = 0;
        uint64_t v43 = v8;
        uint64_t v40 = v14;
        int v41 = v13;
        while (1)
        {
          if (v17 >= *(void *)(v12 + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v18 = (unsigned __int8 *)(v15 + 16 * v17);
          uint64_t v19 = *(void *)(*(void *)v18 + 16);
          if (v19) {
            break;
          }
LABEL_5:
          if (++v17 == v14)
          {
            swift_bridgeObjectRelease_n();
            int64_t v3 = v38;
            goto LABEL_14;
          }
        }
        int v42 = v18[8];
        swift_bridgeObjectRetain_n();
        uint64_t v20 = 0;
        while (1)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          Swift::Bool v21 = EnvironmentalStateDescription.matches(_:)(a2);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            break;
          }
          if (v19 == ++v20)
          {
            uint64_t result = swift_bridgeObjectRelease_n();
            uint64_t v8 = v43;
            uint64_t v14 = v40;
            int v13 = v41;
            uint64_t v15 = v12 + 32;
            goto LABEL_5;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        int v13 = v42;
        int64_t v3 = v38;
        uint64_t v8 = v43;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_14:
      ++v8;
      memset(&v48[8], 0, 48);
      v48[56] = 1;
      sub_251145778((uint64_t)v46, (uint64_t)v49);
      LOBYTE(v47) = v13;
      *((void *)&v47 + 1) = CFAbsoluteTimeGetCurrent();
      switch(v13)
      {
        case 3:
          swift_bridgeObjectRelease();
          char v23 = 0;
          break;
        default:
          char v22 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          char v23 = 0;
          if ((v22 & 1) == 0)
          {
            if (qword_2511CF600[(char)v13] >= qword_2511CF618[v37]) {
              char v23 = 1;
            }
            else {
              char v23 = 2;
            }
          }
          break;
      }
      sub_25114589C((uint64_t)v46);
      v48[0] = v23;
      uint64_t v4 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25113C61C(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v51;
      }
      unint64_t v25 = *(void *)(v4 + 16);
      unint64_t v24 = *(void *)(v4 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_25113C61C(v24 > 1, v25 + 1, 1);
        uint64_t v4 = v51;
      }
      *(void *)(v4 + 16) = v25 + 1;
      uint64_t v26 = v4 + 216 * v25;
      long long v27 = *(_OWORD *)v48;
      *(_OWORD *)(v26 + 32) = v47;
      *(_OWORD *)(v26 + 48) = v27;
      long long v28 = *(_OWORD *)&v48[16];
      long long v29 = *(_OWORD *)&v48[32];
      long long v30 = v49[0];
      *(_OWORD *)(v26 + 96) = *(_OWORD *)&v48[48];
      *(_OWORD *)(v26 + 112) = v30;
      *(_OWORD *)(v26 + 64) = v28;
      *(_OWORD *)(v26 + 80) = v29;
      long long v31 = v49[1];
      long long v32 = v49[2];
      long long v33 = v49[4];
      *(_OWORD *)(v26 + 160) = v49[3];
      *(_OWORD *)(v26 + 176) = v33;
      *(_OWORD *)(v26 + 128) = v31;
      *(_OWORD *)(v26 + 144) = v32;
      long long v34 = v49[5];
      long long v35 = v49[6];
      long long v36 = v49[7];
      *(void *)(v26 + 240) = v50;
      *(_OWORD *)(v26 + 208) = v35;
      *(_OWORD *)(v26 + 224) = v36;
      *(_OWORD *)(v26 + 192) = v34;
    }
    while (v8 != v3);
  }
  return v4;
}

uint64_t sub_25113AD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_25113C61C(0, v4, 0);
    uint64_t v5 = v25;
    for (uint64_t i = a1 + 32; ; i += 216)
    {
      sub_25113D744(i, a2, (uint64_t)v23);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v25 = v5;
      unint64_t v10 = *(void *)(v5 + 16);
      unint64_t v9 = *(void *)(v5 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_25113C61C(v9 > 1, v10 + 1, 1);
        uint64_t v5 = v25;
      }
      *(void *)(v5 + 16) = v10 + 1;
      uint64_t v11 = v5 + 216 * v10;
      long long v12 = v23[1];
      *(_OWORD *)(v11 + 32) = v23[0];
      *(_OWORD *)(v11 + 48) = v12;
      long long v13 = v23[2];
      long long v14 = v23[3];
      long long v15 = v23[5];
      *(_OWORD *)(v11 + 96) = v23[4];
      *(_OWORD *)(v11 + 112) = v15;
      *(_OWORD *)(v11 + 64) = v13;
      *(_OWORD *)(v11 + 80) = v14;
      long long v16 = v23[6];
      long long v17 = v23[7];
      long long v18 = v23[9];
      *(_OWORD *)(v11 + 160) = v23[8];
      *(_OWORD *)(v11 + 176) = v18;
      *(_OWORD *)(v11 + 128) = v16;
      *(_OWORD *)(v11 + 144) = v17;
      long long v19 = v23[10];
      long long v20 = v23[11];
      long long v21 = v23[12];
      *(void *)(v11 + 240) = v24;
      *(_OWORD *)(v11 + 208) = v20;
      *(_OWORD *)(v11 + 224) = v21;
      *(_OWORD *)(v11 + 192) = v19;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
  }
  return v5;
}

uint64_t sub_25113AE94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_25113AFF0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[27 * v8 + 4];
  if (a1 + 32 < v9 + 216 * v2 && v9 < a1 + 32 + 216 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void *sub_25113AFF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_25113B21C(0, &qword_26B218988);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 216);
      BOOL v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[27 * v8 + 4]) {
          memmove(v12, a4 + 4, 216 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      BOOL v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25113B128(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25113B128(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 216 * a1 + 32;
    unint64_t v6 = a3 + 216 * v4;
    if (v5 >= v6 || v5 + 216 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void sub_25113B21C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2511C9C60();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_25113B264(void **a1, uint64_t (*a2)(void *))
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_25113C7E4(v4);
  }
  uint64_t v5 = v4[2];
  v7[0] = v4 + 4;
  v7[1] = v5;
  uint64_t result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_25113B2DC(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_150;
    }
    if (v4) {
      return sub_25113CBF4(0, v4, 1, v3);
    }
  }
  else
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1)
    {
LABEL_158:
      uint64_t result = sub_2511C9AA0();
      __break(1u);
      return result;
    }
    uint64_t v110 = result;
    if (v4 >= 2)
    {
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = sub_2511C95F0();
      *(void *)(v8 + 16) = v7;
      uint64_t v109 = v8;
      __dst = (char *)(v8 + 32);
      goto LABEL_13;
    }
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v4 == 1)
    {
      uint64_t v109 = MEMORY[0x263F8EE78];
LABEL_13:
      uint64_t v10 = 0;
      size_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v113 = v3;
      while (1)
      {
        uint64_t v13 = v10++;
        uint64_t v112 = v13;
        if (v10 < v4)
        {
          uint64_t v114 = v4;
          uint64_t v14 = *v3;
          sub_251146D6C(*v3 + 216 * v10, (uint64_t)&v120);
          uint64_t v111 = v14;
          sub_251146D6C(v14 + 216 * v13, (uint64_t)v118);
          unint64_t v15 = qword_2511CF618[(char)v120];
          unint64_t v16 = qword_2511CF618[v118[0]];
          if (v15 >= v16) {
            int v17 = v16 >= v15 && *(double *)&v132 < v119;
          }
          else {
            int v17 = 1;
          }
          sub_251146EDC((uint64_t)v118);
          sub_251146EDC((uint64_t)&v120);
          uint64_t v10 = v13 + 2;
          if (v13 + 2 < v114)
          {
            uint64_t v18 = v14 + 216 * v13 + 216;
            while (1)
            {
              sub_251146D6C(v18 + 216, (uint64_t)&v120);
              sub_251146D6C(v18, (uint64_t)v118);
              unint64_t v19 = qword_2511CF618[(char)v120];
              unint64_t v20 = qword_2511CF618[v118[0]];
              int v21 = v19 < v20 || v20 >= v19 && *(double *)&v132 < v119;
              sub_251146EDC((uint64_t)v118);
              sub_251146EDC((uint64_t)&v120);
              if (v17 != v21) {
                break;
              }
              ++v10;
              v18 += 216;
              if (v114 == v10)
              {
                uint64_t v10 = v114;
                break;
              }
            }
            uint64_t v13 = v112;
          }
          if (v17)
          {
            if (v10 < v13) {
              goto LABEL_151;
            }
            if (v13 < v10)
            {
              uint64_t v134 = v2;
              uint64_t v22 = v13;
              char v23 = (_OWORD *)(v111 + 216 * v10 - 216);
              uint64_t v24 = (_OWORD *)(v111 + 216 * v13);
              uint64_t v25 = v10;
              uint64_t v26 = v10;
              uint64_t v27 = v22;
              do
              {
                if (v27 != --v26)
                {
                  if (!v111) {
                    goto LABEL_156;
                  }
                  long long v130 = v24[10];
                  long long v131 = v24[11];
                  long long v132 = v24[12];
                  uint64_t v133 = *((void *)v24 + 26);
                  long long v126 = v24[6];
                  long long v127 = v24[7];
                  long long v128 = v24[8];
                  long long v129 = v24[9];
                  long long v122 = v24[2];
                  long long v123 = v24[3];
                  long long v124 = v24[4];
                  long long v125 = v24[5];
                  long long v120 = *v24;
                  long long v121 = v24[1];
                  memmove(v24, v23, 0xD8uLL);
                  v23[10] = v130;
                  v23[11] = v131;
                  v23[12] = v132;
                  *((void *)v23 + 26) = v133;
                  v23[6] = v126;
                  v23[7] = v127;
                  v23[8] = v128;
                  v23[9] = v129;
                  void v23[2] = v122;
                  v23[3] = v123;
                  v23[4] = v124;
                  v23[5] = v125;
                  _OWORD *v23 = v120;
                  v23[1] = v121;
                }
                ++v27;
                char v23 = (_OWORD *)((char *)v23 - 216);
                uint64_t v24 = (_OWORD *)((char *)v24 + 216);
              }
              while (v27 < v26);
              uint64_t v2 = v134;
              uint64_t v10 = v25;
              uint64_t v13 = v112;
            }
          }
          uint64_t v4 = v114;
        }
        if (v10 >= v4) {
          goto LABEL_65;
        }
        if (__OFSUB__(v10, v13)) {
          goto LABEL_149;
        }
        if (v10 - v13 >= v110) {
          goto LABEL_65;
        }
        if (__OFADD__(v13, v110)) {
          goto LABEL_152;
        }
        uint64_t v28 = v13 + v110 >= v4 ? v4 : v13 + v110;
        if (v28 < v13) {
          break;
        }
        if (v10 == v28) {
          goto LABEL_65;
        }
        uint64_t v134 = v2;
        uint64_t v29 = 216 * v10;
        uint64_t v115 = v28;
        while (2)
        {
          uint64_t v30 = v112;
          uint64_t v31 = v29;
          while (1)
          {
            uint64_t v32 = v10;
            uint64_t v33 = *v3 + v31;
            sub_251146D6C(v33, (uint64_t)&v120);
            sub_251146D6C(v33 - 216, (uint64_t)v118);
            unint64_t v34 = qword_2511CF618[(char)v120];
            unint64_t v35 = qword_2511CF618[v118[0]];
            if (v34 >= v35) {
              break;
            }
            sub_251146EDC((uint64_t)v118);
            sub_251146EDC((uint64_t)&v120);
            uint64_t v10 = v32;
LABEL_61:
            if (!*v3) {
              goto LABEL_154;
            }
            uint64_t v38 = *v3 + v31;
            long long v130 = *(_OWORD *)(v38 + 160);
            long long v131 = *(_OWORD *)(v38 + 176);
            long long v132 = *(_OWORD *)(v38 + 192);
            uint64_t v133 = *(void *)(v38 + 208);
            long long v126 = *(_OWORD *)(v38 + 96);
            long long v127 = *(_OWORD *)(v38 + 112);
            long long v128 = *(_OWORD *)(v38 + 128);
            long long v129 = *(_OWORD *)(v38 + 144);
            long long v122 = *(_OWORD *)(v38 + 32);
            long long v123 = *(_OWORD *)(v38 + 48);
            long long v124 = *(_OWORD *)(v38 + 64);
            long long v125 = *(_OWORD *)(v38 + 80);
            long long v120 = *(_OWORD *)v38;
            long long v121 = *(_OWORD *)(v38 + 16);
            long long v39 = *(_OWORD *)(v38 - 40);
            *(_OWORD *)(v38 + 160) = *(_OWORD *)(v38 - 56);
            *(_OWORD *)(v38 + 176) = v39;
            *(_OWORD *)(v38 + 192) = *(_OWORD *)(v38 - 24);
            *(void *)(v38 + 208) = *(void *)(v38 - 8);
            long long v40 = *(_OWORD *)(v38 - 104);
            *(_OWORD *)(v38 + 96) = *(_OWORD *)(v38 - 120);
            *(_OWORD *)(v38 + 112) = v40;
            long long v41 = *(_OWORD *)(v38 - 72);
            *(_OWORD *)(v38 + 128) = *(_OWORD *)(v38 - 88);
            *(_OWORD *)(v38 + 144) = v41;
            long long v42 = *(_OWORD *)(v38 - 168);
            *(_OWORD *)(v38 + 32) = *(_OWORD *)(v38 - 184);
            *(_OWORD *)(v38 + 48) = v42;
            long long v43 = *(_OWORD *)(v38 - 136);
            *(_OWORD *)(v38 + 64) = *(_OWORD *)(v38 - 152);
            *(_OWORD *)(v38 + 80) = v43;
            long long v44 = *(_OWORD *)(v38 - 200);
            *(_OWORD *)uint64_t v38 = *(_OWORD *)(v38 - 216);
            *(_OWORD *)(v38 + 16) = v44;
            *(_OWORD *)(v38 - 56) = v130;
            *(_OWORD *)(v38 - 40) = v131;
            *(_OWORD *)(v38 - 24) = v132;
            *(void *)(v38 - 8) = v133;
            *(_OWORD *)(v38 - 120) = v126;
            *(_OWORD *)(v38 - 104) = v127;
            *(_OWORD *)(v38 - 88) = v128;
            *(_OWORD *)(v38 - 72) = v129;
            *(_OWORD *)(v38 - 184) = v122;
            *(_OWORD *)(v38 - 168) = v123;
            *(_OWORD *)(v38 - 152) = v124;
            *(_OWORD *)(v38 - 136) = v125;
            *(_OWORD *)(v38 - 216) = v120;
            *(_OWORD *)(v38 - 200) = v121;
            v31 -= 216;
            if (v10 == ++v30) {
              goto LABEL_55;
            }
          }
          uint64_t v10 = v32;
          if (v35 >= v34)
          {
            double v36 = *(double *)&v132;
            double v37 = v119;
            sub_251146EDC((uint64_t)v118);
            sub_251146EDC((uint64_t)&v120);
            if (v36 >= v37) {
              goto LABEL_55;
            }
            goto LABEL_61;
          }
          sub_251146EDC((uint64_t)v118);
          sub_251146EDC((uint64_t)&v120);
LABEL_55:
          ++v10;
          v29 += 216;
          if (v10 != v115) {
            continue;
          }
          break;
        }
        uint64_t v10 = v115;
        uint64_t v2 = v134;
        uint64_t v13 = v112;
LABEL_65:
        if (v10 < v13) {
          goto LABEL_144;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          size_t v11 = sub_2511B2920(0, *((void *)v11 + 2) + 1, 1, v11);
        }
        unint64_t v46 = *((void *)v11 + 2);
        unint64_t v45 = *((void *)v11 + 3);
        unint64_t v12 = v46 + 1;
        uint64_t v134 = v2;
        if (v46 >= v45 >> 1) {
          size_t v11 = sub_2511B2920((char *)(v45 > 1), v46 + 1, 1, v11);
        }
        *((void *)v11 + 2) = v12;
        long long v47 = v11 + 32;
        uint64_t v48 = &v11[16 * v46 + 32];
        *(void *)uint64_t v48 = v112;
        *((void *)v48 + 1) = v10;
        if (v46)
        {
          uint64_t v116 = v10;
          while (1)
          {
            unint64_t v49 = v12 - 1;
            if (v12 >= 4)
            {
              uint64_t v54 = &v47[16 * v12];
              uint64_t v55 = *((void *)v54 - 8);
              uint64_t v56 = *((void *)v54 - 7);
              BOOL v60 = __OFSUB__(v56, v55);
              uint64_t v57 = v56 - v55;
              if (v60) {
                goto LABEL_133;
              }
              uint64_t v59 = *((void *)v54 - 6);
              uint64_t v58 = *((void *)v54 - 5);
              BOOL v60 = __OFSUB__(v58, v59);
              uint64_t v52 = v58 - v59;
              char v53 = v60;
              if (v60) {
                goto LABEL_134;
              }
              unint64_t v61 = v12 - 2;
              uint64_t v62 = &v47[16 * v12 - 32];
              uint64_t v64 = *(void *)v62;
              uint64_t v63 = *((void *)v62 + 1);
              BOOL v60 = __OFSUB__(v63, v64);
              uint64_t v65 = v63 - v64;
              if (v60) {
                goto LABEL_136;
              }
              BOOL v60 = __OFADD__(v52, v65);
              uint64_t v66 = v52 + v65;
              if (v60) {
                goto LABEL_139;
              }
              if (v66 >= v57)
              {
                uint64_t v84 = &v47[16 * v49];
                uint64_t v86 = *(void *)v84;
                uint64_t v85 = *((void *)v84 + 1);
                BOOL v60 = __OFSUB__(v85, v86);
                uint64_t v87 = v85 - v86;
                if (v60) {
                  goto LABEL_143;
                }
                BOOL v77 = v52 < v87;
                goto LABEL_103;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v78 = *((void *)v11 + 4);
                uint64_t v79 = *((void *)v11 + 5);
                BOOL v60 = __OFSUB__(v79, v78);
                uint64_t v71 = v79 - v78;
                char v72 = v60;
                goto LABEL_97;
              }
              uint64_t v51 = *((void *)v11 + 4);
              uint64_t v50 = *((void *)v11 + 5);
              BOOL v60 = __OFSUB__(v50, v51);
              uint64_t v52 = v50 - v51;
              char v53 = v60;
            }
            if (v53) {
              goto LABEL_135;
            }
            unint64_t v61 = v12 - 2;
            unint64_t v67 = &v47[16 * v12 - 32];
            uint64_t v69 = *(void *)v67;
            uint64_t v68 = *((void *)v67 + 1);
            BOOL v70 = __OFSUB__(v68, v69);
            uint64_t v71 = v68 - v69;
            char v72 = v70;
            if (v70) {
              goto LABEL_138;
            }
            uint64_t v73 = &v47[16 * v49];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v60 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v60) {
              goto LABEL_141;
            }
            if (__OFADD__(v71, v76)) {
              goto LABEL_142;
            }
            if (v71 + v76 >= v52)
            {
              BOOL v77 = v52 < v76;
LABEL_103:
              if (v77) {
                unint64_t v49 = v61;
              }
              goto LABEL_105;
            }
LABEL_97:
            if (v72) {
              goto LABEL_137;
            }
            v80 = &v47[16 * v49];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v60 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v60) {
              goto LABEL_140;
            }
            if (v83 < v71) {
              goto LABEL_15;
            }
LABEL_105:
            uint64_t v88 = v11;
            unint64_t v89 = v49 - 1;
            if (v49 - 1 >= v12)
            {
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
              goto LABEL_153;
            }
            uint64_t v90 = *v3;
            if (!*v3) {
              goto LABEL_155;
            }
            v91 = &v47[16 * v89];
            uint64_t v92 = *(void *)v91;
            uint64_t v93 = v47;
            unint64_t v94 = v49;
            uint64_t v95 = &v47[16 * v49];
            uint64_t v96 = *((void *)v95 + 1);
            uint64_t v97 = v134;
            sub_2511B2558((char *)(v90 + 216 * *(void *)v91), (char *)(v90 + 216 * *(void *)v95), v90 + 216 * v96, __dst);
            uint64_t v134 = v97;
            if (v97) {
              goto LABEL_113;
            }
            if (v96 < v92) {
              goto LABEL_130;
            }
            if (v94 > *((void *)v88 + 2)) {
              goto LABEL_131;
            }
            *(void *)v91 = v92;
            *(void *)&v93[16 * v89 + 8] = v96;
            unint64_t v98 = *((void *)v88 + 2);
            if (v94 >= v98) {
              goto LABEL_132;
            }
            size_t v11 = v88;
            unint64_t v12 = v98 - 1;
            memmove(v95, v95 + 16, 16 * (v98 - 1 - v94));
            long long v47 = v93;
            *((void *)v88 + 2) = v98 - 1;
            unint64_t v3 = v113;
            uint64_t v10 = v116;
            if (v98 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v4 = v3[1];
        uint64_t v2 = v134;
        if (v10 >= v4)
        {
          uint64_t v9 = v109;
          goto LABEL_116;
        }
      }
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    size_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_116:
    v99 = v11;
    uint64_t v109 = v9;
    if (v12 >= 2)
    {
      uint64_t v100 = *v3;
      do
      {
        unint64_t v101 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_145;
        }
        if (!v100) {
          goto LABEL_157;
        }
        uint64_t v102 = v99;
        uint64_t v103 = *(void *)&v99[16 * v101 + 32];
        uint64_t v104 = *(void *)&v99[16 * v12 + 24];
        sub_2511B2558((char *)(v100 + 216 * v103), (char *)(v100 + 216 * *(void *)&v99[16 * v12 + 16]), v100 + 216 * v104, __dst);
        if (v2) {
          break;
        }
        if (v104 < v103) {
          goto LABEL_146;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v102 = sub_2511B2EF0((uint64_t)v102);
        }
        if (v101 >= *((void *)v102 + 2)) {
          goto LABEL_147;
        }
        uint64_t v105 = v102 + 32;
        v106 = &v102[16 * v101 + 32];
        *(void *)v106 = v103;
        *((void *)v106 + 1) = v104;
        unint64_t v107 = v102;
        unint64_t v108 = *((void *)v102 + 2);
        if (v12 > v108) {
          goto LABEL_148;
        }
        memmove(&v105[16 * v12 - 16], &v105[16 * v12], 16 * (v108 - v12));
        v99 = v107;
        *((void *)v107 + 2) = v108 - 1;
        unint64_t v12 = v108 - 1;
      }
      while (v108 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    *(void *)(v109 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25113BD08(uint64_t *a1, uint64_t a2, void **a3)
{
  uint64_t v3 = *a1;
  uint64_t v81 = *(void *)(v3 + 16);
  if (!v81) {
    return 0;
  }
  uint64_t v80 = v3 + 32;
  uint64_t v124 = *(void *)(a2 + 16);
  uint64_t v77 = v3;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  uint64_t v79 = (uint64_t *)(a2 + 72);
  uint64_t v83 = a2;
  while (!v124)
  {
LABEL_4:
    if (++v5 == v81)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v77 + 16);
    }
  }
  unint64_t v85 = v5;
  uint64_t v6 = v80 + 216 * v5;
  uint64_t v7 = v6 + 80;
  unint64_t v89 = (uint64_t *)(v6 + 112);
  uint64_t v90 = (void *)(v6 + 96);
  swift_bridgeObjectRetain();
  uint64_t v8 = v79;
  uint64_t v9 = v124;
  uint64_t v88 = v7;
  while (1)
  {
    uint64_t v10 = *(v8 - 1);
    uint64_t v11 = *v8;
    uint64_t v13 = *v89;
    uint64_t v12 = v89[1];
    BOOL v14 = *(v8 - 3) == *v90 && *(v8 - 2) == v90[1];
    if (!v14 && (sub_2511C9CA0() & 1) == 0
      || (v10 == v13 ? (BOOL v15 = v11 == v12) : (BOOL v15 = 0), !v15 && (sub_2511C9CA0() & 1) == 0))
    {
      sub_251145778((uint64_t)(v8 - 5), (uint64_t)v106);
      sub_251145778(v7, (uint64_t)v92);
      sub_25114589C((uint64_t)v106);
      sub_25114589C((uint64_t)v92);
      sub_251145778((uint64_t)(v8 - 5), (uint64_t)v120);
      goto LABEL_8;
    }
    sub_251145778((uint64_t)(v8 - 5), (uint64_t)v106);
    sub_251145778(v7, (uint64_t)v92);
    uint64_t v16 = *((void *)&v108 + 1);
    uint64_t v17 = v109;
    __swift_project_boxed_opaque_existential_1(&v107, *((uint64_t *)&v108 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 24))(v120, v16, v17);
    uint64_t v18 = (void *)v120[0];
    unint64_t v19 = (void *)v120[1];
    uint64_t v20 = v120[2];
    uint64_t v21 = *((void *)&v94 + 1);
    uint64_t v22 = v95;
    __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v22 + 24))(&v117, v21, v22);
    uint64_t v23 = v119;
    if (v18 == v117 && v19 == v118) {
      break;
    }
    char v24 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_25;
    }
    sub_25114589C((uint64_t)v106);
    sub_25114589C((uint64_t)v92);
    sub_251145778((uint64_t)(v8 - 5), (uint64_t)v120);
    uint64_t v7 = v88;
LABEL_8:
    sub_251145778(v7, (uint64_t)&v117);
LABEL_9:
    sub_25114589C((uint64_t)v120);
    sub_25114589C((uint64_t)&v117);
LABEL_10:
    v8 += 17;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      unint64_t v5 = v85;
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_25114589C((uint64_t)v106);
  sub_25114589C((uint64_t)v92);
  sub_251145778((uint64_t)(v8 - 5), (uint64_t)v120);
  uint64_t v7 = v88;
  sub_251145778(v88, (uint64_t)&v117);
  if (v20 != v23) {
    goto LABEL_9;
  }
  swift_getObjectType();
  char v25 = sub_251146F94();
  sub_25114589C((uint64_t)v120);
  sub_25114589C((uint64_t)&v117);
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v26 = v83;
  swift_bridgeObjectRelease();
  unint64_t v27 = v85;
  sub_251146D6C(v80 + 216 * v85, (uint64_t)v106);
  uint64_t v28 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v28;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_92;
  }
  while (1)
  {
    unint64_t v31 = v28[2];
    unint64_t v30 = v28[3];
    uint64_t v32 = v77;
    if (v31 >= v30 >> 1)
    {
      uint64_t v28 = sub_25113AFF0((void *)(v30 > 1), v31 + 1, 1, v28);
      uint64_t v32 = v77;
      *a3 = v28;
    }
    v28[2] = v31 + 1;
    uint64_t v33 = &v28[27 * v31];
    long long v34 = v106[1];
    *((_OWORD *)v33 + 2) = v106[0];
    *((_OWORD *)v33 + 3) = v34;
    long long v35 = v106[2];
    long long v36 = v106[3];
    long long v37 = v108;
    *((_OWORD *)v33 + 6) = v107;
    *((_OWORD *)v33 + 7) = v37;
    *((_OWORD *)v33 + 4) = v35;
    *((_OWORD *)v33 + 5) = v36;
    long long v38 = v109;
    long long v39 = v110;
    long long v40 = v112;
    *((_OWORD *)v33 + 10) = v111;
    *((_OWORD *)v33 + 11) = v40;
    *((_OWORD *)v33 + 8) = v38;
    *((_OWORD *)v33 + 9) = v39;
    long long v41 = v113;
    long long v42 = v114;
    long long v43 = v115;
    v33[30] = v116;
    *((_OWORD *)v33 + 13) = v42;
    *((_OWORD *)v33 + 14) = v43;
    *((_OWORD *)v33 + 12) = v41;
    uint64_t v44 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v46 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    unint64_t v47 = *(void *)(v44 + 16);
    if (v46 == v47) {
      return v27;
    }
    uint64_t v82 = (uint64_t *)(v26 + 72);
LABEL_35:
    if (v46 >= v47)
    {
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    unint64_t v86 = v27;
    unint64_t v87 = v46;
    sub_251146D6C(v44 + 216 * v46 + 32, (uint64_t)v106);
    swift_bridgeObjectRetain();
    uint64_t v48 = 0;
    unint64_t v49 = v82;
    do
    {
      uint64_t v50 = v48 + 1;
      if (__OFADD__(v48, 1))
      {
        __break(1u);
        goto LABEL_84;
      }
      uint64_t v28 = (void *)*(v49 - 1);
      uint64_t v51 = *v49;
      unint64_t v27 = *((void *)&v110 + 1);
      uint64_t v26 = v110;
      BOOL v52 = *(v49 - 3) == (void)v109 && *(v49 - 2) == *((void *)&v109 + 1);
      if (!v52 && (sub_2511C9CA0() & 1) == 0
        || (v28 == (void *)v26 ? (BOOL v53 = v51 == v27) : (BOOL v53 = 0), !v53 && (sub_2511C9CA0() & 1) == 0))
      {
        sub_251145778((uint64_t)(v49 - 5), (uint64_t)v92);
        sub_251145778((uint64_t)&v108, (uint64_t)v120);
        sub_25114589C((uint64_t)v92);
        sub_25114589C((uint64_t)v120);
        sub_251145778((uint64_t)(v49 - 5), (uint64_t)&v117);
LABEL_38:
        sub_251145778((uint64_t)&v108, (uint64_t)&v103);
LABEL_39:
        sub_25114589C((uint64_t)&v117);
        sub_25114589C((uint64_t)&v103);
        goto LABEL_40;
      }
      sub_251145778((uint64_t)(v49 - 5), (uint64_t)v92);
      sub_251145778((uint64_t)&v108, (uint64_t)v120);
      uint64_t v54 = *((void *)&v94 + 1);
      uint64_t v55 = v95;
      __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v55 + 24))(&v117, v54, v55);
      uint64_t v26 = (uint64_t)v117;
      uint64_t v56 = v118;
      uint64_t v91 = v119;
      uint64_t v57 = v122;
      uint64_t v58 = v123;
      __swift_project_boxed_opaque_existential_1(v121, v122);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v58 + 24))(&v103, v57, v58);
      uint64_t v28 = v104;
      unint64_t v27 = v105;
      if (v26 == v103 && v56 == v104)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v26 = sub_2511C9CA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0)
        {
          sub_25114589C((uint64_t)v92);
          sub_25114589C((uint64_t)v120);
          sub_251145778((uint64_t)(v49 - 5), (uint64_t)&v117);
          goto LABEL_38;
        }
      }
      sub_25114589C((uint64_t)v92);
      sub_25114589C((uint64_t)v120);
      sub_251145778((uint64_t)(v49 - 5), (uint64_t)&v117);
      sub_251145778((uint64_t)&v108, (uint64_t)&v103);
      if (v91 != v27) {
        goto LABEL_39;
      }
      uint64_t v28 = v117;
      swift_getObjectType();
      char v59 = sub_251146F94();
      sub_25114589C((uint64_t)&v117);
      sub_25114589C((uint64_t)&v103);
      if (v59)
      {
        uint64_t v26 = v83;
        swift_bridgeObjectRelease();
        sub_251146D6C((uint64_t)v106, (uint64_t)v92);
        uint64_t v62 = *a3;
        char v63 = swift_isUniquelyReferenced_nonNull_native();
        *a3 = v62;
        if ((v63 & 1) == 0)
        {
          uint64_t v62 = sub_25113AFF0(0, v62[2] + 1, 1, v62);
          *a3 = v62;
        }
        unint64_t v27 = v86;
        unint64_t v65 = v62[2];
        unint64_t v64 = v62[3];
        uint64_t v28 = (void *)(v65 + 1);
        if (v65 >= v64 >> 1)
        {
          uint64_t v62 = sub_25113AFF0((void *)(v64 > 1), v65 + 1, 1, v62);
          *a3 = v62;
        }
        v62[2] = v28;
        uint64_t v66 = &v62[27 * v65];
        long long v67 = v92[1];
        *((_OWORD *)v66 + 2) = v92[0];
        *((_OWORD *)v66 + 3) = v67;
        long long v68 = v92[2];
        long long v69 = v92[3];
        long long v70 = v94;
        *((_OWORD *)v66 + 6) = v93;
        *((_OWORD *)v66 + 7) = v70;
        *((_OWORD *)v66 + 4) = v68;
        *((_OWORD *)v66 + 5) = v69;
        long long v71 = v95;
        long long v72 = v96;
        long long v73 = v98;
        *((_OWORD *)v66 + 10) = v97;
        *((_OWORD *)v66 + 11) = v73;
        *((_OWORD *)v66 + 8) = v71;
        *((_OWORD *)v66 + 9) = v72;
        long long v74 = v99;
        long long v75 = v100;
        long long v76 = v101;
        v66[30] = v102;
        *((_OWORD *)v66 + 13) = v75;
        *((_OWORD *)v66 + 14) = v76;
        *((_OWORD *)v66 + 12) = v74;
        sub_251146EDC((uint64_t)v106);
        unint64_t v46 = v87 + 1;
        if (__OFADD__(v87, 1)) {
          goto LABEL_85;
        }
LABEL_71:
        uint64_t v44 = *a1;
        unint64_t v47 = *(void *)(*a1 + 16);
        if (v46 != v47) {
          goto LABEL_35;
        }
        return v27;
      }
LABEL_40:
      v49 += 17;
      ++v48;
    }
    while (v50 != v124);
    uint64_t v26 = v83;
    swift_bridgeObjectRelease();
    sub_251146EDC((uint64_t)v106);
    unint64_t v27 = v86;
    if (v86 == v87) {
      goto LABEL_69;
    }
    if ((v86 & 0x8000000000000000) != 0) {
      goto LABEL_87;
    }
    BOOL v60 = (void *)*a1;
    uint64_t v28 = *(void **)(*a1 + 16);
    if (v86 >= (unint64_t)v28) {
      goto LABEL_88;
    }
    sub_251146D6C((uint64_t)&v60[27 * v86 + 4], (uint64_t)v106);
    if (v87 >= (unint64_t)v28) {
      goto LABEL_89;
    }
    sub_251146D6C((uint64_t)&v60[27 * v87 + 4], (uint64_t)v92);
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = (uint64_t)v60;
    if ((v61 & 1) == 0)
    {
      BOOL v60 = sub_25113C7E4(v60);
      *a1 = (uint64_t)v60;
    }
    if (v86 < v60[2])
    {
      sub_2511B2FD4((uint64_t)v92, (uint64_t)&v60[27 * v86 + 4]);
      if (v87 >= *(void *)(*a1 + 16)) {
        goto LABEL_91;
      }
      sub_2511B2FD4((uint64_t)v106, *a1 + 216 * v87 + 32);
LABEL_69:
      unint64_t v27 = v86 + 1;
      if (__OFADD__(v86, 1)) {
        goto LABEL_86;
      }
      unint64_t v46 = v87 + 1;
      if (__OFADD__(v87, 1)) {
        goto LABEL_85;
      }
      goto LABEL_71;
    }
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    uint64_t v28 = sub_25113AFF0(0, v28[2] + 1, 1, v28);
    *a3 = v28;
  }
  __break(1u);
  return result;
}

uint64_t sub_25113C61C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25113C63C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25113C63C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218988, (uint64_t)&type metadata for EnqueuedWorkPlan, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 216);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[216 * v8]) {
      memmove(v12, v13, 216 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[216 * v8] || v12 >= &v13[216 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void *sub_25113C7E4(void *a1)
{
  return sub_25113AFF0(0, a1[2], 0, a1);
}

uint64_t sub_25113C7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_25113CA30(0, v3, 0);
    uint64_t v7 = a1 + 32;
    long long v8 = *(_OWORD *)(a3 + 64);
    long long v9 = *(_OWORD *)(a3 + 24);
    long long v39 = *(_OWORD *)(a3 + 8);
    long long v40 = v9;
    long long v41 = *(_OWORD *)(a3 + 40);
    uint64_t v10 = *(void *)(a3 + 56);
    uint64_t v11 = *(void *)(a3 + 80);
    long long v28 = v8;
    do
    {
      sub_25112FD4C(v7, (uint64_t)v29);
      uint64_t v12 = swift_allocObject();
      swift_weakInit();
      uint64_t v13 = swift_allocObject();
      long long v14 = *(_OWORD *)(a3 + 80);
      *(_OWORD *)(v13 + 80) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(v13 + 96) = v14;
      uint64_t v15 = *(void *)(a3 + 96);
      long long v16 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v13 + 16) = *(_OWORD *)a3;
      *(_OWORD *)(v13 + 32) = v16;
      long long v17 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v13 + 48) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v13 + 64) = v17;
      *(void *)(v13 + 112) = v15;
      *(void *)(v13 + 120) = v12;
      long long v30 = v28;
      long long v32 = v40;
      long long v33 = v41;
      long long v31 = v39;
      sub_25112F14C(v29, (uint64_t)v34);
      *((void *)&v35 + 1) = v10;
      *(void *)&long long v36 = v11;
      *((void *)&v36 + 1) = sub_2511354D0;
      uint64_t v37 = v13;
      uint64_t v4 = v38;
      swift_unknownObjectRetain();
      sub_25113822C((uint64_t)&v39);
      swift_retain();
      sub_25113A1A8(a3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25113CA30(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v38;
      }
      unint64_t v19 = *(void *)(v4 + 16);
      unint64_t v18 = *(void *)(v4 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_25113CA30(v18 > 1, v19 + 1, 1);
        uint64_t v4 = v38;
      }
      *(void *)(v4 + 16) = v19 + 1;
      uint64_t v20 = v4 + 136 * v19;
      *(_OWORD *)(v20 + 32) = v30;
      long long v21 = v31;
      long long v22 = v32;
      long long v23 = v34[0];
      *(_OWORD *)(v20 + 80) = v33;
      *(_OWORD *)(v20 + 96) = v23;
      *(_OWORD *)(v20 + 48) = v21;
      *(_OWORD *)(v20 + 64) = v22;
      long long v24 = v34[1];
      long long v25 = v35;
      long long v26 = v36;
      *(void *)(v20 + 160) = v37;
      *(_OWORD *)(v20 + 128) = v25;
      *(_OWORD *)(v20 + 144) = v26;
      *(_OWORD *)(v20 + 112) = v24;
      v7 += 40;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_25113CA30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25113CA50(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25113CA50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218110, (uint64_t)&type metadata for ScheduledWorkPlan, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8]) {
      memmove(v12, v13, 136 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[136 * v8] || v12 >= &v13[136 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25113CBF4(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v38 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = 216 * a3;
LABEL_6:
    uint64_t v8 = v38;
    uint64_t v9 = v7;
    while (1)
    {
      uint64_t v10 = *a4 + v9;
      sub_251146D6C(v10, (uint64_t)&v24);
      sub_251146D6C(v10 - 216, (uint64_t)v22);
      unint64_t v11 = qword_2511CF618[(char)v24];
      unint64_t v12 = qword_2511CF618[v22[0]];
      if (v11 >= v12)
      {
        if (v12 < v11)
        {
          sub_251146EDC((uint64_t)v22);
          uint64_t result = sub_251146EDC((uint64_t)&v24);
LABEL_5:
          ++v5;
          v7 += 216;
          if (v5 == a2) {
            return result;
          }
          goto LABEL_6;
        }
        double v13 = *(double *)&v36;
        double v14 = v23;
        sub_251146EDC((uint64_t)v22);
        uint64_t result = sub_251146EDC((uint64_t)&v24);
        if (v13 >= v14) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_251146EDC((uint64_t)v22);
        uint64_t result = sub_251146EDC((uint64_t)&v24);
      }
      if (!*a4) {
        break;
      }
      uint64_t v15 = *a4 + v9;
      long long v34 = *(_OWORD *)(v15 + 160);
      long long v35 = *(_OWORD *)(v15 + 176);
      long long v36 = *(_OWORD *)(v15 + 192);
      uint64_t v37 = *(void *)(v15 + 208);
      long long v30 = *(_OWORD *)(v15 + 96);
      long long v31 = *(_OWORD *)(v15 + 112);
      long long v32 = *(_OWORD *)(v15 + 128);
      long long v33 = *(_OWORD *)(v15 + 144);
      long long v26 = *(_OWORD *)(v15 + 32);
      long long v27 = *(_OWORD *)(v15 + 48);
      long long v28 = *(_OWORD *)(v15 + 64);
      long long v29 = *(_OWORD *)(v15 + 80);
      long long v24 = *(_OWORD *)v15;
      long long v25 = *(_OWORD *)(v15 + 16);
      long long v16 = *(_OWORD *)(v15 - 40);
      *(_OWORD *)(v15 + 160) = *(_OWORD *)(v15 - 56);
      *(_OWORD *)(v15 + 176) = v16;
      *(_OWORD *)(v15 + 192) = *(_OWORD *)(v15 - 24);
      *(void *)(v15 + 208) = *(void *)(v15 - 8);
      long long v17 = *(_OWORD *)(v15 - 104);
      *(_OWORD *)(v15 + 96) = *(_OWORD *)(v15 - 120);
      *(_OWORD *)(v15 + 112) = v17;
      long long v18 = *(_OWORD *)(v15 - 72);
      *(_OWORD *)(v15 + 128) = *(_OWORD *)(v15 - 88);
      *(_OWORD *)(v15 + 144) = v18;
      long long v19 = *(_OWORD *)(v15 - 168);
      *(_OWORD *)(v15 + 32) = *(_OWORD *)(v15 - 184);
      *(_OWORD *)(v15 + 48) = v19;
      long long v20 = *(_OWORD *)(v15 - 136);
      *(_OWORD *)(v15 + 64) = *(_OWORD *)(v15 - 152);
      *(_OWORD *)(v15 + 80) = v20;
      long long v21 = *(_OWORD *)(v15 - 200);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)(v15 - 216);
      *(_OWORD *)(v15 + 16) = v21;
      *(_OWORD *)(v15 - 56) = v34;
      *(_OWORD *)(v15 - 40) = v35;
      *(_OWORD *)(v15 - 24) = v36;
      *(void *)(v15 - 8) = v37;
      *(_OWORD *)(v15 - 120) = v30;
      *(_OWORD *)(v15 - 104) = v31;
      *(_OWORD *)(v15 - 88) = v32;
      *(_OWORD *)(v15 - 72) = v33;
      *(_OWORD *)(v15 - 184) = v26;
      *(_OWORD *)(v15 - 168) = v27;
      *(_OWORD *)(v15 - 152) = v28;
      *(_OWORD *)(v15 - 136) = v29;
      *(_OWORD *)(v15 - 216) = v24;
      *(_OWORD *)(v15 - 200) = v25;
      v9 -= 216;
      if (v5 == ++v8) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25113CE70()
{
  return sub_25113CE8C(v0 + 16, (uint64_t *)(v0 + 56), v0 + 200, *(void *)(v0 + 240), *(void *)(v0 + 248), *(uint64_t (**)(void))(v0 + 256), *(double *)(v0 + 192));
}

uint64_t sub_25113CE8C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), double a7)
{
  sub_25113D3C0(a1, (uint64_t)&v30);
  if (v32)
  {
    uint64_t v27 = a4;
    long long v28 = a6;
    sub_25112F14C(&v30, (uint64_t)v37);
    uint64_t v14 = v38;
    uint64_t v13 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    long long v15 = *(_OWORD *)(a3 + 16);
    v35[0] = *(_OWORD *)a3;
    v35[1] = v15;
    uint64_t v36 = *(void *)(a3 + 32);
    uint64_t v16 = a2[3];
    uint64_t v17 = a2[4];
    uint64_t v18 = a2[5];
    uint64_t v20 = a2[6];
    uint64_t v19 = a2[7];
    *(void *)&long long v30 = a2[2];
    *((void *)&v30 + 1) = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    uint64_t v33 = v20;
    uint64_t v34 = v19;
    uint64_t v21 = *(void *)(a5 + 16);
    long long v22 = (uint64_t *)(v21 + 16);
    double v23 = (os_unfair_lock_s *)(v21 + 76);
    uint64_t v25 = *a2;
    uint64_t v24 = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v23);
    sub_25113D490(v22, &v29);
    os_unfair_lock_unlock(v23);
    (*(void (**)(uint64_t *, _OWORD *, uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t))(v13 + 16))(a2 + 8, v35, v27, &v30, v25, v24, v29, v14, a7, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    a6 = v28;
    if (!v28) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_25113DDF8((uint64_t)&v30);
    if (!a6) {
      return result;
    }
  }
  return a6(result);
}

void sub_25113D034(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  sub_25113D054(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(os_unfair_lock_s **)(v2 + 32), a2);
}

void sub_25113D054(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, os_unfair_lock_s *a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v32 = 0u;
LABEL_12:
    sub_251146350((uint64_t)&v32);
    *a5 = 0;
    a5[1] = 0;
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_2511C9AC0()) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v29 = a3;
  long long v28 = a4;
  if ((v12 & 0xC000000000000001) != 0)
  {
    MEMORY[0x2533971C0](0, v12);
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_15;
    }
    swift_retain();
  }
  uint64_t v14 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t)&v15[4];
  a4 = v15 + 11;
  os_unfair_lock_lock(v15 + 11);
  sub_25113D9F8(v16, (uint64_t)&v32);
  if (!v6)
  {
    os_unfair_lock_unlock(a4);
    swift_release();
    if ((void)v37)
    {
      v47[9] = v42;
      v47[10] = v43;
      v47[11] = v44;
      uint64_t v48 = v45;
      v47[5] = v38;
      v47[6] = v39;
      v47[7] = v40;
      v47[8] = v41;
      v47[1] = v34;
      v47[2] = v35;
      v47[3] = v36;
      v47[4] = v37;
      long long v46 = v32;
      v47[0] = v33;
      uint64_t v17 = sub_25114405C(a1);
      uint64_t v19 = v18;
      long long v49 = *(_OWORD *)((char *)v47 + 8);
      long long v50 = *(_OWORD *)((char *)&v47[1] + 8);
      uint64_t v51 = *((void *)&v47[2] + 1);
      sub_25113D3C0((uint64_t)(a1 + 2), (uint64_t)v31);
      double Current = CFAbsoluteTimeGetCurrent();
      sub_251146EDC((uint64_t)&v46);
      double v21 = Current - *(double *)(a2 + 112);
      sub_25113D35C((uint64_t)v31, (uint64_t)v30);
      sub_251145778(a2, (uint64_t)&v32);
      uint64_t v22 = swift_allocObject();
      sub_25113D35C((uint64_t)v30, v22 + 16);
      long long v23 = v36;
      *(_OWORD *)(v22 + 136) = v37;
      long long v24 = v39;
      *(_OWORD *)(v22 + 152) = v38;
      *(_OWORD *)(v22 + 168) = v24;
      long long v25 = v32;
      *(_OWORD *)(v22 + 72) = v33;
      long long v26 = v35;
      *(_OWORD *)(v22 + 88) = v34;
      *(_OWORD *)(v22 + 104) = v26;
      *(_OWORD *)(v22 + 120) = v23;
      *(void *)(v22 + 184) = v40;
      *(_OWORD *)(v22 + 56) = v25;
      *(double *)(v22 + 192) = v21;
      long long v27 = v50;
      *(_OWORD *)(v22 + 200) = v49;
      *(_OWORD *)(v22 + 216) = v27;
      *(void *)(v22 + 232) = v51;
      *(void *)(v22 + 240) = v28;
      *(void *)(v22 + 248) = v29;
      *(void *)(v22 + 256) = v17;
      *(void *)(v22 + 264) = v19;
      *a5 = sub_25113CE70;
      a5[1] = (uint64_t (*)())v22;
      sub_25113F868(v28);
      swift_retain();
      return;
    }
    goto LABEL_12;
  }
LABEL_15:
  os_unfair_lock_unlock(a4);
  __break(1u);
}

uint64_t sub_25113D35C(uint64_t a1, uint64_t a2)
{
  sub_25113D424();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25113D3C0(uint64_t a1, uint64_t a2)
{
  sub_25113D424();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_25113D424()
{
  if (!qword_26B2187A0)
  {
    sub_251131944(255, &qword_26B218798);
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2187A0);
    }
  }
}

uint64_t sub_25113D490@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25113D4A8(a1, a2);
}

uint64_t sub_25113D4A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25113A230(a1);
  *a2 = result;
  return result;
}

uint64_t sub_25113D4D8()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_25113D510();
}

uint64_t sub_25113D510()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  int64_t v3 = v1 + 19;
  os_unfair_lock_lock(v1 + 19);
  sub_25113D5BC(v2, &v9);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = *(void *)(v9 + 16);
  if (v4)
  {
    uint64_t v5 = v9 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_25113D5BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25113D5D8(a1, a2);
}

uint64_t sub_25113D5D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_25114405C();
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    sub_251147348(0, &qword_26B218190, (uint64_t (*)(uint64_t))sub_2511AD65C, MEMORY[0x263F8E0F8]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2511CB450;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v6;
    *(void *)(result + 24) = v7;
    *(void *)(v8 + 32) = sub_25114A81C;
    *(void *)(v8 + 40) = result;
  }
  else
  {
    uint64_t result = sub_2511464D4(a1);
    uint64_t v8 = result;
  }
  *a2 = v8;
  return result;
}

uint64_t sub_25113D6BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25113D744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(*(void *)a2 + 16);
  if (!v5)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)a2 + 32;
  unint64_t v47 = (void *)(a1 + 144);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_251146D6C(v6, (uint64_t)&v33);
    uint64_t v7 = *((void *)&v43 + 1);
    uint64_t v8 = v44;
    __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 24))(&v19, v7, v8);
    long long v9 = v19;
    uint64_t v10 = v20;
    uint64_t v11 = *(void *)(a1 + 168);
    uint64_t v12 = *(void *)(a1 + 176);
    __swift_project_boxed_opaque_existential_1(v47, v11);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v12 + 24))(&v17, v11, v12);
    uint64_t v13 = v18;
    if (v9 == v17)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v14 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        goto LABEL_4;
      }
    }
    if (v10 == v13) {
      break;
    }
LABEL_4:
    sub_251146EDC((uint64_t)&v33);
    v6 += 216;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = a3;
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  long long v30 = v44;
  long long v31 = v45;
  long long v26 = v40;
  long long v27 = v41;
  uint64_t v32 = v46;
  long long v28 = v42;
  long long v29 = v43;
  long long v21 = v35;
  long long v22 = v36;
  long long v23 = v37;
  long long v24 = v38;
  long long v25 = v39;
  long long v19 = v33;
  long long v20 = v34;
  swift_bridgeObjectRelease();
  uint64_t v4 = a3;
  if (!(void)v24)
  {
LABEL_12:
    sub_25114641C((uint64_t)&v19, (uint64_t (*)(void))sub_25114647C);
    return sub_251146D6C(a1, v4);
  }
  long long v43 = v29;
  long long v44 = v30;
  long long v45 = v31;
  long long v39 = v25;
  long long v40 = v26;
  uint64_t v46 = v32;
  long long v41 = v27;
  long long v42 = v28;
  long long v35 = v21;
  long long v36 = v22;
  long long v37 = v23;
  long long v38 = v24;
  long long v33 = v19;
  long long v34 = v20;
  sub_2511721D8((unsigned char *)a1, a3);
  return sub_251146EDC((uint64_t)&v33);
}

uint64_t sub_25113D9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25113DA14(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_25113DA14@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1 + 16;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v8 = v5 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251146D6C(v8, (uint64_t)v18);
      if (ScheduledWorkPlan.matches(_:)(a2)) {
        break;
      }
      sub_251146EDC((uint64_t)v18);
      v8 += 216;
      if (!--v6) {
        goto LABEL_7;
      }
    }
    long long v9 = v18[11];
    *(_OWORD *)(a3 + 160) = v18[10];
    *(_OWORD *)(a3 + 176) = v9;
    *(_OWORD *)(a3 + 192) = v18[12];
    *(void *)(a3 + 208) = v19;
    long long v10 = v18[7];
    *(_OWORD *)(a3 + 96) = v18[6];
    *(_OWORD *)(a3 + 112) = v10;
    long long v11 = v18[9];
    *(_OWORD *)(a3 + 128) = v18[8];
    *(_OWORD *)(a3 + 144) = v11;
    long long v12 = v18[3];
    *(_OWORD *)(a3 + 32) = v18[2];
    *(_OWORD *)(a3 + 48) = v12;
    long long v13 = v18[5];
    *(_OWORD *)(a3 + 64) = v18[4];
    *(_OWORD *)(a3 + 80) = v13;
    long long v14 = v18[1];
    *(_OWORD *)a3 = v18[0];
    *(_OWORD *)(a3 + 16) = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    *(void *)(a3 + 208) = 0;
    *(_OWORD *)(a3 + 176) = 0u;
    *(_OWORD *)(a3 + 192) = 0u;
    *(_OWORD *)(a3 + 144) = 0u;
    *(_OWORD *)(a3 + 160) = 0u;
    *(_OWORD *)(a3 + 112) = 0u;
    *(_OWORD *)(a3 + 128) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 96) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  uint64_t v15 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v15);
  uint64_t result = sub_25113DBBC(sub_25113DDD8);
  int64_t v17 = *(void *)(*(void *)v4 + 16);
  if (v17 >= result) {
    return sub_25113A7D4(result, v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_25113DBBC(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  for (uint64_t i = 31; ; i += 27)
  {
    char v8 = a1(v3 + i * 8 - 216);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v8) {
      break;
    }
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v6, 1))
  {
    unint64_t v10 = *(void *)(v3 + 16);
    if (v6 + 1 == v10) {
      return v6;
    }
    for (unint64_t j = v6 + 1; j < v10; ++j)
    {
      sub_251146D6C(v3 + i * 8, (uint64_t)v18);
      char v12 = a1((uint64_t)v18);
      uint64_t result = sub_251146EDC((uint64_t)v18);
      if ((v12 & 1) == 0)
      {
        if (j != v6)
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          long long v13 = (void *)*v1;
          unint64_t v14 = *(void *)(*v1 + 16);
          if (v6 >= v14) {
            goto LABEL_32;
          }
          uint64_t result = sub_251146D6C((uint64_t)&v13[27 * v6 + 4], (uint64_t)v18);
          if (j >= v14) {
            goto LABEL_33;
          }
          sub_251146D6C((uint64_t)&v13[i], (uint64_t)v17);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v1 = (uint64_t)v13;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_25113C7E4(v13);
            long long v13 = (void *)result;
            *uint64_t v1 = result;
          }
          if (v6 >= v13[2]) {
            goto LABEL_34;
          }
          uint64_t result = sub_2511B2FD4((uint64_t)v17, (uint64_t)&v13[27 * v6 + 4]);
          if (j >= *(void *)(*v1 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_2511B2FD4((uint64_t)v18, *v1 + i * 8);
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v16 = j + 1;
      if (__OFADD__(j, 1)) {
        goto LABEL_29;
      }
      uint64_t v3 = *v1;
      unint64_t v10 = *(void *)(*v1 + 16);
      i += 27;
      if (v16 == v10) {
        return v6;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25113DDD8(uint64_t a1)
{
  return sub_251146130(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_25113DDF8(uint64_t a1)
{
  sub_25113D424();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25113DE54(uint64_t a1)
{
  sub_25113DE88(a1, v1[3], v1[4], v1[5]);
}

void sub_25113DE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v169 = a1;
  uint64_t v170 = a4;
  uint64_t v8 = sub_2511C92A0();
  v174 = *(unsigned char **)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  long long v13 = &v156[-v12];
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = &v156[-v15];
  MEMORY[0x270FA5388](v14);
  long long v20 = &v156[-v19];
  uint64_t v168 = v5;
  v171 = (void *)a2;
  id v172 = (id)a3;
  v175 = 0;
  if (!a3)
  {
    double v30 = *(double *)(v5 + 16);
    unint64_t v31 = *(void *)(v5 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, unint64_t))(v31 + 40))(ObjectType, v31);
    sub_251145778(a2, (uint64_t)v191);
    sub_251145778(a2, (uint64_t)&v185);
    sub_251145778(a2, (uint64_t)v183);
    swift_retain_n();
    long long v33 = sub_2511C9280();
    int v34 = sub_2511C9770();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      LODWORD(v166) = v34;
      double v167 = *(double *)&v33;
      uint64_t v173 = v8;
      uint64_t v35 = swift_slowAlloc();
      v165 = (void (*)(void, void))swift_slowAlloc();
      v182[0] = (uint64_t)v165;
      *(_DWORD *)uint64_t v35 = 136315906;
      double v179 = v30;
      unint64_t v180 = v31;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      uint64_t v36 = sub_2511C94C0();
      double v179 = COERCE_DOUBLE(sub_251140E4C(v36, v37, v182));
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v38 = v192;
      *(void *)&double v179 = 60;
      unint64_t v180 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      if (!v38) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      double v179 = COERCE_DOUBLE(sub_251140E4C(*(uint64_t *)&v179, v180, v182));
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      sub_25114589C((uint64_t)v191);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v66 = v189;
      uint64_t v67 = v190;
      __swift_project_boxed_opaque_existential_1(v188, v189);
      (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(v67 + 24))(&v179, v66, v67);
      uint64_t v68 = v181;
      os_log_t v177 = *(os_log_t *)&v179;
      unint64_t v178 = v180;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      uint64_t v176 = v68;
      sub_2511C9C50();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      double v179 = COERCE_DOUBLE(sub_251140E4C((uint64_t)v177, v178, v182));
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      sub_25114589C((uint64_t)&v185);
      *(_WORD *)(v35 + 32) = 2048;
      double v179 = CFAbsoluteTimeGetCurrent() - v184;
      sub_2511C98A0();
      sub_25114589C((uint64_t)v183);
      os_log_t v69 = *(os_log_t *)&v167;
      _os_log_impl(&dword_25112A000, *(os_log_t *)&v167, (os_log_type_t)v166, "[%s]: [%s - %s]: Finished run after %fs.", (uint8_t *)v35, 0x2Au);
      long long v70 = v165;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v70, -1, -1);
      MEMORY[0x253397D40](v35, -1, -1);

      uint64_t v55 = v173;
      BOOL v53 = (void (*)(unsigned char *, uint64_t))*((void *)v174 + 1);
      uint64_t v54 = v20;
      goto LABEL_20;
    }
    swift_release_n();
    sub_25114589C((uint64_t)v191);
    sub_25114589C((uint64_t)&v185);
    sub_25114589C((uint64_t)v183);

    BOOL v53 = (void (*)(unsigned char *, uint64_t))*((void *)v174 + 1);
    uint64_t v54 = v20;
LABEL_14:
    uint64_t v55 = v8;
LABEL_20:
    v53(v54, v55);
LABEL_48:
    uint64_t v97 = v170;
    goto LABEL_49;
  }
  if (a3 == 1)
  {
    double v21 = *(double *)(v5 + 16);
    unint64_t v22 = *(void *)(v5 + 24);
    uint64_t v23 = swift_getObjectType();
    (*(void (**)(uint64_t, unint64_t))(v22 + 40))(v23, v22);
    sub_251145778(a2, (uint64_t)v191);
    sub_251145778(a2, (uint64_t)&v185);
    sub_251145778(a2, (uint64_t)v183);
    swift_retain_n();
    long long v24 = sub_2511C9280();
    int v25 = sub_2511C9770();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      LODWORD(v166) = v25;
      double v167 = *(double *)&v24;
      uint64_t v173 = v8;
      uint64_t v26 = swift_slowAlloc();
      v165 = (void (*)(void, void))swift_slowAlloc();
      v182[0] = (uint64_t)v165;
      *(_DWORD *)uint64_t v26 = 136315906;
      double v179 = v21;
      unint64_t v180 = v22;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      uint64_t v27 = sub_2511C94C0();
      double v179 = COERCE_DOUBLE(sub_251140E4C(v27, v28, v182));
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v29 = v192;
      *(void *)&double v179 = 60;
      unint64_t v180 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      if (!v29) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      double v179 = COERCE_DOUBLE(sub_251140E4C(*(uint64_t *)&v179, v180, v182));
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      sub_25114589C((uint64_t)v191);
      *(_WORD *)(v26 + 22) = 2080;
      uint64_t v61 = v189;
      uint64_t v62 = v190;
      __swift_project_boxed_opaque_existential_1(v188, v189);
      (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(v62 + 24))(&v179, v61, v62);
      uint64_t v63 = v181;
      os_log_t v177 = *(os_log_t *)&v179;
      unint64_t v178 = v180;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      uint64_t v176 = v63;
      sub_2511C9C50();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      double v179 = COERCE_DOUBLE(sub_251140E4C((uint64_t)v177, v178, v182));
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      sub_25114589C((uint64_t)&v185);
      *(_WORD *)(v26 + 32) = 2048;
      double v179 = CFAbsoluteTimeGetCurrent() - v184;
      sub_2511C98A0();
      sub_25114589C((uint64_t)v183);
      os_log_t v64 = *(os_log_t *)&v167;
      _os_log_impl(&dword_25112A000, *(os_log_t *)&v167, (os_log_type_t)v166, "[%s]: [%s - %s]: Replaced after %fs.", (uint8_t *)v26, 0x2Au);
      unint64_t v65 = v165;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v65, -1, -1);
      MEMORY[0x253397D40](v26, -1, -1);

      (*((void (**)(unsigned char *, uint64_t))v174 + 1))(v13, v173);
      goto LABEL_48;
    }
    swift_release_n();
    sub_25114589C((uint64_t)v191);
    sub_25114589C((uint64_t)&v185);
    sub_25114589C((uint64_t)v183);

    BOOL v53 = (void (*)(unsigned char *, uint64_t))*((void *)v174 + 1);
    uint64_t v54 = v13;
    goto LABEL_14;
  }
  uint64_t v173 = v8;
  uint64_t v161 = v18;
  uint64_t v162 = v17;
  long long v40 = *(NSObject **)(v5 + 16);
  unint64_t v39 = *(void *)(v5 + 24);
  uint64_t v41 = swift_getObjectType();
  long long v42 = *(void (**)(void, void))(v39 + 40);
  id v43 = (id)a3;
  uint64_t v166 = v39 + 40;
  double v167 = *(double *)&v40;
  unint64_t v44 = v39;
  uint64_t v45 = (uint64_t)v171;
  uint64_t v164 = v41;
  v165 = v42;
  v42(v41, v44);
  uint64_t v46 = v5;
  sub_251145778(v45, (uint64_t)v191);
  sub_251145778(v45, (uint64_t)&v185);
  sub_251145778(v45, (uint64_t)v183);
  swift_retain();
  sub_25113F868((id)a3);
  swift_retain();
  sub_25113F868((id)a3);
  unint64_t v47 = sub_2511C9280();
  int v48 = sub_2511C9750();
  if (os_log_type_enabled(v47, (os_log_type_t)v48))
  {
    int v157 = v48;
    v163 = (void (*)(void, void))v16;
    uint64_t v49 = swift_slowAlloc();
    v158 = (void *)swift_slowAlloc();
    uint64_t v159 = swift_slowAlloc();
    v182[0] = v159;
    *(_DWORD *)uint64_t v49 = 136316162;
    double v179 = v167;
    unint64_t v180 = v44;
    unint64_t v160 = v44;
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_unknownObjectRetain();
    uint64_t v50 = sub_2511C94C0();
    double v179 = COERCE_DOUBLE(sub_251140E4C(v50, v51, v182));
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    uint64_t v52 = v192;
    *(void *)&double v179 = 60;
    unint64_t v180 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    if (!v52) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    double v179 = COERCE_DOUBLE(sub_251140E4C(*(uint64_t *)&v179, v180, v182));
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    sub_25114589C((uint64_t)v191);
    *(_WORD *)(v49 + 22) = 2080;
    uint64_t v71 = v189;
    uint64_t v72 = v190;
    __swift_project_boxed_opaque_existential_1(v188, v189);
    (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(v72 + 24))(&v179, v71, v72);
    uint64_t v73 = v181;
    os_log_t v177 = *(os_log_t *)&v179;
    unint64_t v178 = v180;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    uint64_t v176 = v73;
    sub_2511C9C50();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    double v179 = COERCE_DOUBLE(sub_251140E4C((uint64_t)v177, v178, v182));
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    sub_25114589C((uint64_t)&v185);
    *(_WORD *)(v49 + 32) = 2048;
    double v179 = CFAbsoluteTimeGetCurrent() - v184;
    sub_2511C98A0();
    sub_25114589C((uint64_t)v183);
    *(_WORD *)(v49 + 42) = 2112;
    a3 = (uint64_t)v172;
    id v74 = v172;
    double v75 = COERCE_DOUBLE(_swift_stdlib_bridgeErrorToNSError());
    double v179 = v75;
    sub_2511C98A0();
    long long v76 = v158;
    *(double *)v158 = v75;
    sub_25113F858((id)a3);
    sub_25113F858((id)a3);
    _os_log_impl(&dword_25112A000, v47, (os_log_type_t)v157, "[%s]: [%s - %s]: Failed after %fs: %@.", (uint8_t *)v49, 0x34u);
    sub_2511484D0(0, (unint64_t *)&qword_26B217FD0, 255, (uint64_t (*)(uint64_t))sub_251169960, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v76, -1, -1);
    uint64_t v77 = v159;
    swift_arrayDestroy();
    MEMORY[0x253397D40](v77, -1, -1);
    MEMORY[0x253397D40](v49, -1, -1);

    uint64_t v58 = v173;
    uint64_t v78 = v163;
    v163 = (void (*)(void, void))*((void *)v174 + 1);
    v163(v78, v173);
    uint64_t v59 = v168;
    BOOL v60 = v175;
    uint64_t v45 = (uint64_t)v171;
    unint64_t v57 = v160;
  }
  else
  {
    uint64_t v56 = v47;
    unint64_t v57 = v44;
    swift_release_n();
    sub_25114589C((uint64_t)v191);
    sub_25114589C((uint64_t)&v185);
    sub_25114589C((uint64_t)v183);
    sub_25113F858((id)a3);
    sub_25113F858((id)a3);

    uint64_t v58 = v173;
    v163 = (void (*)(void, void))*((void *)v174 + 1);
    v163(v16, v173);
    uint64_t v59 = v46;
    BOOL v60 = v175;
  }
  uint64_t v80 = *(void *)(v59 + 80);
  uint64_t v79 = *(void *)(v59 + 88);
  uint64_t v81 = swift_getObjectType();
  sub_25113FC9C(v45 + 64, a3, v81, v79);
  if (*(double *)&v60 == 0.0)
  {
    v175 = 0;
    uint64_t v97 = v170;
  }
  else
  {
    double v179 = *(double *)&v60;
    id v82 = v60;
    sub_251131944(0, (unint64_t *)&qword_26B218198);
    int v83 = swift_dynamicCast();
    v175 = 0;
    if (v83)
    {

      unint64_t v84 = v183[1];
      uint64_t v161 = v183[0];
      uint64_t v85 = v162;
      v165(v164, v57);
      sub_251145778(v45, (uint64_t)v191);
      swift_retain_n();
      swift_bridgeObjectRetain();
      unint64_t v86 = sub_2511C9280();
      os_log_type_t v87 = sub_2511C9760();
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v88 = swift_slowAlloc();
        uint64_t v166 = v79;
        uint64_t v89 = v88;
        double v167 = COERCE_DOUBLE(swift_slowAlloc());
        os_log_t v177 = *(os_log_t *)&v167;
        *(_DWORD *)uint64_t v89 = 136315650;
        sub_25112FD4C((uint64_t)v193, (uint64_t)&v185);
        __swift_project_boxed_opaque_existential_1(&v185, v187);
        swift_getDynamicType();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v185);
        uint64_t v90 = sub_2511C9DD0();
        uint64_t v185 = sub_251140E4C(v90, v91, (uint64_t *)&v177);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        sub_25114589C((uint64_t)v191);
        *(_WORD *)(v89 + 12) = 2080;
        uint64_t v185 = v80;
        uint64_t v186 = v166;
        sub_251131944(0, &qword_26B217E48);
        swift_unknownObjectRetain();
        uint64_t v92 = sub_2511C94C0();
        uint64_t v185 = sub_251140E4C(v92, v93, (uint64_t *)&v177);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v89 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v185 = sub_251140E4C(v161, v84, (uint64_t *)&v177);
        sub_2511C98A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25112A000, v86, v87, "Work item of type %s associated with a Planner (%s) that expects a %s", (uint8_t *)v89, 0x20u);
        os_log_t v94 = *(os_log_t *)&v167;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v94, -1, -1);
        MEMORY[0x253397D40](v89, -1, -1);

        uint64_t v95 = v173;
        uint64_t v96 = v85;
      }
      else
      {
        sub_25114589C((uint64_t)v191);
        swift_bridgeObjectRelease();
        swift_release_n();

        swift_bridgeObjectRelease();
        uint64_t v96 = v85;
        uint64_t v95 = v58;
      }
      v163(v96, v95);
      uint64_t v97 = v170;
    }
    else
    {

      uint64_t v98 = v161;
      v165(v164, v57);
      sub_251145778(v45, (uint64_t)v191);
      swift_retain_n();
      long long v99 = sub_2511C9280();
      os_log_type_t v100 = sub_2511C9760();
      int v101 = v100;
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v102 = v79;
        uint64_t v103 = swift_slowAlloc();
        double v167 = COERCE_DOUBLE(swift_slowAlloc());
        *(double *)v183 = v167;
        *(_DWORD *)uint64_t v103 = 136315394;
        LODWORD(v166) = v101;
        sub_25112FD4C((uint64_t)v193, (uint64_t)&v185);
        __swift_project_boxed_opaque_existential_1(&v185, v187);
        swift_getDynamicType();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v185);
        uint64_t v104 = sub_2511C9DD0();
        uint64_t v185 = sub_251140E4C(v104, v105, v183);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        sub_25114589C((uint64_t)v191);
        *(_WORD *)(v103 + 12) = 2080;
        uint64_t v185 = v80;
        uint64_t v186 = v102;
        sub_251131944(0, &qword_26B217E48);
        swift_unknownObjectRetain();
        uint64_t v106 = sub_2511C94C0();
        uint64_t v185 = sub_251140E4C(v106, v107, v183);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25112A000, v99, (os_log_type_t)v166, "Caught an unexpected exception handling failure of work item of type %s associated with %s", (uint8_t *)v103, 0x16u);
        os_log_t v108 = *(os_log_t *)&v167;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v108, -1, -1);
        MEMORY[0x253397D40](v103, -1, -1);
      }
      else
      {
        sub_25114589C((uint64_t)v191);
        swift_release_n();
      }

      v163(v98, v58);
      uint64_t v97 = v170;
    }
    a3 = (uint64_t)v172;
  }
  uint64_t v109 = v169;
  *(unsigned char *)(v169 + 24) = 1;
  unint64_t v110 = *(void *)(v109 + 40);
  if (v110 >> 62) {
    goto LABEL_77;
  }
  uint64_t v111 = *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v111)
  {
LABEL_37:
    uint64_t v112 = *(void *)(v97 + 24);
    unint64_t v113 = v110 & 0xC000000000000001;
    a3 = 4;
    uint64_t v173 = v111;
    while (1)
    {
      uint64_t v120 = a3 - 4;
      if (v113)
      {
        uint64_t v121 = MEMORY[0x2533971C0](a3 - 4, v110);
        uint64_t v122 = v121;
        uint64_t v123 = a3 - 3;
        if (__OFADD__(v120, 1)) {
          goto LABEL_74;
        }
      }
      else
      {
        uint64_t v122 = *(void *)(v110 + 8 * a3);
        uint64_t v121 = swift_retain();
        uint64_t v123 = a3 - 3;
        if (__OFADD__(v120, 1))
        {
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          swift_bridgeObjectRetain_n();
          uint64_t v111 = sub_2511C9AC0();
          swift_bridgeObjectRelease();
          if (!v111) {
            break;
          }
          goto LABEL_37;
        }
      }
      if (v112 < *(void *)(v122 + 24))
      {
        v174 = v156;
        MEMORY[0x270FA5388](v121);
        v156[-16] = 0;
        unint64_t v114 = v113;
        unint64_t v115 = v110;
        unint64_t v117 = v116 + 4;
        uint64_t v97 = (uint64_t)&v116[9];
        os_unfair_lock_lock(v116 + 9);
        uint64_t v118 = (uint64_t)v117;
        uint64_t v119 = v175;
        sub_25114358C(v118);
        v175 = v119;
        unint64_t v110 = v115;
        unint64_t v113 = v114;
        os_unfair_lock_unlock((os_unfair_lock_t)v97);
        swift_release();
        uint64_t v111 = v173;
      }
      else
      {
        swift_release();
      }
      ++a3;
      if (v123 == v111)
      {
        swift_bridgeObjectRelease();
        sub_25113F858(v172);
        goto LABEL_48;
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_25113F858((id)a3);
LABEL_49:
  uint64_t v124 = v171[11];
  uint64_t v125 = v171[12];
  __swift_project_boxed_opaque_existential_1(v171 + 8, v124);
  long long v126 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v125 + 24))(v191, v124, v125);
  uint64_t v127 = v191[1];
  MEMORY[0x270FA5388](v126);
  *(void *)&v156[-32] = v128;
  *(void *)&v156[-24] = v127;
  uint64_t v130 = (uint64_t)&v129[4];
  long long v131 = v129 + 9;
  id v132 = v172;
  *(void *)&v156[-16] = v133;
  *(void *)&v156[-8] = v132;
  os_unfair_lock_lock(v129 + 9);
  unint64_t v110 = (unint64_t)v175;
  sub_251143164(v130);
  os_unfair_lock_unlock(v131);
  swift_bridgeObjectRelease();
  os_unfair_lock_lock(v131);
  sub_25114314C(v130, (BOOL *)v191);
  os_unfair_lock_unlock(v131);
  if (LOBYTE(v191[0]) != 1) {
    return;
  }
  os_unfair_lock_lock(v131);
  sub_251143598(v130, v191);
  os_unfair_lock_unlock(v131);
  uint64_t v134 = (uint64_t *)(v169 + 40);
  if (LOBYTE(v191[0]) != 1)
  {
    swift_retain();
    uint64_t v147 = sub_25113F890(v134, v97);
    swift_release();
    if ((unint64_t)*v134 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v148 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (v148 >= v147) {
        goto LABEL_71;
      }
    }
    else
    {
      uint64_t v148 = *(void *)((*v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v148 >= v147)
      {
LABEL_71:
        sub_25113F878(v147, v148);
        return;
      }
    }
    __break(1u);
    return;
  }
  uint64_t v135 = *v134;
  if (!((unint64_t)*v134 >> 62))
  {
    a3 = *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a3) {
      goto LABEL_53;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain_n();
  a3 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_80;
  }
LABEL_53:
  uint64_t v136 = 0;
  while (1)
  {
    if ((v135 & 0xC000000000000001) != 0)
    {
      uint64_t v137 = MEMORY[0x2533971C0](0, v135);
    }
    else
    {
      if (!*(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_75;
      }
      uint64_t v137 = *(void *)(v135 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v138 = *(os_unfair_lock_s **)(v137 + 16);
    uint64_t v97 = (uint64_t)&v138[4];
    uint64_t v139 = v138 + 9;
    os_unfair_lock_lock(v138 + 9);
    sub_25114314C(v97, (BOOL *)v191);
    os_unfair_lock_unlock(v139);
    if (LOBYTE(v191[0]) != 1) {
      break;
    }
    os_unfair_lock_lock(v139);
    sub_2511C3FAC((void *)v97, v191);
    os_unfair_lock_unlock(v139);
    a3 = v191[0];
    swift_release();
    uint64_t v140 = *v134;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v134 = v140;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v140 < 0 || (v140 & 0x4000000000000000) != 0)
    {
      uint64_t v140 = sub_2511C047C(v140);
      *uint64_t v134 = v140;
    }
    uint64_t v142 = v140 & 0xFFFFFFFFFFFFFF8;
    uint64_t v143 = *(void *)(v142 + 16);
    if (!v143) {
      goto LABEL_76;
    }
    uint64_t v97 = v143 - 1;
    uint64_t v144 = v142 + 32;
    memmove((void *)v144, (const void *)(v144 + 8), 8 * (v143 - 1));
    *(void *)(v144 - 16) = v97;
    sub_2511C95C0();
    swift_release();
    swift_release();
    uint64_t v135 = *v134;
    if ((unint64_t)*v134 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v146 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      uint64_t v136 = a3;
      if (!v146)
      {
LABEL_68:
        swift_bridgeObjectRelease();
        uint64_t v136 = a3;
        goto LABEL_73;
      }
    }
    else
    {
      uint64_t v145 = *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v136 = a3;
      if (!v145) {
        goto LABEL_68;
      }
    }
  }
  swift_release();
  if (!v136) {
    return;
  }
LABEL_73:
  v149 = (uint64_t *)v169;
  swift_retain_n();
  swift_release();
  uint64_t *v149 = v136;
  uint64_t v150 = v168;
  uint64_t v151 = *(void *)(v168 + 88);
  uint64_t v152 = swift_getObjectType();
  uint64_t v153 = *(void *)(v150 + 96);
  v154 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v151 + 56);
  uint64_t v155 = swift_retain();
  v154(v155, v153, v152, v151);
  swift_release_n();
}

void sub_25113F858(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

id sub_25113F868(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

uint64_t sub_25113F878(uint64_t a1, uint64_t a2)
{
  return sub_25114491C(a1, a2, (void (*)(void))type metadata accessor for WorkCriteriaRecord.Epoch);
}

uint64_t sub_25113F890(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_25113FBAC(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (v9 != v22) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        uint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0) {
          break;
        }
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        if (*(void *)(v12 + 8 * i) != a2) {
          goto LABEL_11;
        }
LABEL_31:
        uint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_2511C9AC0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v18) {
          return v6;
        }
      }
      uint64_t v19 = MEMORY[0x2533971C0](i - 4);
      swift_unknownObjectRelease();
      if (v19 == a2) {
        goto LABEL_31;
      }
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_31;
      }
      uint64_t v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = MEMORY[0x2533971C0](v6, *a1);
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v14 = *(void *)(v9 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)(v9 + 8 * v6 + 32);
        swift_retain();
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_16;
        }
      }
      uint64_t v14 = MEMORY[0x2533971C0](i - 4, v9);
      uint64_t v9 = *a1;
LABEL_19:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
      {
        uint64_t v9 = sub_2511C047C(v9);
        *a1 = v9;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      sub_2511C95C0();
      uint64_t v9 = *a1;
      int v16 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v16 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
      {
        uint64_t v9 = sub_2511C047C(v9);
        *a1 = v9;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      sub_2511C95C0();
      goto LABEL_30;
    }
    return v6;
  }
  unint64_t v20 = *a1;
  if (!(v20 >> 62)) {
    return *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_25113FBAC(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x2533971C0](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_25113FC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_2511C9890();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v23 - v14;
  sub_25112FD4C(a1, (uint64_t)v25);
  sub_251131944(0, (unint64_t *)&qword_26B217E58);
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 48))(v15, v24, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  }
  else
  {
    v17(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v25[0] = AssociatedTypeWitness;
    swift_getMetatypeMetadata();
    uint64_t v19 = sub_2511C94C0();
    uint64_t v21 = v20;
    sub_2511C7FC0();
    swift_allocError();
    *uint64_t v22 = v19;
    v22[1] = v21;
    return swift_willThrow();
  }
}

uint64_t sub_25113FF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>, double a4@<D0>)
{
  uint64_t v5 = v4;
  long long v126 = a3;
  uint64_t v9 = sub_2511C92A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v131 = (char *)&v118 - v14;
  uint64_t v15 = (void *)v4[12];
  swift_retain();
  swift_retain();
  char v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_251141ECC(v16, a1, a2, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v125 = a1;
  if (*(void *)(a1 + 8))
  {
    uint64_t v127 = *(void *)(a1 + 8);
    swift_retain();
  }
  else
  {
    unint64_t v18 = sub_2511382C8(MEMORY[0x263F8EE78]);
    type metadata accessor for InputSignalAnchorSet();
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v18;
  }
  uint64_t v19 = v17[2];
  uint64_t v128 = a2;
  long long v129 = v5;
  if (!v19)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = v5[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v27 + 40))(ObjectType, v27);
    swift_retain_n();
    uint64_t v29 = sub_2511C9280();
    int v30 = sub_2511C9740();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      LODWORD(v131) = v30;
      uint64_t v122 = v9;
      uint64_t v123 = v15;
      uint64_t v121 = v10;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      *(void *)&long long v147 = v130;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v124 = (uint8_t *)v5[6];
      uint64_t v32 = v5[9];
      *(void *)&long long v136 = 60;
      *((void *)&v136 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      if (!v32) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      *(void *)&long long v136 = sub_251140E4C(v136, *((unint64_t *)&v136 + 1), (uint64_t *)&v147);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      if (v123[5])
      {
        uint64_t v101 = v123[4];
        unint64_t v102 = v123[5];
      }
      else
      {
        uint64_t v101 = v123[2];
        unint64_t v102 = v123[3];
        swift_bridgeObjectRetain();
      }
      uint64_t v104 = v121;
      uint64_t v103 = v122;
      uint64_t v105 = v130;
      swift_bridgeObjectRetain();
      *(void *)&long long v136 = sub_251140E4C(v101, v102, (uint64_t *)&v147);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v29, (os_log_type_t)v131, "%s:%s: Updated anchor has no relevant changes; ignoring.",
        (uint8_t *)v31,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v105, -1, -1);
      MEMORY[0x253397D40](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v104 + 8))(v13, v103);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    uint64_t v53 = MEMORY[0x263F8EE78];
    uint64_t v54 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v54) {
      goto LABEL_27;
    }
LABEL_66:
    uint64_t v56 = (void *)MEMORY[0x263F8EE80];
LABEL_67:
    uint64_t v106 = sub_2511415A4((uint64_t)v56);
    swift_bridgeObjectRelease();
    uint64_t v107 = v125;
    uint64_t v108 = v128;
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v107 + 8) = v108;
    if (v54)
    {
      sub_2511435A4(v107, v108, (uint64_t)v106, (uint64_t)&v136, a4);
      swift_release();
      uint64_t result = swift_release();
      long long v110 = v137;
      uint64_t v111 = v138;
      uint64_t v112 = v141;
      uint64_t v113 = v142;
      long long v114 = v139;
      long long v115 = v140;
      long long v116 = v143;
      unint64_t v117 = v126;
      *long long v126 = v136;
      v117[1] = v110;
      *((void *)v117 + 4) = v111;
      *(_OWORD *)((char *)v117 + 40) = v114;
      *(_OWORD *)((char *)v117 + 56) = v115;
      *((void *)v117 + 9) = v112;
      *((void *)v117 + 10) = v113;
      *(_OWORD *)((char *)v117 + 88) = v116;
    }
    else
    {
      swift_release();
      sub_2511C3E28(v107, v108, (uint64_t)v126);
      return swift_release();
    }
    return result;
  }
  uint64_t v130 = (uint64_t)v17;
  uint64_t v20 = v5[3];
  uint64_t v21 = swift_getObjectType();
  uint64_t v22 = v131;
  (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v21, v20);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2511C9280();
  int v24 = sub_2511C9770();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    int v119 = v24;
    os_log_t v120 = v23;
    uint64_t v123 = v15;
    int v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    *(void *)&long long v147 = v118;
    uint64_t v124 = v25;
    *(_DWORD *)int v25 = 136315650;
    uint64_t v26 = v5[9];
    *(void *)&long long v136 = 60;
    *((void *)&v136 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    if (!v26) {
      swift_bridgeObjectRetain();
    }
    long long v33 = v124;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    *(void *)&long long v136 = sub_251140E4C(v136, *((unint64_t *)&v136 + 1), (uint64_t *)&v147);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v33 + 6) = 2080;
    uint64_t v15 = v123;
    if (v123[5])
    {
      uint64_t v34 = v123[4];
      unint64_t v35 = v123[5];
    }
    else
    {
      uint64_t v34 = v123[2];
      unint64_t v35 = v123[3];
      swift_bridgeObjectRetain();
    }
    uint64_t v36 = v124;
    swift_bridgeObjectRetain();
    *(void *)&long long v136 = sub_251140E4C(v34, v35, (uint64_t *)&v147);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v36 + 11) = 2080;
    uint64_t v37 = v130;
    int64_t v38 = *(void *)(v130 + 16);
    uint64_t v39 = MEMORY[0x263F8EE78];
    if (v38)
    {
      uint64_t v121 = v10;
      uint64_t v122 = v9;
      *(void *)&long long v144 = MEMORY[0x263F8EE78];
      sub_251141A94(0, v38, 0);
      uint64_t v39 = v144;
      long long v40 = (uint64_t *)(v37 + 56);
      do
      {
        uint64_t v41 = *v40;
        *(void *)&long long v136 = 0;
        *((void *)&v136 + 1) = 0xE000000000000000;
        if (!v41) {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v42 = v136;
        *(void *)&long long v144 = v39;
        unint64_t v44 = *(void *)(v39 + 16);
        unint64_t v43 = *(void *)(v39 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_251141A94(v43 > 1, v44 + 1, 1);
          uint64_t v39 = v144;
        }
        v40 += 4;
        *(void *)(v39 + 16) = v44 + 1;
        *(_OWORD *)(v39 + 16 * v44 + 32) = v42;
        --v38;
      }
      while (v38);
      uint64_t v10 = v121;
      uint64_t v9 = v122;
      uint64_t v15 = v123;
    }
    uint64_t v45 = v124;
    *(void *)&long long v136 = v39;
    sub_251130900(0, (unint64_t *)&qword_26B217F10, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_251141C40();
    uint64_t v46 = sub_2511C9460();
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    *(void *)&long long v136 = sub_251140E4C(v46, v48, (uint64_t *)&v147);
    sub_2511C98A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v49 = v120;
    _os_log_impl(&dword_25112A000, v120, (os_log_type_t)v119, "%s:%s: Updated anchor has relevant changes for input signals (%s), requesting work plans.", v45, 0x20u);
    uint64_t v50 = v118;
    swift_arrayDestroy();
    MEMORY[0x253397D40](v50, -1, -1);
    MEMORY[0x253397D40](v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v131, v9);
    uint64_t v5 = v129;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
  }
  uint64_t v51 = v5[11];
  uint64_t v52 = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 40))(v15, v128, v127, v52, v51);
  swift_getAssociatedTypeWitness();
  sub_251131944(0, (unint64_t *)&qword_26B217E58);
  uint64_t v53 = sub_2511C9A80();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(v53 + 16);
  if (!v54) {
    goto LABEL_66;
  }
LABEL_27:
  uint64_t v55 = v53 + 32;
  uint64_t v124 = (uint8_t *)v53;
  swift_bridgeObjectRetain_n();
  uint64_t v56 = (void *)MEMORY[0x263F8EE80];
  unint64_t v57 = (char *)v54;
  uint64_t v130 = v54;
  while (1)
  {
    long long v131 = v57;
    sub_25112FD4C(v55, (uint64_t)&v136);
    uint64_t v60 = *((void *)&v137 + 1);
    uint64_t v61 = v138;
    __swift_project_boxed_opaque_existential_1(&v136, *((uint64_t *)&v137 + 1));
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 24))(&v133, v60, v61);
    if (v56[2] && (unint64_t v62 = sub_251141138(v133, *((uint64_t *)&v133 + 1), v134), (v63 & 1) != 0))
    {
      sub_25112FD4C(v56[7] + 40 * v62, (uint64_t)&v144);
    }
    else
    {
      uint64_t v146 = 0;
      long long v144 = 0u;
      long long v145 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v145 + 1))
    {
      sub_251142FA4((uint64_t)&v144, &qword_26B217E60, (unint64_t *)&qword_26B217E58, (uint64_t)&protocol descriptor for WorkPlan);
      uint64_t v80 = *((void *)&v137 + 1);
      uint64_t v81 = v138;
      __swift_project_boxed_opaque_existential_1(&v136, *((uint64_t *)&v137 + 1));
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v81 + 24))(&v144, v80, v81);
      long long v82 = v144;
      uint64_t v83 = v145;
      sub_25112FD4C((uint64_t)&v136, (uint64_t)&v147);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v133 = v56;
      unint64_t v86 = sub_251141138(v82, *((uint64_t *)&v82 + 1), v83);
      uint64_t v87 = v56[2];
      BOOL v88 = (v85 & 1) == 0;
      uint64_t v89 = v87 + v88;
      if (__OFADD__(v87, v88)) {
        goto LABEL_71;
      }
      char v90 = v85;
      if (v56[3] < v89)
      {
        sub_2511416C0(v89, isUniquelyReferenced_nonNull_native);
        unint64_t v91 = sub_251141138(v82, *((uint64_t *)&v82 + 1), v83);
        if ((v90 & 1) != (v92 & 1)) {
          goto LABEL_74;
        }
        unint64_t v86 = v91;
        uint64_t v56 = (void *)v133;
        if ((v90 & 1) == 0) {
          goto LABEL_56;
        }
LABEL_52:
        uint64_t v97 = v56[7] + 40 * v86;
        __swift_destroy_boxed_opaque_existential_1(v97);
        sub_25112F14C(&v147, v97);
LABEL_58:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v56 = (void *)v133;
        if (v85) {
          goto LABEL_52;
        }
      }
      else
      {
        sub_251188B98();
        uint64_t v56 = (void *)v133;
        if (v90) {
          goto LABEL_52;
        }
      }
LABEL_56:
      v56[(v86 >> 6) + 8] |= 1 << v86;
      uint64_t v98 = v56[6] + 24 * v86;
      *(_OWORD *)uint64_t v98 = v82;
      *(void *)(v98 + 16) = v83;
      sub_25112F14C(&v147, v56[7] + 40 * v86);
      uint64_t v99 = v56[2];
      BOOL v95 = __OFADD__(v99, 1);
      uint64_t v100 = v99 + 1;
      if (v95) {
        goto LABEL_73;
      }
      v56[2] = v100;
      swift_bridgeObjectRetain();
      goto LABEL_58;
    }
    sub_25112F14C(&v144, (uint64_t)&v147);
    uint64_t v64 = *((void *)&v137 + 1);
    uint64_t v65 = v138;
    __swift_project_boxed_opaque_existential_1(&v136, *((uint64_t *)&v137 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v65 + 24))(v135, v64, v65);
    uint64_t v67 = v135[0];
    uint64_t v66 = v135[1];
    uint64_t v68 = v135[2];
    uint64_t v69 = v148;
    uint64_t v70 = v149;
    __swift_project_boxed_opaque_existential_1(&v147, v148);
    sub_2511AE258((uint64_t)&v136, v69, v70, (uint64_t *)&v144);
    sub_25112F14C(&v144, (uint64_t)&v133);
    char v71 = swift_isUniquelyReferenced_nonNull_native();
    id v132 = v56;
    unint64_t v73 = sub_251141138(v67, v66, v68);
    uint64_t v74 = v56[2];
    BOOL v75 = (v72 & 1) == 0;
    uint64_t v76 = v74 + v75;
    if (__OFADD__(v74, v75)) {
      break;
    }
    char v77 = v72;
    if (v56[3] >= v76)
    {
      if (v71)
      {
        uint64_t v56 = v132;
        if ((v72 & 1) == 0) {
          goto LABEL_48;
        }
      }
      else
      {
        sub_251188B98();
        uint64_t v56 = v132;
        if ((v77 & 1) == 0) {
          goto LABEL_48;
        }
      }
    }
    else
    {
      sub_2511416C0(v76, v71);
      unint64_t v78 = sub_251141138(v67, v66, v68);
      if ((v77 & 1) != (v79 & 1)) {
        goto LABEL_74;
      }
      unint64_t v73 = v78;
      uint64_t v56 = v132;
      if ((v77 & 1) == 0)
      {
LABEL_48:
        v56[(v73 >> 6) + 8] |= 1 << v73;
        unint64_t v93 = (uint64_t *)(v56[6] + 24 * v73);
        *unint64_t v93 = v67;
        v93[1] = v66;
        v93[2] = v68;
        sub_25112F14C(&v133, v56[7] + 40 * v73);
        uint64_t v94 = v56[2];
        BOOL v95 = __OFADD__(v94, 1);
        uint64_t v96 = v94 + 1;
        if (v95) {
          goto LABEL_72;
        }
        v56[2] = v96;
        swift_bridgeObjectRetain();
        goto LABEL_29;
      }
    }
    uint64_t v58 = v56[7] + 40 * v73;
    __swift_destroy_boxed_opaque_existential_1(v58);
    sub_25112F14C(&v133, v58);
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
LABEL_30:
    uint64_t v54 = v130;
    uint64_t v59 = v131;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v136);
    v55 += 40;
    unint64_t v57 = v59 - 1;
    if (!v57)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_67;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

HealthOrchestration::WorkPlanIdentifier __swiftcall WorkPlanIdentifier.init(domain:code:)(Swift::String domain, Swift::Int code)
{
  *uint64_t v2 = domain;
  v2[1]._countAndFlagsBits = code;
  result.domain = domain;
  result.code = code;
  return result;
}

uint64_t sub_251140E4C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_251140F20(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2511410DC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2511410DC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_251140F20(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2511C98B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_2511412C0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2511C99E0();
  if (!v8)
  {
    sub_2511C9AA0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2511C9B10();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2511410DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_251141138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  sub_2511C9D50();
  uint64_t v6 = sub_2511C9D80();

  return sub_2511411DC(a1, a2, a3, v6);
}

unint64_t sub_2511411DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      uint64_t v13 = (void *)(v12 + 24 * v7);
      uint64_t v14 = v13[2];
      BOOL v15 = *v13 == a1 && v13[1] == a2;
      if (v15 || (sub_2511C9CA0()) && v14 == a3) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_2511412C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_251141358(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25117E9B0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25117E9B0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_251141358(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2511414D0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2511C9970();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2511C9AA0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2511C9530();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2511C9B10();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2511C9AA0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_2511414D0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_251141558(0, &qword_26B218180, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_251141558(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_2511415A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_251143014(0, &qword_26B218140, (unint64_t *)&qword_26B217E58, (uint64_t)&protocol descriptor for WorkPlan, MEMORY[0x263F8E0F8]);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_251141CBC((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_25112EB80();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2511416C0(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_251141A14();
  char v38 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v36) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 24 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = v22[2];
    uint64_t v26 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v38)
    {
      sub_25112F14C(v26, (uint64_t)v39);
    }
    else
    {
      sub_25112FD4C((uint64_t)v26, (uint64_t)v39);
      swift_bridgeObjectRetain();
    }
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    sub_2511C94F0();
    swift_bridgeObjectRelease();
    sub_2511C9D50();
    uint64_t result = sub_2511C9D80();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    BOOL v15 = (void *)(*(void *)(v7 + 48) + 24 * v14);
    *BOOL v15 = v24;
    v15[1] = v23;
    v15[2] = v25;
    uint64_t result = sub_25112F14C(v39, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v35;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

void sub_251141A14()
{
  if (!qword_26B218070)
  {
    sub_251131944(255, (unint64_t *)&qword_26B217E58);
    sub_2511453CC();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218070);
    }
  }
}

uint64_t sub_251141A94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251141AB4(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251141AB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218150, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

unint64_t sub_251141C40()
{
  unint64_t result = qword_26B217F20;
  if (!qword_26B217F20)
  {
    sub_2511308B4(255, (unint64_t *)&qword_26B217F10, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217F20);
  }
  return result;
}

uint64_t sub_251141CBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_25112FD4C(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_25112F14C(v21, (uint64_t)v22);
    unint64_t result = sub_25112F14C(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_251141ECC(NSObject *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v20 = a4;
  Class isa = a1[2].isa;
  if (!isa) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v7 = a1 + 4;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_251142230(v7, a2, a3, v20, (uint64_t)&v17);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    uint64_t v10 = v18;
    if (v18)
    {
      uint64_t v11 = v17;
      long long v16 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_251142020(0, v8[2] + 1, 1, v8);
      }
      unint64_t v13 = v8[2];
      unint64_t v12 = v8[3];
      if (v13 >= v12 >> 1) {
        uint64_t v8 = sub_251142020((void *)(v12 > 1), v13 + 1, 1, v8);
      }
      v8[2] = v13 + 1;
      unint64_t v9 = &v8[4 * v13];
      v9[4] = v11;
      v9[5] = v10;
      *((_OWORD *)v9 + 3) = v16;
    }
    v7 += 5;
    Class isa = (Class)((char *)isa - 1);
  }
  while (isa);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_251142020(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_25113B21C(0, &qword_26B218990);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25114213C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25114213C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251142230@<X0>(NSObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  void (*v21)(uint64_t *__return_ptr, uint64_t, Class);
  unint64_t v22;
  char v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  unint64_t v28;
  char v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t ObjectType;
  void (*v36)(uint64_t, uint64_t);
  char *v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  char *v43;
  char *v44;
  NSObject *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  Class v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  NSObject *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  char *v82;
  os_log_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unsigned char v91[40];
  uint64_t v92[5];
  long long v93;
  long long v94;
  uint64_t v95;
  uint64_t v96[3];
  uint64_t v97;
  uint64_t v98;
  long long v99;
  long long v100;
  uint64_t v101;
  uint64_t v102;

  unint64_t v6 = v5;
  uint64_t v12 = sub_2511C92A0();
  unint64_t v84 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v82 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v81 = (char *)&v78 - v16;
  uint64_t v17 = *(void *)(a2 + 8);
  char v85 = a5;
  unint64_t v86 = a1;
  if (v17)
  {
    uint64_t v80 = a4;
    uint64_t v83 = v15;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t isa = (uint64_t)a1[3].isa;
    Class v20 = a1[4].isa;
    __swift_project_boxed_opaque_existential_1(a1, isa);
    int64_t v21 = (void (*)(uint64_t *__return_ptr, uint64_t, Class))*((void *)v20 + 2);
    swift_bridgeObjectRetain();
    v21(v96, isa, v20);
    if (*(void *)(v18 + 16) && (uint64_t v22 = sub_25112F2DC(v96[0], v96[1], v96[2], v97), (v23 & 1) != 0))
    {
      sub_25112FD4C(*(void *)(v18 + 56) + 40 * v22, (uint64_t)&v99);
    }
    else
    {
      uint64_t v101 = 0;
      uint64_t v99 = 0u;
      uint64_t v100 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = v5;
    a5 = v85;
    uint64_t v24 = v83;
    a4 = v80;
  }
  else
  {
    uint64_t v24 = v15;
    uint64_t v101 = 0;
    uint64_t v99 = 0u;
    uint64_t v100 = 0u;
  }
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v26 = (uint64_t)v86[3].isa;
  uint64_t v27 = v86[4].isa;
  __swift_project_boxed_opaque_existential_1(v86, v26);
  (*((void (**)(uint64_t *__return_ptr, uint64_t, Class))v27 + 2))(v92, v26, v27);
  if (*(void *)(v25 + 16) && (unint64_t v28 = sub_25112F2DC(v92[0], v92[1], v92[2], v92[3]), (v29 & 1) != 0))
  {
    sub_25112FD4C(*(void *)(v25 + 56) + 40 * v28, (uint64_t)&v93);
  }
  else
  {
    BOOL v95 = 0;
    unint64_t v93 = 0u;
    uint64_t v94 = 0u;
  }
  char v30 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v94 + 1))
  {
    sub_25112F14C(&v93, (uint64_t)v96);
    unint64_t v31 = v97;
    BOOL v32 = v98;
    __swift_project_boxed_opaque_existential_1(v96, v97);
    uint64_t v33 = sub_25112D6FC((uint64_t)&v99, (uint64_t)v30, v31, v32);
    uint64_t v34 = a4[3];
    uint64_t ObjectType = swift_getObjectType();
    int64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 40);
    if (v33)
    {
      uint64_t v37 = v81;
      v36(ObjectType, v34);
      sub_25112FD4C((uint64_t)v30, (uint64_t)&v93);
      sub_251143080((uint64_t)&v99, (uint64_t)v92);
      sub_25112FD4C((uint64_t)v96, (uint64_t)v91);
      swift_retain_n();
      char v38 = sub_2511C9280();
      uint64_t v39 = sub_2511C9740();
      if (os_log_type_enabled(v38, (os_log_type_t)v39))
      {
        LODWORD(v82) = v39;
        uint64_t v83 = v38;
        uint64_t v80 = v6;
        long long v40 = swift_slowAlloc();
        char v79 = swift_slowAlloc();
        unint64_t v102 = v79;
        *(_DWORD *)long long v40 = 136316162;
        unint64_t v78 = a4[6];
        uint64_t v41 = a4[9];
        uint64_t v87 = 60;
        BOOL v88 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        sub_2511C9520();
        if (!v41) {
          swift_bridgeObjectRetain();
        }
        unint64_t v78 = v40 + 4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2511C9520();
        uint64_t v87 = sub_251140E4C(v87, v88, &v102);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        os_log_t v49 = (void *)a4[12];
        if (v49[5])
        {
          uint64_t v50 = v49[4];
          uint64_t v51 = v49[5];
        }
        else
        {
          uint64_t v50 = v49[2];
          uint64_t v51 = v49[3];
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_251140E4C(v50, v51, &v102);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 22) = 2080;
        uint64_t v55 = *((void *)&v94 + 1);
        uint64_t v56 = v95;
        __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v56 + 16))(&v87, v55, v56);
        unint64_t v57 = v90;
        if (v90)
        {
          uint64_t v58 = v89;
        }
        else
        {
          uint64_t v58 = v87;
          unint64_t v57 = swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        uint64_t v87 = sub_251140E4C(v58, v57, &v102);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        *(_WORD *)(v40 + 32) = 2080;
        sub_251143080((uint64_t)v92, (uint64_t)&v87);
        sub_251143014(0, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor, MEMORY[0x263F8D8F0]);
        char v63 = sub_2511C94C0();
        uint64_t v87 = sub_251140E4C(v63, v64, &v102);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        sub_251142FA4((uint64_t)v92, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
        *(_WORD *)(v40 + 42) = 2080;
        sub_25112FD4C((uint64_t)v91, (uint64_t)&v87);
        sub_251131944(0, qword_26B216650);
        uint64_t v65 = sub_2511C94C0();
        uint64_t v87 = sub_251140E4C(v65, v66, &v102);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
        uint64_t v67 = v83;
        _os_log_impl(&dword_25112A000, v83, (os_log_type_t)v82, "%s:%s: Anchor difference for %s %s -> (%s.", (uint8_t *)v40, 0x34u);
        uint64_t v68 = v79;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v68, -1, -1);
        MEMORY[0x253397D40](v40, -1, -1);

        (*(void (**)(char *, NSObject *))(v84 + 8))(v81, v24);
        a5 = v85;
        char v30 = v86;
      }
      else
      {
        swift_release_n();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        sub_251142FA4((uint64_t)v92, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);

        (*(void (**)(char *, NSObject *))(v84 + 8))(v37, v24);
      }
      uint64_t v69 = (uint64_t)v30[3].isa;
      uint64_t v70 = v30[4].isa;
      __swift_project_boxed_opaque_existential_1(v30, v69);
      (*((void (**)(long long *__return_ptr, uint64_t, Class))v70 + 2))(&v93, v69, v70);
      sub_251142FA4((uint64_t)&v99, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
      char v71 = *((void *)&v93 + 1);
      *(void *)a5 = v93;
      *(void *)(a5 + 8) = v71;
      *(_OWORD *)(a5 + 16) = v94;
    }
    else
    {
      unint64_t v43 = v82;
      v36(ObjectType, v34);
      unint64_t v44 = v43;
      sub_25112FD4C((uint64_t)v30, (uint64_t)&v93);
      sub_251143080((uint64_t)&v99, (uint64_t)v92);
      sub_25112FD4C((uint64_t)v96, (uint64_t)v91);
      swift_retain_n();
      uint64_t v45 = sub_2511C9280();
      uint64_t v46 = sub_2511C9740();
      if (os_log_type_enabled(v45, (os_log_type_t)v46))
      {
        LODWORD(v81) = v46;
        unint64_t v86 = v45;
        uint64_t v83 = v24;
        uint64_t v80 = v6;
        unint64_t v47 = swift_slowAlloc();
        char v79 = swift_slowAlloc();
        unint64_t v102 = v79;
        *(_DWORD *)unint64_t v47 = 136316162;
        unint64_t v48 = a4[9];
        uint64_t v87 = 60;
        BOOL v88 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        sub_2511C9520();
        if (!v48) {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2511C9520();
        uint64_t v87 = sub_251140E4C(v87, v88, &v102);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2080;
        uint64_t v52 = (void *)a4[12];
        if (v52[5])
        {
          uint64_t v53 = v52[4];
          uint64_t v54 = v52[5];
        }
        else
        {
          uint64_t v53 = v52[2];
          uint64_t v54 = v52[3];
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_251140E4C(v53, v54, &v102);
        sub_2511C98A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 22) = 2080;
        uint64_t v59 = *((void *)&v94 + 1);
        uint64_t v60 = v95;
        __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v60 + 16))(&v87, v59, v60);
        uint64_t v61 = v90;
        if (v90)
        {
          unint64_t v62 = v89;
        }
        else
        {
          unint64_t v62 = v87;
          uint64_t v61 = swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        uint64_t v87 = sub_251140E4C(v62, v61, &v102);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        *(_WORD *)(v47 + 32) = 2080;
        sub_251143080((uint64_t)v92, (uint64_t)&v87);
        sub_251143014(0, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor, MEMORY[0x263F8D8F0]);
        char v72 = sub_2511C94C0();
        uint64_t v87 = sub_251140E4C(v72, v73, &v102);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        sub_251142FA4((uint64_t)v92, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
        *(_WORD *)(v47 + 42) = 2080;
        sub_25112FD4C((uint64_t)v91, (uint64_t)&v87);
        sub_251131944(0, qword_26B216650);
        uint64_t v74 = sub_2511C94C0();
        uint64_t v87 = sub_251140E4C(v74, v75, &v102);
        sub_2511C98A0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
        uint64_t v76 = v86;
        _os_log_impl(&dword_25112A000, v86, (os_log_type_t)v81, "%s:%s: No anchor difference for %s %s -> (%s.", (uint8_t *)v47, 0x34u);
        char v77 = v79;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v77, -1, -1);
        MEMORY[0x253397D40](v47, -1, -1);

        (*(void (**)(char *, os_log_t))(v84 + 8))(v82, v83);
        sub_251142FA4((uint64_t)&v99, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
        a5 = v85;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
        sub_251142FA4((uint64_t)v92, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        swift_release_n();
        swift_release();
        (*(void (**)(char *, NSObject *))(v84 + 8))(v44, v24);
        sub_251142FA4((uint64_t)&v99, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
      }
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  }
  else
  {
    sub_251142FA4((uint64_t)&v99, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
    uint64_t result = sub_251142FA4((uint64_t)&v93, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_251142FA4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_251143014(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_251143014(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_251131944(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_251143080(uint64_t a1, uint64_t a2)
{
  sub_2511430E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2511430E4()
{
  if (!qword_26B217A30)
  {
    sub_25112F678(255, qword_26B216650);
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217A30);
    }
  }
}

uint64_t sub_25114314C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(void *)(*(void *)(result + 8) + 16) == 0;
  return result;
}

uint64_t sub_251143164(uint64_t a1)
{
  uint64_t v3 = v1[5];
  sub_2511431C0(v1[2], v1[3], v1[4], (uint64_t)v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3) {
    *(unsigned char *)(a1 + 16) = 0;
  }
  return result;
}

uint64_t sub_2511431C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *v4;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  sub_2511C9D50();
  uint64_t v9 = sub_2511C9D80();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v8 + 48);
    while (1)
    {
      uint64_t v14 = (void *)(v13 + 24 * v11);
      uint64_t v15 = v14[2];
      BOOL v16 = *v14 == a1 && v14[1] == a2;
      if (v16 || (sub_2511C9CA0()) && v15 == a3) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v23;
    uint64_t v25 = *v23;
    uint64_t *v23 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2511A7DBC();
      uint64_t v19 = v25;
    }
    uint64_t v20 = *(void *)(v19 + 48) + 24 * v11;
    long long v21 = *(_OWORD *)v20;
    uint64_t v22 = *(void *)(v20 + 16);
    *(_OWORD *)a4 = v21;
    *(void *)(a4 + 16) = v22;
    sub_2511433A0(v11);
    uint64_t *v23 = v25;
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
  }
  return result;
}

unint64_t sub_2511433A0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_2511C9910();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_2511C9D40();
        swift_bridgeObjectRetain();
        sub_2511C94F0();
        sub_2511C9D50();
        uint64_t v11 = sub_2511C9D80();
        swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(v3 + 48);
          unint64_t v14 = v13 + 24 * v2;
          uint64_t v15 = (long long *)(v13 + 24 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v14 >= (unint64_t)v15 + 24))
          {
            long long v10 = *v15;
            *(void *)(v14 + 16) = *((void *)v15 + 2);
            *(_OWORD *)unint64_t v14 = v10;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_25114358C(uint64_t result)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_251143598@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 16);
  return result;
}

uint64_t sub_2511435A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v6 = v5;
  uint64_t v7 = a2;
  uint64_t v9 = a1;
  uint64_t v10 = *(void *)(a1 + 32);
  int64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v40 = *(void *)(a1 + 32);
    uint64_t v50 = MEMORY[0x263F8EE78];
    sub_2511438B4(0, v11, 0);
    uint64_t v14 = a3 + 32;
    uint64_t v12 = v50;
    do
    {
      sub_25112FD4C(v14, (uint64_t)v46);
      uint64_t v16 = v47;
      uint64_t v15 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 24))(v49, v16, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      uint64_t v17 = v49[0];
      uint64_t v18 = v49[1];
      uint64_t v19 = v49[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2511438B4(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v50;
      }
      unint64_t v21 = *(void *)(v12 + 16);
      unint64_t v20 = *(void *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_2511438B4(v20 > 1, v21 + 1, 1);
        uint64_t v12 = v50;
      }
      *(void *)(v12 + 16) = v21 + 1;
      uint64_t v22 = (void *)(v12 + 24 * v21);
      v22[4] = v17;
      v22[5] = v18;
      v22[6] = v19;
      v14 += 40;
      --v11;
    }
    while (v11);
    uint64_t v7 = a2;
    uint64_t v9 = a1;
    uint64_t v6 = v5;
    uint64_t v10 = v40;
  }
  uint64_t v23 = sub_251143A7C(v12);
  swift_bridgeObjectRelease();
  char v24 = *(unsigned char *)(v9 + 24);
  type metadata accessor for WorkCriteriaRecord.Epoch();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 24) = v10;
  sub_2511448BC(0, &qword_26B218010);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 36) = 0;
  *(void *)(v26 + 16) = v7;
  *(void *)(v26 + 24) = v23;
  *(unsigned char *)(v26 + 32) = (v24 & 1) == 0;
  *(void *)(v25 + 16) = v26;
  uint64_t v27 = *(void *)(v9 + 32);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v9 + 32) = v29;
  swift_retain();
  uint64_t v30 = swift_retain();
  MEMORY[0x253396DE0](v30);
  if (*(void *)((*(void *)(v9 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v9 + 40) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
LABEL_13:
    sub_2511C95D0();
  sub_2511C9600();
  sub_2511C95C0();
  uint64_t v31 = *(void *)(v6 + 32);
  uint64_t v32 = *(void *)(v6 + 40);
  uint64_t v34 = *(void *)(v6 + 48);
  uint64_t v33 = *(void *)(v6 + 56);
  uint64_t v35 = *(void *)(v6 + 64);
  uint64_t v36 = *(void *)(v6 + 72);
  uint64_t v37 = swift_allocObject();
  long long v45 = *(_OWORD *)(v6 + 16);
  swift_weakInit();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v37;
  *(void *)(v38 + 24) = v25;
  *(void *)a4 = a3;
  *(void *)(a4 + 8) = v31;
  *(void *)(a4 + 16) = v32;
  *(void *)(a4 + 24) = v34;
  *(void *)(a4 + 32) = v33;
  *(void *)(a4 + 40) = v35;
  *(void *)(a4 + 48) = v36;
  *(void *)(a4 + 56) = v7;
  *(_OWORD *)(a4 + 64) = v45;
  *(double *)(a4 + 80) = a5;
  *(void *)(a4 + 88) = sub_25113569C;
  *(void *)(a4 + 96) = v38;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2511438B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2511438D4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2511438D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218118, (uint64_t)&type metadata for WorkPlanIdentifier, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251143A7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2511453CC();
  uint64_t result = sub_2511C96C0();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = *(v4 - 1);
      uint64_t v7 = *v4;
      v4 += 3;
      swift_bridgeObjectRetain();
      sub_251143B18(&v8, v5, v6, v7);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_251143B18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  sub_2511C9D50();
  uint64_t v10 = sub_2511C9D80();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v9 + 48);
    while (1)
    {
      uint64_t v15 = (void *)(v14 + 24 * v12);
      uint64_t v16 = v15[2];
      BOOL v17 = *v15 == a2 && v15[1] == a3;
      if (v17 || (sub_2511C9CA0()) && v16 == a4) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v20 = (uint64_t *)(*(void *)(*v4 + 48) + 24 * v12);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = v20[2];
    *a1 = v22;
    a1[1] = v21;
    a1[2] = v23;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_251143CF8(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v24;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    uint64_t result = 1;
    a1[2] = a4;
  }
  return result;
}

uint64_t sub_251143CF8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0) {
    goto LABEL_18;
  }
  if (a5)
  {
    sub_2511A6618();
  }
  else
  {
    if (v12 > v11)
    {
      uint64_t result = (uint64_t)sub_2511A7DBC();
      goto LABEL_18;
    }
    sub_2511A928C();
  }
  uint64_t v13 = *v5;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  sub_2511C9D50();
  uint64_t result = sub_2511C9D80();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a4 = result & ~v14;
  uint64_t v15 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v13 + 48);
    do
    {
      uint64_t v18 = (uint64_t *)(v17 + 24 * a4);
      uint64_t result = *v18;
      uint64_t v19 = v18[2];
      BOOL v20 = *v18 == v10 && v18[1] == a2;
      if (v20 || (uint64_t result = sub_2511C9CA0(), (result & 1) != 0))
      {
        if (v19 == a3) {
          goto LABEL_21;
        }
      }
      a4 = (a4 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  uint64_t v21 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v22 = (uint64_t *)(*(void *)(v21 + 48) + 24 * a4);
  *uint64_t v22 = v10;
  v22[1] = a2;
  long long v22[2] = a3;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_21:
  uint64_t result = sub_2511C9CC0();
  __break(1u);
  return result;
}

uint64_t sub_251143EB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  uint64_t v11 = sub_251144678(a1);
  type metadata accessor for WorkBarrier();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(unsigned char *)(v12 + 40) = a4;
  uint64_t v13 = *(os_unfair_lock_s **)(v11 + 16);
  uint64_t v14 = (uint64_t)&v13[4];
  uint64_t v15 = v13 + 11;
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_251144CB0(v14);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v15);
    swift_release();
    uint64_t v16 = sub_25114405C(a1);
    if (v16)
    {
      uint64_t v18 = v16;
      uint64_t v19 = v17;
      sub_251147348(0, &qword_26B218190, (uint64_t (*)(uint64_t))sub_2511AD65C, MEMORY[0x263F8E0F8]);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_2511CB450;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v18;
      *(void *)(v21 + 24) = v19;
      *(void *)(v20 + 32) = sub_25114A818;
      *(void *)(v20 + 40) = v21;
    }
    else
    {
      uint64_t v20 = sub_2511464D4(a1);
    }
    uint64_t result = swift_release();
    *a5 = v20;
  }
  return result;
}

uint64_t (*sub_25114405C(uint64_t *a1))()
{
  uint64_t v3 = *a1;
  unint64_t v4 = (unint64_t)*a1 >> 62;
  if (v4) {
    goto LABEL_29;
  }
  uint64_t v5 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
    do
    {
      uint64_t v38 = v1;
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x2533971C0](0, v3);
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          uint64_t v34 = (os_unfair_lock_s *)swift_unexpectedError();
          __break(1u);
          os_unfair_lock_unlock(v34);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = (uint64_t (*)())swift_unexpectedError();
          __break(1u);
          return result;
        }
        uint64_t v6 = *(void *)(v3 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
      uint64_t v8 = (uint64_t *)&v7[4];
      uint64_t v9 = v7 + 11;
      os_unfair_lock_lock(v7 + 11);
      sub_251144530((uint64_t)v8, &v39);
      os_unfair_lock_unlock(v9);
      if (v39 != 1) {
        goto LABEL_10;
      }
      uint64_t v36 = v6;
      os_unfair_lock_lock(v9);
      uint64_t v1 = 0;
      sub_251145034(v8, &v39);
      os_unfair_lock_unlock(v9);
      long long v35 = v39;
      uint64_t v10 = v40;
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_2511C9AC0();
        swift_bridgeObjectRelease();
        if (!v11) {
          goto LABEL_35;
        }
        swift_bridgeObjectRetain();
        uint64_t v1 = sub_2511C9AC0();
        swift_bridgeObjectRelease();
        if (!v1) {
          goto LABEL_34;
        }
      }
      else if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_10:
        swift_release();
        return 0;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2533971C0](0, v3);
        uint64_t v12 = v38;
        if (!v4) {
          goto LABEL_15;
        }
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        swift_retain();
        uint64_t v12 = v38;
        if (!v4)
        {
LABEL_15:
          if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_16;
          }
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v1 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (v1)
      {
LABEL_16:
        sub_251144C98(0, 1);
        swift_release();
        sub_251144678(a1);
        int64_t v13 = *(void *)(v10 + 16);
        uint64_t v37 = v10;
        if (v13)
        {
          uint64_t v44 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_25113CA30(0, v13, 0);
          uint64_t v14 = v10 + 32;
          uint64_t v15 = v44;
          do
          {
            sub_251146D6C(v14, (uint64_t)&v39);
            sub_251145778((uint64_t)&v41, (uint64_t)v42);
            sub_251146EDC((uint64_t)&v39);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_25113CA30(0, *(void *)(v15 + 16) + 1, 1);
              uint64_t v15 = v44;
            }
            unint64_t v17 = *(void *)(v15 + 16);
            unint64_t v16 = *(void *)(v15 + 24);
            if (v17 >= v16 >> 1)
            {
              sub_25113CA30(v16 > 1, v17 + 1, 1);
              uint64_t v15 = v44;
            }
            *(void *)(v15 + 16) = v17 + 1;
            uint64_t v18 = v15 + 136 * v17;
            *(_OWORD *)(v18 + 32) = v42[0];
            long long v19 = v42[1];
            long long v20 = v42[2];
            long long v21 = v42[4];
            *(_OWORD *)(v18 + 80) = v42[3];
            *(_OWORD *)(v18 + 96) = v21;
            *(_OWORD *)(v18 + 48) = v19;
            *(_OWORD *)(v18 + 64) = v20;
            long long v22 = v42[5];
            long long v23 = v42[6];
            long long v24 = v42[7];
            *(void *)(v18 + 160) = v43;
            *(_OWORD *)(v18 + 128) = v23;
            *(_OWORD *)(v18 + 144) = v24;
            *(_OWORD *)(v18 + 112) = v22;
            v14 += 216;
            --v13;
          }
          while (v13);
          swift_bridgeObjectRelease();
          uint64_t v12 = v38;
        }
        uint64_t v25 = *(os_unfair_lock_s **)(*(void *)(v12 + 24) + 16);
        uint64_t v26 = v25 + 4;
        uint64_t v27 = v25 + 10;
        os_unfair_lock_lock(v25 + 10);
        sub_251144C54(v26, &v39);
        os_unfair_lock_unlock(v27);
        MEMORY[0x270FA5388](v28);
        uint64_t v30 = (uint64_t)&v29[4];
        uint64_t v31 = v29 + 11;
        os_unfair_lock_lock(v29 + 11);
        sub_25114501C(v30);
        os_unfair_lock_unlock(v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v35;
        *(void *)(v32 + 32) = v37;
        *(void *)(v32 + 40) = v12;
        *(void *)(v32 + 48) = v36;
        swift_retain();
        return sub_25113D4D8;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
    }
    while (sub_2511C9AC0());
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_251144530@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  if (!*(void *)result) {
    goto LABEL_7;
  }
  int v4 = *(unsigned __int8 *)(v3 + 40);
  if (v4 == 4) {
    LOBYTE(v4) = *(unsigned char *)(result + 24);
  }
  if ((*(unsigned char *)(result + 25) & 1) != 0 || *(void *)(*(void *)(result + 16) + 16))
  {
LABEL_6:
    LOBYTE(v3) = 0;
LABEL_7:
    *a2 = v3;
    return result;
  }
  uint64_t v5 = *(void *)(result + 8);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
LABEL_18:
    LOBYTE(v3) = 1;
    goto LABEL_7;
  }
  unint64_t v7 = qword_2511CF618[(char)v4];
  uint64_t v8 = v5 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (2)
  {
    uint64_t v11 = v9 + 1;
    if (!__OFADD__(v9, 1))
    {
      sub_251146D6C(v8, (uint64_t)v12);
      unint64_t v10 = 0;
      switch(v12[0])
      {
        case 1:
          goto LABEL_11;
        case 2:
          unint64_t v10 = 2;
          goto LABEL_11;
        case 3:
          uint64_t result = sub_251146EDC((uint64_t)v12);
          goto LABEL_12;
        default:
          unint64_t v10 = 1;
LABEL_11:
          uint64_t result = sub_251146EDC((uint64_t)v12);
          if (v10 < v7)
          {
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_6;
          }
LABEL_12:
          ++v9;
          v8 += 216;
          if (v11 != v6) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          break;
      }
      goto LABEL_18;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_251144678(uint64_t *a1)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    type metadata accessor for WorkEpoch();
    uint64_t v1 = swift_allocObject();
    sub_2511448BC(0, (unint64_t *)&qword_26B218920);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8EE78];
    *(void *)(v9 + 24) = MEMORY[0x263F8EE78];
    *(void *)(v9 + 32) = v10;
    *(_WORD *)(v9 + 40) = 3;
    *(void *)(v1 + 16) = v9;
    *(_DWORD *)(v9 + 44) = 0;
    uint64_t v11 = (os_unfair_lock_s *)(v9 + 44);
    *(void *)(v9 + 16) = 0;
    uint64_t v12 = v9 + 16;
    MEMORY[0x270FA5388](v9);
    os_unfair_lock_lock(v11);
    sub_2511450C4(v12);
    os_unfair_lock_unlock(v11);
    uint64_t v13 = swift_retain();
    MEMORY[0x253396DE0](v13);
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_13:
      sub_2511C9600();
      sub_2511C95C0();
      return v1;
    }
LABEL_19:
    sub_2511C95D0();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2511C9AC0();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
  }
  else if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v1 = *(void *)(v3 + 8 * v5 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v1 = MEMORY[0x2533971C0](v5, v3);
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t v6 = *(os_unfair_lock_s **)(v1 + 16);
  unint64_t v7 = v6 + 4;
  uint64_t v8 = v6 + 11;
  os_unfair_lock_lock(v6 + 11);
  sub_2511448A8(v7, &v15);
  os_unfair_lock_unlock(v8);
  if (v15)
  {
    swift_release();
    goto LABEL_12;
  }
  return v1;
}

void *sub_2511448A8@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_2511448BC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v3 = sub_2511C99D0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_25114491C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (v23 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + v7;
    if (!__OFADD__(v9, v7)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
    unint64_t v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  uint64_t v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v9 = 1;
  }
  if (v11 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  *uint64_t v4 = MEMORY[0x2533971D0](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = v13 + 32;
  unint64_t v16 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_21:
        if (v18 < 0)
        {
LABEL_46:
          uint64_t result = sub_2511C9B10();
          __break(1u);
          return result;
        }
        long long v19 = (char *)(v15 + 8 * v3);
        if (v5 != v3 || v16 >= &v19[8 * v18]) {
          memmove(v16, v19, 8 * v18);
        }
        if (!(*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = v20 + v7;
          if (!__OFADD__(v20, v7))
          {
LABEL_27:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_2511C9AC0();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_2511C95C0();
}

uint64_t type metadata accessor for WorkEpoch()
{
  return self;
}

uint64_t sub_251144C54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WorkCriteriaRecord.Epoch()
{
  return self;
}

uint64_t sub_251144C98(uint64_t a1, uint64_t a2)
{
  return sub_25114491C(a1, a2, (void (*)(void))type metadata accessor for WorkEpoch);
}

uint64_t sub_251144CB0(uint64_t a1)
{
  return sub_251144CCC(a1, v1);
}

uint64_t sub_251144CCC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 25))
  {
    char v2 = 2;
LABEL_5:
    sub_2511B3090();
    swift_allocError();
    *uint64_t v4 = v2;
    return swift_willThrow();
  }
  if (*(void *)a1)
  {
    char v2 = 0;
    goto LABEL_5;
  }
  double Current = CFAbsoluteTimeGetCurrent();
  *(void *)a1 = a2;
  if (*(unsigned char *)(a2 + 40) == 4) {
    char v8 = *(unsigned char *)(a1 + 24);
  }
  else {
    char v8 = *(unsigned char *)(a2 + 40);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    double v11 = Current;
    uint64_t v37 = MEMORY[0x263F8EE78];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25113C61C(0, v10, 0);
    uint64_t v12 = v9 + 32;
    uint64_t v31 = v8;
    do
    {
      sub_251146D6C(v12, (uint64_t)v32);
      uint64_t v13 = v32[0];
      sub_251146D6C((uint64_t)v32, (uint64_t)&v33);
      uint64_t v14 = (double *)&v34 + 1;
      if ((_BYTE)v34)
      {
        uint64_t v14 = (double *)v35;
        if (v34 != 1) {
          uint64_t v14 = (double *)v35 + 1;
        }
      }
      *uint64_t v14 = v11 - *((double *)&v33 + 1) + *v14;
      *((double *)&v33 + 1) = v11;
      switch((char)v13)
      {
        case 3:
          swift_bridgeObjectRelease();
          char v16 = 0;
          break;
        default:
          char v15 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          char v16 = 0;
          if ((v15 & 1) == 0)
          {
            if (qword_2511CF600[v13] >= qword_2511CF618[v31]) {
              char v16 = 1;
            }
            else {
              char v16 = 2;
            }
          }
          break;
      }
      LOBYTE(v34) = v16;
      LOBYTE(v33) = v13;
      sub_251146EDC((uint64_t)v32);
      uint64_t v17 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25113C61C(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v37;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_25113C61C(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v37;
      }
      *(void *)(v17 + 16) = v19 + 1;
      uint64_t v20 = v17 + 216 * v19;
      long long v21 = v34;
      *(_OWORD *)(v20 + 32) = v33;
      *(_OWORD *)(v20 + 48) = v21;
      long long v22 = v35[0];
      long long v23 = v35[1];
      long long v24 = v35[3];
      *(_OWORD *)(v20 + 96) = v35[2];
      *(_OWORD *)(v20 + 112) = v24;
      *(_OWORD *)(v20 + 64) = v22;
      *(_OWORD *)(v20 + 80) = v23;
      long long v25 = v35[4];
      long long v26 = v35[5];
      long long v27 = v35[7];
      *(_OWORD *)(v20 + 160) = v35[6];
      *(_OWORD *)(v20 + 176) = v27;
      *(_OWORD *)(v20 + 128) = v25;
      *(_OWORD *)(v20 + 144) = v26;
      long long v28 = v35[8];
      long long v29 = v35[9];
      long long v30 = v35[10];
      *(void *)(v20 + 240) = v36;
      *(_OWORD *)(v20 + 208) = v29;
      *(_OWORD *)(v20 + 224) = v30;
      *(_OWORD *)(v20 + 192) = v28;
      v12 += 216;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v17;
  return result;
}

uint64_t sub_25114501C(uint64_t a1)
{
  return sub_25113A5C4(a1);
}

uint64_t sub_251145034@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)a1 + 25))
  {
    char v2 = 2;
  }
  else
  {
    uint64_t v3 = *a1;
    char v2 = 1;
    if (*a1)
    {
      *((unsigned char *)a1 + 25) = 1;
      uint64_t v4 = a1[1];
      a1[1] = MEMORY[0x263F8EE78];
      uint64_t v5 = *(void *)(v3 + 32);
      *a2 = *(void *)(v3 + 24);
      a2[1] = v5;
      a2[2] = v4;
      return swift_retain();
    }
  }
  sub_2511B3090();
  swift_allocError();
  *uint64_t v7 = v2;
  return swift_willThrow();
}

uint64_t sub_2511450C4(uint64_t a1)
{
  return sub_2511450E0(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_2511450E0(uint64_t a1, char a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  *(unsigned char *)(a1 + 24) = a2;
  if (*(void *)a1 && *(unsigned char *)(*(void *)a1 + 40) != 4) {
    a2 = *(unsigned char *)(*(void *)a1 + 40);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25113C61C(0, v6, 0);
    uint64_t v8 = v5 + 32;
    do
    {
      sub_251146D6C(v8, (uint64_t)v27);
      uint64_t v9 = v27[0];
      sub_251146D6C((uint64_t)v27, (uint64_t)&v28);
      int64_t v10 = (double *)&v29 + 1;
      if ((_BYTE)v29)
      {
        int64_t v10 = (double *)v30;
        if (v29 != 1) {
          int64_t v10 = (double *)v30 + 1;
        }
      }
      double *v10 = Current - *((double *)&v28 + 1) + *v10;
      *((double *)&v28 + 1) = Current;
      switch((char)v9)
      {
        case 3:
          swift_bridgeObjectRelease();
          char v12 = 0;
          break;
        default:
          char v11 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          char v12 = 0;
          if ((v11 & 1) == 0)
          {
            if (qword_2511CF600[v9] >= qword_2511CF618[a2]) {
              char v12 = 1;
            }
            else {
              char v12 = 2;
            }
          }
          break;
      }
      LOBYTE(v29) = v12;
      LOBYTE(v28) = v9;
      sub_251146EDC((uint64_t)v27);
      uint64_t v7 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25113C61C(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v32;
      }
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_25113C61C(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v32;
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 216 * v14;
      long long v16 = v29;
      *(_OWORD *)(v15 + 32) = v28;
      *(_OWORD *)(v15 + 48) = v16;
      long long v17 = v30[0];
      long long v18 = v30[1];
      long long v19 = v30[3];
      *(_OWORD *)(v15 + 96) = v30[2];
      *(_OWORD *)(v15 + 112) = v19;
      *(_OWORD *)(v15 + 64) = v17;
      *(_OWORD *)(v15 + 80) = v18;
      long long v20 = v30[4];
      long long v21 = v30[5];
      long long v22 = v30[7];
      *(_OWORD *)(v15 + 160) = v30[6];
      *(_OWORD *)(v15 + 176) = v22;
      *(_OWORD *)(v15 + 128) = v20;
      *(_OWORD *)(v15 + 144) = v21;
      long long v23 = v30[8];
      long long v24 = v30[9];
      long long v25 = v30[10];
      *(void *)(v15 + 240) = v31;
      *(_OWORD *)(v15 + 208) = v24;
      *(_OWORD *)(v15 + 224) = v25;
      *(_OWORD *)(v15 + 192) = v23;
      v8 += 216;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v7;
  return result;
}

unint64_t sub_2511453CC()
{
  unint64_t result = qword_26B217B10;
  if (!qword_26B217B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217B10);
  }
  return result;
}

unint64_t sub_251145420(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2511454B4(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ScheduledWorkPlan.matches(_:)(void *a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  BOOL v10 = v4 == a1[2] && v5 == a1[3];
  if (!v10 && (sub_2511C9CA0() & 1) == 0
    || (v6 == v8 ? (BOOL v11 = v7 == v9) : (BOOL v11 = 0), !v11 && (sub_2511C9CA0() & 1) == 0))
  {
    sub_251145778(v2, (uint64_t)v29);
    sub_251145778((uint64_t)a1, (uint64_t)v25);
    goto LABEL_18;
  }
  sub_251145778(v2, (uint64_t)v29);
  sub_251145778((uint64_t)a1, (uint64_t)v25);
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 24))(v24, v12, v13);
  uint64_t v15 = v24[0];
  uint64_t v14 = v24[1];
  uint64_t v16 = v24[2];
  uint64_t v17 = v27;
  uint64_t v18 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 24))(v23, v17, v18);
  uint64_t v19 = v23[2];
  if (v15 == v23[0] && v14 == v23[1])
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v20 = sub_2511C9CA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_18:
    sub_25114589C((uint64_t)v29);
    sub_25114589C((uint64_t)v25);
    sub_251145778(v2, (uint64_t)v24);
    sub_251145778((uint64_t)a1, (uint64_t)v23);
    goto LABEL_19;
  }
LABEL_16:
  sub_25114589C((uint64_t)v29);
  sub_25114589C((uint64_t)v25);
  sub_251145778(v2, (uint64_t)v24);
  sub_251145778((uint64_t)a1, (uint64_t)v23);
  if (v16 != v19)
  {
LABEL_19:
    char v21 = 0;
    goto LABEL_20;
  }
  swift_getObjectType();
  char v21 = sub_251146F94();
LABEL_20:
  sub_25114589C((uint64_t)v24);
  sub_25114589C((uint64_t)v23);
  return v21 & 1;
}

uint64_t sub_251145778(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for ScheduledWorkPlan(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a1 + 64;
  uint64_t v8 = a2 + 64;
  long long v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  uint64_t v10 = v9;
  BOOL v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v7, v8, v10);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v14;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_25114589C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ScheduledWorkPlan(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  swift_release();

  return swift_release();
}

uint64_t sub_251145930()
{
  return sub_251145940(*(void **)(v0 + 16), (uint64_t *)(v0 + 24), v0 + 160);
}

uint64_t sub_251145940(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v6);
  sub_25112FD4C((uint64_t)(a2 + 8), (uint64_t)v27);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  v26[0] = a2[2];
  v26[1] = v8;
  v26[2] = v9;
  void v26[3] = v10;
  _OWORD v26[4] = v11;
  v26[5] = v12;
  uint64_t v21 = a2[1];
  uint64_t v22 = *a2;
  sub_251145778((uint64_t)a2, (uint64_t)v24);
  sub_25112FD4C(a3, (uint64_t)v23);
  uint64_t v13 = swift_allocObject();
  long long v14 = v24[7];
  *(_OWORD *)(v13 + 112) = v24[6];
  *(_OWORD *)(v13 + 128) = v14;
  uint64_t v15 = v25;
  long long v16 = v24[3];
  *(_OWORD *)(v13 + 48) = v24[2];
  *(_OWORD *)(v13 + 64) = v16;
  long long v17 = v24[5];
  *(_OWORD *)(v13 + 80) = v24[4];
  *(_OWORD *)(v13 + 96) = v17;
  long long v18 = v24[1];
  *(_OWORD *)(v13 + 16) = v24[0];
  *(_OWORD *)(v13 + 32) = v18;
  *(void *)(v13 + 144) = v15;
  *(void *)(v13 + 152) = a1;
  sub_25112F14C(v23, v13 + 160);
  uint64_t v19 = *(void (**)(unsigned char *, void *, uint64_t, uint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v27, v26, v22, v21, sub_251135400, v13, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_251145ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(os_unfair_lock_s **)(result + 64);
    swift_retain();
    os_unfair_lock_lock(v6 + 9);
    sub_251147D1C((uint64_t)&v6[4]);
    os_unfair_lock_unlock(v6 + 9);
    swift_release();
    sub_25114793C(a1, a3);
    _s19HealthOrchestration15MultiDispatcherC5start6sourceyAA10WorkSource_p_tF_0(a3);
    return swift_release();
  }
  return result;
}

void _s19HealthOrchestration15MultiDispatcherC5start6sourceyAA10WorkSource_p_tF_0(void *a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 64);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 9;
  os_unfair_lock_lock(v3 + 9);
  sub_251145CDC(v4, v11);
  os_unfair_lock_unlock(v5);
  if (LOBYTE(v11[0]) == 1)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v6);
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    sub_25112FD4C((uint64_t)a1, (uint64_t)v11);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    sub_25112F14C(v11, v9 + 24);
    uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v10(sub_2511330B4, v9, v6, v7);
    swift_release();
    swift_release();
  }
}

uint64_t sub_251145CDC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (*(void *)(result + 8) >= *(void *)result || (*(unsigned char *)(result + 16) & 1) != 0)
  {
    *a2 = 0;
  }
  else
  {
    *(unsigned char *)(result + 16) = 1;
    *a2 = 1;
  }
  return result;
}

uint64_t sub_251145D08(void (*a1)(_OWORD *))
{
  return WorkQueue.fetchNextWorkPlan(completion:)(a1);
}

uint64_t WorkQueue.fetchNextWorkPlan(completion:)(void (*a1)(_OWORD *))
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 19;
  os_unfair_lock_lock(v3 + 19);
  sub_251145E38(v4, (uint64_t)v21);
  os_unfair_lock_unlock(v5);
  sub_2511462C8((uint64_t)v21, (uint64_t)v8);
  if ((void)v9)
  {
    v19[5] = v14;
    v19[6] = v15;
    v19[7] = v16;
    uint64_t v20 = v17;
    v19[1] = v10;
    void v19[2] = v11;
    v19[3] = v12;
    v19[4] = v13;
    v18[2] = v8[2];
    void v18[3] = v8[3];
    v18[4] = v8[4];
    v19[0] = v9;
    v18[0] = v8[0];
    v18[1] = v8[1];
    a1(v19);
    sub_251146EDC((uint64_t)v18);
    uint64_t v6 = v21;
  }
  else
  {
    sub_251146350((uint64_t)v21);
    uint64_t v6 = v8;
  }
  return sub_251146350((uint64_t)v6);
}

double sub_251145E38@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251145E58(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

double sub_251145E58@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_251145FEC(a1, (uint64_t)v20);
  if ((void)v21)
  {
    long long v8 = v27;
    *(_OWORD *)(a4 + 160) = v26;
    *(_OWORD *)(a4 + 176) = v8;
    *(_OWORD *)(a4 + 192) = v28;
    *(void *)(a4 + 208) = v29;
    long long v9 = v23;
    *(_OWORD *)(a4 + 96) = v22;
    *(_OWORD *)(a4 + 112) = v9;
    long long v10 = v25;
    *(_OWORD *)(a4 + 128) = v24;
    *(_OWORD *)(a4 + 144) = v10;
    long long v11 = v20[3];
    *(_OWORD *)(a4 + 32) = v20[2];
    *(_OWORD *)(a4 + 48) = v11;
    long long v12 = v21;
    *(_OWORD *)(a4 + 64) = v20[4];
    *(_OWORD *)(a4 + 80) = v12;
    double result = *(double *)v20;
    long long v14 = v20[1];
    *(_OWORD *)a4 = v20[0];
    *(_OWORD *)(a4 + 16) = v14;
  }
  else
  {
    sub_251146350((uint64_t)v20);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    long long v16 = (void *)a1[1];
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v16 = sub_2511C045C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      long long v16 = sub_2511C045C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    v16[2] = v18 + 1;
    uint64_t v19 = &v16[2 * v18];
    v19[4] = sub_25113308C;
    v19[5] = v15;
    a1[1] = (uint64_t)v16;
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 128) = 0u;
    *(_OWORD *)(a4 + 144) = 0u;
    *(_OWORD *)(a4 + 160) = 0u;
    *(_OWORD *)(a4 + 176) = 0u;
    *(_OWORD *)(a4 + 192) = 0u;
    *(void *)(a4 + 208) = 0;
  }
  return result;
}

uint64_t sub_251145FEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a2 + 208) = 0;
    *(_OWORD *)(a2 + 176) = 0u;
    *(_OWORD *)(a2 + 192) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2511C9AC0();
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = MEMORY[0x2533971C0](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = *(void *)(v3 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + 16);
  uint64_t v8 = (uint64_t)&v7[4];
  long long v9 = v7 + 11;
  os_unfair_lock_lock(v7 + 11);
  sub_251146818(v8, a2);
  os_unfair_lock_unlock(v9);

  return swift_release();
}

uint64_t sub_251146130(uint64_t a1, uint64_t a2)
{
  sub_251146D6C(a1, (uint64_t)v23);
  sub_2511462C8((uint64_t)v23, (uint64_t)v11);
  sub_2511462C8(a2, (uint64_t)v13);
  if (v12)
  {
    sub_2511462C8((uint64_t)v11, (uint64_t)v9);
    if ((void)v14)
    {
      v7[5] = v19;
      v7[6] = v20;
      v7[7] = v21;
      uint64_t v8 = v22;
      v7[1] = v15;
      void v7[2] = v16;
      v7[3] = v17;
      v7[4] = v18;
      v6[2] = v13[2];
      v6[3] = v13[3];
      v6[4] = v13[4];
      v7[0] = v14;
      v6[0] = v13[0];
      v6[1] = v13[1];
      char v3 = _s19HealthOrchestration17ScheduledWorkPlanV2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)v7);
      sub_251146EDC((uint64_t)v6);
      uint64_t v4 = sub_25114647C;
      sub_25114641C((uint64_t)v23, (uint64_t (*)(void))sub_25114647C);
      sub_251146EDC((uint64_t)v9);
    }
    else
    {
      sub_25114641C((uint64_t)v23, (uint64_t (*)(void))sub_25114647C);
      sub_251146EDC((uint64_t)v9);
      char v3 = 0;
      uint64_t v4 = sub_2511B30F4;
    }
  }
  else
  {
    sub_25114641C((uint64_t)v23, (uint64_t (*)(void))sub_25114647C);
    if ((void)v14) {
      uint64_t v4 = sub_2511B30F4;
    }
    else {
      uint64_t v4 = sub_25114647C;
    }
    if ((void)v14) {
      char v3 = 0;
    }
    else {
      char v3 = -1;
    }
  }
  sub_25114641C((uint64_t)v11, (uint64_t (*)(void))v4);
  return v3 & 1;
}

uint64_t sub_2511462C8(uint64_t a1, uint64_t a2)
{
  sub_2511463D0(0, qword_26B218240, (uint64_t)&type metadata for EnqueuedWorkPlan, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251146350(uint64_t a1)
{
  sub_2511463D0(0, qword_26B218240, (uint64_t)&type metadata for EnqueuedWorkPlan, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2511463D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25114641C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25114647C()
{
  if (!qword_26B218240[0])
  {
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, qword_26B218240);
    }
  }
}

uint64_t sub_2511464D4(uint64_t *a1)
{
  uint64_t v2 = a1 + 1;
  uint64_t v1 = (void *)a1[1];
  if (!v1[2]) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v5 = v1[4];
    uint64_t v6 = v1[5];
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v25 = sub_2511C9AC0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v25)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
        long long v37 = 0u;
        long long v38 = 0u;
        long long v35 = 0u;
        long long v36 = 0u;
        long long v34 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        long long v30 = 0u;
        long long v31 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        long long v26 = 0u;
        long long v27 = 0u;
LABEL_21:
        swift_release();
        sub_251146350((uint64_t)&v26);
        return (uint64_t)v4;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t result = swift_retain();
      if (!v9) {
        goto LABEL_20;
      }
    }
    if ((v8 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v11 = MEMORY[0x2533971C0](0, v8);
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v12 = *(os_unfair_lock_s **)(v11 + 16);
    uint64_t v13 = (uint64_t)&v12[4];
    long long v14 = v12 + 11;
    os_unfair_lock_lock(v12 + 11);
    sub_251146818(v13, (uint64_t)&v26);
    os_unfair_lock_unlock(v14);
    swift_release();
    if (!(void)v31) {
      goto LABEL_21;
    }
    v40[10] = v36;
    v40[11] = v37;
    v40[12] = v38;
    uint64_t v41 = v39;
    v40[6] = v32;
    v40[7] = v33;
    v40[8] = v34;
    v40[9] = v35;
    v40[2] = v28;
    v40[3] = v29;
    v40[4] = v30;
    v40[5] = v31;
    v40[0] = v26;
    v40[1] = v27;
    sub_251146D6C((uint64_t)v40, (uint64_t)&v26);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_251133064;
    *(void *)(v15 + 24) = v7;
    long long v16 = v37;
    *(_OWORD *)(v15 + 192) = v36;
    *(_OWORD *)(v15 + 208) = v16;
    *(_OWORD *)(v15 + 224) = v38;
    *(void *)(v15 + 240) = v39;
    long long v17 = v33;
    *(_OWORD *)(v15 + 128) = v32;
    *(_OWORD *)(v15 + 144) = v17;
    long long v18 = v35;
    *(_OWORD *)(v15 + 160) = v34;
    *(_OWORD *)(v15 + 176) = v18;
    long long v19 = v29;
    *(_OWORD *)(v15 + 64) = v28;
    *(_OWORD *)(v15 + 80) = v19;
    long long v20 = v31;
    *(_OWORD *)(v15 + 96) = v30;
    *(_OWORD *)(v15 + 112) = v20;
    long long v21 = v27;
    *(_OWORD *)(v15 + 32) = v26;
    *(_OWORD *)(v15 + 48) = v21;
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_251147094(0, v4[2] + 1, 1, v4);
      uint64_t v4 = (void *)result;
    }
    unint64_t v23 = v4[2];
    unint64_t v22 = v4[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t result = (uint64_t)sub_251147094((void *)(v22 > 1), v23 + 1, 1, v4);
      uint64_t v4 = (void *)result;
    }
    v4[2] = v23 + 1;
    long long v24 = &v4[2 * v23];
    _OWORD v24[4] = sub_251133034;
    void v24[5] = v15;
    if (!*(void *)(*v2 + 16)) {
      goto LABEL_24;
    }
    swift_retain();
    sub_251147700(0, 1);
    swift_release();
    swift_release();
    sub_251146EDC((uint64_t)v40);
    uint64_t v1 = (void *)*v2;
    if (!*(void *)(*v2 + 16)) {
      return (uint64_t)v4;
    }
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v11 = *(void *)(v8 + 32);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_251146818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v4 = a1 + 8;
  uint64_t result = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(result + 16);
  if (!v5) {
    goto LABEL_20;
  }
  uint64_t v48 = v4;
  uint64_t v49 = a2;
  uint64_t v6 = result + 32;
  swift_bridgeObjectRetain();
  unint64_t v7 = 0;
  uint64_t v50 = v2;
  uint64_t v46 = v6;
  uint64_t v47 = v5;
  while (2)
  {
    uint64_t v8 = *(void *)(v2 + 16);
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      if (v7 >= *(void *)(*(void *)v48 + 16))
      {
        __break(1u);
      }
      else
      {
        sub_251146D6C(*(void *)v48 + 216 * v7 + 32, (uint64_t)v71);
        char v24 = *(unsigned char *)(v2 + 24);
        if (*(void *)v2 && *(unsigned char *)(*(void *)v2 + 40) != 4) {
          char v24 = *(unsigned char *)(*(void *)v2 + 40);
        }
        if (qword_2511CF618[SLOBYTE(v71[0])] >= qword_2511CF618[v24])
        {
          uint64_t result = sub_251146EDC((uint64_t)v71);
          *(_OWORD *)uint64_t v49 = 0u;
          *(_OWORD *)(v49 + 16) = 0u;
          *(_OWORD *)(v49 + 32) = 0u;
          *(_OWORD *)(v49 + 48) = 0u;
          *(_OWORD *)(v49 + 64) = 0u;
          *(_OWORD *)(v49 + 80) = 0u;
          *(_OWORD *)(v49 + 96) = 0u;
          *(_OWORD *)(v49 + 112) = 0u;
          *(_OWORD *)(v49 + 128) = 0u;
          *(_OWORD *)(v49 + 144) = 0u;
          *(_OWORD *)(v49 + 160) = 0u;
          *(_OWORD *)(v49 + 176) = 0u;
          *(_OWORD *)(v49 + 192) = 0u;
          *(void *)(v49 + 208) = 0;
          return result;
        }
        sub_251147410(v7, (uint64_t)&v55);
        sub_251146EDC((uint64_t)&v55);
        double Current = CFAbsoluteTimeGetCurrent();
        sub_251146D6C((uint64_t)v71, (uint64_t)&v55);
        if ((_BYTE)v56)
        {
          if (v56 == 1) {
            long long v26 = (double *)v57;
          }
          else {
            long long v26 = (double *)v57 + 1;
          }
        }
        else
        {
          long long v26 = (double *)&v56 + 1;
        }
        *long long v26 = Current - *((double *)&v55 + 1) + *v26;
        *((double *)&v55 + 1) = Current;
        unint64_t v7 = *(void *)(v2 + 16);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result) {
          goto LABEL_34;
        }
      }
      uint64_t result = (uint64_t)sub_25113AFF0(0, *(void *)(v7 + 16) + 1, 1, (void *)v7);
      unint64_t v7 = result;
LABEL_34:
      unint64_t v28 = *(void *)(v7 + 16);
      unint64_t v27 = *(void *)(v7 + 24);
      if (v28 >= v27 >> 1)
      {
        uint64_t result = (uint64_t)sub_25113AFF0((void *)(v27 > 1), v28 + 1, 1, (void *)v7);
        unint64_t v7 = result;
      }
      *(void *)(v7 + 16) = v28 + 1;
      unint64_t v29 = v7 + 216 * v28;
      long long v30 = v56;
      *(_OWORD *)(v29 + 32) = v55;
      *(_OWORD *)(v29 + 48) = v30;
      long long v31 = v57[0];
      long long v32 = v57[1];
      long long v33 = v57[3];
      *(_OWORD *)(v29 + 96) = v57[2];
      *(_OWORD *)(v29 + 112) = v33;
      *(_OWORD *)(v29 + 64) = v31;
      *(_OWORD *)(v29 + 80) = v32;
      long long v34 = v57[4];
      long long v35 = v57[5];
      long long v36 = v57[7];
      *(_OWORD *)(v29 + 160) = v57[6];
      *(_OWORD *)(v29 + 176) = v36;
      *(_OWORD *)(v29 + 128) = v34;
      *(_OWORD *)(v29 + 144) = v35;
      long long v37 = v57[8];
      long long v38 = v57[9];
      long long v39 = v57[10];
      *(void *)(v29 + 240) = v58;
      *(_OWORD *)(v29 + 208) = v38;
      *(_OWORD *)(v29 + 224) = v39;
      *(_OWORD *)(v29 + 192) = v37;
      *(void *)(v2 + 16) = v7;
      long long v40 = v72[6];
      *(_OWORD *)(v49 + 160) = v72[5];
      *(_OWORD *)(v49 + 176) = v40;
      *(_OWORD *)(v49 + 192) = v72[7];
      *(void *)(v49 + 208) = v73;
      long long v41 = v72[2];
      *(_OWORD *)(v49 + 96) = v72[1];
      *(_OWORD *)(v49 + 112) = v41;
      long long v42 = v72[4];
      *(_OWORD *)(v49 + 128) = v72[3];
      *(_OWORD *)(v49 + 144) = v42;
      long long v43 = v71[3];
      *(_OWORD *)(v49 + 32) = v71[2];
      *(_OWORD *)(v49 + 48) = v43;
      long long v44 = v72[0];
      *(_OWORD *)(v49 + 64) = v71[4];
      *(_OWORD *)(v49 + 80) = v44;
      long long v45 = v71[1];
      *(_OWORD *)uint64_t v49 = v71[0];
      *(_OWORD *)(v49 + 16) = v45;
      return result;
    }
    uint64_t v10 = v8 + 32;
    unint64_t v51 = v7;
    uint64_t v11 = v6 + 216 * v7 + 80;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_251146D6C(v10, (uint64_t)v71);
      swift_getObjectType();
      char v12 = sub_251146F94();
      sub_251145778((uint64_t)v72, (uint64_t)&v55);
      sub_251145778(v11, (uint64_t)v67);
      if ((v12 & 1) == 0
        || (v13 = v57[0], unint64_t v14 = v69, v15 = v70, v56 != v68) && (sub_2511C9CA0() & 1) == 0
        || v13 != __PAIR128__(v15, v14) && (sub_2511C9CA0() & 1) == 0)
      {
        sub_25114589C((uint64_t)v67);
        sub_25114589C((uint64_t)&v55);
        sub_251145778((uint64_t)v72, (uint64_t)v63);
        sub_251145778(v11, (uint64_t)v59);
        goto LABEL_6;
      }
      sub_25114589C((uint64_t)v67);
      sub_25114589C((uint64_t)&v55);
      sub_251145778((uint64_t)v72, (uint64_t)v63);
      sub_251145778(v11, (uint64_t)v59);
      uint64_t v16 = v65;
      uint64_t v17 = v66;
      __swift_project_boxed_opaque_existential_1(v64, v65);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 24))(v54, v16, v17);
      uint64_t v18 = v54[0];
      uint64_t v19 = v54[1];
      uint64_t v52 = v54[2];
      uint64_t v21 = v61;
      uint64_t v20 = v62;
      __swift_project_boxed_opaque_existential_1(v60, v61);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 24))(v53, v21, v20);
      uint64_t v22 = v53[2];
      if (v18 == v53[0] && v19 == v53[1]) {
        break;
      }
      char v23 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_17;
      }
LABEL_6:
      sub_25114589C((uint64_t)v63);
      sub_25114589C((uint64_t)v59);
      sub_251146EDC((uint64_t)v71);
LABEL_7:
      v10 += 216;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v2 = v50;
        unint64_t v7 = v51;
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_17:
    sub_25114589C((uint64_t)v63);
    sub_25114589C((uint64_t)v59);
    sub_251146EDC((uint64_t)v71);
    if (v52 != v22) {
      goto LABEL_7;
    }
    swift_bridgeObjectRelease_n();
    unint64_t v7 = v51 + 1;
    uint64_t v6 = v46;
    uint64_t v2 = v50;
    if (v51 + 1 != v47) {
      continue;
    }
    break;
  }
  uint64_t result = swift_bridgeObjectRelease();
  a2 = v49;
LABEL_20:
  *(void *)(a2 + 208) = 0;
  *(_OWORD *)(a2 + 176) = 0u;
  *(_OWORD *)(a2 + 192) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

uint64_t sub_251146D6C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for EnqueuedWorkPlan(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  uint64_t v6 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v6;
  uint64_t v7 = *(void *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 136);
  uint64_t v9 = a1 + 144;
  long long v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 168) = v10;
  uint64_t v11 = v10;
  *(void *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = v8;
  uint64_t v12 = a2 + 144;
  long long v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v9, v12, v11);
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = *(void *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = v15;
  *(void *)(a1 + 208) = v16;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_251146EDC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for EnqueuedWorkPlan(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 144);
  swift_release();

  return swift_release();
}

uint64_t sub_251146F94()
{
  sub_251147040();
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    char v0 = sub_2511C9470();
    swift_unknownObjectRelease();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

unint64_t sub_251147040()
{
  unint64_t result = qword_26B216848;
  if (!qword_26B216848)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B216848);
  }
  return result;
}

void *sub_251147094(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2511470B4(a1, a2, a3, a4, &qword_26B218190, (uint64_t (*)(uint64_t))sub_2511AD65C);
}

void *sub_2511470B4(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_2511473AC(0, a5, a6, MEMORY[0x263F8E0F8]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 17;
      }
      v12[2] = v10;
      uint64_t v12[3] = 2 * (v14 >> 4);
      uint64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4]) {
          memmove(v15, a4 + 4, 16 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2511471DC(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_2511471DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2511476BC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void sub_2511472E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_251147348(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2511473AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_251147410@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_25113C7E4(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = &v5[27 * a1];
    long long v8 = *((_OWORD *)v7 + 13);
    unint64_t v9 = v6 - 1;
    *(_OWORD *)(a2 + 160) = *((_OWORD *)v7 + 12);
    *(_OWORD *)(a2 + 176) = v8;
    *(_OWORD *)(a2 + 192) = *((_OWORD *)v7 + 14);
    *(void *)(a2 + 208) = v7[30];
    long long v10 = *((_OWORD *)v7 + 9);
    *(_OWORD *)(a2 + 96) = *((_OWORD *)v7 + 8);
    *(_OWORD *)(a2 + 112) = v10;
    long long v11 = *((_OWORD *)v7 + 11);
    *(_OWORD *)(a2 + 128) = *((_OWORD *)v7 + 10);
    *(_OWORD *)(a2 + 144) = v11;
    long long v12 = *((_OWORD *)v7 + 5);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v7 + 4);
    *(_OWORD *)(a2 + 48) = v12;
    long long v13 = *((_OWORD *)v7 + 7);
    *(_OWORD *)(a2 + 64) = *((_OWORD *)v7 + 6);
    *(_OWORD *)(a2 + 80) = v13;
    long long v14 = *((_OWORD *)v7 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v7 + 2);
    *(_OWORD *)(a2 + 16) = v14;
    uint64_t v15 = v6 - 1 - a1;
    if (v15 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 4, v7 + 31, 216 * v15);
      v5[2] = v9;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251147534(uint64_t a1, int64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 - v9;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    unint64_t v6 = sub_2511470B4(isUniquelyReferenced_nonNull_native, v15, 1, v6, a3, a4);
  }
  sub_2511476BC();
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v17 = v6[2];
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_26;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = (char *)&v6[2 * a2 + 4];
    if (a1 != a2 || &v6[2 * a1 + 4] >= (void *)&v20[16 * v19]) {
      uint64_t result = (uint64_t)memmove(&v6[2 * a1 + 4], v20, 16 * v19);
    }
    uint64_t v21 = v6[2];
    BOOL v18 = __OFADD__(v21, v10);
    uint64_t v22 = v21 - v9;
    if (!v18)
    {
      v6[2] = v22;
LABEL_20:
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

unint64_t sub_2511476BC()
{
  unint64_t result = qword_26B2181A8[0];
  if (!qword_26B2181A8[0])
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, qword_26B2181A8);
  }
  return result;
}

uint64_t sub_251147700(uint64_t a1, int64_t a2)
{
  return sub_251147534(a1, a2, &qword_26B216830, (uint64_t (*)(uint64_t))sub_2511C15A8);
}

BOOL _s19HealthOrchestration17ScheduledWorkPlanV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  char v4 = sub_251146F94();
  sub_251145778(a1, (uint64_t)v35);
  sub_251145778(a2, (uint64_t)v30);
  if ((v4 & 1) != 0
    && ((uint64_t v5 = v38, v6 = v39, v7 = v33, v8 = v34, v36 == v31) && v37 == v32 || (sub_2511C9CA0() & 1) != 0)
    && (v5 == v7 && v6 == v8 || (sub_2511C9CA0() & 1) != 0))
  {
    sub_25114589C((uint64_t)v30);
    sub_25114589C((uint64_t)v35);
    sub_251145778(a1, (uint64_t)v26);
    sub_251145778(a2, (uint64_t)v22);
    uint64_t v9 = v28;
    uint64_t v10 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24))(v21, v9, v10);
    uint64_t v12 = v21[0];
    uint64_t v11 = v21[1];
    uint64_t v13 = v21[2];
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 24))(v20, v14, v15);
    uint64_t v16 = v20[2];
    if (v12 == v20[0] && v11 == v20[1])
    {
      swift_bridgeObjectRelease_n();
LABEL_13:
      BOOL v17 = v13 == v16;
      goto LABEL_14;
    }
    char v18 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v17 = 0;
    if (v18) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_25114589C((uint64_t)v30);
    sub_25114589C((uint64_t)v35);
    sub_251145778(a1, (uint64_t)v26);
    sub_251145778(a2, (uint64_t)v22);
    BOOL v17 = 0;
  }
LABEL_14:
  sub_25114589C((uint64_t)v26);
  sub_25114589C((uint64_t)v22);
  return v17;
}

uint64_t sub_25114793C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2511C9360();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2511C9390();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v2 + 56);
  sub_251145778(a1, (uint64_t)v25);
  sub_25112FD4C(a2, (uint64_t)v24);
  uint64_t v12 = swift_allocObject();
  long long v13 = v25[4];
  *(_OWORD *)(v12 + 104) = v25[5];
  long long v14 = v25[7];
  *(_OWORD *)(v12 + 120) = v25[6];
  *(_OWORD *)(v12 + 136) = v14;
  long long v15 = v25[0];
  *(_OWORD *)(v12 + 40) = v25[1];
  long long v16 = v25[3];
  *(_OWORD *)(v12 + 56) = v25[2];
  *(_OWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = v13;
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 152) = v26;
  *(_OWORD *)(v12 + 24) = v15;
  sub_25112F14C(v24, v12 + 160);
  aBlock[4] = sub_251145930;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_251135784;
  aBlock[3] = &block_descriptor_11;
  BOOL v17 = _Block_copy(aBlock);
  swift_retain();
  sub_2511C9380();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_251148424(&qword_26B216870, MEMORY[0x263F8F030]);
  char v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_251147CB8(0, (unint64_t *)&unk_26B217EF0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_251148378((unint64_t *)&unk_26B217F00, (unint64_t *)&unk_26B217EF0, v18);
  sub_2511C9900();
  MEMORY[0x253397000](0, v11, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  return swift_release();
}

void sub_251147CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_251147D1C(uint64_t result)
{
  *(unsigned char *)(result + 16) = 0;
  uint64_t v1 = *(void *)(result + 8);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2) {
    __break(1u);
  }
  else {
    *(void *)(result + 8) = v3;
  }
  return result;
}

void sub_251147D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(os_unfair_lock_s **)(v4 + 16);
  uint64_t v10 = (uint64_t)&v9[4];
  uint64_t v11 = v9 + 8;
  os_unfair_lock_lock(v9 + 8);
  sub_251148534(v10, v14);
  os_unfair_lock_unlock(v11);
  if (v14[0])
  {
    uint64_t v12 = v14[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, a2, a3, a4, ObjectType, v12);
    swift_unknownObjectRelease();
  }
}

uint64_t Orchestrator.didUpdate<A>(anchor:signal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v30 = a1;
  uint64_t v34 = sub_2511C9360();
  uint64_t v37 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2511C9390();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v31 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v18 = (char *)&v29 - v17;
  uint64_t v32 = *(void *)(v4 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v29 - v17, v30, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a3);
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v20 = (v16 + *(unsigned __int8 *)(v11 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v29;
  *((void *)v21 + 2) = a3;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = v4;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v21[v19], v18, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v21[v20], v13, a3);
  aBlock[4] = sub_2511357C8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_251135784;
  aBlock[3] = &block_descriptor_6;
  char v23 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v24 = v31;
  sub_2511C9380();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_2511483DC(&qword_26B216870, MEMORY[0x263F8F030]);
  uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_25114846C(0, (unint64_t *)&unk_26B217EF0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_251148314((unint64_t *)&unk_26B217F00, (unint64_t *)&unk_26B217EF0, v25);
  unint64_t v27 = v33;
  uint64_t v26 = v34;
  sub_2511C9900();
  MEMORY[0x253397000](0, v24, v27, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v26);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v36);
  return swift_release();
}

uint64_t sub_2511482C4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2511346DC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251148314(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25114846C(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251148378(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251147CB8(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2511483DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251148424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25114846C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2511484D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_251148534@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MEMORY[0x253397E50]();
  uint64_t v5 = *(void *)(a1 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t type metadata accessor for WorkBarrier()
{
  return self;
}

unint64_t sub_251148598@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  sub_2511487E0(0, &qword_26B218160, (uint64_t (*)(uint64_t))sub_251153208, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2511CB450;
  *(void *)(inited + 32) = 0xD000000000000022;
  *(void *)(inited + 40) = 0x80000002511D0B20;
  *(void *)(inited + 48) = sub_251148A20(a1);
  unint64_t v5 = sub_251148C1C(inited, (void (*)(void))sub_251148D40, (uint64_t (*)(uint64_t, uint64_t))sub_251149240);
  unint64_t result = sub_2511488F4(MEMORY[0x263F8EE78], (unint64_t *)&unk_26B2180B0, (uint64_t (*)(uint64_t))sub_251155B48);
  *a2 = v5;
  a2[1] = result;
  return result;
}

unint64_t static EnvironmentalStateDescription.appForeground(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  sub_25114889C(0, &qword_26B218160, (unint64_t *)&qword_26B217E88, (void (*)(uint64_t))sub_25114A7B4);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2511CB450;
  *(void *)(inited + 32) = 0xD00000000000001ELL;
  *(void *)(inited + 40) = 0x80000002511D1CE0;
  sub_251148E18(0, (unint64_t *)&qword_26B2168A0, (uint64_t (*)(uint64_t))sub_25115A3E0, MEMORY[0x263F8E0F8]);
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_2511CB450;
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  *(void *)(v7 + 48) = 0xD000000000000011;
  *(void *)(v7 + 56) = 0x80000002511D09B0;
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_251148A20(v7);
  unint64_t v8 = sub_251148DEC(inited);
  unint64_t result = sub_251148DCC(MEMORY[0x263F8EE78]);
  *a3 = v8;
  a3[1] = result;
  return result;
}

void sub_2511487E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_251148844(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_251194420(255, a3, a4);
    unint64_t v5 = sub_2511C9C60();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_25114889C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_25119CF0C(255, a3, a4);
    unint64_t v5 = sub_2511C9C60();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_2511488F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251155AD4(0, a2, a3, MEMORY[0x263F8DFB0]);
  uint64_t v4 = (void *)sub_2511C9AF0();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_251149240(v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251148A20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251148B64(0, qword_26B218090, MEMORY[0x263F8D310], MEMORY[0x263F8DFB0]);
  BOOL v2 = (void *)sub_2511C9AF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_251149240(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_251148B64(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F8D310], a3, MEMORY[0x263F8D320]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_251148BC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F8D310], a3, MEMORY[0x263F8D320]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_251148C1C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  unint64_t v5 = (void *)sub_2511C9AF0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = a3(v8, v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (void *)(v5[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    *(void *)(v5[7] + 8 * result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_251148D40()
{
  if (!qword_26B2180A8)
  {
    sub_251148B64(255, (unint64_t *)&qword_26B2167F0, MEMORY[0x263F8D310], MEMORY[0x263F8D060]);
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2180A8);
    }
  }
}

unint64_t sub_251148DCC(uint64_t a1)
{
  return sub_2511488F4(a1, (unint64_t *)&unk_26B2180B0, (uint64_t (*)(uint64_t))sub_251155B48);
}

unint64_t sub_251148DEC(uint64_t a1)
{
  return sub_251148C1C(a1, (void (*)(void))sub_251148D40, (uint64_t (*)(uint64_t, uint64_t))sub_251149240);
}

void sub_251148E18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

Swift::Bool __swiftcall EnvironmentalStateDescription.matches(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v46 = v1[1];
  uint64_t v4 = *v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3[8];
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  Swift::Bool result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    if (v15 >= v8) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_28;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v3[7] + 8 * v14);
    if (*((void *)a1._rawValue + 2))
    {
      unint64_t v19 = (uint64_t *)(v3[6] + 16 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_251149240(v20, v21);
      if (v23)
      {
        unint64_t v11 = *(void *)(*((void *)a1._rawValue + 7) + 8 * v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    unint64_t v11 = sub_251148A20(MEMORY[0x263F8EE78]);
LABEL_6:
    char v12 = sub_25114939C(v11, v18);
    swift_bridgeObjectRelease();
    Swift::Bool result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      Swift::Bool v24 = 0;
LABEL_56:
      swift_release();
      return v24;
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 < v8)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v10 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v10 >= v8) {
          goto LABEL_28;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        ++v17;
        if (v16) {
          goto LABEL_22;
        }
      }
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    int64_t v10 = v17;
    goto LABEL_22;
  }
LABEL_28:
  swift_release();
  uint64_t v25 = v46 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v46 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(v46 + 64);
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  Swift::Bool result = swift_bridgeObjectRetain();
  int64_t v30 = 0;
  uint64_t v31 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v28)
    {
      unint64_t v34 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v35 = v34 | (v30 << 6);
      uint64_t v36 = v46;
      goto LABEL_50;
    }
    int64_t v37 = v30 + 1;
    uint64_t v36 = v46;
    if (__OFADD__(v30, 1)) {
      goto LABEL_58;
    }
    if (v37 >= v29)
    {
LABEL_55:
      Swift::Bool v24 = 1;
      goto LABEL_56;
    }
    unint64_t v38 = *(void *)(v25 + 8 * v37);
    ++v30;
    if (!v38)
    {
      int64_t v30 = v37 + 1;
      if (v37 + 1 >= v29) {
        goto LABEL_55;
      }
      unint64_t v38 = *(void *)(v25 + 8 * v30);
      if (!v38)
      {
        int64_t v30 = v37 + 2;
        if (v37 + 2 >= v29) {
          goto LABEL_55;
        }
        unint64_t v38 = *(void *)(v25 + 8 * v30);
        if (!v38) {
          break;
        }
      }
    }
LABEL_49:
    unint64_t v28 = (v38 - 1) & v38;
    unint64_t v35 = __clz(__rbit64(v38)) + (v30 << 6);
LABEL_50:
    uint64_t v40 = *(void *)(*(void *)(v36 + 56) + 8 * v35);
    if (*((void *)a1._rawValue + 2))
    {
      long long v41 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v35);
      uint64_t v42 = *v41;
      uint64_t v43 = v41[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v44 = sub_251149240(v42, v43);
      if (v45)
      {
        unint64_t v32 = *(void *)(*((void *)a1._rawValue + 7) + 8 * v44);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    unint64_t v32 = sub_251148A20(v31);
LABEL_33:
    char v33 = sub_2511495D8(v40, v32);
    swift_bridgeObjectRelease();
    Swift::Bool result = swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      Swift::Bool v24 = 0;
      goto LABEL_56;
    }
  }
  int64_t v39 = v37 + 3;
  if (v39 >= v29) {
    goto LABEL_55;
  }
  unint64_t v38 = *(void *)(v25 + 8 * v39);
  if (v38)
  {
    int64_t v30 = v39;
    goto LABEL_49;
  }
  while (1)
  {
    int64_t v30 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v30 >= v29) {
      goto LABEL_55;
    }
    unint64_t v38 = *(void *)(v25 + 8 * v30);
    ++v39;
    if (v38) {
      goto LABEL_49;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

unint64_t sub_251149240(uint64_t a1, uint64_t a2)
{
  sub_2511C9D40();
  sub_2511C94F0();
  uint64_t v4 = sub_2511C9D80();

  return sub_2511492B8(a1, a2, v4);
}

unint64_t sub_2511492B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    int64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2511C9CA0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2511C9CA0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_25114939C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      if (!*(void *)(a1 + 16)) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v29) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v29) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v29) {
          goto LABEL_31;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (!*(void *)(a1 + 16)) {
      goto LABEL_28;
    }
LABEL_22:
    uint64_t v15 = 16 * v11;
    unint64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + v15);
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 56) + v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v21 = *v16;
    uint64_t v20 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_251149240(v21, v20);
    if ((v23 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    Swift::Bool v24 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v22);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v26 == v19 && v25 == v18)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
    }
    else
    {
      char v28 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
LABEL_28:
        swift_release();
        return 0;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v29)
  {
LABEL_31:
    swift_release();
    return 1;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2511495D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    while (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_22:
        unint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
        uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
        uint64_t v19 = *v16;
        uint64_t v18 = v16[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_251149240(v19, v18);
        if (v21)
        {
          unint64_t v22 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v20);
          uint64_t v23 = *v22;
          uint64_t v24 = v22[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          char v25 = sub_2511497B8(v23, v24, v17);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v25)
          {
            uint64_t v26 = 0;
LABEL_26:
            swift_release();
            return v26;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v8) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(void *)(a2 + 16)) {
      goto LABEL_22;
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_25:
    uint64_t v26 = 1;
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2511497B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_2511C9D40();
    sub_2511C94F0();
    uint64_t v6 = sub_2511C9D80();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2511C9CA0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2511C9CA0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();

  return MEMORY[0x270FA0238](v0, 152, 7);
}

uint64_t objectdestroy_47Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_251149AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_251149240(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_251149DD0();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_251185ED4(v17, a5 & 1);
  unint64_t v23 = sub_251149240(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_2511C9CD0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_251149C60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_251149240(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2511882B0();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_251186234(v15, a4 & 1);
  unint64_t v21 = sub_251149240(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_2511C9CD0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

void *sub_251149DD0()
{
  uint64_t v1 = v0;
  sub_251148BC0(0, qword_26B218090, MEMORY[0x263F8D310], MEMORY[0x263F8DFB0]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251149FAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_251131944(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void sub_25114A0C0(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v7 = *(void (**)(id, id, id))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, v8, v9);
  swift_release();
}

void sub_25114A160(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_25114A1BC(uint64_t a1, Swift::OpaquePointer a2, unsigned char *a3, unsigned char *a4, double a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v66 = MEMORY[0x263F8EE78];
  sub_25113C61C(0, v5, 0);
  uint64_t v10 = 0;
  int64_t v51 = v5;
  uint64_t v52 = a1 + 32;
  uint64_t v6 = v66;
LABEL_3:
  uint64_t v11 = (void *)(v52 + 216 * v10);
  uint64_t v12 = v11[21];
  uint64_t v13 = v11[22];
  uint64_t v59 = v11;
  __swift_project_boxed_opaque_existential_1(v11 + 18, v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 32))(&v60, v12, v13);
  uint64_t v14 = v60;
  unsigned int v57 = v61;
  uint64_t v15 = *(void *)(v60 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v54 = v10;
  uint64_t v55 = v6;
  uint64_t v16 = v60 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  uint64_t v53 = v15;
  while (2)
  {
    if (v18 < *(void *)(v14 + 16))
    {
      uint64_t v19 = (unsigned __int8 *)(v16 + 16 * v18);
      uint64_t v20 = *(void *)(*(void *)v19 + 16);
      if (!v20) {
        goto LABEL_5;
      }
      unsigned int v56 = v19[8];
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v20; ++i)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        Swift::Bool v22 = EnvironmentalStateDescription.matches(_:)(a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          unsigned int v23 = v56;
          int64_t v5 = v51;
          uint64_t v10 = v54;
          uint64_t v6 = v55;
          goto LABEL_15;
        }
      }
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v16 = v14 + 32;
      uint64_t v15 = v53;
LABEL_5:
      if (++v18 != v15) {
        continue;
      }
      swift_bridgeObjectRelease_n();
      int64_t v5 = v51;
      uint64_t v10 = v54;
      uint64_t v6 = v55;
LABEL_14:
      unsigned int v23 = v57;
LABEL_15:
      ++v10;
      unint64_t v24 = 0xEB00000000646569;
      uint64_t v25 = v23;
      uint64_t v26 = 0x6669636570736E75;
      switch(v23)
      {
        case 1u:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v26 = 0x746E65677275;
          break;
        case 2u:
          uint64_t v26 = 0x616E65746E69616DLL;
          unint64_t v24 = 0xEB0000000065636ELL;
          break;
        case 3u:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v26 = 0x64656B636F6C62;
          break;
        default:
          break;
      }
      uint64_t v27 = 0x6669636570736E75;
      unint64_t v28 = 0xEB00000000646569;
      switch(*v59)
      {
        case 1:
          unint64_t v28 = 0xE600000000000000;
          if (v26 == 0x746E65677275) {
            goto LABEL_24;
          }
          goto LABEL_27;
        case 2:
          uint64_t v27 = 0x616E65746E69616DLL;
          unint64_t v28 = 0xEB0000000065636ELL;
          goto LABEL_23;
        case 3:
          unint64_t v28 = 0xE700000000000000;
          if (v26 != 0x64656B636F6C62) {
            goto LABEL_27;
          }
          goto LABEL_24;
        default:
LABEL_23:
          if (v26 != v27) {
            goto LABEL_27;
          }
LABEL_24:
          if (v24 == v28)
          {
            swift_bridgeObjectRelease_n();
LABEL_28:
            sub_251146D6C((uint64_t)v59, (uint64_t)&v62);
            goto LABEL_42;
          }
LABEL_27:
          char v58 = v23;
          char v29 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v29) {
            goto LABEL_28;
          }
          *a3 = 1;
          char v30 = a4[24];
          if (*(void *)a4 && *(unsigned char *)(*(void *)a4 + 40) != 4) {
            char v30 = *(unsigned char *)(*(void *)a4 + 40);
          }
          sub_251146D6C((uint64_t)v59, (uint64_t)&v62);
          uint64_t v31 = (double *)&v63 + 1;
          if ((_BYTE)v63)
          {
            uint64_t v31 = (double *)v64;
            if (v63 != 1) {
              uint64_t v31 = (double *)v64 + 1;
            }
          }
          *uint64_t v31 = a5 - *((double *)&v62 + 1) + *v31;
          *((double *)&v62 + 1) = a5;
          switch(v25)
          {
            case 3:
              swift_bridgeObjectRelease();
              char v33 = 0;
              char v34 = v58;
              break;
            default:
              char v32 = sub_2511C9CA0();
              swift_bridgeObjectRelease();
              char v33 = 0;
              char v34 = v58;
              if ((v32 & 1) == 0)
              {
                if (qword_2511CF600[v58] >= qword_2511CF618[v30]) {
                  char v33 = 1;
                }
                else {
                  char v33 = 2;
                }
              }
              break;
          }
          LOBYTE(v63) = v33;
          LOBYTE(v62) = v34;
LABEL_42:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v66 = v6;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_25113C61C(0, *(void *)(v6 + 16) + 1, 1);
            uint64_t v6 = v66;
          }
          unint64_t v37 = *(void *)(v6 + 16);
          unint64_t v36 = *(void *)(v6 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_25113C61C(v36 > 1, v37 + 1, 1);
            uint64_t v6 = v66;
          }
          *(void *)(v6 + 16) = v37 + 1;
          uint64_t v38 = v6 + 216 * v37;
          long long v39 = v63;
          *(_OWORD *)(v38 + 32) = v62;
          *(_OWORD *)(v38 + 48) = v39;
          long long v40 = v64[0];
          long long v41 = v64[1];
          long long v42 = v64[3];
          *(_OWORD *)(v38 + 96) = v64[2];
          *(_OWORD *)(v38 + 112) = v42;
          *(_OWORD *)(v38 + 64) = v40;
          *(_OWORD *)(v38 + 80) = v41;
          long long v43 = v64[4];
          long long v44 = v64[5];
          long long v45 = v64[7];
          *(_OWORD *)(v38 + 160) = v64[6];
          *(_OWORD *)(v38 + 176) = v45;
          *(_OWORD *)(v38 + 128) = v43;
          *(_OWORD *)(v38 + 144) = v44;
          long long v46 = v64[8];
          long long v47 = v64[9];
          long long v48 = v64[10];
          *(void *)(v38 + 240) = v65;
          *(_OWORD *)(v38 + 208) = v47;
          *(_OWORD *)(v38 + 224) = v48;
          *(_OWORD *)(v38 + 192) = v46;
          if (v10 == v5) {
            return v6;
          }
          goto LABEL_3;
      }
    }
    break;
  }
  __break(1u);
  return result;
}

void sub_25114A7B4()
{
  if (!qword_26B2167F0)
  {
    unint64_t v0 = sub_2511C9430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2167F0);
    }
  }
}

uint64_t sub_25114A81C()
{
  return sub_25114A824(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_25114A824(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25114A84C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25114A85C()
{
  return sub_25114A874();
}

uint64_t sub_25114A874()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_25114A89C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 19;
  os_unfair_lock_lock(v1 + 19);
  sub_25114A8F8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_25114A8F8(uint64_t *a1)
{
}

void sub_25114A910(uint64_t *a1)
{
}

void sub_25114A92C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_13:
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v5 = 4;
  while (1)
  {
    uint64_t v6 = v5 - 4;
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = MEMORY[0x2533971C0](v5 - 4, v3);
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v7 = swift_retain();
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v6, 1))
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    MEMORY[0x270FA5388](v7);
    uint64_t v12 = v2;
    uint64_t v10 = v9 + 4;
    uint64_t v11 = v9 + 11;
    os_unfair_lock_lock(v9 + 11);
    sub_25114AD2C(v10);
    if (v12) {
      break;
    }
    uint64_t v2 = 0;
    os_unfair_lock_unlock(v11);
    swift_release();
    ++v5;
    if (v8 == v4) {
      goto LABEL_11;
    }
  }
  os_unfair_lock_unlock(v11);
  __break(1u);
}

void sub_25114AAA8(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_25114AAC8(a1, *(unsigned char *)(v2 + 16), a2);
}

void sub_25114AAC8(uint64_t a1@<X0>, char a2@<W1>, void *p_os_unfair_lock_opaque@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v5 = (uint64_t *)a1;
  *(unsigned char *)(a1 + 56) = a2;
  uint64_t v7 = *(void *)a1;
  if (!(*(void *)a1 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    *p_os_unfair_lock_opaque = sub_2511464D4(v5);
    return;
  }
LABEL_13:
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v14 = v5;
  uint64_t v15 = p_os_unfair_lock_opaque;
  uint64_t v9 = 4;
  while (1)
  {
    uint64_t v16 = v4;
    uint64_t v4 = v9 - 4;
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = MEMORY[0x2533971C0](v9 - 4, v7);
      uint64_t v11 = v9 - 3;
      if (__OFADD__(v4, 1)) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v10 = swift_retain();
      uint64_t v11 = v9 - 3;
      if (__OFADD__(v4, 1))
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    uint64_t v5 = (uint64_t *)v7;
    MEMORY[0x270FA5388](v10);
    p_os_unfair_lock_opaque = &v12[4]._os_unfair_lock_opaque;
    uint64_t v13 = v12 + 11;
    os_unfair_lock_lock(v12 + 11);
    sub_25114AE24((uint64_t)p_os_unfair_lock_opaque);
    if (v16) {
      break;
    }
    uint64_t v4 = 0;
    os_unfair_lock_unlock(v13);
    swift_release();
    ++v9;
    if (v11 == v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v14;
      p_os_unfair_lock_opaque = v15;
      goto LABEL_15;
    }
  }
  os_unfair_lock_unlock(v13);
  __break(1u);
}

uint64_t WorkQueue.priorityThreshold.setter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 19;
  os_unfair_lock_lock(v1 + 19);
  sub_25114AAA8(v2, &v9);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = *(void *)(v9 + 16);
  if (v4)
  {
    uint64_t v5 = v9 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25114AD2C(unsigned char *a1)
{
  return sub_25114AD48(a1, *(void **)(v1 + 16));
}

uint64_t sub_25114AD48(unsigned char *a1, void *a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  char v10 = 0;
  uint64_t v5 = (uint64_t *)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  v7._rawValue = a2;
  uint64_t v8 = sub_25114A1BC(v6, v7, &v10, a1, Current);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = v8;
  if (v10 == 1) {
    return sub_25113B264((void **)v5, sub_25113B2DC);
  }
  return result;
}

uint64_t sub_25114AE24(uint64_t a1)
{
  return sub_2511450C4(a1);
}

void sub_25114AE3C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_25114AE9C(v2);

  os_unfair_lock_unlock(v3);
}

void sub_25114AE9C(uint64_t a1)
{
  sub_25114AEB8(a1, v1);
}

void sub_25114AEB8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    char rawValue = 4;
    goto LABEL_5;
  }
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = v4;
  uint64_t v5 = *(void *)(*(void *)(a2 + 40) + 16);
  uint64_t v6 = (void *)(v5 + 16);
  Swift::OpaquePointer v7 = (os_unfair_lock_s *)(v5 + 40);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v7);
  sub_251144C54(v6, &fora);
  if (!v2)
  {
    os_unfair_lock_unlock(v7);
    PriorityRuleSet.priority(for:)(fora);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char rawValue = (char)fora._rawValue;
LABEL_5:
    *(unsigned char *)(a1 + 1) = rawValue;
    sub_25114AFA8((unsigned __int8 *)a1);
    return;
  }
  os_unfair_lock_unlock(v7);
  __break(1u);
}

uint64_t sub_25114AFA8(unsigned __int8 *a1)
{
  unint64_t v2 = 0xEB00000000646569;
  uint64_t v3 = 0x6669636570736E75;
  unsigned int v4 = a1[1];
  uint64_t v5 = a1[2];
  if (v4 == 4) {
    unsigned int v4 = a1[2];
  }
  if (*a1 == 4) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = *a1;
  }
  uint64_t v8 = 0x6669636570736E75;
  unint64_t v9 = 0xEB00000000646569;
  switch(v5)
  {
    case 1:
      unint64_t v9 = 0xE600000000000000;
      uint64_t v8 = 0x746E65677275;
      break;
    case 2:
      uint64_t v8 = 0x616E65746E69616DLL;
      unint64_t v9 = 0xEB0000000065636ELL;
      break;
    case 3:
      unint64_t v9 = 0xE700000000000000;
      uint64_t v8 = 0x64656B636F6C62;
      break;
    default:
      break;
  }
  switch(v6)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v8 == 0x746E65677275) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 2:
      uint64_t v3 = 0x616E65746E69616DLL;
      unint64_t v2 = 0xEB0000000065636ELL;
      goto LABEL_14;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v8 == 0x64656B636F6C62) {
        goto LABEL_17;
      }
      goto LABEL_19;
    default:
LABEL_14:
      if (v8 != v3) {
        goto LABEL_19;
      }
LABEL_17:
      if (v9 == v2) {
        return swift_bridgeObjectRelease_n();
      }
LABEL_19:
      char v11 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        a1[2] = v6;
        uint64_t v12 = *(void *)(v1 + 32);
        uint64_t ObjectType = swift_getObjectType();
        char v14 = v6;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(&v14, ObjectType, v12);
      }
      return result;
  }
}

void sub_25114B198()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_25114A85C();
  os_unfair_lock_unlock(v1);
}

void sub_25114B208()
{
}

void sub_25114B220()
{
  sub_25114B260(*(void *)(v0 + 16));
}

void sub_25114B240(void *a1@<X0>, void *a2@<X8>)
{
  sub_25112CCFC(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_25114B260(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 16);
  uint64_t v3 = v2 + 4;
  unsigned int v4 = v2 + 10;
  os_unfair_lock_lock(v2 + 10);
  sub_25114B240(v3, &v11);
  if (v1)
  {
    os_unfair_lock_unlock(v4);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v4);
    uint64_t v5 = v11;
    uint64_t v6 = *(void *)(v12 + 16);
    if (v6)
    {
      Swift::OpaquePointer v7 = (uint64_t *)(v12 + 40);
      do
      {
        uint64_t v8 = *v7;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8);
        swift_unknownObjectRetain();
        v10(v5, ObjectType, v8);
        swift_unknownObjectRelease();
        v7 += 2;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_25114B364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x253397E50](v3 + 16);
  if (result)
  {
    uint64_t v8 = *(void *)(v3 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_25114B408()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_25114B424@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25114B448(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), a2);
}

uint64_t sub_25114B448@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  switch(a2)
  {
    case 2:
    case 4:
      uint64_t v13 = "backgroundRunning";
      if (a5) {
        uint64_t v13 = "foregroundRunning";
      }
      unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = *a1;
      *a1 = 0x8000000000000000;
      uint64_t v11 = 0xD000000000000011;
      uint64_t v12 = v14;
      break;
    case 3:
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = *a1;
      *a1 = 0x8000000000000000;
      uint64_t v11 = 0xD000000000000013;
      uint64_t v12 = 0x80000002511D09D0;
      break;
    default:
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = *a1;
      *a1 = 0x8000000000000000;
      uint64_t v11 = 0x6E776F6E6B6E75;
      uint64_t v12 = 0xE700000000000000;
      break;
  }
  sub_251149AD8(v11, v12, a3, a4, isUniquelyReferenced_nonNull_native);
  *a1 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a6 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t ProcessStateComponent.update(state:visible:for:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25114B424(v2, &v8);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v8;
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(v4, v0, &protocol witness table for ProcessStateComponent, ObjectType, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25114B684(uint64_t a1, void *a2, void *a3)
{
  return sub_25114B68C(a1, a2, a3);
}

uint64_t sub_25114B68C(uint64_t a1, void *a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v6 = objc_msgSend(a2, sel_bundle);
    if (v6
      && (Swift::OpaquePointer v7 = v6, v8 = objc_msgSend(v6, sel_identifier), v7, v8))
    {
      sub_2511C94B0();

      id v9 = objc_msgSend(a3, sel_state);
      if (v9)
      {
        uint64_t v10 = v9;
        objc_msgSend(v9, sel_taskState);

        id v11 = objc_msgSend(a3, sel_state);
        uint64_t v12 = v11;
        if (v11)
        {
          id v13 = objc_msgSend(v11, sel_endowmentNamespaces);

          if (v13)
          {
            uint64_t v14 = sub_2511C96A0();

            uint64_t v15 = sub_2511C94B0();
            sub_2511497B8(v15, v16, v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        ProcessStateComponent.update(state:visible:for:)();
      }
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_25114B848()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_25114B8A8(v2);

  os_unfair_lock_unlock(v3);
}

void sub_25114B8A8(unsigned char *a1)
{
  sub_25114B8C4(a1, v1);
}

void sub_25114B8C4(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(*((void *)a1 + 1) + 16);
  if (!v4)
  {
LABEL_7:
    a1[1] = 0;
    if ((*a1 & 1) == 0)
    {
      if (a1[16] == 1)
      {
        a1[16] = 0;
        uint64_t v11 = *(void *)(a2 + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
      }
      return;
    }
LABEL_12:
    if (a1[16] == 1) {
      return;
    }
LABEL_13:
    a1[16] = 1;
    uint64_t v13 = *(void *)(a2 + 40);
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v13);
    return;
  }
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    id v8 = (void *)(v7 + 16);
    id v9 = (os_unfair_lock_s *)(v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v9);
    sub_251144C54(v8, &v17);
    if (v3)
    {
      os_unfair_lock_unlock(v9);
      __break(1u);
      return;
    }
    uint64_t v3 = 0;
    os_unfair_lock_unlock(v9);
    Swift::Bool v10 = EnvironmentalStateDescription.matches(_:)(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      break;
    }
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      a1 = v15;
      a2 = v16;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  a1 = v15;
  v15[1] = 1;
  if (*v15)
  {
    a2 = v16;
    goto LABEL_12;
  }
  a2 = v16;
  if ((v15[16] & 1) == 0) {
    goto LABEL_13;
  }
}

uint64_t sub_25114BA90(uint64_t a1)
{
  sub_2511430E4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

HealthOrchestration::PriorityRuleSet::Priority __swiftcall PriorityRuleSet.priority(for:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = *(void *)v2;
  char v4 = v2[8];
  uint64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5)
  {
    char rawValue = a1._rawValue;
    char v14 = v2[8];
    uint64_t v15 = v1;
    uint64_t v7 = v3 + 32;
    LOBYTE(a1._rawValue) = swift_bridgeObjectRetain();
    unint64_t v8 = 0;
    while (1)
    {
      if (v8 >= *(void *)(v3 + 16))
      {
        __break(1u);
        return (HealthOrchestration::PriorityRuleSet::Priority)a1._rawValue;
      }
      id v9 = (unsigned char *)(v7 + 16 * v8);
      uint64_t v10 = *(void *)(*(void *)v9 + 16);
      if (v10) {
        break;
      }
LABEL_3:
      if (++v8 == v5)
      {
        LOBYTE(a1._rawValue) = swift_bridgeObjectRelease();
        char v4 = v14;
        uint64_t v1 = v15;
        goto LABEL_11;
      }
    }
    char v16 = v9[8];
    swift_bridgeObjectRetain_n();
    uint64_t v11 = 0;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      Swift::Bool v12 = EnvironmentalStateDescription.matches(_:)((Swift::OpaquePointer)rawValue);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        break;
      }
      if (v10 == ++v11)
      {
        LOBYTE(a1._rawValue) = swift_bridgeObjectRelease_n();
        uint64_t v7 = v3 + 32;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    LOBYTE(a1._rawValue) = swift_bridgeObjectRelease_n();
    uint64_t v1 = v15;
    char v4 = v16;
  }
LABEL_11:
  *uint64_t v1 = v4;
  return (HealthOrchestration::PriorityRuleSet::Priority)a1._rawValue;
}

void *sub_25114BC4C@<X0>(uint64_t a1@<X0>, uint8_t *a2@<X8>)
{
  return sub_25114BC68(a1, v2, a2);
}

void *sub_25114BC68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint8_t *a3@<X8>)
{
  uint64_t v34 = *a2;
  uint64_t v6 = sub_2511C92A0();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  id v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v31 - v10;
  int v12 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v13 = a2[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 40);
  if (v12 == 1)
  {
    v15(ObjectType, v13);
    swift_retain_n();
    char v16 = sub_2511C9280();
    os_log_type_t v17 = sub_2511C9770();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v33 = v6;
      uint64_t v18 = swift_slowAlloc();
      char v32 = a3;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v37 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      v31[1] = v19 + 4;
      uint64_t v36 = (uint64_t)a2;
      swift_retain();
      uint64_t v21 = sub_2511C94C0();
      uint64_t v36 = sub_251140E4C(v21, v22, &v37);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v16, v17, "%s: Resuming.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v20, -1, -1);
      unsigned int v23 = v19;
      a3 = v32;
      MEMORY[0x253397D40](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v33);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v6);
    }
    *(unsigned char *)(a1 + 33) = 0;
    uint64_t result = sub_2511373E4(a1);
  }
  else
  {
    v15(ObjectType, v13);
    swift_retain_n();
    unint64_t v24 = sub_2511C9280();
    os_log_type_t v25 = sub_2511C9770();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v33 = v6;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v37 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      char v32 = v26 + 4;
      uint64_t v36 = (uint64_t)a2;
      swift_retain();
      uint64_t v28 = sub_2511C94C0();
      uint64_t v36 = sub_251140E4C(v28, v29, &v37);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v24, v25, "%s: Ignoring no-op resume.", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v27, -1, -1);
      MEMORY[0x253397D40](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v33);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
    }
    uint64_t result = (void *)MEMORY[0x263F8EE78];
  }
  *(void *)a3 = result;
  return result;
}

uint64_t sub_25114C0C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25114C114(a1, a2);
}

uint64_t sub_25114C0E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25112C5A0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_25114C114@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25112C5A0(a1);
  *a2 = result;
  return result;
}

uint64_t ValueAnchor.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ValueAnchor.init(identifier:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v7;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  uint64_t v8 = type metadata accessor for ValueAnchor();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4 + *(int *)(v8 + 52), a2, a3);
}

void sub_25114C22C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (unint64_t)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_25114C2D4(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_25114C294()
{
  return WorkQueue.priorityThreshold.setter();
}

void sub_25114C2D4(unint64_t a1)
{
}

void sub_25114C2F0(unint64_t a1)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(a1 + 24) != 1) {
    return;
  }
  unint64_t v3 = a1;
  *(unsigned char *)(a1 + 24) = 0;
  if (*(void *)(a1 + 8) != 2) {
    return;
  }
  if (*(void *)a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void **)((*(void *)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_retain_n();
  uint64_t v5 = sub_2511C9280();
  os_log_type_t v6 = sub_2511C9770();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    swift_retain();
    sub_2511C9960();
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)0xD000000000000018;
    unint64_t v19 = 0x80000002511D0C50;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_release();
    uint64_t v18 = (void *)sub_251140E4C((uint64_t)v18, v19, &v20);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    uint64_t v18 = v4;
    sub_2511C98A0();
    _os_log_impl(&dword_25112A000, v5, v6, "%s: Resuming (%ld orchestrators).", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v8, -1, -1);
    MEMORY[0x253397D40](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  unint64_t v3 = *(void *)v3;
  if (!(v3 >> 62))
  {
    uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_10;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_18;
  }
LABEL_10:
  uint64_t v10 = 4;
  while (1)
  {
    uint64_t v11 = v10 - 4;
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = MEMORY[0x2533971C0](v10 - 4, v3);
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v11, 1)) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v3 + 8 * v10);
      swift_retain();
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v11, 1))
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    char v14 = *(os_unfair_lock_s **)(v12 + 64);
    uint64_t v15 = (uint64_t)&v14[4];
    char v16 = v14 + 22;
    os_unfair_lock_lock(v14 + 22);
    sub_25114BC4C(v15, (uint8_t *)&v18);
    if (v2) {
      break;
    }
    uint64_t v2 = 0;
    os_unfair_lock_unlock(v16);
    v17._char rawValue = v18;
    sub_251135B44(v17);
    swift_release();
    swift_bridgeObjectRelease();
    ++v10;
    if (v13 == v9) {
      goto LABEL_18;
    }
  }
  os_unfair_lock_unlock(v16);
  __break(1u);
}

uint64_t OrchestrationDirector.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_logger;
  uint64_t v4 = sub_2511C92A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_25114C6F0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_25114C720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_25114C73C(a1, a2);
}

uint64_t sub_25114C73C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  swift_retain_n();
  uint64_t v4 = sub_2511C9280();
  os_log_type_t v5 = sub_2511C9770();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v6 = 136315138;
    uint64_t v9 = v7;
    swift_retain();
    sub_2511C9960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_release();
    sub_251140E4C(0xD000000000000018, 0x80000002511D0C50, &v9);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25112A000, v4, v5, "%s: Triggering failed work criteria recheck.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v7, -1, -1);
    MEMORY[0x253397D40](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t OrchestrationDirector.recheckFailedTriggers(priorityThresholdOverride:barrier:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v19 = *a1;
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  os_log_type_t v5 = v4 + 4;
  os_log_type_t v6 = v4 + 11;
  os_unfair_lock_lock(v4 + 11);
  sub_25114C720(v5, &v22);
  os_unfair_lock_unlock(v6);
  unint64_t v7 = v22;
  if (v22 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      uint64_t v9 = 4;
      do
      {
        uint64_t v10 = v9 - 4;
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x2533971C0](v9 - 4, v7);
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v7 + 8 * v9);
          swift_retain();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        uint64_t v13 = *(os_unfair_lock_s **)(v11 + 64);
        uint64_t v14 = (uint64_t)&v13[4];
        uint64_t v15 = v13 + 22;
        os_unfair_lock_lock(v13 + 22);
        sub_25114C0C8(v14, (uint64_t *)&v22);
        os_unfair_lock_unlock(v15);
        v16._char rawValue = (void *)v22;
        sub_251135B44(v16);
        swift_release();
        swift_bridgeObjectRelease();
        ++v9;
      }
      while (v12 != v8);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  LOBYTE(v22) = v19;
  sub_25114A84C(a2);
  WorkQueue.enqueue(priorityThresholdOverride:barrier:)();

  return swift_release();
}

uint64_t CurrentValueWorkPlan.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

__n128 CurrentValueWorkPlan.identifier.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  __n128 result = v4;
  *uint64_t v1 = v4;
  v1[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*CurrentValueWorkPlan.identifier.modify())()
{
  return nullsub_1;
}

uint64_t CurrentValueWorkPlan.priority.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CurrentValueWorkPlan.priority.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(unsigned char *)(v1 + 32) = v3;
  return result;
}

uint64_t (*CurrentValueWorkPlan.priority.modify())()
{
  return nullsub_1;
}

uint64_t CurrentValueWorkPlan.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t CurrentValueWorkPlan.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 48), a1);
}

uint64_t (*CurrentValueWorkPlan.value.modify())()
{
  return nullsub_1;
}

uint64_t CurrentValueWorkPlan.init(identifier:priority:value:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *a2;
  char v10 = *((unsigned char *)a2 + 8);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(void *)(a5 + 16) = v8;
  *(void *)(a5 + 24) = v9;
  *(unsigned char *)(a5 + 32) = v10;
  uint64_t v11 = a5 + *(int *)(type metadata accessor for CurrentValueWorkPlan() + 48);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v12(v11, a3, a4);
}

uint64_t type metadata accessor for CurrentValueWorkPlan()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CurrentValueWorkPlan.merged(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

BOOL sub_25114CDB4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_25114CDC4()
{
  return sub_2511C9D50();
}

uint64_t sub_25114CDEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25114CF48()
{
  return sub_2511C9D80();
}

uint64_t sub_25114CF90(char a1)
{
  if (!a1) {
    return 0x696669746E656469;
  }
  if (a1 == 1) {
    return 0x797469726F697270;
  }
  return 0x65756C6176;
}

BOOL sub_25114CFE8(char *a1, char *a2)
{
  return sub_25114CDB4(*a1, *a2);
}

uint64_t sub_25114D000()
{
  return sub_25114CF48();
}

uint64_t sub_25114D010()
{
  return sub_25114CDC4();
}

uint64_t sub_25114D020()
{
  return sub_2511C9D80();
}

uint64_t sub_25114D06C()
{
  return sub_25114CF90(*v0);
}

uint64_t sub_25114D07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25114CDEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25114D0B0()
{
  return 0;
}

uint64_t sub_25114D0BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_251150130();
  *a1 = result;
  return result;
}

uint64_t sub_25114D0F0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25114D144(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CurrentValueWorkPlan.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v14[1] = *(void *)(a2 + 32);
  uint64_t v14[2] = v4;
  type metadata accessor for CurrentValueWorkPlan.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_2511C9C20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = (long long *)v14[3];
  sub_2511C9DA0();
  uint64_t v10 = *((void *)v9 + 2);
  long long v15 = *v9;
  uint64_t v16 = v10;
  char v17 = 0;
  sub_25114D3C4();
  uint64_t v11 = v14[4];
  sub_2511C9C00();
  if (!v11)
  {
    char v12 = *((unsigned char *)v9 + 32);
    *(void *)&long long v15 = *((void *)v9 + 3);
    BYTE8(v15) = v12;
    char v17 = 1;
    sub_25114D418();
    sub_2511C9C00();
    LOBYTE(v15) = 2;
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for CurrentValueWorkPlan.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_25114D3C4()
{
  unint64_t result = qword_269B21908;
  if (!qword_269B21908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21908);
  }
  return result;
}

unint64_t sub_25114D418()
{
  unint64_t result = qword_269B21910;
  if (!qword_269B21910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21910);
  }
  return result;
}

uint64_t CurrentValueWorkPlan.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v28 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v27 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CurrentValueWorkPlan.CodingKeys();
  swift_getWitnessTable();
  uint64_t v31 = sub_2511C9BA0();
  uint64_t v26 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v29 = a3;
  uint64_t v10 = type metadata accessor for CurrentValueWorkPlan();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v23 - v11;
  uint64_t v13 = a1[3];
  char v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  char v30 = v9;
  uint64_t v14 = v33;
  sub_2511C9D90();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  uint64_t v15 = v26;
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  char v36 = 0;
  sub_25114D870();
  sub_2511C9B90();
  uint64_t v18 = v35;
  *(_OWORD *)char v12 = v34;
  *((void *)v12 + 2) = v18;
  char v36 = 1;
  sub_25114D8C4();
  sub_2511C9B90();
  char v19 = BYTE8(v34);
  *((void *)v12 + 3) = v34;
  v12[32] = v19;
  LOBYTE(v34) = 2;
  uint64_t v33 = v12;
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v31);
  uint64_t v20 = v33;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v33[*(int *)(v10 + 48)], v16, a2);
  uint64_t v21 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v25, v20, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v20, v10);
}

unint64_t sub_25114D870()
{
  unint64_t result = qword_269B21E20;
  if (!qword_269B21E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21E20);
  }
  return result;
}

unint64_t sub_25114D8C4()
{
  unint64_t result = qword_269B21920[0];
  if (!qword_269B21920[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269B21920);
  }
  return result;
}

uint64_t sub_25114D920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CurrentValueWorkPlan.merged(with:)(a1, a2, a3);
}

uint64_t sub_25114D938@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CurrentValueWorkPlan.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_25114D95C(void *a1, uint64_t a2)
{
  return CurrentValueWorkPlan.encode(to:)(a1, a2);
}

uint64_t CurrentValueWorkPlan.description.getter()
{
  return 0;
}

uint64_t static CurrentValueWorkPlan<>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (sub_2511C9CA0()) && v4 == v5)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned __int8 v8 = *(unsigned char *)(a1 + 32);
    uint64_t v9 = *(void *)(a2 + 24);
    char v10 = *(unsigned char *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_25114DF90(v7, v9))
    {
      char v11 = sub_25114DC38(v8, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        type metadata accessor for CurrentValueWorkPlan();
        return sub_2511C9470() & 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_25114DC24(uint64_t a1, uint64_t a2)
{
  return static CurrentValueWorkPlan<>.== infix(_:_:)(a1, a2);
}

uint64_t sub_25114DC38(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000646569;
  uint64_t v3 = 0x6669636570736E75;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6669636570736E75;
  unint64_t v6 = 0xEB00000000646569;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x746E65677275;
      break;
    case 2:
      uint64_t v5 = 0x616E65746E69616DLL;
      unint64_t v6 = 0xEB0000000065636ELL;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x64656B636F6C62;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x746E65677275) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x616E65746E69616DLL;
      unint64_t v2 = 0xEB0000000065636ELL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x64656B636F6C62) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25114DDE0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000002511D09B0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "backgroundRunning";
      goto LABEL_4;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "backgroundSuspended";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v5 = 0x696E6E7552746F6ELL;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000002511D09B0;
  switch(a2)
  {
    case 1:
      unsigned __int8 v8 = "backgroundRunning";
      goto LABEL_10;
    case 2:
      unint64_t v2 = 0xD000000000000013;
      unsigned __int8 v8 = "backgroundSuspended";
LABEL_10:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != v2) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      unint64_t v2 = 0x696E6E7552746F6ELL;
      unint64_t v7 = 0xEA0000000000676ELL;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_17:
      }
        char v9 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_25114DF90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  uint64_t v124 = a1 + 32;
  uint64_t v125 = *(void *)(a1 + 16);
  uint64_t v123 = a2 + 32;
LABEL_5:
  unint64_t v6 = (unsigned __int8 *)(v4 + 16 * v3);
  uint64_t v7 = *(void *)v6;
  unsigned __int8 v8 = (unsigned __int8 *)(v5 + 16 * v3);
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(*(void *)v6 + 16);
  if (v10 != *(void *)(*(void *)v8 + 16)) {
    return 0;
  }
  uint64_t v11 = v6[8];
  uint64_t v12 = v8[8];
  if (!v10)
  {
    swift_bridgeObjectRetain();
LABEL_118:
    swift_bridgeObjectRetain();
    goto LABEL_119;
  }
  swift_bridgeObjectRetain();
  if (v7 == v9) {
    goto LABEL_118;
  }
  uint64_t v120 = v9 + 32;
  uint64_t v121 = v7 + 32;
  swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  uint64_t v118 = v12;
  uint64_t v119 = v3;
  uint64_t v122 = v9;
  uint64_t v111 = v10;
  uint64_t v112 = v11;
LABEL_9:
  uint64_t v14 = v9;
  if (v13 >= *(void *)(v9 + 16)) {
    goto LABEL_149;
  }
  uint64_t v15 = v3;
  uint64_t v16 = v12;
  uint64_t v17 = v5;
  uint64_t v18 = v4;
  char v19 = (uint64_t *)(v121 + 16 * v13);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  unint64_t v22 = (void *)(v120 + 16 * v13);
  uint64_t v129 = v21;
  uint64_t v130 = *v22;
  uint64_t v131 = v22[1];
  unint64_t v113 = v13;
  if (v20 == *v22)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = v17;
    uint64_t v12 = v16;
    uint64_t v3 = v15;
    uint64_t v9 = v14;
LABEL_65:
    if (v21 == v131) {
      goto LABEL_114;
    }
    if (*(void *)(v21 + 16) != *(void *)(v131 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_139;
    }
    int64_t v67 = 0;
    uint64_t v115 = v21 + 64;
    uint64_t v68 = 1 << *(unsigned char *)(v21 + 32);
    if (v68 < 64) {
      uint64_t v69 = ~(-1 << v68);
    }
    else {
      uint64_t v69 = -1;
    }
    unint64_t v70 = v69 & *(void *)(v21 + 64);
    int64_t v117 = (unint64_t)(v68 + 63) >> 6;
    if (!v70) {
      goto LABEL_72;
    }
LABEL_71:
    uint64_t v127 = (v70 - 1) & v70;
    int64_t v133 = v67;
    unint64_t v71 = __clz(__rbit64(v70)) | (v67 << 6);
LABEL_85:
    uint64_t v76 = *(void *)(v21 + 56);
    char v77 = (uint64_t *)(*(void *)(v21 + 48) + 16 * v71);
    uint64_t v78 = *v77;
    uint64_t v79 = v77[1];
    uint64_t v80 = *(void *)(v76 + 8 * v71);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v81 = sub_251149240(v78, v79);
    char v83 = v82;
    swift_bridgeObjectRelease();
    if ((v83 & 1) == 0) {
      goto LABEL_137;
    }
    uint64_t v84 = *(void *)(*(void *)(v131 + 56) + 8 * v81);
    if (v84 == v80)
    {
      swift_bridgeObjectRelease();
      goto LABEL_112;
    }
    if (*(void *)(v84 + 16) != *(void *)(v80 + 16)) {
      goto LABEL_137;
    }
    uint64_t v85 = 1 << *(unsigned char *)(v84 + 32);
    uint64_t v86 = v84 + 64;
    if (v85 < 64) {
      uint64_t v87 = ~(-1 << v85);
    }
    else {
      uint64_t v87 = -1;
    }
    unint64_t v88 = v87 & *(void *)(v84 + 64);
    int64_t v89 = (unint64_t)(v85 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v90 = 0;
    while (1)
    {
      if (v88)
      {
        unint64_t v91 = __clz(__rbit64(v88));
        v88 &= v88 - 1;
        unint64_t v92 = v91 | (v90 << 6);
      }
      else
      {
        int64_t v93 = v90 + 1;
        if (__OFADD__(v90, 1))
        {
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (v93 >= v89) {
          goto LABEL_111;
        }
        unint64_t v94 = *(void *)(v86 + 8 * v93);
        ++v90;
        if (!v94)
        {
          int64_t v90 = v93 + 1;
          if (v93 + 1 >= v89) {
            goto LABEL_111;
          }
          unint64_t v94 = *(void *)(v86 + 8 * v90);
          if (!v94)
          {
            int64_t v90 = v93 + 2;
            if (v93 + 2 >= v89) {
              goto LABEL_111;
            }
            unint64_t v94 = *(void *)(v86 + 8 * v90);
            if (!v94)
            {
              int64_t v95 = v93 + 3;
              if (v95 >= v89) {
                goto LABEL_111;
              }
              unint64_t v94 = *(void *)(v86 + 8 * v95);
              int64_t v90 = v95;
              if (!v94)
              {
                while (1)
                {
                  int64_t v90 = v95 + 1;
                  if (__OFADD__(v95, 1)) {
                    goto LABEL_151;
                  }
                  if (v90 >= v89) {
                    break;
                  }
                  unint64_t v94 = *(void *)(v86 + 8 * v90);
                  ++v95;
                  if (v94) {
                    goto LABEL_106;
                  }
                }
LABEL_111:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v9 = v122;
LABEL_112:
                int64_t v67 = v133;
                uint64_t v4 = v124;
                uint64_t v2 = v125;
                uint64_t v12 = v118;
                uint64_t v3 = v119;
                uint64_t v5 = v123;
                uint64_t v21 = v129;
                unint64_t v70 = v127;
                if (v127) {
                  goto LABEL_71;
                }
LABEL_72:
                int64_t v72 = v67 + 1;
                if (__OFADD__(v67, 1)) {
                  goto LABEL_152;
                }
                if (v72 >= v117) {
                  goto LABEL_114;
                }
                unint64_t v73 = *(void *)(v115 + 8 * v72);
                int64_t v74 = v67 + 1;
                if (v73) {
                  goto LABEL_84;
                }
                int64_t v74 = v67 + 2;
                if (v67 + 2 >= v117) {
                  goto LABEL_114;
                }
                unint64_t v73 = *(void *)(v115 + 8 * v74);
                if (v73) {
                  goto LABEL_84;
                }
                int64_t v74 = v67 + 3;
                if (v67 + 3 >= v117) {
                  goto LABEL_114;
                }
                unint64_t v73 = *(void *)(v115 + 8 * v74);
                if (v73) {
                  goto LABEL_84;
                }
                uint64_t v75 = v67 + 4;
                if (v67 + 4 >= v117) {
                  goto LABEL_114;
                }
                unint64_t v73 = *(void *)(v115 + 8 * v75);
                int64_t v74 = v67 + 4;
                if (v73)
                {
LABEL_84:
                  uint64_t v127 = (v73 - 1) & v73;
                  int64_t v133 = v74;
                  unint64_t v71 = __clz(__rbit64(v73)) + (v74 << 6);
                  goto LABEL_85;
                }
                while (1)
                {
                  int64_t v74 = v75 + 1;
                  if (__OFADD__(v75, 1)) {
                    goto LABEL_154;
                  }
                  if (v74 >= v117) {
                    break;
                  }
                  unint64_t v73 = *(void *)(v115 + 8 * v74);
                  ++v75;
                  if (v73) {
                    goto LABEL_84;
                  }
                }
LABEL_114:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v13 = v113 + 1;
                uint64_t v11 = v112;
                if (v113 + 1 == v111)
                {
LABEL_119:
                  ++v3;
                  unint64_t v104 = 0xEB00000000646569;
                  uint64_t v105 = 0x6669636570736E75;
                  switch(v11)
                  {
                    case 1:
                      unint64_t v104 = 0xE600000000000000;
                      uint64_t v105 = 0x746E65677275;
                      break;
                    case 2:
                      uint64_t v105 = 0x616E65746E69616DLL;
                      unint64_t v104 = 0xEB0000000065636ELL;
                      break;
                    case 3:
                      unint64_t v104 = 0xE700000000000000;
                      uint64_t v105 = 0x64656B636F6C62;
                      break;
                    default:
                      break;
                  }
                  uint64_t v106 = 0x6669636570736E75;
                  unint64_t v107 = 0xEB00000000646569;
                  switch(v12)
                  {
                    case 1:
                      unint64_t v107 = 0xE600000000000000;
                      if (v105 != 0x746E65677275) {
                        goto LABEL_132;
                      }
                      goto LABEL_130;
                    case 2:
                      uint64_t v106 = 0x616E65746E69616DLL;
                      unint64_t v107 = 0xEB0000000065636ELL;
                      goto LABEL_127;
                    case 3:
                      unint64_t v107 = 0xE700000000000000;
                      if (v105 == 0x64656B636F6C62) {
                        goto LABEL_130;
                      }
                      goto LABEL_132;
                    default:
LABEL_127:
                      if (v105 != v106) {
                        goto LABEL_132;
                      }
LABEL_130:
                      if (v104 == v107)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
LABEL_132:
                        char v108 = sub_2511C9CA0();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v108 & 1) == 0) {
                          return 0;
                        }
                      }
                      uint64_t result = 1;
                      if (v3 == v2) {
                        return result;
                      }
                      goto LABEL_5;
                  }
                }
                goto LABEL_9;
              }
            }
          }
        }
LABEL_106:
        unint64_t v88 = (v94 - 1) & v94;
        unint64_t v92 = __clz(__rbit64(v94)) + (v90 << 6);
      }
      uint64_t v96 = (uint64_t *)(*(void *)(v84 + 48) + 16 * v92);
      uint64_t v97 = *v96;
      uint64_t v98 = v96[1];
      uint64_t v99 = *(void *)(*(void *)(v84 + 56) + 8 * v92);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251149240(v97, v98);
      char v101 = v100;
      swift_bridgeObjectRelease();
      if ((v101 & 1) == 0)
      {
LABEL_136:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_137;
      }
      uint64_t v102 = swift_bridgeObjectRetain();
      char v103 = sub_251161FAC(v102, v99);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v103 & 1) == 0)
      {
LABEL_109:
        swift_bridgeObjectRelease();
        goto LABEL_137;
      }
    }
  }
  if (*(void *)(v20 + 16) != *(void *)(*v22 + 16)) {
    goto LABEL_138;
  }
  uint64_t v23 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v114 = v20 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  unint64_t v25 = v24 & *(void *)(v20 + 64);
  int64_t v116 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v26 = 0;
  uint64_t v27 = v18;
  uint64_t v5 = v17;
  uint64_t v12 = v16;
  uint64_t v3 = v15;
  uint64_t v9 = v14;
  unint64_t v28 = v25;
  uint64_t v4 = v27;
  uint64_t v128 = v20;
LABEL_16:
  while (2)
  {
    if (v28)
    {
      unint64_t v29 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      int64_t v126 = v26;
      unint64_t v30 = v29 | (v26 << 6);
      goto LABEL_32;
    }
    int64_t v31 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      goto LABEL_150;
    }
    if (v31 >= v116) {
      goto LABEL_65;
    }
    unint64_t v32 = *(void *)(v114 + 8 * v31);
    int64_t v33 = v26 + 1;
    if (v32) {
      goto LABEL_31;
    }
    int64_t v33 = v26 + 2;
    if (v26 + 2 >= v116) {
      goto LABEL_65;
    }
    unint64_t v32 = *(void *)(v114 + 8 * v33);
    if (v32) {
      goto LABEL_31;
    }
    int64_t v33 = v26 + 3;
    if (v26 + 3 >= v116) {
      goto LABEL_65;
    }
    unint64_t v32 = *(void *)(v114 + 8 * v33);
    if (v32) {
      goto LABEL_31;
    }
    uint64_t v34 = v26 + 4;
    if (v26 + 4 >= v116) {
      goto LABEL_65;
    }
    unint64_t v32 = *(void *)(v114 + 8 * v34);
    if (!v32)
    {
      while (1)
      {
        int64_t v33 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          goto LABEL_153;
        }
        if (v33 >= v116) {
          goto LABEL_65;
        }
        unint64_t v32 = *(void *)(v114 + 8 * v33);
        ++v34;
        if (v32) {
          goto LABEL_31;
        }
      }
    }
    int64_t v33 = v26 + 4;
LABEL_31:
    unint64_t v28 = (v32 - 1) & v32;
    int64_t v126 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_32:
    uint64_t v35 = *(void *)(v20 + 56);
    char v36 = (uint64_t *)(*(void *)(v20 + 48) + 16 * v30);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    uint64_t v39 = *(void *)(v35 + 8 * v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_251149240(v37, v38);
    char v42 = v41;
    swift_bridgeObjectRelease();
    if (v42)
    {
      uint64_t v43 = *(void *)(*(void *)(v130 + 56) + 8 * v40);
      if (v43 == v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v124;
        uint64_t v2 = v125;
        uint64_t v12 = v118;
        uint64_t v3 = v119;
        uint64_t v5 = v123;
        uint64_t v20 = v128;
        uint64_t v21 = v129;
        int64_t v26 = v126;
        continue;
      }
      if (*(void *)(v43 + 16) == *(void *)(v39 + 16))
      {
        unint64_t v110 = v28;
        uint64_t v44 = 1 << *(unsigned char *)(v43 + 32);
        uint64_t v45 = v43 + 64;
        if (v44 < 64) {
          uint64_t v46 = ~(-1 << v44);
        }
        else {
          uint64_t v46 = -1;
        }
        unint64_t v47 = v46 & *(void *)(v43 + 64);
        int64_t v132 = (unint64_t)(v44 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v48 = 0;
        while (1)
        {
          if (v47)
          {
            unint64_t v49 = __clz(__rbit64(v47));
            v47 &= v47 - 1;
            unint64_t v50 = v49 | (v48 << 6);
          }
          else
          {
            int64_t v51 = v48 + 1;
            if (__OFADD__(v48, 1))
            {
              __break(1u);
              goto LABEL_147;
            }
            if (v51 >= v132) {
              goto LABEL_63;
            }
            unint64_t v52 = *(void *)(v45 + 8 * v51);
            ++v48;
            if (!v52)
            {
              int64_t v48 = v51 + 1;
              if (v51 + 1 >= v132) {
                goto LABEL_63;
              }
              unint64_t v52 = *(void *)(v45 + 8 * v48);
              if (!v52)
              {
                int64_t v48 = v51 + 2;
                if (v51 + 2 >= v132) {
                  goto LABEL_63;
                }
                unint64_t v52 = *(void *)(v45 + 8 * v48);
                if (!v52)
                {
                  int64_t v53 = v51 + 3;
                  if (v53 >= v132)
                  {
LABEL_63:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v9 = v122;
                    uint64_t v5 = v123;
                    uint64_t v4 = v124;
                    uint64_t v2 = v125;
                    uint64_t v12 = v118;
                    uint64_t v3 = v119;
                    uint64_t v20 = v128;
                    uint64_t v21 = v129;
                    int64_t v26 = v126;
                    unint64_t v28 = v110;
                    goto LABEL_16;
                  }
                  unint64_t v52 = *(void *)(v45 + 8 * v53);
                  int64_t v48 = v53;
                  if (!v52)
                  {
                    while (1)
                    {
                      int64_t v48 = v53 + 1;
                      if (__OFADD__(v53, 1)) {
                        break;
                      }
                      if (v48 >= v132) {
                        goto LABEL_63;
                      }
                      unint64_t v52 = *(void *)(v45 + 8 * v48);
                      ++v53;
                      if (v52) {
                        goto LABEL_54;
                      }
                    }
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
                    JUMPOUT(0x25114EB6CLL);
                  }
                }
              }
            }
LABEL_54:
            unint64_t v47 = (v52 - 1) & v52;
            unint64_t v50 = __clz(__rbit64(v52)) + (v48 << 6);
          }
          uint64_t v54 = 16 * v50;
          uint64_t v55 = (uint64_t *)(*(void *)(v43 + 48) + v54);
          uint64_t v56 = *v55;
          uint64_t v57 = v55[1];
          char v58 = (uint64_t *)(*(void *)(v43 + 56) + v54);
          uint64_t v59 = *v58;
          uint64_t v60 = v58[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v61 = sub_251149240(v56, v57);
          char v63 = v62;
          swift_bridgeObjectRelease();
          if ((v63 & 1) == 0) {
            goto LABEL_136;
          }
          uint64_t v64 = (void *)(*(void *)(v39 + 56) + 16 * v61);
          if (*v64 == v59 && v64[1] == v60)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v66 = sub_2511C9CA0();
            swift_bridgeObjectRelease();
            if ((v66 & 1) == 0) {
              goto LABEL_109;
            }
          }
        }
      }
    }
    break;
  }
LABEL_137:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_138:
  swift_bridgeObjectRelease();
LABEL_139:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25114EB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v10 = 0;
    return v10 & 1;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(a2 + 40);
    uint64_t v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *(v4 - 1);
      uint64_t v9 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_251163588(v6, v8) & 1) == 0) {
        break;
      }
      char v10 = sub_2511635A0(v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v12 = v3-- != 0;
      if (v10)
      {
        v4 += 2;
        v5 += 2;
        if (v12) {
          continue;
        }
      }
      return v10 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v10 = 1;
  return v10 & 1;
}

uint64_t sub_25114EC9C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
    if (v6 != v30) {
      goto LABEL_62;
    }
  }
  else if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_62;
  }
  if (!v6) {
    goto LABEL_46;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (!v5) {
    uint64_t v7 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v7 == v8)
  {
LABEL_46:
    LOBYTE(v6) = 1;
    return v6 & 1;
  }
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
    {
      char v10 = *(void **)(a1 + 32);
      uint64_t result = swift_retain();
      unint64_t v12 = a2 & 0xC000000000000001;
      if ((a2 & 0xC000000000000001) == 0) {
        goto LABEL_19;
      }
LABEL_69:
      unint64_t v13 = (void *)MEMORY[0x2533971C0](0, a2);
      goto LABEL_21;
    }
  }
  uint64_t result = MEMORY[0x2533971C0](0, a1);
  char v10 = (void *)result;
  unint64_t v12 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0) {
    goto LABEL_69;
  }
LABEL_19:
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v13 = *(void **)(a2 + 32);
    swift_retain();
LABEL_21:
    if (v10[2] == v13[2] && v10[3] == v13[3] || (sub_2511C9CA0())
      && (sub_2511637C4(v10[4], v13[4]) & 1) != 0)
    {
      char v14 = sub_251164318(v10[5], v13[5]);
      swift_release();
      uint64_t result = swift_release();
      if (v14)
      {
        uint64_t v15 = v6 - 1;
        if (v6 != 1)
        {
          if (((a2 | a1) & 0xC000000000000001) != 0)
          {
            uint64_t v16 = 0;
            uint64_t v31 = v6 - 2;
            while (1)
            {
              if (v15 == v16) {
                goto LABEL_71;
              }
              if (v2)
              {
                uint64_t result = MEMORY[0x2533971C0](v16 + 1, a1);
                uint64_t v17 = (void *)result;
                if (v12) {
                  goto LABEL_32;
                }
              }
              else
              {
                uint64_t v17 = *(void **)(a1 + 40 + 8 * v16);
                uint64_t result = swift_retain();
                if (v12)
                {
LABEL_32:
                  uint64_t v18 = (void *)MEMORY[0x2533971C0](v16 + 1, a2);
                  goto LABEL_36;
                }
              }
              if ((unint64_t)(v16 + 1) >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_74;
              }
              uint64_t v18 = *(void **)(a2 + 40 + 8 * v16);
              swift_retain();
LABEL_36:
              BOOL v19 = v17[2] == v18[2] && v17[3] == v18[3];
              if (!v19 && (sub_2511C9CA0() & 1) == 0 || (sub_2511637C4(v17[4], v18[4]) & 1) == 0) {
                goto LABEL_61;
              }
              LOBYTE(v6) = sub_251164318(v17[5], v18[5]);
              swift_release();
              uint64_t result = swift_release();
              if (v6)
              {
                BOOL v19 = v31 == v16++;
                if (!v19) {
                  continue;
                }
              }
              return v6 & 1;
            }
          }
          unint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v20 <= 1) {
            unint64_t v20 = 1;
          }
          unint64_t v21 = v20 - 1;
          uint64_t v22 = a1 + 40;
          uint64_t v23 = a2 + 40;
          LOBYTE(v6) = 1;
          while (v15)
          {
            if (!v21) {
              goto LABEL_73;
            }
            uint64_t v24 = *(void *)v22;
            uint64_t v25 = *(void *)v23;
            BOOL v26 = *(void *)(*(void *)v22 + 16) == *(void *)(*(void *)v23 + 16)
               && *(void *)(*(void *)v22 + 24) == *(void *)(*(void *)v23 + 24);
            if (!v26 && (sub_2511C9CA0() & 1) == 0) {
              goto LABEL_62;
            }
            uint64_t v27 = *(void *)(v24 + 32);
            uint64_t v28 = *(void *)(v25 + 32);
            swift_retain();
            swift_retain();
            if ((sub_2511637C4(v27, v28) & 1) == 0) {
              goto LABEL_61;
            }
            char v29 = sub_251164318(*(void *)(v24 + 40), *(void *)(v25 + 40));
            swift_release();
            uint64_t result = swift_release();
            if ((v29 & 1) == 0) {
              goto LABEL_62;
            }
            --v21;
            v22 += 8;
            v23 += 8;
            if (!--v15) {
              return v6 & 1;
            }
          }
          goto LABEL_72;
        }
        return v6 & 1;
      }
    }
    else
    {
LABEL_61:
      swift_release();
      swift_release();
    }
LABEL_62:
    LOBYTE(v6) = 0;
    return v6 & 1;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_25114F044(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_25114F0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25114F0AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25114F150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 33) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    a1[2] = a2[2];
    unint64_t v11 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v12 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v11 = *(void *)v12;
    *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
    uint64_t v13 = (v11 + v6 + 9) & ~v6;
    uint64_t v14 = (v12 + v6 + 9) & ~v6;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_25114F294(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 31) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_25114F318(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  unint64_t v5 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v5 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = (v9 + 9 + v5) & ~v9;
  uint64_t v11 = (v9 + 9 + v6) & ~v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_25114F3E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  unint64_t v6 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v6 = *(void *)v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v6 + 8) = *(unsigned char *)(v7 + 8);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(unsigned __int8 *)(v8 + 80) + 9 + v6) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 9 + v7) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_25114F4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
  *(void *)unint64_t v4 = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(unsigned __int8 *)(v7 + 80) + 9 + v4) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 9 + v5) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

void *sub_25114F550(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  unint64_t v7 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))((*(unsigned __int8 *)(v9 + 80) + 9 + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 9 + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_25114F608(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 33) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 9) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_25114F7B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 33) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25114FA1CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v9 + 9) & ~v9;
          BOOL v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 1) = 0;
          *((void *)a1 + 2) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_25114FA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t getEnumTagSinglePayload for EnqueuedWorkPlan.PlanState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_25114FADC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25114FBA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25114FBD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_25114FBEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_25114FC08()
{
  return swift_getWitnessTable();
}

uint64_t sub_25114FC24(uint64_t a1, uint64_t a2)
{
  return sub_25114FD30(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_25114FC44(uint64_t a1, uint64_t a2)
{
  return sub_25114FD30(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_25114FC68()
{
  sub_2511C94B0();
  sub_2511C94F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25114FCBC()
{
  sub_2511C94B0();
  sub_2511C9D40();
  sub_2511C94F0();
  uint64_t v0 = sub_2511C9D80();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25114FD30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_2511C94B0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25114FD74(uint64_t a1, id *a2)
{
  uint64_t result = sub_2511C9490();
  *a2 = 0;
  return result;
}

uint64_t sub_25114FDEC(uint64_t a1, id *a2)
{
  char v3 = sub_2511C94A0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25114FE6C@<X0>(uint64_t *a1@<X8>)
{
  sub_2511C94B0();
  uint64_t v2 = sub_2511C9480();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25114FEB4()
{
  uint64_t v0 = sub_2511C94B0();
  uint64_t v2 = v1;
  if (v0 == sub_2511C94B0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_2511C9CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_25114FF44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2511C94B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25114FF70(uint64_t a1)
{
  uint64_t v2 = sub_2511501F0(&qword_269B21B10, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_2511501F0(&qword_269B21B18, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25115002C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2511C9480();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_251150074(uint64_t a1)
{
  uint64_t v2 = sub_2511501F0((unint64_t *)&qword_269B21B20, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_2511501F0(&qword_269B21B28, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_251150130()
{
  return 3;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t sub_251150160()
{
  return sub_2511501F0(&qword_269B21AE0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_2511501A8()
{
  return sub_2511501F0(&qword_269B21AE8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_2511501F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251150238()
{
  return sub_2511501F0(&qword_269B21AF0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_251150280()
{
  return sub_2511501F0(&qword_269B21AF8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_2511502C8()
{
  return sub_2511501F0(&qword_269B21B00, type metadata accessor for FileAttributeKey);
}

uint64_t sub_251150310()
{
  return sub_2511501F0(&qword_269B21B08, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t InputSignalAnchor.isEqual(to:)()
{
  return sub_2511C9470() & 1;
}

uint64_t dispatch thunk of InputSignalAnchor.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of InputSignalAnchor.merged(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of InputSignalAnchor.hasDifference(from:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_2511503D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_2511C9890();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int v13 = &v21[-v12 - 8];
  uint64_t v14 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned int v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25112FD4C(a1, (uint64_t)v21);
  sub_25112F678(0, qword_26B216650);
  int v17 = swift_dynamicCast();
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    v18(v13, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, a2);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 56))(v16, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  }
  else
  {
    v18(v13, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, v4, a2);
  }
}

id SecureCodingValueAnchor.value.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t SecureCodingValueAnchor.hasDifference(from:for:)(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = *(void **)(v1 + 32);
    uint64_t v5 = a1[3];
    uint64_t v4 = (void *)a1[4];
    uint64_t v6 = a1[2];
    uint64_t v7 = *a1;
    sub_2511506DC(*a1, v2, v6, v5, v4);
    id v8 = v3;
    id v9 = v4;
    char v10 = sub_2511C9880();
    sub_251150728(v7, v2, v6, v5, v4);

    char v11 = v10 ^ 1;
  }
  else
  {
    char v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_2511506DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v6 = a5;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251150728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SecureCodingValueAnchor.merged(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  id v6 = (void *)v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = v6;
  swift_bridgeObjectRetain();
  id v7 = v6;

  return swift_bridgeObjectRetain();
}

BOOL sub_2511507C4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2511507D4()
{
  return sub_2511C9D50();
}

uint64_t sub_2511507FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2511508F4()
{
  return sub_2511C9D80();
}

uint64_t sub_25115093C(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 0x696669746E656469;
  }
}

BOOL sub_251150974(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2511507C4(*a1, *a2);
}

uint64_t sub_251150980()
{
  return sub_2511508F4();
}

uint64_t sub_251150988()
{
  return sub_2511507D4();
}

uint64_t sub_251150990()
{
  return sub_2511C9D80();
}

uint64_t sub_2511509D0()
{
  return sub_25115093C(*v0);
}

uint64_t sub_2511509D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511507FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251150A00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_251151710();
  *a1 = result;
  return result;
}

uint64_t sub_251150A2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_251150A80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void SecureCodingValueAnchor.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v24 = a2;
  type metadata accessor for SecureCodingValueAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_2511C9BA0();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v20 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511C9D90();
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v7 = v25;
  char v30 = 1;
  sub_251150E90();
  sub_2511C9B90();
  uint64_t v23 = v6;
  uint64_t v9 = v26;
  unint64_t v8 = v27;
  sub_251131578(0, (unint64_t *)&qword_26B217F80);
  uint64_t v10 = sub_2511C9780();
  char v11 = (void *)v10;
  uint64_t v21 = v9;
  unint64_t v22 = v8;
  if (!v10)
  {
    LOBYTE(v26) = 1;
    sub_2511C99B0();
    swift_allocError();
    swift_getWitnessTable();
    uint64_t v14 = v23;
    sub_2511C99A0();
    swift_willThrow();
    sub_251150EE4(v21, v22);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v4);
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }
  char v30 = 0;
  sub_251150F3C();
  id v12 = v11;
  int v13 = v23;
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v4);
  sub_251150EE4(v21, v22);
  uint64_t v16 = v26;
  unint64_t v15 = v27;
  uint64_t v18 = v28;
  uint64_t v17 = v29;
  swift_bridgeObjectRetain();
  BOOL v19 = v24;
  *uint64_t v24 = v16;
  v19[1] = v15;
  void v19[2] = v18;
  v19[3] = v17;
  v19[4] = (uint64_t)v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SecureCodingValueAnchor.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_251150E90()
{
  unint64_t result = qword_26B2178B0;
  if (!qword_26B2178B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2178B0);
  }
  return result;
}

uint64_t sub_251150EE4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_251150F3C()
{
  unint64_t result = qword_26B218630;
  if (!qword_26B218630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218630);
  }
  return result;
}

uint64_t SecureCodingValueAnchor.encode(to:)(void *a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  type metadata accessor for SecureCodingValueAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_2511C9C20();
  uint64_t v3 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v19 - v4;
  char v6 = *v1;
  uint64_t v7 = v1[1];
  BOOL v19 = v1[2];
  uint64_t v20 = v6;
  unint64_t v8 = v1[4];
  uint64_t v21 = v1[3];
  unint64_t v22 = (unint64_t)v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511C9DA0();
  uint64_t v9 = self;
  id v26 = 0;
  id v10 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, &v26);
  id v11 = v26;
  if (v10)
  {
    id v12 = (void *)sub_2511C91B0();
    unint64_t v14 = v13;

    id v26 = v12;
    unint64_t v27 = v14;
    char v25 = 1;
    sub_251151270();
    uint64_t v15 = v23;
    uint64_t v16 = v24;
    sub_2511C9C00();
    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
      return sub_251150EE4((uint64_t)v12, v14);
    }
    else
    {
      id v26 = v20;
      unint64_t v27 = v22;
      uint64_t v28 = v19;
      uint64_t v29 = v21;
      char v25 = 0;
      sub_2511512C4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2511C9C00();
      sub_251150EE4((uint64_t)v12, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v16);
    }
  }
  else
  {
    uint64_t v18 = v11;
    sub_2511C9140();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  }
}

unint64_t sub_251151270()
{
  unint64_t result = qword_26B2178A0;
  if (!qword_26B2178A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2178A0);
  }
  return result;
}

unint64_t sub_2511512C4()
{
  unint64_t result = qword_26B218610;
  if (!qword_26B218610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218610);
  }
  return result;
}

void sub_251151320(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_251151340(void *a1)
{
  return SecureCodingValueAnchor.encode(to:)(a1);
}

unint64_t sub_25115135C()
{
  unint64_t result = qword_269B21B90;
  if (!qword_269B21B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21B90);
  }
  return result;
}

uint64_t sub_2511513B0(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

void *sub_251151430(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t sub_2511514B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t type metadata accessor for SecureCodingValueAnchor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251151524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t getEnumTagSinglePayload for ExecutorIdentifier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_2511515BC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251151688);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_2511516B0(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t sub_2511516BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2511516D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2511516F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_251151710()
{
  return 2;
}

uint64_t ScopedExecutorIdentifier.provider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ScopedExecutorIdentifier.provider.modify())()
{
  return nullsub_1;
}

__n128 ScopedExecutorIdentifier.executor.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  v1[1] = v5;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  return result;
}

uint64_t (*ScopedExecutorIdentifier.executor.modify())()
{
  return nullsub_1;
}

void __swiftcall ScopedExecutorIdentifier.init(provider:executor:)(HealthOrchestration::ScopedExecutorIdentifier *__return_ptr retstr, Swift::String provider, HealthOrchestration::ExecutorIdentifier executor)
{
  uint64_t v3 = *(void *)executor.value._countAndFlagsBits;
  unsigned int v4 = *(void **)(executor.value._countAndFlagsBits + 8);
  retstr->provider = provider;
  retstr->executor.value._countAndFlagsBits = v3;
  retstr->executor.value._object = v4;
  retstr->executor.logDescription = *(Swift::String_optional *)(executor.value._countAndFlagsBits + 16);
}

uint64_t static ExecutorIdentifier.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t static ExecutorIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t ScopedExecutorIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t ScopedExecutorIdentifier.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t sub_2511519A8(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_2511519F0(v7, v8) & 1;
}

uint64_t sub_2511519F0(void *a1, void *a2)
{
  if (*a2 != *a1 || a2[1] != a1[1])
  {
    if (sub_2511C9CA0())
    {
      char v5 = 0;
      return v5 & 1;
    }
    char v5 = 1;
    if (sub_2511C9CA0()) {
      return v5 & 1;
    }
  }
  if (a2[2] == a1[2] && a2[3] == a1[3]) {
    char v5 = 1;
  }
  else {
    char v5 = sub_2511C9CA0() ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_251151AB0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_251151AF8(v7, v8) & 1;
}

uint64_t sub_251151AF8(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    if (sub_2511C9CA0())
    {
      char v5 = 0;
      return v5 & 1;
    }
    char v5 = 1;
    if (sub_2511C9CA0()) {
      return v5 & 1;
    }
  }
  if (a1[2] == a2[2] && a1[3] == a2[3]) {
    char v5 = 1;
  }
  else {
    char v5 = sub_2511C9CA0() ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_251151BB8(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_251151C00(v7, v8) & 1;
}

uint64_t sub_251151C00(void *a1, void *a2)
{
  if (*a2 != *a1 || a2[1] != a1[1])
  {
    uint64_t v5 = 1;
    if (sub_2511C9CA0()) {
      return v5;
    }
    if (sub_2511C9CA0()) {
      return 0;
    }
  }
  if (a2[2] == a1[2] && a2[3] == a1[3]) {
    return 0;
  }

  return sub_2511C9CA0();
}

uint64_t sub_251151CD8()
{
  return sub_2511C9D80();
}

uint64_t sub_251151D7C()
{
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_251151E14()
{
  return sub_2511C9D80();
}

uint64_t ExecutorIdentifier.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExecutorIdentifier.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *long long v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ExecutorIdentifier.value.modify())()
{
  return nullsub_1;
}

uint64_t ExecutorIdentifier.logDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExecutorIdentifier.logDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ExecutorIdentifier.logDescription.modify())()
{
  return nullsub_1;
}

HealthOrchestration::ExecutorIdentifier __swiftcall ExecutorIdentifier.init(_:logDescription:)(Swift::String _, Swift::String_optional logDescription)
{
  v2->value = _;
  v2[1] = logDescription;
  result.logDescription = logDescription;
  result.value = _;
  return result;
}

BOOL sub_251151FD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_251151FE8()
{
  return sub_2511C9D80();
}

uint64_t sub_251152030()
{
  return sub_2511C9D50();
}

uint64_t sub_25115205C()
{
  return sub_2511C9D80();
}

uint64_t sub_2511520A0()
{
  if (*v0) {
    return 0x7263736544676F6CLL;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_2511520E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511530F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_25115210C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_251152118(uint64_t a1)
{
  unint64_t v2 = sub_2511529DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251152154(uint64_t a1)
{
  unint64_t v2 = sub_2511529DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExecutorIdentifier.encode(to:)(void *a1)
{
  sub_251152A30(0, &qword_269B21B98, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511529DC();
  sub_2511C9DA0();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_2511C9BD0();
  if (!v9)
  {
    char v12 = 1;
    sub_2511C9BB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ExecutorIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_251152A30(0, &qword_269B21BA8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511529DC();
  sub_2511C9D90();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v21 = 0;
    uint64_t v11 = sub_2511C9B60();
    uint64_t v13 = v12;
    char v20 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2511C9B40();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v19 = v14;
    v17(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v19;
    a2[3] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251152548@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExecutorIdentifier.init(from:)(a1, a2);
}

uint64_t sub_251152560(void *a1)
{
  return ExecutorIdentifier.encode(to:)(a1);
}

HealthOrchestration::ExecutorIdentifier __swiftcall ExecutorIdentifier.init(stringLiteral:)(Swift::String stringLiteral)
{
  *uint64_t v1 = stringLiteral;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.value = stringLiteral;
  return result;
}

uint64_t sub_251152588(void *a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9FA58](*a1, a1[1], a2, a3);
}

void *sub_25115259C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  a2[2] = 0;
  a2[3] = 0;
  return result;
}

uint64_t ExecutorIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2511C94F0();

  return swift_bridgeObjectRelease();
}

uint64_t ExecutorIdentifier.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t sub_251152650(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t sub_251152680()
{
  return sub_2511C9D80();
}

uint64_t sub_2511526CC()
{
  return sub_2511C94F0();
}

uint64_t sub_2511526D4()
{
  return sub_2511C9D80();
}

uint64_t sub_25115271C()
{
  if (v0[3])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    uint64_t v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251152770(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t sub_2511527A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2511C9CA0() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_2511527E0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_2511C9CA0() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_25115282C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t _s19HealthOrchestration24ScopedExecutorIdentifierV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_2511C9CA0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_2511C9CA0();
    }
  }
  return result;
}

uint64_t _s19HealthOrchestration24ScopedExecutorIdentifierV1loiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    uint64_t v7 = 1;
    if (sub_2511C9CA0()) {
      return v7;
    }
    if (sub_2511C9CA0()) {
      return 0;
    }
  }
  if (v2 == v4 && v3 == v5) {
    return 0;
  }

  return sub_2511C9CA0();
}

unint64_t sub_2511529DC()
{
  unint64_t result = qword_269B21BA0;
  if (!qword_269B21BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21BA0);
  }
  return result;
}

void sub_251152A30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2511529DC();
    unint64_t v7 = a3(a1, &type metadata for ExecutorIdentifier.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_251152A98()
{
  unint64_t result = qword_26B217D00;
  if (!qword_26B217D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217D00);
  }
  return result;
}

unint64_t sub_251152AF0()
{
  unint64_t result = qword_26B218550;
  if (!qword_26B218550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218550);
  }
  return result;
}

uint64_t sub_251152B44()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_251152B54()
{
  unint64_t result = qword_26B218540;
  if (!qword_26B218540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218540);
  }
  return result;
}

uint64_t sub_251152BA8()
{
  return MEMORY[0x263F8E240];
}

unint64_t sub_251152BB8()
{
  unint64_t result = qword_26B218548;
  if (!qword_26B218548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218548);
  }
  return result;
}

uint64_t sub_251152C0C()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_251152C18()
{
  return MEMORY[0x263F8D390];
}

unint64_t sub_251152C28()
{
  unint64_t result = qword_269B21BB0;
  if (!qword_269B21BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21BB0);
  }
  return result;
}

void *assignWithCopy for ScopedExecutorIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ScopedExecutorIdentifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScopedExecutorIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t dispatch thunk of Executor.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Executor.planner(signals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Executor.run(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

void *assignWithCopy for ExecutorIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ExecutorIdentifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutorIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExecutorIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251152FB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecutorIdentifier.CodingKeys()
{
  return &type metadata for ExecutorIdentifier.CodingKeys;
}

unint64_t sub_251152FF0()
{
  unint64_t result = qword_269B21BB8;
  if (!qword_269B21BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21BB8);
  }
  return result;
}

unint64_t sub_251153048()
{
  unint64_t result = qword_269B21BC0;
  if (!qword_269B21BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21BC0);
  }
  return result;
}

unint64_t sub_2511530A0()
{
  unint64_t result = qword_269B21BC8;
  if (!qword_269B21BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21BC8);
  }
  return result;
}

uint64_t sub_2511530F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7263736544676F6CLL && a2 == 0xEE006E6F69747069)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_251153208()
{
  if (!qword_26B217E88)
  {
    sub_251148B64(255, (unint64_t *)&qword_26B2167F0, MEMORY[0x263F8D310], MEMORY[0x263F8D060]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B217E88);
    }
  }
}

unint64_t static DeviceLockStateComponent.identifier.getter()
{
  return 0xD000000000000022;
}

unint64_t sub_2511532B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251148B64(0, &qword_269B21BE0, MEMORY[0x263F8D538], MEMORY[0x263F8DFB0]);
  BOOL v2 = (void *)sub_2511C9AF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_251149240(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2511533E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251155818();
  BOOL v2 = (void *)sub_2511C9AF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 80);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    uint64_t v7 = *(v4 - 3);
    uint64_t v9 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v10 = *v4;
    *(void *)&long long v18 = *(v4 - 6);
    *((void *)&v18 + 1) = v5;
    *(void *)&long long v19 = v6;
    *((void *)&v19 + 1) = v7;
    *(void *)&long long v20 = v9;
    *((void *)&v20 + 1) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_251167268((uint64_t)&v18);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (_OWORD *)(v2[6] + 48 * result);
    long long v14 = v19;
    *uint64_t v13 = v18;
    v13[1] = v14;
    void v13[2] = v20;
    *(void *)(v2[7] + 8 * result) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 7;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251153530(uint64_t a1)
{
  return sub_251148C1C(a1, (void (*)(void))sub_2511552D4, (uint64_t (*)(uint64_t, uint64_t))sub_251149240);
}

unint64_t sub_25115355C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251148B64(0, &qword_269B21BD8, MEMORY[0x263F8E548], MEMORY[0x263F8DFB0]);
  BOOL v2 = (void *)sub_2511C9AF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    int v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_251149240(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251153690(uint64_t a1)
{
  sub_2511556F4(0, (unint64_t *)&qword_269B22100, MEMORY[0x263F07490]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v25 - v5;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_25115576C(0, &qword_269B21C50, MEMORY[0x263F07490]);
  uint64_t v7 = sub_2511C9AF0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_251155684(v13, (uint64_t)v6, (uint64_t)&qword_269B22100, MEMORY[0x263F07490], (uint64_t (*)(void, uint64_t, uint64_t))sub_2511556F4);
    unint64_t result = sub_251167184((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_2511C9180();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = sub_2511C91E0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17, v10, v21);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251153918(uint64_t a1)
{
  sub_2511556F4(0, (unint64_t *)&unk_269B21C30, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal.Presenter);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v23 - v5;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_25115576C(0, (unint64_t *)&unk_269B22260, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal.Presenter);
  uint64_t v7 = sub_2511C9AF0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_251155684(v13, (uint64_t)v6, (uint64_t)&unk_269B21C30, (uint64_t)type metadata accessor for FileCoordinatorInputSignal.Presenter, (uint64_t (*)(void, uint64_t, uint64_t))sub_2511556F4);
    unint64_t result = sub_251167184((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_2511C9180();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251153B64(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  uint64_t v2 = MEMORY[0x263F8EE58] + 8;
  sub_251148B64(0, &qword_269B21C20, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8DFB0]);
  uint64_t v3 = sub_2511C9AF0();
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_251155684(v7, (uint64_t)&v16, (uint64_t)&qword_269B21C28, v2, (uint64_t (*)(void, uint64_t, uint64_t))sub_2511554E0);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_251149240(v16, v17);
    if (v11) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_251155534(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251153CE4(uint64_t a1)
{
  return sub_2511488F4(a1, &qword_26B2180C0, (uint64_t (*)(uint64_t))sub_251155544);
}

unint64_t sub_251153D04(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251155258();
  uint64_t v2 = (void *)sub_2511C9AF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_251149240(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t static EnvironmentalStateDescription.firstUnlock()@<X0>(unint64_t *a1@<X8>)
{
  return sub_251148598((uint64_t)&unk_2702049F8, a1);
}

unint64_t static DeviceLockStateComponent.HasPerformedFirstUnlockKey.getter()
{
  return 0xD000000000000017;
}

uint64_t static DeviceLockStateComponent.LockStateKey.getter()
{
  return 0x746174536B636F4CLL;
}

void *DeviceLockStateComponent.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DeviceLockStateComponent.LockStateObserverShim();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_251154A34(a1, a2, v4, v5);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t type metadata accessor for DeviceLockStateComponent.LockStateObserverShim()
{
  return self;
}

void *DeviceLockStateComponent.__allocating_init(observer:shim:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  uint64_t v10 = sub_251155050(a1, a2, v9, v3, v7, v8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

void *DeviceLockStateComponent.init(observer:shim:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  long long v13 = sub_251154D2C(a1, a2, (uint64_t)v11, v3, v7, v8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v13;
}

void sub_251154098(int *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  uint64_t v7 = *(NSObject **)(a3 + 24);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  void v11[4] = sub_251155ACC;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_2511B6ED0;
  long long v11[3] = &block_descriptor;
  uint64_t v9 = _Block_copy(v11);
  swift_release();
  uint64_t v10 = sub_2511C94D0();
  swift_bridgeObjectRelease();
  notify_register_dispatch((const char *)(v10 + 32), a1, v7, v9);
  swift_release();
  _Block_release(v9);
}

uint64_t sub_2511541E4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 40);
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    unint64_t v4 = DeviceLockStateComponent.currentState.getter();
    uint64_t v5 = *(void (**)(unint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 8);
    swift_retain();
    v5(v4, v1, &protocol witness table for DeviceLockStateComponent, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

unint64_t DeviceLockStateComponent.currentState.getter()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  __swift_project_boxed_opaque_existential_1(v0 + 6, v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2))
  {
    sub_251155154();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2511CB460;
    *(void *)(inited + 32) = 0xD000000000000017;
    *(void *)(inited + 40) = 0x80000002511D0950;
    *(void *)(inited + 48) = 5457241;
    *(void *)(inited + 56) = 0xE300000000000000;
    *(void *)(inited + 64) = 0x746174536B636F4CLL;
    *(void *)(inited + 72) = 0xE900000000000065;
    uint64_t v5 = v0[9];
    uint64_t v4 = v0[10];
    __swift_project_boxed_opaque_existential_1(v0 + 6, v5);
    char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
    uint64_t v7 = 0x64656B636F6CLL;
    if (v6) {
      uint64_t v7 = 0x64656B636F6C6E75;
    }
    unint64_t v8 = 0xE600000000000000;
    if (v6) {
      unint64_t v8 = 0xE800000000000000;
    }
    *(void *)(inited + 80) = v7;
    *(void *)(inited + 88) = v8;
    return sub_251148A20(inited);
  }
  else
  {
    return sub_251148A20((uint64_t)&unk_270204A38);
  }
}

uint64_t DeviceLockStateComponent.deinit()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1 + 5);
  sub_2511544BC(&v1[4]._os_unfair_lock_opaque);
  os_unfair_lock_unlock(v1 + 5);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return v0;
}

uint64_t sub_2511544BC(unsigned int *a1)
{
  uint64_t result = *a1;
  if (result != -1) {
    return notify_cancel(result);
  }
  return result;
}

uint64_t DeviceLockStateComponent.__deallocating_deinit()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1 + 5);
  sub_2511544BC(&v1[4]._os_unfair_lock_opaque);
  os_unfair_lock_unlock(v1 + 5);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return swift_deallocClassInstance();
}

unint64_t DeviceLockStateComponent.identifier.getter()
{
  return 0xD000000000000022;
}

Swift::Void __swiftcall DeviceLockStateComponent.stopObserving()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_251154610(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_251154610(_DWORD *a1)
{
  uint64_t result = *a1;
  if (result != -1) {
    uint64_t result = notify_cancel(result);
  }
  *a1 = -1;
  return result;
}

uint64_t sub_251154650()
{
  return swift_deallocClassInstance();
}

BOOL sub_251154660()
{
  return (int)MKBDeviceUnlockedSinceBoot() > 0;
}

uint64_t sub_251154680()
{
  unsigned int v0 = MKBGetDeviceLockState();
  return (v0 < 4) & (9u >> (v0 & 0xF));
}

unint64_t sub_2511546B4()
{
  return 0xD000000000000024;
}

unint64_t sub_2511546D0()
{
  return 0xD000000000000022;
}

void sub_2511546F0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_251154610(v2);

  os_unfair_lock_unlock(v3);
}

unint64_t sub_251154754(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_251155478();
    uint64_t v3 = (void *)sub_2511C9AF0();
    for (uint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned int v5 = *((_DWORD *)i - 2);
      uint64_t v6 = *i;
      unint64_t result = sub_251167220(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_251154828(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_25115536C(0, &qword_269B21C08, (void (*)(uint64_t))sub_251155420);
  uint64_t v3 = (void *)sub_2511C9AF0();
  unsigned int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_251167220(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned int v4 = *((_DWORD *)v8 - 2);
    uint64_t v13 = *v8;
    swift_unknownObjectRetain();
    unint64_t result = sub_251167220(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251154944(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_25115536C(0, &qword_269B21BF8, (void (*)(uint64_t))sub_2511553D0);
    uint64_t v3 = (void *)sub_2511C9AF0();
    for (uint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned int v5 = *((_DWORD *)i - 2);
      uint64_t v6 = *i;
      unint64_t result = sub_251167220(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void *sub_251154A34(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v6 = sub_2511C97B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2511C97A0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2511C9390();
  MEMORY[0x270FA5388](v11 - 8);
  void v23[3] = type metadata accessor for DeviceLockStateComponent.LockStateObserverShim();
  v23[4] = &off_2702051C8;
  v23[0] = a3;
  sub_251155908();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0xFFFFFFFFLL;
  a4[2] = v12;
  sub_251155968();
  sub_2511C9380();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_2511559A8((unint64_t *)&qword_26B217F90, MEMORY[0x263F8F0F8]);
  sub_2511487E0(0, (unint64_t *)&qword_26B217F30, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_2511559F0();
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F130], v6);
  a4[3] = sub_2511C97D0();
  sub_25112FD4C((uint64_t)v23, (uint64_t)(a4 + 6));
  uint64_t v13 = v19;
  a4[4] = v18;
  a4[5] = v13;
  char v14 = (os_unfair_lock_s *)a4[2];
  uint64_t v20 = v23;
  BOOL v21 = a4;
  uint64_t v15 = (int *)&v14[4];
  uint64_t v16 = v14 + 5;
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v16);
  sub_251155B7C(v15);
  os_unfair_lock_unlock(v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return a4;
}

void *sub_251154D2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v10 = sub_2511C97B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2511C97A0();
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_2511C9390();
  MEMORY[0x270FA5388](v15 - 8);
  v28[3] = a5;
  _OWORD v28[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  sub_251155908();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0xFFFFFFFFLL;
  a4[2] = v17;
  sub_251155968();
  sub_2511C9380();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_2511559A8((unint64_t *)&qword_26B217F90, MEMORY[0x263F8F0F8]);
  sub_2511487E0(0, (unint64_t *)&qword_26B217F30, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_2511559F0();
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F130], v10);
  a4[3] = sub_2511C97D0();
  sub_25112FD4C((uint64_t)v28, (uint64_t)(a4 + 6));
  uint64_t v18 = v24;
  a4[4] = v23;
  a4[5] = v18;
  uint64_t v19 = (os_unfair_lock_s *)a4[2];
  char v25 = v28;
  id v26 = a4;
  uint64_t v20 = (int *)&v19[4];
  BOOL v21 = v19 + 5;
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v21);
  sub_251155A78(v20);
  os_unfair_lock_unlock(v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return a4;
}

void *sub_251155050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_251154D2C(a1, a2, (uint64_t)v13, v14, a5, a6);
}

void sub_251155154()
{
  if (!qword_26B2168A0)
  {
    sub_2511554E0(255, (unint64_t *)&qword_26B217EA0);
    unint64_t v0 = sub_2511C9C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2168A0);
    }
  }
}

uint64_t dispatch thunk of DeviceLockStateShim.unlockedSinceBoot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceLockStateShim.unlocked.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DeviceLockStateShim.notificationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for DeviceLockStateComponent()
{
  return self;
}

uint64_t method lookup function for DeviceLockStateComponent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeviceLockStateComponent);
}

uint64_t dispatch thunk of DeviceLockStateComponent.__allocating_init(observer:shim:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for DeviceLockStateComponent.ProtectedState()
{
  return &type metadata for DeviceLockStateComponent.ProtectedState;
}

void sub_251155258()
{
  if (!qword_26B216888)
  {
    sub_251131944(255, qword_26B216760);
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B216888);
    }
  }
}

void sub_2511552D4()
{
  if (!qword_269B21BE8)
  {
    sub_2511487E0(255, (unint64_t *)&qword_269B21BF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugSnapshot, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21BE8);
    }
  }
}

void sub_25115536C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9B00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2511553D0()
{
  unint64_t result = qword_269B21C00;
  if (!qword_269B21C00)
  {
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_269B21C00);
  }
  return result;
}

unint64_t sub_251155420()
{
  unint64_t result = qword_269B21C10;
  if (!qword_269B21C10)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269B21C10);
  }
  return result;
}

void sub_251155478()
{
  if (!qword_269B21C18)
  {
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21C18);
    }
  }
}

void sub_2511554E0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

_OWORD *sub_251155534(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_251155544()
{
  if (!qword_26B217F70)
  {
    unint64_t v0 = sub_2511C96D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217F70);
    }
  }
}

uint64_t sub_2511555A4(uint64_t a1, uint64_t a2)
{
  sub_251155608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_251155608()
{
  if (!qword_26B218638)
  {
    sub_251131944(255, qword_26B216650);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B218638);
    }
  }
}

uint64_t sub_251155684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_2511556F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2511C9180();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_25115576C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2511C9180();
    a3(255);
    sub_2511559A8((unint64_t *)&unk_269B21C40, MEMORY[0x263F06EA8]);
    unint64_t v5 = sub_2511C9B00();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_251155818()
{
  if (!qword_26B218088)
  {
    sub_2511487E0(255, (unint64_t *)&unk_26B217EB0, (uint64_t (*)(uint64_t))type metadata accessor for WorkCriteriaRecord, MEMORY[0x263F8D488]);
    sub_2511558B4();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218088);
    }
  }
}

unint64_t sub_2511558B4()
{
  unint64_t result = qword_26B217CF8;
  if (!qword_26B217CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217CF8);
  }
  return result;
}

void sub_251155908()
{
  if (!qword_26B218040)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218040);
    }
  }
}

unint64_t sub_251155968()
{
  unint64_t result = qword_26B216800;
  if (!qword_26B216800)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B216800);
  }
  return result;
}

uint64_t sub_2511559A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2511559F0()
{
  unint64_t result = qword_26B217F40;
  if (!qword_26B217F40)
  {
    sub_2511487E0(255, (unint64_t *)&qword_26B217F30, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217F40);
  }
  return result;
}

void sub_251155A78(int *a1)
{
  sub_251154098(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251155A94()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251155ACC()
{
  return sub_2511541E4();
}

void sub_251155AD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x263F8D310], v7, MEMORY[0x263F8D320]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_251155B48(uint64_t a1)
{
}

void sub_251155B7C(int *a1)
{
}

uint64_t OrchestrationDirector.environment.getter()
{
  return swift_retain();
}

uint64_t OrchestrationDirector.__allocating_init(environment:inputSignalProviders:executorProviders:contextProvider:dispatcher:logger:debugIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  OrchestrationDirector.init(environment:inputSignalProviders:executorProviders:contextProvider:dispatcher:logger:debugIdentifier:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t OrchestrationDirector.init(environment:inputSignalProviders:executorProviders:contextProvider:dispatcher:logger:debugIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  sub_2511448BC(0, (unint64_t *)&unk_26B217FF0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 44) = 0;
  *(void *)(v18 + 16) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v18 + 24) = xmmword_2511CB550;
  *(_WORD *)(v18 + 40) = 0;
  *(void *)(v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState) = v18;
  *(void *)(v10 + 16) = a1;
  type metadata accessor for WorkQueue();
  swift_allocObject();
  uint64_t v19 = swift_retain();
  *(void *)(v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue) = WorkQueue.init(environment:)(v19);
  *(void *)(v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_inputSignalProviders) = a2;
  *(void *)(v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_executorProviders) = a3;
  uint64_t v20 = (void *)(v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_contextProvider);
  *uint64_t v20 = a4;
  v20[1] = a5;
  sub_25112F14C(a6, v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_dispatcher);
  uint64_t v21 = v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_logger;
  uint64_t v22 = sub_2511C92A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a7, v22);
  uint64_t v23 = (void *)(v10 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_debugIdentifier);
  void *v23 = a8;
  v23[1] = a9;
  return v10;
}

void OrchestrationDirector.start(completion:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251158C18(v2, v10);
  os_unfair_lock_unlock(v3);
  if (LOBYTE(v10[0]) == 1)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_dispatcher + 24);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_dispatcher + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_dispatcher), v4);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue);
    v10[3] = type metadata accessor for WorkQueue();
    v10[4] = &protocol witness table for WorkQueue;
    v10[0] = v6;
    uint64_t v7 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 8);
    swift_retain();
    v7(v10, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_contextProvider + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 32))(v0, &protocol witness table for OrchestrationDirector, ObjectType, v8);
  }
}

Swift::Void __swiftcall OrchestrationDirector.stop()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  uint64_t v4 = 0;
  sub_251156184(v2, v26);
  os_unfair_lock_unlock(v3);
  unint64_t v5 = v26[0];
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_contextProvider + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
  if (v5 >> 62) {
    goto LABEL_21;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    unint64_t v9 = 0;
    unint64_t v10 = v5 & 0xC000000000000001;
    unint64_t v22 = v5 + 32;
    uint64_t v23 = v5 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v5 & 0xC000000000000001;
    while (v10)
    {
      uint64_t v11 = MEMORY[0x2533971C0](v9, v5);
      BOOL v12 = __OFADD__(v9++, 1);
      if (v12) {
        goto LABEL_19;
      }
LABEL_11:
      uint64_t v13 = *(os_unfair_lock_s **)(v11 + 64);
      uint64_t v14 = v13 + 4;
      uint64_t v15 = v13 + 22;
      os_unfair_lock_lock(v13 + 22);
      sub_251179544(v14, v26);
      os_unfair_lock_unlock(v15);
      if (v26[0])
      {
        uint64_t v16 = *(void *)(v26[0] + 16);
        if (v16)
        {
          uint64_t v25 = v4;
          uint64_t v17 = v8;
          unint64_t v18 = v5;
          uint64_t v19 = v26[0] + 32;
          do
          {
            sub_25112FD4C(v19, (uint64_t)v26);
            uint64_t v20 = v27;
            uint64_t v21 = v28;
            __swift_project_boxed_opaque_existential_1(v26, v27);
            (*(void (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
            v19 += 40;
            --v16;
          }
          while (v16);
          swift_release();
          unint64_t v5 = v18;
          uint64_t v8 = v17;
          unint64_t v10 = v24;
          uint64_t v4 = v25;
        }
        else
        {
          swift_release();
        }
        swift_bridgeObjectRelease();
        if (v9 == v8) {
          goto LABEL_24;
        }
      }
      else
      {
        swift_release();
        if (v9 == v8) {
          goto LABEL_24;
        }
      }
    }
    if (v9 >= *(void *)(v23 + 16)) {
      goto LABEL_20;
    }
    uint64_t v11 = *(void *)(v22 + 8 * v9);
    swift_retain();
    BOOL v12 = __OFADD__(v9++, 1);
    if (!v12) {
      goto LABEL_11;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }

LABEL_24:
  swift_bridgeObjectRelease();
}

double sub_251156184@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  *a1 = MEMORY[0x263F8EE78];
  sub_25115AB10(v4);
  *(void *)&double result = 3;
  *(_OWORD *)(a1 + 1) = xmmword_2511CB560;
  *a2 = v5;
  return result;
}

uint64_t OrchestrationDirector.paused.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251156248(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_251156248@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 24);
  return result;
}

Swift::Void __swiftcall OrchestrationDirector.pause()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (unint64_t)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251159C80(v2);

  os_unfair_lock_unlock(v3);
}

void sub_2511562BC(unint64_t a1)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(a1 + 24)) {
    return;
  }
  unint64_t v3 = a1;
  *(unsigned char *)(a1 + 24) = 1;
  if (*(void *)(a1 + 8) != 2) {
    return;
  }
  if (*(void *)a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }
  swift_retain_n();
  uint64_t v4 = sub_2511C9280();
  os_log_type_t v5 = sub_2511C9770();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_retain();
    sub_2511C9960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_release();
    sub_251140E4C(0xD000000000000018, 0x80000002511D0C50, &v16);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2048;
    sub_2511C98A0();
    _os_log_impl(&dword_25112A000, v4, v5, "%s: Pausing (%ld orchestrators).", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v7, -1, -1);
    MEMORY[0x253397D40](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  unint64_t v3 = *(void *)v3;
  if (!(v3 >> 62))
  {
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_9;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_17;
  }
LABEL_9:
  uint64_t v9 = 4;
  while (1)
  {
    uint64_t v10 = v9 - 4;
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x2533971C0](v9 - 4, v3);
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v10, 1)) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(v3 + 8 * v9);
      swift_retain();
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v10, 1))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    uint64_t v13 = *(os_unfair_lock_s **)(v11 + 64);
    uint64_t v14 = (uint64_t)&v13[4];
    uint64_t v15 = v13 + 22;
    os_unfair_lock_lock(v13 + 22);
    sub_25115AA68(v14);
    if (v2) {
      break;
    }
    uint64_t v2 = 0;
    os_unfair_lock_unlock(v15);
    swift_release();
    ++v9;
    if (v12 == v8) {
      goto LABEL_17;
    }
  }
  os_unfair_lock_unlock(v15);
  __break(1u);
}

Swift::Void __swiftcall OrchestrationDirector.resume()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (unint64_t)&v1[4];
  unint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_25114C2D4(v2);

  os_unfair_lock_unlock(v3);
}

void OrchestrationDirector.statusObserver.getter(uint64_t a1@<X8>)
{
  unint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue)
                            + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  os_log_type_t v5 = v3 + 19;
  os_unfair_lock_lock(v3 + 19);
  sub_2511AF180(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_251156710(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *(os_unfair_lock_s **)(*(void *)(*a1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue)
                            + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  os_log_type_t v5 = v3 + 19;
  os_unfair_lock_lock(v3 + 19);
  sub_2511AF180(v4, a2);

  os_unfair_lock_unlock(v5);
}

uint64_t OrchestrationDirector.statusObserver.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue);
  sub_25113D3C0(a1, (uint64_t)v8);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 19;
  os_unfair_lock_lock(v4 + 19);
  sub_251159CEC(v5);
  os_unfair_lock_unlock(v6);
  sub_25115A0FC((uint64_t)v8, (uint64_t (*)(void))sub_25113D424);
  return sub_25115A0FC(a1, (uint64_t (*)(void))sub_25113D424);
}

void (*OrchestrationDirector.statusObserver.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue);
  v3[15] = v4;
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  uint64_t v6 = (uint64_t)&v5[4];
  uint64_t v7 = v5 + 19;
  os_unfair_lock_lock(v5 + 19);
  sub_2511AF180(v6, (uint64_t)v3);
  v3[16] = 0;
  os_unfair_lock_unlock(v7);
  return sub_2511568D8;
}

void sub_2511568D8(uint64_t *a1, char a2)
{
  unint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    sub_25113D3C0(*a1, v3);
    uint64_t v4 = sub_25113D3C0(v3, (uint64_t)v2 + 80);
    MEMORY[0x270FA5388](v4);
    uint64_t v6 = (uint64_t)&v5[4];
    uint64_t v7 = v5 + 19;
    os_unfair_lock_lock(v5 + 19);
    sub_25115AF78(v6);
    os_unfair_lock_unlock(v7);
    sub_25115A0FC((uint64_t)v2 + 80, (uint64_t (*)(void))sub_25113D424);
  }
  else
  {
    uint64_t v8 = sub_25113D3C0(*a1, v3);
    MEMORY[0x270FA5388](v8);
    uint64_t v10 = (uint64_t)&v9[4];
    uint64_t v11 = v9 + 19;
    os_unfair_lock_lock(v9 + 19);
    sub_25115AF78(v10);
    os_unfair_lock_unlock(v11);
  }
  sub_25115A0FC(v3, (uint64_t (*)(void))sub_25113D424);
  sub_25115A0FC((uint64_t)v2, (uint64_t (*)(void))sub_25113D424);
  free(v2);
}

uint64_t OrchestrationDirector.orchestrationGraph()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251156AB8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_251156AB8(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v7)
  {
    while (1)
    {
      uint64_t v21 = MEMORY[0x263F8EE78];
      sub_251141A94(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0) {
        break;
      }
      uint64_t v8 = 0;
      unint64_t v18 = a2;
      unint64_t v19 = v6 & 0xC000000000000001;
      uint64_t v9 = v6;
      while (v7 != v8)
      {
        if (v19)
        {
          uint64_t v10 = MEMORY[0x2533971C0](v8, v6);
        }
        else
        {
          uint64_t v10 = *(void *)(v6 + 8 * v8 + 32);
          swift_retain();
        }
        uint64_t v11 = *(os_unfair_lock_s **)(v10 + 64);
        uint64_t v12 = (uint64_t *)&v11[4];
        uint64_t v3 = v11 + 22;
        os_unfair_lock_lock(v11 + 22);
        sub_25115AAF4(v12, v20);
        if (v4) {
          goto LABEL_21;
        }
        uint64_t v4 = 0;
        os_unfair_lock_unlock(v3);
        uint64_t v13 = v20[0];
        a2 = (void *)v20[1];
        swift_release();
        uint64_t v14 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251141A94(0, *(void *)(v14 + 16) + 1, 1);
          uint64_t v14 = v21;
        }
        unint64_t v16 = *(void *)(v14 + 16);
        unint64_t v15 = *(void *)(v14 + 24);
        uint64_t v3 = (os_unfair_lock_s *)(v16 + 1);
        if (v16 >= v15 >> 1)
        {
          sub_251141A94(v15 > 1, v16 + 1, 1);
          uint64_t v14 = v21;
        }
        ++v8;
        *(void *)(v14 + 16) = v3;
        uint64_t v17 = v14 + 16 * v16;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = a2;
        uint64_t v6 = v9;
        if (v7 == v8)
        {
          swift_bridgeObjectRelease();
          a2 = v18;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain_n();
      uint64_t v7 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_21:
    os_unfair_lock_unlock(v3);
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
LABEL_19:
    *a2 = v14;
  }
}

uint64_t sub_251156CB4(unint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v9 = v8;
    if (v8) {
      goto LABEL_3;
    }
    return a2();
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (!v8) {
    return a2();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
LABEL_3:
  sub_2511448BC(0, &qword_26B218060);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v9;
  if (v8 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = result;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x2533971C0](v12, a1);
      }
      else {
        swift_retain();
      }
      ++v12;
      uint64_t v13 = (void *)swift_allocObject();
      void v13[2] = v4;
      v13[3] = v11;
      uint64_t v13[4] = a2;
      _OWORD v13[5] = a3;
      swift_retain();
      swift_retain();
      swift_retain();
      Orchestrator.start(completion:)();
      swift_release();
      swift_release();
    }
    while (v8 != v12);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_251156E90(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(a1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState)
                          + 44);
  os_unfair_lock_lock(v4);
  sub_25115AAD8(&v5);
  os_unfair_lock_unlock(v4);
  if (v5) {
    a3();
  }
}

void sub_251156F1C(os_unfair_lock_s *a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)&a1[4];
  BOOL v5 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_251156FA4(v4, &v6);
  os_unfair_lock_unlock(v5);
  if (v2) {
    __break(1u);
  }
  else {
    *a2 = v6 == 0;
  }
}

uint64_t *sub_251156FA4@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    *uint64_t result = v2;
    *a2 = v2;
  }
  return result;
}

void OrchestrationDirector.priorityThreshold.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue)
                            + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  BOOL v5 = v3 + 19;
  os_unfair_lock_lock(v3 + 19);
  sub_2511AF430(v4, a1);

  os_unfair_lock_unlock(v5);
}

void sub_251157038(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(*a1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue)
                            + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  BOOL v5 = v3 + 19;
  os_unfair_lock_lock(v3 + 19);
  sub_2511AF430(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

uint64_t OrchestrationDirector.priorityThreshold.setter()
{
  return WorkQueue.priorityThreshold.setter();
}

uint64_t (*OrchestrationDirector.priorityThreshold.modify(void *a1))()
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue);
  *a1 = v2;
  uint64_t v3 = a1 + 1;
  uint64_t v4 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v5 = (uint64_t)&v4[4];
  char v6 = v4 + 19;
  os_unfair_lock_lock(v4 + 19);
  sub_2511AF430(v5, v3);
  os_unfair_lock_unlock(v6);
  return sub_251157188;
}

uint64_t sub_251157188()
{
  return WorkQueue.priorityThreshold.setter();
}

Swift::Void __swiftcall OrchestrationDirector.didUpdate(contexts:)(Swift::OpaquePointer contexts)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  uint64_t v3 = (uint64_t *)&v2[4];
  uint64_t v4 = v2 + 11;
  os_unfair_lock_lock(v2 + 11);
  sub_251159D08(v3, &v5);
  os_unfair_lock_unlock(v4);
  v5();
  swift_release();
}

void sub_25115724C(uint64_t *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v6 = (uint64_t)a4;
  if (a1[1] == 3)
  {
    *a4 = nullsub_1;
    a4[1] = 0;
    return;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v10 = sub_251158CFC(a1, a2, a3);
  uint64_t v11 = v10;
  uint64_t v29 = a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v12 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= v10) {
      goto LABEL_5;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  if (v12 < v11) {
    goto LABEL_23;
  }
LABEL_5:
  uint64_t v13 = v11;
  uint64_t v14 = v29;
  sub_2511C0DE4(v13, v12);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_25115A798(v15, v29);
  swift_bridgeObjectRelease();
  swift_retain();
  a2 = sub_25115A570(v16, a3);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v28 = a3;
  if (*((unsigned char *)v29 + 24) != 1)
  {
LABEL_17:
    unint64_t v23 = swift_bridgeObjectRetain();
    sub_2511B091C(v23);
    uint64_t v24 = v14[1];
    if ((unint64_t)(v24 - 1) >= 3)
    {
      uint64_t v25 = v14[2];
      *(_OWORD *)(v14 + 1) = xmmword_2511CB570;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v25 = 0;
    }
    id v26 = (void *)swift_allocObject();
    v26[2] = v24;
    void v26[3] = v25;
    _OWORD v26[4] = v28;
    v26[5] = a2;
    *(void *)uint64_t v6 = sub_25115AA5C;
    *(void *)(v6 + 8) = v26;
    swift_retain();
    return;
  }
  if (!(a2 >> 62))
  {
    uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v27 = v6;
    if (v17) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_24:
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_2511C9AC0();
  swift_bridgeObjectRelease();
  uint64_t v27 = v6;
  if (!v17)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v6 = v27;
    uint64_t v14 = v29;
    goto LABEL_17;
  }
LABEL_8:
  a3 = a2 & 0xC000000000000001;
  uint64_t v6 = 4;
  while (1)
  {
    uint64_t v18 = v6 - 4;
    if (a3)
    {
      uint64_t v11 = MEMORY[0x2533971C0](v6 - 4, a2);
      uint64_t v19 = v6 - 3;
      if (__OFADD__(v18, 1)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(a2 + 8 * v6);
      swift_retain();
      uint64_t v19 = v6 - 3;
      if (__OFADD__(v18, 1))
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    uint64_t v20 = *(os_unfair_lock_s **)(v11 + 64);
    uint64_t v21 = (uint64_t)&v20[4];
    unint64_t v22 = v20 + 22;
    os_unfair_lock_lock(v20 + 22);
    sub_25115AA68(v21);
    if (v5) {
      break;
    }
    uint64_t v5 = 0;
    os_unfair_lock_unlock(v22);
    swift_release();
    ++v6;
    if (v19 == v17) {
      goto LABEL_16;
    }
  }
  os_unfair_lock_unlock(v22);
  __break(1u);
}

uint64_t sub_251157534(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = a2 + 40;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      char v5 = sub_251146F94();
      swift_unknownObjectRelease();
      if (v5) {
        break;
      }
      v4 += 16;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
LABEL_6:
    swift_retain_n();
    swift_retain_n();
    uint64_t v6 = sub_2511C9280();
    os_log_type_t v7 = sub_2511C9770();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_retain();
      sub_2511C9960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_release();
      sub_251140E4C(0xD000000000000018, 0x80000002511D0C50, &v13);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      type metadata accessor for Orchestrator();
      swift_retain();
      uint64_t v10 = sub_2511C94C0();
      sub_251140E4C(v10, v11, &v13);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v6, v7, "%s: Stopping orchestrator for removed context: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v9, -1, -1);
      MEMORY[0x253397D40](v8, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_release_n();
    }

    Orchestrator.stop()();
    return 1;
  }
}

uint64_t sub_25115784C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v18 = a1[1];
  swift_retain_n();
  swift_unknownObjectRetain_n();
  uint64_t v6 = sub_2511C9280();
  os_log_type_t v7 = sub_2511C9770();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v17 = a3;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_retain();
    sub_2511C9960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_release();
    sub_251140E4C(0xD000000000000018, 0x80000002511D0C50, &v19);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_unknownObjectRetain();
    uint64_t v10 = sub_2511C94C0();
    sub_251140E4C(v10, v11, &v19);
    sub_2511C98A0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25112A000, v6, v7, "%s: Starting orchestrator for new context: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v9, -1, -1);
    uint64_t v12 = v8;
    a3 = v17;
    MEMORY[0x253397D40](v12, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    swift_release_n();
  }

  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_inputSignalProviders);
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_executorProviders);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue);
  type metadata accessor for Orchestrator();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = Orchestrator.init(context:inputSignalProviders:executorProviders:workQueue:)(v5, v18, v13, v14, v15);
  *a3 = result;
  return result;
}

uint64_t sub_251157B74(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1)
  {
    swift_retain();
    sub_251156CB4(a4, a1, a2);
    return sub_251135B0C((uint64_t)a1);
  }
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2511C9AC0();
    uint64_t v8 = result;
    if (result) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_7:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((a4 & 0xC000000000000001) != 0) {
          MEMORY[0x2533971C0](i, a4);
        }
        else {
          swift_retain();
        }
        Orchestrator.start(completion:)();
        swift_release();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t OrchestrationDirector.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_logger;
  uint64_t v2 = sub_2511C92A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_dispatcher);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t OrchestrationDirector.__deallocating_deinit()
{
  OrchestrationDirector.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_251157DE4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_25115AF5C(v2, &v5);
  os_unfair_lock_unlock(v3);
  v5();
  return swift_release();
}

void sub_251157E60()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (unint64_t)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251159C80(v2);

  os_unfair_lock_unlock(v3);
}

void sub_251157EC8(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue)
                            + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 19;
  os_unfair_lock_lock(v3 + 19);
  sub_2511AF430(v4, a1);

  os_unfair_lock_unlock(v5);
}

void (*sub_251157F40(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OrchestrationDirector.priorityThreshold.modify(v2);
  return sub_251157F98;
}

void sub_251157F98(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t OrchestrationDirector.description.getter()
{
  return 0xD000000000000018;
}

unint64_t sub_25115808C()
{
  return OrchestrationDirector.description.getter();
}

uint64_t OrchestrationDirector.debugSnapshot.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251159D24(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_251158114(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_2511C9960();
  swift_bridgeObjectRelease();
  uint64_t v75 = 0xD000000000000018;
  unint64_t v76 = 0x80000002511D0C50;
  swift_bridgeObjectRetain();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2511472E4(0, (unint64_t *)&qword_26B2168A0, (uint64_t (*)(uint64_t))sub_25115A3E0, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2511CB580;
  *(void *)(inited + 32) = 0x6863746170736964;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_25112FD4C(a2 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_dispatcher, (uint64_t)&v75);
  sub_251131944(0, &qword_269B21C68);
  *(void *)(inited + 48) = sub_2511C94C0();
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = 0x646573756170;
  *(void *)(inited + 72) = 0xE600000000000000;
  uint64_t v9 = 28526;
  if (*((unsigned char *)a1 + 24)) {
    uint64_t v10 = 5457241;
  }
  else {
    uint64_t v10 = 28526;
  }
  if (*((unsigned char *)a1 + 24)) {
    unint64_t v11 = 0xE300000000000000;
  }
  else {
    unint64_t v11 = 0xE200000000000000;
  }
  *(void *)(inited + 80) = v10;
  *(void *)(inited + 88) = v11;
  *(void *)(inited + 96) = 0x657669746361;
  *(void *)(inited + 104) = 0xE600000000000000;
  if (a1[1] == 2)
  {
    uint64_t v9 = 5457241;
    unint64_t v12 = 0xE300000000000000;
  }
  else
  {
    unint64_t v12 = 0xE200000000000000;
  }
  *(void *)(inited + 112) = v9;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = 0x50747865746E6F63;
  *(void *)(inited + 136) = 0xEF72656469766F72;
  uint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  v74[0] = *(_OWORD *)(a2 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_contextProvider);
  sub_251131944(0, &qword_269B21C70);
  sub_2511C9A90();
  unint64_t v13 = v76;
  *(void *)(inited + 144) = v75;
  *(void *)(inited + 152) = v13;
  unint64_t v70 = sub_251148A20(inited);
  sub_2511472E4(0, (unint64_t *)&unk_269B22270, (uint64_t (*)(uint64_t))sub_25115A444, v6);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_2511CB590;
  *(void *)(v14 + 32) = 0x6575657571;
  *(void *)(v14 + 40) = 0xE500000000000000;
  sub_25115A4DC();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2511CB5A0;
  uint64_t v16 = *(os_unfair_lock_s **)(*(void *)(a2 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_workQueue)
                             + 16);
  uint64_t v17 = (uint64_t)&v16[4];
  uint64_t v18 = (uint64_t)&v16[19];
  os_unfair_lock_lock(v16 + 19);
  sub_25115A538(v17, &v75);
  if (v3) {
    goto LABEL_58;
  }
  uint64_t v19 = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)v18);
  *(void *)(v15 + 32) = v75;
  uint64_t v75 = v15;
  sub_2511C95C0();
  *(void *)(v14 + 48) = v75;
  *(void *)(v14 + 56) = 0x6D6E6F7269766E65;
  *(void *)(v14 + 64) = 0xEB00000000746E65;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2511CB5A0;
  uint64_t v73 = a2;
  uint64_t v15 = *(void *)(*(void *)(a2 + 16) + 16) + 40;
  os_unfair_lock_lock((os_unfair_lock_t)v15);
  sub_2511BF60C(&v75);
  os_unfair_lock_unlock((os_unfair_lock_t)v15);
  *(void *)(v20 + 32) = v75;
  uint64_t v75 = v20;
  sub_2511C95C0();
  *(void *)(v14 + 72) = v75;
  strcpy((char *)(v14 + 80), "orchestrators");
  *(_WORD *)(v14 + 94) = -4864;
  unint64_t v21 = *a1;
  if (v21 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_13:
      uint64_t v75 = MEMORY[0x263F8EE78];
      sub_2511C9A20();
      if ((v18 & 0x8000000000000000) == 0)
      {
        uint64_t v22 = 0;
        uint64_t v15 = v21 & 0xC000000000000001;
        do
        {
          if (v18 == v22)
          {
            __break(1u);
            goto LABEL_23;
          }
          if (v15)
          {
            uint64_t v23 = MEMORY[0x2533971C0](v22, v21);
          }
          else
          {
            uint64_t v23 = *(void *)(v21 + 8 * v22 + 32);
            swift_retain();
          }
          uint64_t v24 = *(os_unfair_lock_s **)(v23 + 64);
          uint64_t v25 = (uint64_t)&v24[4];
          id v26 = v24 + 22;
          os_unfair_lock_lock(v24 + 22);
          sub_25115A554(v25, v74);
          ++v22;
          os_unfair_lock_unlock(v26);
          uint64_t v19 = *(os_unfair_lock_s **)&v74[0];
          swift_release();
          sub_2511C99F0();
          sub_2511C9A30();
          sub_2511C9A40();
          sub_2511C9A00();
        }
        while (v18 != v22);
        uint64_t v27 = v75;
        swift_bridgeObjectRelease();
        uint64_t v28 = v73;
        if ((v27 & 0x8000000000000000) == 0) {
          goto LABEL_25;
        }
        goto LABEL_56;
      }
      __break(1u);
      os_unfair_lock_unlock(v19);
      __break(1u);
      swift_release();
      __break(1u);
LABEL_58:
      os_unfair_lock_unlock((os_unfair_lock_t)v18);
      __break(1u);
      os_unfair_lock_unlock((os_unfair_lock_t)v15);
      __break(1u);
      return;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v28 = v73;
  if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0)
  {
LABEL_56:
    unint64_t v69 = swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)sub_2511C4284(v69);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_25:
  if ((v27 & 0x4000000000000000) != 0) {
    goto LABEL_56;
  }
  uint64_t v29 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
LABEL_27:
  uint64_t v75 = v29;
  sub_251158C80(&v75);
  swift_bridgeObjectRelease();
  *(void *)(v14 + 96) = v75;
  *(void *)(v14 + 104) = 0xD000000000000014;
  int64_t v72 = (void *)v14;
  *(void *)(v14 + 112) = 0x80000002511D0CC0;
  uint64_t v30 = *(void *)(v28 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_inputSignalProviders);
  int64_t v31 = *(void *)(v30 + 16);
  uint64_t v32 = MEMORY[0x263F8EE78];
  if (v31)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251141A94(0, v31, 0);
    uint64_t v33 = v30 + 32;
    do
    {
      sub_25112FD4C(v33, (uint64_t)&v75);
      sub_25112FD4C((uint64_t)&v75, (uint64_t)v74);
      sub_251131944(0, &qword_269B21C80);
      uint64_t v34 = sub_2511C94C0();
      uint64_t v36 = v35;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
      uint64_t v37 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251141A94(0, *(void *)(v37 + 16) + 1, 1);
        uint64_t v37 = v77;
      }
      unint64_t v39 = *(void *)(v37 + 16);
      unint64_t v38 = *(void *)(v37 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_251141A94(v38 > 1, v39 + 1, 1);
        uint64_t v37 = v77;
      }
      *(void *)(v37 + 16) = v39 + 1;
      uint64_t v40 = v37 + 16 * v39;
      *(void *)(v40 + 32) = v34;
      *(void *)(v40 + 40) = v36;
      v33 += 40;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v28 = v73;
    uint64_t v32 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v37 = MEMORY[0x263F8EE78];
  }
  uint64_t v75 = v37;
  swift_bridgeObjectRetain();
  sub_251191D28(&v75);
  swift_bridgeObjectRelease();
  uint64_t v41 = v75;
  uint64_t v42 = *(void *)(v75 + 16);
  uint64_t v43 = MEMORY[0x263F8EE80];
  if (v42)
  {
    uint64_t v75 = v32;
    sub_2511C9A20();
    type metadata accessor for DebugSnapshot();
    uint64_t v44 = (uint64_t *)(v41 + 40);
    do
    {
      uint64_t v46 = *(v44 - 1);
      uint64_t v45 = *v44;
      unint64_t v47 = (void *)swift_allocObject();
      v47[2] = v46;
      v47[3] = v45;
      v47[4] = v43;
      v47[5] = v43;
      swift_bridgeObjectRetain();
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      v44 += 2;
      --v42;
    }
    while (v42);
    uint64_t v48 = v75;
    swift_release();
    uint64_t v28 = v73;
  }
  else
  {
    swift_release();
    uint64_t v48 = MEMORY[0x263F8EE78];
  }
  v72[15] = v48;
  v72[16] = 0xD000000000000011;
  v72[17] = 0x80000002511D0CE0;
  uint64_t v49 = *(void *)(v28 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_executorProviders);
  int64_t v50 = *(void *)(v49 + 16);
  uint64_t v51 = MEMORY[0x263F8EE78];
  if (v50)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251141A94(0, v50, 0);
    uint64_t v52 = v49 + 32;
    do
    {
      sub_25112FD4C(v52, (uint64_t)&v75);
      sub_25112FD4C((uint64_t)&v75, (uint64_t)v74);
      sub_251131944(0, &qword_26B217A20);
      uint64_t v53 = sub_2511C94C0();
      uint64_t v55 = v54;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
      uint64_t v56 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251141A94(0, *(void *)(v56 + 16) + 1, 1);
        uint64_t v56 = v77;
      }
      unint64_t v58 = *(void *)(v56 + 16);
      unint64_t v57 = *(void *)(v56 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_251141A94(v57 > 1, v58 + 1, 1);
        uint64_t v56 = v77;
      }
      *(void *)(v56 + 16) = v58 + 1;
      uint64_t v59 = v56 + 16 * v58;
      *(void *)(v59 + 32) = v53;
      *(void *)(v59 + 40) = v55;
      v52 += 40;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    uint64_t v51 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v56 = MEMORY[0x263F8EE78];
  }
  uint64_t v75 = v56;
  swift_bridgeObjectRetain();
  sub_251191D28(&v75);
  swift_bridgeObjectRelease();
  uint64_t v60 = v75;
  uint64_t v61 = *(void *)(v75 + 16);
  if (v61)
  {
    uint64_t v75 = v51;
    sub_2511C9A20();
    type metadata accessor for DebugSnapshot();
    char v62 = (uint64_t *)(v60 + 40);
    do
    {
      uint64_t v64 = *(v62 - 1);
      uint64_t v63 = *v62;
      uint64_t v65 = (void *)swift_allocObject();
      uint64_t v65[2] = v64;
      v65[3] = v63;
      v65[4] = v43;
      v65[5] = v43;
      swift_bridgeObjectRetain();
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      v62 += 2;
      --v61;
    }
    while (v61);
    uint64_t v66 = v75;
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v66 = MEMORY[0x263F8EE78];
  }
  v72[18] = v66;
  unint64_t v67 = sub_251153530((uint64_t)v72);
  type metadata accessor for DebugSnapshot();
  uint64_t v68 = (void *)swift_allocObject();
  v68[2] = 0xD000000000000018;
  v68[3] = 0x80000002511D0C50;
  v68[4] = v70;
  v68[5] = v67;
  *a3 = v68;
}

uint64_t sub_251158BB0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC19HealthOrchestration21OrchestrationDirector_protectedState);
  unint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 11;
  os_unfair_lock_lock(v1 + 11);
  sub_251159D24(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t (*sub_251158C18@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>))(void)
{
  uint64_t result = *(uint64_t (**)(void))(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 8) == 1)
  {
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = v6;
    *a2 = 1;
    return (uint64_t (*)(void))sub_25114A84C((uint64_t)result);
  }
  else
  {
    if (result) {
      uint64_t result = (uint64_t (*)(void))result();
    }
    *a2 = 0;
  }
  return result;
}

uint64_t sub_251158C80(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2511B2F40();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_25115909C(v6);
  return sub_2511C9A00();
}

unint64_t sub_251158CFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_25115A670(v8, a2);
  if (!v3)
  {
    unint64_t v4 = v9;
    char v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      unint64_t v26 = *a1;
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v4 = sub_2511C9AC0();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v4 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      unint64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_56;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_57:
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_2511C9AC0();
        swift_bridgeObjectRelease();
        if (v12 != v28) {
          goto LABEL_7;
        }
      }
      else if (v12 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_7:
        unint64_t v12 = v4 + 5;
        uint64_t v29 = a3;
        while (1)
        {
          unint64_t v13 = v12 - 4;
          uint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x2533971C0](v12 - 4);
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
            if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_47;
            }
            uint64_t v15 = *(void *)(v14 + 8 * v12);
            swift_retain();
          }
          uint64_t v30 = v15;
          char v16 = sub_251157534((uint64_t)&v30, a2);
          swift_release();
          if ((v16 & 1) == 0) {
            break;
          }
LABEL_33:
          unint64_t v24 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_48;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v25 = sub_2511C9AC0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v25 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
          if (v24 == v25) {
            goto LABEL_44;
          }
        }
        if (v13 == v4)
        {
LABEL_32:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_49;
          }
          goto LABEL_33;
        }
        uint64_t v17 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v18 = MEMORY[0x2533971C0](v4, *a1);
          uint64_t v17 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_18:
            if ((v13 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v13 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            uint64_t v19 = *(void *)(v17 + 8 * v12);
            swift_retain();
            goto LABEL_21;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v4 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v18 = *(void *)(v17 + 8 * v4 + 32);
          swift_retain();
          if ((v17 & 0xC000000000000001) == 0) {
            goto LABEL_18;
          }
        }
        uint64_t v19 = MEMORY[0x2533971C0](v12 - 4, v17);
        uint64_t v17 = *a1;
LABEL_21:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v17;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
        {
          uint64_t v17 = sub_2511C047C(v17);
          *a1 = v17;
        }
        *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v19;
        swift_release();
        sub_2511C95C0();
        uint64_t v21 = *a1;
        int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || v21 < 0 || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v21 = sub_2511C047C(v21);
          *a1 = v21;
        }
        a3 = v29;
        if ((v13 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v13 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v18;
        swift_release();
        sub_2511C95C0();
        goto LABEL_32;
      }
    }
LABEL_44:
    swift_bridgeObjectRelease();
    swift_release();
    return v4;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25115909C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_150;
    }
    if (v4) {
      return sub_251159770(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_158;
  }
  uint64_t v7 = result;
  int64_t v95 = a1;
  if (v4 < 2)
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v101 = MEMORY[0x263F8EE78];
    __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_116:
      uint64_t v87 = v10;
      if (v13 >= 2)
      {
        uint64_t v88 = *v95;
        do
        {
          unint64_t v89 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_145;
          }
          if (!v88) {
            goto LABEL_157;
          }
          int64_t v90 = v87;
          uint64_t v91 = *(void *)&v87[16 * v89 + 32];
          uint64_t v92 = *(void *)&v87[16 * v13 + 24];
          sub_251159830((char *)(v88 + 8 * v91), (char *)(v88 + 8 * *(void *)&v87[16 * v13 + 16]), v88 + 8 * v92, __dst);
          if (v2) {
            break;
          }
          if (v92 < v91) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v90 = sub_2511B2EF0((uint64_t)v90);
          }
          if (v89 >= *((void *)v90 + 2)) {
            goto LABEL_147;
          }
          int64_t v93 = &v90[16 * v89 + 32];
          *(void *)int64_t v93 = v91;
          *((void *)v93 + 1) = v92;
          unint64_t v94 = *((void *)v90 + 2);
          if (v13 > v94) {
            goto LABEL_148;
          }
          memmove(&v90[16 * v13 + 16], &v90[16 * v13 + 32], 16 * (v94 - v13));
          uint64_t v87 = v90;
          *((void *)v90 + 2) = v94 - 1;
          unint64_t v13 = v94 - 1;
        }
        while (v94 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2511C95C0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for DebugSnapshot();
    uint64_t v9 = sub_2511C95F0();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v101 = v9;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v96 = v12 - 8;
  uint64_t v97 = v7;
  char v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v98 = v4;
  uint64_t v99 = v12;
  while (1)
  {
    uint64_t v14 = v11++;
    if (v11 < v4)
    {
      uint64_t v15 = *(void *)(v12 + 8 * v11);
      uint64_t v16 = *(void *)(v12 + 8 * v14);
      if (*(void *)(v15 + 16) == *(void *)(v16 + 16) && *(void *)(v15 + 24) == *(void *)(v16 + 24))
      {
        uint64_t v19 = v14 + 2;
        if (v14 + 2 >= v4) {
          goto LABEL_43;
        }
        int v18 = 0;
        do
        {
LABEL_26:
          uint64_t v21 = *(void *)(v12 + 8 * v19);
          uint64_t v22 = *(void *)(v12 + 8 * v11);
          if (*(void *)(v21 + 16) == *(void *)(v22 + 16) && *(void *)(v21 + 24) == *(void *)(v22 + 24))
          {
            if (v18) {
              goto LABEL_35;
            }
          }
          else if ((v18 ^ sub_2511C9CA0()))
          {
            goto LABEL_34;
          }
          uint64_t v20 = v19 + 1;
          uint64_t v11 = v19;
          uint64_t v19 = v20;
        }
        while (v20 < v4);
        uint64_t v19 = v20;
      }
      else
      {
        int v18 = sub_2511C9CA0();
        uint64_t v19 = v14 + 2;
        if (v14 + 2 < v4) {
          goto LABEL_26;
        }
      }
LABEL_34:
      uint64_t v11 = v19;
      if (v18)
      {
LABEL_35:
        if (v19 < v14) {
          goto LABEL_153;
        }
        if (v14 < v19)
        {
          unint64_t v24 = (uint64_t *)(v96 + 8 * v19);
          uint64_t v25 = v19;
          uint64_t v26 = v14;
          uint64_t v27 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v26 != --v25)
            {
              if (!v12) {
                goto LABEL_156;
              }
              uint64_t v28 = *v27;
              *uint64_t v27 = *v24;
              *unint64_t v24 = v28;
            }
            ++v26;
            --v24;
            ++v27;
          }
          while (v26 < v25);
        }
LABEL_43:
        uint64_t v11 = v19;
      }
    }
    if (v11 < v4)
    {
      if (__OFSUB__(v11, v14)) {
        goto LABEL_149;
      }
      if (v11 - v14 < v97) {
        break;
      }
    }
LABEL_65:
    if (v11 < v14) {
      goto LABEL_144;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v10 = sub_2511B2920(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v37 = *((void *)v10 + 2);
    unint64_t v36 = *((void *)v10 + 3);
    unint64_t v13 = v37 + 1;
    if (v37 >= v36 >> 1) {
      char v10 = sub_2511B2920((char *)(v36 > 1), v37 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    unint64_t v38 = v10 + 32;
    unint64_t v39 = &v10[16 * v37 + 32];
    *(void *)unint64_t v39 = v14;
    *((void *)v39 + 1) = v11;
    if (v37)
    {
      uint64_t v12 = v99;
      while (1)
      {
        unint64_t v40 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v45 = &v38[16 * v13];
          uint64_t v46 = *((void *)v45 - 8);
          uint64_t v47 = *((void *)v45 - 7);
          BOOL v51 = __OFSUB__(v47, v46);
          uint64_t v48 = v47 - v46;
          if (v51) {
            goto LABEL_133;
          }
          uint64_t v50 = *((void *)v45 - 6);
          uint64_t v49 = *((void *)v45 - 5);
          BOOL v51 = __OFSUB__(v49, v50);
          uint64_t v43 = v49 - v50;
          char v44 = v51;
          if (v51) {
            goto LABEL_134;
          }
          unint64_t v52 = v13 - 2;
          uint64_t v53 = &v38[16 * v13 - 32];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          BOOL v51 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          if (v51) {
            goto LABEL_136;
          }
          BOOL v51 = __OFADD__(v43, v56);
          uint64_t v57 = v43 + v56;
          if (v51) {
            goto LABEL_139;
          }
          if (v57 >= v48)
          {
            uint64_t v75 = &v38[16 * v40];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v51 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v51) {
              goto LABEL_143;
            }
            BOOL v68 = v43 < v78;
            goto LABEL_103;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v69 = *((void *)v10 + 4);
            uint64_t v70 = *((void *)v10 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
            goto LABEL_97;
          }
          uint64_t v42 = *((void *)v10 + 4);
          uint64_t v41 = *((void *)v10 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
        }
        if (v44) {
          goto LABEL_135;
        }
        unint64_t v52 = v13 - 2;
        unint64_t v58 = &v38[16 * v13 - 32];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v61 = __OFSUB__(v59, v60);
        uint64_t v62 = v59 - v60;
        char v63 = v61;
        if (v61) {
          goto LABEL_138;
        }
        uint64_t v64 = &v38[16 * v40];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v51 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v51) {
          goto LABEL_141;
        }
        if (__OFADD__(v62, v67)) {
          goto LABEL_142;
        }
        if (v62 + v67 >= v43)
        {
          BOOL v68 = v43 < v67;
LABEL_103:
          if (v68) {
            unint64_t v40 = v52;
          }
          goto LABEL_105;
        }
LABEL_97:
        if (v63) {
          goto LABEL_137;
        }
        unint64_t v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_140;
        }
        if (v74 < v62) {
          goto LABEL_14;
        }
LABEL_105:
        unint64_t v79 = v40 - 1;
        if (v40 - 1 >= v13)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!v12) {
          goto LABEL_155;
        }
        uint64_t v80 = v10;
        uint64_t v81 = v12;
        char v82 = &v38[16 * v79];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v38[16 * v40];
        uint64_t v85 = *((void *)v84 + 1);
        sub_251159830((char *)(v81 + 8 * *(void *)v82), (char *)(v81 + 8 * *(void *)v84), v81 + 8 * v85, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v85 < v83) {
          goto LABEL_130;
        }
        if (v40 > *((void *)v80 + 2)) {
          goto LABEL_131;
        }
        *(void *)char v82 = v83;
        *(void *)&v38[16 * v79 + 8] = v85;
        unint64_t v86 = *((void *)v80 + 2);
        if (v40 >= v86) {
          goto LABEL_132;
        }
        char v10 = v80;
        unint64_t v13 = v86 - 1;
        memmove(&v38[16 * v40], v84 + 16, 16 * (v86 - 1 - v40));
        *((void *)v80 + 2) = v86 - 1;
        BOOL v68 = v86 > 2;
        uint64_t v12 = v99;
        if (!v68) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
    uint64_t v12 = v99;
LABEL_14:
    uint64_t v4 = v98;
    if (v11 >= v98)
    {
      uint64_t v2 = v1;
      goto LABEL_116;
    }
  }
  if (__OFADD__(v14, v97)) {
    goto LABEL_151;
  }
  if (v14 + v97 >= v4) {
    uint64_t v29 = v4;
  }
  else {
    uint64_t v29 = v14 + v97;
  }
  if (v29 >= v14)
  {
    if (v11 != v29)
    {
      uint64_t v30 = (void *)(v96 + 8 * v11);
      do
      {
        uint64_t v31 = *(void *)(v12 + 8 * v11);
        uint64_t v32 = v14;
        uint64_t v33 = v30;
        do
        {
          BOOL v34 = *(void *)(v31 + 16) == *(void *)(*v33 + 16) && *(void *)(v31 + 24) == *(void *)(*v33 + 24);
          if (v34 || (sub_2511C9CA0() & 1) == 0) {
            break;
          }
          if (!v12) {
            goto LABEL_154;
          }
          uint64_t v35 = *v33;
          uint64_t v31 = v33[1];
          *uint64_t v33 = v31;
          v33[1] = v35;
          --v33;
          ++v32;
        }
        while (v11 != v32);
        ++v11;
        ++v30;
      }
      while (v11 != v29);
      uint64_t v11 = v29;
    }
    goto LABEL_65;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_251159770(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v9 = *(void *)(v7 + 8 * v4);
    uint64_t v10 = v6;
    uint64_t v11 = (void *)v8;
    while (1)
    {
      uint64_t result = *(void *)(v9 + 16);
      BOOL v12 = result == *(void *)(*v11 + 16) && *(void *)(v9 + 24) == *(void *)(*v11 + 24);
      if (v12 || (uint64_t result = sub_2511C9CA0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v13 = *v11;
      uint64_t v9 = v11[1];
      *uint64_t v11 = v9;
      v11[1] = v13;
      --v11;
      if (v4 == ++v10) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251159830(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v28 = __src;
  uint64_t v27 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v17 = &v4[8 * v13];
      uint64_t v26 = v17;
      uint64_t v28 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        int v18 = (char *)(a3 - 8);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 8;
          uint64_t v21 = *((void *)v17 - 1);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 8;
          uint64_t v23 = *(void *)(v22 + 24);
          BOOL v24 = *(void *)(v21 + 16) == *(void *)(v22 + 16) && *(void *)(v21 + 24) == v23;
          if (v24 || (sub_2511C9CA0() & 1) == 0)
          {
            uint64_t v26 = v17 - 8;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(void *)int v18 = *((void *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 8;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(void *)int v18 = *(void *)v19;
            }
            uint64_t v28 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 8;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        BOOL v15 = *(void *)(*(void *)v6 + 16) == *(void *)(*(void *)v4 + 16)
           && *(void *)(*(void *)v6 + 24) == *(void *)(*(void *)v4 + 24);
        if (v15 || (sub_2511C9CA0() & 1) == 0)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v27 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 8;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v28 = v7;
    }
LABEL_50:
    sub_2511B2C7C(&v28, &v27, &v26);
    return 1;
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t (*sub_251159ADC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_251159BF8(v6, a2, a3);
  return sub_251159B44;
}

uint64_t (*sub_251159B48(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25115A360(v6, a2, a3);
  return sub_251159B44;
}

void sub_251159BB0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_251159BF8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x2533971C0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_251159C78;
  }
  __break(1u);
  return result;
}

uint64_t sub_251159C78()
{
  return swift_release();
}

void sub_251159C80(unint64_t a1)
{
}

uint64_t sub_251159C9C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251159CAC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251159CEC(uint64_t a1)
{
  return sub_2511AF1B0(a1, *(void *)(v1 + 16));
}

void sub_251159D08(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_25115724C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_251159D24(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_251158114(a1, v2, a2);
}

uint64_t sub_251159D44(uint64_t a1)
{
  sub_25113D3C0(a1, (uint64_t)v2);
  return OrchestrationDirector.statusObserver.setter((uint64_t)v2);
}

uint64_t sub_251159D84()
{
  return WorkQueue.priorityThreshold.setter();
}

uint64_t dispatch thunk of Dispatcher.start(source:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_251159DDC()
{
  return type metadata accessor for OrchestrationDirector();
}

uint64_t type metadata accessor for OrchestrationDirector()
{
  uint64_t result = qword_26B2178D0;
  if (!qword_26B2178D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251159E30()
{
  uint64_t result = sub_2511C92A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OrchestrationDirector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OrchestrationDirector);
}

uint64_t dispatch thunk of OrchestrationDirector.__allocating_init(environment:inputSignalProviders:executorProviders:contextProvider:dispatcher:logger:debugIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t destroy for OrchestrationDirector.State(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8) >= 4uLL)
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for OrchestrationDirector.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if ((unint64_t)(v5 - 1) >= 3 && v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v4;
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for OrchestrationDirector.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = v5 - 1;
  if ((unint64_t)(v4 - 1) < 3)
  {
    if (v6 < 3) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  if (v6 < 3)
  {
    sub_25115A0FC(a1 + 8, (uint64_t (*)(void))sub_25115A15C);
    goto LABEL_12;
  }
  if (!v4)
  {
LABEL_9:
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_13;
    }
LABEL_12:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_13;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_13:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t sub_25115A0FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25115A15C()
{
  if (!qword_269B21C58)
  {
    sub_2511472E4(0, &qword_269B21C60, (uint64_t (*)(uint64_t))sub_2511476BC, MEMORY[0x263F8D8F0]);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21C58);
    }
  }
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for OrchestrationDirector.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if ((unint64_t)(v4 - 1) >= 3)
  {
    if ((unint64_t)(v5 - 1) >= 3)
    {
      if (v4)
      {
        if (v5)
        {
          uint64_t v7 = *(void *)(a2 + 16);
          *(void *)(a1 + 8) = v5;
          *(void *)(a1 + 16) = v7;
          swift_release();
          goto LABEL_5;
        }
        swift_release();
      }
      else if (v5)
      {
        uint64_t v8 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = v8;
        goto LABEL_5;
      }
    }
    else
    {
      sub_25115A0FC(a1 + 8, (uint64_t (*)(void))sub_25115A15C);
    }
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_5:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrchestrationDirector.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrchestrationDirector.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationDirector.State()
{
  return &type metadata for OrchestrationDirector.State;
}

uint64_t (*sub_25115A360(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x2533971C0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_25115AF74;
  }
  __break(1u);
  return result;
}

void sub_25115A3E0()
{
  if (!qword_26B217EA0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B217EA0);
    }
  }
}

void sub_25115A444()
{
  if (!qword_269B21C78)
  {
    sub_2511472E4(255, (unint64_t *)&qword_269B21BF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugSnapshot, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B21C78);
    }
  }
}

void sub_25115A4DC()
{
  if (!qword_26B218188)
  {
    unint64_t v0 = sub_2511C9C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218188);
    }
  }
}

void *sub_25115A538@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2511AF5E4(a1, a2);
}

void *sub_25115A554@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25117D660(a1, v2, a2);
}

uint64_t sub_25115A570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_2511C9A20();
    for (uint64_t i = (_OWORD *)(a1 + 32); ; ++i)
    {
      *(_OWORD *)uint64_t v8 = *i;
      swift_unknownObjectRetain();
      sub_25115784C(v8, a2, &v9);
      swift_unknownObjectRelease();
      if (v2) {
        break;
      }
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      if (!--v4) {
        return v10;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25115A670(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = 0;
  if (v5)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x2533971C0](v6, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_retain();
      }
      uint64_t v11 = v7;
      char v8 = sub_251157534((uint64_t)&v11, a2);
      swift_release();
      if (v2 || (v8 & 1) != 0) {
        break;
      }
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_2511C9AC0();
        swift_bridgeObjectRelease();
        uint64_t v6 = 0;
        if (!v5) {
          return v6;
        }
      }
      else
      {
        ++v6;
        if (v9 == v5) {
          return 0;
        }
      }
    }
  }
  return v6;
}

uint64_t sub_25115A798(uint64_t result, uint64_t *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v3 = 0;
  uint64_t v15 = result + 32;
  uint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v14 = *(void *)(result + 16);
  while (1)
  {
    uint64_t v17 = v4;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    unint64_t v13 = v2;
LABEL_6:
    if (v3 == v2)
    {
LABEL_31:
      __break(1u);
      return result;
    }
    uint64_t v5 = *a2;
    long long v19 = *(_OWORD *)(v15 + 16 * v3);
    if ((unint64_t)*a2 >> 62)
    {
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v6 = sub_2511C9AC0();
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain_n();
    }
    unint64_t v18 = v3 + 1;
    if (v6) {
      break;
    }
LABEL_22:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v17;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_25116B8A0(0, *(void *)(v17 + 16) + 1, 1);
      uint64_t v4 = v17;
    }
    unint64_t v12 = *(void *)(v4 + 16);
    unint64_t v11 = *(void *)(v4 + 24);
    unint64_t v3 = v18;
    if (v12 >= v11 >> 1)
    {
      uint64_t result = sub_25116B8A0(v11 > 1, v12 + 1, 1);
      uint64_t v4 = v17;
    }
    *(void *)(v4 + 16) = v12 + 1;
    *(_OWORD *)(v4 + 16 * v12 + 32) = v19;
    unint64_t v2 = v14;
    if (v18 == v14) {
      return v4;
    }
  }
  uint64_t v7 = 4;
  while (1)
  {
    uint64_t v8 = v7 - 4;
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t result = MEMORY[0x2533971C0](v7 - 4, v5);
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t result = swift_retain();
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    swift_getObjectType();
    char v10 = sub_251146F94();
    swift_release();
    if (v10) {
      break;
    }
    ++v7;
    if (v9 == v6) {
      goto LABEL_22;
    }
  }
  swift_unknownObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v4 = v17;
  unint64_t v3 = v18;
  unint64_t v2 = v13;
  if (v18 != v14) {
    goto LABEL_6;
  }
  return v4;
}

uint64_t sub_25115AA0C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25115AA5C()
{
  return sub_251157B74(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_25115AA68(uint64_t a1)
{
  return sub_2511773B4(a1, v1);
}

uint64_t sub_25115AA84()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_25115AACC()
{
  sub_251156E90(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

void sub_25115AAD8(BOOL *a1@<X8>)
{
  sub_251156F1C(v1, a1);
}

uint64_t sub_25115AAF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25117B6A0(a1, a2);
}

uint64_t sub_25115AB10(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 3) {
    return sub_251135B0C(result);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OrchestrationDirector.PauseState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25115ABF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationDirector.PauseState()
{
  return &type metadata for OrchestrationDirector.PauseState;
}

uint64_t *destroy for OrchestrationDirector.RunState(uint64_t *result)
{
  LODWORD(v1) = -1;
  if ((unint64_t)*result < 0xFFFFFFFF) {
    uint64_t v1 = *result;
  }
  if ((int)v1 - 1 < 0)
  {
    if (*result) {
      return (uint64_t *)swift_release();
    }
  }
  return result;
}

void *_s19HealthOrchestration21OrchestrationDirectorC8RunStateOwCP_0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((int)v4 - 1 < 0 && v3)
  {
    uint64_t v5 = a2[1];
    *a1 = v3;
    a1[1] = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

uint64_t *assignWithCopy for OrchestrationDirector.RunState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  LODWORD(v5) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  else {
    uint64_t v6 = *a1;
  }
  int v7 = v6 - 1;
  uint64_t v8 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v5 = *a2;
  }
  int v9 = v5 - 1;
  if (v7 < 0)
  {
    if (v9 < 0)
    {
      if (!v4) {
        goto LABEL_8;
      }
      if (v8)
      {
        uint64_t v12 = a2[1];
        *a1 = v8;
        a1[1] = v12;
        swift_retain();
        swift_release();
        return a1;
      }
    }
    else if (!v4)
    {
      goto LABEL_13;
    }
    swift_release();
    goto LABEL_13;
  }
  if ((v9 & 0x80000000) == 0)
  {
LABEL_13:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
LABEL_8:
  if (!v8) {
    goto LABEL_13;
  }
  uint64_t v10 = a2[1];
  *a1 = v8;
  a1[1] = v10;
  swift_retain();
  return a1;
}

uint64_t *assignWithTake for OrchestrationDirector.RunState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  LODWORD(v5) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    uint64_t v5 = *a1;
  }
  if ((int)v5 - 1 >= 0) {
    goto LABEL_9;
  }
  uint64_t v6 = *a2;
  LODWORD(v7) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v7 = *a2;
  }
  if ((int)v7 - 1 < 0)
  {
    if (!v4)
    {
      if (v6)
      {
        uint64_t v10 = a2[1];
        *a1 = v6;
        a1[1] = v10;
        return a1;
      }
      goto LABEL_9;
    }
    if (v6)
    {
      uint64_t v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      swift_release();
      return a1;
    }
    goto LABEL_8;
  }
  if (v4) {
LABEL_8:
  }
    swift_release();
LABEL_9:
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for OrchestrationDirector.RunState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OrchestrationDirector.RunState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_25115AEA4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_25115AEC8(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    uint64_t v2 = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = a2;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationDirector.RunState()
{
  return &type metadata for OrchestrationDirector.RunState;
}

unint64_t sub_25115AF08()
{
  unint64_t result = qword_269B21C88;
  if (!qword_269B21C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21C88);
  }
  return result;
}

void sub_25115AF5C(uint64_t *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_25115AF78(uint64_t a1)
{
  return sub_251159CEC(a1);
}

uint64_t sub_25115AF90(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  unint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  long long v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_2511C9700();
  if (!v20) {
    return sub_2511C95E0();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_2511C9A60();
  uint64_t v35 = sub_2511C9A70();
  sub_2511C9A10();
  uint64_t v41 = v19;
  uint64_t result = sub_2511C96F0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    unint64_t v37 = v23;
    BOOL v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_2511C9720();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_2511C9A50();
      sub_2511C9710();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t SecureCodingValuesAnchor.init(identifier:values:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v7;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  uint64_t v8 = type metadata accessor for SecureCodingValuesAnchor();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4 + *(int *)(v8 + 52), a2, a3);
}

uint64_t SecureCodingValuesAnchor.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SecureCodingValuesAnchor.values.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t SecureCodingValuesAnchor.hasDifference(from:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2511C9890();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v21 - v12;
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    char v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, a3);
    uint64_t v18 = v6;
    (*(void (**)(char *, void, uint64_t))(v6 + 16))(v8, v21[1] + *(int *)(a3 + 52), v5);
    char v19 = sub_2511C9470();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a3);
    char v17 = v19 ^ 1;
  }
  return v17 & 1;
}

uint64_t SecureCodingValuesAnchor.merged(with:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_25115B780(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25115B878(char a1)
{
  if (a1) {
    return 0x7365756C6176;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_25115B8B0()
{
  return sub_25115B878(*v0);
}

uint64_t sub_25115B8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25115B780(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25115B8E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_251151710();
  *a1 = result;
  return result;
}

uint64_t sub_25115B914(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25115B968(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t SecureCodingValuesAnchor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v40 = a6;
  uint64_t v42 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v41 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v12;
  uint64_t v50 = v13;
  *(void *)&long long v51 = v14;
  *((void *)&v51 + 1) = v15;
  type metadata accessor for SecureCodingValuesAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v47 = sub_2511C9BA0();
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  char v17 = (char *)v35 - v16;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  *(void *)&long long v51 = a4;
  *((void *)&v51 + 1) = a5;
  uint64_t v43 = a5;
  uint64_t v18 = type metadata accessor for SecureCodingValuesAnchor();
  uint64_t v39 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v35 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = (uint64_t)v48;
  sub_2511C9D90();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v37 = v20;
  uint64_t v38 = v18;
  uint64_t v22 = v45;
  uint64_t v23 = v46;
  uint64_t v48 = a1;
  sub_25115BEFC();
  char v52 = 1;
  sub_25115C510((unint64_t *)&unk_269B21C98, (void (*)(void))sub_251150E90);
  uint64_t v24 = sub_2511C9B90();
  _OWORD v35[2] = v35;
  unint64_t v36 = v17;
  v35[1] = v49;
  MEMORY[0x270FA5388](v24);
  v35[-4] = a2;
  v35[-3] = v22;
  uint64_t v25 = v43;
  v35[-2] = v23;
  v35[-1] = v25;
  swift_getAssociatedTypeWitness();
  sub_25115C00C();
  uint64_t v26 = sub_2511C9570();
  swift_bridgeObjectRelease();
  uint64_t v27 = v41;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, a2, v22);
  uint64_t v29 = v37;
  uint64_t v28 = v38;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v37[*(int *)(v38 + 52)], v27, a2);
  char v52 = 0;
  sub_251150F3C();
  uint64_t v30 = v47;
  uint64_t v31 = v36;
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v30);
  uint64_t v32 = v50;
  *(void *)uint64_t v29 = v49;
  *((void *)v29 + 1) = v32;
  *((_OWORD *)v29 + 1) = v51;
  uint64_t v33 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v40, v29, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v29, v28);
}

uint64_t type metadata accessor for SecureCodingValuesAnchor.CodingKeys()
{
  return swift_getGenericMetadata();
}

void sub_25115BEFC()
{
  if (!qword_269B21C90)
  {
    unint64_t v0 = sub_2511C9610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21C90);
    }
  }
}

uint64_t sub_25115BF54@<X0>(uint64_t *a1@<X8>)
{
  sub_25115CD38();
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_2511C9780();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_25115BFEC@<X0>(uint64_t *a1@<X8>)
{
  return sub_25115BF54(a1);
}

unint64_t sub_25115C00C()
{
  unint64_t result = qword_269B21CA8;
  if (!qword_269B21CA8)
  {
    sub_25115BEFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21CA8);
  }
  return result;
}

uint64_t SecureCodingValuesAnchor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v27 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v6[3];
  uint64_t v7 = v6[4];
  uint64_t v28 = v6[5];
  uint64_t v29 = v7;
  uint64_t v38 = v4;
  uint64_t v39 = v8;
  *(void *)&long long v40 = v7;
  *((void *)&v40 + 1) = v28;
  type metadata accessor for SecureCodingValuesAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v26 = sub_2511C9C20();
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v23 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v25 = v10;
  uint64_t v11 = v27;
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  sub_2511C9DA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v13 + *(int *)(a2 + 52), v4);
  uint64_t v34 = v4;
  uint64_t v35 = v8;
  uint64_t v36 = v29;
  uint64_t v37 = v28;
  unint64_t v14 = sub_25113319C();
  uint64_t v15 = v32;
  uint64_t v16 = sub_25115AF90((void (*)(char *, char *))sub_25115C4EC, (uint64_t)v33, v4, MEMORY[0x263F06F78], v14, *(void *)(v8 + 8), MEMORY[0x263F8E4E0], (uint64_t)&v38);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  }
  else
  {
    uint64_t v18 = v16;
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v4);
    uint64_t v38 = v18;
    char v41 = 1;
    sub_25115BEFC();
    sub_25115C510(qword_269B21CB0, (void (*)(void))sub_251151270);
    uint64_t v20 = v25;
    uint64_t v21 = v26;
    sub_2511C9C00();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v13 + 8);
    uint64_t v38 = *(void *)v13;
    uint64_t v39 = v22;
    long long v40 = *(_OWORD *)(v13 + 16);
    char v41 = 0;
    sub_2511512C4();
    sub_2511C9C00();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  }
}

void sub_25115C3FC(uint64_t *a1@<X0>, uint64_t *a2@<X5>, uint64_t *a3@<X8>)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  v13[0] = 0;
  id v6 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v13);
  id v7 = v13[0];
  if (v6)
  {
    uint64_t v8 = sub_2511C91B0();
    uint64_t v10 = v9;

    *a3 = v8;
    a3[1] = v10;
  }
  else
  {
    uint64_t v11 = v7;
    uint64_t v12 = sub_2511C9140();

    swift_willThrow();
    *a2 = v12;
  }
}

void sub_25115C4EC(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_25115C510(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25115BEFC();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25115C588(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_25115C608@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return SecureCodingValuesAnchor.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_25115C62C(void *a1, uint64_t a2)
{
  return SecureCodingValuesAnchor.encode(to:)(a1, a2);
}

uint64_t sub_25115C644@<X0>(uint64_t *a1@<X8>)
{
  swift_getWitnessTable();
  uint64_t result = sub_2511C9620();
  *a1 = result;
  return result;
}

uint64_t sub_25115C6B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25115C6EC@<X0>(uint64_t *a1@<X8>)
{
  sub_2511C9610();
  swift_getWitnessTable();
  uint64_t result = sub_2511C96E0();
  *a1 = result;
  return result;
}

uint64_t sub_25115C774(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of InstantiableCollection.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_25115C7C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25115C860(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_25115C918(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

void *sub_25115C988(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_25115CA20(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 32) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 32) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

uint64_t sub_25115CBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

unsigned char *sub_25115CBF0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25115CCBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25115CCE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25115CD00()
{
  return swift_getWitnessTable();
}

uint64_t sub_25115CD1C()
{
  return swift_getWitnessTable();
}

unint64_t sub_25115CD38()
{
  unint64_t result = qword_26B217F80;
  if (!qword_26B217F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217F80);
  }
  return result;
}

uint64_t BuiltinProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BuiltinProvider.init()()
{
  return v0;
}

uint64_t BuiltinProvider.deinit()
{
  return v0;
}

uint64_t BuiltinProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s19HealthOrchestration15BuiltinProviderC12inputSignals3for8observerSayAA11InputSignal_pGAA11WorkContext_p_AA0iJ8Observer_ptF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a2;
  uint64_t v6 = type metadata accessor for LocaleInputSignal.BuiltinLocaleProvider();
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25115D7DC(0, &qword_26B2180F8, (unint64_t *)&qword_26B2178E8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2511CB9C0;
  uint64_t v10 = type metadata accessor for CalendarDayInputSignal();
  memset(v38, 0, sizeof(v38));
  uint64_t v39 = 0;
  swift_allocObject();
  uint64_t v11 = swift_unknownObjectRetain();
  uint64_t v12 = CalendarDayInputSignal.init(observer:dateProvider:)(v11, a4, (uint64_t)v38);
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = sub_25115D794((unint64_t *)&unk_26B217C50, (void (*)(uint64_t))type metadata accessor for CalendarDayInputSignal);
  *(void *)(v9 + 32) = v12;
  uint64_t v13 = type metadata accessor for DeadlineInputSignal.DispatchSourceTimeDelayProvider();
  uint64_t v14 = swift_allocObject();
  sub_2511448BC(0, (unint64_t *)&qword_26B218020);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = 0;
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = type metadata accessor for DeadlineInputSignal();
  char v17 = (void *)swift_allocObject();
  v17[7] = v13;
  v17[8] = &off_2702058F0;
  v17[4] = v14;
  sub_25115D614();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8EE78];
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = v19;
  v17[9] = v18;
  v17[2] = a3;
  v17[3] = a4;
  *(void *)(v9 + 96) = v16;
  *(void *)(v9 + 104) = sub_25115D794(&qword_26B217C10, (void (*)(uint64_t))type metadata accessor for DeadlineInputSignal);
  *(void *)(v9 + 72) = v17;
  uint64_t v20 = self;
  swift_unknownObjectRetain_n();
  id v21 = objc_msgSend(v20, sel_autoupdatingCurrentLocale);
  sub_2511C9220();

  uint64_t v22 = type metadata accessor for LocaleInputSignal();
  uint64_t v23 = (void *)swift_allocObject();
  v23[7] = v6;
  v23[8] = &off_2702078B8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23 + 4);
  sub_25115D6D4((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
  sub_2511448BC(0, (unint64_t *)&qword_26B218008);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 24) = 0;
  *(void *)(v25 + 16) = 0;
  v23[9] = v25;
  void v23[2] = a3;
  void v23[3] = a4;
  sub_25115D738((uint64_t)v8);
  *(void *)(v9 + 136) = v22;
  *(void *)(v9 + 144) = sub_25115D794(qword_26B217A80, (void (*)(uint64_t))type metadata accessor for LocaleInputSignal);
  *(void *)(v9 + 112) = v23;
  uint64_t v26 = type metadata accessor for NotificationInputSignal();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v27 = swift_unknownObjectRetain();
  uint64_t v28 = v37;
  uint64_t v29 = NotificationInputSignal.init(context:observer:)(v27, v37, a3, a4);
  *(void *)(v9 + 176) = v26;
  *(void *)(v9 + 184) = sub_25115D794(qword_26B217C68, (void (*)(uint64_t))type metadata accessor for NotificationInputSignal);
  *(void *)(v9 + 152) = v29;
  uint64_t v30 = type metadata accessor for POSIXSignalInputSignal();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v31 = swift_unknownObjectRetain();
  uint64_t v32 = POSIXSignalInputSignal.init(context:observer:)(v31, v28, a3, a4);
  *(void *)(v9 + 216) = v30;
  *(void *)(v9 + 224) = sub_25115D794(&qword_26B217C60, (void (*)(uint64_t))type metadata accessor for POSIXSignalInputSignal);
  *(void *)(v9 + 192) = v32;
  uint64_t v33 = type metadata accessor for PresenceInputSignal();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a3;
  *(void *)(v34 + 24) = a4;
  *(void *)(v9 + 256) = v33;
  *(void *)(v9 + 264) = sub_25115D794(&qword_26B217C18, (void (*)(uint64_t))type metadata accessor for PresenceInputSignal);
  *(void *)(v9 + 232) = v34;
  swift_unknownObjectRetain();
  return v9;
}

uint64_t sub_25115D268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void v20[3] = sub_25115D83C();
  v20[4] = &protocol witness table for RBSProcessMonitor;
  v20[0] = a4;
  unint64_t v10 = sub_251148A20(MEMORY[0x263F8EE78]);
  sub_2511448BC(0, (unint64_t *)&qword_26B216880);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 24) = 0;
  uint64_t v12 = (os_unfair_lock_s *)(v11 + 24);
  *(void *)(v11 + 16) = v10;
  uint64_t v13 = v11 + 16;
  a5[2] = v11;
  a5[8] = a2;
  a5[9] = a3;
  v18[6] = a1;
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_25115D87C(v13);
  os_unfair_lock_unlock(v12);
  swift_release();
  sub_25112FD4C((uint64_t)v20, (uint64_t)(a5 + 3));
  v18[2] = a1;
  void v18[3] = a5;
  uint64_t v14 = (void *)v20[0];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_25115D898;
  *(void *)(v15 + 24) = v18;
  aBlock[4] = sub_25115D8B0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_25119CD2C;
  aBlock[3] = &block_descriptor_1;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(v14, sel_updateConfiguration_, v16);
  _Block_release(v16);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v14)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return (uint64_t)a5;
  }
  return result;
}

uint64_t _s19HealthOrchestration15BuiltinProviderC28environmentalStateComponents8observerSayAA013EnvironmentalF9Component_pGAA0ifJ8Observer_p_tF_0(uint64_t a1, uint64_t a2)
{
  sub_25115D7DC(0, &qword_26B218130, qword_26B216760);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2511CB460;
  type metadata accessor for DeviceLockStateComponent.LockStateObserverShim();
  uint64_t v5 = swift_allocObject();
  type metadata accessor for DeviceLockStateComponent();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = swift_unknownObjectRetain();
  int v8 = sub_251154A34(v7, a2, v5, v6);
  swift_unknownObjectRelease();
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = &protocol witness table for DeviceLockStateComponent;
  id v9 = objc_allocWithZone(MEMORY[0x263F645C0]);
  swift_unknownObjectRetain();
  id v10 = objc_msgSend(v9, sel_init);
  type metadata accessor for ProcessStateComponent();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = sub_25115D268((uint64_t)&unk_270204A78, a1, a2, (uint64_t)v10, v11);
  swift_unknownObjectRelease();
  *(void *)(v4 + 48) = v12;
  *(void *)(v4 + 56) = &protocol witness table for ProcessStateComponent;
  return v4;
}

uint64_t type metadata accessor for BuiltinProvider()
{
  return self;
}

uint64_t method lookup function for BuiltinProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BuiltinProvider);
}

uint64_t dispatch thunk of BuiltinProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_25115D614()
{
  if (!qword_26B218058)
  {
    sub_25115D67C();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218058);
    }
  }
}

void sub_25115D67C()
{
  if (!qword_26B217EC0)
  {
    unint64_t v0 = sub_2511C9610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217EC0);
    }
  }
}

uint64_t sub_25115D6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocaleInputSignal.BuiltinLocaleProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25115D738(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocaleInputSignal.BuiltinLocaleProvider();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25115D794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25115D7DC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_251131944(255, a3);
    unint64_t v4 = sub_2511C9C60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_25115D83C()
{
  unint64_t result = qword_26B217F98;
  if (!qword_26B217F98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217F98);
  }
  return result;
}

uint64_t sub_25115D87C(uint64_t a1)
{
  return sub_25119C440(a1, *(void *)(v1 + 16));
}

void sub_25115D898(void *a1)
{
}

uint64_t sub_25115D8A0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25115D8B0(uint64_t a1)
{
  return sub_25119CD04(a1, *(uint64_t (**)(void))(v1 + 16));
}

void WorkPlanAnalytics.blockedDuration.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*WorkPlanAnalytics.blockedDuration.modify())()
{
  return nullsub_1;
}

void WorkPlanAnalytics.pausedDuration.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*WorkPlanAnalytics.pausedDuration.modify())()
{
  return nullsub_1;
}

void WorkPlanAnalytics.runnableDuration.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*WorkPlanAnalytics.runnableDuration.modify())()
{
  return nullsub_1;
}

uint64_t WorkPlanAnalytics.replacementCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t WorkPlanAnalytics.replacementCount.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*WorkPlanAnalytics.replacementCount.modify())()
{
  return nullsub_1;
}

void WorkPlanAnalytics.runDuration.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*WorkPlanAnalytics.runDuration.modify())()
{
  return nullsub_1;
}

uint64_t getEnumTagSinglePayload for WorkPlanAnalytics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WorkPlanAnalytics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

uint64_t dispatch thunk of EnvironmentalStateComponentProvider.environmentalStateComponents(observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void *DeadlineInputSignal.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeadlineInputSignal.DispatchSourceTimeDelayProvider();
  uint64_t v5 = swift_allocObject();
  sub_25115DAD8();
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  *(void *)(v5 + 16) = v6;
  uint64_t v7 = (void *)swift_allocObject();
  v7[7] = v4;
  _OWORD v7[8] = &off_2702058F0;
  v7[4] = v5;
  sub_25115D614();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(_DWORD *)(v8 + 24) = 0;
  *(void *)(v8 + 16) = v9;
  v7[9] = v8;
  void v7[2] = a1;
  _OWORD v7[3] = a2;
  return v7;
}

uint64_t type metadata accessor for DeadlineInputSignal.DispatchSourceTimeDelayProvider()
{
  return self;
}

void sub_25115DAD8()
{
  if (!qword_26B218020)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218020);
    }
  }
}

void static InputSignalIdentifier.deadline.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CBA90;
  a1[2] = 0;
  a1[3] = 0;
}

void static InputSignalSet.LookupKey.deadline.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CBA90;
  a1[2] = 0;
  a1[3] = 0;
}

void DeadlineInputSignal.Configuration.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CBA90;
  a1[2] = 0;
  a1[3] = 0;
}

double DeadlineInputSignal.Configuration.deadline.getter()
{
  return *(double *)v0;
}

void DeadlineInputSignal.Configuration.deadline.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*DeadlineInputSignal.Configuration.deadline.modify())()
{
  return nullsub_1;
}

uint64_t DeadlineInputSignal.Configuration.interval.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t DeadlineInputSignal.Configuration.interval.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*DeadlineInputSignal.Configuration.interval.modify())()
{
  return nullsub_1;
}

HealthOrchestration::DeadlineInputSignal::Configuration __swiftcall DeadlineInputSignal.Configuration.init(deadline:interval:)(Swift::Double deadline, Swift::Double_optional interval)
{
  *(Swift::Double *)uint64_t v3 = deadline;
  *(void *)(v3 + 8) = *(void *)&interval.is_nil;
  *(unsigned char *)(v3 + 16) = v2 & 1;
  result.interval.value = interval.value;
  result.interval.is_nil = interval.is_nil;
  result.deadline = deadline;
  return result;
}

uint64_t DeadlineInputSignal.Configuration.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2511C9D70();
  if (v1 == 1) {
    return sub_2511C9D60();
  }
  sub_2511C9D60();
  return sub_2511C9D70();
}

uint64_t static DeadlineInputSignal.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t DeadlineInputSignal.Configuration.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t sub_25115DD2C()
{
  return sub_2511C9D80();
}

uint64_t sub_25115DD8C()
{
  return sub_2511C9D80();
}

uint64_t sub_25115DDE4(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      if (*(unsigned char *)(a2 + 16)) {
        return 1;
      }
    }
    else
    {
      if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
        char v2 = 1;
      }
      if ((v2 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

HealthOrchestration::DeadlineInputSignal::Anchor __swiftcall DeadlineInputSignal.Anchor.init(timestamp:)(HealthOrchestration::DeadlineInputSignal::Anchor timestamp)
{
  v1->timestamp = timestamp.timestamp;
  return timestamp;
}

double DeadlineInputSignal.Anchor.timestamp.getter()
{
  return *(double *)v0;
}

void DeadlineInputSignal.Anchor.timestamp.setter(double a1)
{
  *int v1 = a1;
}

uint64_t (*DeadlineInputSignal.Anchor.timestamp.modify())()
{
  return nullsub_1;
}

Swift::Bool __swiftcall DeadlineInputSignal.Anchor.hasDifference(from:for:)(HealthOrchestration::DeadlineInputSignal::Anchor_optional from, HealthOrchestration::DeadlineInputSignal::Configuration a2)
{
  double v3 = **(double **)&a2.interval.is_nil;
  double v4 = *v2;
  if (*(unsigned char *)(*(void *)&from.is_nil + 8))
  {
    double v5 = 0.0;
    if (v3 <= 0.0) {
      goto LABEL_3;
    }
  }
  else
  {
    double v5 = **(double **)&from.is_nil;
    if (**(double **)&from.is_nil >= v3)
    {
LABEL_3:
      if (*(unsigned char *)(*(void *)&a2.interval.is_nil + 16)) {
        return v4 < v3;
      }
      double v8 = *(double *)(*(void *)&a2.interval.is_nil + 8);
      double v7 = v3 + (floor((v5 - v3) / v8) + 1.0) * v8;
      if (v4 < v3) {
        return v3 != v7;
      }
      goto LABEL_13;
    }
  }
  if (v4 >= v3)
  {
    if (*(unsigned char *)(*(void *)&a2.interval.is_nil + 16)) {
      return 1;
    }
    double v8 = *(double *)(*(void *)&a2.interval.is_nil + 8);
    double v7 = **(double **)&a2.interval.is_nil;
LABEL_13:
    double v3 = v3 + (floor((v4 - v3) / v8) + 1.0) * v8;
    return v3 != v7;
  }
  double v7 = **(double **)&a2.interval.is_nil;
  return v3 != v7;
}

HealthOrchestration::DeadlineInputSignal::Anchor __swiftcall DeadlineInputSignal.Anchor.merged(with:)(HealthOrchestration::DeadlineInputSignal::Anchor with)
{
  *(HealthOrchestration::DeadlineInputSignal::Anchor *)&result.timestamp = *(HealthOrchestration::DeadlineInputSignal::Anchor *)v1;
  if (*v1 >= *v3) {
    *(HealthOrchestration::DeadlineInputSignal::Anchor *)&result.timestamp = *(HealthOrchestration::DeadlineInputSignal::Anchor *)v3;
  }
  v2->timestamp = result.timestamp;
  return result;
}

BOOL static DeadlineInputSignal.Anchor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25115DF50()
{
  return 1;
}

uint64_t sub_25115DF58()
{
  return sub_2511C9D80();
}

uint64_t sub_25115DF9C()
{
  return sub_2511C9D50();
}

uint64_t sub_25115DFC4()
{
  return sub_2511C9D80();
}

uint64_t sub_25115E004()
{
  return 0x6D617473656D6974;
}

uint64_t sub_25115E020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2511C9CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_25115E0C4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25115E0D0(uint64_t a1)
{
  unint64_t v2 = sub_25115F684();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25115E10C(uint64_t a1)
{
  unint64_t v2 = sub_25115F684();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeadlineInputSignal.Anchor.encode(to:)(void *a1)
{
  sub_25115F6D8(0, &qword_26B2180E8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25115F684();
  sub_2511C9DA0();
  sub_2511C9BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DeadlineInputSignal.Anchor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_25115F6D8(0, &qword_26B2180D8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25115F684();
  sub_2511C9D90();
  if (!v2)
  {
    sub_2511C9B70();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

double *sub_25115E418@<X0>(double *result@<X0>, double *a2@<X8>)
{
  double v3 = *result;
  if (*result >= *v2) {
    double v3 = *v2;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_25115E434@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DeadlineInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_25115E44C(void *a1)
{
  sub_25115F6D8(0, &qword_26B2180E8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25115F684();
  sub_2511C9DA0();
  sub_2511C9BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void DeadlineInputSignal.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CBA90;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t DeadlineInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

void *DeadlineInputSignal.__allocating_init(observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  uint64_t v10 = sub_2511600EC(a1, a2, v9, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

void *DeadlineInputSignal.init(observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_251160040(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v13;
}

uint64_t sub_25115E75C(double a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 72);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_251144C54(v4, &v15);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = (uint64_t)v15;
  uint64_t v7 = v15[2];
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (double *)(v6 + 48);
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      double v10 = *(v8 - 2);
      if (v10 > a1) {
        goto LABEL_8;
      }
      if ((*(unsigned char *)v8 & 1) == 0) {
        break;
      }
LABEL_4:
      v8 += 3;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    double v10 = v10 + *(v8 - 1) * (floor((a1 - v10) / *(v8 - 1)) + 1.0);
LABEL_8:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_2511BFB9C(0, v9[2] + 1, 1, v9);
    }
    unint64_t v12 = v9[2];
    unint64_t v11 = v9[3];
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_2511BFB9C((void *)(v11 > 1), v12 + 1, 1, v9);
    }
    v9[2] = v12 + 1;
    *(double *)&v9[v12 + 4] = v10;
    goto LABEL_4;
  }
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  swift_bridgeObjectRetain();
  sub_25115F618((uint64_t *)&v15);
  swift_bridgeObjectRelease();
  if (v15[2]) {
    uint64_t v13 = v15[4];
  }
  else {
    uint64_t v13 = 0;
  }
  swift_release();
  return v13;
}

void *sub_25115E91C()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + 4;
    uint64_t v3 = result[7];
    uint64_t v4 = result[8];
    __swift_project_boxed_opaque_existential_1(result + 4, v3);
    double v5 = (*(double (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    uint64_t v6 = v1[3];
    uint64_t ObjectType = swift_getObjectType();
    double v20 = v5;
    uint64_t v19 = v1;
    uint64_t v8 = *(void (**)(double *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8);
    uint64_t v9 = type metadata accessor for DeadlineInputSignal();
    uint64_t v11 = sub_2511352F4(&qword_26B217C10, v10, (void (*)(uint64_t))type metadata accessor for DeadlineInputSignal);
    v8(&v20, &v19, v9, v11, ObjectType, v6);
    *(double *)&uint64_t v12 = COERCE_DOUBLE(sub_25115E75C(v5));
    if (v13)
    {
      return (void *)swift_release();
    }
    else
    {
      double v14 = *(double *)&v12;
      uint64_t v15 = v1[7];
      uint64_t v16 = v1[8];
      __swift_project_boxed_opaque_existential_1(v2, v15);
      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      uint64_t v18 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, double))(v16 + 16);
      swift_retain();
      v18(sub_251160294, v17, v15, v16, v14);
      swift_release();
      return (void *)swift_release_n();
    }
  }
  return result;
}

uint64_t *sub_25115EAEC@<X0>(uint64_t *result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result)
  {
    swift_getObjectType();
    uint64_t result = (uint64_t *)sub_2511C9830();
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_25115EB3C(uint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v6 = sub_2511C9350();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  long long v51 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (char *)&v37 - v9;
  uint64_t v54 = sub_2511C93C0();
  uint64_t v49 = *(void *)(v54 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v54);
  uint64_t v47 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v48 = (char *)&v37 - v12;
  uint64_t v13 = sub_2511C9360();
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v42 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_2511C9390();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2511C97F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  double v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2511C9830();
    swift_unknownObjectRelease_n();
    *a1 = 0;
  }
  sub_251160A40();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2511352F4(&qword_26B217FA8, 255, MEMORY[0x263F8F148]);
  uint64_t v39 = a1;
  id v21 = (void (*)(uint64_t))MEMORY[0x263F8F148];
  sub_2511346DC(0, (unint64_t *)&qword_26B217F50, MEMORY[0x263F8F148]);
  sub_2511482C4(&qword_26B217F58, (unint64_t *)&qword_26B217F50, v21);
  sub_2511C9900();
  uint64_t v22 = sub_2511C9800();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t ObjectType = swift_getObjectType();
  aBlock[4] = v45;
  aBlock[5] = v46;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_251135784;
  aBlock[3] = &block_descriptor_2;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  sub_2511C9380();
  uint64_t v24 = v42;
  sub_2511345F0();
  sub_2511C9820();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v44);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
  swift_release();
  double v25 = a4 - CFAbsoluteTimeGetCurrent();
  if (v25 < 0.0) {
    double v26 = 0.0;
  }
  else {
    double v26 = v25;
  }
  uint64_t v27 = v47;
  sub_2511C93A0();
  uint64_t v28 = v48;
  MEMORY[0x253396C20](v27, v26);
  uint64_t v49 = *(void *)(v49 + 8);
  ((void (*)(char *, uint64_t))v49)(v27, v54);
  uint64_t v30 = v52;
  uint64_t v29 = v53;
  uint64_t v31 = *(void (**)(char *, void, uint64_t))(v52 + 104);
  uint64_t v32 = v50;
  v31(v50, *MEMORY[0x263F8F010], v53);
  uint64_t v33 = v51;
  *(void *)long long v51 = 0;
  v31(v33, *MEMORY[0x263F8EFE0], v29);
  MEMORY[0x2533970A0](v28, v32, v33, ObjectType);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v33, v29);
  v34(v32, v29);
  ((void (*)(char *, uint64_t))v49)(v28, v54);
  uint64_t v35 = v39;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t *v35 = v22;
  sub_2511C9840();
  return swift_unknownObjectRelease();
}

uint64_t sub_25115F188()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_25115F1C4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251160A20(v2);
  os_unfair_lock_unlock(v3);
}

void sub_25115F228()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25115EAEC(v2, &v4);

  os_unfair_lock_unlock(v3);
}

Swift::Void __swiftcall DeadlineInputSignal.beginObservation(from:configurations:)(HealthOrchestration::DeadlineInputSignal::Anchor_optional from, Swift::OpaquePointer configurations)
{
  uint64_t v3 = (os_unfair_lock_s *)v2[9];
  BOOL v4 = v3 + 4;
  double v5 = v3 + 6;
  uint64_t v6 = *v2;
  os_unfair_lock_lock(v3 + 6);
  sub_2511601F0(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v7);
  double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v10 = v2[3];
  uint64_t ObjectType = swift_getObjectType();
  v23[0] = v9;
  uint64_t v22 = v2;
  uint64_t v12 = *(void (**)(double *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
  uint64_t v14 = sub_2511352F4(&qword_26B217C10, v13, (void (*)(uint64_t))type metadata accessor for DeadlineInputSignal);
  v12(v23, &v22, v6, v14, ObjectType, v10);
  *(double *)&uint64_t v15 = COERCE_DOUBLE(sub_25115E75C(v9));
  if ((v16 & 1) == 0)
  {
    double v17 = *(double *)&v15;
    uint64_t v18 = v2[7];
    uint64_t v19 = v2[8];
    __swift_project_boxed_opaque_existential_1(v2 + 4, v18);
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    id v21 = *(void (**)(void *(*)(), uint64_t, uint64_t, uint64_t, double))(v19 + 16);
    swift_retain();
    v21(sub_251160294, v20, v18, v19, v17);
    swift_release_n();
  }
}

Swift::Void __swiftcall DeadlineInputSignal.stopObservation()()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t DeadlineInputSignal.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return v0;
}

uint64_t DeadlineInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25115F554()
{
  return swift_unknownObjectRetain();
}

void sub_25115F580(char a1, Swift::OpaquePointer a2, double a3)
{
}

uint64_t sub_25115F5A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 32), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

unint64_t sub_25115F5FC()
{
  return 0xD000000000000013;
}

uint64_t sub_25115F618(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2511B2F2C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_25115F73C(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_25115F684()
{
  unint64_t result = qword_26B217BC0;
  if (!qword_26B217BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BC0);
  }
  return result;
}

void sub_25115F6D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_25115F684();
    unint64_t v7 = a3(a1, &type metadata for DeadlineInputSignal.Anchor.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_25115F73C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          unint64_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_25115FDD0((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_2511B2EF0((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          uint64_t v92 = &v88[16 * v87 + 32];
          *(void *)uint64_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_2511C95F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  unint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          uint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          id v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              *id v21 = *v18;
              *uint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2511B2920(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      unint64_t v79 = sub_2511B2920((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    uint64_t v32 = &v11[16 * v30 + 32];
    *(void *)uint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            BOOL v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        long long v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_25115FDD0((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_25115FDD0(double *__src, double *a2, unint64_t a3, double *__dst)
{
  BOOL v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2511B2BC0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void *sub_251160040(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  a4[7] = a5;
  a4[8] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4 + 4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  sub_25115D614();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(_DWORD *)(v12 + 24) = 0;
  *(void *)(v12 + 16) = v13;
  a4[9] = v12;
  a4[2] = a1;
  a4[3] = a2;
  return a4;
}

void *sub_2511600EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_251160040(a1, a2, (uint64_t)v13, v14, a5, a6);
}

uint64_t sub_2511601F0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DeadlineInputSignal()
{
  return self;
}

uint64_t sub_25116025C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_251160294()
{
  return sub_25115E91C();
}

unint64_t sub_25116029C(uint64_t a1)
{
  unint64_t result = sub_2511602C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2511602C4()
{
  unint64_t result = qword_26B217BA8;
  if (!qword_26B217BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BA8);
  }
  return result;
}

unint64_t sub_25116031C()
{
  unint64_t result = qword_26B217BB0;
  if (!qword_26B217BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BB0);
  }
  return result;
}

unint64_t sub_251160374()
{
  unint64_t result = qword_269B21E08;
  if (!qword_269B21E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21E08);
  }
  return result;
}

unint64_t sub_2511603C8(void *a1)
{
  a1[1] = sub_251160400();
  a1[2] = sub_251160454();
  unint64_t result = sub_2511604A8();
  a1[3] = result;
  return result;
}

unint64_t sub_251160400()
{
  unint64_t result = qword_26B217BF8;
  if (!qword_26B217BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BF8);
  }
  return result;
}

unint64_t sub_251160454()
{
  unint64_t result = qword_26B217BE0;
  if (!qword_26B217BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BE0);
  }
  return result;
}

unint64_t sub_2511604A8()
{
  unint64_t result = qword_26B217BE8;
  if (!qword_26B217BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BE8);
  }
  return result;
}

unint64_t sub_251160500()
{
  unint64_t result = qword_26B217C00;
  if (!qword_26B217C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217C00);
  }
  return result;
}

uint64_t sub_251160554(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2511352F4(&qword_26B218560, a2, (void (*)(uint64_t))type metadata accessor for DeadlineInputSignal);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of TimeDelayProvider.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimeDelayProvider.fire(at:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TimeDelayProvider.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for DeadlineInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeadlineInputSignal);
}

uint64_t dispatch thunk of DeadlineInputSignal.__allocating_init(observer:provider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for DeadlineInputSignal.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeadlineInputSignal.Configuration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DeadlineInputSignal.Configuration()
{
  return &type metadata for DeadlineInputSignal.Configuration;
}

ValueMetadata *type metadata accessor for DeadlineInputSignal.Anchor()
{
  return &type metadata for DeadlineInputSignal.Anchor;
}

uint64_t getEnumTagSinglePayload for DeadlineInputSignal.Anchor.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DeadlineInputSignal.Anchor.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251160770);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251160798()
{
  return 0;
}

ValueMetadata *type metadata accessor for DeadlineInputSignal.Anchor.CodingKeys()
{
  return &type metadata for DeadlineInputSignal.Anchor.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState()
{
  return &type metadata for DeadlineInputSignal.DispatchSourceTimeDelayProvider.ProtectedState;
}

unint64_t sub_25116091C()
{
  unint64_t result = qword_269B21E18;
  if (!qword_269B21E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21E18);
  }
  return result;
}

unint64_t sub_251160974()
{
  unint64_t result = qword_26B217BD0;
  if (!qword_26B217BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BD0);
  }
  return result;
}

unint64_t sub_2511609CC()
{
  unint64_t result = qword_26B217BC8;
  if (!qword_26B217BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217BC8);
  }
  return result;
}

uint64_t sub_251160A20(uint64_t *a1)
{
  return sub_25115EB3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 32));
}

unint64_t sub_251160A40()
{
  unint64_t result = qword_26B217FB0;
  if (!qword_26B217FB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217FB0);
  }
  return result;
}

uint64_t SecureCodingCurrentValueWorkPlan.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

__n128 SecureCodingCurrentValueWorkPlan.identifier.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  __n128 result = v4;
  *uint64_t v1 = v4;
  v1[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*SecureCodingCurrentValueWorkPlan.identifier.modify())()
{
  return nullsub_1;
}

uint64_t SecureCodingCurrentValueWorkPlan.priority.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SecureCodingCurrentValueWorkPlan.priority.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(unsigned char *)(v1 + 32) = v3;
  return result;
}

uint64_t (*SecureCodingCurrentValueWorkPlan.priority.modify())()
{
  return nullsub_1;
}

id SecureCodingCurrentValueWorkPlan.value.getter()
{
  return *(id *)(v0 + 40);
}

void SecureCodingCurrentValueWorkPlan.value.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

uint64_t (*SecureCodingCurrentValueWorkPlan.value.modify())()
{
  return nullsub_1;
}

__n128 SecureCodingCurrentValueWorkPlan.init(identifier:priority:value:)@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result = *a1;
  unint64_t v5 = a1[1].n128_u64[0];
  unint64_t v6 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a2 + 8);
  *a4 = *a1;
  a4[1].n128_u64[0] = v5;
  a4[1].n128_u64[1] = v6;
  a4[2].n128_u8[0] = v7;
  a4[2].n128_u64[1] = a3;
  return result;
}

id SecureCodingCurrentValueWorkPlan.merged(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v7;
}

uint64_t sub_251160C58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251160DB4(char a1)
{
  if (!a1) {
    return 0x65756C6176;
  }
  if (a1 == 1) {
    return 0x696669746E656469;
  }
  return 0x797469726F697270;
}

BOOL sub_251160E0C(char *a1, char *a2)
{
  return sub_25114CDB4(*a1, *a2);
}

uint64_t sub_251160E18()
{
  return sub_25114CF48();
}

uint64_t sub_251160E20()
{
  return sub_25114CDC4();
}

uint64_t sub_251160E28()
{
  return sub_2511C9D80();
}

uint64_t sub_251160E68()
{
  return sub_251160DB4(*v0);
}

uint64_t sub_251160E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251160C58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251160E98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_251150130();
  *a1 = result;
  return result;
}

uint64_t sub_251160EC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_251160F18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void SecureCodingCurrentValueWorkPlan.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v24 = a2;
  type metadata accessor for SecureCodingCurrentValueWorkPlan.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_2511C9BA0();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v22 - v5;
  uint64_t v7 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_2511C9D90();
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v8 = v25;
  char v30 = 0;
  sub_251150E90();
  sub_2511C9B90();
  uint64_t v10 = v27;
  unint64_t v9 = v28;
  sub_251131578(0, (unint64_t *)&qword_26B217F80);
  uint64_t v11 = sub_2511C9780();
  uint64_t v12 = (void *)v11;
  if (!v11)
  {
    type metadata accessor for SecureCodingCurrentValueWorkPlan.Errors();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
    sub_251150EE4(v10, v9);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return;
  }
  char v30 = 1;
  sub_25114D870();
  id v13 = v12;
  double v14 = v6;
  sub_2511C9B90();
  double v15 = v13;
  uint64_t v17 = v27;
  unint64_t v16 = v28;
  uint64_t v23 = v29;
  char v30 = 2;
  sub_25114D8C4();
  swift_bridgeObjectRetain();
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v4);
  sub_251150EE4(v10, v9);
  uint64_t v18 = v27;
  char v19 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v17;
  id v21 = v24;
  *uint64_t v24 = v20;
  v21[1] = v16;
  void v21[2] = v23;
  void v21[3] = v18;
  *((unsigned char *)v21 + 32) = v19;
  v21[5] = (uint64_t)v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SecureCodingCurrentValueWorkPlan.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SecureCodingCurrentValueWorkPlan.Errors()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SecureCodingCurrentValueWorkPlan.encode(to:)(void *a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  type metadata accessor for SecureCodingCurrentValueWorkPlan.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_2511C9C20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v19 - v5;
  unint64_t v7 = *(void *)(v1 + 8);
  uint64_t v22 = *(void **)v1;
  unint64_t v23 = v7;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v20 = *(void **)(v1 + 24);
  uint64_t v21 = v8;
  HIDWORD(v19) = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = self;
  id v27 = 0;
  id v11 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v9, 1, &v27);
  id v12 = v27;
  if (v11)
  {
    uint64_t v24 = v4;
    id v13 = (void *)sub_2511C91B0();
    unint64_t v15 = v14;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2511C9DA0();
    id v27 = v13;
    unint64_t v28 = v15;
    char v26 = 0;
    sub_251151270();
    uint64_t v16 = v25;
    sub_2511C9C00();
    if (v16)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
      return sub_251150EE4((uint64_t)v13, v15);
    }
    else
    {
      id v27 = v22;
      unint64_t v28 = v23;
      uint64_t v29 = v21;
      char v26 = 1;
      sub_25114D3C4();
      swift_bridgeObjectRetain();
      sub_2511C9C00();
      swift_bridgeObjectRelease();
      id v27 = v20;
      LOBYTE(v28) = BYTE4(v19);
      char v26 = 2;
      sub_25114D418();
      swift_bridgeObjectRetain();
      sub_2511C9C00();
      sub_251150EE4((uint64_t)v13, v15);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v6, v3);
    }
  }
  else
  {
    uint64_t v18 = v12;
    sub_2511C9140();

    return swift_willThrow();
  }
}

uint64_t static SecureCodingCurrentValueWorkPlan.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8) || (sub_2511C9CA0())
    && v2 == v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_25114DF90(v3, v5))
    {
      char v8 = sub_25114DC38(v4, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v8)
      {
        sub_251131578(0, (unint64_t *)&qword_26B217FC0);
        return sub_2511C9880() & 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

id sub_251161804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCodingCurrentValueWorkPlan.merged(with:)(a1, a2);
}

void sub_251161820(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_25116183C(void *a1)
{
  return SecureCodingCurrentValueWorkPlan.encode(to:)(a1);
}

uint64_t SecureCodingCurrentValueWorkPlan.description.getter()
{
  return 0;
}

uint64_t sub_251161A0C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

void sub_251161A6C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t sub_251161AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t sub_251161B0C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  return a1;
}

uint64_t sub_251161B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t type metadata accessor for SecureCodingCurrentValueWorkPlan()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251161C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_251161C18(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251161CB4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_251161CDC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251161DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_251161DD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_251161DEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_251161E08()
{
  return swift_getWitnessTable();
}

uint64_t sub_251161E24()
{
  return swift_getWitnessTable();
}

void static InputSignalIdentifier.fileCoordinator.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000002511CC0F0;
  a1[2] = 0;
  a1[3] = 0;
}

void static InputSignalSet.LookupKey.fileCoordinator.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000002511CC0F0;
  a1[2] = 0;
  a1[3] = 0;
}

void FileCoordinatorInputSignal.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000002511CC0F0;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t FileCoordinatorInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

void FileCoordinatorInputSignal.Configuration.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000002511CC0F0;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t FileCoordinatorInputSignal.Configuration.paths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FileCoordinatorInputSignal.Configuration.paths.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FileCoordinatorInputSignal.Configuration.paths.modify())()
{
  return nullsub_1;
}

uint64_t FileCoordinatorInputSignal.Configuration.init(paths:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FileCoordinatorInputSignal.Configuration.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_2511685DC(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t static FileCoordinatorInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_251162234(*a1, *a2);
}

uint64_t sub_251161FAC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    unint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    sub_2511C94F0();
    uint64_t v18 = sub_2511C9D80();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_2511C9CA0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        id v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_2511C9CA0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_251162234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9180();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v48 = (char *)&v35 - v9;
  sub_251169C8C(0, &qword_269B21F98, MEMORY[0x263F06EA8]);
  uint64_t result = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v35 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    int64_t v39 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v44 = v5 + 48;
    unint64_t v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v46 = a2 + 56;
    uint64_t v47 = v5 + 16;
    uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v5;
    uint64_t v37 = a1;
    uint64_t v35 = v13;
    if (!v18) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v41 = (v18 - 1) & v18;
    int64_t v42 = v14;
    for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
    {
      uint64_t v25 = *(void *)(v5 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
      uint64_t v27 = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1) {
        return v27;
      }
      (*v43)(v48, v13, v4);
      sub_251169CE0((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
      uint64_t v28 = sub_2511C9440();
      uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v30 = v28 & ~v29;
      if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      {
        (*v19)(v48, v4);
        return 0;
      }
      uint64_t v40 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v31 = a2;
      uint64_t v32 = ~v29;
      while (1)
      {
        v26(v8, *(void *)(v31 + 48) + v30 * v25, v4);
        sub_251169CE0(qword_269B22110, 255, MEMORY[0x263F06EA8]);
        char v33 = sub_2511C9470();
        uint64_t v34 = *v19;
        (*v19)(v8, v4);
        if (v33) {
          break;
        }
        unint64_t v30 = (v30 + 1) & v32;
        if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
          v34(v48, v4);
          return 0;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v48, v4);
      a2 = v31;
      uint64_t v5 = v36;
      a1 = v37;
      uint64_t v13 = v35;
      unint64_t v18 = v41;
      int64_t v14 = v42;
      if (v41) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v21 >= v39) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v21);
      int64_t v23 = v14 + 1;
      if (!v22)
      {
        int64_t v23 = v14 + 2;
        if (v14 + 2 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 3;
          if (v14 + 3 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = *(void *)(v38 + 8 * v23);
          if (!v22)
          {
            uint64_t v24 = v14 + 4;
            if (v14 + 4 >= v39)
            {
LABEL_34:
              uint64_t v27 = 1;
              (*v45)(v13, 1, 1, v4);
              return v27;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v24);
            if (!v22)
            {
              while (1)
              {
                int64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_36;
                }
                if (v23 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = *(void *)(v38 + 8 * v23);
                ++v24;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v23 = v14 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v41 = (v22 - 1) & v22;
      int64_t v42 = v23;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_251162738(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_32;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    unsigned int v16 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v12);
    uint64_t result = MEMORY[0x253397570](*(void *)(a2 + 40), v16, 4);
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(_DWORD *)(v19 + 4 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_251162904(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v20 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    sub_251169894(*(void *)(v3 + 48) + 40 * i, (uint64_t)v27);
    long long v24 = v27[0];
    long long v25 = v27[1];
    uint64_t v26 = v28;
    sub_2511C9D40();
    __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
    sub_2511C9450();
    uint64_t v15 = sub_2511C9D80();
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v17 = v15 & ~v16;
    if (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    {
LABEL_29:
      sub_2511698F0((uint64_t)&v24);
      return 0;
    }
    uint64_t v18 = ~v16;
    while (1)
    {
      sub_251169894(*(void *)(a2 + 48) + 40 * v17, (uint64_t)v22);
      uint64_t v19 = v23;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      LOBYTE(v19) = sub_251175254((uint64_t)&v24, v19);
      sub_2511698F0((uint64_t)v22);
      if (v19) {
        break;
      }
      unint64_t v17 = (v17 + 1) & v18;
      if (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t result = sub_2511698F0((uint64_t)&v24);
    if (v8) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v12 >= v21) {
      return 1;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v21) {
        return 1;
      }
      unint64_t v13 = *(void *)(v20 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v21) {
          return 1;
        }
        unint64_t v13 = *(void *)(v20 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v21) {
            return 1;
          }
          unint64_t v13 = *(void *)(v20 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v21) {
    return 1;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v21) {
      return 1;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t FileCoordinatorInputSignal.Configuration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511685DC(v3, v1);
  swift_bridgeObjectRelease();
  return sub_2511C9D80();
}

void sub_251162C00(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000002511CC0F0;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t sub_251162C24()
{
  uint64_t v1 = *v0;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511685DC(v3, v1);
  swift_bridgeObjectRelease();
  return sub_2511C9D80();
}

uint64_t sub_251162C7C(long long *a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_2511685DC(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_251162CC8()
{
  uint64_t v1 = *v0;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511685DC(v3, v1);
  swift_bridgeObjectRelease();
  return sub_2511C9D80();
}

uint64_t sub_251162D1C(uint64_t *a1, uint64_t *a2)
{
  return sub_251162234(*a1, *a2);
}

uint64_t (*FileCoordinatorInputSignal.Anchor.modificationDates.modify())()
{
  return nullsub_1;
}

uint64_t FileCoordinatorInputSignal.Anchor.hasDifference(from:for:)(uint64_t *a1, uint64_t *a2)
{
  sub_251169C8C(0, &qword_269B21F90, MEMORY[0x263F07490]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = sub_2511C91E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v58 = (char *)&v53 - v14;
  uint64_t v15 = sub_2511C9180();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251169C8C(0, &qword_269B21F98, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v19 - 8);
  int64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = *a2;
  uint64_t v23 = *(void *)(*a2 + 56);
  uint64_t v65 = *a2 + 56;
  uint64_t v24 = 1 << *(unsigned char *)(v22 + 32);
  uint64_t v25 = -1;
  uint64_t v62 = *a1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  unint64_t v27 = v24 + 63;
  uint64_t v28 = *v2;
  int64_t v66 = v27 >> 6;
  uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v72 = v28;
  uint64_t v69 = v16 + 48;
  uint64_t v70 = v16 + 16;
  uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v63 = v11 + 48;
  uint64_t v64 = v11 + 16;
  uint64_t v59 = v11;
  char v56 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v57 = (void (**)(char *, char *))(v11 + 32);
  uint64_t v67 = (void (**)(uint64_t, uint64_t))(v16 + 8);
  BOOL v68 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v73 = v22;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v30 = 0;
  uint64_t v74 = v18;
  BOOL v54 = v9;
  while (1)
  {
    if (v26)
    {
      unint64_t v31 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      unint64_t v32 = v31 | (v30 << 6);
      uint64_t v33 = v72;
      goto LABEL_22;
    }
    int64_t v34 = v30 + 1;
    uint64_t v33 = v72;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v34 >= v66) {
      goto LABEL_32;
    }
    unint64_t v35 = *(void *)(v65 + 8 * v34);
    ++v30;
    if (!v35)
    {
      int64_t v30 = v34 + 1;
      if (v34 + 1 >= v66) {
        goto LABEL_32;
      }
      unint64_t v35 = *(void *)(v65 + 8 * v30);
      if (!v35)
      {
        int64_t v30 = v34 + 2;
        if (v34 + 2 >= v66) {
          goto LABEL_32;
        }
        unint64_t v35 = *(void *)(v65 + 8 * v30);
        if (!v35) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v26 = (v35 - 1) & v35;
    unint64_t v32 = __clz(__rbit64(v35)) + (v30 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v21, *(void *)(v73 + 48) + *(void *)(v16 + 72) * v32, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1) {
      goto LABEL_33;
    }
    (*v68)(v18, v21, v15);
    if (!*(void *)(v33 + 16) || (unint64_t v37 = sub_251167184((uint64_t)v18), (v38 & 1) == 0))
    {
      (*v75)(v9, 1, 1, v10);
      goto LABEL_5;
    }
    uint64_t v39 = *(void *)(v33 + 56);
    uint64_t v40 = v59;
    uint64_t v41 = *(void *)(v59 + 72);
    uint64_t v60 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
    v60(v9, v39 + v41 * v37, v10);
    BOOL v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v61(v9, 0, 1, v10);
    int64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
    if (v42((uint64_t)v9, 1, v10) == 1)
    {
LABEL_5:
      uint64_t v18 = v74;
      (*v67)((uint64_t)v74, v15);
      uint64_t result = sub_251168954((uint64_t)v9);
    }
    else
    {
      uint64_t v43 = v10;
      uint64_t v44 = *v57;
      unint64_t v45 = v9;
      uint64_t v46 = v43;
      (*v57)(v58, v45);
      if (!v62 || !*(void *)(v62 + 16) || (unint64_t v47 = sub_251167184((uint64_t)v74), (v48 & 1) == 0))
      {
        uint64_t v49 = (uint64_t)v55;
        v61(v55, 1, 1, v46);
LABEL_35:
        (*v56)(v58, v46);
        (*v67)((uint64_t)v74, v15);
        swift_release();
        sub_251168954(v49);
        return 1;
      }
      uint64_t v49 = (uint64_t)v55;
      v60(v55, *(void *)(v62 + 56) + v47 * v41, v46);
      v61((char *)v49, 0, 1, v46);
      if (v42(v49, 1, v46) == 1) {
        goto LABEL_35;
      }
      uint64_t v50 = v53;
      ((void (*)(char *, uint64_t, uint64_t))v44)(v53, v49, v46);
      long long v51 = v58;
      LODWORD(v61) = sub_2511C91C0();
      uint64_t v52 = *v56;
      (*v56)(v50, v46);
      v52(v51, v46);
      uint64_t v18 = v74;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v67)(v74, v15);
      uint64_t v10 = v46;
      uint64_t v9 = v54;
      if (v61)
      {
        swift_release();
        return 1;
      }
    }
  }
  int64_t v36 = v34 + 3;
  if (v36 >= v66)
  {
LABEL_32:
    (*v71)(v21, 1, 1, v15);
LABEL_33:
    swift_release();
    return 0;
  }
  unint64_t v35 = *(void *)(v65 + 8 * v36);
  if (v35)
  {
    int64_t v30 = v36;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v30 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v30 >= v66) {
      goto LABEL_32;
    }
    unint64_t v35 = *(void *)(v65 + 8 * v30);
    ++v36;
    if (v35) {
      goto LABEL_21;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t FileCoordinatorInputSignal.Anchor.merged(with:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t result = sub_2511634F0(v4, v3);
  *a1 = result;
  return result;
}

uint64_t sub_2511634F0(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_25116794C(a1, (uint64_t)sub_25116787C, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t static FileCoordinatorInputSignal.Anchor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2511639CC(*a1, *a2);
}

uint64_t sub_251163588(uint64_t a1, uint64_t a2)
{
  return sub_2511635D0(a1, a2, sub_2511637C4);
}

uint64_t sub_2511635A0(uint64_t a1, uint64_t a2)
{
  return sub_2511635D0(a1, a2, sub_2511635B8);
}

uint64_t sub_2511635B8(uint64_t a1, uint64_t a2)
{
  return sub_2511635D0(a1, a2, sub_251161FAC);
}

uint64_t sub_2511635D0(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v5 = 0;
  uint64_t v6 = result + 64;
  uint64_t v7 = 1 << *(unsigned char *)(result + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(result + 64);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v23) {
      return 1;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v12);
    ++v5;
    if (!v13)
    {
      int64_t v5 = v12 + 1;
      if (v12 + 1 >= v23) {
        return 1;
      }
      unint64_t v13 = *(void *)(v6 + 8 * v5);
      if (!v13)
      {
        int64_t v5 = v12 + 2;
        if (v12 + 2 >= v23) {
          return 1;
        }
        unint64_t v13 = *(void *)(v6 + 8 * v5);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251149240(v16, v17);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v21 = swift_bridgeObjectRetain();
    char v22 = a3(v21, v18);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v23) {
    return 1;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13)
  {
    int64_t v5 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v23) {
      return 1;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2511637C4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_251149240(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_2511C9CA0();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2511639CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C91E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v48 - v8;
  uint64_t v65 = sub_2511C9180();
  uint64_t v58 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v60 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251169C8C(0, &qword_269B220E8, (void (*)(uint64_t))sub_251169B28);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v48 - v16;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v57 = a2;
  int64_t v61 = 0;
  uint64_t v52 = a1;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v50 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v51 = v58 + 16;
  uint64_t v63 = v5 + 16;
  uint64_t v53 = (void (**)(uint64_t, uint64_t))(v58 + 8);
  BOOL v54 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v55 = (void (**)(char *, uint64_t))(v5 + 8);
  char v56 = (void (**)(char *, char *, uint64_t))(v58 + 32);
  int64_t v48 = v50 - 1;
  uint64_t v22 = v65;
  while (1)
  {
    if (v21)
    {
      unint64_t v23 = __clz(__rbit64(v21));
      uint64_t v24 = (v21 - 1) & v21;
      unint64_t v25 = v23 | (v61 << 6);
LABEL_8:
      uint64_t v26 = v52;
      (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v14, *(void *)(v52 + 48) + *(void *)(v58 + 72) * v25, v65);
      unint64_t v27 = *(void *)(v26 + 56) + *(void *)(v5 + 72) * v25;
      sub_251169B28();
      uint64_t v29 = v28;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(&v14[*(int *)(v28 + 48)], v27, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 0, 1, v29);
      goto LABEL_27;
    }
    int64_t v30 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 < v50)
    {
      unint64_t v31 = *(void *)(v49 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v61 + 2;
      ++v61;
      if (v30 + 1 < v50)
      {
        unint64_t v31 = *(void *)(v49 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v61 = v30 + 1;
        if (v30 + 2 < v50)
        {
          unint64_t v31 = *(void *)(v49 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v61 = v30 + 2;
          if (v30 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    sub_251169B28();
    uint64_t v29 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 1, 1, v33);
    uint64_t v24 = 0;
LABEL_27:
    sub_251169B9C((uint64_t)v14, (uint64_t)v17);
    sub_251169B28();
    int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v17, 1, v29);
    BOOL v62 = v34 == 1;
    if (v34 == 1) {
      return v62;
    }
    unint64_t v64 = v24;
    unint64_t v35 = v14;
    uint64_t v36 = v5;
    unint64_t v37 = &v17[*(int *)(v29 + 48)];
    uint64_t v38 = (uint64_t)v60;
    uint64_t v39 = v17;
    (*v56)(v60, v17, v22);
    (*v54)(v9, v37, v4);
    uint64_t v40 = v57;
    unint64_t v41 = sub_251167184(v38);
    char v43 = v42;
    (*v53)(v38, v22);
    if ((v43 & 1) == 0)
    {
      (*v55)(v9, v4);
      return 0;
    }
    uint64_t v5 = v36;
    unint64_t v44 = *(void *)(v40 + 56) + *(void *)(v36 + 72) * v41;
    unint64_t v45 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v59, v44, v4);
    sub_251169CE0(&qword_269B220F8, 255, MEMORY[0x263F07490]);
    char v46 = sub_2511C9470();
    unint64_t v47 = *(void (**)(char *, uint64_t))(v36 + 8);
    v47(v45, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v47)(v9, v4);
    uint64_t v14 = v35;
    uint64_t v17 = v39;
    unint64_t v21 = v64;
    if ((v46 & 1) == 0) {
      return v62;
    }
  }
  unint64_t v31 = *(void *)(v49 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    uint64_t v24 = (v31 - 1) & v31;
    unint64_t v25 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v61 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v50)
    {
      int64_t v61 = v48;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v49 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25116400C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    double v18 = *(double *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_251149240(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_2511641AC(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    double v15 = *(double *)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t result = sub_251167220(*(_DWORD *)(*(void *)(v3 + 48) + 4 * v11));
    if ((v16 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * result) != v15) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251164318(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    int64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251149240(v15, v16);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = swift_bridgeObjectRetain();
    char v21 = sub_25114EC9C(v20, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2511644F8(uint64_t result, uint64_t a2)
{
  void (*v34)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t *v48;
  unint64_t v49;
  void v50[3];
  void v51[3];

  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 64);
  char v43 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  unint64_t v44 = (unint64_t)(v6 + 63) >> 6;
  unint64_t v45 = result;
  char v46 = a2;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      uint64_t v14 = (v8 - 1) & v8;
      unint64_t v15 = v13 | (v4 << 6);
      goto LABEL_26;
    }
    int64_t v16 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v44) {
      return 1;
    }
    unint64_t v17 = *(void *)(v43 + 8 * v16);
    ++v4;
    if (!v17)
    {
      int64_t v4 = v16 + 1;
      if (v16 + 1 >= v44) {
        return 1;
      }
      unint64_t v17 = *(void *)(v43 + 8 * v4);
      if (!v17)
      {
        int64_t v4 = v16 + 2;
        if (v16 + 2 >= v44) {
          return 1;
        }
        unint64_t v17 = *(void *)(v43 + 8 * v4);
        if (!v17)
        {
          int64_t v4 = v16 + 3;
          if (v16 + 3 >= v44) {
            return 1;
          }
          unint64_t v17 = *(void *)(v43 + 8 * v4);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v14 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v4 << 6);
LABEL_26:
    char v19 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    uint64_t v24 = *(void **)(*(void *)(v3 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_25112F2DC(v20, v21, v22, v23);
    LOBYTE(v22) = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_33;
    }
    uint64_t v49 = v14;
    unint64_t v47 = v4;
    unint64_t v27 = *(void **)(*(void *)(v2 + 56) + 8 * v25);
    uint64_t v28 = v27[5];
    uint64_t v29 = v27[6];
    int64_t v30 = __swift_project_boxed_opaque_existential_1(v27 + 2, v28);
    int64_t v48 = &v43;
    uint64_t v31 = *(void *)(v28 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)&v43 - v32;
    (*(void (**)(char *))(v31 + 16))((char *)&v43 - v32);
    int v34 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v29 + 40);
    swift_retain();
    v34(v51, v28, v29);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v28);
    uint64_t v36 = v51[0];
    unint64_t v35 = v51[1];
    unint64_t v37 = v24[5];
    uint64_t v38 = v24[6];
    uint64_t v39 = __swift_project_boxed_opaque_existential_1(v24 + 2, v37);
    uint64_t v40 = *(void *)(v37 - 8);
    MEMORY[0x270FA5388](v39);
    char v42 = (char *)&v43 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v40 + 16))(v42);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v38 + 40))(v50, v37, v38);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v37);
    if (v36 == v50[0] && v35 == v50[1])
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = v49;
    }
    else
    {
      char v9 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = v49;
      if ((v9 & 1) == 0)
      {
        swift_release();
LABEL_33:
        swift_release();
        return 0;
      }
    }
    swift_beginAccess();
    uint64_t v10 = v27[7];
    swift_beginAccess();
    uint64_t v11 = v24[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_251162904(v10, v11);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v45;
    uint64_t v2 = v46;
    int64_t v4 = v47;
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v44) {
    return 1;
  }
  unint64_t v17 = *(void *)(v43 + 8 * v18);
  if (v17)
  {
    int64_t v4 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v4 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v4 >= v44) {
      return 1;
    }
    unint64_t v17 = *(void *)(v43 + 8 * v4);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_2511649F0()
{
  return 0xD000000000000011;
}

uint64_t sub_251164A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25116980C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_251164A38(uint64_t a1)
{
  unint64_t v2 = sub_2511689CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251164A74(uint64_t a1)
{
  unint64_t v2 = sub_2511689CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FileCoordinatorInputSignal.Anchor.encode(to:)(void *a1)
{
  sub_251168BB0(0, &qword_269B21FA0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511689CC();
  sub_2511C9DA0();
  v10[1] = v8;
  sub_251168A20();
  sub_251168AD0();
  sub_2511C9C00();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FileCoordinatorInputSignal.Anchor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_251168BB0(0, &qword_269B21FD8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511689CC();
  sub_2511C9D90();
  if (!v2)
  {
    sub_251168A20();
    sub_251168C14();
    sub_2511C9B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_251164DB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t result = sub_2511634F0(v4, v3);
  *a1 = result;
  return result;
}

uint64_t sub_251164E10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FileCoordinatorInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_251164E28(void *a1)
{
  return FileCoordinatorInputSignal.Anchor.encode(to:)(a1);
}

uint64_t sub_251164E40(uint64_t *a1, uint64_t *a2)
{
  return sub_2511639CC(*a1, *a2);
}

void *FileCoordinatorInputSignal.__allocating_init(context:observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  uint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v10 = sub_251153690(MEMORY[0x263F8EE78]);
  unint64_t v11 = sub_251153918(v9);
  sub_251168CF4();
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  v8[6] = a2;
  v8[7] = v12;
  _OWORD v8[5] = a1;
  v8[2] = a3;
  uint64_t v8[3] = a4;
  return v8;
}

void *FileCoordinatorInputSignal.init(context:observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  uint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v10 = sub_251153690(MEMORY[0x263F8EE78]);
  unint64_t v11 = sub_251153918(v9);
  sub_251168CF4();
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  v4[6] = a2;
  v4[7] = v12;
  v4[5] = a1;
  v4[2] = a3;
  v4[3] = a4;
  return v4;
}

void FileCoordinatorInputSignal.beginObservation(from:configurations:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v2 + 32);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v2;
  v6[3] = v4;
  v6[4] = a2;
  v8[4] = sub_251168D58;
  _OWORD v8[5] = v6;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  v8[2] = sub_251135784;
  uint64_t v8[3] = &block_descriptor_3;
  uint64_t v7 = _Block_copy(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_addOperationWithBlock_, v7);
  _Block_release(v7);
}

uint64_t sub_2511650BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      sub_2511B0934(v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v21;
  }
  sub_25118AAE4(v5);
  uint64_t v9 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = v10 + 4;
  uint64_t v12 = v10 + 8;
  os_unfair_lock_lock(v10 + 8);
  sub_251169B08(v11, (uint64_t)&v21);
  os_unfair_lock_unlock(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v21;
  uint64_t v14 = v3[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = v13;
  uint64_t v20 = v3;
  int64_t v16 = *(void (**)(uint64_t *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
  uint64_t v18 = sub_251169CE0(&qword_269B220D8, v17, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal);
  v16(&v21, &v20, v4, v18, ObjectType, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251165280@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v117 = a4;
  uint64_t v107 = a3;
  v84[0] = a5;
  sub_251169C8C(0, &qword_269B21F90, MEMORY[0x263F07490]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = (char *)v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v101 = (uint64_t)v84 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v102 = (uint64_t)v84 - v12;
  uint64_t v13 = sub_2511C91E0();
  uint64_t v85 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v87 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v100 = (char *)v84 - v16;
  uint64_t v17 = sub_2511C9180();
  uint64_t v105 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unint64_t v93 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v99 = (char *)v84 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v114 = (char *)v84 - v22;
  sub_251169C8C(0, &qword_269B21F98, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v23 - 8);
  unint64_t v25 = (char *)v84 - v24;
  if (a2)
  {
    *a1 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  unint64_t v113 = a1;
  uint64_t v26 = *(void *)(v107 + 56);
  uint64_t v91 = v107 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(v107 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v92 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v30 = v105 + 16;
  uint64_t v103 = v105 + 48;
  unint64_t v104 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56);
  uint64_t v98 = (void (**)(char *, char *, uint64_t))(v105 + 32);
  unint64_t v110 = (void (**)(uint64_t, uint64_t))(v105 + 8);
  uint64_t v111 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  uint64_t v31 = (void (**)(char *, uint64_t, uint64_t))(v85 + 32);
  unint64_t v89 = (void (**)(uint64_t, char *, uint64_t))(v85 + 16);
  unint64_t v94 = (void (**)(char *, uint64_t, uint64_t))(v85 + 56);
  uint64_t v88 = (void (**)(char *, uint64_t))(v85 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v33 = 0;
  uint64_t v108 = v13;
  int v34 = v114;
  uint64_t v97 = v25;
  uint64_t v112 = v30;
  uint64_t v90 = v31;
  if (v29) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v38 = v33 + 1;
  if (__OFADD__(v33, 1))
  {
    __break(1u);
  }
  else
  {
    if (v38 >= v92) {
      goto LABEL_35;
    }
    unint64_t v39 = *(void *)(v91 + 8 * v38);
    ++v33;
    if (v39) {
      goto LABEL_22;
    }
    int64_t v33 = v38 + 1;
    if (v38 + 1 >= v92) {
      goto LABEL_35;
    }
    unint64_t v39 = *(void *)(v91 + 8 * v33);
    if (v39) {
      goto LABEL_22;
    }
    int64_t v33 = v38 + 2;
    if (v38 + 2 >= v92) {
      goto LABEL_35;
    }
    unint64_t v39 = *(void *)(v91 + 8 * v33);
    if (v39) {
      goto LABEL_22;
    }
    int64_t v40 = v38 + 3;
    if (v40 >= v92)
    {
LABEL_35:
      (*v104)(v25, 1, 1, v17);
LABEL_36:
      swift_release();
      *(void *)v84[0] = *v113;
      return swift_bridgeObjectRetain();
    }
    unint64_t v39 = *(void *)(v91 + 8 * v40);
    if (v39)
    {
      int64_t v33 = v40;
LABEL_22:
      uint64_t v36 = (v39 - 1) & v39;
      for (unint64_t i = __clz(__rbit64(v39)) + (v33 << 6); ; unint64_t i = v35 | (v33 << 6))
      {
        uint64_t v41 = *(void *)(v107 + 48);
        uint64_t v42 = v105;
        uint64_t v106 = *(void *)(v105 + 72);
        char v43 = *(void (**)(char *, unint64_t, uint64_t))(v105 + 16);
        v43(v25, v41 + v106 * i, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v25, 0, 1, v17);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v25, 1, v17) == 1) {
          break;
        }
        int64_t v115 = v33;
        unint64_t v116 = v36;
        (*v98)(v34, v25, v17);
        unint64_t v44 = v34;
        uint64_t v45 = (uint64_t)v99;
        v43(v99, (unint64_t)v44, v17);
        char v46 = *(void **)(v117 + 32);
        unint64_t v47 = (objc_class *)type metadata accessor for FileCoordinatorInputSignal.Presenter();
        int64_t v48 = (char *)objc_allocWithZone(v47);
        swift_weakInit();
        v43(&v48[OBJC_IVAR____TtCC19HealthOrchestration26FileCoordinatorInputSignal9Presenter_observedURL], v45, v17);
        *(void *)&v48[OBJC_IVAR____TtCC19HealthOrchestration26FileCoordinatorInputSignal9Presenter_presentedItemOperationQueue] = v46;
        swift_weakAssign();
        v118.receiver = v48;
        v118.super_class = v47;
        id v49 = v46;
        id v50 = objc_msgSendSuper2(&v118, sel_init);
        uint64_t v51 = *v110;
        (*v110)(v45, v17);
        uint64_t v52 = (void (*)(char *, uint64_t, uint64_t))v43;
        uint64_t v53 = (uint64_t)v114;
        uint64_t v109 = v52;
        v52((char *)v45, (uint64_t)v114, v17);
        id v54 = v50;
        uint64_t v55 = v113;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v119 = v55[1];
        v55[1] = 0x8000000000000000;
        sub_2511A9BE4((uint64_t)v54, v45, isUniquelyReferenced_nonNull_native);
        v55[1] = v119;
        swift_bridgeObjectRelease();
        v51(v45, v17);
        objc_msgSend(self, sel_addFilePresenter_, v54);
        uint64_t v57 = v102;
        sub_251165F8C(v53, v102);
        uint64_t v58 = *v111;
        uint64_t v59 = v108;
        if ((*v111)(v57, 1, v108) == 1)
        {
          v51(v53, v17);

          uint64_t result = sub_251168954(v57);
          int v34 = (char *)v53;
          unint64_t v25 = v97;
          int64_t v33 = v115;
          unint64_t v29 = v116;
          if (!v116) {
            goto LABEL_9;
          }
        }
        else
        {
          uint64_t v95 = v51;
          id v96 = v54;
          uint64_t v60 = *v90;
          int64_t v61 = v100;
          (*v90)(v100, v57, v59);
          uint64_t v62 = (uint64_t)v93;
          v109(v93, v53, v17);
          uint64_t v63 = v101;
          (*v89)(v101, v61, v59);
          unint64_t v64 = *v94;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))*v94)(v63, 0, 1, v59);
          if (v58(v63, 1, v59) == 1)
          {
            sub_251168954(v101);
            uint64_t v65 = v113;
            swift_bridgeObjectRetain();
            unint64_t v66 = sub_251167184(v62);
            char v68 = v67;
            swift_bridgeObjectRelease();
            uint64_t v109 = v64;
            if (v68)
            {
              uint64_t v69 = v60;
              char v70 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v71 = *v65;
              uint64_t v119 = *v65;
              *uint64_t v65 = 0x8000000000000000;
              if ((v70 & 1) == 0)
              {
                sub_251187470();
                uint64_t v71 = v119;
              }
              unint64_t v72 = *(void *)(v71 + 48) + v66 * v106;
              int64_t v73 = v66;
              uint64_t v74 = v95;
              v95(v72, v17);
              uint64_t v75 = v119;
              uint64_t v76 = v86;
              uint64_t v77 = v108;
              v69(v86, *(void *)(v119 + 56) + *(void *)(v85 + 72) * v73, v108);
              sub_2511680F4(v73, v75);
              *uint64_t v65 = v75;
              swift_bridgeObjectRelease();
              uint64_t v78 = (uint64_t)v76;
              uint64_t v79 = 0;
              uint64_t v80 = v93;
              int v34 = v114;
              int64_t v33 = v115;
              unint64_t v25 = v97;
            }
            else
            {
              uint64_t v79 = 1;
              uint64_t v78 = (uint64_t)v86;
              uint64_t v77 = v108;
              uint64_t v80 = v93;
              int v34 = v114;
              int64_t v33 = v115;
              unint64_t v25 = v97;
              uint64_t v74 = v95;
            }
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v109)(v78, v79, 1, v77);
            v74((uint64_t)v80, v17);
            sub_251168954(v78);
          }
          else
          {
            uint64_t v81 = (uint64_t)v87;
            v60(v87, v101, v59);
            char v82 = v113;
            char v83 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v119 = *v82;
            *char v82 = 0x8000000000000000;
            sub_2511A99E0(v81, v62, v83);
            *char v82 = v119;
            swift_bridgeObjectRelease();
            uint64_t v74 = v95;
            v95(v62, v17);
            uint64_t v77 = v59;
            int v34 = v114;
            int64_t v33 = v115;
            unint64_t v25 = v97;
          }

          (*v88)(v100, v77);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v74)(v34, v17);
          unint64_t v29 = v116;
          if (!v116) {
            goto LABEL_9;
          }
        }
LABEL_8:
        unint64_t v35 = __clz(__rbit64(v29));
        uint64_t v36 = (v29 - 1) & v29;
      }
      goto LABEL_36;
    }
    while (1)
    {
      int64_t v33 = v40 + 1;
      if (__OFADD__(v40, 1)) {
        break;
      }
      if (v33 >= v92) {
        goto LABEL_35;
      }
      unint64_t v39 = *(void *)(v91 + 8 * v33);
      ++v40;
      if (v39) {
        goto LABEL_22;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251165D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_251169C8C(0, &qword_269B21F90, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_2511C91E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_251168954(a1);
    sub_251167F24(a2, (uint64_t)v8);
    uint64_t v13 = sub_2511C9180();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251168954((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2511A99E0((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_2511C9180();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_251165F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v56 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_2511C92A0();
  uint64_t v51 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v50 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2511C9180();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v43 - v9;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  sub_2511C9150();
  sub_2511C9170();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v10, v5);
  uint64_t v13 = (void *)sub_2511C9480();
  swift_bridgeObjectRelease();
  *(void *)&long long v54 = 0;
  id v14 = objc_msgSend(v11, sel_attributesOfItemAtPath_error_, v13, &v54);

  id v15 = (id)v54;
  if (v14)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_251169CE0(&qword_269B21B10, 255, type metadata accessor for FileAttributeKey);
    uint64_t v16 = sub_2511C9410();

    if (*(void *)(v16 + 16))
    {
      id v17 = (id)*MEMORY[0x263F08048];
      unint64_t v18 = sub_251167318((uint64_t)v17);
      if (v19)
      {
        sub_2511410DC(*(void *)(v16 + 56) + 32 * v18, (uint64_t)&v54);
      }
      else
      {
        long long v54 = 0u;
        long long v55 = 0u;
      }
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v55 + 1))
    {
      uint64_t v38 = sub_2511C91E0();
      uint64_t v39 = v52;
      int v40 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v39, v40 ^ 1u, 1, v38);
    }
    sub_2511699A0((uint64_t)&v54);
  }
  else
  {
    uint64_t v20 = v15;
    char v46 = v12;
    uint64_t v47 = v3;
    uint64_t v21 = (void *)sub_2511C9140();

    swift_willThrow();
    uint64_t v22 = *(void *)(v48 + 48);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = v50;
    (*(void (**)(uint64_t, uint64_t))(v22 + 40))(ObjectType, v22);
    unint64_t v25 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v49, a1, v5);
    id v26 = v21;
    id v27 = v21;
    uint64_t v28 = sub_2511C9280();
    os_log_type_t v29 = sub_2511C9750();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v45 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(void *)&long long v54 = v48;
      *(_DWORD *)uint64_t v30 = 136315394;
      os_log_t v44 = v28;
      sub_251169CE0(&qword_269B220E0, 255, MEMORY[0x263F06EA8]);
      uint64_t v31 = sub_2511C9C50();
      uint64_t v53 = sub_251140E4C(v31, v32, (uint64_t *)&v54);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      v46(v25, v5);
      *(_WORD *)(v30 + 12) = 2112;
      id v33 = v21;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v53 = v34;
      sub_2511C98A0();
      unint64_t v35 = v45;
      *uint64_t v45 = v34;

      os_log_t v36 = v44;
      _os_log_impl(&dword_25112A000, v44, v29, "Failed to fetch initial modfication date for: %s: %@", (uint8_t *)v30, 0x16u);
      sub_251169C8C(0, (unint64_t *)&qword_26B217FD0, (void (*)(uint64_t))sub_251169960);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v35, -1, -1);
      uint64_t v37 = v48;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v37, -1, -1);
      MEMORY[0x253397D40](v30, -1, -1);
    }
    else
    {

      v46(v25, v5);
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v47);
  }
  uint64_t v42 = sub_2511C91E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v52, 1, 1, v42);
}

Swift::Void __swiftcall FileCoordinatorInputSignal.stopObservation()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 56);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_251166674(v2);

  os_unfair_lock_unlock(v3);
}

id sub_251166674(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_5:
    id result = objc_msgSend(self, sel_removeFilePresenter_, *(void *)(*(void *)(v2 + 56) + 8 * v11));
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release();
    unint64_t v15 = sub_251153918(MEMORY[0x263F8EE78]);
    id result = (id)swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = v15;
    return result;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251166810(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_251169C8C(0, &qword_269B21F90, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_2511C91E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251165F8C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_251168954((uint64_t)v6);
  }
  uint64_t v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  MEMORY[0x270FA5388](v12);
  *(&v22 - 2) = a1;
  *(&v22 - 1) = (uint64_t)v10;
  int64_t v14 = v13 + 4;
  unint64_t v15 = v13 + 8;
  os_unfair_lock_lock(v13 + 8);
  sub_251169944(v14, &v24);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = v24;
  uint64_t v17 = v1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = v16;
  uint64_t v23 = v1;
  char v19 = *(void (**)(uint64_t *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
  uint64_t v21 = sub_251169CE0(&qword_269B220D8, v20, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal);
  v19(&v24, &v23, v3, v21, ObjectType, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251166AAC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_251169C8C(0, &qword_269B21F90, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = sub_2511C9180();
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, a2);
  uint64_t v15 = sub_2511C91E0();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v10, a3, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
  sub_251165D5C((uint64_t)v10, (uint64_t)v13);
  *a4 = *a1;
  return swift_bridgeObjectRetain();
}

id sub_251166EAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FileCoordinatorInputSignal.Presenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FileCoordinatorInputSignal.deinit()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t FileCoordinatorInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_251166FFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *a1;
  unint64_t v6 = *(void **)(v4 + 32);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v4;
  _OWORD v7[3] = v5;
  v7[4] = a2;
  v9[4] = sub_251168D58;
  v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_251135784;
  v9[3] = &block_descriptor_26;
  uint64_t v8 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_addOperationWithBlock_, v8);
  _Block_release(v8);
}

void sub_251167100()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 56);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_251166674(v2);

  os_unfair_lock_unlock(v3);
}

unint64_t sub_251167168()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_251167184(uint64_t a1)
{
  sub_2511C9180();
  sub_251169CE0((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
  uint64_t v2 = sub_2511C9440();

  return sub_2511673A8(a1, v2);
}

unint64_t sub_251167220(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x253397570](*(void *)(v1 + 40), a1, 4);

  return sub_25116756C(a1, v3);
}

unint64_t sub_251167268(uint64_t a1)
{
  sub_2511C9D40();
  long long v2 = *(_OWORD *)(a1 + 32);
  v5[0] = *(_OWORD *)(a1 + 16);
  v5[1] = v2;
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  swift_bridgeObjectRelease();
  sub_251169A98((uint64_t)v5);
  sub_2511C94F0();
  sub_251169AD0((uint64_t)v5);
  uint64_t v3 = sub_2511C9D80();
  return sub_251167608((uint64_t *)a1, v3);
}

unint64_t sub_251167318(uint64_t a1)
{
  sub_2511C94B0();
  sub_2511C9D40();
  sub_2511C94F0();
  uint64_t v2 = sub_2511C9D80();
  swift_bridgeObjectRelease();
  return sub_251167704(a1, v2);
}

unint64_t sub_2511673A8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_2511C9180();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_251169CE0(qword_269B22110, 255, MEMORY[0x263F06EA8]);
      char v15 = sub_2511C9470();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_25116756C(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_251167608(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(void *)(v2 + 48);
    uint64_t v8 = *a1;
    uint64_t v9 = a1[1];
    uint64_t v10 = a1[2];
    uint64_t v11 = a1[3];
    do
    {
      uint64_t v12 = (void *)(v7 + 48 * v5);
      uint64_t v13 = v12[2];
      uint64_t v14 = v12[3];
      BOOL v15 = *v12 == v8 && v12[1] == v9;
      if (v15 || (sub_2511C9CA0() & 1) != 0)
      {
        BOOL v16 = v13 == v10 && v14 == v11;
        if (v16 || (sub_2511C9CA0() & 1) != 0) {
          break;
        }
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_251167704(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_2511C94B0();
    uint64_t v8 = v7;
    if (v6 == sub_2511C94B0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_2511C94B0();
          uint64_t v15 = v14;
          if (v13 == sub_2511C94B0() && v15 == v16) {
            break;
          }
          char v18 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_25116787C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251169B28();
  uint64_t v5 = a1 + *(int *)(v4 + 48);
  sub_251169C1C();
  uint64_t v7 = a2 + *(int *)(v6 + 48);
  uint64_t v8 = sub_2511C9180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  uint64_t v9 = sub_2511C91E0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);

  return v10(v7, v5, v9);
}

uint64_t sub_25116794C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = sub_2511C91E0();
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v64 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v63 = (char *)v59 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v75 = (char *)v59 - v15;
  uint64_t v74 = sub_2511C9180();
  uint64_t v65 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  char v83 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251169C8C(0, &qword_269B22108, (void (*)(uint64_t))sub_251169C1C);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v59 - v18;
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v76 = a1;
  uint64_t v77 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v78 = v21;
  uint64_t v79 = 0;
  uint64_t v80 = v24 & v22;
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  v59[1] = a1;
  swift_bridgeObjectRetain();
  v59[0] = a3;
  swift_retain();
  sub_2511A0980((uint64_t)v19);
  sub_251169C1C();
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v68 = v27 + 48;
  uint64_t v69 = v28;
  if (v28(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25112EB80();
    return swift_release();
  }
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v65 + 32);
  uint64_t v71 = (void (**)(char *, char *, uint64_t))(v70 + 32);
  unint64_t v72 = v30;
  uint64_t v62 = v70 + 16;
  uint64_t v61 = v70 + 8;
  uint64_t v73 = v65 + 32;
  uint64_t v60 = (void (**)(uint64_t, uint64_t))(v65 + 8);
  long long v59[3] = v70 + 40;
  unint64_t v66 = v19;
  uint64_t v67 = v26;
  while (1)
  {
    uint64_t v41 = &v19[*(int *)(v26 + 48)];
    uint64_t v42 = (uint64_t)v83;
    v72((uint64_t)v83, v19, v74);
    uint64_t v43 = *v71;
    uint64_t v44 = v10;
    (*v71)(v75, v41, v10);
    uint64_t v45 = a5;
    uint64_t v46 = *a5;
    unint64_t v48 = sub_251167184(v42);
    uint64_t v49 = *(void *)(v46 + 16);
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      break;
    }
    char v52 = v47;
    if (*(void *)(v46 + 24) >= v51)
    {
      if (a4)
      {
        long long v55 = (void *)*v45;
        if (v47) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251187470();
        long long v55 = (void *)*v45;
        if (v52) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_2511847E0(v51, a4 & 1);
      unint64_t v53 = sub_251167184((uint64_t)v83);
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_25;
      }
      unint64_t v48 = v53;
      long long v55 = (void *)*v45;
      if (v52)
      {
LABEL_7:
        uint64_t v31 = v45;
        uint64_t v32 = v55[7];
        uint64_t v33 = v70;
        unint64_t v34 = *(void *)(v70 + 72) * v48;
        unint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
        os_log_t v36 = v64;
        uint64_t v10 = v44;
        v35(v64, v32 + v34, v44);
        uint64_t v37 = v75;
        if (sub_2511C91C0()) {
          uint64_t v38 = v36;
        }
        else {
          uint64_t v38 = v37;
        }
        uint64_t v39 = v63;
        v35(v63, (unint64_t)v38, v10);
        int v40 = *(void (**)(char *, uint64_t))(v33 + 8);
        v40(v36, v10);
        v40(v37, v10);
        (*v60)((uint64_t)v83, v74);
        (*(void (**)(unint64_t, char *, uint64_t))(v33 + 40))(*(void *)(*v31 + 56) + v34, v39, v10);
        a5 = v31;
        goto LABEL_11;
      }
    }
    v55[(v48 >> 6) + 8] |= 1 << v48;
    v72(v55[6] + *(void *)(v65 + 72) * v48, v83, v74);
    uint64_t v10 = v44;
    v43((char *)(v55[7] + *(void *)(v70 + 72) * v48), v75, v44);
    uint64_t v56 = v55[2];
    BOOL v57 = __OFADD__(v56, 1);
    uint64_t v58 = v56 + 1;
    if (v57) {
      goto LABEL_24;
    }
    v55[2] = v58;
    a5 = v45;
LABEL_11:
    uint64_t v19 = v66;
    sub_2511A0980((uint64_t)v66);
    a4 = 1;
    uint64_t v26 = v67;
    if (v69(v19, 1, v67) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_251167F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_251167184(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_251187470();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_2511C9180();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_2511C91E0();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_2511680F4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_2511C91E0();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

unint64_t sub_2511680F4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9180();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_2511C9910();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_251169CE0((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
        uint64_t v19 = sub_2511C9440();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(sub_2511C91E0() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    os_log_type_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    os_log_type_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *os_log_type_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251168440(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_2511C9910();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (_DWORD *)(v9 + 4 * v6);
        unint64_t result = MEMORY[0x253397570](*(void *)(a2 + 40), *v10, 4);
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (_DWORD *)(v9 + 4 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2511685DC(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9180();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251169C8C(0, &qword_269B21F98, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *((void *)a1 + 8);
  long long v12 = a1[1];
  long long v37 = *a1;
  long long v38 = v12;
  long long v13 = a1[2];
  long long v14 = a1[3];
  os_log_type_t v29 = a1;
  long long v39 = v13;
  long long v40 = v14;
  uint64_t v41 = v11;
  uint64_t v15 = sub_2511C9D80();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v31 = a2 + 56;
  uint64_t v32 = v15;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v30 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v34 = v5 + 16;
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v33 = v5 + 48;
  uint64_t v36 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v22 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v36 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_251169CE0((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
    uint64_t v28 = sub_2511C9440();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v22++, 1)) {
      goto LABEL_21;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    if (!v26) {
      break;
    }
LABEL_14:
    unint64_t v19 = (v26 - 1) & v26;
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v30)
  {
LABEL_18:
    (*v35)(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_2511C9D50();
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_251168954(uint64_t a1)
{
  sub_251169C8C(0, &qword_269B21F90, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2511689CC()
{
  unint64_t result = qword_269B21FA8;
  if (!qword_269B21FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21FA8);
  }
  return result;
}

void sub_251168A20()
{
  if (!qword_269B21FB0)
  {
    sub_2511C9180();
    sub_2511C91E0();
    sub_251169CE0((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
    unint64_t v0 = sub_2511C9430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21FB0);
    }
  }
}

unint64_t sub_251168AD0()
{
  unint64_t result = qword_269B21FC0;
  if (!qword_269B21FC0)
  {
    sub_251168A20();
    sub_251169CE0(&qword_269B21FC8, 255, MEMORY[0x263F06EA8]);
    sub_251169CE0(&qword_269B21FD0, 255, MEMORY[0x263F07490]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21FC0);
  }
  return result;
}

void sub_251168BB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2511689CC();
    unint64_t v7 = a3(a1, &type metadata for FileCoordinatorInputSignal.Anchor.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_251168C14()
{
  unint64_t result = qword_269B21FE0;
  if (!qword_269B21FE0)
  {
    sub_251168A20();
    sub_251169CE0(&qword_269B21FE8, 255, MEMORY[0x263F06EA8]);
    sub_251169CE0(&qword_269B21FF0, 255, MEMORY[0x263F07490]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21FE0);
  }
  return result;
}

void sub_251168CF4()
{
  if (!qword_269B21FF8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21FF8);
    }
  }
}

unint64_t sub_251168D5C(uint64_t a1)
{
  unint64_t result = sub_251168D84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251168D84()
{
  unint64_t result = qword_269B22000;
  if (!qword_269B22000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22000);
  }
  return result;
}

unint64_t sub_251168DDC()
{
  unint64_t result = qword_269B22008;
  if (!qword_269B22008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22008);
  }
  return result;
}

unint64_t sub_251168E34()
{
  unint64_t result = qword_269B22010;
  if (!qword_269B22010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22010);
  }
  return result;
}

unint64_t sub_251168E88(void *a1)
{
  a1[1] = sub_251168EC0();
  a1[2] = sub_251168F14();
  unint64_t result = sub_251168F68();
  a1[3] = result;
  return result;
}

unint64_t sub_251168EC0()
{
  unint64_t result = qword_269B22020;
  if (!qword_269B22020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22020);
  }
  return result;
}

unint64_t sub_251168F14()
{
  unint64_t result = qword_269B22028;
  if (!qword_269B22028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22028);
  }
  return result;
}

unint64_t sub_251168F68()
{
  unint64_t result = qword_269B22030;
  if (!qword_269B22030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22030);
  }
  return result;
}

unint64_t sub_251168FC0()
{
  unint64_t result = qword_269B22038;
  if (!qword_269B22038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22038);
  }
  return result;
}

uint64_t sub_251169014(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_251169CE0(&qword_269B22048, a2, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FileCoordinatorInputSignal()
{
  return self;
}

uint64_t method lookup function for FileCoordinatorInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FileCoordinatorInputSignal);
}

uint64_t dispatch thunk of FileCoordinatorInputSignal.__allocating_init(context:observer:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for FileCoordinatorInputSignal.Configuration()
{
  return &type metadata for FileCoordinatorInputSignal.Configuration;
}

ValueMetadata *type metadata accessor for FileCoordinatorInputSignal.Anchor()
{
  return &type metadata for FileCoordinatorInputSignal.Anchor;
}

uint64_t sub_2511690DC()
{
  return type metadata accessor for FileCoordinatorInputSignal.Presenter();
}

uint64_t type metadata accessor for FileCoordinatorInputSignal.Presenter()
{
  uint64_t result = qword_269B220B0;
  if (!qword_269B220B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251169130()
{
  uint64_t result = sub_2511C9180();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_2511691DC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EnvironmentalStateDescription(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for EnvironmentalStateDescription(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnvironmentalStateDescription(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentalStateDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileCoordinatorInputSignal.State()
{
  return &type metadata for FileCoordinatorInputSignal.State;
}

unsigned char *storeEnumTagSinglePayload for FileCoordinatorInputSignal.Anchor.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2511693E4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileCoordinatorInputSignal.Anchor.CodingKeys()
{
  return &type metadata for FileCoordinatorInputSignal.Anchor.CodingKeys;
}

unint64_t sub_251169420()
{
  unint64_t result = qword_269B220C0;
  if (!qword_269B220C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B220C0);
  }
  return result;
}

unint64_t sub_251169478()
{
  unint64_t result = qword_269B220C8;
  if (!qword_269B220C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B220C8);
  }
  return result;
}

unint64_t sub_2511694D0()
{
  unint64_t result = qword_269B220D0;
  if (!qword_269B220D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B220D0);
  }
  return result;
}

uint64_t sub_251169524(uint64_t a1, uint64_t a2)
{
  sub_2511C9D80();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_2511C9D50();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    sub_2511C94F0();
    uint64_t v11 = sub_2511C9D80();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2511696BC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2511C9D80();
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v6++, 1)) {
      goto LABEL_19;
    }
    if (v6 >= v11) {
      return sub_2511C9D50();
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    uint64_t result = MEMORY[0x253397570](v4, *(unsigned int *)(*(void *)(a2 + 48) + 4 * v13), 4);
    v5 ^= result;
  }
  int64_t v16 = v6 + 1;
  if (v6 + 1 >= v11) {
    return sub_2511C9D50();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    ++v6;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_2511C9D50();
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_25116980C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000002511D1010)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_251169894(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2511698F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_251169944@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_251166AAC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_251169960()
{
  unint64_t result = qword_26B217FC0;
  if (!qword_26B217FC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217FC0);
  }
  return result;
}

uint64_t sub_2511699A0(uint64_t a1)
{
  sub_2511699FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2511699FC()
{
  if (!qword_26B2189B0)
  {
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2189B0);
    }
  }
}

uint64_t sub_251169A5C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_2511650BC((uint64_t)&v3, v1);
}

uint64_t sub_251169A98(uint64_t a1)
{
  return a1;
}

uint64_t sub_251169AD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_251169B08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251165280(a1, v2[2], v2[3], v2[4], a2);
}

void sub_251169B28()
{
  if (!qword_269B220F0)
  {
    sub_2511C9180();
    sub_2511C91E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B220F0);
    }
  }
}

uint64_t sub_251169B9C(uint64_t a1, uint64_t a2)
{
  sub_251169C8C(0, &qword_269B220E8, (void (*)(uint64_t))sub_251169B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_251169C1C()
{
  if (!qword_269B22100)
  {
    sub_2511C9180();
    sub_2511C91E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B22100);
    }
  }
}

void sub_251169C8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9890();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_251169CE0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t WorkBarrier.__allocating_init(completion:priorityThresholdOverride:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t result = swift_allocObject();
  char v7 = *a3;
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a2;
  *(unsigned char *)(result + 40) = v7;
  return result;
}

uint64_t WorkBarrier.init(completion:priorityThresholdOverride:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v4 = *a3;
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  *(unsigned char *)(v3 + 40) = v4;
  return v3;
}

uint64_t WorkBarrier.deinit()
{
  swift_release();
  return v0;
}

uint64_t method lookup function for WorkBarrier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WorkBarrier);
}

uint64_t dispatch thunk of WorkBarrier.__allocating_init(completion:priorityThresholdOverride:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t SingleContextProvider.__allocating_init(context:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t SingleContextProvider.init(context:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t SingleContextProvider.start(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t ObjectType = swift_getObjectType();
  sub_251169EFC();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2511CB450;
  uint64_t v7 = *(void *)(v4 + 88);
  *(void *)(v6 + 32) = v2[2];
  *(void *)(v6 + 40) = v7;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 8);
  swift_unknownObjectRetain();
  v8(v6, ObjectType, a2);

  return swift_bridgeObjectRelease();
}

void sub_251169EFC()
{
  if (!qword_26B216820)
  {
    sub_251147040();
    unint64_t v0 = sub_2511C9C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B216820);
    }
  }
}

uint64_t SingleContextProvider.context(for:)()
{
  uint64_t result = sub_25116A004();
  if (!v0) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t SingleContextProvider.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SingleContextProvider.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_251169FD8()
{
  uint64_t result = sub_25116A004();
  if (!v0) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_25116A004()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_25116A00C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_25116A018()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SingleContextProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SingleContextProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SingleContextProvider);
}

uint64_t dispatch thunk of SingleContextProvider.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ExecutorProvider.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ExecutorProvider.executors(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

__n128 SecureCodingOptionalValueAnchor.init(identifier:value:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3 = a1->n128_u64[1];
  a3->n128_u64[0] = a1->n128_u64[0];
  a3->n128_u64[1] = v3;
  __n128 result = a1[1];
  a3[1] = result;
  a3[2].n128_u64[0] = a2;
  return result;
}

uint64_t SecureCodingOptionalValueAnchor.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *SecureCodingOptionalValueAnchor.value.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t SecureCodingOptionalValueAnchor.hasDifference(from:for:)(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  if (v2)
  {
    unint64_t v3 = a1[4];
    unint64_t v4 = *(void *)(v1 + 32);
    char v5 = (v4 | v3) == 0;
    if (v4) {
      BOOL v6 = v3 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6)
    {
      uint64_t v7 = *a1;
      uint64_t v8 = a1[2];
      uint64_t v9 = a1[3];
      id v10 = (id)v4;
      sub_25116A21C(v7, v2, v8, v9, (void *)v3);
      id v11 = (id)v3;
      char v5 = sub_2511C9880();
      sub_25116A268(v7, v2, v8, v9, (void *)v3);
    }
    char v12 = v5 ^ 1;
  }
  else
  {
    char v12 = 1;
  }
  return v12 & 1;
}

uint64_t sub_25116A21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    id v5 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_25116A268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t SecureCodingOptionalValueAnchor.merged(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  id v5 = (void *)v1[4];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  id v6 = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_25116A31C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25116A370(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void SecureCodingOptionalValueAnchor.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v24 = a2;
  type metadata accessor for SecureCodingOptionalValueAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_2511C9BA0();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v21 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511C9D90();
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v7 = v23;
  uint64_t v8 = v24;
  sub_25116A778();
  char v29 = 1;
  sub_25116A7D0();
  sub_2511C9B90();
  int64_t v22 = v6;
  unint64_t v9 = v26;
  if (v26 >> 60 != 15)
  {
    uint64_t v13 = v25;
    sub_25115CD38();
    uint64_t v14 = v13;
    id v10 = (void *)sub_2511C9780();
    if (v10)
    {
      sub_25116A840(v14, v9);
      goto LABEL_6;
    }
    LOBYTE(v25) = 1;
    sub_2511C99B0();
    swift_allocError();
    swift_getWitnessTable();
    uint64_t v19 = v14;
    uint64_t v20 = v22;
    sub_2511C99A0();
    swift_willThrow();
    sub_25116A840(v19, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v4);
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }
  id v10 = 0;
LABEL_6:
  uint64_t v11 = (uint64_t)a1;
  char v12 = v22;
  char v29 = 0;
  sub_251150F3C();
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v4);
  unint64_t v15 = v26;
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  *uint64_t v8 = v25;
  v8[1] = v15;
  v8[2] = v16;
  uint64_t v8[3] = v17;
  v8[4] = (uint64_t)v10;
  id v18 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(v11);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SecureCodingOptionalValueAnchor.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void sub_25116A778()
{
  if (!qword_26B2178B8)
  {
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2178B8);
    }
  }
}

unint64_t sub_25116A7D0()
{
  unint64_t result = qword_26B2178C0;
  if (!qword_26B2178C0)
  {
    sub_25116A778();
    sub_251150E90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2178C0);
  }
  return result;
}

uint64_t sub_25116A840(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_251150EE4(a1, a2);
  }
  return a1;
}

uint64_t SecureCodingOptionalValueAnchor.encode(to:)(void *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  type metadata accessor for SecureCodingOptionalValueAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_2511C9C20();
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - v4;
  id v6 = *v1;
  uint64_t v23 = v1[1];
  uint64_t v24 = v6;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[4];
  uint64_t v21 = v1[3];
  uint64_t v22 = (uint64_t)v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511C9DA0();
  if (v8)
  {
    uint64_t v9 = v3;
    uint64_t v10 = v25;
    uint64_t v11 = self;
    id v28 = 0;
    id v12 = v8;
    id v13 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v12, 1, &v28);
    id v14 = v28;
    if (v13)
    {
      unint64_t v15 = (void *)sub_2511C91B0();
      unint64_t v17 = v16;

      id v28 = v15;
      unint64_t v29 = v17;
      char v27 = 1;
      sub_251151270();
      sub_2511C9C00();
      if (v10)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v9);

        return sub_251150EE4((uint64_t)v15, v17);
      }

      sub_251150EE4((uint64_t)v15, v17);
      goto LABEL_9;
    }
    uint64_t v20 = v14;
    sub_2511C9140();

    swift_willThrow();
  }
  else
  {
    LOBYTE(v28) = 1;
    uint64_t v19 = v25;
    sub_2511C9C10();
    uint64_t v9 = v3;
    if (!v19)
    {
LABEL_9:
      id v28 = v24;
      unint64_t v29 = (unint64_t)v23;
      uint64_t v30 = v22;
      uint64_t v31 = v21;
      char v27 = 0;
      sub_2511512C4();
      sub_2511C9C00();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v9);
}

uint64_t sub_25116AB70(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

void sub_25116ABF0(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_25116AC10(void *a1)
{
  return SecureCodingOptionalValueAnchor.encode(to:)(a1);
}

void *sub_25116AC28(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

uint64_t type metadata accessor for SecureCodingOptionalValueAnchor()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_25116ACC4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25116AD90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25116ADB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25116ADD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25116ADF0()
{
  return swift_getWitnessTable();
}

uint64_t WorkCriteria.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t WorkCriteria.anchor.getter()
{
  return swift_retain();
}

uint64_t WorkCriteria.inputSignalConfigurations.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 WorkCriteria.__allocating_init(identifier:anchor:inputSignalConfigurations:)(__n128 *a1, unint64_t a2, unint64_t a3)
{
  unsigned int v6 = (__n128 *)swift_allocObject();
  unint64_t v7 = a1->n128_u64[1];
  v6[1].n128_u64[0] = a1->n128_u64[0];
  v6[1].n128_u64[1] = v7;
  __n128 result = a1[1];
  uint64_t v6[2] = result;
  v6[3].n128_u64[0] = a2;
  v6[3].n128_u64[1] = a3;
  return result;
}

uint64_t WorkCriteria.init(identifier:anchor:inputSignalConfigurations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(v3 + 16) = *(void *)a1;
  *(void *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a1 + 16);
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = a3;
  return v3;
}

void *WorkCriteria.__allocating_init(identifier:anchor:inputSignalConfigurations:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = a3;
  result[7] = a4;
  return result;
}

HealthOrchestration::WorkCriteria::Identifier __swiftcall WorkCriteria.Identifier.init(_:logDescription:)(Swift::String _, Swift::String_optional logDescription)
{
  v2->value = _;
  v2[1] = logDescription;
  result.logDescription = logDescription;
  result.value = _;
  return result;
}

uint64_t WorkCriteria.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WorkCriteria.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t WorkCriteria.Identifier.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkCriteria.Identifier.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WorkCriteria.Identifier.value.modify())()
{
  return nullsub_1;
}

uint64_t WorkCriteria.Identifier.logDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkCriteria.Identifier.logDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*WorkCriteria.Identifier.logDescription.modify())()
{
  return nullsub_1;
}

void static WorkCriteria.Identifier.singleWorkCriteriaIdentifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000002511D10C0;
  a1[2] = 0;
  a1[3] = 0;
}

HealthOrchestration::WorkCriteria::Identifier __swiftcall WorkCriteria.Identifier.init(stringLiteral:)(Swift::String stringLiteral)
{
  *uint64_t v1 = stringLiteral;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.value = stringLiteral;
  return result;
}

uint64_t static WorkCriteria.Identifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t WorkCriteria.Identifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2511C94F0();

  return swift_bridgeObjectRelease();
}

uint64_t WorkCriteria.Identifier.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t sub_25116B1F8()
{
  return sub_2511C9D80();
}

uint64_t sub_25116B254()
{
  swift_bridgeObjectRetain();
  sub_2511C94F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25116B2AC()
{
  return sub_2511C9D80();
}

uint64_t WorkCriteria.Identifier.description.getter()
{
  if (v0[3])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    uint64_t v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkCriteria.description.getter()
{
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_2511C9960();
  swift_bridgeObjectRelease();
  uint64_t v20 = 0x6972436B726F573CLL;
  unint64_t v21 = 0xEF203A6169726574;
  if (!*(void *)(v0 + 40)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  uint64_t v1 = *(void *)(v0 + 56);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251141A94(0, v2, 0);
    uint64_t v4 = v1 + 32;
    do
    {
      sub_25112FD4C(v4, (uint64_t)v16);
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      uint64_t v5 = v17;
      uint64_t v6 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 16))(v13, v5, v6);
      if (!v13[3]) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v14;
      unint64_t v8 = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      uint64_t v3 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251141A94(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v19;
      }
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_251141A94(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v19;
      }
      *(void *)(v3 + 16) = v10 + 1;
      uint64_t v11 = v3 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v16[0] = v3;
  sub_2511308B4(0, (unint64_t *)&qword_26B217F10, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_251141C40();
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  return v20;
}

uint64_t sub_25116B644()
{
  return WorkCriteria.description.getter();
}

unint64_t sub_25116B66C()
{
  unint64_t result = qword_269B221A0;
  if (!qword_269B221A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B221A0);
  }
  return result;
}

unint64_t sub_25116B6C4()
{
  unint64_t result = qword_269B221A8;
  if (!qword_269B221A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B221A8);
  }
  return result;
}

unint64_t sub_25116B71C()
{
  unint64_t result = qword_269B221B0;
  if (!qword_269B221B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B221B0);
  }
  return result;
}

unint64_t sub_25116B774()
{
  unint64_t result = qword_26B218458;
  if (!qword_26B218458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218458);
  }
  return result;
}

uint64_t type metadata accessor for WorkCriteria()
{
  return self;
}

uint64_t method lookup function for WorkCriteria(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WorkCriteria);
}

uint64_t dispatch thunk of WorkCriteria.__allocating_init(identifier:anchor:inputSignalConfigurations:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for WorkCriteria.Identifier()
{
  return &type metadata for WorkCriteria.Identifier;
}

uint64_t sub_25116B828(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116B938(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25116B848(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116BAD8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25116B868(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116C16C(a1, a2, a3, (void *)*v3, &qword_26B218128, (unint64_t *)&qword_26B216860);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25116B8A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116BDFC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25116B8C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116BFB0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25116B8E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116C16C(a1, a2, a3, (void *)*v3, &qword_26B2180F8, (unint64_t *)&qword_26B2178E8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25116B918(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25116C684(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25116B938(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25116C82C(0, (unint64_t *)&qword_26B2168A0, (void (*)(uint64_t))sub_25115A3E0);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_25115A3E0();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116BAD8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218100, (uint64_t)&type metadata for Orchestrator.AnyConfiguration, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116BC7C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218178, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116BDFC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25115D7DC(0, (unint64_t *)&qword_26B216820, (unint64_t *)&qword_26B216848);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116BFB0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25116C82C(0, &qword_26B218158, (void (*)(uint64_t))sub_25116C880);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_25116C880();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116C150(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25116C16C(a1, a2, a3, a4, &qword_26B2180F8, (unint64_t *)&qword_26B2178E8);
}

uint64_t sub_25116C16C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_25115D7DC(0, a5, a6);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    id v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_251131944(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116C334(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_269B221B8, (uint64_t)&type metadata for ScopedExecutorIdentifier, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116C4DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218108, (uint64_t)&type metadata for Orchestrator.InputSignalRecord, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25116C684(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2511308B4(0, &qword_26B218120, (uint64_t)&type metadata for InputSignalAnchorSet.EncodedAnchor, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

void sub_25116C82C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9C60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25116C880()
{
  if (!qword_26B217E80)
  {
    sub_251131944(255, &qword_26B217E50);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B217E80);
    }
  }
}

uint64_t ScheduledWorkPlan.context.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ScheduledWorkPlan.context.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectRelease();
  *int64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ScheduledWorkPlan.context.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledWorkPlan.executorIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 ScheduledWorkPlan.executorIdentifier.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *(_OWORD *)(v1 + 16) = v6;
  *(__n128 *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  return result;
}

uint64_t (*ScheduledWorkPlan.executorIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledWorkPlan.plan.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25112FD4C(v1 + 64, a1);
}

uint64_t ScheduledWorkPlan.plan.setter(long long *a1)
{
  uint64_t v3 = v1 + 64;
  __swift_destroy_boxed_opaque_existential_1(v3);

  return sub_25112F14C(a1, v3);
}

uint64_t (*ScheduledWorkPlan.plan.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledWorkPlan.anchor.getter()
{
  return swift_retain();
}

uint64_t ScheduledWorkPlan.anchor.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*ScheduledWorkPlan.anchor.modify())()
{
  return nullsub_1;
}

double ScheduledWorkPlan.scheduled.getter()
{
  return *(double *)(v0 + 112);
}

void ScheduledWorkPlan.scheduled.setter(double a1)
{
  *(double *)(v1 + 112) = a1;
}

uint64_t (*ScheduledWorkPlan.scheduled.modify())()
{
  return nullsub_1;
}

uint64_t sub_25116CB60(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 120) = sub_25116D53C;
  *(void *)(a2 + 128) = v5;
  return result;
}

uint64_t ScheduledWorkPlan.onFinish.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_retain();
  return v1;
}

uint64_t ScheduledWorkPlan.onFinish.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*ScheduledWorkPlan.onFinish.modify())()
{
  return nullsub_1;
}

BOOL static ScheduledWorkPlan.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 112) < *(double *)(a2 + 112);
}

uint64_t ScheduledWorkPlan.init(context:executorIdentifier:plan:anchor:scheduled:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  long long v14 = *a3;
  uint64_t v15 = *((void *)a3 + 2);
  uint64_t v16 = *((void *)a3 + 3);
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(_OWORD *)(a8 + 16) = v14;
  *(void *)(a8 + 32) = v15;
  *(void *)(a8 + 40) = v16;
  *(_OWORD *)(a8 + 48) = a3[2];
  uint64_t result = sub_25112F14C(a4, a8 + 64);
  *(void *)(a8 + 104) = a5;
  *(double *)(a8 + 112) = a9;
  *(void *)(a8 + 120) = a6;
  *(void *)(a8 + 128) = a7;
  return result;
}

BOOL sub_25116CCE4(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 112) < *(double *)(a2 + 112);
}

BOOL sub_25116CCF8(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 112) >= *(double *)(a1 + 112);
}

BOOL sub_25116CD0C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 112) >= *(double *)(a2 + 112);
}

BOOL sub_25116CD20(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 112) < *(double *)(a1 + 112);
}

uint64_t sub_25116CD38()
{
  return ScheduledWorkPlan.Result.description.getter(*v0);
}

unint64_t sub_25116CD44()
{
  unint64_t result = qword_269B221C0;
  if (!qword_269B221C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B221C0);
  }
  return result;
}

uint64_t sub_25116CD98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_25116D544;
  a2[1] = v5;

  return swift_retain();
}

void *assignWithCopy for ScheduledWorkPlan(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  uint64_t v5 = a2[16];
  a1[15] = a2[15];
  a1[16] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        size_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ScheduledWorkPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledWorkPlan(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledWorkPlan(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledWorkPlan()
{
  return &type metadata for ScheduledWorkPlan;
}

void *initializeBufferWithCopyOfBuffer for ScheduledWorkPlan.Result(void *a1, void **a2)
{
  long long v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for ScheduledWorkPlan.Result(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for ScheduledWorkPlan.Result(void **a1, void **a2)
{
  long long v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    uint64_t v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **assignWithTake for ScheduledWorkPlan.Result(void **a1, unint64_t *a2)
{
  long long v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledWorkPlan.Result(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScheduledWorkPlan.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_25116D4BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25116D4D4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledWorkPlan.Result()
{
  return &type metadata for ScheduledWorkPlan.Result;
}

uint64_t sub_25116D504()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25116D53C(uint64_t a1, uint64_t a2)
{
  return sub_2511AE1F0(a1, a2, *(uint64_t (**)(uint64_t, uint64_t *))(v2 + 16));
}

uint64_t sub_25116D544(uint64_t a1, void *a2)
{
  return sub_2511AE1C4(a1, a2, *(uint64_t (**)(uint64_t, void))(v2 + 16));
}

uint64_t AsyncExecutor.run(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v13 = (char *)&v23 - v12;
  sub_25116D7BC();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2511C9670();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, AssociatedTypeWitness);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  *((void *)v19 + 4) = a4;
  *((void *)v19 + 5) = a5;
  *((void *)v19 + 6) = v5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v18], v13, AssociatedTypeWitness);
  uint64_t v20 = &v19[(v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v21 = v24;
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v21;
  swift_unknownObjectRetain();
  swift_retain();
  sub_25116DF94((uint64_t)v16, (uint64_t)&unk_269B221D0, (uint64_t)v19);
  return swift_release();
}

void sub_25116D7BC()
{
  if (!qword_26B217F60)
  {
    sub_2511C9670();
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217F60);
    }
  }
}

uint64_t sub_25116D814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a6;
  uint64_t v8[3] = a7;
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v15 + 16) + **(int **)(v15 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  v8[4] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_25116D928;
  return v13(a5, a8);
}

uint64_t sub_25116D928()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25116DAA4;
  }
  else {
    uint64_t v2 = sub_25116DA3C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25116DA3C()
{
  (*(void (**)(void))(v0 + 16))(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25116DAA4()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void (*)(void))v0[2];
  uint64_t v3 = (void *)sub_2511C9130();
  v2();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25116DB2C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25116DC84()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v5;
  uint64_t v8 = swift_task_alloc();
  long long v9 = *(_OWORD *)(v0 + v6);
  *(void *)(v1 + 16) = v8;
  *(void *)uint64_t v8 = v1;
  *(void *)(v8 + 8) = sub_25116DEA0;
  *(_OWORD *)(v8 + 16) = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 32) = v10;
  void *v10 = v8;
  v10[1] = sub_25116D928;
  return v12(v7, v2, v3);
}

uint64_t sub_25116DEA0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25116DF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2511C9670();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2511C9660();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25116E23C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2511C9630();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t dispatch thunk of AsyncExecutor.run(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_25116DEA0;
  return v9(a1, a2, a3);
}

uint64_t sub_25116E23C(uint64_t a1)
{
  sub_25116D7BC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25116E298(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25116E374;
  return v6(a1);
}

uint64_t sub_25116E374()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25116E46C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25116E4A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_25116E55C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B221E0 + dword_269B221E0);
  return v6(a1, v4);
}

uint64_t static TimeoutDispatchTarget.Errors.== infix(_:_:)()
{
  return 1;
}

uint64_t TimeoutDispatchTarget.Errors.hash(into:)()
{
  return sub_2511C9D50();
}

uint64_t TimeoutDispatchTarget.Errors.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t TimeoutDispatchTarget.__allocating_init(timeout:target:)(long long *a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  *(double *)(v4 + 16) = a2;
  sub_25112F14C(a1, v4 + 24);
  return v4;
}

uint64_t TimeoutDispatchTarget.init(timeout:target:)(long long *a1, double a2)
{
  *(double *)(v2 + 16) = a2;
  sub_25112F14C(a1, v2 + 24);
  return v2;
}

void sub_25116E64C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t v33 = a6;
  uint64_t v11 = sub_2511C92A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1(v13))
  {
    uint64_t v30 = v11;
    uint64_t v31 = v12;
    uint64_t v32 = a7;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(a4 + 40))(ObjectType, a4);
    sub_25112FD4C(v33, (uint64_t)v37);
    sub_25113822C(a5);
    sub_25113822C(a5);
    uint64_t v17 = sub_2511C9280();
    int v18 = sub_2511C9750();
    uint64_t v19 = v15;
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      LODWORD(v33) = v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v36 = v29;
      *(_DWORD *)uint64_t v20 = 136315394;
      long long v21 = *(_OWORD *)(a5 + 32);
      uint64_t v22 = a5;
      long long v38 = *(_OWORD *)(a5 + 16);
      long long v39 = v21;
      uint64_t v34 = 60;
      unint64_t v35 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      uint64_t v23 = v30;
      if (!*((void *)&v39 + 1)) {
        swift_bridgeObjectRetain();
      }
      sub_251169A98((uint64_t)&v38);
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_251169AD0((uint64_t)&v38);
      sub_2511C9520();
      uint64_t v34 = sub_251140E4C(v34, v35, &v36);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      sub_251138278(v22);
      sub_251138278(v22);
      *(_WORD *)(v20 + 12) = 2080;
      sub_25112FD4C((uint64_t)v37, (uint64_t)&v34);
      sub_25116ED74();
      uint64_t v24 = sub_2511C94C0();
      uint64_t v34 = sub_251140E4C(v24, v25, &v36);
      sub_2511C98A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      _os_log_impl(&dword_25112A000, v17, (os_log_type_t)v33, "%s: %s: Timed out.", (uint8_t *)v20, 0x16u);
      uint64_t v26 = v29;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v26, -1, -1);
      MEMORY[0x253397D40](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v23);
    }
    else
    {
      sub_251138278(a5);
      sub_251138278(a5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v30);
    }
    sub_25116EE50();
    char v27 = (void *)swift_allocError();
    id v28 = (void *)sub_2511C9130();
    v32();
  }
}

uint64_t TimeoutDispatchTarget.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t TimeoutDispatchTarget.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

unint64_t sub_25116EA88()
{
  unint64_t result = qword_269B221F8;
  if (!qword_269B221F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B221F8);
  }
  return result;
}

uint64_t type metadata accessor for TimeoutDispatchTarget()
{
  return self;
}

uint64_t method lookup function for TimeoutDispatchTarget(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TimeoutDispatchTarget);
}

uint64_t dispatch thunk of TimeoutDispatchTarget.__allocating_init(timeout:target:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for TimeoutDispatchTarget.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25116EBC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeoutDispatchTarget.Errors()
{
  return &type metadata for TimeoutDispatchTarget.Errors;
}

uint64_t initializeBufferWithCopyOfBuffer for TimeoutDispatchTarget.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TimeoutDispatchTarget.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for TimeoutDispatchTarget.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeoutDispatchTarget.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeoutDispatchTarget.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeoutDispatchTarget.State()
{
  return &type metadata for TimeoutDispatchTarget.State;
}

unint64_t sub_25116ED74()
{
  unint64_t result = qword_26B217E58;
  if (!qword_26B217E58)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217E58);
  }
  return result;
}

void sub_25116EDCC()
{
  if (!qword_26B217FD0)
  {
    sub_251131578(255, (unint64_t *)&qword_26B217FC0);
    unint64_t v0 = sub_2511C9890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217FD0);
    }
  }
}

void sub_25116EE38()
{
  sub_25116E64C(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v0 + 48, v0 + 96, *(void (**)(void))(v0 + 136));
}

unint64_t sub_25116EE50()
{
  unint64_t result = qword_26B2189C0;
  if (!qword_26B2189C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2189C0);
  }
  return result;
}

uint64_t CalendarDayInputSignal.__allocating_init(observer:dateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_25116F0CC(a3, (uint64_t)&v8);
  if (v9)
  {
    sub_25116F1B8(a3);
    sub_25112F14C(&v8, (uint64_t)&v10);
  }
  else
  {
    swift_unknownObjectRetain();
    sub_25116F1B8((uint64_t)&v8);
    uint64_t v11 = &type metadata for CalendarDayInputSignal.DateProvider;
    uint64_t v12 = &off_270206230;
    swift_unknownObjectRelease();
    sub_25116F1B8(a3);
  }
  sub_25112F14C(&v10, v6 + 32);
  return v6;
}

void static InputSignalIdentifier.calendarDay.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CCB10;
  a1[2] = 0;
  a1[3] = 0;
}

void static InputSignalSet.LookupKey.calendarDay.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CCB10;
  a1[2] = 0;
  a1[3] = 0;
}

void CalendarDayInputSignal.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CCB10;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t CalendarDayInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

void static CalendarDayInputSignal.identityConfiguration.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CCB10;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t CalendarDayInputSignal.init(observer:dateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  sub_25116F0CC(a3, (uint64_t)&v6);
  if (v7)
  {
    sub_25116F1B8(a3);
    sub_25112F14C(&v6, (uint64_t)&v8);
  }
  else
  {
    swift_unknownObjectRetain();
    sub_25116F1B8((uint64_t)&v6);
    uint64_t v9 = &type metadata for CalendarDayInputSignal.DateProvider;
    long long v10 = &off_270206230;
    swift_unknownObjectRelease();
    sub_25116F1B8(a3);
  }
  sub_25112F14C(&v8, v3 + 32);
  return v3;
}

uint64_t sub_25116F0CC(uint64_t a1, uint64_t a2)
{
  sub_251170094(0, &qword_26B217E40, (uint64_t (*)(uint64_t))sub_25116F160, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25116F160()
{
  unint64_t result = qword_26B217E38;
  if (!qword_26B217E38)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217E38);
  }
  return result;
}

uint64_t sub_25116F1B8(uint64_t a1)
{
  sub_251170094(0, &qword_26B217E40, (uint64_t (*)(uint64_t))sub_25116F160, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25116F244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v13[0] = a2;
  v13[1] = a1;
  uint64_t v2 = sub_2511C9270();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2511C9250();
  sub_251170094(0, &qword_26B218978, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v6 = sub_2511C9260();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2511CB9C0;
  uint64_t v11 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v11(v10 + v9, *MEMORY[0x263F07878], v6);
  v11(v10 + v9 + v8, *MEMORY[0x263F078A0], v6);
  v11(v10 + v9 + 2 * v8, *MEMORY[0x263F078A8], v6);
  v11(v10 + v9 + 3 * v8, *MEMORY[0x263F07870], v6);
  v11(v10 + v9 + 4 * v8, *MEMORY[0x263F078F0], v6);
  v11(v10 + v9 + 5 * v8, *MEMORY[0x263F078F8], v6);
  sub_25118A948(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2511C9240();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25116F508()
{
  uint64_t v0 = sub_2511C91E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2511C9120();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25116FDD4();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = (void *)result;
    uint64_t v29 = *(void *)(result + 16);
    uint64_t v27 = *(void *)(result + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v25 = v9;
    uint64_t v26 = v4;
    uint64_t v14 = v0;
    uint64_t v15 = v5;
    uint64_t v16 = v1;
    uint64_t v17 = v13[7];
    uint64_t v18 = v13[8];
    __swift_project_boxed_opaque_existential_1(v13 + 4, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    sub_25116F244((uint64_t)v3, (uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v14);
    *(void *)uint64_t v11 = 0xD000000000000016;
    *((void *)v11 + 1) = 0x80000002511CCB10;
    *((void *)v11 + 2) = 0;
    *((void *)v11 + 3) = 0;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v11[*(int *)(v25 + 52)], v7, v26);
    uint64_t v30 = v13;
    uint64_t v19 = v27;
    uint64_t v20 = *(void (**)(char *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8);
    uint64_t v21 = type metadata accessor for CalendarDayInputSignal();
    uint64_t v23 = sub_25116FFF0((unint64_t *)&unk_26B217C50, v22, (void (*)(uint64_t))type metadata accessor for CalendarDayInputSignal);
    v20(v11, &v30, v21, v23, ObjectType, v19);
    sub_251170038((uint64_t)v11);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall CalendarDayInputSignal.stopObservation()()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_name_object_, v0, *MEMORY[0x263EFF3C8], 0);
}

uint64_t CalendarDayInputSignal.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t CalendarDayInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

void sub_25116F8D4(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CCB10;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t sub_25116F8F8()
{
  return _s19HealthOrchestration22CalendarDayInputSignalC16beginObservation4from14configurationsyAA11ValueAnchorVy10Foundation14DateComponentsVGSg_SayAA21IdentityConfigurationVGtF_0();
}

void sub_25116F91C()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v1, *MEMORY[0x263EFF3C8], 0);
}

unint64_t sub_25116F99C()
{
  return 0xD000000000000016;
}

uint64_t _s19HealthOrchestration22CalendarDayInputSignalC16beginObservation4from14configurationsyAA11ValueAnchorVy10Foundation14DateComponentsVGSg_SayAA21IdentityConfigurationVGtF_0()
{
  uint64_t v1 = v0;
  uint64_t v28 = *v0;
  uint64_t v27 = sub_2511C91E0();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_2511C9120();
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v23 = (uint64_t)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25116FDD4();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v10 = *MEMORY[0x263EFF3C8];
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_25116FFE8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_2511994F8;
  aBlock[3] = &block_descriptor_5;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  id v13 = objc_msgSend(v9, sel_addObserverForName_object_queue_usingBlock_, v10, 0, 0, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  uint64_t v14 = v1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = v1[7];
  uint64_t v17 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  uint64_t v18 = v23;
  sub_25116F244((uint64_t)v3, v23);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v27);
  *(void *)uint64_t v8 = 0xD000000000000016;
  *((void *)v8 + 1) = 0x80000002511CCB10;
  *((void *)v8 + 2) = 0;
  *((void *)v8 + 3) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v8[*(int *)(v6 + 60)], v18, v26);
  aBlock[0] = v1;
  uint64_t v19 = *(void (**)(char *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
  uint64_t v21 = sub_25116FFF0((unint64_t *)&unk_26B217C50, v20, (void (*)(uint64_t))type metadata accessor for CalendarDayInputSignal);
  v19(v8, aBlock, v28, v21, ObjectType, v14);
  return sub_251170038((uint64_t)v8);
}

uint64_t sub_25116FD88()
{
  return sub_25116FFF0(&qword_26B218398, 255, (void (*)(uint64_t))sub_25116FDD4);
}

void sub_25116FDD4()
{
  if (!qword_26B2183A0)
  {
    sub_2511C9120();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F063B0];
    sub_25116FFF0(&qword_26B218388, 255, MEMORY[0x263F063B0]);
    sub_25116FFF0(&qword_26B218378, 255, v0);
    sub_25116FFF0(&qword_26B218380, 255, v0);
    unint64_t v1 = type metadata accessor for ValueAnchor();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B2183A0);
    }
  }
}

uint64_t sub_25116FEE4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25116FFF0((unint64_t *)&unk_26B2186F8, a2, (void (*)(uint64_t))type metadata accessor for CalendarDayInputSignal);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CalendarDayInputSignal()
{
  return self;
}

uint64_t dispatch thunk of CalendarDayInputSignalDateProvider.currentDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for CalendarDayInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CalendarDayInputSignal);
}

uint64_t dispatch thunk of CalendarDayInputSignal.__allocating_init(observer:dateProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for CalendarDayInputSignal.DateProvider()
{
  return &type metadata for CalendarDayInputSignal.DateProvider;
}

uint64_t sub_25116FFB0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25116FFE8()
{
  return sub_25116F508();
}

uint64_t sub_25116FFF0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251170038(uint64_t a1)
{
  sub_25116FDD4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_251170094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2511700FC()
{
  unint64_t result = qword_269B22200;
  if (!qword_269B22200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22200);
  }
  return result;
}

uint64_t dispatch thunk of Planner.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Planner.fetchCriteria(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Planner.workPlans(for:anchor:previous:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of Planner.workPlan(_:didFail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of Planner.update(anchor:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of Planner.update(anchor:withoutGeneratingFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

void *AutoPauseController.__allocating_init(target:paused:environment:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v8 = (void *)swift_allocObject();
  sub_251170924();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 36) = 0;
  *(_WORD *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v9 + 32) = a3;
  v8[4] = a1;
  _OWORD v8[5] = a2;
  v8[2] = v9;
  uint64_t v8[3] = a4;
  uint64_t v10 = *(os_unfair_lock_s **)(a4 + 16);
  uint64_t v11 = (uint64_t)&v10[4];
  uint64_t v12 = v10 + 10;
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_251170984(v11);
  os_unfair_lock_unlock(v12);
  swift_release();
  swift_unknownObjectRelease();
  swift_release_n();
  return v8;
}

void *AutoPauseController.init(target:paused:environment:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4 = sub_251170838(a1, a2, a3, a4);
  swift_release();
  return v4;
}

Swift::Void __swiftcall AutoPauseController.pauseIfAnyMatches(descriptions:)(Swift::OpaquePointer descriptions)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 9;
  os_unfair_lock_lock(v2 + 9);
  sub_2511709A0(v3);
  os_unfair_lock_unlock(v4);
}

void sub_251170358(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2;
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8)
  {
LABEL_7:
    a1[1] = 0;
    if ((*a1 & 1) == 0)
    {
      if (a1[16] == 1)
      {
        a1[16] = 0;
        uint64_t v15 = *(void *)(a3 + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(ObjectType, v15);
      }
      return;
    }
LABEL_12:
    if (a1[16] == 1) {
      return;
    }
LABEL_13:
    a1[16] = 1;
    uint64_t v17 = *(void *)(a3 + 40);
    uint64_t v18 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
    return;
  }
  uint64_t v19 = a1;
  uint64_t v20 = a3;
  uint64_t v9 = *(void *)(a3 + 24);
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  while (1)
  {
    uint64_t v11 = *(void *)(v9 + 16);
    uint64_t v12 = (void *)(v11 + 16);
    id v13 = (os_unfair_lock_s *)(v11 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v13);
    sub_251144C54(v12, &v21);
    if (v4)
    {
      os_unfair_lock_unlock(v13);
      __break(1u);
      return;
    }
    uint64_t v4 = 0;
    os_unfair_lock_unlock(v13);
    Swift::Bool v14 = EnvironmentalStateDescription.matches(_:)(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      break;
    }
    if (v8 == ++v10)
    {
      swift_bridgeObjectRelease();
      a1 = v19;
      a3 = v20;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  a1 = v19;
  v19[1] = 1;
  if (*v19)
  {
    a3 = v20;
    goto LABEL_12;
  }
  a3 = v20;
  if ((v19[16] & 1) == 0) {
    goto LABEL_13;
  }
}

Swift::Void __swiftcall AutoPauseController.pause()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_2511709BC(v2);

  os_unfair_lock_unlock(v3);
}

Swift::Void __swiftcall AutoPauseController.resume()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_2511709D4(v2);

  os_unfair_lock_unlock(v3);
}

unsigned char *sub_251170604(unsigned char *result, uint64_t a2)
{
  *unint64_t result = 0;
  if (result[1])
  {
    if ((result[16] & 1) == 0)
    {
      result[16] = 1;
      uint64_t v2 = *(void *)(a2 + 40);
      uint64_t ObjectType = swift_getObjectType();
      return (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    }
  }
  else if (result[16])
  {
    result[16] = 0;
    uint64_t v4 = *(void *)(a2 + 40);
    uint64_t v5 = swift_getObjectType();
    return (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
  }
  return result;
}

Swift::Void __swiftcall AutoPauseController.didUpdate(environmentalState:)(Swift::OpaquePointer environmentalState)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 9;
  os_unfair_lock_lock(v2 + 9);
  sub_25114B8A8(v3);

  os_unfair_lock_unlock(v4);
}

uint64_t AutoPauseController.deinit()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AutoPauseController.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void sub_251170778()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_2511709BC(v2);

  os_unfair_lock_unlock(v3);
}

void sub_2511707D8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_2511709D4(v2);

  os_unfair_lock_unlock(v3);
}

void *sub_251170838(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_251170924();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 36) = 0;
  *(_WORD *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v10 + 32) = a3;
  v5[4] = a1;
  v5[5] = a2;
  _OWORD v5[2] = v10;
  v5[3] = a4;
  uint64_t v11 = *(os_unfair_lock_s **)(a4 + 16);
  uint64_t v12 = (uint64_t)&v11[4];
  id v13 = v11 + 10;
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_251170C5C(v12);
  os_unfair_lock_unlock(v13);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v5;
}

void sub_251170924()
{
  if (!qword_26B218018)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218018);
    }
  }
}

uint64_t sub_251170984(uint64_t a1)
{
  return sub_2511BE8CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_2511709A0(unsigned char *a1)
{
  sub_251170358(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unsigned char *sub_2511709BC(unsigned char *a1)
{
  return sub_251170BF4(a1);
}

unsigned char *sub_2511709D4(unsigned char *a1)
{
  return sub_251170604(a1, v1);
}

uint64_t dispatch thunk of Pausable.pause()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Pausable.resume()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for AutoPauseController()
{
  return self;
}

uint64_t method lookup function for AutoPauseController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AutoPauseController);
}

uint64_t dispatch thunk of AutoPauseController.__allocating_init(target:paused:environment:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_251170A6C(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AutoPauseController.ProtectedState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AutoPauseController.ProtectedState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoPauseController.ProtectedState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoPauseController.ProtectedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoPauseController.ProtectedState()
{
  return &type metadata for AutoPauseController.ProtectedState;
}

unsigned char *sub_251170BF4(unsigned char *result)
{
  *unint64_t result = 1;
  if ((result[16] & 1) == 0)
  {
    result[16] = 1;
    uint64_t v2 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  }
  return result;
}

uint64_t sub_251170C5C(uint64_t a1)
{
  return sub_251170984(a1);
}

uint64_t UncheckedSendable.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UncheckedSendable.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UncheckedSendable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t UncheckedSendable.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_251170D38()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_251170DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_251170E80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_251170EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_251170EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_251170F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_251170F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_251170FEC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_251171148(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x251171360);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for UncheckedSendable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SecurelyCodableWorkPlan.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_identifier + 8);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_identifier + 16);
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_identifier);
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

char *SecurelyCodableWorkPlan.__allocating_init(_:context:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SecurelyCodableWorkPlan.init(_:context:)(a1, a2, a3);
}

char *SecurelyCodableWorkPlan.init(_:context:)(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v8)(long long *__return_ptr, uint64_t, uint64_t);
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (*v23)(uint64_t, uint64_t);
  objc_super v25;
  long long v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;

  uint64_t v30 = a2;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  size_t v8 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 24);
  BOOL v9 = v3;
  v8(&v26, v6, v7);
  unsigned int v10 = v27;
  int v11 = &v9[OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_identifier];
  *(_OWORD *)int v11 = v26;
  *((void *)v11 + 2) = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511C90D0();
  swift_allocObject();
  sub_2511C90C0();
  unsigned int v12 = sub_2511C90B0();
  if (v4)
  {
    swift_release();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

    type metadata accessor for SecurelyCodableWorkPlan();
    swift_deallocPartialClassInstance();
  }
  else
  {
    unsigned int v14 = v12;
    int v15 = v13;
    swift_release();
    uint64_t v16 = (uint64_t *)&v9[OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_payload];
    *uint64_t v16 = v14;
    v16[1] = v15;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(a3 + 32);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
    v23(ObjectType, a3);
    __swift_project_boxed_opaque_existential_1(&v26, AssociatedTypeWitness);
    swift_allocObject();
    sub_2511C90C0();
    uint64_t v19 = sub_2511C90B0();
    Swift::OpaquePointer v21 = v20;
    swift_release();
    uint64_t v22 = (uint64_t *)&v9[OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_encodedContextDescriptor];
    *uint64_t v22 = v19;
    v22[1] = v21;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
    v25.receiver = v9;
    v25.super_class = (Class)type metadata accessor for SecurelyCodableWorkPlan();
    BOOL v9 = (char *)objc_msgSendSuper2(&v25, sel_init);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v9;
}

uint64_t type metadata accessor for SecurelyCodableWorkPlan()
{
  return self;
}

uint64_t sub_25117171C()
{
  return swift_release();
}

uint64_t sub_2511717B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[1] = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[0] = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)v11 - v6;
  sub_2511C90A0();
  swift_allocObject();
  sub_2511C9090();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = v11[3];
  sub_2511C9080();
  swift_release();
  if (!v8)
  {
    uint64_t v9 = v11[0];
    a3 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 24))(v7, a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, AssociatedTypeWitness);
  }
  return a3;
}

uint64_t static SecurelyCodableWorkPlan.supportsSecureCoding.getter()
{
  return 1;
}

void sub_2511719E0(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthOrchestration23SecurelyCodableWorkPlan_identifier;
  uint64_t v4 = (void *)sub_2511C9480();
  unsigned int v5 = (void *)sub_2511C9480();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = (void *)sub_2511C9480();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v6, v7);

  uint64_t v8 = (void *)sub_2511C9190();
  uint64_t v9 = (void *)sub_2511C9480();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  unsigned int v10 = (void *)sub_2511C9190();
  id v11 = (id)sub_2511C9480();
  objc_msgSend(a1, sel_encodeObject_forKey_, v10, v11);
}

uint64_t SecurelyCodableWorkPlan.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SecurelyCodableWorkPlan.init(coder:)(a1);
}

uint64_t SecurelyCodableWorkPlan.init(coder:)(void *a1)
{
  id v3 = v1;
  uint64_t v4 = (void *)sub_2511C9480();
  objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  sub_251131578(0, &qword_269B22228);
  uint64_t v5 = sub_2511C9870();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_2511C94A0();
  }
  type metadata accessor for SecurelyCodableWorkPlan();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_251171E6C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

id SecurelyCodableWorkPlan.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SecurelyCodableWorkPlan.init()()
{
}

id SecurelyCodableWorkPlan.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecurelyCodableWorkPlan();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SecurelyCodableWorkPlan(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SecurelyCodableWorkPlan);
}

uint64_t dispatch thunk of SecurelyCodableWorkPlan.__allocating_init(_:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SecurelyCodableWorkPlan.decoded<A>(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SecurelyCodableWorkPlan.context<A>(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SecurelyCodableWorkPlan.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SecurelyCodableWorkPlan.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

BOOL sub_251172134(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EnqueuedWorkPlan.scheduledPlan.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251145778(v1 + 80, a1);
}

uint64_t EnqueuedWorkPlan.scheduledPlan.setter(uint64_t a1)
{
  return sub_25117215C(a1, v1 + 80);
}

uint64_t sub_25117215C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*EnqueuedWorkPlan.scheduledPlan.modify())()
{
  return nullsub_1;
}

uint64_t sub_2511721D8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_251146D6C(v3, a2);
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v7 = (double *)(a2 + 32);
  if (*(unsigned char *)(a2 + 16) != 1) {
    uint64_t v7 = (double *)(a2 + 40);
  }
  if (*(unsigned char *)(a2 + 16)) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = (double *)(a2 + 24);
  }
  *uint64_t v8 = Current - *(double *)(a2 + 8) + *v8;
  *(double *)(a2 + 8) = Current;
  uint64_t result = sub_251172848((uint64_t)(a1 + 80), a2 + 80);
  *(unsigned char *)a2 = *a1;
  *(unsigned char *)(a2 + 16) = a1[16];
  uint64_t v10 = *(void *)(a2 + 48);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(a2 + 48) = v12;
  }
  return result;
}

BOOL static EnqueuedWorkPlan.< infix(_:_:)(double *a1, double *a2)
{
  unint64_t v2 = qword_2511CCE68[*(char *)a1];
  unint64_t v3 = qword_2511CCE68[*(char *)a2];
  if (v2 < v3) {
    return 1;
  }
  if (v3 >= v2) {
    return a1[24] < a2[24];
  }
  return 0;
}

BOOL static EnqueuedWorkPlan.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return _s19HealthOrchestration17ScheduledWorkPlanV2eeoiySbAC_ACtFZ_0(a1 + 80, a2 + 80);
}

BOOL sub_2511722D0(double *a1, double *a2)
{
  unint64_t v2 = qword_2511CCE68[*(char *)a1];
  unint64_t v3 = qword_2511CCE68[*(char *)a2];
  if (v2 < v3) {
    return 1;
  }
  if (v3 >= v2) {
    return a1[24] < a2[24];
  }
  return 0;
}

BOOL sub_25117231C(double *a1, double *a2)
{
  unint64_t v2 = qword_2511CCE68[*(char *)a2];
  unint64_t v3 = qword_2511CCE68[*(char *)a1];
  if (v2 < v3) {
    return 0;
  }
  if (v3 >= v2) {
    return a2[24] >= a1[24];
  }
  return 1;
}

BOOL sub_251172368(double *a1, double *a2)
{
  unint64_t v2 = qword_2511CCE68[*(char *)a1];
  unint64_t v3 = qword_2511CCE68[*(char *)a2];
  if (v2 < v3) {
    return 0;
  }
  if (v3 >= v2) {
    return a1[24] >= a2[24];
  }
  return 1;
}

BOOL sub_2511723B4(double *a1, double *a2)
{
  unint64_t v2 = qword_2511CCE68[*(char *)a2];
  unint64_t v3 = qword_2511CCE68[*(char *)a1];
  if (v2 < v3) {
    return 1;
  }
  if (v3 >= v2) {
    return a2[24] < a1[24];
  }
  return 0;
}

BOOL sub_251172400(uint64_t a1, uint64_t a2)
{
  return _s19HealthOrchestration17ScheduledWorkPlanV2eeoiySbAC_ACtFZ_0(a1 + 80, a2 + 80);
}

unint64_t sub_251172410()
{
  unint64_t result = qword_269B22238;
  if (!qword_269B22238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22238);
  }
  return result;
}

uint64_t assignWithCopy for EnqueuedWorkPlan(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 144), (uint64_t *)(a2 + 144));
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v6 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for EnqueuedWorkPlan(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 88) = v4;
  *(void *)(a1 + 96) = v5;
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  uint64_t v10 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v10;
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for EnqueuedWorkPlan()
{
  return &type metadata for EnqueuedWorkPlan;
}

unsigned char *storeEnumTagSinglePayload for EnqueuedWorkPlan.PlanState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2511727B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueuedWorkPlan.PlanState()
{
  return &type metadata for EnqueuedWorkPlan.PlanState;
}

unint64_t sub_2511727F4()
{
  unint64_t result = qword_269B22240;
  if (!qword_269B22240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22240);
  }
  return result;
}

uint64_t sub_251172848(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t dispatch thunk of EnvironmentalStateComponentObserver.didUpdate(state:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EnvironmentalStateComponent.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EnvironmentalStateComponent.currentState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EnvironmentalStateComponent.stopObserving()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

HealthOrchestration::IdentityConfiguration __swiftcall IdentityConfiguration.init(identifier:)(HealthOrchestration::IdentityConfiguration identifier)
{
  uint64_t v2 = *(void *)(identifier.identifier.value._countAndFlagsBits + 8);
  *(void *)uint64_t v1 = *(void *)identifier.identifier.value._countAndFlagsBits;
  *(void *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(identifier.identifier.value._countAndFlagsBits + 16);
  return identifier;
}

uint64_t IdentityConfiguration.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static IdentityConfiguration.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_2511C9CA0();
  }
}

uint64_t IdentityConfiguration.hash(into:)()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t IdentityConfiguration.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t sub_251172A64()
{
  return sub_2511C9D80();
}

uint64_t sub_251172AE4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_251172B4C()
{
  return sub_2511C9D80();
}

unint64_t sub_251172BC8(uint64_t a1)
{
  unint64_t result = sub_251172BF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251172BF0()
{
  unint64_t result = qword_26B217C40;
  if (!qword_26B217C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217C40);
  }
  return result;
}

unint64_t sub_251172C48()
{
  unint64_t result = qword_26B217C48;
  if (!qword_26B217C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217C48);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityConfiguration()
{
  return &type metadata for IdentityConfiguration;
}

void static InputSignalSet.LookupKey.buildNumber.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000033;
  a1[1] = 0x80000002511D1370;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t static InputSignalSet.LookupKey.constant<A>(type:_:)@<X0>(unint64_t *a1@<X1>, __n128 *a2@<X8>)
{
  unint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  v7.n128_u64[0] = *a1;
  v7.n128_u64[1] = v3;
  unint64_t v8 = v4;
  unint64_t v9 = v5;
  type metadata accessor for ConstantInputSignal();
  InputSignalSet.LookupKey.init(identifier:)(&v7, a2);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ConstantInputSignal()
{
  return swift_getGenericMetadata();
}

void static InputSignalIdentifier.buildNumber.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000033;
  a1[1] = 0x80000002511D1370;
  a1[2] = 0;
  a1[3] = 0;
}

void static ConstantInputSignal<>.buildNumber(observer:)(uint64_t a1, uint64_t a2)
{
  id v4 = (id)MobileGestalt_get_current_device();
  if (v4)
  {
    unint64_t v5 = v4;
    id v6 = (id)MobileGestalt_copy_buildVersion_obj();

    if (v6)
    {
      uint64_t v7 = sub_2511C94B0();
      uint64_t v9 = v8;

      uint64_t v10 = (void *)swift_allocObject();
      v10[8] = v7;
      v10[9] = v9;
      void v10[2] = a1;
      v10[3] = a2;
      v10[4] = 0xD000000000000033;
      v10[5] = 0x80000002511D1370;
      void v10[6] = 0;
      v10[7] = 0;
      swift_unknownObjectRetain();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t ConstantInputSignal.__allocating_init(identifier:value:observer:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v11;
  *(_OWORD *)(v8 + 48) = *((_OWORD *)a1 + 1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v9 + 80) - 8) + 32))(v8 + *(void *)(v9 + 128), a2);
  return v8;
}

uint64_t ConstantInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ConstantInputSignal.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v3 = v1[7];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ConstantInputSignal.value.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 128));
}

uint64_t *ConstantInputSignal.init(identifier:value:observer:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  v4[2] = a3;
  v4[3] = a4;
  v4[4] = v6;
  v4[5] = v7;
  *((_OWORD *)v4 + 3) = *((_OWORD *)a1 + 1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 32))((uint64_t)v4 + *(void *)(v5 + 128));
  return v4;
}

uint64_t *ConstantInputSignal.deinit()
{
  uint64_t v1 = *v0;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 128));
  return v0;
}

uint64_t ConstantInputSignal.__deallocating_deinit()
{
  ConstantInputSignal.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_251173154@<X0>(void *a1@<X8>)
{
  return ConstantInputSignal.identifier.getter(a1);
}

uint64_t sub_251173178()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2511731A8(uint64_t a1)
{
  return _s19HealthOrchestration19ConstantInputSignalC16beginObservation4from14configurationsyAA11ValueAnchorVyxGSg_SayAA21IdentityConfigurationVGtF_0(a1);
}

uint64_t sub_2511731CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return InputSignal.description.getter(a1, WitnessTable);
}

uint64_t _s19HealthOrchestration19ConstantInputSignalC16beginObservation4from14configurationsyAA11ValueAnchorVyxGSg_SayAA21IdentityConfigurationVGtF_0(uint64_t a1)
{
  uint64_t v24 = *(void **)v1;
  uint64_t v2 = v24;
  uint64_t v3 = v24[10];
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&ObjectType - v5;
  uint64_t v22 = v24[11];
  uint64_t v21 = v24[12];
  uint64_t v20 = v24[13];
  uint64_t v25 = (void *)v3;
  uint64_t v26 = v22;
  uint64_t v27 = v21;
  uint64_t v28 = v20;
  uint64_t v23 = type metadata accessor for ValueAnchor();
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v9 = (char *)&ObjectType - v8;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = v2;
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 6);
  uint64_t v14 = *((void *)v1 + 7);
  uint64_t v25 = (void *)*((void *)v1 + 4);
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v1[v11[16]], v3);
  ValueAnchor.init(identifier:value:)((uint64_t)&v25, (uint64_t)v6, v3, (uint64_t)v9);
  uint64_t v25 = v1;
  int v15 = *(void (**)(char *, void **, void *, uint64_t, uint64_t, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v24;
  uint64_t WitnessTable = swift_getWitnessTable();
  v15(v9, &v25, v16, WitnessTable, ObjectType, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v23);
}

uint64_t sub_2511734BC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_2511734C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2511734E0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25117351C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ConstantInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ConstantInputSignal);
}

uint64_t dispatch thunk of ConstantInputSignal.__allocating_init(identifier:value:observer:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t (*MockEnvironmentalStateComponentObserver.handler.getter())(uint64_t, uint64_t, uint64_t)
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  sub_251173C38((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  long long v3 = v4;
  swift_release();
  *(_OWORD *)(swift_allocObject() + 16) = v3;
  return sub_251173C90;
}

__n128 sub_2511736AC@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 32));
  sub_251173C38((uint64_t *)(v4 + 16), &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 32));
  __n128 v6 = v7;
  swift_release();
  __n128 result = v6;
  *a2 = v6;
  return result;
}

uint64_t sub_25117374C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  sub_251173C94((uint64_t)sub_251173C90, v3);

  return swift_release();
}

uint64_t MockEnvironmentalStateComponentObserver.handler.setter(uint64_t a1, uint64_t a2)
{
  sub_251173C94(a1, a2);

  return swift_release();
}

void (*MockEnvironmentalStateComponentObserver.handler.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess();
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v5 = (uint64_t *)&v4[4];
  __n128 v6 = v4 + 8;
  os_unfair_lock_lock(v4 + 8);
  sub_251173C38(v5, &v10);
  v3[8] = 0;
  os_unfair_lock_unlock(v6);
  long long v9 = v10;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v9;
  v3[3] = sub_251173C90;
  long long v3[4] = v7;
  return sub_2511738F0;
}

void sub_2511738F0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    v2[5] = sub_251173D58;
    v2[6] = v5;
    MEMORY[0x270FA5388](v5);
    uint64_t v7 = (void *)(v6 + 16);
    uint64_t v8 = (os_unfair_lock_s *)(v6 + 32);
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_251173D5C(v7);
    os_unfair_lock_unlock(v8);
    swift_release();
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v3;
    *(void *)(v9 + 24) = v4;
    v2[5] = sub_251173D58;
    v2[6] = v9;
    MEMORY[0x270FA5388](v9);
    uint64_t v11 = v10 + 4;
    uint64_t v12 = v10 + 8;
    os_unfair_lock_lock(v10 + 8);
    sub_251173D5C(v11);
    os_unfair_lock_unlock(v12);
  }
  swift_release();
  swift_endAccess();
  free(v2);
}

uint64_t MockEnvironmentalStateComponentObserver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_251173D74();
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = nullsub_1;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t MockEnvironmentalStateComponentObserver.init()()
{
  sub_251173D74();
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = nullsub_1;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t MockEnvironmentalStateComponentObserver.didUpdate(state:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 32));
  sub_251173C38((uint64_t *)(v7 + 16), v11);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 32));
  uint64_t v8 = (void (*)(uint64_t *, void *))v11[0];
  swift_release();
  uint64_t v10 = a1;
  v11[0] = a2;
  v11[1] = a3;
  v8(&v10, v11);
  return swift_release();
}

uint64_t MockEnvironmentalStateComponentObserver.deinit()
{
  swift_release();
  return v0;
}

uint64_t MockEnvironmentalStateComponentObserver.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_251173C38@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_retain();
}

uint64_t sub_251173C58()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251173C94(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)(v6 + 16);
  uint64_t v8 = (os_unfair_lock_s *)(v6 + 32);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_251173D5C(v7);
  os_unfair_lock_unlock(v8);
  swift_release();
  return swift_endAccess();
}

uint64_t sub_251173D5C(void *a1)
{
  return sub_251173F68(a1);
}

void sub_251173D74()
{
  if (!qword_269B22248)
  {
    sub_251173DDC();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B22248);
    }
  }
}

unint64_t sub_251173DDC()
{
  unint64_t result = qword_269B22250;
  if (!qword_269B22250)
  {
    sub_25114A7B4();
    sub_251173E48();
    unint64_t result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_269B22250);
  }
  return result;
}

unint64_t sub_251173E48()
{
  unint64_t result = qword_26B216760[0];
  if (!qword_26B216760[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_26B216760);
  }
  return result;
}

uint64_t type metadata accessor for MockEnvironmentalStateComponentObserver()
{
  return self;
}

uint64_t method lookup function for MockEnvironmentalStateComponentObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MockEnvironmentalStateComponentObserver);
}

uint64_t dispatch thunk of MockEnvironmentalStateComponentObserver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_251173EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t *, void *))(v3 + 16);
  v6[1] = a3;
  uint64_t v7 = a1;
  v6[0] = a2;
  return v4(&v7, v6);
}

uint64_t sub_251173F34(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, *a2, a2[1]);
}

uint64_t sub_251173F68(void *a1)
{
  uint64_t v3 = *(uint64_t **)(v1 + 16);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  swift_release();
  *a1 = v5;
  a1[1] = v4;
  return swift_retain();
}

Swift::Void __swiftcall Orchestrator.stop()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_251179544(v2, v8);
  os_unfair_lock_unlock(v3);
  if (v8[0])
  {
    uint64_t v4 = *(void *)(v8[0] + 16);
    if (v4)
    {
      uint64_t v5 = v8[0] + 32;
      do
      {
        sub_25112FD4C(v5, (uint64_t)v8);
        uint64_t v6 = v9;
        uint64_t v7 = v10;
        __swift_project_boxed_opaque_existential_1(v8, v9);
        (*(void (**)(uint64_t, uint64_t))(v7 + 64))(v6, v7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
        v5 += 40;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall Orchestrator.pause()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25115AA68(v2);

  os_unfair_lock_unlock(v3);
}

Swift::Void __swiftcall Orchestrator.resume()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25114BC4C(v2, (uint8_t *)&v5);
  os_unfair_lock_unlock(v3);
  v4._char rawValue = v5;
  sub_251135B44(v4);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall Orchestrator.resetFailedWorkCriteria()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25114C0E4(v2, (uint64_t *)&v5);
  os_unfair_lock_unlock(v3);
  v4._char rawValue = v5;
  sub_251135B44(v4);

  swift_bridgeObjectRelease();
}

Swift::String __swiftcall Orchestrator.orchestrationGraph()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25115AAF4(v2, v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v7[0];
  uint64_t v5 = (void *)v7[1];
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_251174244(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_25113A424(0, v1, 0);
  uint64_t v2 = v30;
  uint64_t result = sub_25118947C(a1);
  uint64_t v6 = result;
  uint64_t v7 = v29;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  char v10 = *(unsigned char *)(a1 + 32);
  uint64_t v11 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << v10)
  {
    unint64_t v13 = (unint64_t)v6 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    if (v14 >> 62)
    {
      uint64_t v25 = v9;
      uint64_t v27 = v5;
      uint64_t v23 = v11;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_2511C9AC0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = v23;
      uint64_t v9 = v25;
      uint64_t v5 = v27;
      uint64_t v7 = v29;
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v17 = *(void *)(v30 + 16);
    unint64_t v16 = *(void *)(v30 + 24);
    if (v17 >= v16 >> 1)
    {
      uint64_t v26 = v9;
      uint64_t v28 = v5;
      uint64_t v24 = v11;
      uint64_t result = sub_25113A424(v16 > 1, v17 + 1, 1);
      uint64_t v11 = v24;
      uint64_t v9 = v26;
      uint64_t v5 = v28;
      uint64_t v7 = v29;
    }
    *(void *)(v30 + 16) = v17 + 1;
    *(void *)(v30 + 8 * v17 + 32) = v15;
    char v10 = *(unsigned char *)(a1 + 32);
    unint64_t v12 = 1 << v10;
    if (v6 >= 1 << v10) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v9 + 8 * v13);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_30;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      unint64_t v12 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v20 = v13 + 1;
      unint64_t v21 = (v12 + 63) >> 6;
      if (v13 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v9 + 8 * v20);
        if (v22)
        {
LABEL_22:
          unint64_t v12 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v13)
          {
            unint64_t v22 = *(void *)(v11 + 8 * v13++);
            if (v22)
            {
              unint64_t v20 = v13 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v6 = v12;
    if (v8 == v7) {
      return v2;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void Orchestrator.start(completion:)()
{
  int64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25117CD8C(v2, (char *)&v35);
  os_unfair_lock_unlock(v3);
  if (v35 != 1) {
    return;
  }
  uint64_t v5 = *(void *)(v0 + 32);
  if (!*(void *)(v5 + 16))
  {
    unint64_t v29 = sub_2511533E4(MEMORY[0x263F8EE78]);
    sub_25117780C(v29);
LABEL_25:
    swift_bridgeObjectRelease();
    return;
  }
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t)&v6[4];
  uint64_t v8 = v6 + 8;
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_25117CDA8(v7);
  os_unfair_lock_unlock(v8);
  swift_release();
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  sub_25117CDC8();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  uint64_t v32 = v10;
  *(void *)(v10 + 16) = MEMORY[0x263F8EE80];
  uint64_t v30 = v5 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  for (int64_t i = 0; ; int64_t i = v34)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      int64_t v34 = i;
      unint64_t v16 = v15 | (i << 6);
      goto LABEL_7;
    }
    int64_t v25 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v31) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v30 + 8 * v25);
    int64_t v27 = i + 1;
    if (!v26)
    {
      int64_t v27 = i + 2;
      if (i + 2 >= v31) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v30 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = i + 3;
        if (i + 3 >= v31) {
          goto LABEL_23;
        }
        unint64_t v26 = *(void *)(v30 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v13 = (v26 - 1) & v26;
    int64_t v34 = v27;
    unint64_t v16 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_7:
    uint64_t v17 = *(void *)(v5 + 56);
    uint64_t v18 = (long long *)(*(void *)(v5 + 48) + 48 * v16);
    long long v20 = v18[1];
    long long v19 = v18[2];
    long long v35 = *v18;
    long long v36 = v20;
    long long v37 = v19;
    long long v33 = *(_OWORD *)(v17 + 16 * v16);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = swift_allocObject();
    long long v23 = v36;
    *(_OWORD *)(v22 + 24) = v35;
    *(void *)(v22 + 16) = v32;
    *(_OWORD *)(v22 + 40) = v23;
    *(_OWORD *)(v22 + 56) = v37;
    *(void *)(v22 + 72) = v0;
    *(_OWORD *)(v22 + 80) = v33;
    *(void *)(v22 + 96) = v5;
    *(CFAbsoluteTime *)(v22 + 104) = Current;
    uint64_t v24 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, void))(*((void *)&v33 + 1) + 32);
    swift_unknownObjectRetain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25113822C((uint64_t)&v35);
    swift_retain();
    v24(sub_25117CEB4, v22, ObjectType, *((void *)&v33 + 1));
    swift_unknownObjectRelease();
    swift_release();
  }
  uint64_t v28 = i + 4;
  if (i + 4 >= v31)
  {
LABEL_23:
    swift_release();
    swift_release();
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v30 + 8 * v28);
  if (v26)
  {
    int64_t v27 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v31) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v30 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t Orchestrator.__allocating_init(context:inputSignalProviders:executorProviders:workQueue:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  Orchestrator.init(context:inputSignalProviders:executorProviders:workQueue:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t Orchestrator.debugSnapshot.getter()
{
  int64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25115A554(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25117492C(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v33 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v58 = (void *)MEMORY[0x263F8EE78];
  if (v4) {
    goto LABEL_36;
  }
LABEL_6:
  int64_t v7 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v7 < v33)
    {
      unint64_t v8 = *(void *)(v32 + 8 * v7);
      ++v6;
      if (v8) {
        goto LABEL_21;
      }
      int64_t v6 = v7 + 1;
      if (v7 + 1 >= v33) {
        goto LABEL_37;
      }
      unint64_t v8 = *(void *)(v32 + 8 * v6);
      if (v8) {
        goto LABEL_21;
      }
      int64_t v6 = v7 + 2;
      if (v7 + 2 >= v33) {
        goto LABEL_37;
      }
      unint64_t v8 = *(void *)(v32 + 8 * v6);
      if (v8) {
        goto LABEL_21;
      }
      int64_t v6 = v7 + 3;
      if (v7 + 3 >= v33) {
        goto LABEL_37;
      }
      unint64_t v8 = *(void *)(v32 + 8 * v6);
      if (v8)
      {
LABEL_21:
        unint64_t v4 = (v8 - 1) & v8;
        for (unint64_t i = __clz(__rbit64(v8)) + (v6 << 6); ; unint64_t i = v31 | (v6 << 6))
        {
          uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 32 * i);
          uint64_t v12 = *v11;
          uint64_t v13 = v11[1];
          uint64_t v14 = v11[2];
          uint64_t v15 = v11[3];
          sub_25112FD4C(*(void *)(a1 + 56) + 40 * i, (uint64_t)v56);
          *(void *)&long long v54 = v12;
          *((void *)&v54 + 1) = v13;
          *(void *)&long long v55 = v14;
          *((void *)&v55 + 1) = v15;
          long long v49 = v54;
          long long v50 = v55;
          long long v51 = v56[0];
          long long v52 = v56[1];
          uint64_t v53 = v57;
          uint64_t v16 = *(void *)(a2 + 16);
          if (*(void *)(v16 + 16))
          {
            long long v17 = v49;
            long long v18 = v50;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v19 = sub_25112F2DC(v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1));
            if (v20)
            {
              sub_25112FD4C(*(void *)(v16 + 56) + 40 * v19, (uint64_t)&v41);
            }
            else
            {
              uint64_t v43 = 0;
              long long v41 = 0u;
              long long v42 = 0u;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((void *)&v42 + 1))
            {
              sub_25112F14C(&v41, (uint64_t)&v36);
              long long v44 = v17;
              long long v45 = v18;
              uint64_t v21 = *((void *)&v52 + 1);
              uint64_t v22 = v53;
              __swift_project_boxed_opaque_existential_1(&v51, *((uint64_t *)&v52 + 1));
              *((void *)&v47 + 1) = v21;
              uint64_t v48 = v22;
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_2511503D4((uint64_t)&v36, v21, v22, (uint64_t)boxed_opaque_existential_1);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
              goto LABEL_30;
            }
          }
          else
          {
            uint64_t v43 = 0;
            long long v41 = 0u;
            long long v42 = 0u;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_25118B7E8((uint64_t)&v41, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
          long long v44 = 0u;
          long long v45 = 0u;
          long long v46 = 0u;
          long long v47 = 0u;
          uint64_t v48 = 0;
LABEL_30:
          sub_251130098((uint64_t)&v49, (uint64_t (*)(void))sub_251130158);
          if (*((void *)&v44 + 1))
          {
            long long v38 = v46;
            long long v39 = v47;
            uint64_t v40 = v48;
            long long v36 = v44;
            long long v37 = v45;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_2511BFCB8(0, v58[2] + 1, 1, v58);
              uint64_t v58 = (void *)result;
            }
            unint64_t v25 = v58[2];
            unint64_t v24 = v58[3];
            if (v25 >= v24 >> 1)
            {
              uint64_t result = (uint64_t)sub_2511BFCB8((void *)(v24 > 1), v25 + 1, 1, v58);
              uint64_t v58 = (void *)result;
            }
            unint64_t v26 = v58;
            v58[2] = v25 + 1;
            int64_t v27 = &v26[9 * v25];
            *((_OWORD *)v27 + 2) = v36;
            long long v28 = v37;
            long long v29 = v38;
            long long v30 = v39;
            v27[12] = v40;
            *((_OWORD *)v27 + 4) = v29;
            *((_OWORD *)v27 + 5) = v30;
            *((_OWORD *)v27 + 3) = v28;
            if (!v4) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t result = sub_25118B6A4((uint64_t)&v44);
            if (!v4) {
              goto LABEL_6;
            }
          }
LABEL_36:
          unint64_t v31 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      int64_t v9 = v7 + 4;
      if (v9 < v33)
      {
        unint64_t v8 = *(void *)(v32 + 8 * v9);
        if (v8)
        {
          int64_t v6 = v9;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v6 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            goto LABEL_39;
          }
          if (v6 >= v33) {
            break;
          }
          unint64_t v8 = *(void *)(v32 + 8 * v6);
          ++v9;
          if (v8) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_37:
    swift_release();
    swift_release();
    return (uint64_t)v58;
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_251174D64(uint64_t a1)
{
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_retain();
    sub_25117A7A8((uint64_t)&v16, &v15);
    if (v1)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t result = sub_2511B079C(v15);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 4;
  if (v9 + 4 >= v7)
  {
LABEL_26:
    swift_release();
    return v17;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251174F24(uint64_t a1)
{
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    sub_25117A980(&v16, &v15);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_2511B0904(v15);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 4;
  if (v9 + 4 >= v7)
  {
LABEL_26:
    swift_release();
    return v17;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2511750E4(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    unint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_2511B1338(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251175254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9890();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = &v17[-v7 - 8];
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v6);
  int64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25112FD4C(a1, (uint64_t)v17);
  sub_251131944(0, (unint64_t *)&qword_26B216860);
  int v12 = swift_dynamicCast();
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v12)
  {
    v13(v8, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    char v14 = sub_2511C9470();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(v8, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_251175484()
{
  sub_2511C9D40();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_2511C9450();
  return sub_2511C9D80();
}

uint64_t sub_2511754E8()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_2511C9450();
}

uint64_t sub_251175534()
{
  sub_2511C9D40();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_2511C9450();
  return sub_2511C9D80();
}

uint64_t sub_251175594(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return sub_251175254(a2, v3) & 1;
}

uint64_t sub_2511755E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_25112FD4C(a1, v3 + 16);
  int64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_25116B848(0, v8, 0);
    uint64_t v10 = v31;
    uint64_t v11 = a2 + 32;
    do
    {
      sub_25112FD4C(v11, (uint64_t)&v28);
      uint64_t v31 = v10;
      unint64_t v13 = *(void *)(v10 + 16);
      unint64_t v12 = *(void *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25116B848(v12 > 1, v13 + 1, 1);
        uint64_t v10 = v31;
      }
      *(void *)(v10 + 16) = v13 + 1;
      uint64_t v14 = v10 + 40 * v13;
      long long v15 = v28;
      long long v16 = v29;
      *(void *)(v14 + 64) = v30;
      *(_OWORD *)(v14 + 32) = v15;
      *(_OWORD *)(v14 + 48) = v16;
      v11 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = sub_25118A8BC(v10);
  swift_bridgeObjectRelease();
  *(void *)(v4 + 56) = v17;
  int64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    uint64_t v31 = v9;
    sub_25116B848(0, v18, 0);
    uint64_t v19 = v31;
    uint64_t v20 = a3 + 32;
    do
    {
      sub_25112FD4C(v20, (uint64_t)&v28);
      uint64_t v31 = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_25116B848(v21 > 1, v22 + 1, 1);
        uint64_t v19 = v31;
      }
      *(void *)(v19 + 16) = v22 + 1;
      uint64_t v23 = v19 + 40 * v22;
      long long v24 = v28;
      long long v25 = v29;
      *(void *)(v23 + 64) = v30;
      *(_OWORD *)(v23 + 32) = v24;
      *(_OWORD *)(v23 + 48) = v25;
      v20 += 40;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = sub_25118A8BC(v19);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(v4 + 64) = v26;
  return v4;
}

uint64_t sub_2511757EC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_251175834(void **a1, void **a2)
{
  return sub_251189504(*a1, *a2);
}

uint64_t sub_251175840()
{
  uint64_t v1 = 0x657669746341;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465646E45;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7261745320746F4ELL;
  }
}

uint64_t sub_25117589C()
{
  if (*v0) {
    return 0x646573756150;
  }
  else {
    return 0x676E696E6E7552;
  }
}

uint64_t Orchestrator.init(context:inputSignalProviders:executorProviders:workQueue:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v76 = a5;
  uint64_t v65 = a4;
  *(void *)&long long v77 = a3;
  unint64_t v74 = a2;
  uint64_t v68 = sub_2511C92A0();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  unint64_t v66 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_2511C97B0();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2511C97A0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2511C9390();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v75 = v5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  unint64_t v69 = sub_251155968();
  *(void *)&long long v81 = 0;
  *((void *)&v81 + 1) = 0xE000000000000000;
  swift_unknownObjectRetain();
  sub_2511C9960();
  swift_bridgeObjectRelease();
  strcpy((char *)&v81, "Orchestration-");
  HIBYTE(v81) = -18;
  *(void *)&v79[0] = a1;
  *((void *)&v79[0] + 1) = a2;
  uint64_t v12 = sub_251131944(0, (unint64_t *)&qword_26B216848);
  swift_unknownObjectRetain();
  v64[1] = v12;
  sub_2511C94C0();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9380();
  *(void *)&long long v81 = MEMORY[0x263F8EE78];
  sub_2511483DC((unint64_t *)&qword_26B217F90, MEMORY[0x263F8F0F8]);
  unint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_25114846C(0, (unint64_t *)&qword_26B217F30, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_251148314((unint64_t *)&qword_26B217F40, (unint64_t *)&qword_26B217F30, v13);
  uint64_t v14 = v75;
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, *MEMORY[0x263F8F130], v72);
  unint64_t v15 = v74;
  *(void *)(v14 + 56) = sub_2511C97D0();
  *(void *)(v14 + 40) = v76;
  type metadata accessor for Orchestrator.InputSignalObserverShim();
  uint64_t v16 = swift_allocObject();
  *((void *)&v79[0] + 1) = 0;
  uint64_t v17 = swift_unknownObjectWeakInit();
  sub_25117E2E4(v17, (uint64_t)&v81);
  sub_2511448BC(0, &qword_26B216808);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 32) = 0;
  sub_25117E320((uint64_t)&v81, v18 + 16);
  swift_retain();
  sub_25117E35C((uint64_t)&v81);
  *(void *)(v16 + 16) = v18;
  *(void *)(v14 + 72) = v16;
  swift_retain_n();
  swift_unknownObjectRetain();
  uint64_t v19 = 0;
  uint64_t v20 = sub_2511897DC(v77, a1, v15, v16);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v72 = v16;
  swift_release();
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = MEMORY[0x263F8EE80];
  uint64_t v73 = a1;
  if (v21)
  {
    uint64_t v71 = 0;
    uint64_t v23 = v20 + 32;
    uint64_t v70 = (char *)v20;
    swift_bridgeObjectRetain();
    long long v24 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      *(void *)&long long v77 = v21;
      sub_25112FD4C(v23, (uint64_t)&v81);
      uint64_t v26 = *((void *)&v82 + 1);
      uint64_t v27 = v83;
      __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v27 + 40))(v80, v26, v27);
      uint64_t v28 = v80[0];
      uint64_t v29 = v80[1];
      uint64_t v30 = v80[2];
      uint64_t v31 = v80[3];
      sub_25112FD4C((uint64_t)&v81, (uint64_t)v79);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = v24;
      unint64_t v34 = sub_25112F2DC(v28, v29, v30, v31);
      uint64_t v35 = v24[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_31:
        uint64_t result = sub_2511C9CD0();
        __break(1u);
        return result;
      }
      char v38 = v33;
      if (v24[3] >= v37)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          long long v24 = v78;
          if (v33) {
            goto LABEL_3;
          }
        }
        else
        {
          sub_25112DCC4((void (*)(void))sub_25118B378, (void (*)(unsigned char *, uint64_t))sub_25112F14C);
          long long v24 = v78;
          if (v38) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        sub_2511315B4(v37, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_25118B378, (void (*)(uint64_t, unsigned char *))sub_25112F14C);
        unint64_t v39 = sub_25112F2DC(v28, v29, v30, v31);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_31;
        }
        unint64_t v34 = v39;
        long long v24 = v78;
        if (v38)
        {
LABEL_3:
          uint64_t v25 = v24[7] + 40 * v34;
          __swift_destroy_boxed_opaque_existential_1(v25);
          sub_25112F14C(v79, v25);
          goto LABEL_4;
        }
      }
      v24[(v34 >> 6) + 8] |= 1 << v34;
      long long v41 = (uint64_t *)(v24[6] + 32 * v34);
      *long long v41 = v28;
      v41[1] = v29;
      long long v41[2] = v30;
      long long v41[3] = v31;
      sub_25112F14C(v79, v24[7] + 40 * v34);
      uint64_t v42 = v24[2];
      BOOL v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_29;
      }
      long long v24[2] = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
      v23 += 40;
      uint64_t v21 = v77 - 1;
      if ((void)v77 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v75;
        a1 = v73;
        unint64_t v15 = v74;
        uint64_t v19 = v71;
        uint64_t v22 = MEMORY[0x263F8EE80];
        goto LABEL_18;
      }
    }
  }
  long long v24 = (void *)MEMORY[0x263F8EE80];
LABEL_18:
  swift_bridgeObjectRelease();
  *(void *)(v14 + 48) = v24;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_251189A08(v65, a1, v15);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)&v79[0] = v22;
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    swift_bridgeObjectRetain();
    long long v47 = (_OWORD *)(v45 + 48);
    while (1)
    {
      uint64_t v48 = *((void *)v47 - 1);
      *(void *)&long long v81 = *((void *)v47 - 2);
      *((void *)&v81 + 1) = v48;
      long long v77 = *v47;
      long long v82 = v77;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_2511763F8((uint64_t *)v79, (uint64_t *)&v81, a1, v15, (uint64_t)v24);
      if (v19) {
        goto LABEL_30;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v47 += 2;
      if (!--v46)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  *(void *)(v14 + 32) = *(void *)&v79[0];
  uint64_t v49 = MEMORY[0x263F8EE78];
  unint64_t v50 = sub_2511533E4(MEMORY[0x263F8EE78]);
  sub_2511448BC(0, &qword_26B218000);
  uint64_t v51 = swift_allocObject();
  *(_DWORD *)(v51 + 88) = 0;
  *(void *)(v51 + 16) = v49;
  *(void *)(v51 + 24) = 0;
  *(void *)(v51 + 32) = 0;
  *(void *)(v51 + 40) = v50;
  *(_WORD *)(v51 + 48) = 0;
  *(unsigned char *)(v51 + 50) = 0;
  *(void *)(v51 + 56) = MEMORY[0x263F8EE88];
  *(void *)(v51 + 64) = 0;
  *(void *)(v51 + 72) = 0;
  *(void *)(v51 + 80) = 0;
  *(void *)(v14 + 64) = v51;
  uint64_t v52 = *(void *)(v14 + 24);
  uint64_t ObjectType = swift_getObjectType();
  long long v54 = v66;
  (*(void (**)(uint64_t, uint64_t))(v52 + 40))(ObjectType, v52);
  swift_retain_n();
  long long v55 = sub_2511C9280();
  os_log_type_t v56 = sub_2511C9770();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(void *)&v79[0] = v58;
    *(_DWORD *)uint64_t v57 = 136315650;
    long long v81 = *(_OWORD *)(v14 + 16);
    swift_unknownObjectRetain();
    uint64_t v59 = sub_2511C94C0();
    *(void *)&long long v81 = sub_251140E4C(v59, v60, (uint64_t *)v79);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2048;
    uint64_t v61 = *(void *)(*(void *)(v14 + 48) + 16);
    swift_release();
    *(void *)&long long v81 = v61;
    sub_2511C98A0();
    swift_release();
    *(_WORD *)(v57 + 22) = 2048;
    uint64_t v62 = *(void *)(*(void *)(v14 + 32) + 16);
    swift_release();
    *(void *)&long long v81 = v62;
    sub_2511C98A0();
    swift_release();
    _os_log_impl(&dword_25112A000, v55, v56, "[%s]: Initialized with %ld input signals and %ld planners", (uint8_t *)v57, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v58, -1, -1);
    MEMORY[0x253397D40](v57, -1, -1);
    swift_release();

    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {

    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v68);
  return v14;
}

uint64_t sub_2511763F8(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  void (*v21)(void *__return_ptr, void, void);
  NSObject *v22;
  char *v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  void (*v40)(void *__return_ptr, void, void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t AssociatedConformanceWitness;
  void (*v46)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  NSObject *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  NSObject *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  unint64_t v87;
  void (*v88)(void *__return_ptr, void, void);
  uint64_t v89;
  os_log_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99[3];
  uint64_t v100;
  NSObject *v101;
  uint64_t v102;
  unint64_t v103;
  long long v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;

  uint64_t v6 = v5;
  int64_t v92 = a5;
  id v96 = a3;
  uint64_t v97 = a4;
  uint64_t v9 = sub_2511C92A0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v94 = v9;
  uint64_t v95 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v93 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v84 = (char *)v79 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v91 = (char *)v79 - v15;
  uint64_t v16 = *a2;
  unint64_t v17 = a2[1];
  uint64_t v18 = a2[2];
  uint64_t v19 = a2[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = *(void (**)(void *__return_ptr, void, void))(v19 + 24);
  swift_bridgeObjectRetain();
  uint64_t v109 = v18;
  uint64_t v98 = v19;
  uint64_t v88 = v21;
  v21(&v100, ObjectType, v19);
  uint64_t v22 = v101;
  uint64_t v23 = (char *)v103;
  uint64_t v86 = v16;
  *(void *)&unint64_t v104 = v16;
  *((void *)&v104 + 1) = v17;
  uint64_t v83 = v100;
  uint64_t v105 = v100;
  uint64_t v106 = (unint64_t)v101;
  unint64_t v89 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v103;
  uint64_t v85 = a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251167268((uint64_t)&v104);
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
      uint64_t v26 = v6;
      uint64_t v27 = v96;
      uint64_t v28 = swift_getObjectType();
      uint64_t v29 = v97;
      uint64_t v30 = v93;
      (*(void (**)(uint64_t, unint64_t))(v97 + 40))(v28, v97);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain_n();
      uint64_t v31 = sub_2511C9280();
      LODWORD(v91) = sub_2511C9760();
      if (os_log_type_enabled(v31, (os_log_type_t)v91))
      {
        uint64_t v90 = v31;
        int64_t v92 = v26;
        uint64_t v32 = swift_slowAlloc();
        uint64_t v88 = (void (*)(void *__return_ptr, void, void))swift_slowAlloc();
        v99[0] = (uint64_t)v88;
        *(_DWORD *)uint64_t v32 = 136315906;
        char v100 = v27;
        uint64_t v101 = v29;
        sub_251131944(0, (unint64_t *)&qword_26B216848);
        swift_unknownObjectRetain();
        char v33 = sub_2511C94C0();
        char v100 = sub_251140E4C(v33, v34, v99);
        sub_2511C98A0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        swift_bridgeObjectRetain();
        char v100 = sub_251140E4C(v86, v17, v99);
        sub_2511C98A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 22) = 2080;
        uint64_t v35 = (unint64_t)v23;
        BOOL v36 = v89;
        if (!v23)
        {
          swift_bridgeObjectRetain();
          BOOL v36 = v83;
          uint64_t v35 = (unint64_t)v22;
        }
        swift_bridgeObjectRetain();
        char v100 = sub_251140E4C(v36, v35, v99);
        sub_2511C98A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 32) = 2080;
        char v100 = v109;
        uint64_t v101 = v98;
        sub_251131944(0, &qword_26B217E50);
        swift_unknownObjectRetain();
        uint64_t v37 = sub_2511C94C0();
        char v100 = sub_251140E4C(v37, v38, v99);
        sub_2511C98A0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v39 = v90;
        _os_log_impl(&dword_25112A000, v90, (os_log_type_t)v91, "[%s]: Executor provider %s returned multiple executors with the same identifier (%s). Ignoring %s", (uint8_t *)v32, 0x2Au);
        char v40 = v88;
        swift_arrayDestroy();
        MEMORY[0x253397D40](v40, -1, -1);
        MEMORY[0x253397D40](v32, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v93, v94);
      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v30, v94);
      }
    }
  }
  unint64_t v93 = v23;
  uint64_t v90 = v22;
  unint64_t v87 = v17;
  char v100 = v92;
  uint64_t v42 = v98;
  BOOL v43 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v98 + 32))(&v100, ObjectType, v98);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v44 = v43;
  int64_t v92 = v6;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  long long v47 = swift_checkMetadataState();
  long long v82 = v44;
  uint64_t v80 = v47;
  long long v81 = AssociatedConformanceWitness;
  v79[1] = AssociatedConformanceWitness + 24;
  v79[0] = v46;
  v46(&v100, v47, AssociatedConformanceWitness);
  uint64_t v48 = v42;
  uint64_t v49 = v100;
  unint64_t v50 = (unint64_t)v101;
  v88(v99, ObjectType, v48);
  if (v49 == v99[0] && v50 == v99[1])
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v93;
    uint64_t v52 = v97;
LABEL_13:
    long long v54 = v96;
    long long v55 = swift_getObjectType();
    os_log_type_t v56 = v91;
    (*(void (**)(uint64_t, unint64_t))(v52 + 40))(v55, v52);
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v57 = sub_2511C9280();
    uint64_t v58 = sub_2511C9770();
    if (os_log_type_enabled(v57, (os_log_type_t)v58))
    {
      LODWORD(v109) = v58;
      uint64_t v59 = swift_slowAlloc();
      uint64_t v98 = swift_slowAlloc();
      v99[0] = v98;
      *(_DWORD *)uint64_t v59 = 136315394;
      char v100 = v54;
      uint64_t v101 = v52;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      unint64_t v60 = sub_2511C94C0();
      char v100 = sub_251140E4C(v60, v61, v99);
      sub_2511C98A0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2080;
      char v100 = 60;
      uint64_t v101 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      if (!v51)
      {
        swift_bridgeObjectRetain();
        unint64_t v89 = v83;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      char v100 = sub_251140E4C(v100, (unint64_t)v101, v99);
      sub_2511C98A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v57, (os_log_type_t)v109, "[%s]: Received executor/planner %s", (uint8_t *)v59, 0x16u);
      uint64_t v62 = v98;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v62, -1, -1);
      MEMORY[0x253397D40](v59, -1, -1);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v94);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v56, v94);
    }
    uint64_t v63 = v82;
    unint64_t v64 = v81;
    uint64_t v65 = v80;
    unint64_t v66 = v85;
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v100 = *v66;
    *unint64_t v66 = 0x8000000000000000;
    sub_251189300(v63, &v104, isUniquelyReferenced_nonNull_native, &v100, v65, v64);
    *unint64_t v66 = v100;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v53 = sub_2511C9CA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v93;
  uint64_t v52 = v97;
  if (v53) {
    goto LABEL_13;
  }
  uint64_t v68 = v96;
  unint64_t v69 = swift_getObjectType();
  uint64_t v70 = v84;
  (*(void (**)(uint64_t, unint64_t))(v52 + 40))(v69, v52);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_2511C9280();
  uint64_t v72 = sub_2511C9760();
  if (os_log_type_enabled(v71, (os_log_type_t)v72))
  {
    LODWORD(v109) = v72;
    uint64_t v73 = swift_slowAlloc();
    uint64_t v98 = swift_slowAlloc();
    v99[0] = v98;
    *(_DWORD *)uint64_t v73 = 136315650;
    char v100 = v68;
    uint64_t v101 = v52;
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_unknownObjectRetain();
    unint64_t v74 = sub_2511C94C0();
    char v100 = sub_251140E4C(v74, v75, v99);
    sub_2511C98A0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 12) = 2080;
    char v100 = 60;
    uint64_t v101 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    if (!v51)
    {
      swift_bridgeObjectRetain();
      unint64_t v89 = v83;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    char v100 = sub_251140E4C(v100, (unint64_t)v101, v99);
    sub_2511C98A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 22) = 2080;
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v79[0])(&v100, v80, v81);
    uint64_t v76 = v103;
    if (v103)
    {
      long long v77 = v102;
    }
    else
    {
      long long v77 = v100;
      uint64_t v76 = swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    char v100 = sub_251140E4C(v77, v76, v99);
    sub_2511C98A0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25112A000, v71, (os_log_type_t)v109, "[%s]: Executor %s returned a planner with a differing identifier (%s)", (uint8_t *)v73, 0x20u);
    uint64_t v78 = v98;
    swift_arrayDestroy();
    MEMORY[0x253397D40](v78, -1, -1);
    MEMORY[0x253397D40](v73, -1, -1);
    swift_unknownObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v84, v94);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v70, v94);
  }
}

uint64_t Orchestrator.deinit()
{
  Orchestrator.stop()();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t Orchestrator.__deallocating_deinit()
{
  Orchestrator.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_2511773B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v6 = sub_2511C92A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + 33) & 1) == 0)
  {
    uint64_t v24 = v5;
    uint64_t v11 = a2[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 40))(ObjectType, v11);
    swift_retain_n();
    uint64_t v13 = sub_2511C9280();
    os_log_type_t v14 = sub_2511C9770();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = v2;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v21;
      uint64_t v22 = a1;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v20 = v16 + 4;
      uint64_t v25 = (uint64_t)a2;
      swift_retain();
      uint64_t v17 = sub_2511C94C0();
      uint64_t v25 = sub_251140E4C(v17, v18, &v26);
      a1 = v22;
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, v13, v14, "%s: Pausing.", v16, 0xCu);
      uint64_t v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x253397D40](v19, -1, -1);
      MEMORY[0x253397D40](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    *(unsigned char *)(a1 + 33) = 1;
  }
  return result;
}

uint64_t Orchestrator.paused.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_2511776A8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_2511776A8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33);
  return result;
}

Swift::Void __swiftcall Orchestrator.test_signalBarrier()()
{
  uint64_t v1 = *(NSObject **)(v0 + 56);
  long long v3[4] = nullsub_1;
  v3[5] = 0;
  v3[0] = MEMORY[0x263EF8330];
  v3[1] = 1107296256;
  v3[2] = sub_2511331F4;
  v3[3] = &block_descriptor_6;
  uint64_t v2 = _Block_copy(v3);
  swift_release();
  dispatch_async_and_wait(v1, v2);
  _Block_release(v2);
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
}

uint64_t sub_251177784@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  if (*(unsigned char *)(result + 32))
  {
    char v5 = 0;
  }
  else
  {
    uint64_t v8 = result;
    char v5 = 1;
    *(unsigned char *)(result + 32) = 1;
    uint64_t v9 = *(void *)(result + 56);
    sub_25114A84C(a2);
    uint64_t result = sub_251135B0C(v9);
    *(void *)(v8 + 56) = a2;
    *(void *)(v8 + 64) = a3;
  }
  *a4 = v5;
  return result;
}

uint64_t sub_25117780C(unint64_t a1)
{
  void (*v28)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  int64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t *v63;
  long long *v64;
  long long v65;
  long long v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  long long *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  long long v84;
  uint64_t v85;
  long long *v86;
  char isUniquelyReferenced_nonNull_native;
  char v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t ObjectType;
  void (*v101)(uint64_t, uint64_t);
  int64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(int64_t, uint64_t);
  int64_t v113;
  uint64_t v114;
  os_unfair_lock_s *v115;
  uint64_t v116;
  os_unfair_lock_s *v117;
  long long v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int64_t v126;
  unint64_t v127;
  int64_t v128;
  long long *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  unint64_t v137;
  os_log_type_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  int64_t v155;
  int v156;
  int v157;
  char v158;
  char v159;
  unint64_t v160;
  unint64_t v161;
  int64_t v162;
  uint64_t v163;
  char v164;
  uint64_t result;
  unint64_t v166;
  uint64_t v167;
  long long v168;
  int64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char *v174;
  void (*v175)(uint64_t, uint64_t);
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  void *v185;
  long long *v186;
  long long *v187;
  long long *v188;
  uint64_t v189;
  long long v190;
  long long v191;
  uint64_t v192;
  unsigned long long v193;
  long long v194;
  uint64_t v195;
  long long v196;
  long long v197;
  long long v198;
  long long v199;
  long long v200;
  long long v201;
  long long v202;
  long long v203;
  uint64_t v204;
  void v205[4];
  unint64_t v206;

  v171 = sub_2511C92A0();
  *(void *)&uint64_t v168 = *(void *)(v171 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v171);
  v174 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t)&v166 - v5;
  uint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = 0;
  unint64_t v9 = sub_251174F24(v7);
  swift_bridgeObjectRelease();
  *(void *)&v199 = MEMORY[0x263F8EE78];
  id v172 = v1;
  double v167 = v9 >> 62;
  if (v9 >> 62) {
    goto LABEL_169;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v166 = a1;
  uint64_t v169 = v6;
  uint64_t v170 = v8;
  uint64_t v173 = v9;
  if (v10)
  {
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_171;
    }
    uint64_t v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = MEMORY[0x2533971C0](v11, v9);
      }
      else
      {
        uint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
        swift_retain();
      }
      ++v11;
      uint64_t v13 = *(void *)(v12 + 56);
      swift_bridgeObjectRetain();
      swift_release();
      sub_2511B079C(v13);
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    uint64_t v14 = v199;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  unint64_t v9 = sub_2511799A0(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v9 + 64);
  uint64_t v176 = v9 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v8 = v17 & v15;
  v175 = (void (*)(uint64_t, uint64_t))((unint64_t)(v16 + 63) >> 6);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = 0;
  uint64_t v19 = (void *)MEMORY[0x263F8EE80];
  os_log_t v177 = v9;
  while (1)
  {
    uint64_t v185 = v19;
    if (v8)
    {
      double v179 = (v8 - 1) & v8;
      unint64_t v180 = v18;
      unint64_t v20 = __clz(__rbit64(v8)) | (v18 << 6);
    }
    else
    {
      uint64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_164;
      }
      if (v21 >= (uint64_t)v175)
      {
LABEL_64:
        swift_release();
        swift_bridgeObjectRelease();
        if (v167)
        {
          unint64_t v8 = v173;
          swift_bridgeObjectRetain();
          uint64_t v70 = sub_2511C9AC0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v70 = *(void *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v6 = v172;
        uint64_t v71 = MEMORY[0x263F8EE78];
        if (v70)
        {
          *(void *)&v199 = MEMORY[0x263F8EE78];
          sub_2511C9A20();
          if (v70 < 0) {
            goto LABEL_172;
          }
          unint64_t v8 = 0;
          uint64_t v72 = v173 & 0xC000000000000001;
          do
          {
            if (v72) {
              MEMORY[0x2533971C0](v8, v173);
            }
            else {
              swift_retain();
            }
            ++v8;
            swift_retain();
            swift_release();
            sub_2511C99F0();
            sub_2511C9A30();
            sub_2511C9A40();
            sub_2511C9A00();
          }
          while (v70 != v8);
          uint64_t v71 = v199;
          uint64_t v6 = v172;
        }
        double v184 = v70;
        uint64_t v73 = *(void *)(v71 + 16);
        if (!v73) {
          goto LABEL_103;
        }
        unint64_t v74 = *(void *)(v71 + 32);
        uint64_t v75 = &v198;
        uint64_t v187 = (long long *)&v195;
        v188 = &v201;
        swift_bridgeObjectRetain();
        swift_retain();
        a1 = MEMORY[0x263F8EE78];
        uint64_t v76 = 1;
        do
        {
          while (1)
          {
LABEL_77:
            if (v73 == v76)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_104;
            }
            long long v77 = v76 + 1;
            if (__OFADD__(v76, 1)) {
              goto LABEL_165;
            }
            unint64_t v8 = *(void *)(v71 + 8 * v76 + 32);
            if (v74) {
              break;
            }
            swift_retain();
            unint64_t v74 = v8;
            uint64_t v76 = v77;
          }
          ++v76;
        }
        while (!v8);
        v183 = (void *)v77;
        swift_retain_n();
        swift_retain();
        uint64_t v78 = swift_bridgeObjectRetain();
        uint64_t v181 = v8;
        uint64_t v79 = v8;
        uint64_t v80 = v170;
        long long v81 = sub_25117492C(v78, v79);
        uint64_t v170 = v80;
        swift_bridgeObjectRelease();
        long long v82 = (void *)sub_2511382C8(a1);
        if (!*(void *)(v81 + 16)) {
          goto LABEL_98;
        }
        uint64_t v189 = *(void *)(v81 + 16);
        double v179 = v73;
        unint64_t v180 = v71;
        v182 = v74;
        unint64_t v8 = v81 + 32;
        unint64_t v178 = v81;
        swift_bridgeObjectRetain();
        uint64_t v186 = v75;
        while (2)
        {
          sub_2511555A4(v8, (uint64_t)&v199);
          unint64_t v9 = *((void *)&v199 + 1);
          uint64_t v6 = v199;
          uint64_t v84 = v200;
          v196 = v199;
          v197 = v200;
          uint64_t v85 = (uint64_t)v188;
          sub_25112FD4C((uint64_t)v188, (uint64_t)v75);
          v193 = __PAIR128__(v9, v6);
          v194 = v84;
          uint64_t v86 = v187;
          sub_25112FD4C(v85, (uint64_t)v187);
          sub_25112F14C(v86, (uint64_t)&v202);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&uint64_t v190 = v82;
          a1 = sub_25112F2DC(v6, v9, v84, *((uint64_t *)&v84 + 1));
          unint64_t v89 = v82[2];
          uint64_t v90 = (v88 & 1) == 0;
          uint64_t v91 = v89 + v90;
          if (__OFADD__(v89, v90)) {
            goto LABEL_166;
          }
          int64_t v92 = v88;
          if (v82[3] >= v91)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              long long v82 = (void *)v190;
              if ((v88 & 1) == 0) {
                goto LABEL_92;
              }
            }
            else
            {
              sub_25112DCC4((void (*)(void))sub_251130684, (void (*)(unsigned char *, uint64_t))sub_25112F14C);
              long long v82 = (void *)v190;
              if ((v92 & 1) == 0) {
                goto LABEL_92;
              }
            }
          }
          else
          {
            sub_2511315B4(v91, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_251130684, (void (*)(uint64_t, unsigned char *))sub_25112F14C);
            unint64_t v93 = sub_25112F2DC(v6, v9, v84, *((uint64_t *)&v84 + 1));
            if ((v92 & 1) != (v94 & 1)) {
              goto LABEL_174;
            }
            a1 = v93;
            long long v82 = (void *)v190;
            if ((v92 & 1) == 0)
            {
LABEL_92:
              v82[(a1 >> 6) + 8] |= 1 << a1;
              uint64_t v95 = v82[6] + 32 * a1;
              *(void *)uint64_t v95 = v6;
              *(void *)(v95 + 8) = v9;
              *(_OWORD *)(v95 + 16) = v84;
              sub_25112F14C(&v202, v82[7] + 40 * a1);
              id v96 = v82[2];
              uint64_t v68 = __OFADD__(v96, 1);
              uint64_t v97 = v96 + 1;
              if (v68) {
                goto LABEL_167;
              }
              v82[2] = v97;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_84:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v75 = v186;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v186);
              sub_251130098((uint64_t)&v199, (uint64_t (*)(void))sub_251155608);
              v8 += 72;
              if (!--v189)
              {
                swift_bridgeObjectRelease();
                unint64_t v9 = v177;
                uint64_t v73 = v179;
                uint64_t v71 = v180;
                a1 = MEMORY[0x263F8EE78];
LABEL_98:
                swift_bridgeObjectRelease();
                type metadata accessor for InputSignalAnchorSet();
                unint64_t v8 = swift_allocObject();
                *(void *)(v8 + 16) = v82;
                swift_release_n();
                swift_release_n();
                unint64_t v74 = v8;
                uint64_t v76 = (uint64_t)v183;
                uint64_t v6 = v172;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        uint64_t v83 = v82[7] + 40 * a1;
        __swift_destroy_boxed_opaque_existential_1(v83);
        sub_25112F14C(&v202, v83);
        goto LABEL_84;
      }
      unint64_t v22 = *(void *)(v176 + 8 * v21);
      uint64_t v23 = v18 + 1;
      if (!v22)
      {
        uint64_t v23 = v18 + 2;
        if (v18 + 2 >= (uint64_t)v175) {
          goto LABEL_64;
        }
        unint64_t v22 = *(void *)(v176 + 8 * v23);
        if (!v22)
        {
          uint64_t v23 = v18 + 3;
          if (v18 + 3 >= (uint64_t)v175) {
            goto LABEL_64;
          }
          unint64_t v22 = *(void *)(v176 + 8 * v23);
          if (!v22)
          {
            uint64_t v23 = v18 + 4;
            if (v18 + 4 >= (uint64_t)v175) {
              goto LABEL_64;
            }
            unint64_t v22 = *(void *)(v176 + 8 * v23);
            if (!v22)
            {
              uint64_t v23 = v18 + 5;
              if (v18 + 5 >= (uint64_t)v175) {
                goto LABEL_64;
              }
              unint64_t v22 = *(void *)(v176 + 8 * v23);
              if (!v22)
              {
                uint64_t v24 = v18 + 6;
                if (v18 + 6 >= (uint64_t)v175) {
                  goto LABEL_64;
                }
                unint64_t v22 = *(void *)(v176 + 8 * v24);
                if (!v22)
                {
                  while (1)
                  {
                    uint64_t v23 = v24 + 1;
                    if (__OFADD__(v24, 1)) {
                      break;
                    }
                    if (v23 >= (uint64_t)v175) {
                      goto LABEL_64;
                    }
                    unint64_t v22 = *(void *)(v176 + 8 * v23);
                    ++v24;
                    if (v22) {
                      goto LABEL_36;
                    }
                  }
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
                  goto LABEL_173;
                }
                uint64_t v23 = v18 + 6;
              }
            }
          }
        }
      }
LABEL_36:
      double v179 = (v22 - 1) & v22;
      unint64_t v180 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    uint64_t v25 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
    sub_25112FD4C(v25 + 16, (uint64_t)&v193);
    uint64_t v26 = *((void *)&v194 + 1);
    uint64_t v27 = v195;
    __swift_project_boxed_opaque_existential_1(&v193, *((uint64_t *)&v194 + 1));
    uint64_t v28 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v27 + 40);
    swift_retain();
    v28(&v190, v26, v27);
    uint64_t v181 = v191;
    v182 = v190;
    v183 = (void *)*((void *)&v191 + 1);
    double v184 = *((void *)&v190 + 1);
    sub_25112FD4C(v25 + 16, (uint64_t)&v196);
    unint64_t v178 = v25;
    uint64_t v29 = *(void *)(v25 + 64);
    unint64_t v9 = *(void *)(v29 + 16);
    if (v9) {
      break;
    }
    unint64_t v39 = (void *)MEMORY[0x263F8EE78];
LABEL_50:
    sub_251132188();
    *(void *)&v202 = sub_2511C96C0();
    uint64_t v45 = v39[2];
    unint64_t v9 = v177;
    if (v45)
    {
      uint64_t v46 = v39 + 7;
      do
      {
        long long v47 = *(v46 - 3);
        uint64_t v48 = *(v46 - 2);
        uint64_t v49 = *(v46 - 1);
        unint64_t v50 = *v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251132348((uint64_t *)&v199, v47, v48, v49, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v46 += 4;
        --v45;
      }
      while (v45);
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = v202;
    sub_25112F14C(&v196, (uint64_t)&v199);
    *((void *)&v201 + 1) = v51;
    v196 = v199;
    v197 = v200;
    v198 = v201;
    uint64_t v52 = v185;
    uint64_t v53 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v202 = v52;
    uint64_t v6 = v181;
    long long v54 = v182;
    a1 = (unint64_t)v183;
    long long v55 = v184;
    unint64_t v8 = sub_25112F2DC(v182, v184, v181, (uint64_t)v183);
    uint64_t v57 = v52[2];
    uint64_t v58 = (v56 & 1) == 0;
    uint64_t v59 = v57 + v58;
    if (__OFADD__(v57, v58))
    {
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_2511C9AC0();
      goto LABEL_3;
    }
    unint64_t v60 = v56;
    if (v52[3] >= v59)
    {
      if (v53)
      {
        uint64_t v19 = (void *)v202;
        if (v56) {
          goto LABEL_15;
        }
      }
      else
      {
        sub_2511879FC();
        uint64_t v19 = (void *)v202;
        if (v60) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      sub_251185028(v59, v53);
      uint64_t v61 = sub_25112F2DC(v54, v55, v6, a1);
      if ((v60 & 1) != (v62 & 1)) {
        goto LABEL_174;
      }
      unint64_t v8 = v61;
      uint64_t v19 = (void *)v202;
      if (v60)
      {
LABEL_15:
        sub_25118B524(&v196, v19[7] + 48 * v8);
        goto LABEL_16;
      }
    }
    v19[(v8 >> 6) + 8] |= 1 << v8;
    uint64_t v63 = (uint64_t *)(v19[6] + 32 * v8);
    *uint64_t v63 = v54;
    v63[1] = v55;
    v63[2] = v6;
    v63[3] = a1;
    unint64_t v64 = (long long *)(v19[7] + 48 * v8);
    uint64_t v65 = v196;
    unint64_t v66 = v198;
    v64[1] = v197;
    void v64[2] = v66;
    *unint64_t v64 = v65;
    uint64_t v67 = v19[2];
    uint64_t v68 = __OFADD__(v67, 1);
    unint64_t v69 = v67 + 1;
    if (v68) {
      goto LABEL_163;
    }
    void v19[2] = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v193);
    swift_release();
    unint64_t v8 = v179;
    uint64_t v18 = v180;
  }
  v206 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_251130704(0, v9, 0);
  uint64_t v6 = sub_251189038(v29);
  uint64_t v32 = v31 & 1;
  uint64_t v186 = (long long *)v29;
  uint64_t v187 = (long long *)(v29 + 56);
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v29 + 32))
  {
    if (((*(void *)((char *)v187 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_101;
    }
    if (*(_DWORD *)(v29 + 36) != v30) {
      goto LABEL_102;
    }
    v188 = (long long *)v30;
    LODWORD(v189) = v32;
    sub_251169894(*(void *)(v29 + 48) + 40 * v6, (uint64_t)&v199);
    v202 = v199;
    v203 = v200;
    char v33 = v201;
    v204 = v201;
    unint64_t v34 = *((void *)&v200 + 1);
    __swift_project_boxed_opaque_existential_1(&v202, *((uint64_t *)&v200 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v33 + 16))(v205, v34, v33);
    sub_2511698F0((uint64_t)&v202);
    BOOL v36 = v205[0];
    uint64_t v35 = v205[1];
    uint64_t v37 = v205[2];
    char v38 = v205[3];
    unint64_t v39 = (void *)v206;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251130704(0, v39[2] + 1, 1);
      unint64_t v39 = (void *)v206;
    }
    long long v41 = v39[2];
    char v40 = v39[3];
    if (v41 >= v40 >> 1)
    {
      sub_251130704(v40 > 1, v41 + 1, 1);
      unint64_t v39 = (void *)v206;
    }
    long long v39[2] = v41 + 1;
    uint64_t v42 = &v39[4 * v41];
    _OWORD v42[4] = v36;
    v42[5] = v35;
    v42[6] = v37;
    v42[7] = v38;
    uint64_t v29 = (uint64_t)v186;
    BOOL v43 = sub_2511890D8(v6, (int)v188, v189 & 1, (uint64_t)v186);
    uint64_t v6 = v43;
    uint64_t v32 = v44 & 1;
    if (!--v9)
    {
      sub_25118B574(v43, v30, v32);
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  swift_bridgeObjectRelease();
  unint64_t v74 = 0;
LABEL_104:
  uint64_t v99 = *(void *)(v6 + 16);
  uint64_t v98 = *(void *)(v6 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v98 + 40);
  uint64_t v102 = v169;
  unint64_t v178 = v98 + 40;
  double v179 = ObjectType;
  v175 = v101;
  v101(ObjectType, v98);
  swift_retain_n();
  a1 = (unint64_t)v185;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v103 = sub_2511C9280();
  unint64_t v104 = sub_2511C9770();
  LODWORD(v189) = v104;
  uint64_t v105 = os_log_type_enabled(v103, v104);
  uint64_t v181 = v99;
  v182 = v74;
  unint64_t v180 = v98;
  if (v105)
  {
    uint64_t v106 = swift_slowAlloc();
    v188 = (long long *)swift_slowAlloc();
    *(void *)&v196 = v188;
    *(_DWORD *)uint64_t v106 = 136315906;
    *(void *)&v199 = v99;
    *((void *)&v199 + 1) = v98;
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_unknownObjectRetain();
    uint64_t v107 = sub_2511C94C0();
    *(void *)&v199 = sub_251140E4C(v107, v108, (uint64_t *)&v196);
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 12) = 2048;
    swift_bridgeObjectRelease();
    *(void *)&v199 = v184;
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 22) = 2048;
    uint64_t v109 = *(void *)(a1 + 16);
    swift_bridgeObjectRelease();
    *(void *)&v199 = v109;
    unint64_t v9 = v177;
    sub_2511C98A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 32) = 2048;
    unint64_t v110 = *(void *)(*(void *)(v6 + 48) + 16);
    swift_release();
    *(void *)&v199 = v110;
    unint64_t v74 = v182;
    sub_2511C98A0();
    swift_release();
    _os_log_impl(&dword_25112A000, v103, (os_log_type_t)v189, "[%s]: Beginning registration of %ld criteria at %ld of %ld sources", (uint8_t *)v106, 0x2Au);
    uint64_t v111 = (uint64_t)v188;
    swift_arrayDestroy();
    MEMORY[0x253397D40](v111, -1, -1);
    MEMORY[0x253397D40](v106, -1, -1);

    uint64_t v112 = *(uint64_t (**)(int64_t, uint64_t))(v168 + 8);
    unint64_t v113 = v169;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v112 = *(uint64_t (**)(int64_t, uint64_t))(v168 + 8);
    unint64_t v113 = v102;
  }
  uint64_t v173 = (unint64_t)v112;
  uint64_t v114 = v112(v113, v171);
  MEMORY[0x270FA5388](v114);
  *(&v166 - 2) = v166;
  *(&v166 - 1) = a1;
  unint64_t v116 = (uint64_t)&v115[4];
  uint64_t v117 = v115 + 22;
  os_unfair_lock_lock(v115 + 22);
  sub_25118B580(v116);
  os_unfair_lock_unlock(v117);
  swift_bridgeObjectRelease();
  if (!*(void *)(v9 + 16))
  {
    swift_bridgeObjectRelease();
    os_unfair_lock_lock(v117);
    sub_25118B59C(v116, &v199);
    os_unfair_lock_unlock(v117);
    ((void (*)(void))v199)();
    swift_release();
    return swift_release();
  }
  uint64_t v119 = 0;
  uint64_t v120 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v121 = -1;
  if (v120 < 64) {
    uint64_t v121 = ~(-1 << v120);
  }
  uint64_t v122 = v121 & *(void *)(v9 + 64);
  uint64_t v169 = (unint64_t)(v120 + 63) >> 6;
  uint64_t v170 = v168 + 8;
  *(void *)&objc_super v118 = 136315394;
  uint64_t v168 = v118;
  double v167 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    unint64_t v8 = (unint64_t)v174;
    if (v122)
    {
      uint64_t v123 = __clz(__rbit64(v122));
      uint64_t v124 = (v122 - 1) & v122;
      uint64_t v125 = v123 | (v119 << 6);
      goto LABEL_130;
    }
    int64_t v126 = v119 + 1;
    if (__OFADD__(v119, 1)) {
      goto LABEL_168;
    }
    if (v126 >= v169)
    {
LABEL_157:
      swift_release();
      return swift_release();
    }
    uint64_t v127 = *(void *)(v176 + 8 * v126);
    ++v119;
    if (!v127)
    {
      uint64_t v119 = v126 + 1;
      if (v126 + 1 >= v169) {
        goto LABEL_157;
      }
      uint64_t v127 = *(void *)(v176 + 8 * v119);
      if (!v127)
      {
        uint64_t v119 = v126 + 2;
        if (v126 + 2 >= v169) {
          goto LABEL_157;
        }
        uint64_t v127 = *(void *)(v176 + 8 * v119);
        if (!v127)
        {
          uint64_t v119 = v126 + 3;
          if (v126 + 3 >= v169) {
            goto LABEL_157;
          }
          uint64_t v127 = *(void *)(v176 + 8 * v119);
          if (!v127) {
            break;
          }
        }
      }
    }
LABEL_129:
    uint64_t v124 = (v127 - 1) & v127;
    uint64_t v125 = __clz(__rbit64(v127)) + (v119 << 6);
LABEL_130:
    uint64_t v186 = (long long *)v124;
    uint64_t v187 = (long long *)v119;
    uint64_t v129 = *(long long **)(*(void *)(v9 + 56) + 8 * v125);
    v188 = v129;
    if (v74)
    {
      uint64_t v130 = *(void *)(v74 + 16);
      sub_25112FD4C((uint64_t)(v129 + 1), (uint64_t)&v196);
      uint64_t v131 = *((void *)&v197 + 1);
      int64_t v132 = v198;
      __swift_project_boxed_opaque_existential_1(&v196, *((uint64_t *)&v197 + 1));
      a1 = *(void *)(v132 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      ((void (*)(unsigned long long *__return_ptr, uint64_t, uint64_t))a1)(&v193, v131, v132);
      uint64_t v134 = v180;
      int64_t v133 = v181;
      if (*(void *)(v130 + 16)
        && (uint64_t v135 = sub_25112F2DC(v193, *((uint64_t *)&v193 + 1), v194, *((uint64_t *)&v194 + 1)), (v136 & 1) != 0))
      {
        sub_25112FD4C(*(void *)(v130 + 56) + 40 * v135, (uint64_t)&v199);
      }
      else
      {
        *(void *)&v201 = 0;
        v199 = 0u;
        v200 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
      unint64_t v8 = (unint64_t)v174;
      uint64_t v129 = v188;
    }
    else
    {
      *(void *)&v201 = 0;
      v199 = 0u;
      v200 = 0u;
      swift_retain();
      uint64_t v134 = v180;
      int64_t v133 = v181;
    }
    v175(v179, v134);
    swift_retain_n();
    swift_retain_n();
    long long v137 = v8;
    unint64_t v8 = sub_2511C9280();
    uint64_t v138 = sub_2511C9770();
    if (os_log_type_enabled((os_log_t)v8, v138))
    {
      a1 = swift_slowAlloc();
      long long v139 = swift_slowAlloc();
      *(void *)&v193 = v139;
      *(_DWORD *)a1 = v168;
      *(void *)&v196 = v133;
      *((void *)&v196 + 1) = v134;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      long long v140 = sub_2511C94C0();
      *(void *)(a1 + 4) = sub_251140E4C(v140, v141, (uint64_t *)&v193);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 12) = 2080;
      uint64_t v142 = v129 + 1;
      long long v143 = *((void *)v129 + 5);
      long long v144 = *((void *)v129 + 6);
      long long v145 = __swift_project_boxed_opaque_existential_1(v142, v143);
      uint64_t v146 = *(void *)(v143 - 8);
      MEMORY[0x270FA5388](v145);
      uint64_t v148 = (char *)&v166 - ((v147 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v146 + 16))(v148);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v144 + 40))(&v196, v143, v144);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v143);
      uint64_t v149 = *((void *)&v197 + 1);
      if (*((void *)&v197 + 1))
      {
        uint64_t v150 = v197;
      }
      else
      {
        uint64_t v150 = v196;
        uint64_t v149 = swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      *(void *)(a1 + 14) = sub_251140E4C(v150, v149, (uint64_t *)&v193);
      uint64_t v129 = v188;
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25112A000, (os_log_t)v8, v138, "[%s]: Beginning observation of %s", (uint8_t *)a1, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v139, -1, -1);
      MEMORY[0x253397D40](a1, -1, -1);

      uint64_t v151 = v174;
    }
    else
    {

      swift_release_n();
      swift_release_n();
      uint64_t v151 = (char *)v137;
    }
    ((void (*)(char *, uint64_t))v173)(v151, v171);
    sub_25112FD4C((uint64_t)(v129 + 1), (uint64_t)&v196);
    uint64_t v152 = *((void *)&v197 + 1);
    uint64_t v153 = v198;
    v154 = __swift_project_boxed_opaque_existential_1(&v196, *((uint64_t *)&v197 + 1));
    swift_beginAccess();
    uint64_t v6 = *((void *)v129 + 7);
    unint64_t v9 = *(void *)(v6 + 16);
    if (v9)
    {
      v183 = v154;
      double v184 = v153;
      uint64_t v185 = (void *)v152;
      v206 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25116B868(0, v9, 0);
      uint64_t v155 = sub_251189038(v6);
      int v157 = v156;
      uint64_t v159 = v158 & 1;
      uint64_t v189 = v6 + 56;
      while ((v155 & 0x8000000000000000) == 0 && v155 < 1 << *(unsigned char *)(v6 + 32))
      {
        if (((*(void *)(v189 + (((unint64_t)v155 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v155) & 1) == 0) {
          goto LABEL_160;
        }
        if (*(_DWORD *)(v6 + 36) != v157) {
          goto LABEL_161;
        }
        sub_251169894(*(void *)(v6 + 48) + 40 * v155, (uint64_t)&v202);
        uint64_t v190 = v202;
        v191 = v203;
        uint64_t v192 = v204;
        sub_25112FD4C((uint64_t)&v190, (uint64_t)&v193);
        sub_2511698F0((uint64_t)&v190);
        unint64_t v8 = v206;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25116B868(0, *(void *)(v8 + 16) + 1, 1);
          unint64_t v8 = v206;
        }
        uint64_t v161 = *(void *)(v8 + 16);
        unint64_t v160 = *(void *)(v8 + 24);
        a1 = v161 + 1;
        if (v161 >= v160 >> 1)
        {
          sub_25116B868(v160 > 1, v161 + 1, 1);
          unint64_t v8 = v206;
        }
        *(void *)(v8 + 16) = a1;
        sub_25112F14C((long long *)&v193, v8 + 40 * v161 + 32);
        uint64_t v162 = sub_2511890D8(v155, v157, v159 & 1, v6);
        uint64_t v155 = v162;
        int v157 = v163;
        uint64_t v159 = v164 & 1;
        if (!--v9)
        {
          sub_25118B574(v162, v163, v164 & 1);
          swift_bridgeObjectRelease();
          uint64_t v153 = v184;
          uint64_t v152 = (uint64_t)v185;
          goto LABEL_111;
        }
      }
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    unint64_t v8 = MEMORY[0x263F8EE78];
LABEL_111:
    sub_25117AE78((uint64_t)&v199, v8, v152, v153);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25118B7E8((uint64_t)&v199, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
    unint64_t v9 = v177;
    unint64_t v74 = v182;
    uint64_t v122 = (unint64_t)v186;
    uint64_t v119 = (uint64_t)v187;
  }
  uint64_t v128 = v126 + 4;
  if (v128 >= v169) {
    goto LABEL_157;
  }
  uint64_t v127 = *(void *)(v176 + 8 * v128);
  if (v127)
  {
    uint64_t v119 = v128;
    goto LABEL_129;
  }
  while (1)
  {
    uint64_t v119 = v128 + 1;
    if (__OFADD__(v128, 1)) {
      break;
    }
    if (v119 >= v169) {
      goto LABEL_157;
    }
    uint64_t v127 = *(void *)(v176 + 8 * v119);
    ++v128;
    if (v127) {
      goto LABEL_129;
    }
  }
LABEL_173:
  __break(1u);
LABEL_174:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

void sub_251178F78(uint64_t a1, os_unfair_lock_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v16 = sub_2511C92A0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  os_unfair_lock_lock(a2 + 6);
  sub_25118B8C4((uint64_t)&a2[4], v38);
  os_unfair_lock_unlock(a2 + 6);
  unint64_t v20 = v38[0];
  if (v38[0])
  {
    uint64_t v31 = v16;
    uint64_t v21 = *(void *)(a4 + 16);
    uint64_t v22 = *(void *)(a4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v22 + 40))(ObjectType, v22);
    swift_retain_n();
    uint64_t v24 = sub_2511C9280();
    os_log_type_t v25 = sub_2511C9770();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v38[1] = v22;
      uint64_t v39 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v30 = v26 + 4;
      v38[0] = v21;
      sub_251131944(0, (unint64_t *)&qword_26B216848);
      swift_unknownObjectRetain();
      uint64_t v28 = sub_2511C94C0();
      v38[0] = sub_251140E4C(v28, v29, &v39);
      sub_2511C98A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      *(double *)char v38 = CFAbsoluteTimeGetCurrent() - a8;
      sub_2511C98A0();
      _os_log_impl(&dword_25112A000, v24, v25, "[%s]: Work criteria ready after %fs.", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x253397D40](v27, -1, -1);
      MEMORY[0x253397D40](v26, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v31);
    sub_25117780C(v20);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_251179278@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v10 = a3;
  if ((unint64_t)a3 >> 62) {
    goto LABEL_12;
  }
  uint64_t v13 = *(void *)(((unint64_t)a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  sub_25113822C((uint64_t)a2);
  swift_unknownObjectRetain();
  if (v13)
  {
    while (1)
    {
      uint64_t v28 = MEMORY[0x263F8EE78];
      uint64_t result = sub_2511C9A20();
      if (v13 < 0) {
        break;
      }
      uint64_t v20 = a7;
      uint64_t v21 = a8;
      uint64_t v15 = 0;
      a7 = *(void *)(a4 + 16);
      uint64_t v24 = *(void *)(a4 + 24);
      unint64_t v25 = (unint64_t)v10 & 0xC000000000000001;
      a8 = v10;
      while (v13 != v15)
      {
        if (v25)
        {
          uint64_t v16 = MEMORY[0x2533971C0](v15, v10);
        }
        else
        {
          uint64_t v16 = v10[v15 + 4];
          swift_retain();
        }
        ++v15;
        long long v17 = a2[1];
        v27[0] = *a2;
        v27[1] = v17;
        _OWORD v27[2] = a2[2];
        type metadata accessor for WorkCriteriaRecord();
        swift_allocObject();
        sub_25113822C((uint64_t)a2);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        sub_2511C686C(a7, v24, v27, a5, a6, v16);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release_n();
        sub_2511C99F0();
        sub_2511C9A30();
        sub_2511C9A40();
        sub_2511C9A00();
        uint64_t v10 = a8;
        if (v13 == v15)
        {
          uint64_t v18 = v28;
          swift_unknownObjectRelease();
          sub_251138278((uint64_t)a2);
          swift_release();
          a8 = v21;
          a7 = v20;
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_12:
      swift_retain();
      sub_25113822C((uint64_t)a2);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_2511C9AC0();
      swift_bridgeObjectRelease();
      if (!v13) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_unknownObjectRelease();
    sub_251138278((uint64_t)a2);
    swift_release();
    uint64_t v18 = MEMORY[0x263F8EE78];
LABEL_14:
    sub_25113822C((uint64_t)a2);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v27[0] = *(void *)a1;
    *(void *)a1 = 0x8000000000000000;
    sub_2511A9D8C(v18, a2, isUniquelyReferenced_nonNull_native);
    *(void *)a1 = *(void *)&v27[0];
    swift_bridgeObjectRelease();
    sub_251138278((uint64_t)a2);
    if (*(void *)(*(void *)a1 + 16) == *(void *)(a7 + 16)) {
      uint64_t result = swift_bridgeObjectRetain();
    }
    else {
      uint64_t result = 0;
    }
    *a8 = result;
  }
  return result;
}

unsigned char *sub_251179544@<X0>(unsigned char *result@<X0>, void *a2@<X8>)
{
  if (result[32] == 2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    result[32] = 2;
    uint64_t v4 = *(void *)result;
    int64_t v5 = *(void *)(*(void *)result + 16);
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (v5)
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25116B8E0(0, v5, 0);
      uint64_t v6 = v4 + 32;
      uint64_t v3 = v11;
      do
      {
        sub_251139AA0(v6, (uint64_t)v9);
        sub_25112FD4C((uint64_t)v9, (uint64_t)v10);
        sub_251139A70((uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25116B8E0(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v11;
        }
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_25116B8E0(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v11;
        }
        *(void *)(v3 + 16) = v8 + 1;
        sub_25112F14C(v10, v3 + 40 * v8 + 32);
        v6 += 48;
        --v5;
      }
      while (v5);
      uint64_t result = (unsigned char *)swift_bridgeObjectRelease();
    }
  }
  *a2 = v3;
  return result;
}

uint64_t sub_251179698(uint64_t result, uint64_t *a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = *(void *)(v2 + 48);
    uint64_t v6 = result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_25112FD4C(v6, (uint64_t)v30);
      uint64_t v7 = v31;
      uint64_t v8 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 16))(&v22, v7, v8);
      if (*(void *)(v5 + 16) && (unint64_t v9 = sub_25112F2DC(v22, v23, v24, v25), (v10 & 1) != 0))
      {
        sub_25112FD4C(*(void *)(v5 + 56) + 40 * v9, (uint64_t)&v26);
      }
      else
      {
        uint64_t v28 = 0;
        long long v26 = 0u;
        long long v27 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v27 + 1))
      {
        sub_25112F14C(&v26, (uint64_t)v29);
        uint64_t v11 = v31;
        uint64_t v12 = v32;
        __swift_project_boxed_opaque_existential_1(v30, v31);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 16))(&v22, v11, v12);
        uint64_t v13 = *a2;
        if (*(void *)(*a2 + 16) && (unint64_t v14 = sub_25112F2DC(v22, v23, v24, v25), (v15 & 1) != 0))
        {
          uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
          swift_retain();
        }
        else
        {
          sub_25112FD4C((uint64_t)v29, (uint64_t)&v26);
          type metadata accessor for Orchestrator.InputSignalSetupRecord();
          swift_allocObject();
          uint64_t v16 = sub_2511755E4((uint64_t)&v26, MEMORY[0x263F8EE78], MEMORY[0x263F8EE78]);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25112FD4C((uint64_t)v30, (uint64_t)&v22);
        swift_beginAccess();
        sub_2511A472C((uint64_t)&v26, (uint64_t)&v22);
        sub_2511698F0((uint64_t)&v26);
        swift_endAccess();
        uint64_t v17 = v31;
        uint64_t v18 = v32;
        __swift_project_boxed_opaque_existential_1(v30, v31);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v18 + 16))(&v26, v17, v18);
        long long v19 = v26;
        long long v20 = v27;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = *a2;
        *a2 = 0x8000000000000000;
        sub_2511A9840(v16, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), isUniquelyReferenced_nonNull_native);
        *a2 = v22;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      else
      {
        sub_25118B7E8((uint64_t)&v26, qword_26B2178F8, (unint64_t *)&qword_26B2178E8, (uint64_t)&protocol descriptor for InputSignal);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      v6 += 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2511799A0(uint64_t a1)
{
  uint64_t v91 = sub_2511C92A0();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  int64_t v92 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = MEMORY[0x263F8EE80];
  uint64_t v93 = a1;
  uint64_t v95 = v1;
  sub_251179698(a1, &v122);
  uint64_t v94 = 0;
  uint64_t v96 = 0;
  uint64_t v5 = v122;
LABEL_2:
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v97 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v6;
  int64_t v98 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v100 = v5;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      uint64_t v12 = (v9 - 1) & v9;
      int64_t v106 = v10;
      unint64_t v13 = v11 | (v10 << 6);
    }
    else
    {
      BOOL v14 = __OFADD__(v10, 1);
      int64_t v15 = v10 + 1;
      if (v14)
      {
        __break(1u);
        goto LABEL_100;
      }
      if (v15 >= v98) {
        goto LABEL_82;
      }
      unint64_t v16 = *(void *)(v97 + 8 * v15);
      if (!v16)
      {
        int64_t v17 = v15 + 1;
        if (v15 + 1 >= v98) {
          goto LABEL_82;
        }
        unint64_t v16 = *(void *)(v97 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v15 + 2;
          if (v15 + 2 >= v98) {
            goto LABEL_82;
          }
          unint64_t v16 = *(void *)(v97 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v15 + 3 >= v98) {
              goto LABEL_82;
            }
            unint64_t v16 = *(void *)(v97 + 8 * v17);
            if (!v16)
            {
              int64_t v17 = v15 + 4;
              if (v15 + 4 >= v98)
              {
LABEL_82:
                swift_release();
                uint64_t v69 = v122;
                uint64_t v70 = swift_bridgeObjectRetain();
                uint64_t v71 = v96;
                uint64_t v72 = sub_251174D64(v70);
                uint64_t v96 = v71;
                swift_bridgeObjectRelease();
                *(void *)&long long v111 = v93;
                swift_bridgeObjectRetain();
                sub_2511B079C(v72);
                *(void *)&long long v119 = MEMORY[0x263F8EE80];
                sub_251179698(v111, (uint64_t *)&v119);
                swift_bridgeObjectRelease();
                uint64_t v5 = v119;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                char v73 = sub_2511644F8(v69, v5);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v73) {
                  goto LABEL_96;
                }
                uint64_t v74 = *(void *)(v69 + 16);
                uint64_t v75 = *(void *)(v5 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v122 = v5;
                if (v74 == v75)
                {
                  uint64_t v76 = v94 + 1;
                  uint64_t v2 = v92;
                  uint64_t v77 = v95;
                  if (__OFADD__(v94, 1)) {
                    goto LABEL_105;
                  }
                  uint64_t v78 = *(void *)(v5 + 16);
                  swift_bridgeObjectRelease();
                  if (v78 < v76)
                  {
                    uint64_t v79 = *(void *)(v77 + 16);
                    uint64_t v80 = *(void *)(v77 + 24);
                    uint64_t ObjectType = swift_getObjectType();
                    (*(void (**)(uint64_t, uint64_t))(v80 + 40))(ObjectType, v80);
                    swift_retain_n();
                    unint64_t v9 = sub_2511C9280();
                    os_log_type_t v82 = sub_2511C9760();
                    if (os_log_type_enabled((os_log_t)v9, v82))
                    {
                      uint64_t v84 = (uint8_t *)swift_slowAlloc();
                      uint64_t v85 = swift_slowAlloc();
                      *(void *)&long long v116 = v85;
                      *(_DWORD *)uint64_t v84 = 136315138;
                      *(void *)&long long v111 = v79;
                      *((void *)&v111 + 1) = v80;
                      sub_251131944(0, (unint64_t *)&qword_26B216848);
                      swift_unknownObjectRetain();
                      uint64_t v86 = sub_2511C94C0();
                      *(void *)&long long v111 = sub_251140E4C(v86, v87, (uint64_t *)&v116);
                      sub_2511C98A0();
                      swift_release_n();
                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_25112A000, (os_log_t)v9, v82, "[%s]: Failed to close input signal configurations; bailing with what we have.",
                        v84,
                        0xCu);
                      swift_arrayDestroy();
                      MEMORY[0x253397D40](v85, -1, -1);
                      MEMORY[0x253397D40](v84, -1, -1);

LABEL_101:
                      (*(void (**)(char *, uint64_t))(v90 + 8))(v2, v91);
                      return v122;
                    }
LABEL_100:

                    swift_release_n();
                    goto LABEL_101;
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v76 = 0;
                }
                uint64_t v94 = v76;
                goto LABEL_2;
              }
              unint64_t v16 = *(void *)(v97 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v15 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    break;
                  }
                  if (v15 >= v98) {
                    goto LABEL_82;
                  }
                  unint64_t v16 = *(void *)(v97 + 8 * v15);
                  ++v17;
                  if (v16) {
                    goto LABEL_21;
                  }
                }
                __break(1u);
LABEL_104:
                __break(1u);
LABEL_105:
                __break(1u);
                goto LABEL_106;
              }
            }
          }
        }
        int64_t v15 = v17;
      }
LABEL_21:
      uint64_t v12 = (v16 - 1) & v16;
      int64_t v106 = v15;
      unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    }
    unint64_t v105 = v12;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v13);
    sub_25112FD4C(v18 + 16, (uint64_t)&v111);
    uint64_t v19 = *((void *)&v112 + 1);
    uint64_t v20 = v113;
    uint64_t v21 = __swift_project_boxed_opaque_existential_1(&v111, *((uint64_t *)&v112 + 1));
    swift_beginAccess();
    uint64_t v22 = *(void *)(v18 + 56);
    int64_t v23 = *(void *)(v22 + 16);
    uint64_t v104 = v18;
    if (v23)
    {
      uint64_t v101 = v21;
      uint64_t v102 = v20;
      uint64_t v103 = v19;
      uint64_t v121 = MEMORY[0x263F8EE78];
      swift_retain();
      swift_bridgeObjectRetain();
      sub_25116B868(0, v23, 0);
      uint64_t v24 = sub_251189038(v22);
      unsigned int v26 = v25;
      uint64_t v27 = 0;
      char v29 = v28 & 1;
      uint64_t v30 = v22 + 56;
      char v31 = *(unsigned char *)(v22 + 32);
      uint64_t v107 = v25;
      uint64_t v99 = v22 + 88;
      uint64_t v110 = v22;
      uint64_t v109 = v22 + 56;
      int64_t v108 = v23;
      while (1)
      {
        if (v24 < 0 || v24 >= 1 << v31)
        {
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          swift_bridgeObjectRelease();
          return v122;
        }
        unint64_t v34 = (unint64_t)v24 >> 6;
        if ((*(void *)(v30 + 8 * ((unint64_t)v24 >> 6)) & (1 << v24)) == 0) {
          goto LABEL_90;
        }
        if (*(_DWORD *)(v22 + 36) != v26) {
          goto LABEL_91;
        }
        sub_251169894(*(void *)(v22 + 48) + 40 * v24, (uint64_t)&v116);
        v114[0] = v116;
        v114[1] = v117;
        uint64_t v115 = v118;
        sub_25112FD4C((uint64_t)v114, (uint64_t)&v119);
        sub_2511698F0((uint64_t)v114);
        uint64_t v35 = v121;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25116B868(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v121;
        }
        unint64_t v37 = *(void *)(v35 + 16);
        unint64_t v36 = *(void *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_25116B868(v36 > 1, v37 + 1, 1);
          uint64_t v35 = v121;
        }
        *(void *)(v35 + 16) = v37 + 1;
        sub_25112F14C(&v119, v35 + 40 * v37 + 32);
        if (v29) {
          goto LABEL_104;
        }
        uint64_t v22 = v110;
        char v31 = *(unsigned char *)(v110 + 32);
        unint64_t v32 = 1 << v31;
        if (v24 >= 1 << v31) {
          goto LABEL_92;
        }
        uint64_t v30 = v109;
        uint64_t v38 = *(void *)(v109 + 8 * v34);
        if ((v38 & (1 << v24)) == 0) {
          goto LABEL_93;
        }
        if (*(_DWORD *)(v110 + 36) != v26) {
          goto LABEL_94;
        }
        unint64_t v39 = v38 & (-2 << (v24 & 0x3F));
        if (v39)
        {
          unint64_t v32 = __clz(__rbit64(v39)) | v24 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v40 = v34 + 1;
          unint64_t v41 = (v32 + 63) >> 6;
          if (v34 + 1 < v41)
          {
            unint64_t v42 = *(void *)(v109 + 8 * v40);
            if (v42) {
              goto LABEL_42;
            }
            unint64_t v40 = v34 + 2;
            if (v34 + 2 < v41)
            {
              unint64_t v42 = *(void *)(v109 + 8 * v40);
              if (v42) {
                goto LABEL_42;
              }
              unint64_t v40 = v34 + 3;
              if (v34 + 3 < v41)
              {
                unint64_t v42 = *(void *)(v109 + 8 * v40);
                if (v42)
                {
LABEL_42:
                  int64_t v33 = v108;
                  unint64_t v32 = __clz(__rbit64(v42)) + (v40 << 6);
                  goto LABEL_26;
                }
                while (v41 - 4 != v34)
                {
                  unint64_t v42 = *(void *)(v99 + 8 * v34++);
                  if (v42)
                  {
                    unint64_t v40 = v34 + 3;
                    goto LABEL_42;
                  }
                }
              }
            }
          }
        }
        int64_t v33 = v108;
LABEL_26:
        char v29 = 0;
        ++v27;
        unsigned int v26 = v107;
        uint64_t v24 = v32;
        if (v27 == v33)
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = v103;
          uint64_t v20 = v102;
          goto LABEL_52;
        }
      }
    }
    swift_retain();
    uint64_t v35 = MEMORY[0x263F8EE78];
LABEL_52:
    uint64_t v43 = sub_25117A69C(v35, v19, v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
    int64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      *(void *)&long long v119 = MEMORY[0x263F8EE78];
      sub_25116B848(0, v44, 0);
      uint64_t v2 = (char *)v119;
      uint64_t v45 = v43 + 32;
      do
      {
        sub_25112FD4C(v45, (uint64_t)&v111);
        *(void *)&long long v119 = v2;
        unint64_t v47 = *((void *)v2 + 2);
        unint64_t v46 = *((void *)v2 + 3);
        if (v47 >= v46 >> 1)
        {
          sub_25116B848(v46 > 1, v47 + 1, 1);
          uint64_t v2 = (char *)v119;
        }
        *((void *)v2 + 2) = v47 + 1;
        uint64_t v48 = &v2[40 * v47];
        long long v49 = v111;
        long long v50 = v112;
        *((void *)v48 + 8) = v113;
        *((_OWORD *)v48 + 2) = v49;
        *((_OWORD *)v48 + 3) = v50;
        v45 += 40;
        --v44;
      }
      while (v44);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = (char *)MEMORY[0x263F8EE78];
    }
    sub_25118B794();
    uint64_t v51 = sub_2511C96C0();
    uint64_t v52 = *((void *)v2 + 2);
    if (v52) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    *(void *)(v104 + 64) = v51;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = v100;
    int64_t v10 = v106;
    unint64_t v9 = v105;
  }
  uint64_t v53 = 0;
  while (1)
  {
    sub_251169894((uint64_t)&v2[40 * v53 + 32], (uint64_t)&v119);
    sub_2511C9D40();
    __swift_project_boxed_opaque_existential_1(&v119, v120);
    swift_bridgeObjectRetain();
    sub_2511C9450();
    uint64_t v54 = sub_2511C9D80();
    uint64_t v55 = -1 << *(unsigned char *)(v51 + 32);
    unint64_t v56 = v54 & ~v55;
    if ((*(void *)(v51 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56))
    {
      uint64_t v57 = ~v55;
      do
      {
        sub_251169894(*(void *)(v51 + 48) + 40 * v56, (uint64_t)&v111);
        uint64_t v58 = *((void *)&v112 + 1);
        __swift_project_boxed_opaque_existential_1(&v111, *((uint64_t *)&v112 + 1));
        LOBYTE(v58) = sub_251175254((uint64_t)&v119, v58);
        sub_2511698F0((uint64_t)&v111);
        if (v58) {
          goto LABEL_61;
        }
        unint64_t v56 = (v56 + 1) & v57;
      }
      while (((*(void *)(v51 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251169894((uint64_t)&v119, (uint64_t)&v116);
    *(void *)&v114[0] = v51;
    if (*(void *)(v51 + 24) <= *(void *)(v51 + 16)) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2511A7398();
      uint64_t v51 = *(void *)&v114[0];
    }
LABEL_76:
    *(void *)(v51 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v56;
    uint64_t v64 = *(void *)(v51 + 48) + 40 * v56;
    long long v65 = v116;
    long long v66 = v117;
    *(void *)(v64 + 32) = v118;
    *(_OWORD *)uint64_t v64 = v65;
    *(_OWORD *)(v64 + 16) = v66;
    uint64_t v67 = *(void *)(v51 + 16);
    BOOL v14 = __OFADD__(v67, 1);
    uint64_t v68 = v67 + 1;
    if (v14) {
      goto LABEL_95;
    }
    *(void *)(v51 + 16) = v68;
LABEL_61:
    swift_bridgeObjectRelease();
    sub_2511698F0((uint64_t)&v119);
    if (++v53 == v52) {
      goto LABEL_6;
    }
  }
  if (isUniquelyReferenced_nonNull_native) {
    sub_2511A51FC();
  }
  else {
    sub_2511A7FB0();
  }
  uint64_t v51 = *(void *)&v114[0];
  sub_2511C9D40();
  __swift_project_boxed_opaque_existential_1(&v116, *((uint64_t *)&v117 + 1));
  sub_2511C9450();
  uint64_t v60 = sub_2511C9D80();
  uint64_t v61 = -1 << *(unsigned char *)(v51 + 32);
  unint64_t v56 = v60 & ~v61;
  if (((*(void *)(v51 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) == 0) {
    goto LABEL_76;
  }
  uint64_t v62 = ~v61;
  while (1)
  {
    sub_251169894(*(void *)(v51 + 48) + 40 * v56, (uint64_t)&v111);
    uint64_t v63 = *((void *)&v112 + 1);
    __swift_project_boxed_opaque_existential_1(&v111, *((uint64_t *)&v112 + 1));
    LOBYTE(v63) = sub_251175254((uint64_t)&v116, v63);
    sub_2511698F0((uint64_t)&v111);
    if (v63) {
      break;
    }
    unint64_t v56 = (v56 + 1) & v62;
    if (((*(void *)(v51 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) == 0) {
      goto LABEL_76;
    }
  }
LABEL_106:
  uint64_t result = sub_2511C9CC0();
  __break(1u);
  return result;
}

uint64_t sub_25117A69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25118B2B0(0, &qword_26B217EE0, (unint64_t *)&qword_26B216860, (uint64_t)&protocol descriptor for InputSignalConfiguration, MEMORY[0x263F8D488]);
  swift_getAssociatedTypeWitness();
  sub_25118B620();
  sub_2511C9570();
  uint64_t v4 = (*(uint64_t (**)(void))(a3 + 72))();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25117A7A8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)result + 64);
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    BOOL v14 = a2;
    uint64_t v20 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25116B868(0, v3, 0);
    uint64_t result = sub_251189038(v2);
    int64_t v5 = result;
    int v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
    {
      if (((*(void *)(v2 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(v2 + 36) != v7) {
        goto LABEL_16;
      }
      sub_251169894(*(void *)(v2 + 48) + 40 * v5, (uint64_t)v17);
      v15[0] = v17[0];
      v15[1] = v17[1];
      uint64_t v16 = v18;
      sub_25112FD4C((uint64_t)v15, (uint64_t)v19);
      sub_2511698F0((uint64_t)v15);
      uint64_t v4 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25116B868(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v20;
      }
      unint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_25116B868(v10 > 1, v11 + 1, 1);
        uint64_t v4 = v20;
      }
      *(void *)(v4 + 16) = v11 + 1;
      sub_25112F14C(v19, v4 + 40 * v11 + 32);
      uint64_t result = sub_2511890D8(v5, v7, v9 & 1, v2);
      int64_t v5 = result;
      int v7 = v12;
      char v9 = v13 & 1;
      if (!--v3)
      {
        sub_25118B574(result, v12, v13 & 1);
        uint64_t result = swift_bridgeObjectRelease();
        a2 = v14;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    *a2 = v4;
  }
  return result;
}

uint64_t *sub_25117A980@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if ((unint64_t)*result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2511C9AC0();
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4)
  {
LABEL_12:
    *a2 = v5;
    return result;
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t *)sub_2511C9A20();
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t result = 0;
      do
      {
        int v6 = (uint64_t *)((char *)result + 1);
        MEMORY[0x2533971C0]();
        swift_retain();
        swift_unknownObjectRelease();
        sub_2511C99F0();
        sub_2511C9A30();
        sub_2511C9A40();
        sub_2511C9A00();
        uint64_t result = v6;
      }
      while ((uint64_t *)v4 != v6);
    }
    else
    {
      uint64_t v7 = v3 + 32;
      do
      {
        v7 += 8;
        swift_retain();
        sub_2511C99F0();
        sub_2511C9A30();
        sub_2511C9A40();
        uint64_t result = (uint64_t *)sub_2511C9A00();
        --v4;
      }
      while (v4);
    }
    uint64_t v5 = v8;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_25117AAF8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_2511C429C(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a1 = v5;
  *(CFAbsoluteTime *)(a1 + 48) = CFAbsoluteTimeGetCurrent();
}

void (*sub_25117AB74(uint64_t a1))()
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2511C92A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double Current = CFAbsoluteTimeGetCurrent();
  double v9 = *(double *)(a1 + 48);
  double v10 = *(double *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(ObjectType, v11);
  swift_retain_n();
  char v13 = sub_2511C9280();
  os_log_type_t v14 = sub_2511C9770();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v4;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v11;
    uint64_t v29 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    v25[1] = v16 + 4;
    double v27 = v10;
    sub_251131944(0, (unint64_t *)&qword_26B216848);
    swift_unknownObjectRetain();
    uint64_t v18 = sub_2511C94C0();
    double v27 = COERCE_DOUBLE(sub_251140E4C(v18, v19, &v29));
    sub_2511C98A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    double v27 = Current - v9;
    sub_2511C98A0();
    _os_log_impl(&dword_25112A000, v13, v14, "[%s]: Initial registration complete after %fs.", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253397D40](v17, -1, -1);
    MEMORY[0x253397D40](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(unsigned char *)(a1 + 34) = 1;
  uint64_t v20 = sub_2511373E4(a1);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int64_t v23 = (void *)swift_allocObject();
  double v23[2] = v2;
  void v23[3] = v20;
  v23[4] = v21;
  void v23[5] = v22;
  swift_retain();
  return sub_25118A874;
}

uint64_t sub_25117AE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_2511C9890();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  os_log_type_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v22 = (char *)&v22 - v16;
  v29[0] = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  sub_25118B2B0(0, &qword_26B217EE0, (unint64_t *)&qword_26B216860, (uint64_t)&protocol descriptor for InputSignalConfiguration, MEMORY[0x263F8D488]);
  swift_getAssociatedTypeWitness();
  sub_25118B620();
  uint64_t v17 = sub_2511C9570();
  sub_251143080(v24, (uint64_t)&v27);
  if (v28)
  {
    uint64_t v24 = v8;
    sub_25112F14C(&v27, (uint64_t)v29);
    sub_25112FD4C((uint64_t)v29, (uint64_t)&v27);
    sub_251131944(0, qword_26B216650);
    int v18 = swift_dynamicCast();
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    if (v18)
    {
      v19(v14, 0, 1, AssociatedTypeWitness);
      uint64_t v20 = v22;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v14, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v20, AssociatedTypeWitness);
      v19(v11, 0, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 56))(v11, v17, a3, a4);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, AssociatedTypeWitness);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    else
    {
      v19(v14, 1, 1, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v24);
    }
  }
  else
  {
    sub_25118B7E8((uint64_t)&v27, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 56))(v11, v17, a3, a4);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v8);
  }
}

void sub_25117B2B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2511C9360();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2511C9390();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2511C9370();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_not_owner((const os_unfair_lock *)(*(void *)(a1 + 64) + 88));
  v18._char rawValue = a2;
  sub_251135B44(v18);
  if (a3)
  {
    sub_251155968();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F080], v14);
    swift_retain();
    uint64_t v25 = sub_2511C97E0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a4;
    aBlock[4] = sub_25113321C;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_251135784;
    aBlock[3] = &block_descriptor_42;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    sub_2511C9380();
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_2511483DC(&qword_26B216870, MEMORY[0x263F8F030]);
    uint64_t v21 = a3;
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_25114846C(0, (unint64_t *)&unk_26B217EF0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_251148314((unint64_t *)&unk_26B217F00, (unint64_t *)&unk_26B217EF0, v22);
    sub_2511C9900();
    uint64_t v23 = (void *)v25;
    MEMORY[0x253397000](0, v13, v10, v20);
    _Block_release(v20);

    sub_251135B0C(v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
    swift_release();
  }
}

uint64_t sub_25117B6A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_2511750E4(v4);
  swift_bridgeObjectRelease();
  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    unint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_2511C44D0(v84);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v107 = v6;
  sub_25117E8B0(&v107);
  if (v2) {
    goto LABEL_98;
  }
  swift_bridgeObjectRelease();
  uint64_t v90 = v107;
  uint64_t v107 = 0;
  unint64_t v108 = 0xE000000000000000;
  sub_2511C9960();
  uint64_t v111 = v107;
  unint64_t v112 = v108;
  sub_2511C9520();
  swift_getObjectType();
  sub_25117D298();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  sub_25117D298();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  uint64_t v107 = *a1;
  swift_bridgeObjectRetain_n();
  sub_25117E844(&v107);
  int64_t v92 = a1;
  swift_bridgeObjectRelease();
  uint64_t v7 = v107;
  int64_t v8 = *(void *)(v107 + 16);
  if (v8)
  {
    uint64_t v113 = MEMORY[0x263F8EE78];
    sub_251141A94(0, v8, 0);
    uint64_t v9 = v7 + 32;
    do
    {
      sub_251139AA0(v9, (uint64_t)&v107);
      uint64_t v102 = 0;
      unint64_t v103 = 0xE000000000000000;
      sub_2511C9960();
      swift_bridgeObjectRelease();
      uint64_t v105 = 0x2020202020202020;
      unint64_t v106 = 0xE800000000000000;
      uint64_t v10 = v109;
      uint64_t v11 = v110;
      __swift_project_boxed_opaque_existential_1(&v107, v109);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 40))(&v102, v10, v11);
      if (!v104) {
        swift_bridgeObjectRetain();
      }
      sub_25118B98C();
      swift_bridgeObjectRetain();
      sub_2511C98D0();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      uint64_t v12 = v105;
      unint64_t v13 = v106;
      sub_251139A70((uint64_t)&v107);
      uint64_t v14 = v113;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251141A94(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v113;
      }
      unint64_t v16 = *(void *)(v14 + 16);
      unint64_t v15 = *(void *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_251141A94(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v113;
      }
      *(void *)(v14 + 16) = v16 + 1;
      uint64_t v17 = v14 + 16 * v16;
      *(void *)(v17 + 32) = v12;
      *(void *)(v17 + 40) = v13;
      v9 += 48;
      --v8;
    }
    while (v8);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  uint64_t v107 = v14;
  sub_251141558(0, (unint64_t *)&qword_26B217F10, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_251141C40();
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  uint64_t v18 = v92[3];
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_2511C43B4(v18);
  swift_bridgeObjectRelease();
  uint64_t v107 = v19;
  sub_25117E92C(&v107, sub_2511B2F54, sub_25117EB20);
  swift_bridgeObjectRelease();
  uint64_t v20 = v107;
  int64_t v21 = *(void *)(v107 + 16);
  if (v21)
  {
    uint64_t v98 = MEMORY[0x263F8EE78];
    sub_251141A94(0, v21, 0);
    uint64_t v22 = v98;
    uint64_t v23 = (uint64_t *)(v20 + 72);
    do
    {
      uint64_t v95 = v22;
      uint64_t v25 = *(v23 - 5);
      unint64_t v24 = *(v23 - 4);
      uint64_t v26 = *v23;
      uint64_t v107 = 0;
      unint64_t v108 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2511C9960();
      swift_bridgeObjectRelease();
      uint64_t v107 = 0x2020202020202020;
      unint64_t v108 = 0xE800000000000000;
      uint64_t v102 = 34;
      unint64_t v103 = 0xE100000000000000;
      uint64_t v105 = v25;
      unint64_t v106 = v24;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      if (!v26) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25118B98C();
      sub_2511C98D0();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v107;
      unint64_t v28 = v108;
      uint64_t v22 = v95;
      unint64_t v30 = *(void *)(v95 + 16);
      unint64_t v29 = *(void *)(v95 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_251141A94(v29 > 1, v30 + 1, 1);
        uint64_t v22 = v95;
      }
      v23 += 6;
      *(void *)(v22 + 16) = v30 + 1;
      uint64_t v31 = v22 + 16 * v30;
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v28;
      --v21;
    }
    while (v21);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  uint64_t v107 = v22;
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  LODWORD(v32) = v90 < 0 || (v90 & 0x4000000000000000) != 0;
  if (v32 == 1) {
    goto LABEL_95;
  }
  uint64_t v33 = *(void *)(v90 + 16);
LABEL_30:
  uint64_t v34 = MEMORY[0x263F8EE78];
  if (!v33)
  {
    uint64_t v107 = MEMORY[0x263F8EE78];
    sub_2511C9460();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    uint64_t v44 = v34;
    goto LABEL_60;
  }
  uint64_t v99 = MEMORY[0x263F8EE78];
  sub_251141A94(0, v33 & ~(v33 >> 63), 0);
  if (v33 < 0)
  {
    __break(1u);
LABEL_98:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  int64_t v88 = v33 & ~(v33 >> 63);
  uint64_t v35 = 0;
  unint64_t v93 = v90 & 0xC000000000000001;
  uint64_t v96 = v33;
  do
  {
    if (v93)
    {
      unint64_t v36 = (void *)MEMORY[0x2533971C0](v35, v90);
    }
    else
    {
      unint64_t v36 = *(void **)(v90 + 8 * v35 + 32);
      swift_retain();
    }
    uint64_t v107 = 0;
    unint64_t v108 = 0xE000000000000000;
    sub_2511C9960();
    swift_bridgeObjectRelease();
    uint64_t v107 = 538976288;
    unint64_t v108 = 0xE400000000000000;
    uint64_t v102 = 34;
    unint64_t v103 = 0xE100000000000000;
    unint64_t v37 = v36[5];
    uint64_t v105 = v36[4];
    unint64_t v106 = v37;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    if (!v36[9]) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    if (!*(void *)(v36[12] + 40)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25118B98C();
    sub_2511C98D0();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    uint64_t v102 = 34;
    unint64_t v103 = 0xE100000000000000;
    uint64_t v105 = 0;
    unint64_t v106 = 0xE000000000000000;
    if (!*(void *)(v36[12] + 40)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C98D0();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_release();
    uint64_t v38 = v107;
    unint64_t v39 = v108;
    unint64_t v41 = *(void *)(v99 + 16);
    unint64_t v40 = *(void *)(v99 + 24);
    if (v41 >= v40 >> 1) {
      sub_251141A94(v40 > 1, v41 + 1, 1);
    }
    ++v35;
    *(void *)(v99 + 16) = v41 + 1;
    uint64_t v42 = v99 + 16 * v41;
    *(void *)(v42 + 32) = v38;
    *(void *)(v42 + 40) = v39;
  }
  while (v96 != v35);
  uint64_t v107 = v99;
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  uint64_t v100 = MEMORY[0x263F8EE78];
  sub_251141A94(0, v88, 0);
  uint64_t v43 = 0;
  uint64_t v44 = v100;
  do
  {
    if (v93)
    {
      uint64_t v45 = (void *)MEMORY[0x2533971C0](v43, v90);
    }
    else
    {
      uint64_t v45 = *(void **)(v90 + 8 * v43 + 32);
      swift_retain();
    }
    uint64_t v107 = 538976288;
    unint64_t v108 = 0xE400000000000000;
    uint64_t v102 = 34;
    unint64_t v103 = 0xE100000000000000;
    unint64_t v46 = v45[5];
    uint64_t v105 = v45[4];
    unint64_t v106 = v46;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    if (!v45[9]) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    if (!*(void *)(v45[12] + 40)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C98D0();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    uint64_t v48 = v45[4];
    unint64_t v47 = v45[5];
    uint64_t v49 = v45[9];
    uint64_t v102 = 34;
    unint64_t v103 = 0xE100000000000000;
    uint64_t v105 = v48;
    unint64_t v106 = v47;
    swift_bridgeObjectRetain();
    sub_2511C9520();
    if (!v49) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C98D0();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    sub_2511C9520();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v50 = v107;
    unint64_t v51 = v108;
    unint64_t v53 = *(void *)(v100 + 16);
    unint64_t v52 = *(void *)(v100 + 24);
    if (v53 >= v52 >> 1) {
      sub_251141A94(v52 > 1, v53 + 1, 1);
    }
    ++v43;
    *(void *)(v100 + 16) = v53 + 1;
    unint64_t v54 = v100 + 16 * v53;
    *(void *)(v54 + 32) = v50;
    *(void *)(v54 + 40) = v51;
  }
  while (v96 != v43);
  uint64_t v34 = MEMORY[0x263F8EE78];
LABEL_60:
  uint64_t v107 = v44;
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  uint64_t v101 = v34;
  if (v32)
  {
    uint64_t v32 = v90;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_2511C9AC0();
    swift_release();
    uint64_t v87 = v55;
    if (!v55) {
      goto LABEL_62;
    }
LABEL_64:
    uint64_t v58 = 0;
    unint64_t v86 = v32 & 0xC000000000000001;
    while (1)
    {
      if (v86)
      {
        uint64_t v59 = MEMORY[0x2533971C0](v58, v90);
        BOOL v60 = __OFADD__(v58, 1);
        uint64_t v61 = v58 + 1;
        if (v60) {
          goto LABEL_93;
        }
      }
      else
      {
        uint64_t v59 = swift_retain();
        BOOL v60 = __OFADD__(v58, 1);
        uint64_t v61 = v58 + 1;
        if (v60)
        {
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_2511C9AC0();
          swift_release();
          goto LABEL_30;
        }
      }
      uint64_t v89 = v61;
      uint64_t v91 = (void *)v59;
      uint64_t v32 = *(void *)(v59 + 104);
      uint64_t v62 = *(void *)(v32 + 16);
      if (v62)
      {
        sub_251141558(0, &qword_26B218990, (uint64_t)&type metadata for InputSignalIdentifier, MEMORY[0x263F8E0F8]);
        uint64_t v63 = (void *)swift_allocObject();
        int64_t v64 = _swift_stdlib_malloc_size(v63);
        uint64_t v65 = v64 - 32;
        if (v64 < 32) {
          uint64_t v65 = v64 - 1;
        }
        v63[2] = v62;
        v63[3] = 2 * (v65 >> 5);
        uint64_t v66 = sub_2511C6418((uint64_t)&v107, v63 + 4, v62, v32);
        swift_bridgeObjectRetain_n();
        sub_25112EB80();
        if (v66 != v62) {
          goto LABEL_94;
        }
        swift_bridgeObjectRelease();
        uint64_t v67 = MEMORY[0x263F8EE78];
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = MEMORY[0x263F8EE78];
        uint64_t v63 = (void *)MEMORY[0x263F8EE78];
      }
      uint64_t v107 = (uint64_t)v63;
      sub_25117E92C(&v107, sub_2511B2F7C, sub_251180FC4);
      swift_bridgeObjectRelease();
      uint64_t v32 = v107;
      int64_t v68 = *(void *)(v107 + 16);
      if (v68)
      {
        sub_251141A94(0, v68, 0);
        uint64_t v69 = v67;
        uint64_t v70 = (unint64_t *)(v32 + 56);
        do
        {
          uint64_t v94 = v69;
          int64_t v97 = v68;
          uint64_t v72 = *(v70 - 3);
          unint64_t v71 = *(v70 - 2);
          uint64_t v73 = *(v70 - 1);
          unint64_t v74 = *v70;
          uint64_t v107 = 538976288;
          unint64_t v108 = 0xE400000000000000;
          uint64_t v102 = 34;
          unint64_t v103 = 0xE100000000000000;
          if (v74)
          {
            unint64_t v75 = v74;
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t v73 = v72;
            unint64_t v75 = v71;
          }
          uint64_t v105 = v73;
          unint64_t v106 = v75;
          sub_25118B98C();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          sub_2511C98D0();
          swift_bridgeObjectRelease();
          sub_2511C9520();
          swift_bridgeObjectRelease();
          sub_2511C9520();
          sub_2511C9520();
          swift_bridgeObjectRelease();
          sub_2511C9520();
          uint64_t v102 = 34;
          unint64_t v103 = 0xE100000000000000;
          unint64_t v76 = v91[5];
          uint64_t v105 = v91[4];
          unint64_t v106 = v76;
          swift_bridgeObjectRetain();
          sub_2511C9520();
          if (!v91[9]) {
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          sub_2511C9520();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2511C9520();
          if (!*(void *)(v91[12] + 40)) {
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          sub_2511C9520();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2511C98D0();
          swift_bridgeObjectRelease();
          sub_2511C9520();
          swift_bridgeObjectRelease();
          sub_2511C9520();
          sub_2511C9520();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v77 = v107;
          unint64_t v78 = v108;
          uint64_t v69 = v94;
          unint64_t v80 = *(void *)(v94 + 16);
          unint64_t v79 = *(void *)(v94 + 24);
          uint64_t v32 = v80 + 1;
          if (v80 >= v79 >> 1)
          {
            sub_251141A94(v79 > 1, v80 + 1, 1);
            uint64_t v69 = v94;
          }
          v70 += 4;
          *(void *)(v69 + 16) = v32;
          uint64_t v81 = v69 + 16 * v80;
          *(void *)(v81 + 32) = v77;
          *(void *)(v81 + 40) = v78;
          --v68;
        }
        while (v97 != 1);
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        uint64_t v69 = v67;
      }
      sub_2511B11E4(v69);
      uint64_t v58 = v89;
      if (v89 == v87)
      {
        swift_release_n();
        uint64_t v56 = v101;
        goto LABEL_92;
      }
    }
  }
  uint64_t v32 = v90;
  uint64_t v57 = *(void *)(v90 + 16);
  swift_retain();
  uint64_t v87 = v57;
  if (v57) {
    goto LABEL_64;
  }
LABEL_62:
  swift_release_n();
  uint64_t v56 = MEMORY[0x263F8EE78];
LABEL_92:
  uint64_t v107 = v56;
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  uint64_t result = sub_2511C9520();
  unint64_t v83 = v112;
  *a2 = v111;
  a2[1] = v83;
  return result;
}

uint64_t sub_25117CD8C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_251177784(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25117CDA8(uint64_t a1)
{
  *(void *)(a1 + 8) = *(void *)(v1 + 24);
  return swift_unknownObjectWeakAssign();
}

void sub_25117CDC8()
{
  if (!qword_26B218050)
  {
    sub_25118B8E8(255, &qword_26B217E68, MEMORY[0x263F8D060]);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218050);
    }
  }
}

uint64_t sub_25117CE4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

void sub_25117CEB4(uint64_t a1)
{
  sub_251178F78(a1, *(os_unfair_lock_s **)(v1 + 16), v1 + 24, *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(double *)(v1 + 104));
}

uint64_t sub_25117CECC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  sub_2511C9520();
  if (!*(void *)(v2 + 72)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  if (!*(void *)(*(void *)(v2 + 96) + 40)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25118B98C();
  sub_2511C98D0();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRetain();
  sub_2511C9520();
  if (!*(void *)(v3 + 72)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  if (!*(void *)(*(void *)(v3 + 96) + 40)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2511C98D0();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25117D298()
{
  return 34;
}

uint64_t sub_25117D374(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_2511C9520();
  if (!v2) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25118B98C();
  sub_2511C98D0();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRetain();
  sub_2511C9520();
  if (!v3) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2511C98D0();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_25117D660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  *(void *)&long long v109 = sub_25117E384(v6, a1);
  swift_bridgeObjectRetain();
  sub_25117E92C((uint64_t *)&v109, (uint64_t (*)(uint64_t))sub_2511B2F90, sub_2511816B0);
  if (v3)
  {
LABEL_71:
    uint64_t result = (void *)swift_release();
    __break(1u);
    return result;
  }
  unint64_t v103 = a3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v109;
  uint64_t v8 = *(void *)(v109 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v105 = a1;
  if (v8)
  {
    uint64_t v115 = MEMORY[0x263F8EE78];
    sub_2511C9A20();
    uint64_t v10 = v7 + 32;
    do
    {
      sub_25112FD4C(v10, (uint64_t)&v109);
      uint64_t v15 = v110;
      uint64_t v16 = v111;
      __swift_project_boxed_opaque_existential_1(&v109, v110);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 40))(v112, v15, v16);
      uint64_t v17 = v114;
      if (v114)
      {
        uint64_t v11 = v113;
      }
      else
      {
        uint64_t v11 = v112[0];
        uint64_t v17 = swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      unint64_t v12 = sub_2511891BC(v9);
      unint64_t v13 = sub_251153530(v9);
      type metadata accessor for DebugSnapshot();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v14[2] = v11;
      v14[3] = v17;
      v14[4] = v12;
      void v14[5] = v13;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      v10 += 40;
      --v8;
    }
    while (v8);
    uint64_t v102 = v115;
    swift_release();
    a1 = v105;
  }
  else
  {
    swift_release();
    uint64_t v102 = MEMORY[0x263F8EE78];
  }
  *(void *)&long long v109 = *(void *)a1;
  swift_bridgeObjectRetain_n();
  sub_25117E844((uint64_t *)&v109);
  swift_bridgeObjectRelease();
  uint64_t v18 = v109;
  uint64_t v19 = *(void *)(v109 + 16);
  if (v19)
  {
    uint64_t v115 = v9;
    sub_2511C9A20();
    uint64_t v20 = v18 + 32;
    do
    {
      sub_251139AA0(v20, (uint64_t)&v109);
      uint64_t v25 = v110;
      uint64_t v26 = v111;
      __swift_project_boxed_opaque_existential_1(&v109, v110);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 40))(v112, v25, v26);
      uint64_t v27 = v114;
      if (v114)
      {
        uint64_t v21 = v113;
      }
      else
      {
        uint64_t v21 = v112[0];
        uint64_t v27 = swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      unint64_t v22 = sub_2511891BC(v9);
      unint64_t v23 = sub_251153530(v9);
      type metadata accessor for DebugSnapshot();
      unint64_t v24 = (void *)swift_allocObject();
      long long v24[2] = v21;
      v24[3] = v27;
      _OWORD v24[4] = v22;
      void v24[5] = v23;
      sub_251139A70((uint64_t)&v109);
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      v20 += 48;
      --v19;
    }
    while (v19);
    uint64_t v28 = v115;
    swift_release();
    a1 = v105;
  }
  else
  {
    swift_release();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  uint64_t v98 = v28;
  if (*(unsigned char *)(a1 + 34))
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v31 = *(void *)a1;
    int64_t v32 = *(void *)(*(void *)a1 + 16);
    uint64_t v33 = MEMORY[0x263F8EE78];
    if (v32)
    {
      uint64_t v115 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_251130704(0, v32, 0);
      uint64_t v34 = v31 + 32;
      uint64_t v35 = v115;
      do
      {
        sub_251139AA0(v34, (uint64_t)&v109);
        uint64_t v36 = v110;
        uint64_t v37 = v111;
        __swift_project_boxed_opaque_existential_1(&v109, v110);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v37 + 40))(v112, v36, v37);
        sub_251139A70((uint64_t)&v109);
        uint64_t v38 = v112[0];
        uint64_t v39 = v112[1];
        uint64_t v41 = v113;
        uint64_t v40 = v114;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251130704(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v115;
        }
        unint64_t v43 = *(void *)(v35 + 16);
        unint64_t v42 = *(void *)(v35 + 24);
        if (v43 >= v42 >> 1)
        {
          sub_251130704(v42 > 1, v43 + 1, 1);
          uint64_t v35 = v115;
        }
        *(void *)(v35 + 16) = v43 + 1;
        uint64_t v44 = (void *)(v35 + 32 * v43);
        v44[4] = v38;
        v44[5] = v39;
        v44[6] = v41;
        v44[7] = v40;
        v34 += 48;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      uint64_t v28 = v98;
      a1 = v105;
      uint64_t v33 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v35 = MEMORY[0x263F8EE78];
    }
    uint64_t v45 = sub_25118A6EC(v35);
    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)(a1 + 40) + 16) <= *(void *)(v45 + 16) >> 3)
    {
      *(void *)&long long v109 = v45;
      uint64_t v47 = swift_bridgeObjectRetain();
      sub_2511C471C(v47);
    }
    else
    {
      uint64_t v46 = swift_bridgeObjectRetain();
      sub_2511C48FC(v46, v45);
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x263F8EE78];
    uint64_t v48 = swift_bridgeObjectRetain();
    uint64_t v49 = sub_2511C4614(v48);
    swift_bridgeObjectRelease();
    *(void *)&long long v109 = v49;
    sub_25117E92C((uint64_t *)&v109, sub_2511B2F7C, sub_251180FC4);
    swift_bridgeObjectRelease();
    uint64_t v50 = v109;
    int64_t v51 = *(void *)(v109 + 16);
    if (v51)
    {
      *(void *)&long long v109 = v33;
      sub_251141A94(0, v51, 0);
      uint64_t v30 = v109;
      unint64_t v52 = (uint64_t *)(v50 + 56);
      do
      {
        if (*v52)
        {
          uint64_t v53 = *(v52 - 1);
          uint64_t v54 = *v52;
        }
        else
        {
          uint64_t v53 = *(v52 - 3);
          uint64_t v54 = *(v52 - 2);
          swift_bridgeObjectRetain();
        }
        *(void *)&long long v109 = v30;
        unint64_t v56 = *(void *)(v30 + 16);
        unint64_t v55 = *(void *)(v30 + 24);
        swift_bridgeObjectRetain();
        if (v56 >= v55 >> 1)
        {
          sub_251141A94(v55 > 1, v56 + 1, 1);
          uint64_t v30 = v109;
        }
        *(void *)(v30 + 16) = v56 + 1;
        uint64_t v57 = v30 + 16 * v56;
        *(void *)(v57 + 32) = v53;
        *(void *)(v57 + 40) = v54;
        v52 += 4;
        --v51;
      }
      while (v51);
      swift_release();
      uint64_t v29 = MEMORY[0x263F8EE78];
      a1 = v105;
    }
    else
    {
      swift_release();
      uint64_t v30 = MEMORY[0x263F8EE78];
    }
  }
  long long v109 = *(_OWORD *)(a2 + 16);
  sub_251131944(0, (unint64_t *)&qword_26B216848);
  swift_unknownObjectRetain();
  uint64_t v58 = sub_2511C94C0();
  uint64_t v100 = v59;
  sub_25114846C(0, (unint64_t *)&qword_26B2168A0, (uint64_t (*)(uint64_t))sub_25115A3E0, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v61 = inited;
  *(_OWORD *)(inited + 16) = xmmword_2511CD0C0;
  unint64_t v62 = 0xE600000000000000;
  *(void *)(inited + 32) = 0x646573756150;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v63 = 28526;
  if (*(unsigned char *)(a1 + 33)) {
    uint64_t v63 = 5457241;
  }
  unint64_t v64 = 0xE200000000000000;
  if (*(unsigned char *)(a1 + 33)) {
    unint64_t v64 = 0xE300000000000000;
  }
  *(void *)(inited + 48) = v63;
  *(void *)(inited + 56) = v64;
  *(void *)(inited + 64) = 0x6574617453;
  *(void *)(inited + 72) = 0xE500000000000000;
  uint64_t v104 = v30;
  uint64_t v101 = v58;
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(unsigned char *)(a1 + 32) == 1)
    {
      uint64_t v65 = 0x657669746341;
    }
    else
    {
      unint64_t v62 = 0xE500000000000000;
      uint64_t v65 = 0x6465646E45;
    }
  }
  else
  {
    unint64_t v62 = 0xEB00000000646574;
    uint64_t v65 = 0x7261745320746F4ELL;
  }
  *(void *)(inited + 80) = v65;
  *(void *)(inited + 88) = v62;
  *(void *)(inited + 96) = 0x6169726574697243;
  *(void *)(inited + 104) = 0xE800000000000000;
  *(void *)&long long v109 = 0;
  *((void *)&v109 + 1) = 0xE000000000000000;
  uint64_t v66 = swift_bridgeObjectRetain();
  uint64_t v67 = sub_251174244(v66);
  swift_bridgeObjectRelease();
  uint64_t v68 = *(void *)(v67 + 16);
  if (v68)
  {
    uint64_t v69 = 0;
    uint64_t v70 = (uint64_t *)(v67 + 32);
    while (1)
    {
      uint64_t v71 = *v70++;
      BOOL v72 = __OFADD__(v69, v71);
      v69 += v71;
      if (v72) {
        break;
      }
      if (!--v68) {
        goto LABEL_57;
      }
    }
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v69 = 0;
LABEL_57:
  swift_bridgeObjectRelease();
  v112[0] = v69;
  sub_2511C9C50();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  uint64_t v73 = *((void *)&v109 + 1);
  *(void *)(v61 + 112) = v109;
  *(void *)(v61 + 120) = v73;
  unint64_t v99 = sub_251148A20(v61);
  sub_25114846C(0, (unint64_t *)&unk_269B22270, (uint64_t (*)(uint64_t))sub_25115A444, MEMORY[0x263F8E0F8]);
  uint64_t v74 = swift_initStackObject();
  *(_OWORD *)(v74 + 16) = xmmword_2511CB580;
  *(void *)(v74 + 32) = 0x7372656E6E616C50;
  *(void *)(v74 + 40) = 0xE800000000000000;
  uint64_t v75 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v76 = sub_2511C43B4(v75);
  swift_bridgeObjectRelease();
  *(void *)&long long v109 = v76;
  sub_25117E92C((uint64_t *)&v109, sub_2511B2F54, sub_25117F4FC);
  swift_bridgeObjectRelease();
  uint64_t v77 = v109;
  uint64_t v78 = *(void *)(v109 + 16);
  uint64_t v106 = v74;
  if (v78)
  {
    v112[0] = v29;
    sub_2511C9A20();
    unint64_t v79 = (uint64_t *)(v77 + 72);
    do
    {
      uint64_t v86 = *v79;
      *(void *)&long long v109 = 60;
      *((void *)&v109 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      uint64_t v108 = v78;
      if (!v86) {
        swift_bridgeObjectRetain();
      }
      v79 += 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v81 = *((void *)&v109 + 1);
      uint64_t v80 = v109;
      uint64_t v82 = MEMORY[0x263F8EE78];
      unint64_t v83 = sub_2511891BC(MEMORY[0x263F8EE78]);
      unint64_t v84 = sub_251153530(v82);
      type metadata accessor for DebugSnapshot();
      uint64_t v85 = (void *)swift_allocObject();
      v85[2] = v80;
      v85[3] = v81;
      v85[4] = v83;
      v85[5] = v84;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      uint64_t v78 = v108 - 1;
    }
    while (v108 != 1);
    uint64_t v87 = v112[0];
    swift_release();
    uint64_t v29 = MEMORY[0x263F8EE78];
    uint64_t v28 = v98;
  }
  else
  {
    swift_release();
    uint64_t v87 = MEMORY[0x263F8EE78];
  }
  *(void *)(v74 + 48) = v87;
  *(void *)(v74 + 56) = 0xD000000000000016;
  *(void *)(v74 + 64) = 0x80000002511D1780;
  *(void *)(v74 + 72) = v102;
  strcpy((char *)(v74 + 80), "Input Signals");
  *(_WORD *)(v74 + 94) = -4864;
  *(void *)(v74 + 96) = v28;
  *(void *)(v74 + 104) = 0xD000000000000025;
  *(void *)(v74 + 112) = 0x80000002511D17A0;
  uint64_t v88 = *(void *)(v104 + 16);
  if (v88)
  {
    *(void *)&long long v109 = v29;
    sub_2511C9A20();
    uint64_t v89 = (uint64_t *)(v104 + 40);
    do
    {
      uint64_t v91 = *(v89 - 1);
      uint64_t v90 = *v89;
      swift_bridgeObjectRetain_n();
      unint64_t v92 = sub_2511891BC(v29);
      unint64_t v93 = sub_251153530(v29);
      type metadata accessor for DebugSnapshot();
      uint64_t v94 = (void *)swift_allocObject();
      v94[2] = v91;
      v94[3] = v90;
      v94[4] = v92;
      v94[5] = v93;
      swift_bridgeObjectRelease();
      sub_2511C99F0();
      sub_2511C9A30();
      sub_2511C9A40();
      sub_2511C9A00();
      v89 += 2;
      --v88;
    }
    while (v88);
    uint64_t v95 = v109;
    swift_bridgeObjectRelease();
    uint64_t v74 = v106;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v95 = MEMORY[0x263F8EE78];
  }
  *(void *)(v74 + 120) = v95;
  unint64_t v96 = sub_251153530(v74);
  type metadata accessor for DebugSnapshot();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v101;
  result[3] = v100;
  result[4] = v99;
  result[5] = v96;
  *unint64_t v103 = result;
  return result;
}

uint64_t type metadata accessor for Orchestrator.InputSignalObserverShim()
{
  return self;
}

uint64_t sub_25117E2E4(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_25117E320(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_25117E35C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25117E384(uint64_t a1, uint64_t a2)
{
  int64_t v2 = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(result - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v36 = MEMORY[0x263F8EE78];
  unint64_t v9 = v8 & v5;
  uint64_t v25 = result;
  int64_t v26 = (unint64_t)(v7 + 63) >> 6;
  if ((v8 & v5) != 0) {
    goto LABEL_33;
  }
  while (1)
  {
LABEL_6:
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v10 >= v26) {
      goto LABEL_34;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v26) {
        goto LABEL_34;
      }
      unint64_t v11 = *(void *)(v25 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v26) {
          goto LABEL_34;
        }
        unint64_t v11 = *(void *)(v25 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v26) {
            goto LABEL_34;
          }
          unint64_t v11 = *(void *)(v25 + 8 * v2);
          if (!v11)
          {
            int64_t v12 = v10 + 4;
            if (v12 >= v26)
            {
LABEL_34:
              swift_release();
              return v3;
            }
            unint64_t v11 = *(void *)(v25 + 8 * v12);
            int64_t v2 = v12;
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v11 - 1) & v11;
    for (unint64_t i = __clz(__rbit64(v11)) + (v2 << 6); ; unint64_t i = v24 | (v2 << 6))
    {
      sub_25112FD4C(*(void *)(a1 + 56) + 40 * i, (uint64_t)&v32);
      sub_25112F14C(&v32, (uint64_t)&v33);
      uint64_t v14 = *(void *)(*(void *)a2 + 16);
      if (v14) {
        break;
      }
LABEL_28:
      sub_25112F14C(&v33, (uint64_t)&v32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_25116B8E0(0, *(void *)(v3 + 16) + 1, 1);
      }
      uint64_t v3 = v36;
      unint64_t v23 = *(void *)(v36 + 16);
      unint64_t v22 = *(void *)(v36 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_25116B8E0(v22 > 1, v23 + 1, 1);
        uint64_t v3 = v36;
      }
      *(void *)(v3 + 16) = v23 + 1;
      uint64_t result = sub_25112F14C(&v32, v3 + 40 * v23 + 32);
      if (!v9) {
        goto LABEL_6;
      }
LABEL_33:
      unint64_t v24 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
    }
    unint64_t v29 = v9;
    int64_t v30 = v2;
    uint64_t v15 = (void *)(*(void *)a2 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v16 = v15[3];
      uint64_t v17 = v15[4];
      __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v17 + 40))(&v32, v16, v17);
      long long v18 = v32;
      uint64_t v20 = v34;
      uint64_t v19 = v35;
      __swift_project_boxed_opaque_existential_1(&v33, v34);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v19 + 40))(&v31, v20, v19);
      if (v18 == v31) {
        break;
      }
      char v21 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_5;
      }
      v15 += 6;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        int64_t v2 = v30;
        unint64_t v9 = v29;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    int64_t v2 = v30;
    unint64_t v9 = v29;
    if (v29) {
      goto LABEL_33;
    }
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v26) {
      goto LABEL_34;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25117E700()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 64);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 22;
  os_unfair_lock_lock(v1 + 22);
  sub_25115A554(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25117E760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25112FD4C(a1, (uint64_t)v6);
  sub_251131944(0, (unint64_t *)&qword_26B216860);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a2, v4 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_25117E844(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2511B2F68(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_25117FE48(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_25117E8B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2511B3334();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2511807FC(v6);
  return sub_2511C9A00();
}

uint64_t sub_25117E92C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_25117E9B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_251141558(0, &qword_26B218180, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25117EB20(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_142;
    }
    if (v4) {
      return sub_2511820AC(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_151;
  }
  uint64_t v151 = v4;
  uint64_t v147 = result;
  long long v143 = a1;
  if (v4 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v4 != 1)
    {
      unint64_t v61 = *(void *)(MEMORY[0x263F8EE78] + 16);
      size_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_104:
      if (v61 >= 2)
      {
        uint64_t v134 = *v143;
        uint64_t v150 = v8;
        do
        {
          unint64_t v135 = v61 - 2;
          if (v61 < 2) {
            goto LABEL_137;
          }
          if (!v134) {
            goto LABEL_150;
          }
          uint64_t v136 = *(void *)&v11[16 * v135 + 32];
          uint64_t v137 = *(void *)&v11[16 * v61 + 24];
          sub_2511829A4((char *)(v134 + 48 * v136), (char *)(v134 + 48 * *(void *)&v11[16 * v61 + 16]), v134 + 48 * v137, __dst);
          if (v2) {
            goto LABEL_117;
          }
          if (v137 < v136) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            size_t v11 = sub_2511B2EF0((uint64_t)v11);
          }
          if (v135 >= *((void *)v11 + 2)) {
            goto LABEL_139;
          }
          uint64_t v138 = &v11[16 * v135 + 32];
          *(void *)uint64_t v138 = v136;
          *((void *)v138 + 1) = v137;
          unint64_t v139 = *((void *)v11 + 2);
          if (v61 > v139) {
            goto LABEL_140;
          }
          memmove(&v11[16 * v61 + 16], &v11[16 * v61 + 32], 16 * (v139 - v61));
          *((void *)v11 + 2) = v139 - 1;
          unint64_t v61 = v139 - 1;
          uint64_t v8 = v150;
        }
        while (v139 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v8 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_2511C95F0();
    *(void *)(v8 + 16) = v7;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v150 = v8;
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v144 = *a1 + 72;
  uint64_t v142 = *a1 + 40;
  size_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v12 = v151;
  uint64_t v157 = *a1;
  while (1)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v9 + 1;
    uint64_t v15 = v12;
    if (v9 + 1 < v12)
    {
      uint64_t v148 = v11;
      uint64_t v16 = (uint64_t *)(v10 + 48 * v14);
      uint64_t v17 = v16[1];
      uint64_t v18 = v2;
      uint64_t v19 = v16[2];
      uint64_t v20 = v16[3];
      uint64_t v21 = v16[4];
      uint64_t v22 = v16[5];
      uint64_t v164 = *v16;
      uint64_t v165 = v17;
      uint64_t v166 = v19;
      uint64_t v167 = v20;
      uint64_t v168 = v21;
      uint64_t v169 = v22;
      unint64_t v23 = (uint64_t *)(v10 + 48 * v9);
      uint64_t v24 = v23[1];
      uint64_t v25 = v23[2];
      uint64_t v26 = v23[3];
      uint64_t v27 = v23[4];
      uint64_t v28 = v23[5];
      uint64_t v158 = *v23;
      uint64_t v159 = v24;
      uint64_t v160 = v25;
      uint64_t v161 = v26;
      uint64_t v162 = v27;
      uint64_t v163 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v154 = sub_25117D374((uint64_t)&v164, (uint64_t)&v158);
      uint64_t v170 = v18;
      if (v18)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_117:
        swift_bridgeObjectRelease();
        *(void *)(v150 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v13 + 2;
      if (v13 + 2 < v15)
      {
        uint64_t v145 = v13;
        unint64_t v29 = (void *)(v144 + 48 * v13);
        int64_t v30 = v29;
        while (1)
        {
          uint64_t v31 = v14;
          uint64_t v33 = v29[4];
          uint64_t v32 = v29[5];
          uint64_t v34 = v30[6];
          v30 += 6;
          uint64_t v35 = v29[7];
          uint64_t v36 = v29[8];
          uint64_t v37 = v29[2];
          uint64_t v164 = v29[3];
          uint64_t v165 = v33;
          uint64_t v166 = v32;
          uint64_t v167 = v34;
          uint64_t v168 = v35;
          uint64_t v169 = v36;
          uint64_t v38 = *(v29 - 3);
          uint64_t v39 = *(v29 - 2);
          uint64_t v40 = *(v29 - 1);
          uint64_t v41 = *v29;
          uint64_t v42 = v29[1];
          uint64_t v158 = v38;
          uint64_t v159 = v39;
          uint64_t v160 = v40;
          uint64_t v161 = v41;
          uint64_t v162 = v42;
          uint64_t v163 = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v43 = v170;
          int v44 = sub_25117D374((uint64_t)&v164, (uint64_t)&v158);
          uint64_t v170 = v43;
          if (v43) {
            goto LABEL_116;
          }
          int v45 = v44;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v154 ^ v45)) {
            break;
          }
          uint64_t v14 = v31 + 1;
          unint64_t v29 = v30;
          uint64_t v15 = v151;
          if (v151 == v31 + 1)
          {
            uint64_t v14 = v151;
            goto LABEL_22;
          }
        }
        uint64_t v15 = v151;
        uint64_t v14 = v31;
LABEL_22:
        uint64_t v13 = v145;
      }
      uint64_t v2 = v170;
      size_t v11 = v148;
      uint64_t v10 = v157;
      if (v154)
      {
        if (v14 < v13) {
          goto LABEL_146;
        }
        if (v13 < v14)
        {
          uint64_t v46 = 48 * v14;
          uint64_t v47 = 48 * v13;
          uint64_t v48 = v14;
          uint64_t v49 = v13;
          do
          {
            if (v49 != --v48)
            {
              if (!v157) {
                goto LABEL_149;
              }
              uint64_t v50 = (_OWORD *)(v157 + v47);
              long long v51 = *(_OWORD *)(v157 + v47);
              uint64_t v52 = v157 + v46;
              uint64_t v53 = *(void *)(v157 + v47 + 16);
              uint64_t v54 = *(void *)(v157 + v47 + 24);
              long long v55 = *(_OWORD *)(v157 + v47 + 32);
              long long v57 = *(_OWORD *)(v157 + v46 - 32);
              long long v56 = *(_OWORD *)(v157 + v46 - 16);
              *uint64_t v50 = *(_OWORD *)(v157 + v46 - 48);
              v50[1] = v57;
              v50[2] = v56;
              *(_OWORD *)(v52 - 48) = v51;
              *(void *)(v52 - 32) = v53;
              *(void *)(v52 - 24) = v54;
              *(_OWORD *)(v52 - 16) = v55;
            }
            ++v49;
            v46 -= 48;
            v47 += 48;
          }
          while (v49 < v48);
        }
      }
    }
    if (v14 >= v15) {
      goto LABEL_41;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_143;
    }
    if (v14 - v13 >= v147) {
      goto LABEL_41;
    }
    if (__OFADD__(v13, v147)) {
      goto LABEL_144;
    }
    uint64_t v58 = v13 + v147 >= v15 ? v15 : v13 + v147;
    if (v58 < v13) {
      break;
    }
    if (v14 != v58)
    {
      uint64_t v149 = v11;
      uint64_t v170 = v2;
      uint64_t v110 = (void *)(v142 + 48 * v14);
      uint64_t v146 = v13;
      uint64_t v140 = v58;
      do
      {
        uint64_t v111 = (uint64_t *)(v10 + 48 * v14);
        uint64_t v112 = *v111;
        uint64_t v113 = v111[1];
        uint64_t v114 = v111[2];
        uint64_t v115 = v111[3];
        uint64_t v116 = v111[4];
        uint64_t v117 = v111[5];
        uint64_t v118 = v13;
        uint64_t v141 = v110;
        long long v119 = v110;
        uint64_t v153 = v14;
        while (1)
        {
          uint64_t v155 = v118;
          uint64_t v120 = *(v119 - 11);
          uint64_t v122 = *(v119 - 10);
          uint64_t v121 = v119 - 11;
          uint64_t v164 = v112;
          uint64_t v165 = v113;
          uint64_t v166 = v114;
          uint64_t v167 = v115;
          uint64_t v168 = v116;
          uint64_t v169 = v117;
          uint64_t v123 = *(v119 - 9);
          uint64_t v124 = *(v119 - 8);
          uint64_t v125 = *(v119 - 7);
          uint64_t v126 = *(v119 - 6);
          uint64_t v158 = v120;
          uint64_t v159 = v122;
          uint64_t v160 = v123;
          uint64_t v161 = v124;
          uint64_t v162 = v125;
          uint64_t v163 = v126;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v127 = v170;
          char v128 = sub_25117D374((uint64_t)&v164, (uint64_t)&v158);
          uint64_t v170 = v127;
          if (v127) {
            goto LABEL_116;
          }
          char v129 = v128;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v129 & 1) == 0) {
            break;
          }
          uint64_t v10 = v157;
          uint64_t v130 = v153;
          if (!v157) {
            goto LABEL_148;
          }
          uint64_t v117 = *v119;
          long long v132 = *(_OWORD *)(v119 - 9);
          long long v131 = *(_OWORD *)(v119 - 7);
          *(v119 - 6) = *v119;
          v119 -= 6;
          uint64_t v112 = v119[1];
          uint64_t v113 = v119[2];
          uint64_t v114 = v119[3];
          uint64_t v115 = v119[4];
          uint64_t v116 = v119[5];
          *((_OWORD *)v121 + 3) = *(_OWORD *)v121;
          *((_OWORD *)v121 + 4) = v132;
          *((_OWORD *)v121 + 5) = v131;
          *(v119 - 5) = v112;
          *(v119 - 4) = v113;
          *(v119 - 3) = v114;
          *(v119 - 2) = v115;
          *(v119 - 1) = v116;
          uint64_t v118 = v155 + 1;
          if (v153 == v155 + 1) {
            goto LABEL_99;
          }
        }
        uint64_t v10 = v157;
        uint64_t v130 = v153;
LABEL_99:
        uint64_t v14 = v130 + 1;
        uint64_t v110 = v141 + 6;
        uint64_t v13 = v146;
      }
      while (v14 != v140);
      uint64_t v14 = v140;
      uint64_t v2 = v170;
      size_t v11 = v149;
      if (v140 < v146) {
        goto LABEL_141;
      }
      goto LABEL_42;
    }
LABEL_41:
    if (v14 < v13) {
      goto LABEL_141;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_2511B2920(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v61 = v60 + 1;
    uint64_t v10 = v157;
    if (v60 >= v59 >> 1)
    {
      int64_t v133 = sub_2511B2920((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v10 = v157;
      size_t v11 = v133;
    }
    *((void *)v11 + 2) = v61;
    unint64_t v62 = v11 + 32;
    uint64_t v63 = &v11[16 * v60 + 32];
    *(void *)uint64_t v63 = v13;
    *((void *)v63 + 1) = v14;
    uint64_t v152 = v14;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v61 - 1;
        if (v61 >= 4)
        {
          uint64_t v69 = &v62[16 * v61];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_126;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_127;
          }
          unint64_t v76 = v61 - 2;
          uint64_t v77 = &v62[16 * v61 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_129;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_132;
          }
          if (v81 >= v72)
          {
            unint64_t v99 = &v62[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_136;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_78;
          }
        }
        else
        {
          if (v61 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_72;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_128;
        }
        unint64_t v76 = v61 - 2;
        uint64_t v82 = &v62[16 * v61 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_131;
        }
        uint64_t v88 = &v62[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_134;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_135;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_78:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_80;
        }
LABEL_72:
        if (v87) {
          goto LABEL_130;
        }
        uint64_t v95 = &v62[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_133;
        }
        if (v98 < v86) {
          goto LABEL_89;
        }
LABEL_80:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v61)
        {
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (!v10) {
          goto LABEL_147;
        }
        uint64_t v104 = v11;
        uint64_t v105 = &v62[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v62[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        sub_2511829A4((char *)(v10 + 48 * *(void *)v105), (char *)(v10 + 48 * *(void *)v107), v10 + 48 * v108, __dst);
        if (v2) {
          goto LABEL_117;
        }
        if (v108 < v106) {
          goto LABEL_123;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_124;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v62[16 * v103 + 8] = v108;
        unint64_t v109 = *((void *)v104 + 2);
        if (v64 >= v109) {
          goto LABEL_125;
        }
        size_t v11 = v104;
        unint64_t v61 = v109 - 1;
        memmove(&v62[16 * v64], v107 + 16, 16 * (v109 - 1 - v64));
        *((void *)v11 + 2) = v109 - 1;
        uint64_t v10 = v157;
        if (v109 <= 2) {
          goto LABEL_89;
        }
      }
    }
    unint64_t v61 = 1;
LABEL_89:
    uint64_t v12 = v151;
    uint64_t v9 = v152;
    uint64_t v8 = v150;
    if (v152 >= v151) {
      goto LABEL_104;
    }
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_25117F4FC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_181;
    }
    if (v4) {
      return sub_251182250(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_189;
  }
  uint64_t v135 = v4;
  uint64_t v126 = result;
  uint64_t v124 = a1;
  if (v4 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v137 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
LABEL_147:
      uint64_t v131 = v8;
      if (v11 >= 2)
      {
        uint64_t v117 = *v124;
        do
        {
          unint64_t v118 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_176;
          }
          if (!v117) {
            goto LABEL_188;
          }
          uint64_t v119 = *(void *)&v10[16 * v118 + 32];
          uint64_t v120 = *(void *)&v10[16 * v11 + 24];
          sub_251182E68((char *)(v117 + 48 * v119), (char *)(v117 + 48 * *(void *)&v10[16 * v11 + 16]), v117 + 48 * v120, v137);
          if (v2) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_177;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_2511B2EF0((uint64_t)v10);
          }
          if (v118 >= *((void *)v10 + 2)) {
            goto LABEL_178;
          }
          uint64_t v121 = &v10[16 * v118 + 32];
          *(void *)uint64_t v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v10 + 2);
          if (v11 > v122) {
            goto LABEL_179;
          }
          memmove(&v10[16 * v11 + 16], &v10[16 * v11 + 32], 16 * (v122 - v11));
          *((void *)v10 + 2) = v122 - 1;
          unint64_t v11 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_158:
      swift_bridgeObjectRelease();
      *(void *)(v131 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_2511C95F0();
    *(void *)(v8 + 16) = v7;
    uint64_t v4 = v135;
    uint64_t v137 = (char *)(v8 + 32);
  }
  uint64_t v131 = v8;
  uint64_t v9 = 0;
  uint64_t v125 = *a1 + 16;
  uint64_t v145 = *a1;
  uint64_t v123 = *a1 + 32;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
LABEL_15:
  uint64_t v12 = v9 + 1;
  if (v9 + 1 >= v4) {
    goto LABEL_56;
  }
  uint64_t v127 = v2;
  char v129 = v10;
  uint64_t v13 = (uint64_t *)(v145 + 48 * v12);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = v13[2];
  uint64_t v17 = v13[3];
  uint64_t v18 = (void *)(v145 + 48 * v9);
  uint64_t v19 = v18[2];
  uint64_t v20 = v18[3];
  if (v14 == *v18 && v15 == v18[1]) {
    goto LABEL_24;
  }
  uint64_t v139 = v16;
  if (sub_2511C9CA0())
  {
    uint64_t v22 = v9 + 2;
    if (v9 + 2 >= v4)
    {
      uint64_t v2 = v127;
      uint64_t v25 = v145;
      if (v9 < v22) {
        goto LABEL_62;
      }
LABEL_67:
      uint64_t v12 = v22;
      goto LABEL_68;
    }
    int v140 = 1;
    goto LABEL_32;
  }
  char v23 = sub_2511C9CA0();
  uint64_t v16 = v139;
  if ((v23 & 1) == 0)
  {
LABEL_24:
    if (v16 != v19 || v17 != v20)
    {
      int v140 = sub_2511C9CA0();
      uint64_t v22 = v9 + 2;
      uint64_t v25 = v145;
      if (v9 + 2 >= v4) {
        goto LABEL_52;
      }
      goto LABEL_33;
    }
  }
  uint64_t v22 = v9 + 2;
  if (v9 + 2 >= v4)
  {
    uint64_t v12 = v9 + 2;
    uint64_t v2 = v127;
LABEL_56:
    uint64_t v25 = v145;
    if (v12 >= v4) {
      goto LABEL_96;
    }
    goto LABEL_69;
  }
  int v140 = 0;
LABEL_32:
  uint64_t v25 = v145;
LABEL_33:
  uint64_t v133 = v9;
  uint64_t v26 = (uint64_t *)(v125 + 48 * v22);
  uint64_t v27 = v22;
  uint64_t v28 = v12;
  do
  {
    uint64_t v22 = v27;
    uint64_t v29 = *v26;
    uint64_t v30 = v26[1];
    uint64_t v31 = (void *)(v25 + 48 * v28);
    uint64_t v33 = v31[2];
    uint64_t v32 = v31[3];
    if (*(v26 - 2) == *v31 && *(v26 - 1) == v31[1]) {
      goto LABEL_44;
    }
    uint64_t v142 = v22;
    if (sub_2511C9CA0())
    {
      uint64_t v4 = v135;
      uint64_t v22 = v142;
      if ((v140 & 1) == 0)
      {
        uint64_t v12 = v142;
        uint64_t v2 = v127;
        uint64_t v10 = v129;
        uint64_t v25 = v145;
        uint64_t v9 = v133;
        if (v142 >= v135) {
          goto LABEL_96;
        }
LABEL_69:
        if (__OFSUB__(v12, v9)) {
          goto LABEL_180;
        }
        if (v12 - v9 >= v126) {
          goto LABEL_96;
        }
        if (__OFADD__(v9, v126)) {
          goto LABEL_182;
        }
        if (v9 + v126 >= v4) {
          uint64_t v51 = v4;
        }
        else {
          uint64_t v51 = v9 + v126;
        }
        if (v51 < v9)
        {
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (v12 == v51) {
          goto LABEL_96;
        }
        uint64_t v128 = v2;
        uint64_t v130 = v10;
        uint64_t v52 = v123 + 48 * v12;
        uint64_t v132 = v51;
        uint64_t v134 = v9;
        while (2)
        {
          uint64_t v143 = v12;
          uint64_t v53 = (uint64_t *)(v25 + 48 * v12);
          uint64_t v54 = *v53;
          uint64_t v55 = v53[1];
          uint64_t v56 = v53[2];
          uint64_t v57 = v53[3];
          uint64_t v136 = v52;
          while (2)
          {
            uint64_t v58 = (_OWORD *)(v52 - 80);
            uint64_t v59 = *(void *)(v52 - 64);
            uint64_t v60 = *(void *)(v52 - 56);
            if (v54 != *(void *)(v52 - 80) || v55 != *(void *)(v52 - 72))
            {
              uint64_t v138 = *(void *)(v52 - 56);
              uint64_t v141 = *(void *)(v52 - 64);
              if ((sub_2511C9CA0() & 1) == 0)
              {
                char v62 = sub_2511C9CA0();
                uint64_t v60 = v138;
                uint64_t v59 = v141;
                if (v62) {
                  goto LABEL_78;
                }
                break;
              }
LABEL_92:
              uint64_t v25 = v145;
              if (!v145) {
                goto LABEL_185;
              }
              long long v65 = *(_OWORD *)(v52 - 64);
              long long v64 = *(_OWORD *)(v52 - 48);
              *(_OWORD *)(v52 - 48) = *(_OWORD *)v52;
              v52 -= 48;
              uint64_t v54 = *(void *)(v52 + 16);
              uint64_t v55 = *(void *)(v52 + 24);
              uint64_t v56 = *(void *)(v52 + 32);
              uint64_t v57 = *(void *)(v52 + 40);
              v58[3] = *v58;
              v58[4] = v65;
              v58[5] = v64;
              *(void *)(v52 - 32) = v54;
              *(void *)(v52 - 24) = v55;
              *(void *)(v52 - 16) = v56;
              *(void *)(v52 - 8) = v57;
              if (v143 == ++v9) {
                goto LABEL_79;
              }
              continue;
            }
            break;
          }
          BOOL v63 = v56 == v59 && v57 == v60;
          if (!v63 && (sub_2511C9CA0() & 1) != 0) {
            goto LABEL_92;
          }
LABEL_78:
          uint64_t v25 = v145;
LABEL_79:
          uint64_t v12 = v143 + 1;
          uint64_t v52 = v136 + 48;
          uint64_t v9 = v134;
          if (v143 + 1 != v132) {
            continue;
          }
          break;
        }
        uint64_t v12 = v132;
        uint64_t v2 = v128;
        uint64_t v10 = v130;
LABEL_96:
        if (v12 < v9) {
          goto LABEL_175;
        }
        uint64_t v144 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_2511B2920(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v67 = *((void *)v10 + 2);
        unint64_t v66 = *((void *)v10 + 3);
        unint64_t v11 = v67 + 1;
        if (v67 >= v66 >> 1) {
          uint64_t v10 = sub_2511B2920((char *)(v66 > 1), v67 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v11;
        char v68 = v10 + 32;
        uint64_t v69 = &v10[16 * v67 + 32];
        *(void *)uint64_t v69 = v9;
        *((void *)v69 + 1) = v144;
        if (v67)
        {
          while (2)
          {
            unint64_t v70 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v76 = &v68[16 * v11];
              uint64_t v77 = *((void *)v76 - 8);
              uint64_t v78 = *((void *)v76 - 7);
              BOOL v82 = __OFSUB__(v78, v77);
              uint64_t v79 = v78 - v77;
              uint64_t v71 = v145;
              if (v82) {
                goto LABEL_164;
              }
              uint64_t v81 = *((void *)v76 - 6);
              uint64_t v80 = *((void *)v76 - 5);
              BOOL v82 = __OFSUB__(v80, v81);
              uint64_t v74 = v80 - v81;
              char v75 = v82;
              if (v82) {
                goto LABEL_165;
              }
              unint64_t v83 = v11 - 2;
              uint64_t v84 = &v68[16 * v11 - 32];
              uint64_t v86 = *(void *)v84;
              uint64_t v85 = *((void *)v84 + 1);
              BOOL v82 = __OFSUB__(v85, v86);
              uint64_t v87 = v85 - v86;
              if (v82) {
                goto LABEL_167;
              }
              BOOL v82 = __OFADD__(v74, v87);
              uint64_t v88 = v74 + v87;
              if (v82) {
                goto LABEL_170;
              }
              if (v88 >= v79)
              {
                uint64_t v106 = &v68[16 * v70];
                uint64_t v108 = *(void *)v106;
                uint64_t v107 = *((void *)v106 + 1);
                BOOL v82 = __OFSUB__(v107, v108);
                uint64_t v109 = v107 - v108;
                if (v82) {
                  goto LABEL_174;
                }
                BOOL v99 = v74 < v109;
              }
              else
              {
LABEL_115:
                if (v75) {
                  goto LABEL_166;
                }
                unint64_t v83 = v11 - 2;
                uint64_t v89 = &v68[16 * v11 - 32];
                uint64_t v91 = *(void *)v89;
                uint64_t v90 = *((void *)v89 + 1);
                BOOL v92 = __OFSUB__(v90, v91);
                uint64_t v93 = v90 - v91;
                char v94 = v92;
                if (v92) {
                  goto LABEL_169;
                }
                uint64_t v95 = &v68[16 * v70];
                uint64_t v97 = *(void *)v95;
                uint64_t v96 = *((void *)v95 + 1);
                BOOL v82 = __OFSUB__(v96, v97);
                uint64_t v98 = v96 - v97;
                if (v82) {
                  goto LABEL_172;
                }
                if (__OFADD__(v93, v98)) {
                  goto LABEL_173;
                }
                if (v93 + v98 < v74) {
                  goto LABEL_127;
                }
                BOOL v99 = v74 < v98;
              }
              if (v99) {
                unint64_t v70 = v83;
              }
            }
            else
            {
              uint64_t v71 = v145;
              if (v11 == 3)
              {
                uint64_t v73 = *((void *)v10 + 4);
                uint64_t v72 = *((void *)v10 + 5);
                BOOL v82 = __OFSUB__(v72, v73);
                uint64_t v74 = v72 - v73;
                char v75 = v82;
                goto LABEL_115;
              }
              uint64_t v100 = *((void *)v10 + 4);
              uint64_t v101 = *((void *)v10 + 5);
              BOOL v82 = __OFSUB__(v101, v100);
              uint64_t v93 = v101 - v100;
              char v94 = v82;
LABEL_127:
              if (v94) {
                goto LABEL_168;
              }
              uint64_t v102 = &v68[16 * v70];
              uint64_t v104 = *(void *)v102;
              uint64_t v103 = *((void *)v102 + 1);
              BOOL v82 = __OFSUB__(v103, v104);
              uint64_t v105 = v103 - v104;
              if (v82) {
                goto LABEL_171;
              }
              if (v105 < v93) {
                goto LABEL_14;
              }
            }
            unint64_t v110 = v70 - 1;
            if (v70 - 1 >= v11)
            {
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
              goto LABEL_183;
            }
            if (!v71) {
              goto LABEL_186;
            }
            uint64_t v111 = v10;
            uint64_t v112 = &v68[16 * v110];
            uint64_t v113 = *(void *)v112;
            uint64_t v114 = &v68[16 * v70];
            uint64_t v115 = *((void *)v114 + 1);
            sub_251182E68((char *)(v71 + 48 * *(void *)v112), (char *)(v71 + 48 * *(void *)v114), v71 + 48 * v115, v137);
            if (v2) {
              goto LABEL_158;
            }
            if (v115 < v113) {
              goto LABEL_161;
            }
            if (v70 > *((void *)v111 + 2)) {
              goto LABEL_162;
            }
            *(void *)uint64_t v112 = v113;
            *(void *)&v68[16 * v110 + 8] = v115;
            unint64_t v116 = *((void *)v111 + 2);
            if (v70 >= v116) {
              goto LABEL_163;
            }
            uint64_t v10 = v111;
            unint64_t v11 = v116 - 1;
            memmove(&v68[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
            *((void *)v10 + 2) = v116 - 1;
            if (v116 <= 2) {
              goto LABEL_14;
            }
            continue;
          }
        }
        unint64_t v11 = 1;
LABEL_14:
        uint64_t v4 = v135;
        uint64_t v9 = v144;
        uint64_t v8 = v131;
        if (v144 >= v135) {
          goto LABEL_147;
        }
        goto LABEL_15;
      }
      goto LABEL_35;
    }
    char v35 = sub_2511C9CA0();
    uint64_t v22 = v142;
    if ((v35 & 1) == 0)
    {
LABEL_44:
      if (v29 != v33 || v30 != v32)
      {
        uint64_t v37 = v22;
        int v38 = sub_2511C9CA0();
        uint64_t v22 = v37;
        uint64_t v4 = v135;
        if ((v140 ^ v38))
        {
          uint64_t v10 = v129;
          uint64_t v25 = v145;
          goto LABEL_51;
        }
        goto LABEL_35;
      }
    }
    uint64_t v4 = v135;
    if (v140)
    {
      uint64_t v2 = v127;
      uint64_t v10 = v129;
      uint64_t v25 = v145;
      uint64_t v9 = v133;
      if (v22 < v133) {
        goto LABEL_184;
      }
LABEL_61:
      if (v9 < v22)
      {
LABEL_62:
        uint64_t v39 = 48 * v22;
        uint64_t v40 = 48 * v9;
        uint64_t v41 = v22;
        uint64_t v42 = v9;
        while (1)
        {
          if (v42 != --v41)
          {
            if (!v25) {
              goto LABEL_187;
            }
            uint64_t v43 = (_OWORD *)(v25 + v40);
            long long v44 = *(_OWORD *)(v25 + v40);
            uint64_t v45 = v25 + v39;
            uint64_t v46 = *(void *)(v25 + v40 + 16);
            uint64_t v47 = *(void *)(v25 + v40 + 24);
            long long v48 = *(_OWORD *)(v25 + v40 + 32);
            long long v50 = *(_OWORD *)(v25 + v39 - 32);
            long long v49 = *(_OWORD *)(v25 + v39 - 16);
            *uint64_t v43 = *(_OWORD *)(v25 + v39 - 48);
            v43[1] = v50;
            v43[2] = v49;
            *(_OWORD *)(v45 - 48) = v44;
            *(void *)(v45 - 32) = v46;
            *(void *)(v45 - 24) = v47;
            *(_OWORD *)(v45 - 16) = v48;
          }
          ++v42;
          v39 -= 48;
          v40 += 48;
          if (v42 >= v41) {
            goto LABEL_67;
          }
        }
      }
      goto LABEL_67;
    }
LABEL_35:
    v26 += 6;
    uint64_t v27 = v22 + 1;
    uint64_t v28 = v22;
    uint64_t v25 = v145;
  }
  while (v22 + 1 < v4);
  ++v22;
  uint64_t v10 = v129;
LABEL_51:
  uint64_t v9 = v133;
LABEL_52:
  uint64_t v12 = v22;
  uint64_t v2 = v127;
  if ((v140 & 1) == 0)
  {
LABEL_68:
    if (v12 >= v4) {
      goto LABEL_96;
    }
    goto LABEL_69;
  }
  if (v22 >= v9) {
    goto LABEL_61;
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_25117FE48(uint64_t *a1)
{
  char v129 = a1;
  uint64_t v2 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v2)
  {
    if (v2 < 0) {
      goto LABEL_144;
    }
    if (v2) {
      return sub_2511823C0(0, v2, 1, v129);
    }
    return result;
  }
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  if (v2 < -1) {
    goto LABEL_152;
  }
  uint64_t v110 = result;
  if (v2 < 2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    unint64_t v118 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v2 != 1)
    {
      unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
LABEL_108:
      uint64_t v109 = v7;
      if (v10 >= 2)
      {
        uint64_t v102 = *v129;
        do
        {
          unint64_t v103 = v10 - 2;
          if (v10 < 2) {
            goto LABEL_139;
          }
          if (!v102) {
            goto LABEL_151;
          }
          uint64_t v104 = v9;
          uint64_t v105 = *(void *)&v9[16 * v103 + 32];
          uint64_t v106 = *(void *)&v9[16 * v10 + 24];
          sub_251183250((char *)(v102 + 48 * v105), (char *)(v102 + 48 * *(void *)&v9[16 * v10 + 16]), v102 + 48 * v106, v118);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v104 = sub_2511B2EF0((uint64_t)v9);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_141;
          }
          uint64_t v107 = &v104[16 * v103 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v10 > v108) {
            goto LABEL_142;
          }
          uint64_t v9 = v104;
          memmove(&v104[16 * v10 + 16], &v104[16 * v10 + 32], 16 * (v108 - v10));
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v10 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      *(void *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v109 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v5 = v4 >> 1;
    uint64_t v6 = sub_2511C95F0();
    *(void *)(v6 + 16) = v5;
    uint64_t v109 = v6;
    unint64_t v118 = (char *)(v6 + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v11 = v8++;
    uint64_t v115 = v11;
    if (v8 < v2)
    {
      uint64_t v12 = v2;
      uint64_t v111 = v9;
      uint64_t v13 = *v129;
      sub_251139AA0(*v129 + 48 * v8, (uint64_t)v126);
      uint64_t v113 = v13;
      sub_251139AA0(v13 + 48 * v11, (uint64_t)v123);
      uint64_t v14 = v127;
      uint64_t v15 = v128;
      __swift_project_boxed_opaque_existential_1(v126, v127);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 40))(&v121, v14, v15);
      uint64_t v17 = v121;
      uint64_t v16 = v122;
      uint64_t v18 = v124;
      uint64_t v19 = v125;
      __swift_project_boxed_opaque_existential_1(v123, v124);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 40))(&v119, v18, v19);
      if (v17 == v119 && v16 == v120) {
        int v116 = 0;
      }
      else {
        int v116 = sub_2511C9CA0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251139A70((uint64_t)v123);
      sub_251139A70((uint64_t)v126);
      uint64_t v11 = v115;
      uint64_t v8 = v115 + 2;
      if (v115 + 2 < v12)
      {
        uint64_t v20 = v113 + 48 * v115 + 48;
        while (1)
        {
          sub_251139AA0(v20 + 48, (uint64_t)v126);
          sub_251139AA0(v20, (uint64_t)v123);
          uint64_t v21 = v127;
          uint64_t v22 = v128;
          __swift_project_boxed_opaque_existential_1(v126, v127);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 40))(&v121, v21, v22);
          uint64_t v24 = v121;
          uint64_t v23 = v122;
          uint64_t v26 = v124;
          uint64_t v25 = v125;
          __swift_project_boxed_opaque_existential_1(v123, v124);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 40))(&v119, v26, v25);
          if (v24 != v119) {
            goto LABEL_26;
          }
          if (v23 == v120) {
            int v27 = 0;
          }
          else {
LABEL_26:
          }
            int v27 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251139A70((uint64_t)v123);
          sub_251139A70((uint64_t)v126);
          if ((v116 ^ v27)) {
            break;
          }
          ++v8;
          v20 += 48;
          if (v12 == v8)
          {
            uint64_t v2 = v12;
            uint64_t v8 = v12;
            uint64_t v11 = v115;
            goto LABEL_32;
          }
        }
        uint64_t v11 = v115;
      }
      uint64_t v2 = v12;
LABEL_32:
      uint64_t v9 = v111;
      if (v116)
      {
        if (v8 < v11) {
          goto LABEL_145;
        }
        if (v11 < v8)
        {
          uint64_t v28 = (long long *)(v113 + 48 * v8 - 48);
          uint64_t v29 = (long long *)(v113 + 48 * v11);
          uint64_t v30 = v8;
          uint64_t v31 = v11;
          do
          {
            if (v31 != --v30)
            {
              if (!v113) {
                goto LABEL_150;
              }
              long long v32 = *v29;
              long long v33 = v29[1];
              long long v34 = v29[2];
              long long v36 = v28[1];
              long long v35 = v28[2];
              *uint64_t v29 = *v28;
              v29[1] = v36;
              long long v29[2] = v35;
              v28[1] = v33;
              v28[2] = v34;
              *uint64_t v28 = v32;
            }
            ++v31;
            v28 -= 3;
            v29 += 3;
          }
          while (v31 < v30);
        }
      }
    }
    if (v8 >= v2) {
      goto LABEL_60;
    }
    if (__OFSUB__(v8, v11)) {
      goto LABEL_143;
    }
    if (v8 - v11 >= v110) {
      goto LABEL_60;
    }
    if (__OFADD__(v11, v110)) {
      goto LABEL_146;
    }
    uint64_t v37 = v11 + v110 >= v2 ? v2 : v11 + v110;
    if (v37 < v11) {
      break;
    }
    if (v8 != v37)
    {
      uint64_t v112 = v9;
      uint64_t v114 = v37;
      uint64_t v38 = 48 * v8;
      do
      {
        uint64_t v39 = v11;
        uint64_t v117 = v38;
        while (1)
        {
          uint64_t v40 = *v129 + v38;
          sub_251139AA0(v40, (uint64_t)v126);
          sub_251139AA0(v40 - 48, (uint64_t)v123);
          uint64_t v41 = v127;
          uint64_t v42 = v128;
          __swift_project_boxed_opaque_existential_1(v126, v127);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 40))(&v121, v41, v42);
          uint64_t v44 = v121;
          uint64_t v43 = v122;
          uint64_t v45 = v124;
          uint64_t v46 = v125;
          __swift_project_boxed_opaque_existential_1(v123, v124);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v46 + 40))(&v119, v45, v46);
          if (v44 == v119 && v43 == v120) {
            break;
          }
          char v47 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251139A70((uint64_t)v123);
          sub_251139A70((uint64_t)v126);
          if ((v47 & 1) == 0) {
            goto LABEL_51;
          }
          if (!*v129) {
            goto LABEL_148;
          }
          long long v48 = (long long *)(*v129 + v38);
          long long v50 = v48[1];
          long long v49 = v48[2];
          long long v51 = *v48;
          long long v52 = *(v48 - 2);
          long long *v48 = *(v48 - 3);
          v48[1] = v52;
          v48[2] = *(v48 - 1);
          *(v48 - 3) = v51;
          *(v48 - 2) = v50;
          *(v48 - 1) = v49;
          v38 -= 48;
          if (v8 == ++v39) {
            goto LABEL_51;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251139A70((uint64_t)v123);
        sub_251139A70((uint64_t)v126);
LABEL_51:
        ++v8;
        uint64_t v11 = v115;
        uint64_t v38 = v117 + 48;
      }
      while (v8 != v114);
      uint64_t v8 = v114;
      uint64_t v9 = v112;
    }
LABEL_60:
    if (v8 < v11) {
      goto LABEL_138;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_2511B2920(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v54 = *((void *)v9 + 2);
    unint64_t v53 = *((void *)v9 + 3);
    unint64_t v10 = v54 + 1;
    if (v54 >= v53 >> 1) {
      uint64_t v9 = sub_2511B2920((char *)(v53 > 1), v54 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v10;
    uint64_t v55 = v9 + 32;
    uint64_t v56 = &v9[16 * v54 + 32];
    *(void *)uint64_t v56 = v11;
    *((void *)v56 + 1) = v8;
    if (v54)
    {
      while (1)
      {
        unint64_t v57 = v10 - 1;
        if (v10 >= 4)
        {
          char v62 = &v55[16 * v10];
          uint64_t v63 = *((void *)v62 - 8);
          uint64_t v64 = *((void *)v62 - 7);
          BOOL v68 = __OFSUB__(v64, v63);
          uint64_t v65 = v64 - v63;
          if (v68) {
            goto LABEL_127;
          }
          uint64_t v67 = *((void *)v62 - 6);
          uint64_t v66 = *((void *)v62 - 5);
          BOOL v68 = __OFSUB__(v66, v67);
          uint64_t v60 = v66 - v67;
          char v61 = v68;
          if (v68) {
            goto LABEL_128;
          }
          unint64_t v69 = v10 - 2;
          unint64_t v70 = &v55[16 * v10 - 32];
          uint64_t v72 = *(void *)v70;
          uint64_t v71 = *((void *)v70 + 1);
          BOOL v68 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          if (v68) {
            goto LABEL_130;
          }
          BOOL v68 = __OFADD__(v60, v73);
          uint64_t v74 = v60 + v73;
          if (v68) {
            goto LABEL_133;
          }
          if (v74 >= v65)
          {
            BOOL v92 = &v55[16 * v57];
            uint64_t v94 = *(void *)v92;
            uint64_t v93 = *((void *)v92 + 1);
            BOOL v68 = __OFSUB__(v93, v94);
            uint64_t v95 = v93 - v94;
            if (v68) {
              goto LABEL_137;
            }
            BOOL v85 = v60 < v95;
            goto LABEL_97;
          }
        }
        else
        {
          if (v10 != 3)
          {
            uint64_t v86 = *((void *)v9 + 4);
            uint64_t v87 = *((void *)v9 + 5);
            BOOL v68 = __OFSUB__(v87, v86);
            uint64_t v79 = v87 - v86;
            char v80 = v68;
            goto LABEL_91;
          }
          uint64_t v59 = *((void *)v9 + 4);
          uint64_t v58 = *((void *)v9 + 5);
          BOOL v68 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          char v61 = v68;
        }
        if (v61) {
          goto LABEL_129;
        }
        unint64_t v69 = v10 - 2;
        char v75 = &v55[16 * v10 - 32];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v78 = __OFSUB__(v76, v77);
        uint64_t v79 = v76 - v77;
        char v80 = v78;
        if (v78) {
          goto LABEL_132;
        }
        uint64_t v81 = &v55[16 * v57];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v68 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v68) {
          goto LABEL_135;
        }
        if (__OFADD__(v79, v84)) {
          goto LABEL_136;
        }
        if (v79 + v84 >= v60)
        {
          BOOL v85 = v60 < v84;
LABEL_97:
          if (v85) {
            unint64_t v57 = v69;
          }
          goto LABEL_99;
        }
LABEL_91:
        if (v80) {
          goto LABEL_131;
        }
        uint64_t v88 = &v55[16 * v57];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v68 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v68) {
          goto LABEL_134;
        }
        if (v91 < v79) {
          goto LABEL_15;
        }
LABEL_99:
        unint64_t v96 = v57 - 1;
        if (v57 - 1 >= v10)
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!*v129) {
          goto LABEL_149;
        }
        uint64_t v97 = &v55[16 * v96];
        uint64_t v98 = *(void *)v97;
        BOOL v99 = &v55[16 * v57];
        uint64_t v100 = *((void *)v99 + 1);
        sub_251183250((char *)(*v129 + 48 * *(void *)v97), (char *)(*v129 + 48 * *(void *)v99), *v129 + 48 * v100, v118);
        if (v1) {
          goto LABEL_119;
        }
        if (v100 < v98) {
          goto LABEL_124;
        }
        if (v57 > *((void *)v9 + 2)) {
          goto LABEL_125;
        }
        *(void *)uint64_t v97 = v98;
        *(void *)&v55[16 * v96 + 8] = v100;
        unint64_t v101 = *((void *)v9 + 2);
        if (v57 >= v101) {
          goto LABEL_126;
        }
        unint64_t v10 = v101 - 1;
        memmove(&v55[16 * v57], v99 + 16, 16 * (v101 - 1 - v57));
        *((void *)v9 + 2) = v101 - 1;
        if (v101 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v10 = 1;
LABEL_15:
    uint64_t v2 = v129[1];
    if (v8 >= v2)
    {
      uint64_t v7 = v109;
      goto LABEL_108;
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_2511807FC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_142;
    }
    if (v3) {
      return sub_2511825C4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v6 = result;
  uint64_t v97 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    uint64_t v110 = MEMORY[0x263F8EE78];
    __dst = (uint64_t *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v29 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
      if (v29 >= 2)
      {
        uint64_t v87 = *v97;
        do
        {
          unint64_t v88 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_137;
          }
          if (!v87) {
            goto LABEL_150;
          }
          uint64_t v89 = (uint64_t)v9;
          uint64_t v90 = *(void *)&v9[16 * v88 + 32];
          uint64_t v91 = *(void *)&v9[16 * v29 + 24];
          sub_251183754((uint64_t *)(v87 + 8 * v90), (uint64_t *)(v87 + 8 * *(void *)&v9[16 * v29 + 16]), v87 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_138;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            BOOL v92 = (char *)v89;
          }
          else {
            BOOL v92 = sub_2511B2EF0(v89);
          }
          if (v88 >= *((void *)v92 + 2)) {
            goto LABEL_139;
          }
          uint64_t v93 = &v92[16 * v88 + 32];
          *(void *)uint64_t v93 = v90;
          *((void *)v93 + 1) = v91;
          unint64_t v94 = *((void *)v92 + 2);
          if (v29 > v94) {
            goto LABEL_140;
          }
          uint64_t v95 = v92;
          memmove(&v92[16 * v29 + 16], &v92[16 * v29 + 32], 16 * (v94 - v29));
          uint64_t v9 = v95;
          *((void *)v95 + 2) = v94 - 1;
          unint64_t v29 = v94 - 1;
        }
        while (v94 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
LABEL_120:
      *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2511C95C0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    type metadata accessor for WorkCriteriaRecord();
    uint64_t v8 = sub_2511C95F0();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v110 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v98 = *a1 + 16;
  uint64_t v96 = *a1 - 8;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v3;
  uint64_t v101 = v6;
  uint64_t v107 = *a1;
  while (1)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v10 + 1;
    if (v10 + 1 < v3)
    {
      uint64_t v102 = v9;
      uint64_t v109 = *(void *)(v11 + 8 * v13);
      uint64_t v108 = *(void *)(v11 + 8 * v10);
      swift_retain();
      swift_retain();
      int v14 = sub_25117CECC(&v109, &v108);
      if (v1)
      {
LABEL_118:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_120;
      }
      int v15 = v14;
      swift_release();
      swift_release();
      uint64_t v13 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v99 = v12;
        uint64_t v16 = (uint64_t *)(v98 + 8 * v12);
        while (1)
        {
          uint64_t v17 = v13;
          uint64_t v18 = *(v16 - 1);
          uint64_t v109 = *v16;
          uint64_t v108 = v18;
          swift_retain();
          swift_retain();
          int v19 = sub_25117CECC(&v109, &v108);
          swift_release();
          swift_release();
          if ((v15 ^ v19)) {
            break;
          }
          uint64_t v13 = v17 + 1;
          ++v16;
          uint64_t v3 = v105;
          if (v105 == v17 + 1)
          {
            uint64_t v13 = v105;
            uint64_t v6 = v101;
            goto LABEL_21;
          }
        }
        uint64_t v3 = v105;
        uint64_t v6 = v101;
        uint64_t v13 = v17;
LABEL_21:
        uint64_t v12 = v99;
      }
      uint64_t v9 = v102;
      uint64_t v11 = v107;
      if (v15)
      {
        if (v13 < v12) {
          goto LABEL_146;
        }
        if (v12 < v13)
        {
          uint64_t v20 = (uint64_t *)(v96 + 8 * v13);
          uint64_t v21 = v13;
          uint64_t v22 = v12;
          uint64_t v23 = (uint64_t *)(v107 + 8 * v12);
          do
          {
            if (v22 != --v21)
            {
              if (!v107) {
                goto LABEL_149;
              }
              uint64_t v24 = *v23;
              uint64_t *v23 = *v20;
              *uint64_t v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v13 >= v3) {
      goto LABEL_40;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_143;
    }
    if (v13 - v12 >= v6) {
      goto LABEL_40;
    }
    if (__OFADD__(v12, v6)) {
      goto LABEL_144;
    }
    uint64_t v25 = v12 + v6 >= v3 ? v3 : v12 + v6;
    if (v25 < v12) {
      break;
    }
    if (v13 != v25)
    {
      uint64_t v104 = v9;
      BOOL v78 = (uint64_t *)(v96 + 8 * v13);
      uint64_t v100 = v12;
      do
      {
        uint64_t v79 = *(void *)(v11 + 8 * v13);
        uint64_t v80 = v12;
        uint64_t v81 = v78;
        uint64_t v82 = v78;
        while (1)
        {
          uint64_t v109 = v79;
          uint64_t v108 = *v82;
          swift_retain();
          swift_retain();
          char v83 = sub_25117CECC(&v109, &v108);
          if (v1) {
            goto LABEL_118;
          }
          char v84 = v83;
          swift_release();
          swift_release();
          if ((v84 & 1) == 0) {
            break;
          }
          uint64_t v11 = v107;
          if (!v107) {
            goto LABEL_148;
          }
          uint64_t v85 = *v82;
          uint64_t v79 = v82[1];
          *uint64_t v82 = v79;
          v82[1] = v85;
          --v82;
          if (v13 == ++v80) {
            goto LABEL_98;
          }
        }
        uint64_t v11 = v107;
LABEL_98:
        ++v13;
        BOOL v78 = v81 + 1;
        uint64_t v12 = v100;
      }
      while (v13 != v25);
      uint64_t v13 = v25;
      uint64_t v9 = v104;
      if (v25 < v100) {
        goto LABEL_141;
      }
      goto LABEL_41;
    }
LABEL_40:
    if (v13 < v12) {
      goto LABEL_141;
    }
LABEL_41:
    uint64_t v26 = v9;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v9 = v26;
    }
    else {
      uint64_t v9 = sub_2511B2920(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v28 = *((void *)v9 + 2);
    unint64_t v27 = *((void *)v9 + 3);
    unint64_t v29 = v28 + 1;
    uint64_t v11 = v107;
    if (v28 >= v27 >> 1)
    {
      uint64_t v86 = sub_2511B2920((char *)(v27 > 1), v28 + 1, 1, v9);
      uint64_t v11 = v107;
      uint64_t v9 = v86;
    }
    *((void *)v9 + 2) = v29;
    uint64_t v30 = v9 + 32;
    uint64_t v31 = &v9[16 * v28 + 32];
    *(void *)uint64_t v31 = v12;
    *((void *)v31 + 1) = v13;
    uint64_t v103 = v13;
    if (v28)
    {
      while (1)
      {
        unint64_t v32 = v29 - 1;
        if (v29 >= 4)
        {
          uint64_t v37 = &v30[16 * v29];
          uint64_t v38 = *((void *)v37 - 8);
          uint64_t v39 = *((void *)v37 - 7);
          BOOL v43 = __OFSUB__(v39, v38);
          uint64_t v40 = v39 - v38;
          if (v43) {
            goto LABEL_126;
          }
          uint64_t v42 = *((void *)v37 - 6);
          uint64_t v41 = *((void *)v37 - 5);
          BOOL v43 = __OFSUB__(v41, v42);
          uint64_t v35 = v41 - v42;
          char v36 = v43;
          if (v43) {
            goto LABEL_127;
          }
          unint64_t v44 = v29 - 2;
          uint64_t v45 = &v30[16 * v29 - 32];
          uint64_t v47 = *(void *)v45;
          uint64_t v46 = *((void *)v45 + 1);
          BOOL v43 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          if (v43) {
            goto LABEL_129;
          }
          BOOL v43 = __OFADD__(v35, v48);
          uint64_t v49 = v35 + v48;
          if (v43) {
            goto LABEL_132;
          }
          if (v49 >= v40)
          {
            uint64_t v67 = &v30[16 * v32];
            uint64_t v69 = *(void *)v67;
            uint64_t v68 = *((void *)v67 + 1);
            BOOL v43 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v43) {
              goto LABEL_136;
            }
            BOOL v60 = v35 < v70;
            goto LABEL_77;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v61 = *((void *)v9 + 4);
            uint64_t v62 = *((void *)v9 + 5);
            BOOL v43 = __OFSUB__(v62, v61);
            uint64_t v54 = v62 - v61;
            char v55 = v43;
            goto LABEL_71;
          }
          uint64_t v34 = *((void *)v9 + 4);
          uint64_t v33 = *((void *)v9 + 5);
          BOOL v43 = __OFSUB__(v33, v34);
          uint64_t v35 = v33 - v34;
          char v36 = v43;
        }
        if (v36) {
          goto LABEL_128;
        }
        unint64_t v44 = v29 - 2;
        long long v50 = &v30[16 * v29 - 32];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v53 = __OFSUB__(v51, v52);
        uint64_t v54 = v51 - v52;
        char v55 = v53;
        if (v53) {
          goto LABEL_131;
        }
        uint64_t v56 = &v30[16 * v32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v43 = __OFSUB__(v57, v58);
        uint64_t v59 = v57 - v58;
        if (v43) {
          goto LABEL_134;
        }
        if (__OFADD__(v54, v59)) {
          goto LABEL_135;
        }
        if (v54 + v59 >= v35)
        {
          BOOL v60 = v35 < v59;
LABEL_77:
          if (v60) {
            unint64_t v32 = v44;
          }
          goto LABEL_79;
        }
LABEL_71:
        if (v55) {
          goto LABEL_130;
        }
        uint64_t v63 = &v30[16 * v32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v43 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v43) {
          goto LABEL_133;
        }
        if (v66 < v54) {
          goto LABEL_88;
        }
LABEL_79:
        unint64_t v71 = v32 - 1;
        if (v32 - 1 >= v29)
        {
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v72 = v9;
        uint64_t v73 = &v30[16 * v71];
        uint64_t v74 = *(void *)v73;
        char v75 = &v30[16 * v32];
        uint64_t v76 = *((void *)v75 + 1);
        sub_251183754((uint64_t *)(v11 + 8 * *(void *)v73), (uint64_t *)(v11 + 8 * *(void *)v75), v11 + 8 * v76, __dst);
        if (v1) {
          goto LABEL_119;
        }
        if (v76 < v74) {
          goto LABEL_123;
        }
        if (v32 > *((void *)v72 + 2)) {
          goto LABEL_124;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v30[16 * v71 + 8] = v76;
        unint64_t v77 = *((void *)v72 + 2);
        if (v32 >= v77) {
          goto LABEL_125;
        }
        unint64_t v29 = v77 - 1;
        memmove(&v30[16 * v32], v75 + 16, 16 * (v77 - 1 - v32));
        uint64_t v9 = v72;
        *((void *)v72 + 2) = v77 - 1;
        uint64_t v11 = v107;
        if (v77 <= 2) {
          goto LABEL_88;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_88:
    uint64_t v10 = v103;
    uint64_t v3 = v105;
    uint64_t v6 = v101;
    if (v103 >= v105) {
      goto LABEL_104;
    }
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_251180FC4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2511826BC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v107 = result;
  uint64_t v104 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v95 = v11;
      uint64_t v106 = v8;
      if (v12 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v96) {
            goto LABEL_159;
          }
          uint64_t v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v12 + 24];
          sub_251183AB0((char *)(v96 + 32 * v99), (char *)(v96 + 32 * *(void *)&v95[16 * v12 + 16]), v96 + 32 * v100, __dst);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_2511B2EF0((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_149;
          }
          uint64_t v101 = &v98[16 * v97 + 32];
          *(void *)uint64_t v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v12 > v102) {
            goto LABEL_150;
          }
          memmove(&v98[16 * v12 + 16], &v98[16 * v12 + 32], 16 * (v102 - v12));
          uint64_t v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v12 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_2511C95F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v106 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v105 = *a1 + 8;
  uint64_t v103 = *a1 - 32;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v108 = v3;
  uint64_t v109 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int v14 = (uint64_t *)(v10 + 32 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 32 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_2511C9CA0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v105 + 32 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 32 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_2511C9CA0()))
      {
        goto LABEL_36;
      }
      v21 += 4;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 32 * v20;
        uint64_t v26 = 32 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            unint64_t v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            uint64_t v31 = *(void *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 8);
            long long v33 = *(_OWORD *)(v10 + v26 + 16);
            long long v34 = *(_OWORD *)(v10 + v25 - 16);
            *unint64_t v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(void *)(v30 - 32) = v31;
            *(void *)(v30 - 24) = v32;
            *(_OWORD *)(v30 - 16) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v107) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2511B2920(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v46 = *((void *)v11 + 2);
    unint64_t v45 = *((void *)v11 + 3);
    unint64_t v12 = v46 + 1;
    if (v46 >= v45 >> 1) {
      uint64_t v11 = sub_2511B2920((char *)(v45 > 1), v46 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v47 = v11 + 32;
    uint64_t v48 = &v11[16 * v46 + 32];
    *(void *)uint64_t v48 = v13;
    *((void *)v48 + 1) = v9;
    if (v46)
    {
      uint64_t v10 = v109;
      while (1)
      {
        unint64_t v49 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v54 = &v47[16 * v12];
          uint64_t v55 = *((void *)v54 - 8);
          uint64_t v56 = *((void *)v54 - 7);
          BOOL v60 = __OFSUB__(v56, v55);
          uint64_t v57 = v56 - v55;
          if (v60) {
            goto LABEL_135;
          }
          uint64_t v59 = *((void *)v54 - 6);
          uint64_t v58 = *((void *)v54 - 5);
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v52 = v58 - v59;
          char v53 = v60;
          if (v60) {
            goto LABEL_136;
          }
          unint64_t v61 = v12 - 2;
          uint64_t v62 = &v47[16 * v12 - 32];
          uint64_t v64 = *(void *)v62;
          uint64_t v63 = *((void *)v62 + 1);
          BOOL v60 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v60) {
            goto LABEL_138;
          }
          BOOL v60 = __OFADD__(v52, v65);
          uint64_t v66 = v52 + v65;
          if (v60) {
            goto LABEL_141;
          }
          if (v66 >= v57)
          {
            char v84 = &v47[16 * v49];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v60 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v60) {
              goto LABEL_145;
            }
            BOOL v77 = v52 < v87;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v78 = *((void *)v11 + 4);
            uint64_t v79 = *((void *)v11 + 5);
            BOOL v60 = __OFSUB__(v79, v78);
            uint64_t v71 = v79 - v78;
            char v72 = v60;
            goto LABEL_99;
          }
          uint64_t v51 = *((void *)v11 + 4);
          uint64_t v50 = *((void *)v11 + 5);
          BOOL v60 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          char v53 = v60;
        }
        if (v53) {
          goto LABEL_137;
        }
        unint64_t v61 = v12 - 2;
        uint64_t v67 = &v47[16 * v12 - 32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v70 = __OFSUB__(v68, v69);
        uint64_t v71 = v68 - v69;
        char v72 = v70;
        if (v70) {
          goto LABEL_140;
        }
        uint64_t v73 = &v47[16 * v49];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v60 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v60) {
          goto LABEL_143;
        }
        if (__OFADD__(v71, v76)) {
          goto LABEL_144;
        }
        if (v71 + v76 >= v52)
        {
          BOOL v77 = v52 < v76;
LABEL_105:
          if (v77) {
            unint64_t v49 = v61;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v72) {
          goto LABEL_139;
        }
        uint64_t v80 = &v47[16 * v49];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v60 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v60) {
          goto LABEL_142;
        }
        if (v83 < v71) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v88 = v49 - 1;
        if (v49 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v89 = v10;
        uint64_t v90 = &v47[16 * v88];
        uint64_t v91 = *(void *)v90;
        BOOL v92 = &v47[16 * v49];
        uint64_t v93 = *((void *)v92 + 1);
        sub_251183AB0((char *)(v89 + 32 * *(void *)v90), (char *)(v89 + 32 * *(void *)v92), v89 + 32 * v93, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v93 < v91) {
          goto LABEL_132;
        }
        if (v49 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v90 = v91;
        *(void *)&v47[16 * v88 + 8] = v93;
        unint64_t v94 = *((void *)v11 + 2);
        if (v49 >= v94) {
          goto LABEL_134;
        }
        unint64_t v12 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        *((void *)v11 + 2) = v94 - 1;
        BOOL v77 = v94 > 2;
        uint64_t v10 = v109;
        if (!v77) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v109;
LABEL_15:
    uint64_t v3 = v108;
    if (v9 >= v108)
    {
      uint64_t v8 = v106;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v107)) {
    goto LABEL_153;
  }
  if (v13 + v107 >= v3) {
    uint64_t v35 = v3;
  }
  else {
    uint64_t v35 = v13 + v107;
  }
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      uint64_t v36 = v103 + 32 * v9;
      do
      {
        uint64_t v37 = (uint64_t *)(v10 + 32 * v9);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        uint64_t v40 = v13;
        uint64_t v41 = v36;
        do
        {
          BOOL v42 = v38 == *(void *)v41 && v39 == *(void *)(v41 + 8);
          if (v42 || (sub_2511C9CA0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v38 = *(void *)(v41 + 32);
          uint64_t v39 = *(void *)(v41 + 40);
          long long v43 = *(_OWORD *)(v41 + 48);
          long long v44 = *(_OWORD *)(v41 + 16);
          *(_OWORD *)(v41 + 32) = *(_OWORD *)v41;
          *(_OWORD *)(v41 + 48) = v44;
          *(void *)uint64_t v41 = v38;
          *(void *)(v41 + 8) = v39;
          *(_OWORD *)(v41 + 16) = v43;
          v41 -= 32;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 32;
      }
      while (v9 != v35);
      uint64_t v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_2511816B0(uint64_t *a1)
{
  uint64_t v124 = a1;
  uint64_t v2 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v2)
  {
    if (v2 < 0) {
      goto LABEL_144;
    }
    if (v2) {
      return sub_251182790(0, v2, 1, v124);
    }
    return result;
  }
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  if (v2 < -1) {
    goto LABEL_152;
  }
  uint64_t v107 = result;
  if (v2 < 2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v113 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v2 != 1)
    {
      unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
LABEL_109:
      uint64_t v106 = v7;
      if (v10 >= 2)
      {
        uint64_t v99 = *v124;
        do
        {
          unint64_t v100 = v10 - 2;
          if (v10 < 2) {
            goto LABEL_139;
          }
          if (!v99) {
            goto LABEL_151;
          }
          uint64_t v101 = v9;
          uint64_t v102 = *(void *)&v9[16 * v100 + 32];
          uint64_t v103 = *(void *)&v9[16 * v10 + 24];
          sub_251183D4C((char *)(v99 + 40 * v102), (char *)(v99 + 40 * *(void *)&v9[16 * v10 + 16]), v99 + 40 * v103, v113);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v101 = sub_2511B2EF0((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_141;
          }
          uint64_t v104 = &v101[16 * v100 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v10 > v105) {
            goto LABEL_142;
          }
          memmove(&v101[16 * v10 + 16], &v101[16 * v10 + 32], 16 * (v105 - v10));
          uint64_t v9 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v10 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_120:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v5 = v4 >> 1;
    sub_251131944(0, (unint64_t *)&qword_26B2178E8);
    uint64_t v6 = sub_2511C95F0();
    *(void *)(v6 + 16) = v5;
    uint64_t v106 = v6;
    uint64_t v113 = (char *)(v6 + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v11 = v8++;
    uint64_t v109 = v9;
    uint64_t v110 = v11;
    if (v8 < v2)
    {
      uint64_t v12 = v2;
      uint64_t v13 = *v124;
      sub_25112FD4C(*v124 + 40 * v8, (uint64_t)&v121);
      sub_25112FD4C(v13 + 40 * v11, (uint64_t)v118);
      uint64_t v14 = v122;
      uint64_t v15 = v123;
      __swift_project_boxed_opaque_existential_1(&v121, v122);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 40))(&v116, v14, v15);
      uint64_t v17 = v116;
      uint64_t v16 = v117;
      uint64_t v18 = v119;
      uint64_t v19 = v120;
      __swift_project_boxed_opaque_existential_1(v118, v119);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 40))(&v114, v18, v19);
      if (v17 == v114 && v16 == v115) {
        int v111 = 0;
      }
      else {
        int v111 = sub_2511C9CA0();
      }
      uint64_t v2 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
      uint64_t v11 = v110;
      uint64_t v8 = v110 + 2;
      if (v110 + 2 < v12)
      {
        uint64_t v20 = v13 + 40 * v110 + 40;
        while (1)
        {
          sub_25112FD4C(v20 + 40, (uint64_t)&v121);
          sub_25112FD4C(v20, (uint64_t)v118);
          uint64_t v21 = v122;
          uint64_t v22 = v123;
          __swift_project_boxed_opaque_existential_1(&v121, v122);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 40))(&v116, v21, v22);
          uint64_t v24 = v116;
          uint64_t v23 = v117;
          uint64_t v26 = v119;
          uint64_t v25 = v120;
          __swift_project_boxed_opaque_existential_1(v118, v119);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 40))(&v114, v26, v25);
          if (v24 != v114) {
            goto LABEL_26;
          }
          if (v23 == v115) {
            int v27 = 0;
          }
          else {
LABEL_26:
          }
            int v27 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
          if ((v111 ^ v27)) {
            break;
          }
          ++v8;
          v20 += 40;
          if (v12 == v8)
          {
            uint64_t v2 = v12;
            uint64_t v8 = v12;
            uint64_t v11 = v110;
            goto LABEL_31;
          }
        }
        uint64_t v11 = v110;
        uint64_t v2 = v12;
      }
LABEL_31:
      if (v111)
      {
        if (v8 < v11) {
          goto LABEL_145;
        }
        if (v11 < v8)
        {
          uint64_t v28 = 40 * v8 - 40;
          uint64_t v29 = 40 * v11;
          uint64_t v30 = v8;
          uint64_t v31 = v11;
          do
          {
            if (v31 != --v30)
            {
              if (!v13) {
                goto LABEL_150;
              }
              uint64_t v32 = v13 + v29;
              sub_25112F14C((long long *)(v13 + v29), (uint64_t)&v121);
              uint64_t v33 = *(void *)(v13 + v28 + 32);
              long long v34 = *(_OWORD *)(v13 + v28 + 16);
              *(_OWORD *)uint64_t v32 = *(_OWORD *)(v13 + v28);
              *(_OWORD *)(v32 + 16) = v34;
              *(void *)(v32 + 32) = v33;
              sub_25112F14C(&v121, v13 + v28);
            }
            ++v31;
            v28 -= 40;
            v29 += 40;
          }
          while (v31 < v30);
        }
      }
    }
    if (v8 >= v2) {
      goto LABEL_59;
    }
    if (__OFSUB__(v8, v11)) {
      goto LABEL_143;
    }
    if (v8 - v11 >= v107) {
      goto LABEL_59;
    }
    if (__OFADD__(v11, v107)) {
      goto LABEL_146;
    }
    uint64_t v35 = v11 + v107 >= v2 ? v2 : v11 + v107;
    if (v35 < v11) {
      break;
    }
    if (v8 != v35)
    {
      uint64_t v36 = 40 * v8 - 40;
      uint64_t v108 = v35;
      do
      {
        uint64_t v37 = v11;
        uint64_t v112 = v36;
        while (1)
        {
          uint64_t v38 = *v124 + v36;
          sub_25112FD4C(v38 + 40, (uint64_t)&v121);
          sub_25112FD4C(v38, (uint64_t)v118);
          uint64_t v39 = v122;
          uint64_t v40 = v123;
          __swift_project_boxed_opaque_existential_1(&v121, v122);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v40 + 40))(&v116, v39, v40);
          uint64_t v42 = v116;
          uint64_t v41 = v117;
          uint64_t v43 = v119;
          uint64_t v44 = v120;
          __swift_project_boxed_opaque_existential_1(v118, v119);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 40))(&v114, v43, v44);
          if (v42 == v114 && v41 == v115) {
            break;
          }
          char v45 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
          if ((v45 & 1) == 0) {
            goto LABEL_50;
          }
          uint64_t v46 = *v124;
          if (!*v124) {
            goto LABEL_148;
          }
          uint64_t v47 = v46 + v36;
          sub_25112F14C((long long *)(v46 + v36 + 40), (uint64_t)&v121);
          long long v48 = *(_OWORD *)(v47 + 16);
          *(_OWORD *)(v47 + 40) = *(_OWORD *)v47;
          *(_OWORD *)(v47 + 56) = v48;
          *(void *)(v47 + 72) = *(void *)(v47 + 32);
          sub_25112F14C(&v121, v47);
          v36 -= 40;
          if (v8 == ++v37) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
LABEL_50:
        ++v8;
        uint64_t v11 = v110;
        uint64_t v36 = v112 + 40;
      }
      while (v8 != v108);
      uint64_t v8 = v108;
    }
LABEL_59:
    if (v8 < v11) {
      goto LABEL_138;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v9 = v109;
    }
    else {
      uint64_t v9 = sub_2511B2920(0, *((void *)v109 + 2) + 1, 1, v109);
    }
    unint64_t v50 = *((void *)v9 + 2);
    unint64_t v49 = *((void *)v9 + 3);
    unint64_t v10 = v50 + 1;
    if (v50 >= v49 >> 1) {
      uint64_t v9 = sub_2511B2920((char *)(v49 > 1), v50 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v10;
    uint64_t v51 = v9 + 32;
    uint64_t v52 = &v9[16 * v50 + 32];
    *(void *)uint64_t v52 = v11;
    *((void *)v52 + 1) = v8;
    if (v50)
    {
      while (1)
      {
        unint64_t v53 = v10 - 1;
        if (v10 >= 4)
        {
          uint64_t v58 = &v51[16 * v10];
          uint64_t v59 = *((void *)v58 - 8);
          uint64_t v60 = *((void *)v58 - 7);
          BOOL v64 = __OFSUB__(v60, v59);
          uint64_t v61 = v60 - v59;
          if (v64) {
            goto LABEL_127;
          }
          uint64_t v63 = *((void *)v58 - 6);
          uint64_t v62 = *((void *)v58 - 5);
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v56 = v62 - v63;
          char v57 = v64;
          if (v64) {
            goto LABEL_128;
          }
          unint64_t v65 = v10 - 2;
          uint64_t v66 = &v51[16 * v10 - 32];
          uint64_t v68 = *(void *)v66;
          uint64_t v67 = *((void *)v66 + 1);
          BOOL v64 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          if (v64) {
            goto LABEL_130;
          }
          BOOL v64 = __OFADD__(v56, v69);
          uint64_t v70 = v56 + v69;
          if (v64) {
            goto LABEL_133;
          }
          if (v70 >= v61)
          {
            unint64_t v88 = &v51[16 * v53];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v64 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v64) {
              goto LABEL_137;
            }
            BOOL v81 = v56 < v91;
            goto LABEL_96;
          }
        }
        else
        {
          if (v10 != 3)
          {
            uint64_t v82 = *((void *)v9 + 4);
            uint64_t v83 = *((void *)v9 + 5);
            BOOL v64 = __OFSUB__(v83, v82);
            uint64_t v75 = v83 - v82;
            char v76 = v64;
            goto LABEL_90;
          }
          uint64_t v55 = *((void *)v9 + 4);
          uint64_t v54 = *((void *)v9 + 5);
          BOOL v64 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          char v57 = v64;
        }
        if (v57) {
          goto LABEL_129;
        }
        unint64_t v65 = v10 - 2;
        uint64_t v71 = &v51[16 * v10 - 32];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v74 = __OFSUB__(v72, v73);
        uint64_t v75 = v72 - v73;
        char v76 = v74;
        if (v74) {
          goto LABEL_132;
        }
        BOOL v77 = &v51[16 * v53];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v64 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v64) {
          goto LABEL_135;
        }
        if (__OFADD__(v75, v80)) {
          goto LABEL_136;
        }
        if (v75 + v80 >= v56)
        {
          BOOL v81 = v56 < v80;
LABEL_96:
          if (v81) {
            unint64_t v53 = v65;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v76) {
          goto LABEL_131;
        }
        char v84 = &v51[16 * v53];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v64 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v64) {
          goto LABEL_134;
        }
        if (v87 < v75) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v92 = v53 - 1;
        if (v53 - 1 >= v10)
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!*v124) {
          goto LABEL_149;
        }
        uint64_t v93 = v9;
        unint64_t v94 = &v51[16 * v92];
        uint64_t v95 = *(void *)v94;
        uint64_t v96 = &v51[16 * v53];
        uint64_t v97 = *((void *)v96 + 1);
        sub_251183D4C((char *)(*v124 + 40 * *(void *)v94), (char *)(*v124 + 40 * *(void *)v96), *v124 + 40 * v97, v113);
        if (v1) {
          goto LABEL_120;
        }
        if (v97 < v95) {
          goto LABEL_124;
        }
        if (v53 > *((void *)v93 + 2)) {
          goto LABEL_125;
        }
        *(void *)unint64_t v94 = v95;
        *(void *)&v51[16 * v92 + 8] = v97;
        unint64_t v98 = *((void *)v93 + 2);
        if (v53 >= v98) {
          goto LABEL_126;
        }
        unint64_t v10 = v98 - 1;
        memmove(&v51[16 * v53], v96 + 16, 16 * (v98 - 1 - v53));
        uint64_t v9 = v93;
        *((void *)v93 + 2) = v98 - 1;
        if (v98 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v10 = 1;
LABEL_15:
    uint64_t v2 = v124[1];
    if (v8 >= v2)
    {
      uint64_t v7 = v106;
      goto LABEL_109;
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_2511820AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = (void *)(*a4 + 48 * a3 + 40);
    uint64_t v25 = result;
    uint64_t v28 = *a4;
LABEL_4:
    uint64_t v7 = (uint64_t *)(v5 + 48 * a3);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = v7[2];
    uint64_t v11 = v7[3];
    uint64_t v12 = v7[4];
    uint64_t v13 = v7[5];
    int v27 = v6;
    uint64_t v29 = a3;
    while (1)
    {
      uint64_t v14 = *(v6 - 11);
      uint64_t v16 = *(v6 - 10);
      uint64_t v15 = v6 - 11;
      v32[0] = v8;
      v32[1] = v9;
      long long v32[2] = v10;
      v32[3] = v11;
      void v32[4] = v12;
      v32[5] = v13;
      uint64_t v17 = *(v6 - 9);
      uint64_t v18 = *(v6 - 8);
      uint64_t v19 = *(v6 - 7);
      uint64_t v20 = *(v6 - 6);
      uint64_t v30 = result;
      v31[0] = v14;
      v31[1] = v16;
      void v31[2] = v17;
      void v31[3] = v18;
      v31[4] = v19;
      v31[5] = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v21 = sub_25117D374((uint64_t)v32, (uint64_t)v31);
      uint64_t v33 = v4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = v33;
      if (v33) {
        break;
      }
      if ((v21 & 1) == 0)
      {
        uint64_t v5 = v28;
        uint64_t v24 = v29;
LABEL_11:
        a3 = v24 + 1;
        uint64_t v6 = v27 + 6;
        uint64_t result = v25;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v5 = v28;
      if (!v28)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = *v6;
      long long v23 = *(_OWORD *)(v6 - 9);
      long long v22 = *(_OWORD *)(v6 - 7);
      *(v6 - 6) = *v6;
      v6 -= 6;
      uint64_t v8 = v6[1];
      uint64_t v9 = v6[2];
      uint64_t v10 = v6[3];
      uint64_t v11 = v6[4];
      uint64_t v12 = v6[5];
      v15[3] = *v15;
      v15[4] = v23;
      v15[5] = v22;
      *(v6 - 5) = v8;
      *(v6 - 4) = v9;
      *(v6 - 3) = v10;
      *(v6 - 2) = v11;
      *(v6 - 1) = v12;
      uint64_t v24 = v29;
      uint64_t result = v30 + 1;
      if (v29 == v30 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_251182250(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = result;
  if (a3 != a2)
  {
    uint64_t v23 = *a4;
    uint64_t v4 = *a4 + 48 * a3 + 32;
LABEL_5:
    uint64_t v24 = a3;
    uint64_t v5 = (uint64_t *)(v23 + 48 * a3);
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    uint64_t v8 = v5[2];
    uint64_t v9 = v5[3];
    uint64_t v10 = v19;
    uint64_t v20 = v4;
    while (1)
    {
      uint64_t v11 = (_OWORD *)(v4 - 80);
      uint64_t v12 = *(void *)(v4 - 64);
      uint64_t v13 = *(void *)(v4 - 56);
      if (v6 != *(void *)(v4 - 80) || v7 != *(void *)(v4 - 72))
      {
        uint64_t v21 = *(void *)(v4 - 56);
        uint64_t v22 = *(void *)(v4 - 64);
        uint64_t result = sub_2511C9CA0();
        if (result) {
          goto LABEL_17;
        }
        uint64_t result = sub_2511C9CA0();
        uint64_t v13 = v21;
        uint64_t v12 = v22;
        if (result) {
          goto LABEL_4;
        }
      }
      BOOL v15 = v8 == v12 && v9 == v13;
      if (v15 || (uint64_t result = sub_2511C9CA0(), (result & 1) == 0))
      {
LABEL_4:
        a3 = v24 + 1;
        uint64_t v4 = v20 + 48;
        if (v24 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
LABEL_17:
      if (!v23)
      {
        __break(1u);
        return result;
      }
      long long v17 = *(_OWORD *)(v4 - 64);
      long long v16 = *(_OWORD *)(v4 - 48);
      *(_OWORD *)(v4 - 48) = *(_OWORD *)v4;
      v4 -= 48;
      uint64_t v6 = *(void *)(v4 + 16);
      uint64_t v7 = *(void *)(v4 + 24);
      uint64_t v8 = *(void *)(v4 + 32);
      uint64_t v9 = *(void *)(v4 + 40);
      long long v11[3] = *v11;
      void v11[4] = v17;
      v11[5] = v16;
      *(void *)(v4 - 32) = v6;
      *(void *)(v4 - 24) = v7;
      *(void *)(v4 - 16) = v8;
      *(void *)(v4 - 8) = v9;
      if (v24 == ++v10) {
        goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_2511823C0(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v21 = result;
  uint64_t v31 = a3;
  if (a3 != a2)
  {
    uint64_t v5 = 48 * v31;
LABEL_6:
    uint64_t v6 = v21;
    uint64_t v22 = v5;
    while (1)
    {
      uint64_t v7 = *a4 + v5;
      sub_251139AA0(v7, (uint64_t)v28);
      sub_251139AA0(v7 - 48, (uint64_t)v25);
      uint64_t v8 = v29;
      uint64_t v9 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v24, v8, v9);
      uint64_t v11 = v24[0];
      uint64_t v10 = v24[1];
      uint64_t v12 = v26;
      uint64_t v13 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 40))(v23, v12, v13);
      if (v11 == v23[0] && v10 == v23[1])
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251139A70((uint64_t)v25);
        uint64_t result = sub_251139A70((uint64_t)v28);
LABEL_5:
        uint64_t v5 = v22 + 48;
        if (++v31 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v14 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251139A70((uint64_t)v25);
      uint64_t result = sub_251139A70((uint64_t)v28);
      if ((v14 & 1) == 0) {
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      BOOL v15 = (long long *)(*a4 + v5);
      long long v17 = v15[1];
      long long v16 = v15[2];
      long long v18 = *v15;
      long long v19 = *(v15 - 2);
      *BOOL v15 = *(v15 - 3);
      v15[1] = v19;
      _OWORD v15[2] = *(v15 - 1);
      *(v15 - 3) = v18;
      *(v15 - 2) = v17;
      *(v15 - 1) = v16;
      v5 -= 48;
      if (v31 == ++v6) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2511825C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
    uint64_t v13 = result;
LABEL_4:
    uint64_t v9 = *(void *)(v7 + 8 * v5);
    uint64_t v10 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v16 = v9;
      uint64_t v15 = *v10;
      swift_retain();
      swift_retain();
      char v11 = sub_25117CECC(&v16, &v15);
      swift_release();
      uint64_t result = swift_release();
      if (v4) {
        break;
      }
      if (v11)
      {
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = *v10;
        uint64_t v9 = v10[1];
        uint64_t *v10 = v9;
        v10[1] = v12;
        --v10;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = v13;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_2511826BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 - 32;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 32 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)v12 && v10 == *(void *)(v12 + 8);
      if (v13 || (uint64_t result = sub_2511C9CA0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *(void *)(v12 + 32);
      uint64_t v10 = *(void *)(v12 + 40);
      long long v14 = *(_OWORD *)(v12 + 48);
      long long v15 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)(v12 + 32) = *(_OWORD *)v12;
      *(_OWORD *)(v12 + 48) = v15;
      *(void *)uint64_t v12 = result;
      *(void *)(v12 + 8) = v10;
      *(_OWORD *)(v12 + 16) = v14;
      v12 -= 32;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251182790(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = result;
  uint64_t v29 = a3;
  if (a3 != a2)
  {
    uint64_t v5 = 40 * v29 - 40;
LABEL_6:
    uint64_t v6 = v19;
    uint64_t v20 = v5;
    while (1)
    {
      uint64_t v7 = *a4 + v5;
      sub_25112FD4C(v7 + 40, (uint64_t)&v26);
      sub_25112FD4C(v7, (uint64_t)v23);
      uint64_t v8 = v27;
      uint64_t v9 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, v27);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v22, v8, v9);
      uint64_t v11 = v22[0];
      uint64_t v10 = v22[1];
      uint64_t v12 = v24;
      uint64_t v13 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 40))(v21, v12, v13);
      if (v11 == v21[0] && v10 == v21[1])
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
LABEL_5:
        uint64_t v5 = v20 + 40;
        if (++v29 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v14 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      if ((v14 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v15 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v16 = v15 + v5;
      sub_25112F14C((long long *)(v15 + v5 + 40), (uint64_t)&v26);
      long long v17 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)(v16 + 40) = *(_OWORD *)v16;
      *(_OWORD *)(v16 + 56) = v17;
      *(void *)(v16 + 72) = *(void *)(v16 + 32);
      uint64_t result = sub_25112F14C(&v26, v16);
      v5 -= 40;
      if (v29 == ++v6) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2511829A4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 48;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 48;
  BOOL v81 = __src;
  v80[0] = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -47)
    {
      if (__dst != a2 || &a2[48 * v10] <= __dst) {
        memmove(__dst, a2, 48 * v10);
      }
      uint64_t v32 = &v4[48 * v10];
      uint64_t v79 = v32;
      BOOL v81 = v5;
      if (v6 < v5 && v9 >= 48)
      {
        uint64_t v33 = (char *)(a3 - 48);
        long long v34 = v5;
        char v57 = v4;
        unint64_t v65 = v6;
        while (1)
        {
          uint64_t v61 = v5;
          uint64_t v63 = v33;
          unint64_t v59 = (unint64_t)v32;
          uint64_t v35 = *((void *)v32 - 6);
          uint64_t v36 = *((void *)v32 - 5);
          v32 -= 48;
          uint64_t v37 = *((void *)v32 + 2);
          uint64_t v38 = *((void *)v32 + 3);
          uint64_t v39 = *((void *)v32 + 4);
          uint64_t v40 = *((void *)v32 + 5);
          uint64_t v73 = v35;
          uint64_t v74 = v36;
          uint64_t v75 = v37;
          uint64_t v76 = v38;
          uint64_t v77 = v39;
          uint64_t v78 = v40;
          uint64_t v41 = *((void *)v34 - 6);
          uint64_t v42 = *((void *)v34 - 5);
          v34 -= 48;
          uint64_t v43 = *((void *)v34 + 2);
          uint64_t v44 = *((void *)v34 + 3);
          uint64_t v45 = *((void *)v34 + 4);
          uint64_t v46 = *((void *)v34 + 5);
          uint64_t v67 = v41;
          uint64_t v68 = v42;
          uint64_t v69 = v43;
          uint64_t v70 = v44;
          uint64_t v71 = v45;
          uint64_t v72 = v46;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v47 = sub_25117D374((uint64_t)&v73, (uint64_t)&v67);
          if (v66) {
            goto LABEL_40;
          }
          char v48 = v47;
          uint64_t v58 = v63 + 48;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v48)
          {
            uint64_t v32 = (char *)v59;
            unint64_t v49 = v57;
            unint64_t v50 = v63;
            unint64_t v51 = (unint64_t)v65;
            if (v58 != v61 || v63 >= v61)
            {
              long long v52 = *(_OWORD *)v34;
              long long v53 = *((_OWORD *)v34 + 2);
              *((_OWORD *)v63 + 1) = *((_OWORD *)v34 + 1);
              *((_OWORD *)v63 + 2) = v53;
              *(_OWORD *)uint64_t v63 = v52;
            }
            BOOL v81 = v34;
          }
          else
          {
            uint64_t v79 = v32;
            unint64_t v49 = v57;
            unint64_t v50 = v63;
            unint64_t v51 = (unint64_t)v65;
            long long v34 = v61;
            if ((unint64_t)v58 < v59 || (unint64_t)v63 >= v59 || v58 != (char *)v59)
            {
              long long v54 = *(_OWORD *)v32;
              long long v55 = *((_OWORD *)v32 + 2);
              *((_OWORD *)v63 + 1) = *((_OWORD *)v32 + 1);
              *((_OWORD *)v63 + 2) = v55;
              *(_OWORD *)uint64_t v63 = v54;
            }
          }
          if ((unint64_t)v34 > v51)
          {
            uint64_t v33 = v50 - 48;
            uint64_t v5 = v34;
            if (v32 > v49) {
              continue;
            }
          }
          break;
        }
      }
LABEL_39:
      sub_2511B2C80((void **)&v81, v80, &v79);
      return 1;
    }
  }
  else if (v7 >= -47)
  {
    if (__dst != __src || &__src[48 * v8] <= __dst) {
      memmove(__dst, __src, 48 * v8);
    }
    uint64_t v60 = &v4[48 * v8];
    uint64_t v79 = v60;
    if ((unint64_t)v5 < a3 && v7 >= 48)
    {
      while (1)
      {
        BOOL v64 = v6;
        uint64_t v11 = *((void *)v5 + 1);
        uint64_t v12 = *((void *)v5 + 2);
        uint64_t v13 = *((void *)v5 + 3);
        uint64_t v14 = *((void *)v5 + 4);
        uint64_t v15 = *((void *)v5 + 5);
        uint64_t v16 = v5;
        uint64_t v73 = *(void *)v5;
        uint64_t v74 = v11;
        uint64_t v75 = v12;
        uint64_t v76 = v13;
        uint64_t v77 = v14;
        uint64_t v78 = v15;
        uint64_t v17 = *(void *)v4;
        uint64_t v18 = *((void *)v4 + 1);
        uint64_t v19 = *((void *)v4 + 2);
        uint64_t v20 = *((void *)v4 + 3);
        uint64_t v21 = v4;
        uint64_t v22 = *((void *)v4 + 4);
        uint64_t v23 = *((void *)v4 + 5);
        uint64_t v67 = v17;
        uint64_t v68 = v18;
        uint64_t v69 = v19;
        uint64_t v70 = v20;
        uint64_t v71 = v22;
        uint64_t v72 = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v24 = sub_25117D374((uint64_t)&v73, (uint64_t)&v67);
        if (v66) {
          break;
        }
        char v25 = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25)
        {
          long long v26 = v16 + 48;
          uint64_t v27 = v64;
          uint64_t v4 = v21;
          if (v64 < v16 || v64 >= v26 || v64 != v16)
          {
            long long v28 = *(_OWORD *)v16;
            long long v29 = *((_OWORD *)v16 + 2);
            *((_OWORD *)v64 + 1) = *((_OWORD *)v16 + 1);
            *((_OWORD *)v64 + 2) = v29;
            *(_OWORD *)BOOL v64 = v28;
          }
        }
        else
        {
          uint64_t v27 = v64;
          if (v64 != v21)
          {
            long long v30 = *(_OWORD *)v21;
            long long v31 = *((_OWORD *)v21 + 2);
            *((_OWORD *)v64 + 1) = *((_OWORD *)v21 + 1);
            *((_OWORD *)v64 + 2) = v31;
            *(_OWORD *)BOOL v64 = v30;
          }
          uint64_t v4 = v21 + 48;
          v80[0] = v21 + 48;
          long long v26 = v16;
        }
        uint64_t v6 = v27 + 48;
        BOOL v81 = v6;
        if (v4 < v60)
        {
          uint64_t v5 = v26;
          if ((unint64_t)v26 < a3) {
            continue;
          }
        }
        goto LABEL_39;
      }
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2511B2C80((void **)&v81, v80, &v79);
      return 1;
    }
    goto LABEL_39;
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251182E68(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = a2 - __src;
  int64_t v7 = (a2 - __src) / 48;
  uint64_t v8 = a3 - (void)a2;
  uint64_t v9 = (uint64_t)(a3 - (void)a2) / 48;
  long long v54 = __src;
  long long v53 = a4;
  if (v7 >= v9)
  {
    if (v8 < -47) {
      goto LABEL_60;
    }
    if (a4 != a2 || &a2[48 * v9] <= a4) {
      memmove(a4, a2, 48 * v9);
    }
    uint64_t v23 = &a4[48 * v9];
    long long v52 = v23;
    long long v54 = v4;
    if (v5 >= v4 || v8 < 48)
    {
LABEL_59:
      sub_2511B2C80((void **)&v54, (const void **)&v53, &v52);
      return 1;
    }
    char v24 = (char *)(a3 - 48);
    char v25 = v4;
    uint64_t v45 = v5;
    while (1)
    {
      unint64_t v49 = v24 + 48;
      unint64_t v51 = (unint64_t)v23;
      long long v26 = v23 - 48;
      uint64_t v28 = *((void *)v23 - 4);
      uint64_t v27 = *((void *)v23 - 3);
      uint64_t v29 = *((void *)v25 - 6);
      uint64_t v30 = *((void *)v25 - 5);
      v25 -= 48;
      uint64_t v32 = *((void *)v25 + 2);
      uint64_t v31 = *((void *)v25 + 3);
      if (*((void *)v23 - 6) == v29 && *((void *)v23 - 5) == v30) {
        goto LABEL_43;
      }
      uint64_t v41 = *((void *)v25 + 3);
      uint64_t v42 = *((void *)v23 - 3);
      uint64_t v43 = *((void *)v23 - 4);
      if (sub_2511C9CA0()) {
        goto LABEL_48;
      }
      char v34 = sub_2511C9CA0();
      uint64_t v31 = v41;
      uint64_t v27 = v42;
      uint64_t v28 = v43;
      if ((v34 & 1) == 0)
      {
LABEL_43:
        BOOL v35 = v28 == v32 && v27 == v31;
        if (!v35 && (sub_2511C9CA0() & 1) != 0)
        {
LABEL_48:
          if (v49 != v4 || v24 >= v4)
          {
            long long v36 = *(_OWORD *)v25;
            long long v37 = *((_OWORD *)v25 + 2);
            *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
            *((_OWORD *)v24 + 2) = v37;
            *(_OWORD *)char v24 = v36;
          }
          long long v54 = v25;
          uint64_t v23 = (char *)v51;
          if (v25 <= v45) {
            goto LABEL_59;
          }
          goto LABEL_58;
        }
      }
      long long v52 = v26;
      if ((unint64_t)v49 < v51 || (unint64_t)v24 >= v51 || v49 != (char *)v51)
      {
        long long v38 = *(_OWORD *)v26;
        long long v39 = *((_OWORD *)v26 + 2);
        *((_OWORD *)v24 + 1) = *((_OWORD *)v26 + 1);
        *((_OWORD *)v24 + 2) = v39;
        *(_OWORD *)char v24 = v38;
      }
      char v25 = v4;
      uint64_t v23 = v26;
      if (v4 <= v45) {
        goto LABEL_59;
      }
LABEL_58:
      v24 -= 48;
      uint64_t v4 = v25;
      if (v23 <= a4) {
        goto LABEL_59;
      }
    }
  }
  if (v6 >= -47)
  {
    if (a4 != __src || &__src[48 * v7] <= a4) {
      memmove(a4, __src, 48 * v7);
    }
    char v48 = &a4[48 * v7];
    long long v52 = v48;
    if ((unint64_t)v4 < a3 && v6 >= 48)
    {
      uint64_t v10 = a4;
      while (1)
      {
        uint64_t v12 = (void *)*((void *)v4 + 2);
        uint64_t v11 = *((void *)v4 + 3);
        uint64_t v13 = (void *)*((void *)v10 + 2);
        uint64_t v14 = *((void *)v10 + 3);
        if (*(void *)v4 != *(void *)v10 || *((void *)v4 + 1) != *((void *)v10 + 1))
        {
          uint64_t v44 = *((void *)v4 + 3);
          __dsta = (void *)*((void *)v4 + 2);
          if (sub_2511C9CA0()) {
            goto LABEL_20;
          }
          char v16 = sub_2511C9CA0();
          uint64_t v11 = v44;
          uint64_t v12 = __dsta;
          if (v16) {
            goto LABEL_24;
          }
        }
        BOOL v17 = v12 == v13 && v11 == v14;
        if (v17 || (sub_2511C9CA0() & 1) == 0)
        {
LABEL_24:
          if (v5 != v10)
          {
            long long v21 = *(_OWORD *)v10;
            long long v22 = *((_OWORD *)v10 + 2);
            *((_OWORD *)v5 + 1) = *((_OWORD *)v10 + 1);
            *((_OWORD *)v5 + 2) = v22;
            *(_OWORD *)uint64_t v5 = v21;
          }
          v10 += 48;
          long long v53 = v10;
          uint64_t v18 = v4;
          goto LABEL_27;
        }
LABEL_20:
        uint64_t v18 = v4 + 48;
        if (v5 < v4 || v5 >= v18 || v5 != v4)
        {
          long long v19 = *(_OWORD *)v4;
          long long v20 = *((_OWORD *)v4 + 2);
          *((_OWORD *)v5 + 1) = *((_OWORD *)v4 + 1);
          *((_OWORD *)v5 + 2) = v20;
          *(_OWORD *)uint64_t v5 = v19;
        }
LABEL_27:
        v5 += 48;
        if (v10 < v48)
        {
          uint64_t v4 = v18;
          if ((unint64_t)v18 < a3) {
            continue;
          }
        }
        long long v54 = v5;
        goto LABEL_59;
      }
    }
    goto LABEL_59;
  }
LABEL_60:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251183250(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  int64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v62 = __src;
  uint64_t v61 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -47) {
      goto LABEL_49;
    }
    if (__dst != a2 || &a2[48 * v11] <= __dst) {
      memmove(__dst, a2, 48 * v11);
    }
    uint64_t v27 = &v4[48 * v11];
    uint64_t v60 = v27;
    uint64_t v62 = v6;
    if (__src >= v6 || v10 < 48)
    {
LABEL_48:
      sub_2511B2C80((void **)&v62, (const void **)&v61, &v60);
      return 1;
    }
    uint64_t v28 = (char *)(a3 - 48);
    char v48 = __src;
    unint64_t v49 = v4;
    while (1)
    {
      sub_251139AA0((uint64_t)(v27 - 48), (uint64_t)v57);
      uint64_t v31 = v6 - 48;
      sub_251139AA0((uint64_t)(v6 - 48), (uint64_t)v54);
      uint64_t v33 = v58;
      uint64_t v34 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 40))(&v52, v33, v34);
      uint64_t v36 = v52;
      uint64_t v35 = v53;
      uint64_t v38 = v55;
      uint64_t v37 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v37 + 40))(&v50, v38, v37);
      if (v36 != v50) {
        goto LABEL_37;
      }
      if (v35 == v51) {
        char v39 = 0;
      }
      else {
LABEL_37:
      }
        char v39 = sub_2511C9CA0();
      uint64_t v40 = v28 + 48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251139A70((uint64_t)v54);
      sub_251139A70((uint64_t)v57);
      if (v39) {
        break;
      }
      unint64_t v44 = (unint64_t)v60;
      uint64_t v27 = v60 - 48;
      v60 -= 48;
      unint64_t v41 = (unint64_t)v49;
      if ((unint64_t)v40 < v44 || (unint64_t)v28 >= v44)
      {
        long long v29 = *(_OWORD *)v27;
        long long v30 = *(_OWORD *)(v44 - 16);
        *((_OWORD *)v28 + 1) = *(_OWORD *)(v44 - 32);
        *((_OWORD *)v28 + 2) = v30;
        *(_OWORD *)uint64_t v28 = v29;
        uint64_t v31 = v6;
        goto LABEL_32;
      }
      uint64_t v32 = v48;
      if (v40 != (char *)v44)
      {
        long long v45 = *(_OWORD *)v27;
        long long v46 = *(_OWORD *)(v44 - 16);
        *((_OWORD *)v28 + 1) = *(_OWORD *)(v44 - 32);
        *((_OWORD *)v28 + 2) = v46;
        *(_OWORD *)uint64_t v28 = v45;
      }
      uint64_t v31 = v6;
      if (v27 <= v49) {
        goto LABEL_48;
      }
LABEL_33:
      v28 -= 48;
      int64_t v6 = v31;
      if (v31 <= v32) {
        goto LABEL_48;
      }
    }
    unint64_t v41 = (unint64_t)v49;
    if (v40 != v6 || v28 >= v6)
    {
      long long v42 = *(_OWORD *)v31;
      long long v43 = *((_OWORD *)v6 - 1);
      *((_OWORD *)v28 + 1) = *((_OWORD *)v6 - 2);
      *((_OWORD *)v28 + 2) = v43;
      *(_OWORD *)uint64_t v28 = v42;
    }
    v62 -= 48;
    uint64_t v27 = v60;
LABEL_32:
    uint64_t v32 = v48;
    if ((unint64_t)v27 <= v41) {
      goto LABEL_48;
    }
    goto LABEL_33;
  }
  if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[48 * v9];
    uint64_t v60 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        sub_251139AA0((uint64_t)v6, (uint64_t)v57);
        sub_251139AA0((uint64_t)v4, (uint64_t)v54);
        uint64_t v13 = v58;
        uint64_t v14 = v59;
        __swift_project_boxed_opaque_existential_1(v57, v58);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 40))(&v52, v13, v14);
        uint64_t v16 = v52;
        uint64_t v15 = v53;
        uint64_t v17 = v55;
        uint64_t v18 = v56;
        __swift_project_boxed_opaque_existential_1(v54, v55);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v18 + 40))(&v50, v17, v18);
        if (v16 == v50 && v15 == v51) {
          break;
        }
        char v19 = sub_2511C9CA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251139A70((uint64_t)v54);
        sub_251139A70((uint64_t)v57);
        if ((v19 & 1) == 0) {
          goto LABEL_16;
        }
        long long v20 = v62;
        unint64_t v21 = (unint64_t)(v6 + 48);
        if (v62 >= v6 && (unint64_t)v62 < v21 && v62 == v6)
        {
          long long v20 = v6;
        }
        else
        {
          long long v22 = *(_OWORD *)v6;
          long long v23 = *((_OWORD *)v6 + 2);
          *((_OWORD *)v62 + 1) = *((_OWORD *)v6 + 1);
          *((_OWORD *)v20 + 2) = v23;
          *(_OWORD *)long long v20 = v22;
        }
LABEL_20:
        uint64_t v62 = v20 + 48;
        uint64_t v4 = v61;
        if ((unint64_t)v61 < v12)
        {
          int64_t v6 = (char *)v21;
          if (v21 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251139A70((uint64_t)v54);
      sub_251139A70((uint64_t)v57);
LABEL_16:
      long long v20 = v62;
      char v24 = v61 + 48;
      if (v62 != v61 || v62 >= v24)
      {
        long long v25 = *(_OWORD *)v61;
        long long v26 = *((_OWORD *)v61 + 2);
        *((_OWORD *)v62 + 1) = *((_OWORD *)v61 + 1);
        *((_OWORD *)v20 + 2) = v26;
        *(_OWORD *)long long v20 = v25;
      }
      uint64_t v61 = v24;
      unint64_t v21 = (unint64_t)v6;
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_49:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251183754(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  int64_t v6 = a2;
  int64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v37 = __src;
  uint64_t v36 = __dst;
  uint64_t v32 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      uint64_t v19 = v4;
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        memmove(__dst, a2, 8 * v13);
        __dst = v32;
      }
      long long v20 = &__dst[v13];
      uint64_t v35 = v20;
      uint64_t v37 = v6;
      if (v7 >= v6 || v11 < 8) {
        goto LABEL_48;
      }
      unint64_t v21 = (uint64_t *)(a3 - 8);
      long long v22 = v6;
      uint64_t v31 = v7;
      while (1)
      {
        long long v23 = v20;
        uint64_t v24 = *--v20;
        uint64_t v34 = v24;
        uint64_t v25 = *--v22;
        uint64_t v33 = v25;
        swift_retain();
        swift_retain();
        char v26 = sub_25117CECC(&v34, &v33);
        if (v19) {
          goto LABEL_47;
        }
        char v27 = v26;
        uint64_t v28 = v21 + 1;
        swift_release();
        swift_release();
        if (v27)
        {
          long long v29 = v32;
          if (v28 != v6 || v21 >= v6) {
            *unint64_t v21 = *v22;
          }
          uint64_t v37 = v22;
          uint64_t v19 = 0;
          long long v20 = v23;
        }
        else
        {
          uint64_t v35 = v20;
          long long v29 = v32;
          if (v28 < v23 || v21 >= v23 || v28 != v23) {
            *unint64_t v21 = *v20;
          }
          long long v22 = v6;
          uint64_t v19 = 0;
        }
        if (v22 > v31)
        {
          --v21;
          int64_t v6 = v22;
          if (v20 > v29) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      memmove(__dst, __src, 8 * v10);
      __dst = v32;
    }
    uint64_t v14 = &__dst[v10];
    uint64_t v35 = v14;
    if ((unint64_t)v6 >= a3 || v8 < 8) {
      goto LABEL_48;
    }
    while (1)
    {
      uint64_t v34 = *v6;
      uint64_t v15 = __dst;
      uint64_t v33 = *__dst;
      swift_retain();
      swift_retain();
      char v16 = sub_25117CECC(&v34, &v33);
      if (v4) {
        break;
      }
      char v17 = v16;
      swift_release();
      swift_release();
      if (v17)
      {
        uint64_t v18 = v6 + 1;
        if (v7 < v6 || v7 >= v18 || v7 != v6) {
          *int64_t v7 = *v6;
        }
        __dst = v15;
      }
      else
      {
        if (v7 != v15) {
          *int64_t v7 = *v15;
        }
        __dst = v15 + 1;
        uint64_t v36 = v15 + 1;
        uint64_t v18 = v6;
      }
      uint64_t v37 = ++v7;
      if (__dst < v14)
      {
        int64_t v6 = v18;
        if ((unint64_t)v18 < a3) {
          continue;
        }
      }
      goto LABEL_48;
    }
LABEL_47:
    swift_release();
    swift_release();
LABEL_48:
    sub_2511B2C7C(&v37, &v36, &v35);
    return 1;
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251183AB0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  int64_t v6 = a2;
  int64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  uint64_t v31 = __src;
  long long v30 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      uint64_t v19 = &v4[32 * v13];
      long long v29 = v19;
      uint64_t v31 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        long long v20 = (char *)(a3 - 32);
        unint64_t v21 = v6;
        while (1)
        {
          long long v22 = v20 + 32;
          uint64_t v23 = *((void *)v21 - 4);
          uint64_t v24 = *((void *)v21 - 3);
          v21 -= 32;
          BOOL v25 = *((void *)v19 - 4) == v23 && *((void *)v19 - 3) == v24;
          if (v25 || (sub_2511C9CA0() & 1) == 0)
          {
            long long v29 = v19 - 32;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
            {
              long long v27 = *((_OWORD *)v19 - 1);
              *(_OWORD *)long long v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v27;
            }
            unint64_t v21 = v6;
            v19 -= 32;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
            {
              long long v26 = *((_OWORD *)v21 + 1);
              *(_OWORD *)long long v20 = *(_OWORD *)v21;
              *((_OWORD *)v20 + 1) = v26;
            }
            uint64_t v31 = v21;
            if (v21 <= v7) {
              goto LABEL_50;
            }
          }
          v20 -= 32;
          int64_t v6 = v21;
          if (v19 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    uint64_t v14 = &v4[32 * v10];
    long long v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_2511C9CA0() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v18 = *((_OWORD *)v4 + 1);
            *(_OWORD *)int64_t v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 32;
          long long v30 = v4;
          char v16 = v6;
        }
        else
        {
          char v16 = v6 + 32;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
          {
            long long v17 = *((_OWORD *)v6 + 1);
            *(_OWORD *)int64_t v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 32;
        if (v4 >= v14) {
          break;
        }
        int64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v31 = v7;
    }
LABEL_50:
    sub_2511B2B04((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251183D4C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  int64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v62 = __src;
  uint64_t v61 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39) {
      goto LABEL_49;
    }
    if (__dst != a2 || &a2[40 * v11] <= __dst) {
      memmove(__dst, a2, 40 * v11);
    }
    long long v27 = &v4[40 * v11];
    uint64_t v60 = v27;
    uint64_t v62 = v6;
    if (__src >= v6 || v10 < 40)
    {
LABEL_48:
      sub_2511B2D50((void **)&v62, (const void **)&v61, &v60);
      return 1;
    }
    unint64_t v28 = a3 - 40;
    char v48 = __src;
    unint64_t v49 = v4;
    while (1)
    {
      sub_25112FD4C((uint64_t)(v27 - 40), (uint64_t)v57);
      uint64_t v31 = v6 - 40;
      sub_25112FD4C((uint64_t)(v6 - 40), (uint64_t)v54);
      uint64_t v33 = v58;
      uint64_t v34 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 40))(&v52, v33, v34);
      uint64_t v36 = v52;
      uint64_t v35 = v53;
      uint64_t v38 = v55;
      uint64_t v37 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v37 + 40))(&v50, v38, v37);
      if (v36 != v50) {
        goto LABEL_37;
      }
      if (v35 == v51) {
        char v39 = 0;
      }
      else {
LABEL_37:
      }
        char v39 = sub_2511C9CA0();
      uint64_t v40 = (char *)(v28 + 40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      if (v39) {
        break;
      }
      unint64_t v44 = v60;
      long long v27 = v60 - 40;
      v60 -= 40;
      unint64_t v41 = (unint64_t)v49;
      if (v40 < v44 || v28 >= (unint64_t)v44)
      {
        long long v29 = *(_OWORD *)v27;
        long long v30 = *(_OWORD *)(v44 - 24);
        *(void *)(v28 + 32) = *((void *)v44 - 1);
        *(_OWORD *)unint64_t v28 = v29;
        *(_OWORD *)(v28 + 16) = v30;
        uint64_t v31 = v6;
        goto LABEL_32;
      }
      uint64_t v32 = v48;
      if (v40 != v44)
      {
        long long v45 = *(_OWORD *)v27;
        long long v46 = *(_OWORD *)(v44 - 24);
        *(void *)(v28 + 32) = *((void *)v44 - 1);
        *(_OWORD *)unint64_t v28 = v45;
        *(_OWORD *)(v28 + 16) = v46;
      }
      uint64_t v31 = v6;
      if (v27 <= v49) {
        goto LABEL_48;
      }
LABEL_33:
      v28 -= 40;
      int64_t v6 = v31;
      if (v31 <= v32) {
        goto LABEL_48;
      }
    }
    unint64_t v41 = (unint64_t)v49;
    if (v40 != v6 || v28 >= (unint64_t)v6)
    {
      long long v42 = *(_OWORD *)v31;
      long long v43 = *(_OWORD *)(v6 - 24);
      *(void *)(v28 + 32) = *((void *)v6 - 1);
      *(_OWORD *)unint64_t v28 = v42;
      *(_OWORD *)(v28 + 16) = v43;
    }
    v62 -= 40;
    long long v27 = v60;
LABEL_32:
    uint64_t v32 = v48;
    if ((unint64_t)v27 <= v41) {
      goto LABEL_48;
    }
    goto LABEL_33;
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[40 * v9];
    uint64_t v60 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      while (1)
      {
        sub_25112FD4C((uint64_t)v6, (uint64_t)v57);
        sub_25112FD4C((uint64_t)v4, (uint64_t)v54);
        uint64_t v13 = v58;
        uint64_t v14 = v59;
        __swift_project_boxed_opaque_existential_1(v57, v58);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 40))(&v52, v13, v14);
        uint64_t v16 = v52;
        uint64_t v15 = v53;
        uint64_t v17 = v55;
        uint64_t v18 = v56;
        __swift_project_boxed_opaque_existential_1(v54, v55);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v18 + 40))(&v50, v17, v18);
        if (v16 == v50 && v15 == v51) {
          break;
        }
        char v19 = sub_2511C9CA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
        if ((v19 & 1) == 0) {
          goto LABEL_16;
        }
        long long v20 = v62;
        unint64_t v21 = (unint64_t)(v6 + 40);
        if (v62 >= v6 && (unint64_t)v62 < v21 && v62 == v6)
        {
          long long v20 = v6;
        }
        else
        {
          long long v22 = *(_OWORD *)v6;
          long long v23 = *((_OWORD *)v6 + 1);
          *((void *)v62 + 4) = *((void *)v6 + 4);
          *long long v20 = v22;
          v20[1] = v23;
        }
LABEL_20:
        uint64_t v62 = (char *)v20 + 40;
        uint64_t v4 = v61;
        if ((unint64_t)v61 < v12)
        {
          int64_t v6 = (char *)v21;
          if (v21 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
LABEL_16:
      long long v20 = v62;
      uint64_t v24 = v61 + 40;
      if (v62 != v61 || v62 >= v24)
      {
        long long v25 = *(_OWORD *)v61;
        long long v26 = *((_OWORD *)v61 + 1);
        *((void *)v62 + 4) = *((void *)v61 + 4);
        *long long v20 = v25;
        v20[1] = v26;
      }
      uint64_t v61 = v24;
      unint64_t v21 = (unint64_t)v6;
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_49:
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_25118424C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_251155478();
  uint64_t result = sub_2511C9AE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    uint64_t v31 = v3;
    int64_t v8 = 0;
    int64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1)) {
          goto LABEL_38;
        }
        if (v8 >= v13)
        {
LABEL_29:
          if ((v32 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v3 = v31;
            goto LABEL_36;
          }
          uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
          if (v30 >= 64) {
            bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            void *v9 = -1 << v30;
          }
          uint64_t v3 = v31;
          *(void *)(v5 + 16) = 0;
          break;
        }
        unint64_t v19 = v9[v8];
        if (!v19)
        {
          int64_t v20 = v8 + 1;
          if (v8 + 1 >= v13) {
            goto LABEL_29;
          }
          unint64_t v19 = v9[v20];
          if (!v19)
          {
            while (1)
            {
              int64_t v8 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              if (v8 >= v13) {
                goto LABEL_29;
              }
              unint64_t v19 = v9[v8];
              ++v20;
              if (v19) {
                goto LABEL_19;
              }
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_19:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      unsigned int v21 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      uint64_t result = MEMORY[0x253397570](*(void *)(v7 + 40), v21, 4);
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_36:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2511844E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_251148BC0(0, &qword_269B21BE0, MEMORY[0x263F8D538], MEMORY[0x263F8DFB0]);
  char v35 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v12)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v2;
          if (v35)
          {
            uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
            if (v34 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              void *v9 = -1 << v34;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v24 = v9[v15];
        if (!v24)
        {
          int64_t v25 = v15 + 1;
          if (v15 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v24 = v9[v25];
          if (!v24)
          {
            while (1)
            {
              int64_t v15 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                break;
              }
              if (v15 >= v12) {
                goto LABEL_31;
              }
              unint64_t v24 = v9[v15];
              ++v25;
              if (v24) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_20:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      char v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v22);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_2511C9D40();
      sub_2511C94F0();
      uint64_t result = sub_2511C9D80();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v32 = v18 == v31;
          if (v18 == v31) {
            unint64_t v18 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v13 + 8 * v18);
        }
        while (v33 == -1);
        unint64_t v19 = __clz(__rbit64(~v33)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      int64_t v20 = (void *)(*(void *)(v7 + 48) + 16 * v19);
      *int64_t v20 = v28;
      v20[1] = v27;
      *(void *)(*(void *)(v7 + 56) + 8 * v19) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2511847E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = sub_2511C91E0();
  uint64_t v5 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  long long v54 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2511C9180();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_25118B478(0, &qword_269B21C50, MEMORY[0x263F07490]);
  int v51 = a2;
  uint64_t v12 = sub_2511C9AE0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v53 = v7;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  long long v45 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  long long v43 = v2;
  int64_t v44 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v46 = v5 + 16;
  char v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  unint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v50 = v5;
  uint64_t v52 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  uint64_t v48 = v11;
  uint64_t v49 = v8;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44) {
      break;
    }
    char v26 = v45;
    unint64_t v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v27 = v45[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v51 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v44) {
              goto LABEL_34;
            }
            unint64_t v27 = v45[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v8 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v51)
    {
      (*v18)(v10, v30, v53);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v50 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 32))(v54, v31 + v32 * v24, v55);
    }
    else
    {
      (*v47)(v10, v30, v53);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v50 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v54, v33 + v32 * v24, v55);
    }
    sub_2511483DC((unint64_t *)&unk_269B21C40, MEMORY[0x263F06EA8]);
    uint64_t result = sub_2511C9440();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v8 = v49;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      uint64_t v8 = v49;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v53);
    uint64_t result = (*v52)(*(void *)(v13 + 56) + v32 * v22, v54, v55);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
  }
  swift_release();
  uint64_t v3 = v43;
  char v26 = v45;
  if ((v51 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_251184D00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25118B858();
  char v39 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 56);
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = v29[2];
      uint64_t v33 = v29[3];
      uint64_t v34 = *(void *)(v28 + 8 * v20);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_2511C9D80();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      v18[2] = v32;
      void v18[3] = v33;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251185028(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25118B730();
  char v42 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v40) {
          goto LABEL_34;
        }
        unint64_t v22 = v41[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v22 = v41[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v40)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v42)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v41[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v22 = v41[v13];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_21:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      char v24 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v28 = v24[2];
      uint64_t v27 = v24[3];
      uint64_t v29 = (long long *)(*(void *)(v5 + 56) + 48 * v20);
      if (v42)
      {
        long long v30 = *v29;
        long long v31 = v29[2];
        long long v44 = v29[1];
        long long v45 = v31;
        long long v43 = v30;
      }
      else
      {
        sub_251139AA0((uint64_t)v29, (uint64_t)&v43);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_2511C9D80();
      uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v11 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v14 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 32 * v14);
      *unint64_t v15 = v26;
      v15[1] = v25;
      _OWORD v15[2] = v28;
      v15[3] = v27;
      unint64_t v16 = (_OWORD *)(*(void *)(v7 + 56) + 48 * v14);
      long long v17 = v43;
      long long v18 = v45;
      v16[1] = v44;
      v16[2] = v18;
      *unint64_t v16 = v17;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251185374(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2511C9180();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_25118B478(0, (unint64_t *)&unk_269B22260, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal.Presenter);
  int v46 = a2;
  uint64_t v10 = sub_2511C9AE0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v14 = *(void *)(v9 + 64);
  char v42 = (void *)(v9 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  long long v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  long long v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_2511483DC((unint64_t *)&unk_269B21C40, MEMORY[0x263F06EA8]);
    uint64_t result = sub_2511C9440();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_2511857B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25118B3F8();
  char v39 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 56);
      unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 48 * v20);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v33 = v29[2];
      uint64_t v32 = v29[3];
      uint64_t v34 = v29[5];
      uint64_t v40 = v29[4];
      long long v41 = *(_OWORD *)(v28 + 16 * v20);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_2511C9D80();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 48 * v17);
      *uint64_t v18 = v30;
      v18[1] = v31;
      v18[2] = v33;
      void v18[3] = v32;
      v18[4] = v40;
      _OWORD v18[5] = v34;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v41;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251185B34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25118B8E8(0, (unint64_t *)&qword_26B218088, MEMORY[0x263F8DFB0]);
  char v41 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v39 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v40 = v5;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v42 = v13;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v38) {
          goto LABEL_33;
        }
        unint64_t v22 = v39[v21];
        int64_t v23 = v13 + 1;
        if (!v22)
        {
          int64_t v23 = v13 + 2;
          if (v13 + 2 >= v38) {
            goto LABEL_33;
          }
          unint64_t v22 = v39[v23];
          if (!v22)
          {
            uint64_t v24 = v13 + 3;
            if (v13 + 3 >= v38)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v41)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
                if (v37 >= 64) {
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v39 = -1 << v37;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v39[v24];
            if (!v22)
            {
              while (1)
              {
                int64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v23 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v22 = v39[v23];
                ++v24;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v23 = v13 + 3;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        int64_t v42 = v23;
        unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
      }
      uint64_t v29 = *(void *)(v5 + 56);
      uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 48 * v20);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      uint64_t v34 = v30[2];
      uint64_t v33 = v30[3];
      uint64_t v35 = v30[5];
      uint64_t v43 = v30[4];
      uint64_t v36 = *(void *)(v29 + 8 * v20);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_2511C9D80();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 48 * v17);
      *uint64_t v18 = v32;
      v18[1] = v31;
      v18[2] = v34;
      void v18[3] = v33;
      v18[4] = v43;
      _OWORD v18[5] = v35;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v36;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v40;
      int64_t v13 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251185ED4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_251148BC0(0, qword_26B218090, MEMORY[0x263F8D310], MEMORY[0x263F8DFB0]);
  char v42 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2511C9D40();
    sub_2511C94F0();
    uint64_t result = sub_2511C9D80();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25118621C(uint64_t a1, char a2)
{
  return sub_251186264(a1, a2, sub_25118A610);
}

uint64_t sub_251186234(uint64_t a1, char a2)
{
  return sub_251186264(a1, a2, (void (*)(void))sub_251148D40);
}

uint64_t sub_25118624C(uint64_t a1, char a2)
{
  return sub_251186264(a1, a2, sub_25118A6B8);
}

uint64_t sub_251186264(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_2511C9AE0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2511C9D40();
    sub_2511C94F0();
    uint64_t result = sub_2511C9D80();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_25118657C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25115536C(0, &qword_269B21C08, (void (*)(uint64_t))sub_251155420);
  uint64_t result = sub_2511C9AE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = v3;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(unsigned int *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      uint64_t result = MEMORY[0x253397570](*(void *)(v7 + 40), v27, 4);
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v17) = v27;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251186850(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25115536C(0, &qword_269B21BF8, (void (*)(uint64_t))sub_2511553D0);
  uint64_t result = sub_2511C9AE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    uint64_t v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      unsigned int v21 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      uint64_t result = MEMORY[0x253397570](*(void *)(v7 + 40), v21, 4);
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251186B0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_251148BC0(0, &qword_269B21BD8, MEMORY[0x263F8E548], MEMORY[0x263F8DFB0]);
  char v37 = a2;
  uint64_t v6 = sub_2511C9AE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    int v32 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2511C9D40();
    sub_2511C94F0();
    uint64_t result = sub_2511C9D80();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_251186E38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_251155258();
  char v6 = a2;
  uint64_t v7 = sub_2511C9AE0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
      }
      sub_2511C9D40();
      sub_2511C94F0();
      uint64_t result = sub_2511C9D80();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

void *sub_251187140()
{
  uint64_t v1 = v0;
  sub_251155478();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    if (!v21) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_2511872B8()
{
  uint64_t v1 = v0;
  sub_251148BC0(0, &qword_269B21BE0, MEMORY[0x263F8D538], MEMORY[0x263F8DFB0]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    if (!v23) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_251187470()
{
  uint64_t v42 = sub_2511C91E0();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_2511C9180();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  char v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25118B478(0, &qword_269B21C50, MEMORY[0x263F07490]);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_2511C9AD0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v16 = v39;
  uint64_t v15 = v40;
  int v17 = v41;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v16, *(void *)(v21 + 48) + v22, v15);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    uint64_t v25 = v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v17, v24, v42);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v16, v15);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v17, v25);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_251187830()
{
  uint64_t v1 = v0;
  sub_25118B858();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    int v17 = (void *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v19 = v17[3];
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = *v17;
    v23[1] = v18;
    double v23[2] = v20;
    void v23[3] = v19;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2511879FC()
{
  sub_25118B730();
  unint64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_2511C9AD0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v27 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  uint64_t v28 = v1 + 64;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v29) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v7;
    if (!v25)
    {
      int64_t v7 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v7);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v12 = __clz(__rbit64(v25)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 32 * v12;
    unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 32 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    uint64_t v19 = 48 * v12;
    sub_251139AA0(*(void *)(v1 + 56) + 48 * v12, (uint64_t)v30);
    uint64_t v20 = (void *)(*(void *)(v3 + 48) + v13);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v20[2] = v17;
    void v20[3] = v18;
    uint64_t v21 = (_OWORD *)(*(void *)(v3 + 56) + v19);
    long long v23 = v30[1];
    long long v22 = v30[2];
    *uint64_t v21 = v30[0];
    v21[1] = v23;
    void v21[2] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v29) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v7 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v7 >= v29) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v7);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_251187BFC()
{
  uint64_t v1 = sub_2511C9180();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25118B478(0, (unint64_t *)&unk_269B22260, (void (*)(uint64_t))type metadata accessor for FileCoordinatorInputSignal.Presenter);
  long long v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2511C9AD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_251187EAC()
{
  uint64_t v1 = v0;
  sub_25118B3F8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 48 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v22 = v17[4];
    uint64_t v21 = v17[5];
    uint64_t v23 = 16 * v15;
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(*(void *)(v2 + 56) + v23);
    *uint64_t v24 = *v17;
    v24[1] = v18;
    long long v24[2] = v19;
    void v24[3] = v20;
    _OWORD v24[4] = v22;
    void v24[5] = v21;
    *(_OWORD *)(*(void *)(v4 + 56) + v23) = v25;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25118809C()
{
  uint64_t v1 = v0;
  sub_25118B8E8(0, (unint64_t *)&qword_26B218088, MEMORY[0x263F8DFB0]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 48 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v24 = v17[4];
    uint64_t v23 = v17[5];
    long long v25 = (void *)(*(void *)(v4 + 48) + v16);
    void *v25 = *v17;
    v25[1] = v18;
    void v25[2] = v19;
    void v25[3] = v20;
    v25[4] = v24;
    uint64_t v25[5] = v23;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251188298()
{
  return sub_2511882E0(sub_25118A610);
}

void *sub_2511882B0()
{
  return sub_2511882E0((void (*)(void))sub_251148D40);
}

void *sub_2511882C8()
{
  return sub_2511882E0(sub_25118A6B8);
}

void *sub_2511882E0(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2511C9AD0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25118849C()
{
  uint64_t v1 = v0;
  sub_25115536C(0, &qword_269B21C08, (void (*)(uint64_t))sub_251155420);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25118865C()
{
  uint64_t v1 = v0;
  sub_25115536C(0, &qword_269B21BF8, (void (*)(uint64_t))sub_2511553D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251188808()
{
  uint64_t v1 = v0;
  sub_251148BC0(0, &qword_269B21BD8, MEMORY[0x263F8E548], MEMORY[0x263F8DFB0]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(void *)(v2 + 56) + v20);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v20) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2511889D8()
{
  uint64_t v1 = v0;
  sub_251155258();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251188B98()
{
  uint64_t v1 = v0;
  sub_251141A14();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2511C9AD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  }
  uint64_t v26 = v2 + 64;
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v12) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v8;
    if (!v23)
    {
      int64_t v8 = v22 + 1;
      if (v22 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v8);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 24 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 24 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = v16[2];
    uint64_t v20 = 40 * v14;
    sub_25112FD4C(*(void *)(v2 + 56) + 40 * v14, (uint64_t)v27);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v15);
    *unint64_t v21 = v18;
    v21[1] = v17;
    void v21[2] = v19;
    sub_25112F14C(v27, *(void *)(v4 + 56) + v20);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v12)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v8 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v8);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251188D94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_25118B31C();
  uint64_t result = sub_2511C9940();
  uint64_t v9 = result;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  uint64_t v35 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v34) {
      goto LABEL_36;
    }
    unint64_t v16 = v33[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v34) {
        goto LABEL_36;
      }
      unint64_t v16 = v33[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v34) {
          goto LABEL_36;
        }
        unint64_t v16 = v33[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    sub_2511C9D40();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_2511C94F0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_2511C9D80();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v9 + 48) + 32 * v26);
    *uint64_t v31 = v19;
    v31[1] = v20;
    void v31[2] = v21;
    void v31[3] = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v4 = v35;
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v34) {
    goto LABEL_36;
  }
  unint64_t v16 = v33[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v34) {
      goto LABEL_36;
    }
    unint64_t v16 = v33[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251189038(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_2511890D8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

unint64_t sub_2511891BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_251148BC0(0, qword_26B218090, MEMORY[0x263F8D310], MEMORY[0x263F8DFB0]);
  uint64_t v2 = (void *)sub_2511C9AF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_251149240(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_251189300(uint64_t a1, long long *a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11 = (void *)*a4;
  unint64_t v13 = sub_251167268((uint64_t)a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_251187EAC();
LABEL_7:
    uint64_t v19 = (void *)*a4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = (void *)(v19[7] + 16 * v13);
      uint64_t result = swift_unknownObjectRelease();
      *uint64_t v20 = a1;
      v20[1] = a6;
      return result;
    }
    goto LABEL_11;
  }
  sub_2511857B0(v16, a3 & 1);
  unint64_t v22 = sub_251167268((uint64_t)a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_17:
    uint64_t result = sub_2511C9CD0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*a4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  unint64_t v24 = (_OWORD *)(v19[6] + 48 * v13);
  long long v25 = *a2;
  long long v26 = a2[2];
  v24[1] = a2[1];
  long long v24[2] = v26;
  *unint64_t v24 = v25;
  char v27 = (void *)(v19[7] + 16 * v13);
  *char v27 = a1;
  v27[1] = a6;
  uint64_t v28 = v19[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v19[2] = v30;

  return sub_25113822C((uint64_t)a2);
}

uint64_t sub_25118947C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_251189504(void *a1, void *a2)
{
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  unsigned int v6 = __swift_project_boxed_opaque_existential_1(a1 + 2, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 40))(v24, v4, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  uint64_t v11 = v24[0];
  uint64_t v10 = v24[1];
  uint64_t v12 = a2[5];
  uint64_t v13 = a2[6];
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(a2 + 2, v12);
  uint64_t v15 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 40))(v23, v12, v13);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v12);
  if (v11 == v23[0] && v10 == v23[1])
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_beginAccess();
    uint64_t v20 = a1[7];
    swift_beginAccess();
    uint64_t v21 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v19 = sub_251162904(v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19 & 1;
  }
  char v18 = sub_2511C9CA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v19 = 0;
  if (v18) {
    goto LABEL_5;
  }
  return v19 & 1;
}

uint64_t sub_2511897DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v7 = (void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v9 = v7[3];
    uint64_t v10 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 8))(a2, a3, a4, &off_270206968, v9, v10);
    uint64_t v12 = *(void *)(v11 + 16);
    int64_t v13 = v8[2];
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12)) {
      break;
    }
    uint64_t v15 = v11;
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v14 <= v8[3] >> 1)
    {
      if (*(void *)(v15 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v13 <= v14) {
        int64_t v17 = v13 + v12;
      }
      else {
        int64_t v17 = v13;
      }
      uint64_t v8 = sub_2511BFF4C(isUniquelyReferenced_nonNull_native, v17, 1, v8);
      if (*(void *)(v15 + 16))
      {
LABEL_14:
        uint64_t v18 = v8[2];
        if ((v8[3] >> 1) - v18 < v12) {
          goto LABEL_28;
        }
        unint64_t v19 = (unint64_t)&v8[5 * v18 + 4];
        if (v15 + 32 < v19 + 40 * v12 && v19 < v15 + 32 + 40 * v12) {
          goto LABEL_30;
        }
        sub_251131944(0, (unint64_t *)&qword_26B2178E8);
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v21 = v8[2];
          BOOL v22 = __OFADD__(v21, v12);
          uint64_t v23 = v21 + v12;
          if (v22) {
            goto LABEL_29;
          }
          v8[2] = v23;
        }
        goto LABEL_4;
      }
    }
    if (v12) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v7 += 5;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  swift_release();
  swift_unknownObjectRelease();
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251189A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  uint64_t v35 = *(void *)(a1 + 16);
  if (!v35) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v34 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = v3;
  while (1)
  {
    unsigned int v6 = (void *)(v34 + 40 * v4);
    uint64_t v7 = v6[3];
    uint64_t v41 = v6 + 3;
    uint64_t v42 = v6;
    uint64_t v8 = v6[4];
    uint64_t v40 = v6 + 4;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a3, v7, v8);
    int64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v38 = v5;
      uint64_t v39 = v4;
      sub_25116B8C0(0, v10, 0);
      uint64_t v11 = 0;
      uint64_t v12 = v3;
      do
      {
        long long v43 = *(_OWORD *)(v9 + 16 * v11 + 32);
        uint64_t v13 = *v41;
        uint64_t v14 = *v40;
        __swift_project_boxed_opaque_existential_1(v42, *v41);
        uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
        swift_unknownObjectRetain();
        uint64_t v16 = v15(v13, v14);
        uint64_t v18 = v17;
        unint64_t v20 = v12[2];
        unint64_t v19 = v12[3];
        if (v20 >= v19 >> 1) {
          sub_25116B8C0(v19 > 1, v20 + 1, 1);
        }
        ++v11;
        v12[2] = v20 + 1;
        uint64_t v21 = &v12[4 * v20];
        void v21[4] = v16;
        v21[5] = v18;
        *((_OWORD *)v21 + 3) = v43;
      }
      while (v10 != v11);
      swift_bridgeObjectRelease();
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
      uint64_t v5 = v38;
      uint64_t v4 = v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = v3;
    }
    uint64_t v22 = v12[2];
    int64_t v23 = v5[2];
    int64_t v24 = v23 + v22;
    if (__OFADD__(v23, v22)) {
      break;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v24 <= v5[3] >> 1)
    {
      if (v12[2]) {
        goto LABEL_21;
      }
    }
    else
    {
      if (v23 <= v24) {
        int64_t v26 = v23 + v22;
      }
      else {
        int64_t v26 = v23;
      }
      uint64_t v5 = sub_2511BFE10((void *)isUniquelyReferenced_nonNull_native, v26, 1, v5);
      if (v12[2])
      {
LABEL_21:
        uint64_t v27 = v5[2];
        if ((v5[3] >> 1) - v27 < v22) {
          goto LABEL_35;
        }
        unint64_t v28 = (unint64_t)&v5[4 * v27 + 4];
        if ((unint64_t)(v12 + 4) < v28 + 32 * v22 && v28 < (unint64_t)&v12[4 * v22 + 4]) {
          goto LABEL_37;
        }
        sub_25116C880();
        swift_arrayInitWithCopy();
        if (v22)
        {
          uint64_t v30 = v5[2];
          BOOL v31 = __OFADD__(v30, v22);
          uint64_t v32 = v30 + v22;
          if (v31) {
            goto LABEL_36;
          }
          uint64_t v5[2] = v32;
        }
        goto LABEL_4;
      }
    }
    if (v22) {
      goto LABEL_34;
    }
LABEL_4:
    ++v4;
    swift_bridgeObjectRelease();
    if (v4 == v35)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_unknownObjectRelease();
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t sub_251189D28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t type metadata accessor for Orchestrator()
{
  return self;
}

uint64_t method lookup function for Orchestrator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Orchestrator);
}

uint64_t dispatch thunk of Orchestrator.__allocating_init(context:inputSignalProviders:executorProviders:workQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t type metadata accessor for Orchestrator.InputSignalSetupRecord()
{
  return self;
}

uint64_t destroy for Orchestrator.AnyConfiguration(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t initializeWithCopy for Orchestrator.AnyConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for Orchestrator.AnyConfiguration(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for Orchestrator.AnyConfiguration(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Orchestrator.AnyConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Orchestrator.AnyConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Orchestrator.AnyConfiguration()
{
  return &type metadata for Orchestrator.AnyConfiguration;
}

uint64_t destroy for Orchestrator.State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Orchestrator.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  return a1;
}

uint64_t assignWithCopy for Orchestrator.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Orchestrator.State(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  if (!v5)
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Orchestrator.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Orchestrator.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Orchestrator.State()
{
  return &type metadata for Orchestrator.State;
}

uint64_t initializeWithCopy for Orchestrator.InputSignalObserverShim.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for Orchestrator.InputSignalObserverShim.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for Orchestrator.InputSignalObserverShim.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for Orchestrator.InputSignalObserverShim.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for Orchestrator.InputSignalObserverShim.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Orchestrator.InputSignalObserverShim.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Orchestrator.InputSignalObserverShim.State()
{
  return &type metadata for Orchestrator.InputSignalObserverShim.State;
}

unint64_t sub_25118A5BC()
{
  unint64_t result = qword_26B217988[0];
  if (!qword_26B217988[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B217988);
  }
  return result;
}

void sub_25118A610(uint64_t a1)
{
}

void sub_25118A644(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x263F8D310], v7, MEMORY[0x263F8D320]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25118A6B8(uint64_t a1)
{
}

uint64_t sub_25118A6EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_251132188();
  uint64_t result = sub_2511C96C0();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251132348(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_25118A7AC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25118A7EC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25118A824()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_25118A874()
{
  sub_25117B2B4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_25118A880()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25118A8BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_25118B794();
  uint64_t result = sub_2511C96C0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_251169894(v4, (uint64_t)v5);
      sub_2511A472C((uint64_t)v6, (uint64_t)v5);
      sub_2511698F0((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_25118A948(uint64_t a1)
{
  uint64_t v2 = sub_2511C9260();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_2511483DC(&qword_26B218390, MEMORY[0x263F07908]);
  uint64_t result = sub_2511C96C0();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_2511A48F0((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_25118AAE4(uint64_t a1)
{
  uint64_t v2 = sub_2511C9180();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)v21 - v6;
  sub_25114846C(0, &qword_269B21F98, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_2511483DC((unint64_t *)&unk_269B21C40, MEMORY[0x263F06EA8]);
  uint64_t v29 = sub_2511C96C0();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    int64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    long long v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_2511A4ED0(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_25118ADB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_2511C96C0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2511A4D20(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_25118AE4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v26 = (unint64_t *)result;
  uint64_t v27 = 0;
  int64_t v5 = 0;
  uint64_t v6 = *(void *)(a3 + 56);
  uint64_t v28 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v29 = (unint64_t)(v7 + 63) >> 6;
  if ((v8 & v6) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v13 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v13 < v29)
    {
      unint64_t v14 = *(void *)(v28 + 8 * v13);
      ++v5;
      if (v14) {
        goto LABEL_21;
      }
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v5);
      if (v14) {
        goto LABEL_21;
      }
      int64_t v5 = v13 + 2;
      if (v13 + 2 >= v29) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v5);
      if (v14)
      {
LABEL_21:
        unint64_t v9 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v5 << 6); ; unint64_t i = v11 | (v5 << 6))
        {
          uint64_t v16 = (uint64_t *)(*(void *)(a3 + 48) + 32 * i);
          uint64_t v17 = *v16;
          uint64_t v18 = v16[1];
          uint64_t v19 = v16[2];
          uint64_t v20 = v16[3];
          uint64_t v21 = *(void *)(v32 + 16);
          uint64_t v22 = *(void *)(v21 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v22 && (unint64_t v23 = sub_25112F2DC(v17, v18, v19, v20), (v24 & 1) != 0))
          {
            sub_25112FD4C(*(void *)(v21 + 56) + 40 * v23, (uint64_t)v30);
            sub_25118B7E8((uint64_t)v30, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (!v9) {
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v31 = 0;
            memset(v30, 0, sizeof(v30));
            sub_25118B7E8((uint64_t)v30, (unint64_t *)&qword_26B217A30, qword_26B216650, (uint64_t)&protocol descriptor for InputSignalAnchor);
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            *(unint64_t *)((char *)v26 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
            if (__OFADD__(v27++, 1)) {
              goto LABEL_29;
            }
            if (!v9) {
              goto LABEL_8;
            }
          }
LABEL_7:
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
        }
      }
      int64_t v15 = v13 + 3;
      if (v15 < v29)
      {
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (v14)
        {
          int64_t v5 = v15;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v5 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_28;
          }
          if (v5 >= v29) {
            break;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v5);
          ++v15;
          if (v14) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_26:
    swift_retain();
    return sub_251188D94(v26, a2, v27, a3);
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25118B0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v14[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v11 = sub_25118AE4C((uint64_t)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    uint64_t v11 = sub_25118AE4C((uint64_t)v12, v8, a1, a2);
    swift_release();
    swift_release();
    MEMORY[0x253397D40](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

void sub_25118B2B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_251131944(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_25118B31C()
{
  if (!qword_26B218900)
  {
    sub_251132188();
    unint64_t v0 = sub_2511C9950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218900);
    }
  }
}

void sub_25118B378()
{
  if (!qword_26B218930)
  {
    sub_251131944(255, (unint64_t *)&qword_26B2178E8);
    sub_251132188();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218930);
    }
  }
}

void sub_25118B3F8()
{
  if (!qword_26B218080)
  {
    sub_251131944(255, &qword_26B217E48);
    sub_2511558B4();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218080);
    }
  }
}

void sub_25118B478(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2511C9180();
    a3(255);
    sub_2511483DC((unint64_t *)&unk_269B21C40, MEMORY[0x263F06EA8]);
    unint64_t v5 = sub_2511C9B00();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25118B524(long long *a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a2);
  long long v4 = *a1;
  long long v5 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 40) = *((void *)a1 + 5);
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_25118B574(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_25118B580(uint64_t a1)
{
  sub_25117AAF8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25118B59C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_25117AB74(a1);
  uint64_t v5 = v4;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v5;
  *a2 = sub_25114A818;
  a2[1] = result;
  return result;
}

uint64_t sub_25118B604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25117E760(a1, a2);
}

unint64_t sub_25118B620()
{
  unint64_t result = qword_26B217EE8;
  if (!qword_26B217EE8)
  {
    sub_25118B2B0(255, &qword_26B217EE0, (unint64_t *)&qword_26B216860, (uint64_t)&protocol descriptor for InputSignalConfiguration, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217EE8);
  }
  return result;
}

uint64_t sub_25118B6A4(uint64_t a1)
{
  sub_25114846C(0, (unint64_t *)&unk_26B218640, (uint64_t (*)(uint64_t))sub_251155608, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25118B730()
{
  if (!qword_26B218958)
  {
    sub_251132188();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218958);
    }
  }
}

unint64_t sub_25118B794()
{
  unint64_t result = qword_26B217980;
  if (!qword_26B217980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217980);
  }
  return result;
}

uint64_t sub_25118B7E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_25118B2B0(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_25118B858()
{
  if (!qword_26B218950)
  {
    type metadata accessor for Orchestrator.InputSignalSetupRecord();
    sub_251132188();
    unint64_t v0 = sub_2511C9B00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218950);
    }
  }
}

uint64_t sub_25118B8C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251179278(a1, *(long long **)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

void sub_25118B8E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  if (!*a2)
  {
    sub_25114846C(255, (unint64_t *)&unk_26B217EB0, (uint64_t (*)(uint64_t))type metadata accessor for WorkCriteriaRecord, MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_2511558B4();
    unint64_t v9 = a3(a1, &type metadata for ScopedExecutorIdentifier, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_25118B98C()
{
  unint64_t result = qword_269B22280;
  if (!qword_269B22280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22280);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Orchestrator.PauseState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25118BAB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Orchestrator.PauseState()
{
  return &type metadata for Orchestrator.PauseState;
}

unsigned char *storeEnumTagSinglePayload for Orchestrator.OrchestrationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25118BBB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Orchestrator.OrchestrationState()
{
  return &type metadata for Orchestrator.OrchestrationState;
}

uint64_t destroy for Orchestrator.InputSignalRecord(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Orchestrator.InputSignalRecord(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for Orchestrator.InputSignalRecord(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Orchestrator.InputSignalRecord(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Orchestrator.InputSignalRecord(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Orchestrator.InputSignalRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Orchestrator.InputSignalRecord()
{
  return &type metadata for Orchestrator.InputSignalRecord;
}

unint64_t sub_25118BDBC()
{
  unint64_t result = qword_269B22290;
  if (!qword_269B22290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22290);
  }
  return result;
}

unint64_t sub_25118BE14()
{
  unint64_t result = qword_269B22298[0];
  if (!qword_269B22298[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269B22298);
  }
  return result;
}

uint64_t sub_25118BE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25118B604(a1, a2);
}

void AtomicBox.wrappedValue.getter()
{
  uint64_t v1 = v0[2];
  v2[2] = *(void *)(*v0 + 80);
  sub_2511BDA8C((void (*)(uint64_t))sub_25118BF70, (uint64_t)v2, v1);
}

uint64_t AtomicBox.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  j___s19HealthOrchestration9AtomicBoxC3setyyxF();
  long long v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);

  return v4(a1);
}

uint64_t sub_25118BF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

void AtomicBox.set(_:)(uint64_t a1)
{
  uint64_t v2 = v1[2];
  v3[2] = *(void *)(*v1 + 80);
  v3[3] = a1;
  sub_2511BDA8C((void (*)(uint64_t))sub_25118C548, (uint64_t)v3, v2);
}

void (*AtomicBox.wrappedValue.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  long long v3[4] = malloc(v6);
  AtomicBox.wrappedValue.getter();
  return sub_25118C108;
}

void sub_25118C108(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    AtomicBox.set(_:)((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    AtomicBox.set(_:)(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

void AtomicBox.map(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[2];
  v4[2] = *(void *)(*v2 + 80);
  v4[3] = a1;
  v4[4] = a2;
  sub_2511BDA8C((void (*)(uint64_t))sub_25118C5F8, (uint64_t)v4, v3);
}

uint64_t sub_25118C24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388]();
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v9, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a3, a1, a2);
}

uint64_t AtomicBox.set(_:if:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[2];
  uint64_t v6[2] = *(void *)(*v3 + 80);
  v6[3] = a2;
  v6[4] = a3;
  _OWORD v6[5] = a1;
  sub_2511BDA8C((void (*)(uint64_t))sub_25118C618, (uint64_t)v6, v4);
  return v7;
}

void *AtomicBox.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = sub_2511BDF14(a1, *(void *)(*v3 + 80));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))(a1);
  return v3;
}

void *AtomicBox.init(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25118C6F4(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t AtomicBox.deinit()
{
  swift_release();
  return v0;
}

uint64_t AtomicBox.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25118C548(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

uint64_t sub_25118C5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25118C24C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_25118C618@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t result = (*(uint64_t (**)(void))(v2 + 24))();
  if (result)
  {
    uint64_t v8 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v5);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v5);
    char v9 = 1;
  }
  else
  {
    char v9 = 0;
  }
  *a2 = v9;
  return result;
}

void *sub_25118C6F4(uint64_t a1)
{
  v1[2] = sub_2511BDF14(a1, *(void *)(*v1 + 80));
  return v1;
}

void sub_25118C728()
{
}

uint64_t sub_25118C74C()
{
  return j___s19HealthOrchestration9AtomicBoxC3setyyxF();
}

uint64_t sub_25118C770()
{
  return 8;
}

void *sub_25118C77C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_25118C788()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AtomicBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AtomicBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AtomicBox);
}

uint64_t dispatch thunk of AtomicBox.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_25118C8E8(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

id sub_25118CAC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id RemoteExecutionService.listener.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t RemoteExecutionService.__allocating_init(contextProvider:executorProviders:listener:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  RemoteExecutionService.init(contextProvider:executorProviders:listener:)(a1, a2, a3, a4);
  return v8;
}

uint64_t RemoteExecutionService.init(contextProvider:executorProviders:listener:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a4) {
    id v9 = a4;
  }
  else {
    id v9 = objc_msgSend(self, sel_serviceListener);
  }
  *(void *)(v4 + 16) = v9;
  type metadata accessor for RemoteExecutionEngine();
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  uint64_t v11 = (objc_class *)type metadata accessor for RemoteExecutionService.ServiceDelegate();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtCC19HealthOrchestration22RemoteExecutionService15ServiceDelegate_engine] = v10;
  v18.receiver = v12;
  v18.super_class = v11;
  id v13 = a4;
  swift_unknownObjectRetain();
  swift_retain();
  id v14 = objc_msgSendSuper2(&v18, sel_init);
  *(void *)(v4 + 24) = v14;
  id v15 = v9;
  id v16 = v14;
  objc_msgSend(v15, sel_setDelegate_, v16, v18.receiver, v18.super_class);
  swift_release();

  swift_unknownObjectRelease();
  return v4;
}

void sub_25118CCB4()
{
  objc_msgSend(*(id *)(v0 + 16), sel_resume);
  exit(0);
}

uint64_t RemoteExecutionService.deinit()
{
  return v0;
}

uint64_t RemoteExecutionService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteExecutionService.ServiceDelegate()
{
  return self;
}

uint64_t type metadata accessor for RemoteExecutionService()
{
  return self;
}

uint64_t method lookup function for RemoteExecutionService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RemoteExecutionService);
}

uint64_t dispatch thunk of RemoteExecutionService.__allocating_init(contextProvider:executorProviders:listener:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RemoteExecutionService.run()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_25118CDD8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25118CE10()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_25118CE24()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25118CE5C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t ValueAnchor.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t ValueAnchor.merged(with:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

BOOL sub_25118CEF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2511507C4(*a1, *a2);
}

uint64_t sub_25118CF0C()
{
  return sub_2511508F4();
}

uint64_t sub_25118CF20()
{
  return sub_2511507D4();
}

uint64_t sub_25118CF34()
{
  return sub_2511C9D80();
}

uint64_t sub_25118CF80()
{
  return sub_25115093C(*v0);
}

uint64_t sub_25118CF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511507FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25118CFC8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25118D01C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t ValueAnchor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v5 = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  v14[1] = a2;
  long long v15 = v6;
  long long v16 = v5;
  long long v18 = v5;
  long long v19 = v6;
  type metadata accessor for ValueAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_2511C9C20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511C9DA0();
  uint64_t v11 = *(void *)(v3 + 8);
  *(void *)&long long v18 = *(void *)v3;
  *((void *)&v18 + 1) = v11;
  long long v19 = *(_OWORD *)(v3 + 16);
  char v20 = 0;
  sub_2511512C4();
  uint64_t v12 = v17;
  sub_2511C9C00();
  if (!v12)
  {
    LOBYTE(v18) = 1;
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t type metadata accessor for ValueAnchor.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t ValueAnchor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a6;
  uint64_t v33 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v12;
  uint64_t v41 = v13;
  *(void *)&long long v42 = v14;
  *((void *)&v42 + 1) = v15;
  type metadata accessor for ValueAnchor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v38 = sub_2511C9BA0();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v35 = a3;
  *(void *)&long long v42 = a4;
  *((void *)&v42 + 1) = a5;
  uint64_t v18 = type metadata accessor for ValueAnchor();
  uint64_t v32 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  char v20 = (char *)&v30 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = v39;
  sub_2511C9D90();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v39 = a2;
  uint64_t v31 = v18;
  uint64_t v23 = v36;
  uint64_t v22 = v37;
  char v43 = 0;
  sub_251150F3C();
  sub_2511C9B90();
  uint64_t v24 = v41;
  *(void *)char v20 = v40;
  *((void *)v20 + 1) = v24;
  *((_OWORD *)v20 + 1) = v42;
  LOBYTE(v40) = 1;
  long long v25 = v22;
  uint64_t v26 = v39;
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v38);
  uint64_t v27 = v31;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v20[*(int *)(v31 + 52)], v25, v26);
  uint64_t v28 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v34, v20, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v20, v27);
}

uint64_t sub_25118D61C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return ValueAnchor.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_25118D640(void *a1, uint64_t a2)
{
  return ValueAnchor.encode(to:)(a1, a2);
}

uint64_t ValueAnchor.description.getter()
{
  return 0;
}

uint64_t sub_25118D6E0(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_25118D764()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *sub_25118D838(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25118D904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25118D92C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25118D948()
{
  return swift_getWitnessTable();
}

uint64_t sub_25118D964()
{
  return swift_getWitnessTable();
}

unint64_t static SerialDispatcher.errorDomain.getter()
{
  return 0xD00000000000002CLL;
}

HealthOrchestration::SerialDispatcher::Errors_optional __swiftcall SerialDispatcher.Errors.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (HealthOrchestration::SerialDispatcher::Errors_optional)rawValue;
}

uint64_t SerialDispatcher.Errors.rawValue.getter()
{
  return *v0;
}

HealthOrchestration::SerialDispatcher::Errors_optional sub_25118D9B8(Swift::Int *a1)
{
  return SerialDispatcher.Errors.init(rawValue:)(*a1);
}

void sub_25118D9C0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t SerialDispatcher.__allocating_init(providers:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  SerialDispatcher.init(providers:)(a1);
  return v2;
}

uint64_t SerialDispatcher.init(providers:)(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v12 = sub_2511C97B0();
  uint64_t v2 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2511C97A0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2511C9390();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v11 = sub_251155968();
  sub_2511C9380();
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_251148424((unint64_t *)&qword_26B217F90, MEMORY[0x263F8F0F8]);
  sub_25118F024(0, (unint64_t *)&qword_26B217F30, v7);
  sub_25118F078((unint64_t *)&qword_26B217F40, (unint64_t *)&qword_26B217F30, v7);
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F130], v12);
  uint64_t v8 = sub_2511C97D0();
  uint64_t v9 = v13;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v9;
  return v1;
}

uint64_t SerialDispatcher.start(source:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  sub_25112FD4C((uint64_t)a1, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  sub_25112F14C(v8, v5 + 24);
  uint64_t v6 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 8);
  swift_retain();
  v6(sub_25118E980, v5, v2, v3);
  swift_release();
  return swift_release();
}

uint64_t sub_25118DD60()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25118DD98(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2511C9360();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2511C9390();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v2 + 16);
  sub_251145778(a1, (uint64_t)v25);
  sub_25112FD4C(a2, (uint64_t)v24);
  uint64_t v12 = swift_allocObject();
  long long v13 = v25[4];
  *(_OWORD *)(v12 + 104) = v25[5];
  long long v14 = v25[7];
  *(_OWORD *)(v12 + 120) = v25[6];
  *(_OWORD *)(v12 + 136) = v14;
  long long v15 = v25[0];
  *(_OWORD *)(v12 + 40) = v25[1];
  long long v16 = v25[3];
  *(_OWORD *)(v12 + 56) = v25[2];
  *(_OWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = v13;
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 152) = v26;
  *(_OWORD *)(v12 + 24) = v15;
  sub_25112F14C(v24, v12 + 160);
  aBlock[4] = sub_25118F014;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_251135784;
  aBlock[3] = &block_descriptor_7;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_2511C9380();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F8F030];
  sub_251148424(&qword_26B216870, MEMORY[0x263F8F030]);
  sub_25118F024(0, (unint64_t *)&unk_26B217EF0, v18);
  sub_25118F078((unint64_t *)&unk_26B217F00, (unint64_t *)&unk_26B217EF0, v18);
  sub_2511C9900();
  MEMORY[0x253397000](0, v11, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  return swift_release();
}

uint64_t sub_25118E0F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  void (*v30)(long long *__return_ptr, uint64_t, uint64_t);
  char v32;
  id v33;
  void *v34;
  id v35;
  void (*v36)(unsigned char *, id);
  id v37;
  id v38;
  void *v39;
  id v40;
  void (*v41)(unsigned char *, id);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  long long v58;
  uint64_t v59;
  uint64_t v60;
  long long v61;
  long long v62;
  uint64_t v63;
  long long v64;
  uint64_t v65;
  uint64_t v66;
  void v67[3];
  uint64_t v68;
  uint64_t v69;
  unsigned char v70[120];
  void (*v71)(unsigned char *, id);
  long long v72[2];
  _OWORD v73[8];
  uint64_t v74;
  unsigned char v75[56];

  sub_25112FD4C((uint64_t)(a2 + 8), (uint64_t)v75);
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  long long v54 = a2[1];
  uint64_t v55 = *a2;
  sub_251145778((uint64_t)a2, (uint64_t)v73);
  sub_25112FD4C(a3, (uint64_t)v72);
  sub_251145778((uint64_t)v73, (uint64_t)v70);
  sub_25112FD4C((uint64_t)v72, (uint64_t)v67);
  uint64_t v10 = swift_allocObject();
  long long v11 = v73[7];
  *(_OWORD *)(v10 + 112) = v73[6];
  *(_OWORD *)(v10 + 128) = v11;
  uint64_t v12 = v74;
  long long v13 = v73[3];
  *(_OWORD *)(v10 + 48) = v73[2];
  *(_OWORD *)(v10 + 64) = v13;
  long long v14 = v73[5];
  *(_OWORD *)(v10 + 80) = v73[4];
  *(_OWORD *)(v10 + 96) = v14;
  long long v15 = v73[1];
  *(_OWORD *)(v10 + 16) = v73[0];
  *(_OWORD *)(v10 + 32) = v15;
  *(void *)(v10 + 144) = v12;
  *(void *)(v10 + 152) = a1;
  uint64_t v56 = v10;
  sub_25112F14C(v72, v10 + 160);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(v16 + 16);
  char v57 = v8;
  if (v17)
  {
    uint64_t v18 = v16 + 32;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_25112FD4C(v18, (uint64_t)&v58);
      uint64_t v19 = v59;
      uint64_t v20 = v60;
      __swift_project_boxed_opaque_existential_1(&v58, v59);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20) == v7 && v21 == v6) {
        break;
      }
      char v23 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_25;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
      v18 += 40;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    sub_25112F14C(&v58, (uint64_t)&v61);
    swift_bridgeObjectRelease();
    if (!*((void *)&v62 + 1)) {
      goto LABEL_26;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v63 = 0;
    uint64_t v61 = 0u;
    uint64_t v62 = 0u;
    swift_bridgeObjectRelease();
    if (!*((void *)&v62 + 1))
    {
LABEL_26:
      sub_25113533C((uint64_t)&v61);
      uint64_t v38 = objc_allocWithZone(MEMORY[0x263F087E8]);
      uint64_t v39 = (void *)sub_2511C9480();
      uint64_t v40 = objc_msgSend(v38, sel_initWithDomain_code_userInfo_, v39, 0, 0);

      if (v40)
      {
        uint64_t v41 = v71;
        long long v42 = v40;
        v41(v70, v40);
      }
      else
      {
        v71(v70, 0);
      }
      uint64_t v48 = v68;
      uint64_t v49 = v69;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      uint64_t v50 = swift_allocObject();
      swift_weakInit();
      sub_25112FD4C((uint64_t)v67, (uint64_t)&v64);
      int v51 = swift_allocObject();
      *(void *)(v51 + 16) = v50;
      sub_25112F14C(&v64, v51 + 24);
      uint64_t v52 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v49 + 8);
      swift_retain();
      v52(sub_25118F19C, v51, v48, v49);
      swift_release();

      swift_release();
      swift_release();
      goto LABEL_35;
    }
  }
  sub_25112F14C(&v61, (uint64_t)&v64);
  uint64_t v24 = v65;
  uint64_t v25 = v66;
  __swift_project_boxed_opaque_existential_1(&v64, v65);
  uint64_t v26 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 16))(v55, v54, v24, v25) + 16);
  if (v26)
  {
    uint64_t v27 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      uint64_t v28 = *v27;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 24);
      swift_unknownObjectRetain();
      v30(&v61, ObjectType, v28);
      if ((void)v61 == v9 && *((void *)&v61 + 1) == v57)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      uint64_t v32 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32) {
        break;
      }
      swift_unknownObjectRelease();
      v27 += 2;
      if (!--v26)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_30:
    sub_25118E98C((uint64_t)v75, (void (*)(id))sub_25118F140, v56, ObjectType, v28);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v33 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v34 = (void *)sub_2511C9480();
    uint64_t v35 = objc_msgSend(v33, sel_initWithDomain_code_userInfo_, v34, 1, 0);

    if (v35)
    {
      uint64_t v36 = v71;
      uint64_t v37 = v35;
      v36(v70, v35);
    }
    else
    {
      v71(v70, 0);
    }
    char v43 = v68;
    uint64_t v44 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    sub_25112FD4C((uint64_t)v67, (uint64_t)&v61);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    sub_25112F14C(&v61, v46 + 24);
    int64_t v47 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v44 + 8);
    swift_retain();
    v47(sub_25118F19C, v46, v43, v44);

    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
    swift_release();
  }
LABEL_35:
  sub_25114589C((uint64_t)v70);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
}

uint64_t sub_25118E7C8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    uint64_t v7 = *(void (**)(uint64_t, void *))(a2 + 120);
    id v8 = a1;
    v7(a2, a1);
  }
  else
  {
    (*(void (**)(uint64_t, void))(a2 + 120))(a2, 0);
  }
  uint64_t v9 = a4[3];
  uint64_t v10 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v9);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  sub_25112FD4C((uint64_t)a4, (uint64_t)v15);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  sub_25112F14C(v15, v12 + 24);
  long long v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
  swift_retain();
  v13(sub_25118F19C, v12, v9, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_25118E908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25118DD98(a1, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_25118E980(uint64_t a1)
{
  return sub_25118E908(a1, *(void *)(v1 + 16), v1 + 24);
}

void sub_25118E98C(uint64_t a1, void (*a2)(id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v23 = a2;
  uint64_t v24 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_2511C9890();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&v22 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v22 - v15;
  sub_25112FD4C(a1, (uint64_t)v25);
  sub_25112F678(0, (unint64_t *)&qword_26B217E58);
  int v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    v18(v13, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, AssociatedTypeWitness);
    (*(void (**)(char *, void (*)(id), uint64_t, uint64_t, uint64_t))(a5 + 40))(v16, v23, v24, a4, a5);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
  }
  else
  {
    v18(v13, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    id v19 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v20 = (void *)sub_2511C9480();
    id v21 = objc_msgSend(v19, sel_initWithDomain_code_userInfo_, v20, 2, 0);

    v23(v21);
  }
}

uint64_t SerialDispatcher.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SerialDispatcher.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_25118ECF4()
{
  unint64_t result = qword_269B22390;
  if (!qword_269B22390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22390);
  }
  return result;
}

uint64_t sub_25118ED48(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  sub_25112FD4C((uint64_t)a1, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  sub_25112F14C(v8, v5 + 24);
  uint64_t v6 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v3 + 8);
  swift_retain();
  v6(sub_25118F19C, v5, v2, v3);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for SerialDispatcher()
{
  return self;
}

uint64_t method lookup function for SerialDispatcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SerialDispatcher);
}

uint64_t dispatch thunk of SerialDispatcher.__allocating_init(providers:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for SerialDispatcher.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25118EF60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SerialDispatcher.Errors()
{
  return &type metadata for SerialDispatcher.Errors;
}

uint64_t sub_25118EF9C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);

  return MEMORY[0x270FA0238](v0, 200, 7);
}

uint64_t sub_25118F014()
{
  return sub_25118E0F0(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), v0 + 160);
}

void sub_25118F024(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9610();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25118F078(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25118F024(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25118F0C8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);

  return MEMORY[0x270FA0238](v0, 200, 7);
}

uint64_t sub_25118F140(void *a1)
{
  return sub_25118E7C8(a1, v1 + 16, *(void *)(v1 + 152), (void *)(v1 + 160));
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t SimpleWorkPlan.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

__n128 SimpleWorkPlan.identifier.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  __n128 result = v4;
  *uint64_t v1 = v4;
  v1[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*SimpleWorkPlan.identifier.modify())()
{
  return nullsub_1;
}

uint64_t SimpleWorkPlan.priority.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SimpleWorkPlan.priority.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(unsigned char *)(v1 + 32) = v3;
  return result;
}

uint64_t (*SimpleWorkPlan.priority.modify())()
{
  return nullsub_1;
}

void __swiftcall SimpleWorkPlan.init(identifier:priority:)(HealthOrchestration::SimpleWorkPlan *__return_ptr retstr, HealthOrchestration::WorkPlanIdentifier identifier, HealthOrchestration::PriorityRuleSet priority)
{
  Swift::Int v3 = *(void *)(identifier.domain._countAndFlagsBits + 16);
  __n128 v4 = *(void **)identifier.domain._object;
  HealthOrchestration::PriorityRuleSet::Priority v5 = *((unsigned char *)identifier.domain._object + 8);
  retstr->identifier.domain = *(Swift::String *)identifier.domain._countAndFlagsBits;
  retstr->identifier.code = v3;
  retstr->priority.orderedRules._char rawValue = v4;
  retstr->priority.basePriority = v5;
}

void __swiftcall SimpleWorkPlan.init(domain:code:priority:)(HealthOrchestration::SimpleWorkPlan *__return_ptr retstr, Swift::String domain, Swift::Int code, HealthOrchestration::PriorityRuleSet priority)
{
  __n128 v4 = *(void **)priority.orderedRules._rawValue;
  HealthOrchestration::PriorityRuleSet::Priority v5 = *((unsigned char *)priority.orderedRules._rawValue + 8);
  retstr->identifier.domain = domain;
  retstr->identifier.code = code;
  retstr->priority.orderedRules._char rawValue = v4;
  retstr->priority.basePriority = v5;
}

void __swiftcall SimpleWorkPlan.merged(with:)(HealthOrchestration::SimpleWorkPlan *__return_ptr retstr, HealthOrchestration::SimpleWorkPlan *with)
{
  object = with->identifier.domain._object;
  Swift::Int code = with->identifier.code;
  char rawValue = with->priority.orderedRules._rawValue;
  HealthOrchestration::PriorityRuleSet::Priority basePriority = with->priority.basePriority;
  retstr->identifier.domain._countAndFlagsBits = with->identifier.domain._countAndFlagsBits;
  retstr->identifier.domain._object = object;
  retstr->identifier.Swift::Int code = code;
  retstr->priority.orderedRules._char rawValue = rawValue;
  retstr->priority.HealthOrchestration::PriorityRuleSet::Priority basePriority = basePriority;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

uint64_t sub_25118F314()
{
  if (*v0) {
    return 0x797469726F697270;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_25118F354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251190054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25118F37C(uint64_t a1)
{
  unint64_t v2 = sub_25118FAF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25118F3B8(uint64_t a1)
{
  unint64_t v2 = sub_25118FAF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SimpleWorkPlan.encode(to:)(void *a1)
{
  sub_25118FB4C(0, &qword_269B22398, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v11 - v7;
  long long v13 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v12 = *((void *)v1 + 3);
  int v16 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25118FAF8();
  sub_2511C9DA0();
  long long v14 = v13;
  uint64_t v15 = v9;
  char v17 = 0;
  sub_25114D3C4();
  sub_2511C9C00();
  if (!v2)
  {
    *(void *)&long long v14 = v12;
    BYTE8(v14) = v16;
    char v17 = 1;
    sub_25114D418();
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SimpleWorkPlan.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25118FB4C(0, &qword_269B223A8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25118FAF8();
  sub_2511C9D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v19 = 0;
  sub_25114D870();
  sub_2511C9B90();
  uint64_t v10 = v17;
  uint64_t v15 = v16;
  uint64_t v11 = v18;
  char v19 = 1;
  sub_25114D8C4();
  swift_bridgeObjectRetain();
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = v16;
  char v13 = v17;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25118F810@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25118F824@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25118F838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_25118F88C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SimpleWorkPlan.init(from:)(a1, a2);
}

uint64_t sub_25118F8A4(void *a1)
{
  return SimpleWorkPlan.encode(to:)(a1);
}

uint64_t SimpleWorkPlan.description.getter()
{
  return 0x616C506B726F573CLL;
}

uint64_t _s19HealthOrchestration14SimpleWorkPlanV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v6) {
      return 0;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_25114DF90(v3, v5))
    {
      char v11 = sub_25114DC38(v4, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        return 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  char v9 = sub_2511C9CA0();
  uint64_t result = 0;
  if ((v9 & 1) != 0 && v2 == v6) {
    goto LABEL_9;
  }
  return result;
}

unint64_t sub_25118FAF8()
{
  unint64_t result = qword_269B223A0;
  if (!qword_269B223A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B223A0);
  }
  return result;
}

void sub_25118FB4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_25118FAF8();
    unint64_t v7 = a3(a1, &type metadata for SimpleWorkPlan.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_25118FBB0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25118FBE0();
  unint64_t result = sub_25118FC34();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_25118FBE0()
{
  unint64_t result = qword_26B217A18;
  if (!qword_26B217A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A18);
  }
  return result;
}

unint64_t sub_25118FC34()
{
  unint64_t result = qword_26B217A10;
  if (!qword_26B217A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A10);
  }
  return result;
}

uint64_t initializeWithCopy for SimpleWorkPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SimpleWorkPlan(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SimpleWorkPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleWorkPlan(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleWorkPlan(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleWorkPlan()
{
  return &type metadata for SimpleWorkPlan;
}

unsigned char *storeEnumTagSinglePayload for SimpleWorkPlan.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25118FF14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleWorkPlan.CodingKeys()
{
  return &type metadata for SimpleWorkPlan.CodingKeys;
}

unint64_t sub_25118FF50()
{
  unint64_t result = qword_269B223B0;
  if (!qword_269B223B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B223B0);
  }
  return result;
}

unint64_t sub_25118FFA8()
{
  unint64_t result = qword_269B223B8;
  if (!qword_269B223B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B223B8);
  }
  return result;
}

unint64_t sub_251190000()
{
  unint64_t result = qword_269B223C0;
  if (!qword_269B223C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B223C0);
  }
  return result;
}

uint64_t sub_251190054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251190154(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_25116B828(0, v1, 0);
  uint64_t v2 = v32;
  uint64_t result = sub_2511BBB68(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v25 = v3 + 80;
  int64_t v26 = v1;
  int v27 = v5;
  uint64_t v28 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v29 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    long long v14 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v6);
    uint64_t v15 = v14[1];
    uint64_t v30 = *v12;
    uint64_t v31 = *v14;
    uint64_t v16 = v3;
    unint64_t v18 = *(void *)(v32 + 16);
    unint64_t v17 = *(void *)(v32 + 24);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v18 >= v17 >> 1) {
      uint64_t result = sub_25116B828(v17 > 1, v18 + 1, 1);
    }
    *(void *)(v32 + 16) = v18 + 1;
    char v19 = (void *)(v32 + 32 * v18);
    v19[4] = v30;
    v19[5] = v13;
    v19[6] = v31;
    v19[7] = v15;
    int64_t v9 = 1 << *(unsigned char *)(v16 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v28;
    uint64_t v20 = *(void *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v16;
    int v5 = v27;
    if (*(_DWORD *)(v16 + 36) != v27) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v26;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v26;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(v25 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v29 + 1;
    uint64_t v6 = v9;
    if (v29 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25119038C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_251141A94(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 56;
    do
    {
      uint64_t v9 = *(void *)(v4 - 24);
      uint64_t v10 = *(void *)(v4 - 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2511C9520();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = *(void *)(v11 + 16);
      unint64_t v5 = *(void *)(v11 + 24);
      if (v6 >= v5 >> 1) {
        sub_251141A94(v5 > 1, v6 + 1, 1);
      }
      v4 += 32;
      *(void *)(v11 + 16) = v6 + 1;
      uint64_t v7 = v11 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2511904B4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_25116B828(0, v1, 0);
  uint64_t v2 = v35;
  uint64_t result = sub_2511BBB68(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v29 = v1;
  int v30 = v5;
  uint64_t v31 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (unint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    unint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    unint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_251190BF4(v13, v14, v15);
    uint64_t v33 = v17;
    uint64_t v34 = v16;
    uint64_t v19 = v18;
    uint64_t v32 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v22 = *(void *)(v35 + 16);
    unint64_t v21 = *(void *)(v35 + 24);
    if (v22 >= v21 >> 1) {
      uint64_t result = sub_25116B828(v21 > 1, v22 + 1, 1);
    }
    *(void *)(v35 + 16) = v22 + 1;
    unint64_t v23 = (void *)(v35 + 32 * v22);
    v23[4] = v34;
    void v23[5] = v33;
    v23[6] = v19;
    v23[7] = v32;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v24 = *(void *)(v31 + 8 * v11);
    if ((v24 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v30;
    if (*(_DWORD *)(a1 + 36) != v30) {
      goto LABEL_27;
    }
    unint64_t v25 = v24 & (-2 << (v6 & 0x3F));
    if (v25)
    {
      int64_t v9 = __clz(__rbit64(v25)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v29;
    }
    else
    {
      unint64_t v26 = v11 + 1;
      unint64_t v27 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v29;
      if (v11 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v31 + 8 * v26);
        if (v28)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v11)
          {
            unint64_t v28 = *(void *)(a1 + 80 + 8 * v11++);
            if (v28)
            {
              unint64_t v26 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *DebugSnapshot.__allocating_init(_:attributes:subObjects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t DebugSnapshot.object.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugSnapshot.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DebugSnapshot.subObjects.getter()
{
  return swift_bridgeObjectRetain();
}

void *DebugSnapshot.init(_:attributes:subObjects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

void *sub_2511907A8()
{
  if (!*(void *)(*(void *)(v0 + 32) + 16)) {
    return 0;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_251190154(v1);
  swift_bridgeObjectRelease();
  v16[0] = v2;
  swift_bridgeObjectRetain();
  sub_251191D94(v16);
  swift_bridgeObjectRelease();
  uint64_t v3 = v16[0];
  v16[0] = 0;
  v16[1] = (void *)0xE000000000000000;
  int64_t v4 = v3[2];
  if (v4)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_251141A94(0, v4, 0);
    uint64_t v5 = v15;
    uint64_t v6 = v3 + 7;
    while (1)
    {
      uint64_t v7 = *(v6 - 3);
      uint64_t v8 = *(v6 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_2511C9500();
      if (__OFADD__(v9, 2)) {
        break;
      }
      MEMORY[0x253396D80](32, 0xE100000000000000, v9 + 2);
      v14[0] = v7;
      v14[1] = v8;
      swift_bridgeObjectRetain();
      sub_2511C9520();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      sub_25118B98C();
      sub_2511C98D0();
      swift_bridgeObjectRelease();
      sub_2511C9520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v5;
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_251141A94(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v15;
      }
      v6 += 4;
      *(void *)(v5 + 16) = v11 + 1;
      uint64_t v12 = v5 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v8;
      if (!--v4)
      {
        swift_release();
        goto LABEL_11;
      }
    }
    __break(1u);
    swift_release();
    __break(1u);
    uint64_t result = (void *)swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_11:
    v14[0] = v5;
    swift_bridgeObjectRetain();
    sub_251191D28(v14);
    swift_bridgeObjectRelease();
    sub_2511936D8();
    sub_251193B18((unint64_t *)&qword_26B217F20, 255, (void (*)(uint64_t))sub_2511936D8);
    sub_2511C9460();
    swift_release();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    return v16[0];
  }
  return result;
}

uint64_t sub_251190AD0()
{
  if (!*(void *)(*(void *)(v0 + 40) + 16)) {
    return 0;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_2511904B4(v1);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  swift_bridgeObjectRetain();
  sub_251191D94(&v6);
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_25119038C((uint64_t)v6);
  swift_release();
  uint64_t v6 = v3;
  sub_2511936D8();
  sub_251193B18((unint64_t *)&qword_26B217F20, 255, (void (*)(uint64_t))sub_2511936D8);
  uint64_t v4 = sub_2511C9460();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_251190BF4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if (a3 >> 62) {
    goto LABEL_24;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (!v6) {
      break;
    }
    uint64_t v48 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251141A94(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v36 = a1;
    uint64_t v37 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    unint64_t v40 = v3 & 0xC000000000000001;
    uint64_t v41 = v6;
    unint64_t v38 = v3 + 32;
    unint64_t v39 = v3;
    while (v9 != v6)
    {
      uint64_t v43 = v9;
      if (v40)
      {
        uint64_t v11 = MEMORY[0x2533971C0]();
      }
      else
      {
        uint64_t v11 = *(void *)(v38 + 8 * v9);
        swift_retain();
      }
      uint64_t v12 = DebugSnapshot.description.getter();
      unint64_t v14 = v13;
      uint64_t v46 = 10;
      unint64_t v47 = 0xE100000000000000;
      MEMORY[0x270FA5388](v12);
      _OWORD v35[2] = &v46;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_251191E00(0x7FFFFFFFFFFFFFFFLL, 1, sub_2511936BC, (uint64_t)v35, v12, v14);
      uint64_t v44 = v10;
      swift_bridgeObjectRelease();
      int64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        uint64_t v42 = v11;
        uint64_t v45 = v7;
        sub_251141A94(0, v16, 0);
        uint64_t v7 = v45;
        uint64_t v17 = (uint64_t *)(v15 + 56);
        do
        {
          uint64_t v18 = *(v17 - 3);
          uint64_t v19 = *(v17 - 2);
          uint64_t v20 = *(v17 - 1);
          uint64_t v21 = *v17;
          uint64_t v46 = 538976288;
          unint64_t v47 = 0xE400000000000000;
          swift_bridgeObjectRetain();
          MEMORY[0x253396D20](v18, v19, v20, v21);
          sub_2511C9520();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v22 = v46;
          unint64_t v23 = v47;
          uint64_t v45 = v7;
          unint64_t v25 = *(void *)(v7 + 16);
          unint64_t v24 = *(void *)(v7 + 24);
          if (v25 >= v24 >> 1)
          {
            sub_251141A94(v24 > 1, v25 + 1, 1);
            uint64_t v7 = v45;
          }
          *(void *)(v7 + 16) = v25 + 1;
          unint64_t v26 = v7 + 16 * v25;
          *(void *)(v26 + 32) = v22;
          *(void *)(v26 + 40) = v23;
          v17 += 4;
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v46 = v7;
      sub_2511936D8();
      sub_251193B18((unint64_t *)&qword_26B217F20, 255, (void (*)(uint64_t))sub_2511936D8);
      a2 = sub_2511C9460();
      uint64_t v28 = v27;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v29 = v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v6 = v41;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251141A94(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v48;
      }
      uint64_t v7 = MEMORY[0x263F8EE78];
      uint64_t v31 = v43;
      a1 = *(void *)(v29 + 16);
      unint64_t v32 = *(void *)(v29 + 24);
      if (a1 >= v32 >> 1)
      {
        uint64_t v34 = v43;
        sub_251141A94(v32 > 1, a1 + 1, 1);
        uint64_t v31 = v34;
        uint64_t v29 = v48;
      }
      uint64_t v9 = v31 + 1;
      *(void *)(v29 + 16) = a1 + 1;
      unint64_t v33 = v29 + 16 * a1;
      *(void *)(v33 + 32) = a2;
      *(void *)(v33 + 40) = v28;
      uint64_t v10 = v44;
      unint64_t v3 = v39;
      if (v9 == v6)
      {
        a1 = v36;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2511C9AC0();
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
LABEL_22:
  uint64_t v46 = v29;
  sub_2511936D8();
  sub_251193B18((unint64_t *)&qword_26B217F20, 255, (void (*)(uint64_t))sub_2511936D8);
  sub_2511C9460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t DebugSnapshot.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2511C90F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v49 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void *)(v0 + 24);
  uint64_t v55 = *(void *)(v0 + 16);
  unint64_t v56 = v5;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2511907A8();
  if (v7)
  {
    uint64_t v8 = (uint64_t)v6;
    unint64_t v9 = v7;
    uint64_t v53 = 10;
    unint64_t v54 = 0xE100000000000000;
    uint64_t v51 = 10;
    unint64_t v52 = 0xE100000000000000;
    MEMORY[0x270FA5388](v6);
    v45[-2] = &v51;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251191E00(0x7FFFFFFFFFFFFFFFLL, 1, sub_2511936BC, (uint64_t)&v45[-4], v8, v9);
    swift_bridgeObjectRelease();
    int64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      v45[1] = v1;
      uint64_t v46 = 0;
      uint64_t v47 = v3;
      uint64_t v48 = v2;
      uint64_t v50 = MEMORY[0x263F8EE78];
      sub_251141A94(0, v11, 0);
      uint64_t v12 = v50;
      v45[0] = v10;
      unint64_t v13 = (uint64_t *)(v10 + 56);
      do
      {
        uint64_t v14 = *(v13 - 3);
        uint64_t v15 = *(v13 - 2);
        uint64_t v17 = *(v13 - 1);
        uint64_t v16 = *v13;
        uint64_t v51 = 538976380;
        unint64_t v52 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        MEMORY[0x253396D20](v14, v15, v17, v16);
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = v51;
        unint64_t v19 = v52;
        uint64_t v50 = v12;
        unint64_t v21 = *(void *)(v12 + 16);
        unint64_t v20 = *(void *)(v12 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_251141A94(v20 > 1, v21 + 1, 1);
          uint64_t v12 = v50;
        }
        *(void *)(v12 + 16) = v21 + 1;
        unint64_t v22 = v12 + 16 * v21;
        *(void *)(v22 + 32) = v18;
        *(void *)(v22 + 40) = v19;
        v13 += 4;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      uint64_t v3 = v47;
      uint64_t v2 = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    uint64_t v51 = v12;
    sub_2511936D8();
    sub_251193B18((unint64_t *)&qword_26B217F20, 255, (void (*)(uint64_t))sub_2511936D8);
    sub_2511C9460();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_251190AD0();
  if (v24)
  {
    uint64_t v25 = v23;
    unint64_t v26 = v24;
    uint64_t v53 = 10;
    unint64_t v54 = 0xE100000000000000;
    uint64_t v51 = 10;
    unint64_t v52 = 0xE100000000000000;
    MEMORY[0x270FA5388](v23);
    v45[-2] = &v51;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_251191E00(0x7FFFFFFFFFFFFFFFLL, 1, sub_2511936BC, (uint64_t)&v45[-4], v25, v26);
    swift_bridgeObjectRelease();
    int64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v47 = v3;
      uint64_t v48 = v2;
      uint64_t v50 = MEMORY[0x263F8EE78];
      sub_251141A94(0, v28, 0);
      uint64_t v29 = v50;
      uint64_t v46 = v27;
      int v30 = (uint64_t *)(v27 + 56);
      do
      {
        uint64_t v31 = *(v30 - 3);
        uint64_t v32 = *(v30 - 2);
        uint64_t v33 = *(v30 - 1);
        uint64_t v34 = *v30;
        uint64_t v51 = 538976380;
        unint64_t v52 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        MEMORY[0x253396D20](v31, v32, v33, v34);
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = v51;
        unint64_t v36 = v52;
        uint64_t v50 = v29;
        unint64_t v38 = *(void *)(v29 + 16);
        unint64_t v37 = *(void *)(v29 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_251141A94(v37 > 1, v38 + 1, 1);
          uint64_t v29 = v50;
        }
        *(void *)(v29 + 16) = v38 + 1;
        unint64_t v39 = v29 + 16 * v38;
        *(void *)(v39 + 32) = v35;
        *(void *)(v39 + 40) = v36;
        v30 += 4;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v3 = v47;
      uint64_t v2 = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = MEMORY[0x263F8EE78];
    }
    uint64_t v51 = v29;
    sub_2511936D8();
    sub_251193B18((unint64_t *)&qword_26B217F20, 255, (void (*)(uint64_t))sub_2511936D8);
    sub_2511C9460();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    swift_bridgeObjectRelease();
  }
  uint64_t v53 = v55;
  unint64_t v54 = v56;
  unint64_t v40 = v49;
  sub_2511C90E0();
  sub_25118B98C();
  uint64_t v41 = sub_2511C98C0();
  unint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v40, v2);
  swift_bridgeObjectRelease();
  uint64_t v53 = v41;
  unint64_t v54 = v43;
  swift_bridgeObjectRetain();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_2511915D4()
{
  uint64_t v1 = 0x7475626972747461;
  if (*v0 != 1) {
    uint64_t v1 = 0x63656A624F627573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7463656A626FLL;
  }
}

uint64_t sub_251191630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251193DD4(a1, a2);
  *a3 = result;
  return result;
}

void sub_251191658(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_251191664(uint64_t a1)
{
  unint64_t v2 = sub_251193730();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2511916A0(uint64_t a1)
{
  unint64_t v2 = sub_251193730();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DebugSnapshot.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DebugSnapshot.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t DebugSnapshot.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_251193914(0, &qword_269B223C8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251193730();
  sub_2511C9DA0();
  LOBYTE(v12) = 0;
  sub_2511C9BD0();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 32);
    HIBYTE(v11) = 1;
    sub_25114A7B4();
    sub_251193978(&qword_269B223D8);
    sub_2511C9C00();
    uint64_t v12 = *(void *)(v3 + 40);
    HIBYTE(v11) = 2;
    sub_251193784();
    sub_251193864();
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t DebugSnapshot.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DebugSnapshot.init(from:)(a1);
  return v2;
}

void *DebugSnapshot.init(from:)(void *a1)
{
  sub_251193914(0, &qword_269B22400, MEMORY[0x263F8E040]);
  uint64_t v12 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251193730();
  sub_2511C9D90();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    LOBYTE(v14) = 0;
    uint64_t v9 = v12;
    v1[2] = sub_2511C9B60();
    v1[3] = v10;
    sub_25114A7B4();
    char v13 = 1;
    sub_251193978(&qword_269B22408);
    sub_2511C9B90();
    v1[4] = v14;
    sub_251193784();
    char v13 = 2;
    sub_2511939D8();
    sub_2511C9B90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v1[5] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void *sub_251191C7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = DebugSnapshot.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_251191CD4(void *a1)
{
  return DebugSnapshot.encode(to:)(a1);
}

uint64_t sub_251191CF8(void **a1, void **a2)
{
  return _s19HealthOrchestration13DebugSnapshotC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_251191D04()
{
  return DebugSnapshot.description.getter();
}

uint64_t sub_251191D28(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2511B2F04(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_251192400(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251191D94(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_2511B2F18(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_251192AEC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251191E00(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_2511922A4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    char v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  char v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_2511C9550();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_2511C9510();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_2511C9510();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_2511C9560();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v13 = sub_2511BF804(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    char v13 = sub_2511BF804((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  int64_t v28 = &v13[4 * v27];
  _OWORD v28[4] = v45;
  uint64_t v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_2511C9510();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_2511C9560();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v13 = sub_2511BF804(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      char v13 = sub_2511BF804((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    unint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_2511C9AA0();
  __break(1u);
LABEL_42:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_2511922A4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_2511C9560();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_2511BF804(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_2511BF804((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    uint64_t v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    _OWORD v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_251192400(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2511931EC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_2511933A0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_2511B2EF0((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          unint64_t v100 = &v97[16 * v96 + 32];
          *(void *)unint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_2511C95F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_2511C9CA0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_2511C9CA0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2511B2920(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_2511B2920((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          char v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_2511933A0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        unint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_2511C9CA0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)unint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_251192AEC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2511C9C40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2511932BC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v110 = result;
  uint64_t v107 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v98 = v11;
      uint64_t v109 = v8;
      if (v12 >= 2)
      {
        uint64_t v99 = *v107;
        do
        {
          unint64_t v100 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v99) {
            goto LABEL_159;
          }
          unint64_t v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v12 + 24];
          sub_251183AB0((char *)(v99 + 32 * v102), (char *)(v99 + 32 * *(void *)&v98[16 * v12 + 16]), v99 + 32 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v101 = sub_2511B2EF0((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_149;
          }
          uint64_t v104 = &v101[16 * v100 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v12 > v105) {
            goto LABEL_150;
          }
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          uint64_t v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v109 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_25115A3E0();
    uint64_t v7 = sub_2511C95F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v109 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v108 = *a1 + 8;
  uint64_t v106 = *a1 + 24;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v111 = v3;
  uint64_t v112 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 32 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 32 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_2511C9CA0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v108 + 32 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 32 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_2511C9CA0()))
      {
        goto LABEL_36;
      }
      v21 += 4;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 32 * v20;
        uint64_t v26 = 32 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            long long v31 = *(_OWORD *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 16);
            uint64_t v33 = *(void *)(v10 + v26 + 24);
            long long v34 = *(_OWORD *)(v10 + v25 - 16);
            *uint64_t v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(_OWORD *)(v30 - 32) = v31;
            *(void *)(v30 - 16) = v32;
            *(void *)(v30 - 8) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v110) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2511B2920(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v48 = *((void *)v11 + 2);
    unint64_t v47 = *((void *)v11 + 3);
    unint64_t v12 = v48 + 1;
    if (v48 >= v47 >> 1) {
      uint64_t v11 = sub_2511B2920((char *)(v47 > 1), v48 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v49 = v11 + 32;
    uint64_t v50 = &v11[16 * v48 + 32];
    *(void *)uint64_t v50 = v13;
    *((void *)v50 + 1) = v9;
    if (v48)
    {
      uint64_t v10 = v112;
      while (1)
      {
        unint64_t v51 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v56 = &v49[16 * v12];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_135;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_136;
          }
          unint64_t v63 = v12 - 2;
          uint64_t v64 = &v49[16 * v12 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_138;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_141;
          }
          if (v68 >= v59)
          {
            uint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_145;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v80 = *((void *)v11 + 4);
            uint64_t v81 = *((void *)v11 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_99;
          }
          uint64_t v53 = *((void *)v11 + 4);
          uint64_t v52 = *((void *)v11 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_137;
        }
        unint64_t v63 = v12 - 2;
        uint64_t v69 = &v49[16 * v12 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_140;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_143;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_144;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_105:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v74) {
          goto LABEL_139;
        }
        uint64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_142;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v91 = v11;
        uint64_t v92 = v10;
        unint64_t v93 = &v49[16 * v90];
        uint64_t v94 = *(void *)v93;
        uint64_t v95 = &v49[16 * v51];
        uint64_t v96 = *((void *)v95 + 1);
        sub_251183AB0((char *)(v92 + 32 * *(void *)v93), (char *)(v92 + 32 * *(void *)v95), v92 + 32 * v96, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v96 < v94) {
          goto LABEL_132;
        }
        if (v51 > *((void *)v91 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v93 = v94;
        *(void *)&v49[16 * v90 + 8] = v96;
        unint64_t v97 = *((void *)v91 + 2);
        if (v51 >= v97) {
          goto LABEL_134;
        }
        uint64_t v11 = v91;
        unint64_t v12 = v97 - 1;
        memmove(&v49[16 * v51], v95 + 16, 16 * (v97 - 1 - v51));
        *((void *)v91 + 2) = v97 - 1;
        BOOL v79 = v97 > 2;
        uint64_t v10 = v112;
        if (!v79) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v112;
LABEL_15:
    uint64_t v3 = v111;
    if (v9 >= v111)
    {
      uint64_t v8 = v109;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v110)) {
    goto LABEL_153;
  }
  if (v13 + v110 >= v3) {
    uint64_t v35 = v3;
  }
  else {
    uint64_t v35 = v13 + v110;
  }
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      uint64_t v36 = (void *)(v106 + 32 * v9);
      do
      {
        uint64_t v37 = (uint64_t *)(v10 + 32 * v9);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        uint64_t v40 = v13;
        unint64_t v41 = v36;
        do
        {
          uint64_t v42 = (long long *)(v41 - 7);
          BOOL v43 = v38 == *(v41 - 7) && v39 == *(v41 - 6);
          if (v43 || (sub_2511C9CA0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          long long v45 = *v42;
          long long v44 = *(_OWORD *)(v41 - 5);
          *(v41 - 4) = *v41;
          v41 -= 4;
          uint64_t v38 = v41[1];
          uint64_t v39 = v41[2];
          uint64_t v46 = v41[3];
          v42[2] = v45;
          v42[3] = v44;
          *(v41 - 3) = v38;
          *(v41 - 2) = v39;
          *(v41 - 1) = v46;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 4;
      }
      while (v9 != v35);
      uint64_t v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_2511C9AA0();
  __break(1u);
  return result;
}

uint64_t sub_2511931EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_2511C9CA0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2511932BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 32 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (void *)v8;
    while (1)
    {
      BOOL v13 = (long long *)(v12 - 7);
      BOOL v14 = result == *(v12 - 7) && v10 == *(v12 - 6);
      if (v14 || (uint64_t result = sub_2511C9CA0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v16 = *v13;
      long long v15 = *(_OWORD *)(v12 - 5);
      *(v12 - 4) = *v12;
      v12 -= 4;
      uint64_t result = v12[1];
      uint64_t v10 = v12[2];
      uint64_t v17 = v12[3];
      void v13[2] = v16;
      v13[3] = v15;
      *(v12 - 3) = result;
      *(v12 - 2) = v10;
      *(v12 - 1) = v17;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2511933A0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        char v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_2511C9CA0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)char v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)char v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    BOOL v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_2511C9CA0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          long long v16 = v6;
        }
        else
        {
          long long v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_2511B2A48((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_2511C9B10();
  __break(1u);
  return result;
}

uint64_t _s19HealthOrchestration13DebugSnapshotC2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v4 && (sub_2511C9CA0() & 1) == 0 || (sub_2511637C4(a1[4], a2[4]) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[5];

  return sub_251164318(v5, v6);
}

uint64_t sub_2511936BC(void *a1)
{
  return sub_251193F7C(a1) & 1;
}

void sub_2511936D8()
{
  if (!qword_26B217F10)
  {
    unint64_t v0 = sub_2511C9610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B217F10);
    }
  }
}

unint64_t sub_251193730()
{
  unint64_t result = qword_269B223D0;
  if (!qword_269B223D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B223D0);
  }
  return result;
}

void sub_251193784()
{
  if (!qword_269B223E0)
  {
    sub_2511937EC();
    unint64_t v0 = sub_2511C9430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B223E0);
    }
  }
}

void sub_2511937EC()
{
  if (!qword_269B21BF0)
  {
    type metadata accessor for DebugSnapshot();
    unint64_t v0 = sub_2511C9610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B21BF0);
    }
  }
}

uint64_t type metadata accessor for DebugSnapshot()
{
  return self;
}

unint64_t sub_251193864()
{
  unint64_t result = qword_269B223E8;
  if (!qword_269B223E8)
  {
    sub_251193784();
    sub_251193A88(&qword_269B223F0, &qword_269B223F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B223E8);
  }
  return result;
}

void sub_251193914(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_251193730();
    unint64_t v7 = a3(a1, &type metadata for DebugSnapshot.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_251193978(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25114A7B4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2511939D8()
{
  unint64_t result = qword_269B22410;
  if (!qword_269B22410)
  {
    sub_251193784();
    sub_251193A88(&qword_269B22418, &qword_269B22420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22410);
  }
  return result;
}

uint64_t sub_251193A88(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2511937EC();
    sub_251193B18(a2, v5, (void (*)(uint64_t))type metadata accessor for DebugSnapshot);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251193B18(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for DebugSnapshot(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DebugSnapshot);
}

uint64_t dispatch thunk of DebugSnapshot.__allocating_init(_:attributes:subObjects:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DebugSnapshot.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DebugSnapshottable.debugSnapshot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for DebugSnapshot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251193C94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugSnapshot.CodingKeys()
{
  return &type metadata for DebugSnapshot.CodingKeys;
}

unint64_t sub_251193CD0()
{
  unint64_t result = qword_269B22428;
  if (!qword_269B22428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22428);
  }
  return result;
}

unint64_t sub_251193D28()
{
  unint64_t result = qword_269B22430;
  if (!qword_269B22430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22430);
  }
  return result;
}

unint64_t sub_251193D80()
{
  unint64_t result = qword_269B22438;
  if (!qword_269B22438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22438);
  }
  return result;
}

uint64_t sub_251193DD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63656A624F627573 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251193F34()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251193F6C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251193F7C(void *a1)
{
  BOOL v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_2511C9CA0() & 1;
  }
}

BOOL static DirectDispatchTarget.Errors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DirectDispatchTarget.Errors.hash(into:)()
{
  return sub_2511C9D50();
}

uint64_t DirectDispatchTarget.Errors.hashValue.getter()
{
  return sub_2511C9D80();
}

uint64_t DirectDispatchTarget.__allocating_init(providers:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t DirectDispatchTarget.init(providers:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t DirectDispatchTarget.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DirectDispatchTarget.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_2511940F8()
{
  unint64_t result = qword_269B22440;
  if (!qword_269B22440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22440);
  }
  return result;
}

uint64_t type metadata accessor for DirectDispatchTarget()
{
  return self;
}

uint64_t method lookup function for DirectDispatchTarget(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DirectDispatchTarget);
}

uint64_t dispatch thunk of DirectDispatchTarget.__allocating_init(providers:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for DirectDispatchTarget.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251194268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectDispatchTarget.Errors()
{
  return &type metadata for DirectDispatchTarget.Errors;
}

unint64_t static EnvironmentalStateDescription.networkReachable()@<X0>(unint64_t *a1@<X8>)
{
  return sub_251194514((uint64_t)&unk_270204AA8, a1);
}

unint64_t static NetworkReachabilityStateComponent.identifier.getter()
{
  return 0xD000000000000025;
}

unint64_t static EnvironmentalStateDescription.networkInexpensive()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = sub_251148DEC(MEMORY[0x263F8EE78]);
  sub_251148844(0, &qword_26B218168, (unint64_t *)&unk_26B217E90, sub_251155B48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2511CB450;
  *(void *)(inited + 32) = 0xD000000000000025;
  *(void *)(inited + 40) = 0x80000002511D1B20;
  sub_251195D8C(0, &qword_26B218170, (uint64_t (*)(uint64_t))sub_251194484, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_2511CB450;
  *(void *)(v4 + 32) = 0x7669736E65707845;
  *(void *)(v4 + 40) = 0xE900000000000065;
  uint64_t v5 = sub_251195858((uint64_t)&unk_270204AE8);
  swift_arrayDestroy();
  *(void *)(v4 + 48) = v5;
  *(void *)(inited + 48) = sub_251153CE4(v4);
  unint64_t result = sub_251148DCC(inited);
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_251194420(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_251194484()
{
  if (!qword_26B217EA8)
  {
    sub_251195EBC(255, (unint64_t *)&qword_26B217F70, MEMORY[0x263F8D680]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B217EA8);
    }
  }
}

unint64_t static EnvironmentalStateDescription.networkUnreachable()@<X0>(unint64_t *a1@<X8>)
{
  return sub_251194514((uint64_t)&unk_270204B18, a1);
}

unint64_t sub_251194514@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  sub_251148844(0, &qword_26B218160, (unint64_t *)&qword_26B217E88, (void (*)(uint64_t))sub_25114A7B4);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2511CB450;
  *(void *)(inited + 32) = 0xD000000000000025;
  *(void *)(inited + 40) = 0x80000002511D1B20;
  *(void *)(inited + 48) = sub_251148A20(a1);
  unint64_t v5 = sub_251148DEC(inited);
  unint64_t result = sub_251148DCC(MEMORY[0x263F8EE78]);
  *a2 = v5;
  a2[1] = result;
  return result;
}

uint64_t static NetworkReachabilityStateComponent.ReachabilityKey.getter()
{
  return 0x6962616863616552;
}

uint64_t static NetworkReachabilityStateComponent.ExpensiveKey.getter()
{
  return 0x7669736E65707845;
}

uint64_t *NetworkReachabilityStateComponent.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for NetworkReachabilityStateComponent.NetworkReachabilityShim();
  uint64_t v4 = swift_allocObject();
  sub_251195A38();
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  *(void *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5;
  unsigned int v6 = (uint64_t *)swift_allocObject();

  return sub_251195138(a1, a2, v4, v6);
}

uint64_t *NetworkReachabilityStateComponent.__allocating_init(observer:shim:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  uint64_t v10 = sub_251195AD0(a1, a2, v9, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

uint64_t *NetworkReachabilityStateComponent.init(observer:shim:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_2511954B4(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v13;
}

uint64_t sub_25119481C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2511C9320();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v29 - v10;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    long long v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    v29[0] = a3;
    LOBYTE(v14) = v16(v14, v15);
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F142F8], v5);
    char v19 = sub_2511C9310();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v9, v5);
    uint64_t v21 = ((uint64_t (*)(char *, uint64_t))v20)(v11, v5);
    MEMORY[0x270FA5388](v21);
    LOBYTE(v29[-2]) = v19 & 1;
    BYTE1(v29[-2]) = v14 & 1;
    v29[-1] = v29[0];
    BOOL v23 = (uint64_t *)&v22[4];
    uint64_t v24 = v22 + 6;
    os_unfair_lock_lock(v22 + 6);
    sub_251195E98(v23, &v30);
    os_unfair_lock_unlock(v24);
    uint64_t v25 = v30;
    uint64_t v26 = *(void *)(v13 + 32);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v26 + 8);
    swift_unknownObjectRetain();
    swift_retain();
    v28(v25, v13, &protocol witness table for NetworkReachabilityStateComponent, ObjectType, v26);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_251194AD4@<X0>(uint64_t *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  if (a2) {
    uint64_t v7 = 0x6C62616863616572;
  }
  else {
    uint64_t v7 = 0x6168636165726E75;
  }
  if (a2) {
    uint64_t v8 = 0xE900000000000065;
  }
  else {
    uint64_t v8 = 0xEB00000000656C62;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *a1;
  *a1 = 0x8000000000000000;
  sub_251149AD8(v7, v8, 0x6962616863616552, 0xEC0000007974696CLL, isUniquelyReferenced_nonNull_native);
  *a1 = v15;
  swift_bridgeObjectRelease();
  BOOL v10 = (a3 & 1) == 0;
  if (a3) {
    uint64_t v11 = 0x7669736E65707865;
  }
  else {
    uint64_t v11 = 0x657078652D746F6ELL;
  }
  if (v10) {
    uint64_t v12 = 0xED0000657669736ELL;
  }
  else {
    uint64_t v12 = 0xE900000000000065;
  }
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *a1;
  *a1 = 0x8000000000000000;
  sub_251149AD8(v11, v12, 0x7669736E65707845, 0xE900000000000065, v13);
  *a1 = v16;
  swift_bridgeObjectRelease();
  *a4 = *a1;
  return swift_bridgeObjectRetain();
}

unint64_t NetworkReachabilityStateComponent.identifier.getter()
{
  return 0xD000000000000025;
}

uint64_t NetworkReachabilityStateComponent.currentState.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 80);
  unint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251144C54(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

Swift::Void __swiftcall NetworkReachabilityStateComponent.stopObserving()()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 5, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_251194D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2511C92F0();
  swift_allocObject();
  sub_2511C92E0();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  _OWORD v7[3] = a2;
  v7[4] = a3;
  swift_retain();
  swift_retain();
  sub_2511C92C0();
  swift_release();
  sub_2511C92D0();
  uint64_t v8 = *(os_unfair_lock_s **)(v3 + 16);
  uint64_t v9 = v8 + 4;
  BOOL v10 = v8 + 6;
  os_unfair_lock_lock(v8 + 6);
  sub_251195CF8(v9);
  os_unfair_lock_unlock(v10);

  return swift_release();
}

uint64_t sub_251194E50(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    uint64_t v7 = sub_2511C9340();
    v9[3] = v7;
    v9[4] = (uint64_t)&protocol witness table for NWPath;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_1, a1, v7);
    a3(v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return result;
}

uint64_t sub_251194F18(void *a1)
{
  uint64_t result = swift_release();
  *a1 = 0;
  return result;
}

uint64_t sub_251194F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251194D28(a1, a2, a3);
}

void sub_251194F70()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251194F18(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t NetworkReachabilityStateComponent.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return v0;
}

uint64_t NetworkReachabilityStateComponent.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();

  return swift_deallocClassInstance();
}

unint64_t sub_251195060()
{
  return 0xD000000000000025;
}

uint64_t sub_25119507C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 80);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251144C54(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_2511950DC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 5, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t *sub_251195138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = *a4;
  uint64_t v6 = sub_2511C97B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2511C97A0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2511C9390();
  MEMORY[0x270FA5388](v11 - 8);
  void v28[3] = type metadata accessor for NetworkReachabilityStateComponent.NetworkReachabilityShim();
  _OWORD v28[4] = &off_270207350;
  v28[0] = a3;
  sub_251155968();
  sub_2511C9380();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_251195D34();
  sub_251195D8C(0, (unint64_t *)&qword_26B217F30, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_2511559F0();
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F130], v6);
  a4[2] = sub_2511C97D0();
  unint64_t v12 = sub_251148A20(MEMORY[0x263F8EE78]);
  sub_251195DF0();
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(void *)(v13 + 16) = v12;
  a4[10] = v13;
  sub_25112FD4C((uint64_t)v28, (uint64_t)(a4 + 5));
  uint64_t v14 = v25;
  a4[3] = v24;
  a4[4] = v14;
  uint64_t v15 = a4[8];
  uint64_t v16 = a4[9];
  __swift_project_boxed_opaque_existential_1(a4 + 5, v15);
  uint64_t v17 = a4[2];
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v26;
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v20;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 8);
  swift_unknownObjectRetain();
  swift_retain();
  v21(v17, sub_251195F20, v19, v15, v16);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  swift_release();
  return a4;
}

uint64_t *sub_2511954B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = *a4;
  uint64_t v28 = sub_2511C97B0();
  uint64_t v10 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2511C97A0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2511C9390();
  MEMORY[0x270FA5388](v14 - 8);
  v33[3] = a5;
  v33[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  sub_251155968();
  sub_2511C9380();
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_251195D34();
  sub_251195D8C(0, (unint64_t *)&qword_26B217F30, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_2511559F0();
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F130], v28);
  a4[2] = sub_2511C97D0();
  unint64_t v17 = sub_251148A20(v16);
  sub_251195DF0();
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = v17;
  a4[10] = v18;
  sub_25112FD4C((uint64_t)v33, (uint64_t)(a4 + 5));
  uint64_t v19 = v30;
  a4[3] = v29;
  a4[4] = v19;
  uint64_t v20 = a4[8];
  uint64_t v21 = a4[9];
  __swift_project_boxed_opaque_existential_1(a4 + 5, v20);
  uint64_t v22 = a4[2];
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v31;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v21 + 8);
  swift_unknownObjectRetain();
  swift_retain();
  v26(v22, sub_251195E90, v24, v20, v21);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  swift_release();
  return a4;
}

uint64_t sub_251195858(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_251195EBC(0, &qword_26B217FE8, MEMORY[0x263F8DBD8]);
    uint64_t v3 = sub_2511C9940();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      uint64_t result = sub_2511C9D80();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_2511C9CA0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_2511C9CA0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t type metadata accessor for NetworkReachabilityStateComponent.NetworkReachabilityShim()
{
  return self;
}

void sub_251195A38()
{
  if (!qword_269B22448)
  {
    sub_251195D8C(255, &qword_269B22450, MEMORY[0x263F14278], MEMORY[0x263F8D8F0]);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B22448);
    }
  }
}

uint64_t *sub_251195AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_2511954B4(a1, a2, (uint64_t)v13, v14, a5, a6);
}

uint64_t dispatch thunk of ReachabilityShim.start(queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReachabilityShim.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReachabilityPath.isExpensive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReachabilityPath.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for NetworkReachabilityStateComponent()
{
  return self;
}

uint64_t method lookup function for NetworkReachabilityStateComponent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NetworkReachabilityStateComponent);
}

uint64_t dispatch thunk of NetworkReachabilityStateComponent.__allocating_init(observer:shim:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_251195C74()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251195CAC()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251195CEC(uint64_t a1)
{
  return sub_251194E50(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24));
}

uint64_t sub_251195CF8(void *a1)
{
  swift_release();
  *a1 = v1;
  return swift_retain();
}

unint64_t sub_251195D34()
{
  unint64_t result = qword_26B217F90;
  if (!qword_26B217F90)
  {
    sub_2511C97A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217F90);
  }
  return result;
}

void sub_251195D8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_251195DF0()
{
  if (!qword_269B22458)
  {
    sub_25114A7B4();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B22458);
    }
  }
}

uint64_t sub_251195E58()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251195E90(void *a1)
{
  return sub_25119481C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251195E98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251194AD4(a1, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17), a2);
}

void sub_251195EBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310], MEMORY[0x263F8D320]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t static PriorityRuleSet.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_25119650C(a1, a2, sub_25114DF90);
}

BOOL static PriorityRuleSet.Priority.< infix(_:_:)(char *a1, char *a2)
{
  return qword_2511CE2E8[*a1] < qword_2511CE2E8[*a2];
}

HealthOrchestration::PriorityRuleSet::Priority_optional __swiftcall PriorityRuleSet.Priority.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2511C9B30();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static PriorityRuleSet.Priority.allCases.getter()
{
  return &unk_270204BD8;
}

uint64_t PriorityRuleSet.Priority.rawValue.getter()
{
  uint64_t result = 0x6669636570736E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65677275;
      break;
    case 2:
      uint64_t result = 0x616E65746E69616DLL;
      break;
    case 3:
      uint64_t result = 0x64656B636F6C62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251196064(unsigned __int8 *a1, char *a2)
{
  return sub_25114DC38(*a1, *a2);
}

uint64_t sub_251196070()
{
  return sub_2511C9D80();
}

uint64_t sub_251196158()
{
  sub_2511C94F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_251196228()
{
  return sub_2511C9D80();
}

HealthOrchestration::PriorityRuleSet::Priority_optional sub_25119630C(Swift::String *a1)
{
  return PriorityRuleSet.Priority.init(rawValue:)(*a1);
}

void sub_251196318(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000646569;
  uint64_t v3 = 0x6669636570736E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x746E65677275;
      goto LABEL_3;
    case 2:
      *a1 = 0x616E65746E69616DLL;
      a1[1] = 0xEB0000000065636ELL;
      break;
    case 3:
      *a1 = 0x64656B636F6C62;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_2511963C0(void *a1@<X8>)
{
  *a1 = &unk_270204C00;
}

uint64_t sub_2511963D0()
{
  return sub_2511C9590();
}

uint64_t sub_251196430()
{
  return sub_2511C9580();
}

uint64_t PriorityRuleSet.Rule.descriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PriorityRuleSet.Rule.descriptions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PriorityRuleSet.Rule.descriptions.modify())()
{
  return nullsub_1;
}

uint64_t (*PriorityRuleSet.Rule.priority.modify())()
{
  return nullsub_1;
}

uint64_t static PriorityRuleSet.Rule.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_25119650C(a1, a2, sub_25114EB8C);
}

uint64_t sub_25119650C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  unsigned __int8 v3 = *(unsigned char *)(a1 + 8);
  char v4 = *(unsigned char *)(a2 + 8);
  if ((a3(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }

  return sub_25114DC38(v3, v4);
}

uint64_t sub_25119657C()
{
  if (*v0) {
    return 0x797469726F697270;
  }
  else {
    return 0x7470697263736564;
  }
}

uint64_t sub_2511965C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511990E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2511965E8(uint64_t a1)
{
  unint64_t v2 = sub_251196888();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251196624(uint64_t a1)
{
  unint64_t v2 = sub_251196888();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PriorityRuleSet.Rule.encode(to:)(void *a1)
{
  sub_25119898C(0, &qword_269B22460, (uint64_t (*)(void))sub_251196888, (uint64_t)&type metadata for PriorityRuleSet.Rule.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *v1;
  int v12 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251196888();
  sub_2511C9DA0();
  uint64_t v17 = v8;
  char v16 = 0;
  sub_251198BCC(0, &qword_269B22470, (uint64_t)&type metadata for EnvironmentalStateDescription, MEMORY[0x263F8D488]);
  sub_251196C30(&qword_269B22478, (void (*)(void))sub_2511968DC);
  uint64_t v9 = v13;
  sub_2511C9C00();
  if (!v9)
  {
    char v15 = v12;
    char v14 = 1;
    sub_251196930();
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_251196888()
{
  unint64_t result = qword_269B22468;
  if (!qword_269B22468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22468);
  }
  return result;
}

unint64_t sub_2511968DC()
{
  unint64_t result = qword_269B22480;
  if (!qword_269B22480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22480);
  }
  return result;
}

unint64_t sub_251196930()
{
  unint64_t result = qword_269B22488;
  if (!qword_269B22488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22488);
  }
  return result;
}

uint64_t PriorityRuleSet.Rule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  sub_25119898C(0, &qword_269B22490, (uint64_t (*)(void))sub_251196888, (uint64_t)&type metadata for PriorityRuleSet.Rule.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251196888();
  sub_2511C9D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v14;
  sub_251198BCC(0, &qword_269B22470, (uint64_t)&type metadata for EnvironmentalStateDescription, MEMORY[0x263F8D488]);
  char v17 = 0;
  sub_251196C30(&qword_269B22498, (void (*)(void))sub_251196CC0);
  sub_2511C9B90();
  uint64_t v11 = v18;
  char v15 = 1;
  sub_251196D14();
  swift_bridgeObjectRetain();
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  char v12 = v16;
  *(void *)uint64_t v10 = v11;
  *(unsigned char *)(v10 + 8) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251196C30(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251198BCC(255, &qword_269B22470, (uint64_t)&type metadata for EnvironmentalStateDescription, MEMORY[0x263F8D488]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251196CC0()
{
  unint64_t result = qword_269B224A0;
  if (!qword_269B224A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B224A0);
  }
  return result;
}

unint64_t sub_251196D14()
{
  unint64_t result = qword_269B224A8;
  if (!qword_269B224A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B224A8);
  }
  return result;
}

uint64_t sub_251196D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251197780(a1, a2, a3, a4, sub_25114EB8C);
}

uint64_t sub_251196D80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PriorityRuleSet.Rule.init(from:)(a1, a2);
}

uint64_t sub_251196D98(void *a1)
{
  return PriorityRuleSet.Rule.encode(to:)(a1);
}

uint64_t (*PriorityRuleSet.orderedRules.modify())()
{
  return nullsub_1;
}

void PriorityRuleSet.basePriority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *PriorityRuleSet.basePriority.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*PriorityRuleSet.basePriority.modify())()
{
  return nullsub_1;
}

char *static PriorityRuleSet.constant(_:)@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *result;
  *(void *)a2 = MEMORY[0x263F8EE78];
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t static PriorityRuleSet.require(_:priority:)@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  char v6 = *a2;
  uint64_t v7 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8E0F8];
  sub_251198BCC(0, (unint64_t *)&qword_26B218980, (uint64_t)&type metadata for PriorityRuleSet.Rule, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2511CB450;
  sub_251198BCC(0, &qword_269B224B0, (uint64_t)&type metadata for EnvironmentalStateDescription, v7);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2511CB450;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v5;
  *(void *)(v8 + 32) = v9;
  *(unsigned char *)(v8 + 40) = v6;
  *(void *)a3 = v8;
  *(unsigned char *)(a3 + 8) = 3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 static PriorityRuleSet.requireAll(_:priority:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = MEMORY[0x263F8EE78];
  unint64_t v7 = sub_251148DEC(MEMORY[0x263F8EE78]);
  unint64_t v8 = sub_251148DCC(v6);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v19 = v7;
      sub_2511983B4(v11, (uint64_t)sub_251198898, 0, isUniquelyReferenced_nonNull_native, &v19);
      unint64_t v7 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      char v14 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v19 = v8;
      sub_251197EC0(v12, (uint64_t)sub_251198898, 0, v14, &v19);
      unint64_t v8 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  char v15 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8E0F8];
  sub_251198BCC(0, (unint64_t *)&qword_26B218980, (uint64_t)&type metadata for PriorityRuleSet.Rule, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2511CB450;
  sub_251198BCC(0, &qword_269B224B0, (uint64_t)&type metadata for EnvironmentalStateDescription, v15);
  uint64_t v17 = swift_allocObject();
  __n128 result = (__n128)xmmword_2511CB450;
  *(_OWORD *)(v17 + 16) = xmmword_2511CB450;
  *(void *)(v17 + 32) = v7;
  *(void *)(v17 + 40) = v8;
  *(void *)(v16 + 32) = v17;
  *(unsigned char *)(v16 + 40) = v5;
  *(void *)a3 = v16;
  *(unsigned char *)(a3 + 8) = 3;
  return result;
}

uint64_t static PriorityRuleSet.requireAny(_:priority:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  sub_251198BCC(0, (unint64_t *)&qword_26B218980, (uint64_t)&type metadata for PriorityRuleSet.Rule, MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2511CB450;
  *(void *)(v6 + 32) = a1;
  *(unsigned char *)(v6 + 40) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = 3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2511971A8()
{
  if (*v0) {
    return 0x6F69725065736162;
  }
  else {
    return 0x526465726564726FLL;
  }
}

uint64_t sub_2511971F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511991EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25119721C(uint64_t a1)
{
  unint64_t v2 = sub_2511988E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251197258(uint64_t a1)
{
  unint64_t v2 = sub_2511988E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PriorityRuleSet.encode(to:)(void *a1)
{
  sub_25119898C(0, &qword_269B224B8, (uint64_t (*)(void))sub_2511988E4, (uint64_t)&type metadata for PriorityRuleSet.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *v1;
  int v12 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511988E4();
  sub_2511C9DA0();
  uint64_t v17 = v8;
  char v16 = 0;
  sub_251198BCC(0, &qword_269B224C8, (uint64_t)&type metadata for PriorityRuleSet.Rule, MEMORY[0x263F8D488]);
  sub_2511989F4(&qword_269B224D0, (void (*)(void))sub_251198938);
  uint64_t v9 = v13;
  sub_2511C9C00();
  if (!v9)
  {
    char v15 = v12;
    char v14 = 1;
    sub_251196930();
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PriorityRuleSet.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  sub_25119898C(0, &qword_269B224E0, (uint64_t (*)(void))sub_2511988E4, (uint64_t)&type metadata for PriorityRuleSet.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511988E4();
  sub_2511C9D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v14;
  sub_251198BCC(0, &qword_269B224C8, (uint64_t)&type metadata for PriorityRuleSet.Rule, MEMORY[0x263F8D488]);
  char v17 = 0;
  sub_2511989F4(&qword_269B224E8, (void (*)(void))sub_251198A84);
  sub_2511C9B90();
  uint64_t v11 = v18;
  char v15 = 1;
  sub_251196D14();
  swift_bridgeObjectRetain();
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  char v12 = v16;
  *(void *)uint64_t v10 = v11;
  *(unsigned char *)(v10 + 8) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251197768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251197780(a1, a2, a3, a4, sub_25114DF90);
}

uint64_t sub_251197780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void))
{
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  char v6 = *(unsigned char *)(a2 + 8);
  if ((a5(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }

  return sub_25114DC38(v5, v6);
}

uint64_t sub_2511977E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PriorityRuleSet.init(from:)(a1, a2);
}

uint64_t sub_251197800(void *a1)
{
  return PriorityRuleSet.encode(to:)(a1);
}

void static PriorityRuleSet.Priority.highestPriority.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static PriorityRuleSet.Priority.lowestPriority.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

BOOL sub_251197830(char *a1, char *a2)
{
  return qword_2511CE2E8[*a1] < qword_2511CE2E8[*a2];
}

BOOL sub_251197854(char *a1, char *a2)
{
  return qword_2511CE2E8[*a2] >= qword_2511CE2E8[*a1];
}

BOOL sub_251197878(char *a1, char *a2)
{
  return qword_2511CE2E8[*a1] >= qword_2511CE2E8[*a2];
}

BOOL sub_25119789C(char *a1, char *a2)
{
  return qword_2511CE2E8[*a2] < qword_2511CE2E8[*a1];
}

uint64_t PriorityRuleSet.description.getter()
{
  uint64_t v1 = *(void *)v0;
  char v2 = v0[8];
  int64_t v3 = *(void *)(*(void *)v0 + 16);
  if (v3)
  {
    char v14 = v0[8];
    uint64_t v19 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251141A94(0, v3, 0);
    uint64_t v4 = v19;
    unsigned __int8 v5 = (unsigned char *)(v1 + 40);
    do
    {
      char v6 = *v5;
      uint64_t v15 = *((void *)v5 - 1);
      char v16 = v6;
      sub_251197B2C(&v15, &v17);
      uint64_t v7 = v17;
      unint64_t v8 = v18;
      uint64_t v19 = v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_251141A94(v9 > 1, v10 + 1, 1);
        uint64_t v4 = v19;
      }
      *(void *)(v4 + 16) = v10 + 1;
      uint64_t v11 = v4 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_2511C9960();
    sub_2511C9520();
    uint64_t v15 = v4;
    uint64_t v12 = MEMORY[0x263F8D310];
    sub_251198BCC(0, (unint64_t *)&qword_26B217F10, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_251198B74((unint64_t *)&qword_26B217F20, (unint64_t *)&qword_26B217F10, v12);
    sub_2511C9460();
    swift_release();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    LOBYTE(v15) = v14;
  }
  else
  {
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_2511C9520();
    LOBYTE(v15) = v2;
  }
  sub_2511C9A90();
  sub_2511C9520();
  return v17;
}

uint64_t sub_251197B2C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_2511C9520();
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    char v14 = a2;
    uint64_t v15 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251141A94(0, v4, 0);
    uint64_t v5 = v3 + 40;
    do
    {
      if (*(void *)(*(void *)v5 + 16))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_2511C9960();
        swift_bridgeObjectRelease();
        sub_25114A7B4();
        swift_bridgeObjectRetain();
        sub_2511C9420();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2511C9520();
        sub_251155B48(0);
        swift_bridgeObjectRetain();
        sub_2511C9420();
        sub_2511C9520();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2511C9520();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v6 = 60;
        unint64_t v7 = 0xE100000000000000;
      }
      else
      {
        sub_25114A7B4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_2511C9420();
        unint64_t v7 = v8;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t v10 = *(void *)(v15 + 16);
      unint64_t v9 = *(void *)(v15 + 24);
      if (v10 >= v9 >> 1) {
        sub_251141A94(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v15 + 16) = v10 + 1;
      uint64_t v11 = v15 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v7;
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    a2 = v14;
  }
  uint64_t v12 = MEMORY[0x263F8D310];
  sub_251198BCC(0, (unint64_t *)&qword_26B217F10, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_251198B74((unint64_t *)&qword_26B217F20, (unint64_t *)&qword_26B217F10, v12);
  sub_2511C9460();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  swift_bridgeObjectRelease();
  sub_2511C9520();
  sub_2511C9A90();
  uint64_t result = sub_2511C9520();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_251197EC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_2511A0DC4(v7);
  uint64_t v64 = v10;
  if (!v9)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25112EB80();
    return swift_release();
  }
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v59 = a5;
  while (1)
  {
    uint64_t v17 = (void *)*a5;
    unint64_t v19 = sub_251149240(v11, v12);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v14 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_54;
    }
    char v22 = v18;
    if (v17[3] >= v14)
    {
      if (a4)
      {
        uint64_t v24 = (void *)*a5;
        if ((v18 & 1) == 0) {
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v14 = (uint64_t)sub_251188298();
        uint64_t v24 = (void *)*a5;
        if ((v22 & 1) == 0) {
          goto LABEL_48;
        }
      }
    }
    else
    {
      sub_25118621C(v14, a4 & 1);
      uint64_t v14 = sub_251149240(v11, v12);
      if ((v22 & 1) != (v23 & 1)) {
        goto LABEL_57;
      }
      unint64_t v19 = v14;
      uint64_t v24 = (void *)*a5;
      if ((v22 & 1) == 0)
      {
LABEL_48:
        v24[(v19 >> 6) + 8] |= 1 << v19;
        char v55 = (uint64_t *)(v24[6] + 16 * v19);
        *char v55 = v11;
        v55[1] = v12;
        *(void *)(v24[7] + 8 * v19) = v64;
        uint64_t v56 = v24[2];
        BOOL v53 = __OFADD__(v56, 1);
        uint64_t v57 = v56 + 1;
        if (v53) {
          goto LABEL_56;
        }
        long long v24[2] = v57;
        goto LABEL_4;
      }
    }
    unint64_t v61 = v19;
    uint64_t v60 = v24;
    uint64_t v25 = *(void **)(v24[7] + 8 * v19);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = v25;
    uint64_t v62 = v64 + 64;
    uint64_t v27 = 1 << *(unsigned char *)(v64 + 32);
    uint64_t v28 = v27 < 64 ? ~(-1 << v27) : -1;
    unint64_t v29 = v28 & *(void *)(v64 + 64);
    int64_t v63 = (unint64_t)(v27 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v30 = 0;
    if (v29) {
      break;
    }
LABEL_19:
    int64_t v36 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_53;
    }
    if (v36 < v63)
    {
      unint64_t v37 = *(void *)(v62 + 8 * v36);
      ++v30;
      if (v37) {
        goto LABEL_34;
      }
      int64_t v30 = v36 + 1;
      if (v36 + 1 < v63)
      {
        unint64_t v37 = *(void *)(v62 + 8 * v30);
        if (v37) {
          goto LABEL_34;
        }
        int64_t v30 = v36 + 2;
        if (v36 + 2 < v63)
        {
          unint64_t v37 = *(void *)(v62 + 8 * v30);
          if (v37) {
            goto LABEL_34;
          }
          int64_t v30 = v36 + 3;
          if (v36 + 3 < v63)
          {
            unint64_t v37 = *(void *)(v62 + 8 * v30);
            if (v37) {
              goto LABEL_34;
            }
            int64_t v38 = v36 + 4;
            if (v38 < v63)
            {
              unint64_t v37 = *(void *)(v62 + 8 * v38);
              if (!v37)
              {
                while (1)
                {
                  int64_t v30 = v38 + 1;
                  if (__OFADD__(v38, 1)) {
                    goto LABEL_55;
                  }
                  if (v30 >= v63) {
                    goto LABEL_3;
                  }
                  unint64_t v37 = *(void *)(v62 + 8 * v30);
                  ++v38;
                  if (v37) {
                    goto LABEL_34;
                  }
                }
              }
              int64_t v30 = v38;
LABEL_34:
              unint64_t v29 = (v37 - 1) & v37;
              unint64_t v35 = __clz(__rbit64(v37)) + (v30 << 6);
              goto LABEL_35;
            }
          }
        }
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v60[7];
    uint64_t v14 = swift_bridgeObjectRelease();
    *(void *)(v13 + 8 * v61) = v25;
    a5 = v59;
LABEL_4:
    uint64_t v11 = sub_2511A0DC4(v14);
    uint64_t v12 = v15;
    uint64_t v64 = v16;
    a4 = 1;
    if (!v15) {
      goto LABEL_50;
    }
  }
  while (1)
  {
    unint64_t v34 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
    unint64_t v35 = v34 | (v30 << 6);
LABEL_35:
    uint64_t v39 = (uint64_t *)(*(void *)(v64 + 48) + 16 * v35);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    uint64_t v42 = *(void *)(*(void *)(v64 + 56) + 8 * v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_251149240(v41, v40);
    uint64_t v45 = v25[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      break;
    }
    char v48 = v43;
    if (v25[3] >= v47)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v25 = v65;
        if (v43) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_2511882C8();
        uint64_t v25 = v65;
        if (v48) {
          goto LABEL_17;
        }
      }
LABEL_42:
      v25[(v44 >> 6) + 8] |= 1 << v44;
      unint64_t v51 = (uint64_t *)(v25[6] + 16 * v44);
      *unint64_t v51 = v41;
      v51[1] = v40;
      *(void *)(v25[7] + 8 * v44) = v42;
      uint64_t v52 = v25[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_52;
      }
      void v25[2] = v54;
      char isUniquelyReferenced_nonNull_native = 1;
      if (!v29) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_25118624C(v47, isUniquelyReferenced_nonNull_native & 1);
      unint64_t v49 = sub_251149240(v41, v40);
      if ((v48 & 1) != (v50 & 1)) {
        goto LABEL_57;
      }
      unint64_t v44 = v49;
      uint64_t v25 = v65;
      if ((v48 & 1) == 0) {
        goto LABEL_42;
      }
LABEL_17:
      uint64_t v31 = *(void *)(v25[7] + 8 * v44);
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_25119F774(v42, v31);
      swift_bridgeObjectRelease();
      uint64_t v33 = v25[7];
      swift_bridgeObjectRelease();
      *(void *)(v33 + 8 * v44) = v32;
      char isUniquelyReferenced_nonNull_native = 1;
      if (!v29) {
        goto LABEL_19;
      }
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_2511983B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_2511A0DC4(v7);
  uint64_t v67 = v10;
  if (!v9)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25112EB80();
    return swift_release();
  }
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v62 = a5;
  while (1)
  {
    uint64_t v17 = (void *)*a5;
    unint64_t v19 = sub_251149240(v11, v12);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v14 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_54;
    }
    char v22 = v18;
    if (v17[3] >= v14)
    {
      if (a4)
      {
        uint64_t v24 = (void *)*a5;
        if (v18) {
          break;
        }
      }
      else
      {
        uint64_t v14 = (uint64_t)sub_2511882B0();
        uint64_t v24 = (void *)*a5;
        if (v22) {
          break;
        }
      }
      goto LABEL_48;
    }
    sub_251186234(v14, a4 & 1);
    uint64_t v14 = sub_251149240(v11, v12);
    if ((v22 & 1) != (v23 & 1)) {
      goto LABEL_57;
    }
    unint64_t v19 = v14;
    uint64_t v24 = (void *)*a5;
    if (v22) {
      break;
    }
LABEL_48:
    v24[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v58 = (uint64_t *)(v24[6] + 16 * v19);
    *uint64_t v58 = v11;
    v58[1] = v12;
    *(void *)(v24[7] + 8 * v19) = v67;
    uint64_t v59 = v24[2];
    BOOL v56 = __OFADD__(v59, 1);
    uint64_t v60 = v59 + 1;
    if (v56) {
      goto LABEL_56;
    }
    long long v24[2] = v60;
LABEL_4:
    uint64_t v11 = sub_2511A0DC4(v14);
    uint64_t v12 = v15;
    uint64_t v67 = v16;
    a4 = 1;
    if (!v15) {
      goto LABEL_50;
    }
  }
  unint64_t v64 = v19;
  int64_t v63 = v24;
  uint64_t v25 = *(void **)(v24[7] + 8 * v19);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v69 = v25;
  uint64_t v65 = v67 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v67 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & *(void *)(v67 + 64);
  int64_t v66 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  while (2)
  {
    if (v29)
    {
      unint64_t v32 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      int64_t v68 = v30;
      unint64_t v33 = v32 | (v30 << 6);
    }
    else
    {
      int64_t v34 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_53;
      }
      if (v34 >= v66)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v63[7];
        uint64_t v14 = swift_bridgeObjectRelease();
        *(void *)(v13 + 8 * v64) = v25;
        a5 = v62;
        goto LABEL_4;
      }
      unint64_t v35 = *(void *)(v65 + 8 * v34);
      int64_t v36 = v30 + 1;
      if (!v35)
      {
        int64_t v36 = v30 + 2;
        if (v30 + 2 >= v66) {
          goto LABEL_3;
        }
        unint64_t v35 = *(void *)(v65 + 8 * v36);
        if (!v35)
        {
          int64_t v36 = v30 + 3;
          if (v30 + 3 >= v66) {
            goto LABEL_3;
          }
          unint64_t v35 = *(void *)(v65 + 8 * v36);
          if (!v35)
          {
            int64_t v36 = v30 + 4;
            if (v30 + 4 >= v66) {
              goto LABEL_3;
            }
            unint64_t v35 = *(void *)(v65 + 8 * v36);
            if (!v35)
            {
              uint64_t v37 = v30 + 5;
              if (v30 + 5 >= v66) {
                goto LABEL_3;
              }
              unint64_t v35 = *(void *)(v65 + 8 * v37);
              if (!v35)
              {
                while (1)
                {
                  int64_t v36 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    goto LABEL_55;
                  }
                  if (v36 >= v66) {
                    goto LABEL_3;
                  }
                  unint64_t v35 = *(void *)(v65 + 8 * v36);
                  ++v37;
                  if (v35) {
                    goto LABEL_35;
                  }
                }
              }
              int64_t v36 = v30 + 5;
            }
          }
        }
      }
LABEL_35:
      unint64_t v29 = (v35 - 1) & v35;
      int64_t v68 = v36;
      unint64_t v33 = __clz(__rbit64(v35)) + (v36 << 6);
    }
    uint64_t v38 = 16 * v33;
    uint64_t v39 = (uint64_t *)(*(void *)(v67 + 48) + v38);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    uint64_t v42 = (uint64_t *)(*(void *)(v67 + 56) + v38);
    uint64_t v44 = *v42;
    uint64_t v43 = v42[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_251149240(v41, v40);
    uint64_t v47 = v25[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (!__OFADD__(v47, v48))
    {
      char v50 = v45;
      if (v25[3] >= v49)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v25 = v69;
          if ((v45 & 1) == 0) {
            goto LABEL_43;
          }
        }
        else
        {
          sub_251149DD0();
          uint64_t v25 = v69;
          if ((v50 & 1) == 0) {
            goto LABEL_43;
          }
        }
      }
      else
      {
        sub_251185ED4(v49, isUniquelyReferenced_nonNull_native & 1);
        unint64_t v51 = sub_251149240(v41, v40);
        if ((v50 & 1) != (v52 & 1)) {
          goto LABEL_57;
        }
        unint64_t v46 = v51;
        uint64_t v25 = v69;
        if ((v50 & 1) == 0)
        {
LABEL_43:
          v25[(v46 >> 6) + 8] |= 1 << v46;
          BOOL v53 = (uint64_t *)(v25[6] + 16 * v46);
          *BOOL v53 = v41;
          v53[1] = v40;
          uint64_t v54 = (void *)(v25[7] + 16 * v46);
          *uint64_t v54 = v44;
          v54[1] = v43;
          uint64_t v55 = v25[2];
          BOOL v56 = __OFADD__(v55, 1);
          uint64_t v57 = v55 + 1;
          if (v56) {
            goto LABEL_52;
          }
          void v25[2] = v57;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)(v25[7] + 16 * v46);
      swift_bridgeObjectRelease();
      *uint64_t v31 = v44;
      v31[1] = v43;
LABEL_17:
      char isUniquelyReferenced_nonNull_native = 1;
      int64_t v30 = v68;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_25119889C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_2511988E4()
{
  unint64_t result = qword_269B224C0;
  if (!qword_269B224C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B224C0);
  }
  return result;
}

unint64_t sub_251198938()
{
  unint64_t result = qword_269B224D8;
  if (!qword_269B224D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B224D8);
  }
  return result;
}

void sub_25119898C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_2511989F4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251198BCC(255, &qword_269B224C8, (uint64_t)&type metadata for PriorityRuleSet.Rule, MEMORY[0x263F8D488]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251198A84()
{
  unint64_t result = qword_269B224F0;
  if (!qword_269B224F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B224F0);
  }
  return result;
}

unint64_t sub_251198ADC()
{
  unint64_t result = qword_269B224F8;
  if (!qword_269B224F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B224F8);
  }
  return result;
}

uint64_t sub_251198B30()
{
  return sub_251198B74(&qword_269B22500, &qword_269B22508, (uint64_t)&type metadata for PriorityRuleSet.Priority);
}

uint64_t sub_251198B74(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251198BCC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_251198BCC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for PriorityRuleSet()
{
  return &type metadata for PriorityRuleSet;
}

uint64_t getEnumTagSinglePayload for PriorityRuleSet.Priority(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t initializeBufferWithCopyOfBuffer for PriorityRuleSet.Rule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19HealthOrchestration15PriorityRuleSetV4RuleVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for PriorityRuleSet.Rule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for PriorityRuleSet.CodingKeys()
{
  return &type metadata for PriorityRuleSet.CodingKeys;
}

unsigned char *_s19HealthOrchestration15PriorityRuleSetV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251198E98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriorityRuleSet.Rule.CodingKeys()
{
  return &type metadata for PriorityRuleSet.Rule.CodingKeys;
}

unint64_t sub_251198ED4()
{
  unint64_t result = qword_269B22510;
  if (!qword_269B22510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22510);
  }
  return result;
}

unint64_t sub_251198F2C()
{
  unint64_t result = qword_269B22518;
  if (!qword_269B22518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22518);
  }
  return result;
}

unint64_t sub_251198F84()
{
  unint64_t result = qword_269B22520;
  if (!qword_269B22520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22520);
  }
  return result;
}

unint64_t sub_251198FDC()
{
  unint64_t result = qword_269B22528;
  if (!qword_269B22528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22528);
  }
  return result;
}

unint64_t sub_251199034()
{
  unint64_t result = qword_269B22530;
  if (!qword_269B22530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22530);
  }
  return result;
}

unint64_t sub_25119908C()
{
  unint64_t result = qword_269B22538;
  if (!qword_269B22538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22538);
  }
  return result;
}

uint64_t sub_2511990E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7470697263736564 && a2 == 0xEC000000736E6F69;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2511991EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x526465726564726FLL && a2 == 0xEC00000073656C75;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69725065736162 && a2 == 0xEC00000079746972)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_251199310()
{
  unint64_t result = qword_269B22540;
  if (!qword_269B22540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22540);
  }
  return result;
}

void *LocaleInputSignal.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocaleInputSignal.BuiltinLocaleProvider();
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_autoupdatingCurrentLocale);
  sub_2511C9220();

  int v8 = (void *)swift_allocObject();
  v8[7] = v4;
  v8[8] = &off_2702078B8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8 + 4);
  sub_25115D6D4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1);
  sub_25119A59C();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  *(void *)(v10 + 16) = 0;
  v8[9] = v10;
  long long v8[2] = a1;
  void v8[3] = a2;
  sub_25115D738((uint64_t)v6);
  return v8;
}

uint64_t type metadata accessor for LocaleInputSignal.BuiltinLocaleProvider()
{
  uint64_t result = qword_26B217A38;
  if (!qword_26B217A38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2511994F8(uint64_t a1)
{
  uint64_t v2 = sub_2511C9110();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void (**)(char *))(a1 + 32);
  sub_2511C9100();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void static InputSignalSet.LookupKey.locale.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002511CE2F0;
  a1[2] = 0;
  a1[3] = 0;
}

void __swiftcall LocaleInputSignal.Anchor.init(localeIdentifier:decimalSeparator:groupingSeparator:)(HealthOrchestration::LocaleInputSignal::Anchor *__return_ptr retstr, Swift::String localeIdentifier, Swift::String_optional decimalSeparator, Swift::String_optional groupingSeparator)
{
  retstr->localeIdentifier = localeIdentifier;
  retstr->decimalSeparator = decimalSeparator;
  retstr->groupingSeparator = groupingSeparator;
}

uint64_t LocaleInputSignal.Anchor.localeIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocaleInputSignal.Anchor.localeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LocaleInputSignal.Anchor.localeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t LocaleInputSignal.Anchor.decimalSeparator.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocaleInputSignal.Anchor.decimalSeparator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*LocaleInputSignal.Anchor.decimalSeparator.modify())()
{
  return nullsub_1;
}

uint64_t LocaleInputSignal.Anchor.groupingSeparator.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocaleInputSignal.Anchor.groupingSeparator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*LocaleInputSignal.Anchor.groupingSeparator.modify())()
{
  return nullsub_1;
}

Swift::Bool __swiftcall LocaleInputSignal.Anchor.hasDifference(from:for:)(HealthOrchestration::LocaleInputSignal::Anchor_optional *from, HealthOrchestration::LocaleInputSignal::Configuration a2)
{
  uint64_t countAndFlagsBits = from->value.localeIdentifier._countAndFlagsBits;
  object = from->value.localeIdentifier._object;
  uint64_t v6 = from->value.groupingSeparator.value._countAndFlagsBits;
  uint64_t v5 = from->value.groupingSeparator.value._object;
  unint64_t v7 = *(void *)a2.rawValue;
  uint64_t v8 = *v2;
  uint64_t v9 = (void *)v2[1];
  uint64_t v11 = v2[4];
  uint64_t v10 = (void *)v2[5];
  if ((*(void *)a2.rawValue & 2) != 0)
  {
    uint64_t v25 = from->value.groupingSeparator.value._object;
    uint64_t v12 = v2[4];
    uint64_t v13 = (void *)v2[3];
    if (!object)
    {
      if (v13) {
        goto LABEL_35;
      }
      int v17 = 0;
      goto LABEL_17;
    }
    char v23 = (void *)v2[5];
    uint64_t v24 = from->value.groupingSeparator.value._countAndFlagsBits;
    uint64_t v14 = from->value.decimalSeparator.value._countAndFlagsBits;
    uint64_t v15 = from->value.decimalSeparator.value._object;
    uint64_t v16 = v2[2];
    swift_bridgeObjectRetain();
    if (v13)
    {
      if (!v15) {
        goto LABEL_35;
      }
      if (v16 != v14 || v13 != v15)
      {
        int v18 = sub_2511C9CA0();
        swift_bridgeObjectRelease();
        int v17 = v18 ^ 1;
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
    else if (v15)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    int v17 = 0;
LABEL_16:
    uint64_t v10 = v23;
    uint64_t v6 = v24;
LABEL_17:
    uint64_t v11 = v12;
    uint64_t v5 = v25;
    int v19 = v7 | v17;
    if (v7 & 1) == 0 || (v17) {
      goto LABEL_24;
    }
LABEL_19:
    if (object)
    {
      if (v8 == countAndFlagsBits && object == v9) {
        int v19 = 0;
      }
      else {
        int v19 = sub_2511C9CA0() ^ 1;
      }
LABEL_24:
      int v20 = (v7 >> 2) & 1 | v19;
      if (v7 & 4) == 0 || (v19) {
        return v20 & 1;
      }
      goto LABEL_26;
    }
LABEL_35:
    LOBYTE(v20) = 1;
    return v20 & 1;
  }
  if (v7) {
    goto LABEL_19;
  }
  if ((v7 & 4) == 0) {
    goto LABEL_36;
  }
LABEL_26:
  if (object)
  {
    swift_bridgeObjectRetain();
    if (v10)
    {
      if (v5)
      {
        if (v11 != v6 || v10 != v5)
        {
          char v22 = sub_2511C9CA0();
          swift_bridgeObjectRelease();
          LOBYTE(v20) = v22 ^ 1;
          return v20 & 1;
        }
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      goto LABEL_35;
    }
    if (!v5)
    {
LABEL_36:
      LOBYTE(v20) = 0;
      return v20 & 1;
    }
    goto LABEL_34;
  }
  LOBYTE(v20) = v10 != 0;
  return v20 & 1;
}

void __swiftcall LocaleInputSignal.Anchor.merged(with:)(HealthOrchestration::LocaleInputSignal::Anchor *__return_ptr retstr, HealthOrchestration::LocaleInputSignal::Anchor *with)
{
  uint64_t v3 = *(void **)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void **)(v2 + 40);
  retstr->localeIdentifier._uint64_t countAndFlagsBits = *(void *)v2;
  retstr->localeIdentifier._object = v3;
  retstr->decimalSeparator.value._uint64_t countAndFlagsBits = v4;
  *(_OWORD *)&retstr->decimalSeparator.value._object = *(_OWORD *)(v2 + 24);
  retstr->groupingSeparator.value._object = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

unint64_t sub_2511999F8(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000010;
  if (a1 >= 2u) {
    return 0xD000000000000011;
  }
  return result;
}

unint64_t sub_251199A50()
{
  return sub_2511999F8(*v0);
}

uint64_t sub_251199A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25119AE54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251199A80(uint64_t a1)
{
  unint64_t v2 = sub_25119ABC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251199ABC(uint64_t a1)
{
  unint64_t v2 = sub_25119ABC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocaleInputSignal.Anchor.encode(to:)(void *a1)
{
  sub_25119AC14(0, &qword_26B218968, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  uint64_t v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25119ABC0();
  sub_2511C9DA0();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_2511C9BD0();
  if (!v10)
  {
    char v14 = 1;
    sub_2511C9BB0();
    char v13 = 2;
    sub_2511C9BB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LocaleInputSignal.Anchor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_25119AC14(0, (unint64_t *)&unk_26B2180C8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25119ABC0();
  sub_2511C9D90();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v27 = 0;
    uint64_t v10 = sub_2511C9B60();
    uint64_t v13 = v12;
    uint64_t v24 = v10;
    char v26 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2511C9B40();
    uint64_t v16 = v15;
    uint64_t v23 = v14;
    char v25 = 2;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2511C9B40();
    uint64_t v19 = v18;
    int v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v22 = v17;
    v20(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v24;
    a2[1] = v13;
    a2[2] = v23;
    a2[3] = v16;
    a2[4] = v22;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251199F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_251199FD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LocaleInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_251199FEC(void *a1)
{
  return LocaleInputSignal.Anchor.encode(to:)(a1);
}

void LocaleInputSignal.Configuration.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002511CE2F0;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t LocaleInputSignal.Configuration.rawValue.getter()
{
  return *(void *)v0;
}

HealthOrchestration::LocaleInputSignal::Configuration __swiftcall LocaleInputSignal.Configuration.init(rawValue:)(HealthOrchestration::LocaleInputSignal::Configuration rawValue)
{
  v1->char rawValue = rawValue.rawValue;
  return rawValue;
}

void static LocaleInputSignal.Configuration.localeIdentifier.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static LocaleInputSignal.Configuration.decimalSeparator.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static LocaleInputSignal.Configuration.groupingSeparator.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void sub_25119A05C()
{
  uint64_t v0 = unk_270204C50;
  if ((unk_270204C50 & ~qword_270204C48) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = qword_270204C58;
  if ((qword_270204C58 & ~(v0 | qword_270204C48)) == 0) {
    uint64_t v1 = 0;
  }
  qword_26B218510 = v1 | v0 | qword_270204C48;
}

uint64_t sub_25119A090@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static LocaleInputSignal.Configuration.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_26B218520 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_26B218510;
  return result;
}

void *sub_25119A144@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_25119A150(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_25119A158@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_25119A16C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_25119A180@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_25119A194(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_25119A1C4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_25119A1F0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_25119A214(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_25119A228(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_25119A23C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_25119A250@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_25119A264(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_25119A278(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_25119A28C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_25119A2A0()
{
  return *v0 == 0;
}

uint64_t sub_25119A2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_25119A2C8(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_25119A2DC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_25119A2EC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25119A2F8()
{
  return sub_2511C9D80();
}

uint64_t sub_25119A340()
{
  return sub_2511C9D50();
}

uint64_t sub_25119A36C()
{
  return sub_2511C9D80();
}

BOOL sub_25119A3B0(void *a1, void *a2)
{
  return *a1 == *a2;
}

void static LocaleInputSignal.identityConfiguration.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void LocaleInputSignal.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002511CE2F0;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t LocaleInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

void *LocaleInputSignal.__allocating_init(observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  uint64_t v10 = sub_25119AF94(a1, a2, v9, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

void *LocaleInputSignal.init(observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_25119AB1C(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v13;
}

void sub_25119A59C()
{
  if (!qword_26B218008)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B218008);
    }
  }
}

uint64_t sub_25119A60C(void *a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v3 = *MEMORY[0x263EFF458];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v8[4] = sub_25119BBE8;
  _OWORD v8[5] = v4;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  long long v8[2] = sub_2511994F8;
  void v8[3] = &block_descriptor_8;
  uint64_t v5 = _Block_copy(v8);
  swift_release();
  id v6 = objc_msgSend(v2, sel_addObserverForName_object_queue_usingBlock_, v3, 0, 0, v5);
  _Block_release(v5);

  uint64_t result = swift_unknownObjectRelease();
  *a1 = v6;
  return result;
}

uint64_t sub_25119A754()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v19 = *(void *)(result + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v2 = v1[7];
    uint64_t v3 = v1[8];
    __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    uint64_t v6 = v5;
    uint64_t v7 = v1[7];
    uint64_t v8 = v1[8];
    __swift_project_boxed_opaque_existential_1(v1 + 4, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    uint64_t v11 = v10;
    uint64_t v13 = v1[7];
    uint64_t v12 = v1[8];
    __swift_project_boxed_opaque_existential_1(v1 + 4, v13);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v13, v12);
    v22[0] = v4;
    v22[1] = v6;
    long long v22[2] = v9;
    void v22[3] = v11;
    v22[4] = v14;
    v22[5] = v15;
    uint64_t v21 = v1;
    uint64_t v16 = *(void (**)(void *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
    uint64_t v17 = type metadata accessor for LocaleInputSignal();
    uint64_t v18 = sub_25119BB70(qword_26B217A80);
    v16(v22, &v21, v17, v18, ObjectType, v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall LocaleInputSignal.stopObservation()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 72);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25119A96C(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t *sub_25119A96C(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result)
  {
    uint64_t v2 = result;
    uint64_t v3 = self;
    swift_unknownObjectRetain();
    id v4 = objc_msgSend(v3, sel_defaultCenter);
    objc_msgSend(v4, sel_removeObserver_, v1);

    uint64_t result = (uint64_t *)swift_unknownObjectRelease_n();
    *uint64_t v2 = 0;
  }
  return result;
}

uint64_t LocaleInputSignal.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return v0;
}

uint64_t LocaleInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25119AA74()
{
  return _s19HealthOrchestration17LocaleInputSignalC16beginObservation4from14configurationsyAC6AnchorVSg_SayAC13ConfigurationVGtF_0();
}

void sub_25119AA98()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 72);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25119A96C(v2);

  os_unfair_lock_unlock(v3);
}

unint64_t sub_25119AB00()
{
  return 0xD000000000000011;
}

void *sub_25119AB1C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  a4[7] = a5;
  a4[8] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4 + 4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  sub_25119A59C();
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 24) = 0;
  *(void *)(v12 + 16) = 0;
  a4[9] = v12;
  a4[2] = a1;
  a4[3] = a2;
  return a4;
}

unint64_t sub_25119ABC0()
{
  unint64_t result = qword_26B217A48;
  if (!qword_26B217A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A48);
  }
  return result;
}

void sub_25119AC14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_25119ABC0();
    unint64_t v7 = a3(a1, &type metadata for LocaleInputSignal.Anchor.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t _s19HealthOrchestration17LocaleInputSignalC16beginObservation4from14configurationsyAC6AnchorVSg_SayAC13ConfigurationVGtF_0()
{
  uint64_t v1 = v0;
  uint64_t v24 = *v0;
  uint64_t v2 = (os_unfair_lock_s *)v0[9];
  uint64_t v3 = v2 + 4;
  id v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_25119BB54(v3);
  os_unfair_lock_unlock(v4);
  uint64_t v22 = v1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v1[7];
  uint64_t v10 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
  uint64_t v14 = v13;
  uint64_t v16 = v1[7];
  uint64_t v15 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v16);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v16, v15);
  v26[0] = v7;
  v26[1] = v9;
  v26[2] = v12;
  void v26[3] = v14;
  _OWORD v26[4] = v17;
  v26[5] = v18;
  char v25 = v1;
  uint64_t v19 = *(void (**)(void *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8);
  uint64_t v20 = sub_25119BB70(qword_26B217A80);
  v19(v26, &v25, v24, v20, ObjectType, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25119AE54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002511D1C80 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002511D1CA0 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002511D1CC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_25119AF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_25119AB1C(a1, a2, (uint64_t)v13, v14, a5, a6);
}

unint64_t sub_25119B09C()
{
  unint64_t result = qword_269B22548;
  if (!qword_269B22548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22548);
  }
  return result;
}

unint64_t sub_25119B0F0(void *a1)
{
  a1[1] = sub_25119B128();
  a1[2] = sub_25119B17C();
  unint64_t result = sub_25119B1D0();
  a1[3] = result;
  return result;
}

unint64_t sub_25119B128()
{
  unint64_t result = qword_26B217A70;
  if (!qword_26B217A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A70);
  }
  return result;
}

unint64_t sub_25119B17C()
{
  unint64_t result = qword_26B217A60;
  if (!qword_26B217A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A60);
  }
  return result;
}

unint64_t sub_25119B1D0()
{
  unint64_t result = qword_26B217A68;
  if (!qword_26B217A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A68);
  }
  return result;
}

unint64_t sub_25119B228()
{
  unint64_t result = qword_269B22550;
  if (!qword_269B22550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22550);
  }
  return result;
}

unint64_t sub_25119B280()
{
  unint64_t result = qword_269B22558;
  if (!qword_269B22558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22558);
  }
  return result;
}

unint64_t sub_25119B2D4(uint64_t a1)
{
  unint64_t result = sub_25119B2FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25119B2FC()
{
  unint64_t result = qword_26B218528;
  if (!qword_26B218528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218528);
  }
  return result;
}

unint64_t sub_25119B354()
{
  unint64_t result = qword_26B218530;
  if (!qword_26B218530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B218530);
  }
  return result;
}

unint64_t sub_25119B3AC()
{
  unint64_t result = qword_269B22560;
  if (!qword_269B22560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22560);
  }
  return result;
}

unint64_t sub_25119B404()
{
  unint64_t result = qword_26B217A78;
  if (!qword_26B217A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A78);
  }
  return result;
}

uint64_t sub_25119B458(uint64_t a1)
{
  uint64_t result = sub_25119BB70(&qword_26B218538);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for LocaleInputSignal()
{
  return self;
}

uint64_t dispatch thunk of LocaleProvider.currentLocaleIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocaleProvider.currentDecimalSeparator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LocaleProvider.currentGroupingSeparator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for LocaleInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocaleInputSignal);
}

uint64_t dispatch thunk of LocaleInputSignal.__allocating_init(observer:provider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for LocaleInputSignal.Anchor()
{
  return &type metadata for LocaleInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for LocaleInputSignal.Configuration()
{
  return &type metadata for LocaleInputSignal.Configuration;
}

unsigned char *storeEnumTagSinglePayload for LocaleInputSignal.Anchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25119B614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocaleInputSignal.Anchor.CodingKeys()
{
  return &type metadata for LocaleInputSignal.Anchor.CodingKeys;
}

ValueMetadata *type metadata accessor for LocaleInputSignal.State()
{
  return &type metadata for LocaleInputSignal.State;
}

uint64_t sub_25119B65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_25119B6C8(uint64_t a1)
{
  uint64_t v2 = sub_2511C9230();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_25119B72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_25119B790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_25119B7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_25119B858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_25119B8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25119B8D0);
}

uint64_t sub_25119B8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_25119B93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25119B950);
}

uint64_t sub_25119B950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2511C9230();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_25119B9C0()
{
  uint64_t result = sub_2511C9230();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_25119BA50()
{
  unint64_t result = qword_269B22568;
  if (!qword_269B22568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22568);
  }
  return result;
}

unint64_t sub_25119BAA8()
{
  unint64_t result = qword_26B217A58;
  if (!qword_26B217A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A58);
  }
  return result;
}

unint64_t sub_25119BB00()
{
  unint64_t result = qword_26B217A50;
  if (!qword_26B217A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B217A50);
  }
  return result;
}

uint64_t sub_25119BB54(void *a1)
{
  return sub_25119A60C(a1);
}

uint64_t sub_25119BB70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocaleInputSignal();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25119BBB0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25119BBE8()
{
  return sub_25119A754();
}

void *ProcessStateComponent.__allocating_init(for:observer:monitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(a4 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a4, v9);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_25119CD90(a1, a2, a3, (uint64_t)v13, v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v15;
}

uint64_t sub_25119BD38()
{
  return sub_2511C9D80();
}

uint64_t sub_25119BE38()
{
  sub_2511C94F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25119BF18()
{
  return sub_2511C9D80();
}

unint64_t static ProcessStateComponent.identifier.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t ProcessStateComponent.StateValues.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x696E6E7552746F6ELL;
      break;
    case 4:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t static EnvironmentalStateDescription.appNotForeground(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_25119C114(a1, a2, (uint64_t)&unk_270204C60, a3);
}

unint64_t static EnvironmentalStateDescription.appRunning(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_25119C114(a1, a2, (uint64_t)&unk_270204C90, a3);
}

unint64_t static EnvironmentalStateDescription.appSuspended(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_25119C114(a1, a2, (uint64_t)&unk_270204CE0, a3);
}

unint64_t sub_25119C114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v8 = sub_251148DEC(MEMORY[0x263F8EE78]);
  sub_25114889C(0, &qword_26B218168, (unint64_t *)&unk_26B217E90, sub_251155B48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2511CB450;
  *(void *)(inited + 32) = 0xD00000000000001ELL;
  *(void *)(inited + 40) = 0x80000002511D1CE0;
  sub_25114889C(0, &qword_26B218170, (unint64_t *)&qword_26B217EA8, (void (*)(uint64_t))sub_251155544);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_2511CB450;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_251195858(a3);
  swift_arrayDestroy();
  *(void *)(v10 + 48) = v11;
  *(void *)(inited + 48) = sub_251153CE4(v10);
  unint64_t result = sub_251148DCC(inited);
  *a4 = v8;
  a4[1] = result;
  return result;
}

HealthOrchestration::ProcessStateComponent::StateValues_optional __swiftcall ProcessStateComponent.StateValues.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2511C9B30();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_25119C2C8(unsigned __int8 *a1, char *a2)
{
  return sub_25114DDE0(*a1, *a2);
}

uint64_t sub_25119C2D4()
{
  return sub_25119BD38();
}

uint64_t sub_25119C2DC()
{
  return sub_25119BE38();
}

uint64_t sub_25119C2E4()
{
  return sub_25119BF18();
}

HealthOrchestration::ProcessStateComponent::StateValues_optional sub_25119C2EC(Swift::String *a1)
{
  return ProcessStateComponent.StateValues.init(rawValue:)(*a1);
}

unint64_t sub_25119C2F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ProcessStateComponent.StateValues.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *ProcessStateComponent.init(for:observer:monitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(a4 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a4, v9);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_25119CD90(a1, a2, a3, (uint64_t)v13, v4, v9, v10);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v15;
}

uint64_t sub_25119C440(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return result;
  }
  uint64_t v4 = (void *)result;
  swift_bridgeObjectRetain();
  char v5 = (uint64_t *)(a2 + 40);
  while (1)
  {
    uint64_t v8 = *(v5 - 1);
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = (void *)*v4;
    char v25 = (void *)*v4;
    *uint64_t v4 = 0x8000000000000000;
    unint64_t v12 = sub_251149240(v8, v7);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v16 = v11;
    if (v10[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v25;
        if (v11) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251149DD0();
        uint64_t v19 = v25;
        if (v16) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251185ED4(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_251149240(v8, v7);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_20;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v25;
      if (v16)
      {
LABEL_3:
        unsigned int v6 = (void *)(v19[7] + 16 * v12);
        swift_bridgeObjectRelease();
        *unsigned int v6 = 0x6E776F6E6B6E75;
        v6[1] = 0xE700000000000000;
        goto LABEL_4;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v12);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = (void *)(v19[7] + 16 * v12);
    *uint64_t v21 = 0x6E776F6E6B6E75;
    v21[1] = 0xE700000000000000;
    uint64_t v22 = v19[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_19;
    }
    long long v19[2] = v24;
    swift_bridgeObjectRetain();
LABEL_4:
    v5 += 2;
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v2) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  unint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

void sub_25119C644(void *a1)
{
  sub_25113B21C(0, (unint64_t *)&qword_26B218188);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2511CB5A0;
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_25118ADB4(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_2511C9690();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_predicateMatchingBundleIdentifiers_, v4);

  *(void *)(v2 + 32) = v5;
  v13[0] = v2;
  sub_2511C95C0();
  sub_25119D3F4();
  unsigned int v6 = (void *)sub_2511C95B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setPredicates_, v6, v13[0]);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F645E8]), sel_init);
  objc_msgSend(v7, sel_setValues_, 1);
  sub_25113B21C(0, &qword_26B218150);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2511CB450;
  *(void *)(v8 + 32) = sub_2511C94B0();
  *(void *)(v8 + 40) = v9;
  uint64_t v10 = (void *)sub_2511C95B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setEndowmentNamespaces_, v10);

  objc_msgSend(a1, sel_setStateDescriptor_, v7);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  void v13[4] = sub_25114B684;
  _OWORD v13[5] = v11;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_25114A0C0;
  v13[3] = &block_descriptor_15;
  unint64_t v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(a1, sel_setUpdateHandler_, v12);
  _Block_release(v12);
}

uint64_t ProcessStateComponent.deinit()
{
  sub_25119CF70(v0 + 24, (uint64_t)v4);
  uint64_t v1 = v5;
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  swift_release();
  sub_25119D05C(v0 + 24);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ProcessStateComponent.__deallocating_deinit()
{
  sub_25119CF70(v0 + 24, (uint64_t)v4);
  uint64_t v1 = v5;
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  swift_release();
  sub_25119D05C(v0 + 24);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t ProcessStateComponent.identifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t ProcessStateComponent.currentState.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251144C54(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

Swift::Void __swiftcall ProcessStateComponent.stopObserving()()
{
  sub_25119CF70(v0 + 24, (uint64_t)v3);
  uint64_t v1 = v4;
  uint64_t v2 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_25119CB1C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251144C54(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25119CB7C()
{
  sub_25119CF70(v0 + 24, (uint64_t)v4);
  uint64_t v1 = v5;
  uint64_t v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_25119CBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v9[4] = sub_25119D36C;
  uint64_t v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_25119CD2C;
  v9[3] = &block_descriptor_9;
  id v7 = _Block_copy(v9);
  swift_retain();
  objc_msgSend(v5, sel_updateConfiguration_, v7);
  _Block_release(v7);
  swift_release();
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25119CD04(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_25119CD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

id sub_25119CD80()
{
  return objc_msgSend(*v0, sel_invalidate);
}

void *sub_25119CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  void v24[3] = a6;
  _OWORD v24[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  unint64_t v14 = sub_251148A20(MEMORY[0x263F8EE78]);
  sub_25119D394();
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  char v16 = (os_unfair_lock_s *)(v15 + 24);
  *(void *)(v15 + 16) = v14;
  uint64_t v17 = v15 + 16;
  a5[2] = v15;
  a5[8] = a2;
  a5[9] = a3;
  uint64_t v23 = a1;
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v16);
  sub_25115D87C(v17);
  os_unfair_lock_unlock(v16);
  swift_release();
  sub_25112FD4C((uint64_t)v24, (uint64_t)(a5 + 3));
  uint64_t v21 = a1;
  uint64_t v22 = a5;
  (*(void (**)(void (*)(void *), unsigned char *, uint64_t, uint64_t))(a7 + 8))(sub_25115D898, v20, a6, a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return a5;
}

void sub_25119CF0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_25119CF70(uint64_t a1, uint64_t a2)
{
  sub_251148E18(0, &qword_269B22570, (uint64_t (*)(uint64_t))sub_25119D004, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for UncheckedSendable);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25119D004()
{
  unint64_t result = qword_269B22578;
  if (!qword_269B22578)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269B22578);
  }
  return result;
}

uint64_t sub_25119D05C(uint64_t a1)
{
  sub_251148E18(0, &qword_269B22570, (uint64_t (*)(uint64_t))sub_25119D004, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for UncheckedSendable);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25119D0EC()
{
  unint64_t result = qword_269B22580;
  if (!qword_269B22580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22580);
  }
  return result;
}

uint64_t dispatch thunk of ProcessMonitor.updateConfiguration(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ProcessMonitor.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for ProcessStateComponent()
{
  return self;
}

uint64_t method lookup function for ProcessStateComponent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ProcessStateComponent);
}

uint64_t dispatch thunk of ProcessStateComponent.__allocating_init(for:observer:monitor:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for ProcessStateComponent.StateValues(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ProcessStateComponent.StateValues(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25119D314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessStateComponent.StateValues()
{
  return &type metadata for ProcessStateComponent.StateValues;
}

ValueMetadata *type metadata accessor for ProcessStateComponent.ProtectedState()
{
  return &type metadata for ProcessStateComponent.ProtectedState;
}

uint64_t sub_25119D35C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25119D36C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_25119D394()
{
  if (!qword_26B216880)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_2511C99D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B216880);
    }
  }
}

unint64_t sub_25119D3F4()
{
  unint64_t result = qword_26B217FB8;
  if (!qword_26B217FB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B217FB8);
  }
  return result;
}

uint64_t sub_25119D434()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *RemoteExecutionEngine.__allocating_init(contextProvider:executorProviders:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

unint64_t static RemoteExecutionEngine.errorDomain.getter()
{
  return 0xD00000000000002FLL;
}

HealthOrchestration::RemoteExecutionEngine::Errors_optional __swiftcall RemoteExecutionEngine.Errors.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HealthOrchestration::RemoteExecutionEngine::Errors_optional)rawValue;
}

uint64_t RemoteExecutionEngine.Errors.rawValue.getter()
{
  return *v0;
}

HealthOrchestration::RemoteExecutionEngine::Errors_optional sub_25119D4F0(Swift::Int *a1)
{
  return RemoteExecutionEngine.Errors.init(rawValue:)(*a1);
}

void *RemoteExecutionEngine.init(contextProvider:executorProviders:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  void v3[3] = a2;
  long long v3[4] = a3;
  return v3;
}

void sub_25119D508(uint64_t a1, uint64_t *a2, void (*a3)(id), uint64_t a4)
{
  void (*v31)(long long *__return_ptr, uint64_t, uint64_t);
  char v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v43;
  uint64_t v45;
  long long v46;
  uint64_t v47;
  uint64_t v48;
  long long v49;
  long long v50;
  uint64_t v51;
  void v52[3];
  uint64_t v53;
  uint64_t v54;

  uint64_t v5 = v4;
  unsigned int v6 = a3;
  uint64_t v7 = a1;
  uint64_t v8 = a2[3];
  uint64_t v9 = *(void *)(v4 + 32);
  uint64_t v10 = *(void *)(v9 + 16);
  char v45 = a2[2];
  if (v10)
  {
    uint64_t v12 = *a2;
    uint64_t v11 = a2[1];
    uint64_t v13 = v9 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_25112FD4C(v13, (uint64_t)&v46);
      uint64_t v14 = v47;
      uint64_t v15 = v48;
      __swift_project_boxed_opaque_existential_1(&v46, v47);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15) == v12 && v16 == v11) {
        break;
      }
      char v18 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_22;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      v13 += 40;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        unsigned int v6 = a3;
        uint64_t v7 = a1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    sub_25112F14C(&v46, (uint64_t)&v49);
    swift_bridgeObjectRelease();
    unsigned int v6 = a3;
    uint64_t v7 = a1;
    if (!*((void *)&v50 + 1)) {
      goto LABEL_23;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    unint64_t v51 = 0;
    uint64_t v49 = 0u;
    char v50 = 0u;
    swift_bridgeObjectRelease();
    if (!*((void *)&v50 + 1))
    {
LABEL_23:
      sub_25113533C((uint64_t)&v49);
      int64_t v34 = objc_allocWithZone(MEMORY[0x263F087E8]);
      unint64_t v35 = (void *)sub_2511C9480();
      int64_t v36 = objc_msgSend(v34, sel_initWithDomain_code_userInfo_, v35, 0, 0);

      v6(v36);
      return;
    }
  }
  sub_25112F14C(&v49, (uint64_t)v52);
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v19 = *(void *)(v5 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = sub_2511717B4(v20, ObjectType, v19);
  uint64_t v43 = v7;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = v53;
  uint64_t v25 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, AssociatedConformanceWitness, v24, v25);
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v41 = (uint64_t)v6;
    swift_bridgeObjectRetain();
    uint64_t v28 = (uint64_t *)(v26 + 40);
    while (1)
    {
      uint64_t v29 = *v28;
      uint64_t v30 = swift_getObjectType();
      uint64_t v31 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v29 + 24);
      swift_unknownObjectRetain();
      v31(&v49, v30, v29);
      if ((void)v49 == v45 && *((void *)&v49 + 1) == v8)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      unint64_t v33 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v33) {
        break;
      }
      swift_unknownObjectRelease();
      v28 += 2;
      if (!--v27)
      {
        swift_bridgeObjectRelease_n();
        unsigned int v6 = (void (*)(id))v41;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_28:
    sub_25119DC1C(v43, v41, a4, v30, v29);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t v37 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v38 = (void *)sub_2511C9480();
    uint64_t v39 = objc_msgSend(v37, sel_initWithDomain_code_userInfo_, v38, 1, 0);

    v6(v39);
    swift_unknownObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
}

void sub_25119DB58()
{
  if (!qword_269B22588)
  {
    sub_25119DBB0();
    unint64_t v0 = sub_2511C9C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B22588);
    }
  }
}

void sub_25119DBB0()
{
  if (!qword_269B21C28)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B21C28);
    }
  }
}

uint64_t sub_25119DC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v12 - v9;
  swift_getAssociatedConformanceWitness();
  sub_25117171C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(v10, v12, v13, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
}

uint64_t RemoteExecutionEngine.deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteExecutionEngine.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_25119E044()
{
  unint64_t result = qword_269B22590;
  if (!qword_269B22590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22590);
  }
  return result;
}

uint64_t type metadata accessor for RemoteExecutionEngine()
{
  return self;
}

uint64_t method lookup function for RemoteExecutionEngine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RemoteExecutionEngine);
}

uint64_t dispatch thunk of RemoteExecutionEngine.__allocating_init(contextProvider:executorProviders:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RemoteExecutionEngine.run(workPlan:executorIdentifier:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for RemoteExecutionEngine.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25119E1D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteExecutionEngine.Errors()
{
  return &type metadata for RemoteExecutionEngine.Errors;
}

void sub_25119E210(uint64_t a1, uint64_t *a2, void *a3, void (*a4)(void), uint64_t a5)
{
  void (*v38)(long long *__return_ptr, uint64_t, uint64_t);
  char v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  void (*v47)(long long *);
  uint64_t v49;
  long long v50;
  uint64_t v51;
  uint64_t v52;
  long long v53;
  long long v54;
  uint64_t v55;
  void v56[3];
  uint64_t v57;
  uint64_t v58;

  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v9;
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  uint64_t v11 = a2[2];
  uint64_t v49 = a2[3];
  uint64_t v12 = a3[4];
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v44 = v9;
    unint64_t v46 = a4;
    uint64_t v14 = *a2;
    uint64_t v15 = a2[1];
    uint64_t v16 = v12 + 32;
    swift_bridgeObjectRetain_n();
    swift_retain();
    while (1)
    {
      sub_25112FD4C(v16, (uint64_t)&v50);
      uint64_t v17 = v51;
      uint64_t v18 = v52;
      __swift_project_boxed_opaque_existential_1(&v50, v51);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18) == v14 && v19 == v15) {
        break;
      }
      char v21 = sub_2511C9CA0();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_13;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
      v16 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v44;
        a4 = v46;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    a4 = v46;
    swift_bridgeObjectRelease();
    sub_25112F14C(&v50, (uint64_t)&v53);
    swift_bridgeObjectRelease();
    uint64_t v10 = v44;
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v55 = 0;
    BOOL v53 = 0u;
    uint64_t v54 = 0u;
    swift_bridgeObjectRelease();
  }
  if (*((void *)&v54 + 1))
  {
    sub_25112F14C(&v53, (uint64_t)v56);
    uint64_t v22 = a3[2];
    uint64_t v23 = a3[3];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = sub_2511717B4(v22, ObjectType, v23);
    uint64_t v47 = (void (*)(long long *))a4;
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v30 = v57;
    uint64_t v31 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 16))(v28, AssociatedConformanceWitness, v30, v31);
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)(v32 + 16);
    if (v34)
    {
      char v45 = v10;
      swift_bridgeObjectRetain();
      unint64_t v35 = (uint64_t *)(v33 + 40);
      while (1)
      {
        uint64_t v36 = *v35;
        uint64_t v37 = swift_getObjectType();
        uint64_t v38 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v36 + 24);
        swift_unknownObjectRetain();
        v38(&v53, v37, v36);
        if ((void)v53 == v11 && *((void *)&v53 + 1) == v49)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        uint64_t v40 = sub_2511C9CA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v40) {
          break;
        }
        swift_unknownObjectRelease();
        v35 += 2;
        if (!--v34)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_32:
      sub_25119DC1C(a1, (uint64_t)sub_25119E920, v45, v37, v36);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v41 = objc_allocWithZone(MEMORY[0x263F087E8]);
      uint64_t v42 = (void *)sub_2511C9480();
      uint64_t v43 = objc_msgSend(v41, sel_initWithDomain_code_userInfo_, v42, 1, 0);

      *(void *)&BOOL v53 = v43;
      v47(&v53);
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    }
    swift_release();
  }
  else
  {
    sub_25113533C((uint64_t)&v53);
    id v25 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v26 = (void *)sub_2511C9480();
    id v27 = objc_msgSend(v25, sel_initWithDomain_code_userInfo_, v26, 0, 0);

    v56[0] = v27;
    a4(v56);
    swift_release();
  }
}

uint64_t sub_25119E8E8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25119E920(uint64_t a1)
{
  return sub_25118C8E8(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t PresenceInputSignal.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

void static InputSignalIdentifier.presence.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CEA00;
  a1[2] = 0;
  a1[3] = 0;
}

void static InputSignalSet.LookupKey.presence.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CEA00;
  a1[2] = 0;
  a1[3] = 0;
}

Swift::Bool __swiftcall PresenceInputSignal.Anchor.hasDifference(from:for:)(HealthOrchestration::PresenceInputSignal::Anchor_optional from, HealthOrchestration::IdentityConfiguration a2)
{
  return *(unsigned char *)from.is_nil;
}

void PresenceInputSignal.Anchor.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CEA00;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t static PresenceInputSignal.Anchor.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_25119E9EC()
{
  return 0;
}

uint64_t sub_25119E9F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_25119EA28(uint64_t a1)
{
  unint64_t v2 = sub_25119EF94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25119EA64(uint64_t a1)
{
  unint64_t v2 = sub_25119EF94();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PresenceInputSignal.Anchor.encode(to:)(void *a1)
{
  sub_25119EF38();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25119EF94();
  sub_2511C9DA0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PresenceInputSignal.Anchor.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void sub_25119EBD4(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CEA00;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t sub_25119EBF8(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_25119EC20(void *a1)
{
  sub_25119EF38();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25119EF94();
  sub_2511C9DA0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void PresenceInputSignal.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002511CEA00;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t PresenceInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

Swift::Void __swiftcall PresenceInputSignal.beginObservation(from:configurations:)(HealthOrchestration::PresenceInputSignal::Anchor_optional from, Swift::OpaquePointer configurations)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = v2;
  unsigned int v6 = *(void (**)(uint64_t, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8);
  uint64_t v7 = sub_25119F1DC(&qword_26B217C18);
  v6(v7, &v8, v3, v7, ObjectType, v4);
}

uint64_t PresenceInputSignal.init(observer:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t PresenceInputSignal.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PresenceInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_25119EEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(ObjectType, &v11, a3, a4, ObjectType, v8);
}

unint64_t sub_25119EF1C()
{
  return 0xD000000000000013;
}

void sub_25119EF38()
{
  if (!qword_269B22598)
  {
    sub_25119EF94();
    unint64_t v0 = sub_2511C9C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B22598);
    }
  }
}

unint64_t sub_25119EF94()
{
  unint64_t result = qword_269B225A0;
  if (!qword_269B225A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225A0);
  }
  return result;
}

uint64_t type metadata accessor for PresenceInputSignal()
{
  return self;
}

unint64_t sub_25119F00C(void *a1)
{
  a1[1] = sub_25119F044();
  a1[2] = sub_25119F098();
  unint64_t result = sub_25119F0EC();
  a1[3] = result;
  return result;
}

unint64_t sub_25119F044()
{
  unint64_t result = qword_269B225A8;
  if (!qword_269B225A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225A8);
  }
  return result;
}

unint64_t sub_25119F098()
{
  unint64_t result = qword_269B225B0;
  if (!qword_269B225B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225B0);
  }
  return result;
}

unint64_t sub_25119F0EC()
{
  unint64_t result = qword_269B225B8;
  if (!qword_269B225B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225B8);
  }
  return result;
}

unint64_t sub_25119F144()
{
  unint64_t result = qword_269B225C0;
  if (!qword_269B225C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225C0);
  }
  return result;
}

uint64_t sub_25119F198(uint64_t a1)
{
  uint64_t result = sub_25119F1DC(&qword_26B218568);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25119F1DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PresenceInputSignal();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for PresenceInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PresenceInputSignal);
}

uint64_t dispatch thunk of PresenceInputSignal.__allocating_init(observer:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for PresenceInputSignal.Anchor()
{
  return &type metadata for PresenceInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for PresenceInputSignal.Anchor.CodingKeys()
{
  return &type metadata for PresenceInputSignal.Anchor.CodingKeys;
}

unint64_t sub_25119F26C()
{
  unint64_t result = qword_269B225C8;
  if (!qword_269B225C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225C8);
  }
  return result;
}

unint64_t sub_25119F2C4()
{
  unint64_t result = qword_269B225D0;
  if (!qword_269B225D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225D0);
  }
  return result;
}

HealthOrchestration::EnvironmentalStateDescription __swiftcall EnvironmentalStateDescription.init(matching:excluding:)(Swift::OpaquePointer matching, Swift::OpaquePointer excluding)
{
  v2->_char rawValue = matching._rawValue;
  v2[1]._char rawValue = excluding._rawValue;
  result.excluding = excluding;
  result.matching = matching;
  return result;
}

uint64_t sub_25119F320(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t static EnvironmentalStateDescription.+= infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_2511983B4(v3, (uint64_t)sub_251198898, 0, isUniquelyReferenced_nonNull_native, &v8);
  *a1 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a1[1];
  a1[1] = 0x8000000000000000;
  sub_251197EC0(v4, (uint64_t)sub_251198898, 0, v6, &v8);
  a1[1] = v8;

  return swift_bridgeObjectRelease();
}

uint64_t EnvironmentalStateDescription.description.getter()
{
  if (*(void *)(*(void *)(v0 + 8) + 16))
  {
    sub_2511C9960();
    swift_bridgeObjectRelease();
    sub_25114A7B4();
    swift_bridgeObjectRetain();
    sub_2511C9420();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    sub_251155B48(0);
    swift_bridgeObjectRetain();
    sub_2511C9420();
    sub_2511C9520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2511C9520();
    return 60;
  }
  else
  {
    sub_25114A7B4();
    return sub_2511C9420();
  }
}

uint64_t EnvironmentalStateDescription.matching.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EnvironmentalStateDescription.matching.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*EnvironmentalStateDescription.matching.modify())()
{
  return nullsub_1;
}

uint64_t EnvironmentalStateDescription.excluding.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EnvironmentalStateDescription.excluding.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*EnvironmentalStateDescription.excluding.modify())()
{
  return nullsub_1;
}

uint64_t static EnvironmentalStateDescription.+ infix(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_25119F320(v5, v3, (uint64_t)sub_251198898, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_2511A049C);
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t result = sub_25119F320(v7, v4, (uint64_t)sub_251198898, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_25119FFA8);
  *a2 = v6;
  a2[1] = result;
  return result;
}

uint64_t sub_25119F774(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2511A4D20(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t static EnvironmentalStateDescription.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_251163588(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_2511635A0(v2, v3);
}

uint64_t sub_25119F950()
{
  if (*v0) {
    return 0x6E6964756C637865;
  }
  else {
    return 0x676E69686374616DLL;
  }
}

uint64_t sub_25119F990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511A160C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25119F9B8(uint64_t a1)
{
  unint64_t v2 = sub_2511A0F60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25119F9F4(uint64_t a1)
{
  unint64_t v2 = sub_2511A0F60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EnvironmentalStateDescription.encode(to:)(void *a1)
{
  sub_2511A11F4(0, &qword_269B225D8, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *v1;
  uint64_t v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511A0F60();
  sub_2511C9DA0();
  uint64_t v13 = v9;
  char v12 = 0;
  sub_2511A1064(0, &qword_269B225E8, (void (*)(uint64_t))sub_25114A7B4);
  sub_2511A0FB4();
  sub_2511C9C00();
  if (!v2)
  {
    uint64_t v13 = v11;
    char v12 = 1;
    sub_2511A1064(0, &qword_269B225F8, sub_251155B48);
    sub_2511A10C8(&qword_269B22600, (void (*)(void))sub_2511A115C);
    sub_2511C9C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t EnvironmentalStateDescription.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_2511A11F4(0, &qword_269B22618, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511A0F60();
  sub_2511C9D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2511A1064(0, &qword_269B225E8, (void (*)(uint64_t))sub_25114A7B4);
  char v14 = 0;
  sub_2511A1258();
  sub_2511C9B90();
  uint64_t v10 = v15;
  sub_2511A1064(0, &qword_269B225F8, sub_251155B48);
  char v14 = 1;
  sub_2511A10C8(&qword_269B22628, (void (*)(void))sub_2511A1308);
  swift_bridgeObjectRetain();
  sub_2511C9B90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v15;
  *a2 = v10;
  a2[1] = v11;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25119FF18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EnvironmentalStateDescription.init(from:)(a1, a2);
}

uint64_t sub_25119FF30(void *a1)
{
  return EnvironmentalStateDescription.encode(to:)(a1);
}

uint64_t sub_25119FF48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_251163588(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_2511635A0(v2, v3);
}

uint64_t sub_25119FFA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_2511A0DC8();
  uint64_t v64 = v9;
  if (!v8)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25112EB80();
    return swift_release();
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v59 = a5;
  while (1)
  {
    uint64_t v15 = (void *)*a5;
    unint64_t v17 = sub_251149240(v10, v11);
    uint64_t v18 = v15[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      goto LABEL_54;
    }
    char v21 = v16;
    if (v15[3] >= v20)
    {
      if (a4)
      {
        uint64_t v24 = (void *)*a5;
        if ((v16 & 1) == 0) {
          goto LABEL_48;
        }
      }
      else
      {
        sub_251188298();
        uint64_t v24 = (void *)*a5;
        if ((v21 & 1) == 0) {
          goto LABEL_48;
        }
      }
    }
    else
    {
      sub_25118621C(v20, a4 & 1);
      unint64_t v22 = sub_251149240(v10, v11);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_57;
      }
      unint64_t v17 = v22;
      uint64_t v24 = (void *)*a5;
      if ((v21 & 1) == 0)
      {
LABEL_48:
        v24[(v17 >> 6) + 8] |= 1 << v17;
        uint64_t v55 = (uint64_t *)(v24[6] + 16 * v17);
        *uint64_t v55 = v10;
        v55[1] = v11;
        *(void *)(v24[7] + 8 * v17) = v64;
        uint64_t v56 = v24[2];
        BOOL v53 = __OFADD__(v56, 1);
        uint64_t v57 = v56 + 1;
        if (v53) {
          goto LABEL_56;
        }
        long long v24[2] = v57;
        goto LABEL_4;
      }
    }
    unint64_t v61 = v17;
    uint64_t v60 = v24;
    id v25 = *(void **)(v24[7] + 8 * v17);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = v25;
    uint64_t v62 = v64 + 64;
    uint64_t v27 = 1 << *(unsigned char *)(v64 + 32);
    uint64_t v28 = v27 < 64 ? ~(-1 << v27) : -1;
    unint64_t v29 = v28 & *(void *)(v64 + 64);
    int64_t v63 = (unint64_t)(v27 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v30 = 0;
    if (v29) {
      break;
    }
LABEL_19:
    int64_t v36 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_53;
    }
    if (v36 < v63)
    {
      unint64_t v37 = *(void *)(v62 + 8 * v36);
      ++v30;
      if (v37) {
        goto LABEL_34;
      }
      int64_t v30 = v36 + 1;
      if (v36 + 1 < v63)
      {
        unint64_t v37 = *(void *)(v62 + 8 * v30);
        if (v37) {
          goto LABEL_34;
        }
        int64_t v30 = v36 + 2;
        if (v36 + 2 < v63)
        {
          unint64_t v37 = *(void *)(v62 + 8 * v30);
          if (v37) {
            goto LABEL_34;
          }
          int64_t v30 = v36 + 3;
          if (v36 + 3 < v63)
          {
            unint64_t v37 = *(void *)(v62 + 8 * v30);
            if (v37) {
              goto LABEL_34;
            }
            int64_t v38 = v36 + 4;
            if (v38 < v63)
            {
              unint64_t v37 = *(void *)(v62 + 8 * v38);
              if (!v37)
              {
                while (1)
                {
                  int64_t v30 = v38 + 1;
                  if (__OFADD__(v38, 1)) {
                    goto LABEL_55;
                  }
                  if (v30 >= v63) {
                    goto LABEL_3;
                  }
                  unint64_t v37 = *(void *)(v62 + 8 * v30);
                  ++v38;
                  if (v37) {
                    goto LABEL_34;
                  }
                }
              }
              int64_t v30 = v38;
LABEL_34:
              unint64_t v29 = (v37 - 1) & v37;
              unint64_t v35 = __clz(__rbit64(v37)) + (v30 << 6);
              goto LABEL_35;
            }
          }
        }
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v60[7];
    swift_bridgeObjectRelease();
    *(void *)(v12 + 8 * v61) = v25;
    a5 = v59;
LABEL_4:
    uint64_t v10 = sub_2511A0DC8();
    uint64_t v11 = v13;
    uint64_t v64 = v14;
    a4 = 1;
    if (!v13) {
      goto LABEL_50;
    }
  }
  while (1)
  {
    unint64_t v34 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
    unint64_t v35 = v34 | (v30 << 6);
LABEL_35:
    uint64_t v39 = (uint64_t *)(*(void *)(v64 + 48) + 16 * v35);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    uint64_t v42 = *(void *)(*(void *)(v64 + 56) + 8 * v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_251149240(v41, v40);
    uint64_t v45 = v25[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      break;
    }
    char v48 = v43;
    if (v25[3] >= v47)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v25 = v65;
        if (v43) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_2511882C8();
        id v25 = v65;
        if (v48) {
          goto LABEL_17;
        }
      }
LABEL_42:
      v25[(v44 >> 6) + 8] |= 1 << v44;
      unint64_t v51 = (uint64_t *)(v25[6] + 16 * v44);
      *unint64_t v51 = v41;
      v51[1] = v40;
      *(void *)(v25[7] + 8 * v44) = v42;
      uint64_t v52 = v25[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_52;
      }
      void v25[2] = v54;
      char isUniquelyReferenced_nonNull_native = 1;
      if (!v29) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_25118624C(v47, isUniquelyReferenced_nonNull_native & 1);
      unint64_t v49 = sub_251149240(v41, v40);
      if ((v48 & 1) != (v50 & 1)) {
        goto LABEL_57;
      }
      unint64_t v44 = v49;
      id v25 = v65;
      if ((v48 & 1) == 0) {
        goto LABEL_42;
      }
LABEL_17:
      uint64_t v31 = *(void *)(v25[7] + 8 * v44);
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_25119F774(v42, v31);
      swift_bridgeObjectRelease();
      uint64_t v33 = v25[7];
      swift_bridgeObjectRelease();
      *(void *)(v33 + 8 * v44) = v32;
      char isUniquelyReferenced_nonNull_native = 1;
      if (!v29) {
        goto LABEL_19;
      }
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_2511A049C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_2511A0DC8();
  uint64_t v67 = v9;
  if (!v8)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25112EB80();
    return swift_release();
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v62 = a5;
  while (1)
  {
    uint64_t v15 = (void *)*a5;
    unint64_t v17 = sub_251149240(v10, v11);
    uint64_t v18 = v15[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      goto LABEL_54;
    }
    char v21 = v16;
    if (v15[3] >= v20)
    {
      if (a4)
      {
        uint64_t v24 = (void *)*a5;
        if (v16) {
          break;
        }
      }
      else
      {
        sub_2511882B0();
        uint64_t v24 = (void *)*a5;
        if (v21) {
          break;
        }
      }
      goto LABEL_48;
    }
    sub_251186234(v20, a4 & 1);
    unint64_t v22 = sub_251149240(v10, v11);
    if ((v21 & 1) != (v23 & 1)) {
      goto LABEL_57;
    }
    unint64_t v17 = v22;
    uint64_t v24 = (void *)*a5;
    if (v21) {
      break;
    }
LABEL_48:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v58 = (uint64_t *)(v24[6] + 16 * v17);
    *uint64_t v58 = v10;
    v58[1] = v11;
    *(void *)(v24[7] + 8 * v17) = v67;
    uint64_t v59 = v24[2];
    BOOL v56 = __OFADD__(v59, 1);
    uint64_t v60 = v59 + 1;
    if (v56) {
      goto LABEL_56;
    }
    long long v24[2] = v60;
LABEL_4:
    uint64_t v10 = sub_2511A0DC8();
    uint64_t v11 = v13;
    uint64_t v67 = v14;
    a4 = 1;
    if (!v13) {
      goto LABEL_50;
    }
  }
  unint64_t v64 = v17;
  int64_t v63 = v24;
  id v25 = *(void **)(v24[7] + 8 * v17);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v69 = v25;
  uint64_t v65 = v67 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v67 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & *(void *)(v67 + 64);
  int64_t v66 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  while (2)
  {
    if (v29)
    {
      unint64_t v32 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      int64_t v68 = v30;
      unint64_t v33 = v32 | (v30 << 6);
    }
    else
    {
      int64_t v34 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_53;
      }
      if (v34 >= v66)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v63[7];
        swift_bridgeObjectRelease();
        *(void *)(v12 + 8 * v64) = v25;
        a5 = v62;
        goto LABEL_4;
      }
      unint64_t v35 = *(void *)(v65 + 8 * v34);
      int64_t v36 = v30 + 1;
      if (!v35)
      {
        int64_t v36 = v30 + 2;
        if (v30 + 2 >= v66) {
          goto LABEL_3;
        }
        unint64_t v35 = *(void *)(v65 + 8 * v36);
        if (!v35)
        {
          int64_t v36 = v30 + 3;
          if (v30 + 3 >= v66) {
            goto LABEL_3;
          }
          unint64_t v35 = *(void *)(v65 + 8 * v36);
          if (!v35)
          {
            int64_t v36 = v30 + 4;
            if (v30 + 4 >= v66) {
              goto LABEL_3;
            }
            unint64_t v35 = *(void *)(v65 + 8 * v36);
            if (!v35)
            {
              uint64_t v37 = v30 + 5;
              if (v30 + 5 >= v66) {
                goto LABEL_3;
              }
              unint64_t v35 = *(void *)(v65 + 8 * v37);
              if (!v35)
              {
                while (1)
                {
                  int64_t v36 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    goto LABEL_55;
                  }
                  if (v36 >= v66) {
                    goto LABEL_3;
                  }
                  unint64_t v35 = *(void *)(v65 + 8 * v36);
                  ++v37;
                  if (v35) {
                    goto LABEL_35;
                  }
                }
              }
              int64_t v36 = v30 + 5;
            }
          }
        }
      }
LABEL_35:
      unint64_t v29 = (v35 - 1) & v35;
      int64_t v68 = v36;
      unint64_t v33 = __clz(__rbit64(v35)) + (v36 << 6);
    }
    uint64_t v38 = 16 * v33;
    uint64_t v39 = (uint64_t *)(*(void *)(v67 + 48) + v38);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    uint64_t v42 = (uint64_t *)(*(void *)(v67 + 56) + v38);
    uint64_t v44 = *v42;
    uint64_t v43 = v42[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_251149240(v41, v40);
    uint64_t v47 = v25[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (!__OFADD__(v47, v48))
    {
      char v50 = v45;
      if (v25[3] >= v49)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          id v25 = v69;
          if ((v45 & 1) == 0) {
            goto LABEL_43;
          }
        }
        else
        {
          sub_251149DD0();
          id v25 = v69;
          if ((v50 & 1) == 0) {
            goto LABEL_43;
          }
        }
      }
      else
      {
        sub_251185ED4(v49, isUniquelyReferenced_nonNull_native & 1);
        unint64_t v51 = sub_251149240(v41, v40);
        if ((v50 & 1) != (v52 & 1)) {
          goto LABEL_57;
        }
        unint64_t v46 = v51;
        id v25 = v69;
        if ((v50 & 1) == 0)
        {
LABEL_43:
          v25[(v46 >> 6) + 8] |= 1 << v46;
          BOOL v53 = (uint64_t *)(v25[6] + 16 * v46);
          *BOOL v53 = v41;
          v53[1] = v40;
          uint64_t v54 = (void *)(v25[7] + 16 * v46);
          *uint64_t v54 = v44;
          v54[1] = v43;
          uint64_t v55 = v25[2];
          BOOL v56 = __OFADD__(v55, 1);
          uint64_t v57 = v55 + 1;
          if (v56) {
            goto LABEL_52;
          }
          void v25[2] = v57;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)(v25[7] + 16 * v46);
      swift_bridgeObjectRelease();
      *uint64_t v31 = v44;
      v31[1] = v43;
LABEL_17:
      char isUniquelyReferenced_nonNull_native = 1;
      int64_t v30 = v68;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_2511A0980@<X0>(uint64_t a1@<X8>)
{
  sub_251169B28();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25112EB2C(0, &qword_269B220E8, (void (*)(uint64_t))sub_251169B28);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = *v1;
  uint64_t v16 = v1[1];
  uint64_t v18 = v1[2];
  int64_t v17 = v1[3];
  int64_t v19 = v17;
  unint64_t v20 = v1[4];
  uint64_t v37 = v7;
  uint64_t v40 = v18;
  if (v20)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v16;
    uint64_t v21 = (v20 - 1) & v20;
    unint64_t v22 = __clz(__rbit64(v20)) | (v17 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v15 + 48);
    uint64_t v24 = v15;
    uint64_t v25 = sub_2511C9180();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v14, v23 + *(void *)(*(void *)(v25 - 8) + 72) * v22, v25);
    uint64_t v26 = *(void *)(v24 + 56);
    uint64_t v27 = sub_2511C91E0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(&v14[*(int *)(v4 + 48)], v26 + *(void *)(*(void *)(v27 - 8) + 72) * v22, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    a1 = v38;
    uint64_t v16 = v39;
    goto LABEL_23;
  }
  int64_t v28 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v29 = (unint64_t)(v18 + 64) >> 6;
  if (v28 < v29)
  {
    unint64_t v30 = *(void *)(v16 + 8 * v28);
    if (v30)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v16;
      uint64_t v21 = (v30 - 1) & v30;
      unint64_t v22 = __clz(__rbit64(v30)) + (v28 << 6);
      int64_t v19 = v28;
      goto LABEL_3;
    }
    int64_t v31 = v17 + 2;
    int64_t v19 = v17 + 1;
    if (v17 + 2 < v29)
    {
      unint64_t v30 = *(void *)(v16 + 8 * v31);
      if (v30)
      {
LABEL_10:
        int64_t v28 = v31;
        goto LABEL_7;
      }
      int64_t v19 = v17 + 2;
      if (v17 + 3 < v29)
      {
        unint64_t v30 = *(void *)(v16 + 8 * (v17 + 3));
        if (v30)
        {
          int64_t v28 = v17 + 3;
          goto LABEL_7;
        }
        int64_t v31 = v17 + 4;
        int64_t v19 = v17 + 3;
        if (v17 + 4 < v29)
        {
          unint64_t v30 = *(void *)(v16 + 8 * v31);
          if (v30) {
            goto LABEL_10;
          }
          int64_t v28 = v17 + 5;
          int64_t v19 = v17 + 4;
          if (v17 + 5 < v29)
          {
            unint64_t v30 = *(void *)(v16 + 8 * v28);
            if (v30) {
              goto LABEL_7;
            }
            int64_t v19 = v29 - 1;
            int64_t v32 = v17 + 6;
            while (v29 != v32)
            {
              unint64_t v30 = *(void *)(v16 + 8 * v32++);
              if (v30)
              {
                int64_t v28 = v32 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v24 = v15;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
  uint64_t v21 = 0;
LABEL_23:
  *uint64_t v1 = v24;
  v1[1] = v16;
  v1[2] = v40;
  v1[3] = v19;
  v1[4] = v21;
  unint64_t v33 = (void (*)(uint64_t))v1[5];
  sub_25112EAC0((uint64_t)v14, (uint64_t)v11, &qword_269B220E8, (void (*)(uint64_t))sub_251169B28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    sub_251169C1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a1, 1, 1, v34);
  }
  else
  {
    uint64_t v35 = (uint64_t)v37;
    sub_2511A170C((uint64_t)v11, (uint64_t)v37);
    v33(v35);
    sub_2511300F8(v35, (uint64_t (*)(void))sub_251169B28);
    sub_251169C1C();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_2511A0DC8()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    uint64_t v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      int64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          int64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

unint64_t sub_2511A0F60()
{
  unint64_t result = qword_269B225E0;
  if (!qword_269B225E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225E0);
  }
  return result;
}

unint64_t sub_2511A0FB4()
{
  unint64_t result = qword_269B225F0;
  if (!qword_269B225F0)
  {
    sub_2511A1064(255, &qword_269B225E8, (void (*)(uint64_t))sub_25114A7B4);
    sub_251193978(&qword_269B223D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B225F0);
  }
  return result;
}

void sub_2511A1064(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2511C9430();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2511A10C8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2511A1064(255, &qword_269B225F8, sub_251155B48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2511A115C()
{
  unint64_t result = qword_269B22608;
  if (!qword_269B22608)
  {
    sub_251155B48(255);
    sub_2511A13A0(&qword_269B22610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22608);
  }
  return result;
}

void sub_2511A11F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2511A0F60();
    unint64_t v7 = a3(a1, &type metadata for EnvironmentalStateDescription.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_2511A1258()
{
  unint64_t result = qword_269B22620;
  if (!qword_269B22620)
  {
    sub_2511A1064(255, &qword_269B225E8, (void (*)(uint64_t))sub_25114A7B4);
    sub_251193978(&qword_269B22408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22620);
  }
  return result;
}

unint64_t sub_2511A1308()
{
  unint64_t result = qword_269B22630;
  if (!qword_269B22630)
  {
    sub_251155B48(255);
    sub_2511A13A0(&qword_269B22638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22630);
  }
  return result;
}

uint64_t sub_2511A13A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251155544();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EnvironmentalStateDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2511A14CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentalStateDescription.CodingKeys()
{
  return &type metadata for EnvironmentalStateDescription.CodingKeys;
}

unint64_t sub_2511A1508()
{
  unint64_t result = qword_269B22640;
  if (!qword_269B22640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22640);
  }
  return result;
}

unint64_t sub_2511A1560()
{
  unint64_t result = qword_269B22648;
  if (!qword_269B22648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22648);
  }
  return result;
}

unint64_t sub_2511A15B8()
{
  unint64_t result = qword_269B22650;
  if (!qword_269B22650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B22650);
  }
  return result;
}

uint64_t sub_2511A160C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69686374616DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_2511C9CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6964756C637865 && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2511C9CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2511A170C(uint64_t a1, uint64_t a2)
{
  sub_251169B28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static InputSignalSet.LookupKey.userDefault<A>(type:_:)@<X0>(unint64_t *a1@<X1>, __n128 *a2@<X8>)
{
  unint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  v7.n128_u64[0] = *a1;
  v7.n128_u64[1] = v3;
  unint64_t v8 = v4;
  unint64_t v9 = v5;
  type metadata accessor for UserDefaultInputSignal();
  InputSignalSet.LookupKey.init(identifier:)(&v7, a2);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UserDefaultInputSignal()
{
  return swift_getGenericMetadata();
}

uint64_t UserDefaultInputSignal.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + qword_269B22658 + 8);
  uint64_t v4 = *(void *)(v1 + qword_269B22658 + 16);
  uint64_t v3 = *(void *)(v1 + qword_269B22658 + 24);
  *a1 = *(void *)(v1 + qword_269B22658);
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t UserDefaultInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

Swift::Void __swiftcall UserDefaultInputSignal.stopObservation()()
{
  uint64_t v1 = *(void **)(v0 + qword_269B22660);
  id v2 = (id)sub_2511C9480();
  objc_msgSend(v1, sel_removeObserver_forKeyPath_, v0, v2);
}

id UserDefaultInputSignal.__allocating_init(identifier:observer:defaults:key:transformer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  return UserDefaultInputSignal.init(identifier:observer:defaults:key:transformer:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id UserDefaultInputSignal.init(identifier:observer:defaults:key:transformer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = *(void *)(a1 + 8);
  int64_t v19 = &v8[qword_269B22658];
  *(void *)int64_t v19 = *(void *)a1;
  *((void *)v19 + 1) = v18;
  *((_OWORD *)v19 + 1) = *(_OWORD *)(a1 + 16);
  unint64_t v20 = &v8[qword_269B22670];
  *(void *)unint64_t v20 = a2;
  *((void *)v20 + 1) = a3;
  *(void *)&v8[qword_269B22660] = a4;
  uint64_t v21 = &v8[qword_269B22668];
  *(void *)uint64_t v21 = a5;
  *((void *)v21 + 1) = a6;
  unint64_t v22 = &v8[qword_269B22678];
  *(void *)unint64_t v22 = a7;
  *((void *)v22 + 1) = a8;
  v24.receiver = v8;
  v24.super_class = ObjectType;
  return objc_msgSendSuper2(&v24, sel_init);
}

uint64_t UserDefaultInputSignal.observeValue(forKeyPath:of:change:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2511A2104(a3, a4);
}

uint64_t sub_2511A1A60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a3)
  {
    sub_2511C94B0();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    memset(v14, 0, sizeof(v14));
    id v11 = a5;
    id v12 = a1;
    if (a5) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v10 = 0;
    goto LABEL_8;
  }
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  swift_unknownObjectRetain();
  id v8 = a5;
  id v9 = a1;
  sub_2511C98E0();
  swift_unknownObjectRelease();
  if (!a5) {
    goto LABEL_7;
  }
LABEL_4:
  type metadata accessor for NSKeyValueChangeKey(0);
  sub_2511A2538();
  uint64_t v10 = sub_2511C9410();

LABEL_8:
  sub_2511A2104((uint64_t)v14, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2511699A0((uint64_t)v14);
}

id UserDefaultInputSignal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void UserDefaultInputSignal.init()()
{
}

void sub_2511A1BF0()
{
}

id UserDefaultInputSignal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2511A1C94(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_2511A1D28@<X0>(void *a1@<X8>)
{
  return UserDefaultInputSignal.identifier.getter(a1);
}

uint64_t sub_2511A1D4C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2511A1D7C()
{
  return _s19HealthOrchestration22UserDefaultInputSignalC16beginObservation4from14configurationsyAA19OptionalValueAnchorVyxGSg_SayAA21IdentityConfigurationVGtF_0();
}

void sub_2511A1DA0()
{
}

uint64_t _s19HealthOrchestration22UserDefaultInputSignalC16beginObservation4from14configurationsyAA19OptionalValueAnchorVyxGSg_SayAA21IdentityConfigurationVGtF_0()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  objc_super v2 = (void *)(*MEMORY[0x263F8EED0] & *v0);
  uint64_t v3 = (void *)v2[10];
  uint64_t v4 = sub_2511C9890();
  MEMORY[0x270FA5388](v4 - 8);
  int64_t v28 = (char *)v27 - v5;
  uint64_t v6 = v2[11];
  uint64_t v7 = v2[12];
  uint64_t v8 = v2[13];
  int64_t v31 = v3;
  uint64_t v34 = v3;
  uint64_t v35 = v6;
  v27[1] = v7;
  long long v27[2] = v6;
  uint64_t v36 = v7;
  uint64_t v37 = v8;
  v27[0] = v8;
  uint64_t v9 = type metadata accessor for OptionalValueAnchor();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)v27 - v10;
  id v12 = *(void **)((char *)v1 + qword_269B22660);
  uint64_t v13 = (void *)sub_2511C9480();
  objc_msgSend(v12, sel_addObserver_forKeyPath_options_context_, v1, v13, 1, 0);

  uint64_t v14 = *(void *)((char *)v1 + qword_269B22670 + 8);
  uint64_t v15 = *(void *)((char *)v1 + qword_269B22658 + 8);
  uint64_t v17 = *(void *)((char *)v1 + qword_269B22658 + 16);
  uint64_t v16 = *(void *)((char *)v1 + qword_269B22658 + 24);
  uint64_t v34 = *(void **)((char *)v1 + qword_269B22658);
  uint64_t v35 = v15;
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  uint64_t v18 = *(void (**)(_OWORD *))((char *)v1 + qword_269B22678);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v19 = (void *)sub_2511C9480();
  id v20 = objc_msgSend(v12, sel_valueForKey_, v19);

  if (v20)
  {
    sub_2511C98E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  uint64_t v21 = swift_getObjectType();
  uint64_t v22 = (uint64_t)v28;
  v18(v33);
  sub_2511699A0((uint64_t)v33);
  OptionalValueAnchor.init(identifier:value:)((uint64_t)&v34, v22, (uint64_t)v11);
  uint64_t v34 = v1;
  uint64_t v23 = *(void (**)(char *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
  uint64_t v24 = ObjectType;
  uint64_t WitnessTable = swift_getWitnessTable();
  v23(v11, &v34, v24, WitnessTable, v21, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v30);
}

uint64_t sub_2511A20F0()
{
  return *(void *)(v0 + qword_269B22670);
}

uint64_t sub_2511A2104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*MEMORY[0x263F8EED0] & *v3);
  uint64_t v7 = v6[10];
  uint64_t v8 = sub_2511C9890();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = v6[11];
  uint64_t v12 = v6[12];
  uint64_t v13 = v6[13];
  *(void *)&long long v41 = v7;
  *((void *)&v41 + 1) = v11;
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  uint64_t v14 = type metadata accessor for OptionalValueAnchor();
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - v17;
  if (a2)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v36 = v16;
      uint64_t v37 = result;
      id v19 = (id)*MEMORY[0x263F081B8];
      uint64_t v20 = sub_251167314();
      if (v21)
      {
        sub_2511410DC(*(void *)(a2 + 56) + 32 * v20, (uint64_t)&v39);
      }
      else
      {
        long long v39 = 0u;
        long long v40 = 0u;
      }

      if (*((void *)&v40 + 1))
      {
        sub_251155534(&v39, &v41);
        uint64_t v22 = *(void *)((char *)v3 + qword_269B22670 + 8);
        uint64_t v35 = *(void *)((char *)v3 + qword_269B22670);
        uint64_t v33 = v22;
        uint64_t v34 = swift_getObjectType();
        uint64_t v23 = *(void *)((char *)v3 + qword_269B22658 + 8);
        uint64_t v24 = *(void *)((char *)v3 + qword_269B22658 + 16);
        uint64_t v25 = *(void *)((char *)v3 + qword_269B22658 + 24);
        *(void *)&long long v39 = *(void *)((char *)v3 + qword_269B22658);
        *((void *)&v39 + 1) = v23;
        *(void *)&long long v40 = v24;
        *((void *)&v40 + 1) = v25;
        int64_t v31 = *(void (**)(unsigned char *))((char *)v3 + qword_269B22678);
        uint64_t v32 = ObjectType;
        sub_2511410DC((uint64_t)&v41, (uint64_t)v38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v38);
        sub_2511699A0((uint64_t)v38);
        OptionalValueAnchor.init(identifier:value:)((uint64_t)&v39, (uint64_t)v10, (uint64_t)v18);
        *(void *)&long long v39 = v3;
        uint64_t v26 = v32;
        uint64_t v27 = v33;
        int64_t v28 = *(void (**)(char *, long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8);
        uint64_t WitnessTable = swift_getWitnessTable();
        v28(v18, &v39, v26, WitnessTable, v34, v27);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v37);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
      }
    }
    else
    {
      long long v39 = 0u;
      long long v40 = 0u;
    }
    return sub_2511699A0((uint64_t)&v39);
  }
  return result;
}

void sub_2511A2418()
{
}

uint64_t sub_2511A2448()
{
  return swift_getWitnessTable();
}

uint64_t sub_2511A2464(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2511A24A0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for UserDefaultInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UserDefaultInputSignal);
}

uint64_t dispatch thunk of UserDefaultInputSignal.__allocating_init(identifier:observer:defaults:key:transformer:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unint64_t sub_2511A2538()
{
  unint64_t result = qword_269B21B20;
  if (!qword_269B21B20)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B21B20);
  }
  return result;
}

uint64_t POSIXSignalInputSignal.__allocating_init(context:observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  POSIXSignalInputSignal.init(context:observer:)(a1, a2, a3, a4);
  return v8;
}

void static InputSignalIdentifier.posixSignal.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CEE50;
  a1[2] = 0;
  a1[3] = 0;
}

void static InputSignalSet.LookupKey.posixSignal.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CEE50;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t (*POSIXSignalInputSignal.Anchor.signalTimestamps.modify())()
{
  return nullsub_1;
}

uint64_t POSIXSignalInputSignal.Anchor.relevantTimestamps(for:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2511AA498(v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

BOOL POSIXSignalInputSignal.Anchor.hasDifference(from:for:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2511AA498(v5, v4);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_2511AA498(v7, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_251154754(MEMORY[0x263F8EE78]);
  }
  char v9 = sub_2511641AC(v6, v8);
  swift_release();
  swift_bridgeObjectRelease();
  return (v9 & 1) == 0;
}

uint64_t POSIXSignalInputSignal.Anchor.merged(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2511AA61C(v2, (uint64_t (*)(void, double))sub_2511AA82C);
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_251154754(MEMORY[0x263F8EE78]);
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5)
  {
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v4;
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = (void *)(v3 + 40);
  while (1)
  {
    unsigned int v7 = *((_DWORD *)v6 - 2);
    uint64_t v8 = *v6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = sub_251167220(v7);
    uint64_t v12 = v4[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v15 = v10;
    if (v4[3] >= v14)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v10) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251187140();
        if (v15) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_25118424C(v14, isUniquelyReferenced_nonNull_native);
      unint64_t v16 = sub_251167220(v7);
      if ((v15 & 1) != (v17 & 1)) {
        goto LABEL_20;
      }
      unint64_t v11 = v16;
      if (v15)
      {
LABEL_3:
        *(void *)(v4[7] + 8 * v11) = v8;
        goto LABEL_4;
      }
    }
    v4[(v11 >> 6) + 8] |= 1 << v11;
    *(_DWORD *)(v4[6] + 4 * v11) = v7;
    *(void *)(v4[7] + 8 * v11) = v8;
    uint64_t v18 = v4[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_19;
    }
    v4[2] = v20;
LABEL_4:
    swift_bridgeObjectRelease();
    v6 += 2;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_2511C9CD0();
  __break(1u);
  return result;
}

uint64_t sub_2511A2970(unsigned int a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_251167220(a1), (v3 & 1) != 0)) {
    return a1;
  }
  else {
    return 0;
  }
}

unint64_t static POSIXSignalInputSignal.Anchor.== infix(_:_:)(unint64_t *a1, uint64_t *a2)
{
  return sub_2511641AC(*a1, *a2);
}

unint64_t sub_2511A29E8()
{
  return 0xD000000000000010;
}

uint64_t sub_2511A2A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2511AB3F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2511A2A30(uint64_t a1)
{
  unint64_t v2 = sub_2511AA834();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2511A2A6C(uint64_t a1)
{
  unint64_t v2 = sub_2511AA834();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t POSIXSignalInputSignal.Anchor.encode(to:)(void *a1)
{
  sub_2511AB6BC(0, &qword_269B22680, (uint64_t (*)(void))sub_2511AA834, (uint64_t)&type metadata for POSIXSignalInputSignal.Anchor.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511AA834();
  sub_2511C9DA0();
  v10[3] = v8;
  sub_2511AA888();
  sub_2511AA8F0(&qword_269B22698);
  sub_2511C9C00();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t POSIXSignalInputSignal.Anchor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_2511AB6BC(0, &qword_269B226A0, (uint64_t (*)(void))sub_2511AA834, (uint64_t)&type metadata for POSIXSignalInputSignal.Anchor.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2511AA834();
  sub_2511C9D90();
  if (!v2)
  {
    char v9 = v12;
    sub_2511AA888();
    sub_2511AA8F0(&qword_269B226A8);
    sub_2511C9B90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2511A2E54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return POSIXSignalInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_2511A2E6C(void *a1)
{
  return POSIXSignalInputSignal.Anchor.encode(to:)(a1);
}

unint64_t sub_2511A2E84(unint64_t *a1, uint64_t *a2)
{
  return sub_2511641AC(*a1, *a2);
}

void POSIXSignalInputSignal.Configuration.identifier.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CEE50;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t POSIXSignalInputSignal.Configuration.includedSignals.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t POSIXSignalInputSignal.Configuration.includedSignals.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*POSIXSignalInputSignal.Configuration.includedSignals.modify())()
{
  return nullsub_1;
}

uint64_t POSIXSignalInputSignal.Configuration.init(includedSignals:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static POSIXSignalInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_251162738(*a1, *a2);
}

uint64_t POSIXSignalInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_2511696BC(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t POSIXSignalInputSignal.Configuration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511696BC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_2511C9D80();
}

uint64_t sub_2511A2FC0(uint64_t *a1, uint64_t *a2)
{
  return sub_251162738(*a1, *a2);
}

void sub_2511A2FCC(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002511CEE50;
  a1[2] = 0;
  a1[3] = 0;
}

uint64_t sub_2511A2FF0()
{
  uint64_t v1 = *v0;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511696BC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_2511C9D80();
}

uint64_t sub_2511A3048(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_2511696BC(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2511A3094()
{
  uint64_t v1 = *v0;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511696BC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_2511C9D80();
}

uint64_t POSIXSignalInputSignal.identifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t POSIXSignalInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2511A3154(uint64_t a1, void *a2)
{
  uint64_t v57 = sub_2511C9360();
  uint64_t v4 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  BOOL v56 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_2511C9390();
  uint64_t v6 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_2511C92A0();
  MEMORY[0x270FA5388](v53);
  char v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v46 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  char v50 = v61;
  unint64_t v51 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v49 = (void (**)(char *, uint64_t))(v4 + 8);
  int64_t v47 = (unint64_t)(v12 + 63) >> 6;
  BOOL v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v58 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  *(void *)&long long v17 = 67109120;
  long long v45 = v17;
  char v52 = v10;
  uint64_t v18 = v56;
  while (1)
  {
    if (v14)
    {
      unint64_t v29 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v30 = v29 | (v16 << 6);
      goto LABEL_28;
    }
    int64_t v31 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v31 >= v47) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v46 + 8 * v31);
    ++v16;
    if (!v32)
    {
      int64_t v16 = v31 + 1;
      if (v31 + 1 >= v47) {
        return swift_release();
      }
      unint64_t v32 = *(void *)(v46 + 8 * v16);
      if (!v32)
      {
        int64_t v16 = v31 + 2;
        if (v31 + 2 >= v47) {
          return swift_release();
        }
        unint64_t v32 = *(void *)(v46 + 8 * v16);
        if (!v32) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v14 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v16 << 6);
LABEL_28:
    unsigned int v39 = *(_DWORD *)(*(void *)(v58 + 48) + 4 * v30);
    uint64_t v40 = *(void *)(v59 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v40 + 40))(ObjectType, v40);
    uint64_t v42 = sub_2511C9280();
    os_log_type_t v43 = sub_2511C9770();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = v45;
      *(_DWORD *)(v44 + 4) = v39;
      _os_log_impl(&dword_25112A000, v42, v43, "Beginning observation for %d", (uint8_t *)v44, 8u);
      MEMORY[0x253397D40](v44, -1, -1);
    }

    (*v51)(v10, v53);
    BOOL v19 = (void (__cdecl *)(int))sub_2511C92B0();
    uint64_t v20 = signal(v39, v19);
    if (v20)
    {
      uint64_t v21 = (uint64_t)v20;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = a2[1];
      a2[1] = 0x8000000000000000;
      sub_2511AA038(v21, v39, isUniquelyReferenced_nonNull_native);
      a2[1] = aBlock[0];
LABEL_6:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    unint64_t v34 = sub_251167220(v39);
    if (v35)
    {
      unint64_t v36 = v34;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = a2[1];
      aBlock[0] = v38;
      a2[1] = 0x8000000000000000;
      if ((v37 & 1) == 0)
      {
        sub_25118865C();
        uint64_t v38 = aBlock[0];
      }
      sub_251168440(v36, v38);
      a2[1] = v38;
      goto LABEL_6;
    }
LABEL_7:
    sub_251131578(0, (unint64_t *)&qword_26B217FB0);
    uint64_t v23 = sub_2511C9810();
    swift_unknownObjectRetain();
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = *a2;
    *a2 = 0x8000000000000000;
    sub_2511A9F00(v23, v39, v24);
    *a2 = aBlock[0];
    swift_bridgeObjectRelease();
    swift_getObjectType();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v25;
    *(_DWORD *)(v26 + 24) = v39;
    v61[2] = sub_2511AB4EC;
    v61[3] = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    v61[0] = sub_251135784;
    v61[1] = &block_descriptor_10;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    int64_t v28 = v54;
    sub_2511345EC();
    sub_2511345F0();
    sub_2511C9820();
    _Block_release(v27);
    (*v49)(v18, v57);
    (*v48)(v28, v55);
    swift_release();
    swift_release();
    sub_2511C9850();
    uint64_t result = swift_unknownObjectRelease();
    char v10 = v52;
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v47) {
    return swift_release();
  }
  unint64_t v32 = *(void *)(v46 + 8 * v33);
  if (v32)
  {
    int64_t v16 = v33;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v16 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v16 >= v47) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v46 + 8 * v16);
    ++v33;
    if (v32) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2511A37DC(uint64_t a1, Swift::Int32 a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    POSIXSignalInputSignal.received(signal:)(a2);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall POSIXSignalInputSignal.received(signal:)(Swift::Int32 signal)
{
  uint64_t v2 = (os_unfair_lock_s *)v1[10];
  p_os_unfair_lock_opaque = (double *)&v2[4]._os_unfair_lock_opaque;
  uint64_t v4 = v2 + 10;
  uint64_t v5 = *v1;
  os_unfair_lock_lock(v2 + 10);
  sub_2511AA954(p_os_unfair_lock_opaque, &v13);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = v13;
  if (v13)
  {
    uint64_t v7 = v1[7];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = v6;
    uint64_t v12 = v1;
    uint64_t v9 = *(void (**)(uint64_t *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
    uint64_t v11 = sub_2511AB5DC(&qword_26B217C60, v10, (void (*)(uint64_t))type metadata accessor for POSIXSignalInputSignal);
    v9(&v13, &v12, v5, v11, ObjectType, v7);
    swift_bridgeObjectRelease();
  }
}

uint64_t POSIXSignalInputSignal.beginObservation(from:configurations:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v18 = MEMORY[0x263F8EE88];
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_2511A3B0C(v6);
    }
    a1 = swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = v7 + 4;
  uint64_t v9 = v7 + 10;
  os_unfair_lock_lock(v7 + 10);
  sub_2511AA998(v8, &v18);
  os_unfair_lock_unlock(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v18;
  uint64_t v11 = v2[7];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = v10;
  long long v17 = v2;
  uint64_t v13 = *(void (**)(uint64_t *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
  uint64_t v15 = sub_2511AB5DC(&qword_26B217C60, v14, (void (*)(uint64_t))type metadata accessor for POSIXSignalInputSignal);
  v13(&v18, &v17, v3, v15, ObjectType, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2511A3B0C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_2511A4C1C(&v13, *(unsigned int *)(*(void *)(v1 + 48) + 4 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_2511A3C68(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    int64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_2511A4D20(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

Swift::Void __swiftcall POSIXSignalInputSignal.stopObservation()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 80);
  p_os_unfair_lock_opaque = (unint64_t *)&v1[4]._os_unfair_lock_opaque;
  uint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_2511A3E4C(p_os_unfair_lock_opaque);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_2511A3E4C(unint64_t *a1)
{
  unint64_t v2 = sub_251154828(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  *a1 = v2;
  unint64_t v3 = a1[1];
  unint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v13 >= v8) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_21;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    uint64_t result = (uint64_t)signal(*(_DWORD *)(*(void *)(v3 + 48) + 4 * v12), *(void (__cdecl **)(int))(*(void *)(v3 + 56) + 8 * v12));
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_21:
    swift_release();
    unint64_t v16 = sub_251154944(MEMORY[0x263F8EE78]);
    uint64_t result = swift_bridgeObjectRelease();
    a1[1] = v16;
    return result;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

unint64_t sub_2511A3FD4@<X0>(double *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_2511C92A0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t result = MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)a1 + 16) && (unint64_t result = sub_251167220(a2), (v14 & 1) != 0))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v24 = a1[2];
    a1[2] = -0.0;
    sub_2511A95B0(a2, isUniquelyReferenced_nonNull_native, Current);
    a1[2] = v24;
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(a3 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v17 + 40))(ObjectType, v17);
    BOOL v19 = sub_2511C9280();
    os_log_type_t v20 = sub_2511C9770();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (_DWORD *)swift_slowAlloc();
      uint64_t v23 = v4;
      uint64_t v22 = v21;
      *uint64_t v21 = 67109376;
      LODWORD(v24) = a2;
      sub_2511C98A0();
      *((_WORD *)v22 + 4) = 2048;
      double v24 = Current;
      sub_2511C98A0();
      _os_log_impl(&dword_25112A000, v19, v20, "Caught signal %d at %f", (uint8_t *)v22, 0x12u);
      MEMORY[0x253397D40](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *a4 = *((void *)a1 + 2);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a4 = 0;
  }
  return result;
}

void *POSIXSignalInputSignal.init(context:observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v5 = sub_2511C97B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2511C97A0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2511C9390();
  MEMORY[0x270FA5388](v10 - 8);
  v4[2] = 0xD000000000000016;
  void v4[3] = 0x80000002511CEE50;
  v4[4] = 0;
  v4[5] = 0;
  uint64_t v11 = MEMORY[0x263F8EE78];
  unint64_t v12 = sub_251154828(MEMORY[0x263F8EE78]);
  unint64_t v13 = sub_251154944(v11);
  sub_2511AABF8();
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 40) = 0;
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = MEMORY[0x263F8EE80];
  v4[10] = v14;
  sub_251131578(0, (unint64_t *)&qword_26B216800);
  sub_2511C9380();
  uint64_t v23 = v11;
  sub_2511AB5DC((unint64_t *)&qword_26B217F90, 255, MEMORY[0x263F8F0F8]);
  sub_2511AAC58();
  sub_2511AB5DC((unint64_t *)&qword_26B217F40, 255, (void (*)(uint64_t))sub_2511AAC58);
  sub_2511C9900();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F130], v5);
  v4[11] = sub_2511C97D0();
  uint64_t v15 = v20;
  v4[8] = v19;
  v4[9] = v15;
  uint64_t v16 = v22;
  void v4[6] = v21;
  v4[7] = v16;
  return v4;
}

uint64_t POSIXSignalInputSignal.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return v0;
}

uint64_t POSIXSignalInputSignal.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2511A45DC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2511A4624()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2511A4650(uint64_t a1, uint64_t a2)
{
  return POSIXSignalInputSignal.beginObservation(from:configurations:)(a1, a2);
}

void sub_2511A4674()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 80);
  p_os_unfair_lock_opaque = (unint64_t *)&v1[4]._os_unfair_lock_opaque;
  uint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_2511A3E4C(p_os_unfair_lock_opaque);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_2511A46DC()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 40))
  {
    uint64_t v2 = *(void *)(v1 + 32);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2511A472C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_2511C9D40();
  __swift_project_boxed_opaque_existential_1((void *)a2, *(void *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_2511C9450();
  uint64_t v7 = sub_2511C9D80();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      sub_251169894(*(void *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      uint64_t v11 = v17;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      LOBYTE(v11) = sub_251175254(a2, v11);
      sub_2511698F0((uint64_t)v16);
      if (v11) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_2511698F0(a2);
    sub_251169894(*(void *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251169894(a2, (uint64_t)v16);
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2511A6978((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_2511A48F0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2511C9260();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2511AB5DC(&qword_26B218390, 255, MEMORY[0x263F07908]);
  swift_bridgeObjectRetain();
  int64_t v33 = a2;
  uint64_t v11 = sub_2511C9440();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2511AB5DC(&qword_26B218238, 255, MEMORY[0x263F07908]);
      char v21 = sub_2511C9470();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2511A6B34((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2511A4C1C(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x253397570](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2511A6E04(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2511A4D20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_2511C9D40();
  swift_bridgeObjectRetain();
  sub_2511C94F0();
  uint64_t v8 = sub_2511C9D80();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2511C9CA0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2511C9CA0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2511A6F2C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2511A4ED0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2511C9180();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2511AB5DC((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
  swift_bridgeObjectRetain();
  int64_t v33 = a2;
  uint64_t v11 = sub_2511C9440();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2511AB5DC(qword_269B22110, 255, MEMORY[0x263F06EA8]);
      char v21 = sub_2511C9470();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2511A70C8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2511A51FC()
{
  uint64_t v1 = *v0;
  sub_2511AB6BC(0, &qword_26B217FE0, (uint64_t (*)(void))sub_25118B794, (uint64_t)&type metadata for Orchestrator.AnyConfiguration, MEMORY[0x263F8DBD8]);
  uint64_t v2 = sub_2511C9930();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v31 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v30 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v7 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v14 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v15 = v14 | (v9 << 6);
      }
      else
      {
        int64_t v16 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = v31[v16];
        ++v9;
        if (!v17)
        {
          int64_t v9 = v16 + 1;
          if (v16 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v17 = v31[v9];
          if (!v17)
          {
            int64_t v9 = v16 + 2;
            if (v16 + 2 >= v30) {
              goto LABEL_33;
            }
            unint64_t v17 = v31[v9];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v30)
              {
LABEL_33:
                swift_release();
                uint64_t v29 = 1 << *(unsigned char *)(v1 + 32);
                if (v29 > 63) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v17 = v31[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v9 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v9 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v31[v9];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v9 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
      }
      uint64_t v19 = *(void *)(v1 + 48) + 40 * v15;
      uint64_t v20 = *(void *)(v19 + 32);
      long long v21 = *(_OWORD *)(v19 + 16);
      long long v32 = *(_OWORD *)v19;
      long long v33 = v21;
      uint64_t v34 = v20;
      sub_2511C9D40();
      __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
      sub_2511C9450();
      uint64_t result = sub_2511C9D80();
      uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v7 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v7 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v7 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t v11 = *(void *)(v3 + 48) + 40 * v10;
      long long v12 = v32;
      long long v13 = v33;
      *(void *)(v11 + 32) = v34;
      *(_OWORD *)uint64_t v11 = v12;
      *(_OWORD *)(v11 + 16) = v13;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_2511A5558()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_2511C9260();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  long long v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2511AB544();
  uint64_t v5 = sub_2511C9930();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    unint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_2511AB5DC(&qword_26B218390, 255, MEMORY[0x263F07908]);
      uint64_t result = sub_2511C9440();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2511A5948()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2511AB4F8(0, &qword_269B22708);
  uint64_t result = sub_2511C9930();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = MEMORY[0x253397570](*(void *)(v4 + 40), v18, 4);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2511A5BE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2511AB4F8(0, &qword_26B217FE8);
  uint64_t v3 = sub_2511C9930();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_2511C9D40();
      sub_2511C94F0();
      uint64_t result = sub_2511C9D80();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2511A5ED8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2511AB6BC(0, (unint64_t *)&qword_26B218900, (uint64_t (*)(void))sub_251132188, (uint64_t)&type metadata for InputSignalIdentifier, MEMORY[0x263F8DBD8]);
  uint64_t v3 = sub_2511C9930();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v23 = v19[2];
      uint64_t v22 = v19[3];
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_2511C9D80();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      *unint64_t v12 = v20;
      v12[1] = v21;
      v12[2] = v23;
      uint64_t v12[3] = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2511A6228()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_2511C9180();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  long long v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2511AB624();
  uint64_t v5 = sub_2511C9930();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    unint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_2511AB5DC((unint64_t *)&unk_269B21C40, 255, MEMORY[0x263F06EA8]);
      uint64_t result = sub_2511C9440();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2511A6618()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2511AB6BC(0, (unint64_t *)&unk_269B22710, (uint64_t (*)(void))sub_2511453CC, (uint64_t)&type metadata for WorkPlanIdentifier, MEMORY[0x263F8DBD8]);
  uint64_t v3 = sub_2511C9930();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 24 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      sub_2511C9D40();
      swift_bridgeObjectRetain();
      sub_2511C94F0();
      swift_bridgeObjectRelease();
      sub_2511C9D50();
      uint64_t result = sub_2511C9D80();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 24 * v11);
      *unint64_t v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2511A6978(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2511A51FC();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_2511A7398();
      goto LABEL_12;
    }
    sub_2511A7FB0();
  }
  uint64_t v9 = *v3;
  sub_2511C9D40();
  __swift_project_boxed_opaque_existential_1((void *)v6, *(void *)(v6 + 24));
  sub_2511C9450();
  uint64_t result = sub_2511C9D80();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_251169894(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v20);
      uint64_t v12 = v21;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      LOBYTE(v12) = sub_251175254(v6, v12);
      uint64_t result = sub_2511698F0((uint64_t)v20);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)v6;
  long long v16 = *(_OWORD *)(v6 + 16);
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  *(_OWORD *)uint64_t v14 = v15;
  *(_OWORD *)(v14 + 16) = v16;
  uint64_t v17 = *(void *)(v13 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (!v18)
  {
    *(void *)(v13 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2511C9CC0();
  __break(1u);
  return result;
}

uint64_t sub_2511A6B34(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_2511C9260();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2511A5558();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2511A7B08(MEMORY[0x263F07908], (void (*)(void))sub_2511AB544);
      goto LABEL_12;
    }
    sub_2511A82D0();
  }
  uint64_t v12 = *v3;
  sub_2511AB5DC(&qword_26B218390, 255, MEMORY[0x263F07908]);
  uint64_t v13 = sub_2511C9440();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2511AB5DC(&qword_26B218238, 255, MEMORY[0x263F07908]);
      char v21 = sub_2511C9470();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2511C9CC0();
  __break(1u);
  return result;
}

uint64_t sub_2511A6E04(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2511A5948();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2511A759C();
      goto LABEL_14;
    }
    sub_2511A8680();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x253397570](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_2511C9CC0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2511A6F2C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2511A5BE4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2511A7748();
      goto LABEL_22;
    }
    sub_2511A88FC();
  }
  uint64_t v11 = *v4;
  sub_2511C9D40();
  sub_2511C94F0();
  uint64_t result = sub_2511C9D80();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_2511C9CA0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_2511C9CC0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_2511C9CA0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}